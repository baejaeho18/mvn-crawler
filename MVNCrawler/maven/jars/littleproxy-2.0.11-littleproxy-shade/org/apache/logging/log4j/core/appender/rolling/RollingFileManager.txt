Compiled from "RollingFileManager.java"
public class org.apache.logging.log4j.core.appender.rolling.RollingFileManager extends org.apache.logging.log4j.core.appender.FileManager {
  private static org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory factory;

  private static final int MAX_TRIES;

  private static final int MIN_DURATION;

  private static final java.nio.file.attribute.FileTime EPOCH;

  protected long size;

  private long initialTime;

  private volatile org.apache.logging.log4j.core.appender.rolling.PatternProcessor patternProcessor;

  private final java.util.concurrent.Semaphore semaphore;

  private final org.apache.logging.log4j.core.util.Log4jThreadFactory threadFactory;

  private volatile org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy triggeringPolicy;

  private volatile org.apache.logging.log4j.core.appender.rolling.RolloverStrategy rolloverStrategy;

  private volatile boolean renameEmptyFiles;

  private volatile boolean initialized;

  private volatile java.lang.String fileName;

  private final boolean directWrite;

  private final java.util.concurrent.CopyOnWriteArrayList<org.apache.logging.log4j.core.appender.rolling.RolloverListener> rolloverListeners;

  private final java.util.concurrent.ExecutorService asyncExecutor;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.apache.logging.log4j.core.appender.rolling.RollingFileManager, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy> triggeringPolicyUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.apache.logging.log4j.core.appender.rolling.RollingFileManager, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy> rolloverStrategyUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.apache.logging.log4j.core.appender.rolling.RollingFileManager, org.apache.logging.log4j.core.appender.rolling.PatternProcessor> patternProcessorUpdater;

  protected org.apache.logging.log4j.core.appender.rolling.RollingFileManager(java.lang.String, java.lang.String, java.io.OutputStream, boolean, long, long, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: lload         5
       8: lload         7
      10: aload         9
      12: aload         10
      14: aload         11
      16: aload         12
      18: iload         14
      20: getstatic     #5                  // Field org/apache/logging/log4j/core/util/Constants.ENCODER_BYTE_BUFFER_SIZE:I
      23: newarray       byte
      25: invokestatic  #6                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      28: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/OutputStream;ZJJLorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      31: return

  protected org.apache.logging.log4j.core.appender.rolling.RollingFileManager(java.lang.String, java.lang.String, java.io.OutputStream, boolean, long, long, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          10
       9: aload_2
      10: aload_3
      11: iload         4
      13: iconst_0
      14: aload         11
      16: aload         12
      18: iload         13
      20: aload         14
      22: invokespecial #8                  // Method org/apache/logging/log4j/core/appender/FileManager."<init>":(Ljava/lang/String;Ljava/io/OutputStream;ZZLjava/lang/String;Lorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      25: aload_0
      26: new           #9                  // class java/util/concurrent/Semaphore
      29: dup
      30: iconst_1
      31: invokespecial #10                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      34: putfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      37: aload_0
      38: ldc           #11                 // String RollingFileManager
      40: invokestatic  #12                 // Method org/apache/logging/log4j/core/util/Log4jThreadFactory.createThreadFactory:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      43: putfield      #13                 // Field threadFactory:Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      46: aload_0
      47: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      50: dup
      51: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      54: putfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      57: aload_0
      58: new           #17                 // class java/util/concurrent/ThreadPoolExecutor
      61: dup
      62: iconst_0
      63: ldc           #19                 // int 2147483647
      65: lconst_0
      66: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      69: new           #21                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$EmptyQueue
      72: dup
      73: invokespecial #22                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$EmptyQueue."<init>":()V
      76: aload_0
      77: getfield      #13                 // Field threadFactory:Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      80: invokespecial #23                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      83: putfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
      86: aload_0
      87: lload         5
      89: putfield      #25                 // Field size:J
      92: aload_0
      93: lload         7
      95: putfield      #26                 // Field initialTime:J
      98: aload_0
      99: aload         9
     101: putfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
     104: aload_0
     105: aload         10
     107: putfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     110: aload_0
     111: new           #29                 // class org/apache/logging/log4j/core/appender/rolling/PatternProcessor
     114: dup
     115: aload_2
     116: invokespecial #30                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor."<init>":(Ljava/lang/String;)V
     119: putfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
     122: aload_0
     123: getfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
     126: lload         7
     128: invokevirtual #32                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor.setPrevFileTime:(J)V
     131: aload_0
     132: aload_1
     133: putfield      #33                 // Field fileName:Ljava/lang/String;
     136: aload_0
     137: aload         10
     139: instanceof    #34                 // class org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy
     142: putfield      #35                 // Field directWrite:Z
     145: return

  protected org.apache.logging.log4j.core.appender.rolling.RollingFileManager(org.apache.logging.log4j.core.LoggerContext, java.lang.String, java.lang.String, java.io.OutputStream, boolean, boolean, long, long, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ifnull        10
       6: aload_2
       7: goto          11
      10: aload_3
      11: aload         4
      13: iload         5
      15: iconst_0
      16: iload         6
      18: aload         13
      20: aload         14
      22: iload         15
      24: aload         16
      26: invokespecial #36                 // Method org/apache/logging/log4j/core/appender/FileManager."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/io/OutputStream;ZZZLjava/lang/String;Lorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      29: aload_0
      30: new           #9                  // class java/util/concurrent/Semaphore
      33: dup
      34: iconst_1
      35: invokespecial #10                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      38: putfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      41: aload_0
      42: ldc           #11                 // String RollingFileManager
      44: invokestatic  #12                 // Method org/apache/logging/log4j/core/util/Log4jThreadFactory.createThreadFactory:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      47: putfield      #13                 // Field threadFactory:Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      50: aload_0
      51: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      54: dup
      55: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      58: putfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      61: aload_0
      62: new           #17                 // class java/util/concurrent/ThreadPoolExecutor
      65: dup
      66: iconst_0
      67: ldc           #19                 // int 2147483647
      69: lconst_0
      70: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      73: new           #21                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$EmptyQueue
      76: dup
      77: invokespecial #22                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$EmptyQueue."<init>":()V
      80: aload_0
      81: getfield      #13                 // Field threadFactory:Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      84: invokespecial #23                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      87: putfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
      90: aload_0
      91: lload         7
      93: putfield      #25                 // Field size:J
      96: aload_0
      97: lload         9
      99: putfield      #26                 // Field initialTime:J
     102: aload_0
     103: aload         11
     105: putfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
     108: aload_0
     109: aload         12
     111: putfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     114: aload_0
     115: new           #29                 // class org/apache/logging/log4j/core/appender/rolling/PatternProcessor
     118: dup
     119: aload_3
     120: invokespecial #30                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor."<init>":(Ljava/lang/String;)V
     123: putfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
     126: aload_0
     127: getfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
     130: lload         9
     132: invokevirtual #32                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor.setPrevFileTime:(J)V
     135: aload_0
     136: aload_2
     137: putfield      #33                 // Field fileName:Ljava/lang/String;
     140: aload_0
     141: aload         12
     143: instanceof    #34                 // class org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy
     146: putfield      #35                 // Field directWrite:Z
     149: return

  protected org.apache.logging.log4j.core.appender.rolling.RollingFileManager(org.apache.logging.log4j.core.LoggerContext, java.lang.String, java.lang.String, java.io.OutputStream, boolean, boolean, long, long, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, java.lang.String, java.lang.String, java.lang.String, boolean, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ifnull        10
       6: aload_2
       7: goto          11
      10: aload_3
      11: aload         4
      13: iload         5
      15: iconst_0
      16: iload         6
      18: aload         13
      20: aload         14
      22: aload         15
      24: aload         16
      26: aload         17
      28: iload         18
      30: aload         19
      32: invokespecial #37                 // Method org/apache/logging/log4j/core/appender/FileManager."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/io/OutputStream;ZZZLjava/lang/String;Lorg/apache/logging/log4j/core/Layout;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/nio/ByteBuffer;)V
      35: aload_0
      36: new           #9                  // class java/util/concurrent/Semaphore
      39: dup
      40: iconst_1
      41: invokespecial #10                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      44: putfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      47: aload_0
      48: ldc           #11                 // String RollingFileManager
      50: invokestatic  #12                 // Method org/apache/logging/log4j/core/util/Log4jThreadFactory.createThreadFactory:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      53: putfield      #13                 // Field threadFactory:Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      56: aload_0
      57: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      60: dup
      61: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      64: putfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      67: aload_0
      68: new           #17                 // class java/util/concurrent/ThreadPoolExecutor
      71: dup
      72: iconst_0
      73: ldc           #19                 // int 2147483647
      75: lconst_0
      76: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      79: new           #21                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$EmptyQueue
      82: dup
      83: invokespecial #22                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$EmptyQueue."<init>":()V
      86: aload_0
      87: getfield      #13                 // Field threadFactory:Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      90: invokespecial #23                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      93: putfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
      96: aload_0
      97: lload         7
      99: putfield      #25                 // Field size:J
     102: aload_0
     103: lload         9
     105: putfield      #26                 // Field initialTime:J
     108: aload_0
     109: new           #29                 // class org/apache/logging/log4j/core/appender/rolling/PatternProcessor
     112: dup
     113: aload_3
     114: invokespecial #30                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor."<init>":(Ljava/lang/String;)V
     117: putfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
     120: aload_0
     121: getfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
     124: lload         9
     126: invokevirtual #32                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor.setPrevFileTime:(J)V
     129: aload_0
     130: aload         11
     132: putfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
     135: aload_0
     136: aload         12
     138: putfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     141: aload_0
     142: aload_2
     143: putfield      #33                 // Field fileName:Ljava/lang/String;
     146: aload_0
     147: aload         12
     149: instanceof    #38                 // class org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy
     152: putfield      #35                 // Field directWrite:Z
     155: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #39                 // Field initialized:Z
       4: ifne          156
       7: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: ldc           #40                 // String Initializing triggering policy {}
      12: aload_0
      13: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      16: invokeinterface #41,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: iconst_1
      23: putfield      #39                 // Field initialized:Z
      26: aload_0
      27: getfield      #35                 // Field directWrite:Z
      30: ifeq          75
      33: new           #42                 // class java/io/File
      36: dup
      37: aload_0
      38: invokevirtual #43                 // Method getFileName:()Ljava/lang/String;
      41: invokespecial #44                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      44: astore_1
      45: aload_1
      46: invokevirtual #45                 // Method java/io/File.exists:()Z
      49: ifeq          63
      52: aload_0
      53: aload_1
      54: invokevirtual #46                 // Method java/io/File.length:()J
      57: putfield      #25                 // Field size:J
      60: goto          75
      63: aload_0
      64: getfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
      67: checkcast     #38                 // class org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy
      70: invokeinterface #47,  1           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy.clearCurrentFileName:()V
      75: aload_0
      76: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      79: aload_0
      80: invokeinterface #48,  2           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/TriggeringPolicy.initialize:(Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;)V
      85: aload_0
      86: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      89: instanceof    #49                 // class org/apache/logging/log4j/core/LifeCycle
      92: ifeq          107
      95: aload_0
      96: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      99: checkcast     #49                 // class org/apache/logging/log4j/core/LifeCycle
     102: invokeinterface #50,  1           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle.start:()V
     107: aload_0
     108: getfield      #35                 // Field directWrite:Z
     111: ifeq          156
     114: new           #42                 // class java/io/File
     117: dup
     118: aload_0
     119: invokevirtual #43                 // Method getFileName:()Ljava/lang/String;
     122: invokespecial #44                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     125: astore_1
     126: aload_1
     127: invokevirtual #45                 // Method java/io/File.exists:()Z
     130: ifeq          144
     133: aload_0
     134: aload_1
     135: invokevirtual #46                 // Method java/io/File.length:()J
     138: putfield      #25                 // Field size:J
     141: goto          156
     144: aload_0
     145: getfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     148: checkcast     #38                 // class org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy
     151: invokeinterface #47,  1           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy.clearCurrentFileName:()V
     156: return

  public static org.apache.logging.log4j.core.appender.rolling.RollingFileManager getFileManager(java.lang.String, java.lang.String, boolean, boolean, org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy, org.apache.logging.log4j.core.appender.rolling.RolloverStrategy, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, int, boolean, boolean, java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload         5
       2: instanceof    #34                 // class org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy
       5: ifeq          24
       8: aload_0
       9: ifnull        24
      12: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      15: ldc           #51                 // String The fileName attribute must not be specified with the DirectWriteRolloverStrategy
      17: invokeinterface #52,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      22: aconst_null
      23: areturn
      24: aload_0
      25: ifnonnull     32
      28: aload_1
      29: goto          33
      32: aload_0
      33: astore        15
      35: ldc           #53                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager
      37: aload         15
      39: new           #54                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$FactoryData
      42: dup
      43: aload_0
      44: aload_1
      45: iload_2
      46: iload_3
      47: aload         4
      49: aload         5
      51: aload         6
      53: aload         7
      55: iload         8
      57: iload         9
      59: iload         10
      61: aload         11
      63: aload         12
      65: aload         13
      67: aload         14
      69: invokespecial #55                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$FactoryData."<init>":(Ljava/lang/String;Ljava/lang/String;ZZLorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;IZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)V
      72: getstatic     #56                 // Field factory:Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager$RollingFileManagerFactory;
      75: invokestatic  #57                 // Method getManager:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/logging/log4j/core/appender/ManagerFactory;)Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      78: invokestatic  #58                 // Method narrow:(Ljava/lang/Class;Lorg/apache/logging/log4j/core/appender/AbstractManager;)Lorg/apache/logging/log4j/core/appender/AbstractManager;
      81: checkcast     #53                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager
      84: areturn

  public void addRolloverListener(org.apache.logging.log4j.core.appender.rolling.RolloverListener);
    Code:
       0: aload_0
       1: getfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #59                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void removeRolloverListener(org.apache.logging.log4j.core.appender.rolling.RolloverListener);
    Code:
       0: aload_0
       1: getfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #60                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.lang.String getFileName();
    Code:
       0: aload_0
       1: getfield      #35                 // Field directWrite:Z
       4: ifeq          24
       7: aload_0
       8: aload_0
       9: getfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
      12: checkcast     #38                 // class org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy
      15: aload_0
      16: invokeinterface #61,  2           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy.getCurrentFileName:(Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;)Ljava/lang/String;
      21: putfield      #33                 // Field fileName:Ljava/lang/String;
      24: aload_0
      25: getfield      #33                 // Field fileName:Ljava/lang/String;
      28: areturn

  protected void createParentDir(java.io.File);
    Code:
       0: aload_0
       1: getfield      #35                 // Field directWrite:Z
       4: ifeq          15
       7: aload_1
       8: invokevirtual #62                 // Method java/io/File.getParentFile:()Ljava/io/File;
      11: invokevirtual #63                 // Method java/io/File.mkdirs:()Z
      14: pop
      15: return

  public boolean isDirectWrite();
    Code:
       0: aload_0
       1: getfield      #35                 // Field directWrite:Z
       4: ireturn

  public org.apache.logging.log4j.core.appender.rolling.FileExtension getFileExtension();
    Code:
       0: aload_0
       1: getfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
       4: invokevirtual #64                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor.getFileExtension:()Lorg/apache/logging/log4j/core/appender/rolling/FileExtension;
       7: areturn

  protected synchronized void write(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #65                 // Method org/apache/logging/log4j/core/appender/FileManager.write:([BIIZ)V
       9: return

  protected synchronized void writeToDestination(byte[], int, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field size:J
       5: iload_3
       6: i2l
       7: ladd
       8: putfield      #25                 // Field size:J
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokespecial #66                 // Method org/apache/logging/log4j/core/appender/FileManager.writeToDestination:([BII)V
      18: return

  public boolean isRenameEmptyFiles();
    Code:
       0: aload_0
       1: getfield      #67                 // Field renameEmptyFiles:Z
       4: ireturn

  public void setRenameEmptyFiles(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field renameEmptyFiles:Z
       5: return

  public long getFileSize();
    Code:
       0: aload_0
       1: getfield      #25                 // Field size:J
       4: aload_0
       5: getfield      #68                 // Field byteBuffer:Ljava/nio/ByteBuffer;
       8: invokevirtual #69                 // Method java/nio/ByteBuffer.position:()I
      11: i2l
      12: ladd
      13: lreturn

  public long getFileTime();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initialTime:J
       4: lreturn

  public synchronized void checkRollover(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/TriggeringPolicy.isTriggeringEvent:(Lorg/apache/logging/log4j/core/LogEvent;)Z
      10: ifeq          17
      13: aload_0
      14: invokevirtual #71                 // Method rollover:()V
      17: return

  public boolean releaseSub(long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #72                 // String Shutting down RollingFileManager {}
       5: aload_0
       6: invokevirtual #73                 // Method getName:()Ljava/lang/String;
       9: invokeinterface #41,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      14: iconst_1
      15: istore        4
      17: aload_0
      18: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      21: instanceof    #74                 // class org/apache/logging/log4j/core/LifeCycle2
      24: ifeq          49
      27: iload         4
      29: aload_0
      30: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      33: checkcast     #74                 // class org/apache/logging/log4j/core/LifeCycle2
      36: lload_1
      37: aload_3
      38: invokeinterface #75,  4           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle2.stop:(JLjava/util/concurrent/TimeUnit;)Z
      43: iand
      44: istore        4
      46: goto          77
      49: aload_0
      50: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      53: instanceof    #49                 // class org/apache/logging/log4j/core/LifeCycle
      56: ifeq          77
      59: aload_0
      60: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      63: checkcast     #49                 // class org/apache/logging/log4j/core/LifeCycle
      66: invokeinterface #76,  1           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle.stop:()V
      71: iload         4
      73: iconst_1
      74: iand
      75: istore        4
      77: aload_0
      78: lload_1
      79: aload_3
      80: invokespecial #77                 // Method org/apache/logging/log4j/core/appender/FileManager.releaseSub:(JLjava/util/concurrent/TimeUnit;)Z
      83: ifeq          95
      86: iload         4
      88: ifeq          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore        5
      98: aload_0
      99: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     102: invokeinterface #78,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
     107: aload_3
     108: lload_1
     109: invokevirtual #79                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     112: lstore        6
     114: ldc2_w        #80                 // long 100l
     117: lload         6
     119: lcmp
     120: ifge          128
     123: lload         6
     125: goto          131
     128: ldc2_w        #80                 // long 100l
     131: lstore        8
     133: iconst_1
     134: istore        10
     136: iload         10
     138: iconst_3
     139: if_icmpgt     179
     142: aload_0
     143: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     146: invokeinterface #82,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
     151: ifne          179
     154: aload_0
     155: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     158: lload         8
     160: iload         10
     162: i2l
     163: lmul
     164: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     167: invokeinterface #83,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     172: pop
     173: iinc          10, 1
     176: goto          136
     179: aload_0
     180: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     183: invokeinterface #82,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
     188: ifeq          204
     191: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     194: ldc           #84                 // String All asynchronous threads have terminated
     196: invokeinterface #85,  2           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;)V
     201: goto          276
     204: aload_0
     205: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     208: invokeinterface #86,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     213: pop
     214: aload_0
     215: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     218: lload_1
     219: aload_3
     220: invokeinterface #83,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     225: pop
     226: aload_0
     227: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     230: invokeinterface #82,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
     235: ifeq          251
     238: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     241: ldc           #84                 // String All asynchronous threads have terminated
     243: invokeinterface #85,  2           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;)V
     248: goto          261
     251: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     254: ldc           #87                 // String RollingFileManager shutting down but some asynchronous services may not have completed
     256: invokeinterface #85,  2           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;)V
     261: goto          276
     264: astore        10
     266: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     269: ldc           #89                 // String RollingFileManager stopped but some asynchronous services may not have completed.
     271: invokeinterface #90,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     276: goto          346
     279: astore        6
     281: aload_0
     282: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     285: invokeinterface #86,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     290: pop
     291: aload_0
     292: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     295: lload_1
     296: aload_3
     297: invokeinterface #83,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     302: pop
     303: aload_0
     304: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     307: invokeinterface #82,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
     312: ifeq          325
     315: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     318: ldc           #84                 // String All asynchronous threads have terminated
     320: invokeinterface #85,  2           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;)V
     325: goto          340
     328: astore        7
     330: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     333: ldc           #89                 // String RollingFileManager stopped but some asynchronous services may not have completed.
     335: invokeinterface #90,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     340: invokestatic  #91                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     343: invokevirtual #92                 // Method java/lang/Thread.interrupt:()V
     346: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     349: ldc           #93                 // String RollingFileManager shutdown completed with status {}
     351: iload         5
     353: invokestatic  #94                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     356: invokeinterface #41,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     361: iload         5
     363: ireturn
    Exception table:
       from    to  target type
         214   261   264   Class java/lang/InterruptedException
         107   276   279   Class java/lang/InterruptedException
         291   325   328   Class java/lang/InterruptedException

  public synchronized void rollover(java.util.Date, java.util.Date);
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #95                 // String Rollover PrevFileTime: {}, PrevRollTime: {}
       5: aload_1
       6: invokevirtual #96                 // Method java/util/Date.getTime:()J
       9: invokestatic  #97                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: aload_2
      13: invokevirtual #96                 // Method java/util/Date.getTime:()J
      16: invokestatic  #97                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokeinterface #98,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: aload_0
      25: invokevirtual #99                 // Method getPatternProcessor:()Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
      28: aload_1
      29: invokevirtual #96                 // Method java/util/Date.getTime:()J
      32: invokevirtual #32                 // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor.setPrevFileTime:(J)V
      35: aload_0
      36: invokevirtual #99                 // Method getPatternProcessor:()Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
      39: aload_2
      40: invokevirtual #96                 // Method java/util/Date.getTime:()J
      43: invokevirtual #100                // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor.setCurrentFileTime:(J)V
      46: aload_0
      47: invokevirtual #71                 // Method rollover:()V
      50: return

  public synchronized void rollover();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method hasOutputStream:()Z
       4: ifne          22
       7: aload_0
       8: invokevirtual #102                // Method isCreateOnDemand:()Z
      11: ifne          22
      14: aload_0
      15: invokevirtual #103                // Method isDirectWrite:()Z
      18: ifne          22
      21: return
      22: aload_0
      23: getfield      #33                 // Field fileName:Ljava/lang/String;
      26: astore_1
      27: aload_0
      28: getfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      31: invokevirtual #104                // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
      34: ifle          109
      37: aload_0
      38: getfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      41: invokevirtual #105                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      44: astore_2
      45: aload_2
      46: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          109
      54: aload_2
      55: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #108                // class org/apache/logging/log4j/core/appender/rolling/RolloverListener
      63: astore_3
      64: aload_3
      65: aload_1
      66: invokeinterface #109,  2          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverListener.rolloverTriggered:(Ljava/lang/String;)V
      71: goto          106
      74: astore        4
      76: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      79: ldc           #111                // String Rollover Listener {} failed with {}: {}
      81: aload_3
      82: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      85: invokevirtual #113                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      88: aload         4
      90: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      93: invokevirtual #114                // Method java/lang/Class.getName:()Ljava/lang/String;
      96: aload         4
      98: invokevirtual #115                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     101: invokeinterface #116,  5          // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     106: goto          45
     109: invokestatic  #117                // Method java/lang/Thread.interrupted:()Z
     112: istore_2
     113: iload_2
     114: ifeq          127
     117: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     120: ldc           #118                // String RollingFileManager cleared thread interrupted state, continue to rollover
     122: invokeinterface #90,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     127: aload_0
     128: aload_0
     129: getfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     132: invokespecial #119                // Method rollover:(Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;)Z
     135: ifeq          165
     138: aload_0
     139: lconst_0
     140: putfield      #25                 // Field size:J
     143: aload_0
     144: invokestatic  #120                // Method java/lang/System.currentTimeMillis:()J
     147: putfield      #26                 // Field initialTime:J
     150: aload_0
     151: invokevirtual #121                // Method createFileAfterRollover:()V
     154: goto          165
     157: astore_3
     158: aload_0
     159: ldc           #123                // String Failed to create file after rollover
     161: aload_3
     162: invokevirtual #124                // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     165: iload_2
     166: ifeq          193
     169: invokestatic  #91                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     172: invokevirtual #92                 // Method java/lang/Thread.interrupt:()V
     175: goto          193
     178: astore        5
     180: iload_2
     181: ifeq          190
     184: invokestatic  #91                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     187: invokevirtual #92                 // Method java/lang/Thread.interrupt:()V
     190: aload         5
     192: athrow
     193: aload_0
     194: getfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
     197: invokevirtual #104                // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
     200: ifle          278
     203: aload_0
     204: getfield      #16                 // Field rolloverListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
     207: invokevirtual #105                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
     210: astore_3
     211: aload_3
     212: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     217: ifeq          278
     220: aload_3
     221: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     226: checkcast     #108                // class org/apache/logging/log4j/core/appender/rolling/RolloverListener
     229: astore        4
     231: aload         4
     233: aload_1
     234: invokeinterface #125,  2          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverListener.rolloverComplete:(Ljava/lang/String;)V
     239: goto          275
     242: astore        5
     244: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     247: ldc           #111                // String Rollover Listener {} failed with {}: {}
     249: aload         4
     251: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     254: invokevirtual #113                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     257: aload         5
     259: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     262: invokevirtual #114                // Method java/lang/Class.getName:()Ljava/lang/String;
     265: aload         5
     267: invokevirtual #115                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     270: invokeinterface #116,  5          // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     275: goto          211
     278: return
    Exception table:
       from    to  target type
          64    71    74   Class java/lang/Exception
         138   154   157   Class java/io/IOException
         113   165   178   any
         178   180   178   any
         231   239   242   Class java/lang/Exception

  protected void createFileAfterRollover() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #126                // Method createOutputStream:()Ljava/io/OutputStream;
       5: invokevirtual #127                // Method setOutputStream:(Ljava/io/OutputStream;)V
       8: return

  public org.apache.logging.log4j.core.appender.rolling.PatternProcessor getPatternProcessor();
    Code:
       0: aload_0
       1: getfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
       4: areturn

  public void setTriggeringPolicy(org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #48,  2           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/TriggeringPolicy.initialize:(Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;)V
       7: aload_0
       8: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iinc          3, 1
      20: getstatic     #128                // Field triggeringPolicyUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: aload_0
      24: aload_0
      25: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      28: aload_1
      29: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      32: dup
      33: istore        4
      35: ifne          43
      38: iload_3
      39: iconst_3
      40: if_icmplt     17
      43: iload         4
      45: ifeq          83
      48: aload_1
      49: instanceof    #49                 // class org/apache/logging/log4j/core/LifeCycle
      52: ifeq          64
      55: aload_1
      56: checkcast     #49                 // class org/apache/logging/log4j/core/LifeCycle
      59: invokeinterface #50,  1           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle.start:()V
      64: aload_2
      65: instanceof    #49                 // class org/apache/logging/log4j/core/LifeCycle
      68: ifeq          99
      71: aload_2
      72: checkcast     #49                 // class org/apache/logging/log4j/core/LifeCycle
      75: invokeinterface #76,  1           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle.stop:()V
      80: goto          99
      83: aload_1
      84: instanceof    #49                 // class org/apache/logging/log4j/core/LifeCycle
      87: ifeq          99
      90: aload_1
      91: checkcast     #49                 // class org/apache/logging/log4j/core/LifeCycle
      94: invokeinterface #76,  1           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle.stop:()V
      99: return

  public void setRolloverStrategy(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy);
    Code:
       0: getstatic     #130                // Field rolloverStrategyUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_0
       5: getfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
       8: aload_1
       9: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: pop
      13: return

  public void setPatternProcessor(org.apache.logging.log4j.core.appender.rolling.PatternProcessor);
    Code:
       0: getstatic     #131                // Field patternProcessorUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_0
       5: getfield      #31                 // Field patternProcessor:Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
       8: aload_1
       9: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: pop
      13: return

  public <T extends org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy> T getTriggeringPolicy();
    Code:
       0: aload_0
       1: getfield      #27                 // Field triggeringPolicy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
       4: areturn

  java.util.concurrent.Semaphore getSemaphore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.RolloverStrategy getRolloverStrategy();
    Code:
       0: aload_0
       1: getfield      #28                 // Field rolloverStrategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
       4: areturn

  private boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       6: invokevirtual #132                // Method java/util/concurrent/Semaphore.acquire:()V
       9: iconst_1
      10: istore_2
      11: goto          24
      14: astore_3
      15: aload_0
      16: ldc           #133                // String Thread interrupted while attempting to check rollover
      18: aload_3
      19: invokevirtual #124                // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: iconst_0
      23: ireturn
      24: iconst_1
      25: istore_3
      26: aload_1
      27: aload_0
      28: invokeinterface #134,  2          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverStrategy.rollover:(Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;)Lorg/apache/logging/log4j/core/appender/rolling/RolloverDescription;
      33: astore        4
      35: aload         4
      37: ifnull        178
      40: aload_0
      41: invokevirtual #135                // Method writeFooter:()V
      44: aload_0
      45: invokevirtual #136                // Method closeOutputStream:()Z
      48: pop
      49: aload         4
      51: invokeinterface #137,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverDescription.getSynchronous:()Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
      56: ifnull        104
      59: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      62: ldc           #138                // String RollingFileManager executing synchronous {}
      64: aload         4
      66: invokeinterface #137,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverDescription.getSynchronous:()Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
      71: invokeinterface #41,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      76: aload         4
      78: invokeinterface #137,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverDescription.getSynchronous:()Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
      83: invokeinterface #139,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/action/Action.execute:()Z
      88: istore_3
      89: goto          104
      92: astore        5
      94: iconst_0
      95: istore_3
      96: aload_0
      97: ldc           #140                // String Caught error in synchronous task
      99: aload         5
     101: invokevirtual #124                // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     104: iload_3
     105: ifeq          161
     108: aload         4
     110: invokeinterface #141,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverDescription.getAsynchronous:()Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
     115: ifnull        161
     118: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     121: ldc           #142                // String RollingFileManager executing async {}
     123: aload         4
     125: invokeinterface #141,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverDescription.getAsynchronous:()Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
     130: invokeinterface #41,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     135: aload_0
     136: getfield      #24                 // Field asyncExecutor:Ljava/util/concurrent/ExecutorService;
     139: new           #143                // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$AsyncAction
     142: dup
     143: aload         4
     145: invokeinterface #141,  1          // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/RolloverDescription.getAsynchronous:()Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
     150: aload_0
     151: invokespecial #144                // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$AsyncAction."<init>":(Lorg/apache/logging/log4j/core/appender/rolling/action/Action;Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;)V
     154: invokeinterface #145,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     159: iconst_0
     160: istore_2
     161: iconst_1
     162: istore        5
     164: iload_2
     165: ifeq          175
     168: aload_0
     169: getfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
     172: invokevirtual #146                // Method java/util/concurrent/Semaphore.release:()V
     175: iload         5
     177: ireturn
     178: iconst_0
     179: istore        5
     181: iload_2
     182: ifeq          192
     185: aload_0
     186: getfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
     189: invokevirtual #146                // Method java/util/concurrent/Semaphore.release:()V
     192: iload         5
     194: ireturn
     195: astore        6
     197: iload_2
     198: ifeq          208
     201: aload_0
     202: getfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
     205: invokevirtual #146                // Method java/util/concurrent/Semaphore.release:()V
     208: aload         6
     210: athrow
    Exception table:
       from    to  target type
           2    11    14   Class java/lang/InterruptedException
          76    89    92   Class java/lang/Exception
          26   164   195   any
         178   181   195   any
         195   197   195   any

  public void updateData(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #54                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$FactoryData
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #147                // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$FactoryData.getRolloverStrategy:()Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
      10: invokevirtual #148                // Method setRolloverStrategy:(Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;)V
      13: aload_0
      14: new           #29                 // class org/apache/logging/log4j/core/appender/rolling/PatternProcessor
      17: dup
      18: aload_2
      19: invokevirtual #149                // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$FactoryData.getPattern:()Ljava/lang/String;
      22: aload_0
      23: invokevirtual #99                 // Method getPatternProcessor:()Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;
      26: invokespecial #150                // Method org/apache/logging/log4j/core/appender/rolling/PatternProcessor."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;)V
      29: invokevirtual #151                // Method setPatternProcessor:(Lorg/apache/logging/log4j/core/appender/rolling/PatternProcessor;)V
      32: aload_0
      33: aload_2
      34: invokevirtual #152                // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$FactoryData.getTriggeringPolicy:()Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      37: invokevirtual #153                // Method setTriggeringPolicy:(Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;)V
      40: return

  private static long initialFileTime(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #154                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: anewarray     #155                // class java/nio/file/LinkOption
      10: invokestatic  #156                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      13: ifeq          139
      16: aload_1
      17: ldc           #157                // class java/nio/file/attribute/BasicFileAttributes
      19: iconst_0
      20: anewarray     #155                // class java/nio/file/LinkOption
      23: invokestatic  #158                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;
      26: astore_2
      27: aload_2
      28: invokeinterface #159,  1          // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.creationTime:()Ljava/nio/file/attribute/FileTime;
      33: astore_3
      34: aload_3
      35: getstatic     #160                // Field EPOCH:Ljava/nio/file/attribute/FileTime;
      38: invokevirtual #161                // Method java/nio/file/attribute/FileTime.compareTo:(Ljava/nio/file/attribute/FileTime;)I
      41: ifle          63
      44: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      47: ldc           #162                // String Returning file creation time for {}
      49: aload_0
      50: invokevirtual #163                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      53: invokeinterface #41,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      58: aload_3
      59: invokevirtual #164                // Method java/nio/file/attribute/FileTime.toMillis:()J
      62: lreturn
      63: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      66: new           #165                // class java/lang/StringBuilder
      69: dup
      70: invokespecial #166                // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #167                // String Unable to obtain file creation time for
      75: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #163                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      82: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #169                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokeinterface #170,  2          // InterfaceMethod org/apache/logging/log4j/Logger.info:(Ljava/lang/String;)V
      93: goto          139
      96: astore_2
      97: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     100: new           #165                // class java/lang/StringBuilder
     103: dup
     104: invokespecial #166                // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #171                // String Unable to calculate file creation time for
     109: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: invokevirtual #163                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     116: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #172                // String :
     121: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_2
     125: invokevirtual #115                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     128: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #169                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokeinterface #170,  2          // InterfaceMethod org/apache/logging/log4j/Logger.info:(Ljava/lang/String;)V
     139: aload_0
     140: invokevirtual #173                // Method java/io/File.lastModified:()J
     143: lreturn
    Exception table:
       from    to  target type
          16    62    96   Class java/lang/Exception
          63    93    96   Class java/lang/Exception

  static java.util.concurrent.Semaphore access$100(org.apache.logging.log4j.core.appender.rolling.RollingFileManager);
    Code:
       0: aload_0
       1: getfield      #4                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: areturn

  static org.apache.logging.log4j.Logger access$400();
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  static org.apache.logging.log4j.Logger access$500();
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  static long access$900(java.io.File);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method initialFileTime:(Ljava/io/File;)J
       4: lreturn

  static void access$1800(org.apache.logging.log4j.core.appender.rolling.RollingFileManager, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method defineAttributeView:(Ljava/nio/file/Path;)V
       5: return

  static org.apache.logging.log4j.Logger access$1900();
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: areturn

  static {};
    Code:
       0: new           #174                // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager$RollingFileManagerFactory
       3: dup
       4: aconst_null
       5: invokespecial #175                // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager$RollingFileManagerFactory."<init>":(Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager$1;)V
       8: putstatic     #56                 // Field factory:Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager$RollingFileManagerFactory;
      11: lconst_0
      12: invokestatic  #176                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;
      15: putstatic     #160                // Field EPOCH:Ljava/nio/file/attribute/FileTime;
      18: ldc           #53                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager
      20: ldc           #177                // class org/apache/logging/log4j/core/appender/rolling/TriggeringPolicy
      22: ldc           #178                // String triggeringPolicy
      24: invokestatic  #179                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: putstatic     #128                // Field triggeringPolicyUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      30: ldc           #53                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager
      32: ldc           #180                // class org/apache/logging/log4j/core/appender/rolling/RolloverStrategy
      34: ldc           #181                // String rolloverStrategy
      36: invokestatic  #179                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      39: putstatic     #130                // Field rolloverStrategyUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: ldc           #53                 // class org/apache/logging/log4j/core/appender/rolling/RollingFileManager
      44: ldc           #29                 // class org/apache/logging/log4j/core/appender/rolling/PatternProcessor
      46: ldc           #182                // String patternProcessor
      48: invokestatic  #179                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      51: putstatic     #131                // Field patternProcessorUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      54: return
}
