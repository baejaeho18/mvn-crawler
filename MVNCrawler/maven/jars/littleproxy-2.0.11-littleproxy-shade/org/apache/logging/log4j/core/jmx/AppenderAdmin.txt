Compiled from "AppenderAdmin.java"
public class org.apache.logging.log4j.core.jmx.AppenderAdmin implements org.apache.logging.log4j.core.jmx.AppenderAdminMBean {
  private final java.lang.String contextName;

  private final org.apache.logging.log4j.core.Appender appender;

  private final javax.management.ObjectName objectName;

  public org.apache.logging.log4j.core.jmx.AppenderAdmin(java.lang.String, org.apache.logging.log4j.core.Appender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String contextName
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/lang/String
      14: putfield      #5                  // Field contextName:Ljava/lang/String;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String appender
      21: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class org/apache/logging/log4j/core/Appender
      27: putfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      30: aload_0
      31: getfield      #5                  // Field contextName:Ljava/lang/String;
      34: invokestatic  #9                  // Method org/apache/logging/log4j/core/jmx/Server.escape:(Ljava/lang/String;)Ljava/lang/String;
      37: astore_3
      38: aload_2
      39: invokeinterface #10,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getName:()Ljava/lang/String;
      44: invokestatic  #9                  // Method org/apache/logging/log4j/core/jmx/Server.escape:(Ljava/lang/String;)Ljava/lang/String;
      47: astore        4
      49: ldc           #12                 // String org.apache.logging.log4j2:type=%s,component=Appenders,name=%s
      51: iconst_2
      52: anewarray     #13                 // class java/lang/Object
      55: dup
      56: iconst_0
      57: aload_3
      58: aastore
      59: dup
      60: iconst_1
      61: aload         4
      63: aastore
      64: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      67: astore        5
      69: aload_0
      70: new           #15                 // class javax/management/ObjectName
      73: dup
      74: aload         5
      76: invokespecial #16                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      79: putfield      #17                 // Field objectName:Ljavax/management/ObjectName;
      82: goto          95
      85: astore_3
      86: new           #19                 // class java/lang/IllegalStateException
      89: dup
      90: aload_3
      91: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      94: athrow
      95: return
    Exception table:
       from    to  target type
          30    82    85   Class java/lang/Exception

  public javax.management.ObjectName getObjectName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field objectName:Ljavax/management/ObjectName;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLayout();
    Code:
       0: aload_0
       1: getfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getLayout:()Lorg/apache/logging/log4j/core/Layout;
       9: invokestatic  #22                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: areturn

  public boolean isIgnoreExceptions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: invokeinterface #23,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.ignoreExceptions:()Z
       9: ireturn

  public java.lang.String getErrorHandler();
    Code:
       0: aload_0
       1: getfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getHandler:()Lorg/apache/logging/log4j/core/ErrorHandler;
       9: invokestatic  #22                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: areturn

  public java.lang.String getFilter();
    Code:
       0: aload_0
       1: getfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: instanceof    #25                 // class org/apache/logging/log4j/core/filter/AbstractFilterable
       7: ifeq          24
      10: aload_0
      11: getfield      #8                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      14: checkcast     #25                 // class org/apache/logging/log4j/core/filter/AbstractFilterable
      17: invokevirtual #26                 // Method org/apache/logging/log4j/core/filter/AbstractFilterable.getFilter:()Lorg/apache/logging/log4j/core/Filter;
      20: invokestatic  #22                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      23: areturn
      24: aconst_null
      25: areturn
}
