Compiled from "Level.java"
public final class org.apache.logging.log4j.Level implements java.lang.Comparable<org.apache.logging.log4j.Level>, java.io.Serializable {
  private static final org.apache.logging.log4j.Level[] EMPTY_ARRAY;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.logging.log4j.Level> LEVELS;

  public static final org.apache.logging.log4j.Level OFF;

  public static final org.apache.logging.log4j.Level FATAL;

  public static final org.apache.logging.log4j.Level ERROR;

  public static final org.apache.logging.log4j.Level WARN;

  public static final org.apache.logging.log4j.Level INFO;

  public static final org.apache.logging.log4j.Level DEBUG;

  public static final org.apache.logging.log4j.Level TRACE;

  public static final org.apache.logging.log4j.Level ALL;

  public static final java.lang.String CATEGORY;

  private static final long serialVersionUID;

  private final java.lang.String name;

  private final int intLevel;

  private final org.apache.logging.log4j.spi.StandardLevel standardLevel;

  private org.apache.logging.log4j.Level(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       8: ifeq          21
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Illegal null or empty Level name.
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_2
      22: ifge          35
      25: new           #3                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #6                  // String Illegal Level int less than zero.
      31: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: putfield      #7                  // Field name:Ljava/lang/String;
      40: aload_0
      41: iload_2
      42: putfield      #8                  // Field intLevel:I
      45: aload_0
      46: iload_2
      47: invokestatic  #9                  // Method org/apache/logging/log4j/spi/StandardLevel.getStandardLevel:(I)Lorg/apache/logging/log4j/spi/StandardLevel;
      50: putfield      #10                 // Field standardLevel:Lorg/apache/logging/log4j/spi/StandardLevel;
      53: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      56: aload_1
      57: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      60: invokestatic  #13                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      63: aload_0
      64: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: ifnull        104
      72: new           #15                 // class java/lang/IllegalStateException
      75: dup
      76: new           #16                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #18                 // String Level
      85: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #20                 // String  has already been defined.
      94: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: return

  public int intLevel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: ireturn

  public org.apache.logging.log4j.spi.StandardLevel getStandardLevel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field standardLevel:Lorg/apache/logging/log4j/spi/StandardLevel;
       4: areturn

  public boolean isInRange(org.apache.logging.log4j.Level, org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmplt     26
      11: aload_0
      12: getfield      #8                  // Field intLevel:I
      15: aload_2
      16: getfield      #8                  // Field intLevel:I
      19: if_icmpgt     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isLessSpecificThan(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isMoreSpecificThan(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmpgt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.apache.logging.log4j.Level clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: new           #23                 // class java/lang/CloneNotSupportedException
       3: dup
       4: invokespecial #24                 // Method java/lang/CloneNotSupportedException."<init>":()V
       7: athrow

  public int compareTo(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmpge     15
      11: iconst_m1
      12: goto          31
      15: aload_0
      16: getfield      #8                  // Field intLevel:I
      19: aload_1
      20: getfield      #8                  // Field intLevel:I
      23: if_icmple     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/apache/logging/log4j/Level
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.Class<org.apache.logging.log4j.Level> getDeclaringClass();
    Code:
       0: ldc           #25                 // class org/apache/logging/log4j/Level
       2: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: invokevirtual #26                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public static org.apache.logging.log4j.Level forName(java.lang.String, int);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       4: ifeq          17
       7: new           #3                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #4                  // String Illegal null or empty Level name.
      13: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      21: invokestatic  #13                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      24: astore_2
      25: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      28: aload_2
      29: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #25                 // class org/apache/logging/log4j/Level
      37: astore_3
      38: aload_3
      39: ifnull        44
      42: aload_3
      43: areturn
      44: new           #25                 // class org/apache/logging/log4j/Level
      47: dup
      48: aload_0
      49: iload_1
      50: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      53: areturn
      54: astore        4
      56: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      59: aload_2
      60: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #25                 // class org/apache/logging/log4j/Level
      68: areturn
    Exception table:
       from    to  target type
          44    53    54   Class java/lang/IllegalStateException

  public static org.apache.logging.log4j.Level getLevel(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       4: ifeq          17
       7: new           #3                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #4                  // String Illegal null or empty Level name.
      13: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      20: aload_0
      21: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      24: invokestatic  #13                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      27: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #25                 // class org/apache/logging/log4j/Level
      35: areturn

  public static org.apache.logging.log4j.Level toLevel(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field DEBUG:Lorg/apache/logging/log4j/Level;
       4: invokestatic  #30                 // Method toLevel:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/Level;
       7: areturn

  public static org.apache.logging.log4j.Level toLevel(java.lang.String, org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
       9: aload_0
      10: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      13: invokestatic  #13                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      16: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #25                 // class org/apache/logging/log4j/Level
      24: astore_2
      25: aload_2
      26: ifnonnull     33
      29: aload_1
      30: goto          34
      33: aload_2
      34: areturn

  private static java.lang.String toUpperCase(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #32                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: areturn

  public static org.apache.logging.log4j.Level[] values();
    Code:
       0: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       8: getstatic     #34                 // Field EMPTY_ARRAY:[Lorg/apache/logging/log4j/Level;
      11: invokeinterface #35,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      16: checkcast     #36                 // class "[Lorg/apache/logging/log4j/Level;"
      19: areturn

  public static org.apache.logging.log4j.Level valueOf(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #37                 // String No level name given.
       3: invokestatic  #38                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      11: invokestatic  #13                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_1
      15: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #25                 // class org/apache/logging/log4j/Level
      27: astore_2
      28: aload_2
      29: ifnull        34
      32: aload_2
      33: areturn
      34: new           #3                  // class java/lang/IllegalArgumentException
      37: dup
      38: new           #16                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #39                 // String Unknown level constant [
      47: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #40                 // String ].
      56: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow

  public static <T extends java.lang.Enum<T>> T valueOf(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       5: areturn

  protected java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: invokestatic  #42                 // Method valueOf:(Ljava/lang/String;)Lorg/apache/logging/log4j/Level;
       7: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method clone:()Lorg/apache/logging/log4j/Level;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/logging/log4j/Level
       5: invokevirtual #44                 // Method compareTo:(Lorg/apache/logging/log4j/Level;)I
       8: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #25                 // class org/apache/logging/log4j/Level
       4: putstatic     #34                 // Field EMPTY_ARRAY:[Lorg/apache/logging/log4j/Level;
       7: new           #45                 // class java/util/concurrent/ConcurrentHashMap
      10: dup
      11: invokespecial #46                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      14: putstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      17: new           #25                 // class org/apache/logging/log4j/Level
      20: dup
      21: ldc           #47                 // String OFF
      23: getstatic     #48                 // Field org/apache/logging/log4j/spi/StandardLevel.OFF:Lorg/apache/logging/log4j/spi/StandardLevel;
      26: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      29: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      32: putstatic     #50                 // Field OFF:Lorg/apache/logging/log4j/Level;
      35: new           #25                 // class org/apache/logging/log4j/Level
      38: dup
      39: ldc           #51                 // String FATAL
      41: getstatic     #52                 // Field org/apache/logging/log4j/spi/StandardLevel.FATAL:Lorg/apache/logging/log4j/spi/StandardLevel;
      44: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      47: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      50: putstatic     #53                 // Field FATAL:Lorg/apache/logging/log4j/Level;
      53: new           #25                 // class org/apache/logging/log4j/Level
      56: dup
      57: ldc           #54                 // String ERROR
      59: getstatic     #55                 // Field org/apache/logging/log4j/spi/StandardLevel.ERROR:Lorg/apache/logging/log4j/spi/StandardLevel;
      62: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      65: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      68: putstatic     #56                 // Field ERROR:Lorg/apache/logging/log4j/Level;
      71: new           #25                 // class org/apache/logging/log4j/Level
      74: dup
      75: ldc           #57                 // String WARN
      77: getstatic     #58                 // Field org/apache/logging/log4j/spi/StandardLevel.WARN:Lorg/apache/logging/log4j/spi/StandardLevel;
      80: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      83: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      86: putstatic     #59                 // Field WARN:Lorg/apache/logging/log4j/Level;
      89: new           #25                 // class org/apache/logging/log4j/Level
      92: dup
      93: ldc           #60                 // String INFO
      95: getstatic     #61                 // Field org/apache/logging/log4j/spi/StandardLevel.INFO:Lorg/apache/logging/log4j/spi/StandardLevel;
      98: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     101: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
     104: putstatic     #62                 // Field INFO:Lorg/apache/logging/log4j/Level;
     107: new           #25                 // class org/apache/logging/log4j/Level
     110: dup
     111: ldc           #63                 // String DEBUG
     113: getstatic     #64                 // Field org/apache/logging/log4j/spi/StandardLevel.DEBUG:Lorg/apache/logging/log4j/spi/StandardLevel;
     116: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     119: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
     122: putstatic     #29                 // Field DEBUG:Lorg/apache/logging/log4j/Level;
     125: new           #25                 // class org/apache/logging/log4j/Level
     128: dup
     129: ldc           #65                 // String TRACE
     131: getstatic     #66                 // Field org/apache/logging/log4j/spi/StandardLevel.TRACE:Lorg/apache/logging/log4j/spi/StandardLevel;
     134: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     137: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
     140: putstatic     #67                 // Field TRACE:Lorg/apache/logging/log4j/Level;
     143: new           #25                 // class org/apache/logging/log4j/Level
     146: dup
     147: ldc           #68                 // String ALL
     149: getstatic     #69                 // Field org/apache/logging/log4j/spi/StandardLevel.ALL:Lorg/apache/logging/log4j/spi/StandardLevel;
     152: invokevirtual #49                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     155: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
     158: putstatic     #70                 // Field ALL:Lorg/apache/logging/log4j/Level;
     161: return
}
