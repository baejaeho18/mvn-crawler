Compiled from "ColumnConfig.java"
public class org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig> {
  private org.apache.logging.log4j.core.config.Configuration configuration;

  private java.lang.String name;

  private java.lang.String pattern;

  private java.lang.String literal;

  private boolean isEventTimestamp;

  private boolean isUnicode;

  private boolean isClob;

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field isUnicode:Z
       9: return

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig build();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: invokestatic  #4                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       7: ifeq          22
      10: invokestatic  #5                  // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig.access$000:()Lorg/apache/logging/log4j/Logger;
      13: ldc           #6                  // String The column config is not valid because it does not contain a column name.
      15: invokeinterface #7,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      20: aconst_null
      21: areturn
      22: aload_0
      23: getfield      #8                  // Field pattern:Ljava/lang/String;
      26: invokestatic  #9                  // Method org/apache/logging/log4j/util/Strings.isNotEmpty:(Ljava/lang/CharSequence;)Z
      29: istore_1
      30: aload_0
      31: getfield      #10                 // Field literal:Ljava/lang/String;
      34: invokestatic  #9                  // Method org/apache/logging/log4j/util/Strings.isNotEmpty:(Ljava/lang/CharSequence;)Z
      37: istore_2
      38: iload_1
      39: ifeq          46
      42: iload_2
      43: ifne          68
      46: iload_1
      47: ifeq          57
      50: aload_0
      51: getfield      #11                 // Field isEventTimestamp:Z
      54: ifne          68
      57: iload_2
      58: ifeq          80
      61: aload_0
      62: getfield      #11                 // Field isEventTimestamp:Z
      65: ifeq          80
      68: invokestatic  #5                  // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig.access$000:()Lorg/apache/logging/log4j/Logger;
      71: ldc           #12                 // String The pattern, literal, and isEventTimestamp attributes are mutually exclusive.
      73: invokeinterface #7,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      78: aconst_null
      79: areturn
      80: aload_0
      81: getfield      #11                 // Field isEventTimestamp:Z
      84: ifeq          105
      87: new           #13                 // class org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig
      90: dup
      91: aload_0
      92: getfield      #3                  // Field name:Ljava/lang/String;
      95: aconst_null
      96: aconst_null
      97: iconst_1
      98: iconst_0
      99: iconst_0
     100: aconst_null
     101: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/layout/PatternLayout;Ljava/lang/String;ZZZLorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$1;)V
     104: areturn
     105: iload_2
     106: ifeq          130
     109: new           #13                 // class org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig
     112: dup
     113: aload_0
     114: getfield      #3                  // Field name:Ljava/lang/String;
     117: aconst_null
     118: aload_0
     119: getfield      #10                 // Field literal:Ljava/lang/String;
     122: iconst_0
     123: iconst_0
     124: iconst_0
     125: aconst_null
     126: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/layout/PatternLayout;Ljava/lang/String;ZZZLorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$1;)V
     129: areturn
     130: iload_1
     131: ifeq          183
     134: invokestatic  #15                 // Method org/apache/logging/log4j/core/layout/PatternLayout.newBuilder:()Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
     137: aload_0
     138: getfield      #8                  // Field pattern:Ljava/lang/String;
     141: invokevirtual #16                 // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withPattern:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
     144: aload_0
     145: getfield      #17                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     148: invokevirtual #18                 // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
     151: iconst_0
     152: invokevirtual #19                 // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withAlwaysWriteExceptions:(Z)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
     155: invokevirtual #20                 // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.build:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
     158: astore_3
     159: new           #13                 // class org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig
     162: dup
     163: aload_0
     164: getfield      #3                  // Field name:Ljava/lang/String;
     167: aload_3
     168: aconst_null
     169: iconst_0
     170: aload_0
     171: getfield      #2                  // Field isUnicode:Z
     174: aload_0
     175: getfield      #21                 // Field isClob:Z
     178: aconst_null
     179: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/layout/PatternLayout;Ljava/lang/String;ZZZLorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig$1;)V
     182: areturn
     183: invokestatic  #5                  // Method org/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig.access$000:()Lorg/apache/logging/log4j/Logger;
     186: ldc           #22                 // String To configure a column you must specify a pattern or literal or set isEventDate to true.
     188: invokeinterface #7,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
     193: aconst_null
     194: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setClob(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field isClob:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setEventTimestamp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field isEventTimestamp:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setLiteral(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field literal:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field pattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig$Builder setUnicode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field isUnicode:Z
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method build:()Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;
       4: areturn
}
