Compiled from "ExtendedThrowablePatternConverter.java"
public final class org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter extends org.apache.logging.log4j.core.pattern.ThrowablePatternConverter {
  private org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter(org.apache.logging.log4j.core.config.Configuration, java.lang.String[]);
    Code:
       0: aload_0
       1: ldc           #1                  // String ExtendedThrowable
       3: ldc           #2                  // String throwable
       5: aload_2
       6: aload_1
       7: invokespecial #3                  // Method org/apache/logging/log4j/core/pattern/ThrowablePatternConverter."<init>":(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)V
      10: return

  public static org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter newInstance(org.apache.logging.log4j.core.config.Configuration, java.lang.String[]);
    Code:
       0: new           #4                  // class org/apache/logging/log4j/core/pattern/ExtendedThrowablePatternConverter
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #5                  // Method "<init>":(Lorg/apache/logging/log4j/core/config/Configuration;[Ljava/lang/String;)V
       9: areturn

  public void format(org.apache.logging.log4j.core.LogEvent, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrownProxy:()Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
       6: astore_3
       7: aload_1
       8: invokeinterface #7,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrown:()Ljava/lang/Throwable;
      13: astore        4
      15: aload         4
      17: ifnonnull     24
      20: aload_3
      21: ifnull        108
      24: aload_0
      25: getfield      #8                  // Field options:Lorg/apache/logging/log4j/core/impl/ThrowableFormatOptions;
      28: invokevirtual #9                  // Method org/apache/logging/log4j/core/impl/ThrowableFormatOptions.anyLines:()Z
      31: ifeq          108
      34: aload_3
      35: ifnonnull     45
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokespecial #10                 // Method org/apache/logging/log4j/core/pattern/ThrowablePatternConverter.format:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/StringBuilder;)V
      44: return
      45: aload_2
      46: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
      49: istore        5
      51: iload         5
      53: ifle          77
      56: aload_2
      57: iload         5
      59: iconst_1
      60: isub
      61: invokevirtual #12                 // Method java/lang/StringBuilder.charAt:(I)C
      64: invokestatic  #13                 // Method java/lang/Character.isWhitespace:(C)Z
      67: ifne          77
      70: aload_2
      71: bipush        32
      73: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: pop
      77: aload_3
      78: aload_2
      79: aload_0
      80: getfield      #8                  // Field options:Lorg/apache/logging/log4j/core/impl/ThrowableFormatOptions;
      83: invokevirtual #15                 // Method org/apache/logging/log4j/core/impl/ThrowableFormatOptions.getIgnorePackages:()Ljava/util/List;
      86: aload_0
      87: getfield      #8                  // Field options:Lorg/apache/logging/log4j/core/impl/ThrowableFormatOptions;
      90: invokevirtual #16                 // Method org/apache/logging/log4j/core/impl/ThrowableFormatOptions.getTextRenderer:()Lorg/apache/logging/log4j/core/pattern/TextRenderer;
      93: aload_0
      94: aload_1
      95: invokevirtual #17                 // Method getSuffix:(Lorg/apache/logging/log4j/core/LogEvent;)Ljava/lang/String;
      98: aload_0
      99: getfield      #8                  // Field options:Lorg/apache/logging/log4j/core/impl/ThrowableFormatOptions;
     102: invokevirtual #18                 // Method org/apache/logging/log4j/core/impl/ThrowableFormatOptions.getSeparator:()Ljava/lang/String;
     105: invokevirtual #19                 // Method org/apache/logging/log4j/core/impl/ThrowableProxy.formatExtendedStackTraceTo:(Ljava/lang/StringBuilder;Ljava/util/List;Lorg/apache/logging/log4j/core/pattern/TextRenderer;Ljava/lang/String;Ljava/lang/String;)V
     108: return
}
