Compiled from "PatternLayout.java"
public class org.apache.logging.log4j.core.layout.PatternLayout$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.layout.PatternLayout> {
  private java.lang.String pattern;

  private org.apache.logging.log4j.core.layout.PatternSelector patternSelector;

  private org.apache.logging.log4j.core.config.Configuration configuration;

  private org.apache.logging.log4j.core.pattern.RegexReplacement regexReplacement;

  private java.nio.charset.Charset charset;

  private boolean alwaysWriteExceptions;

  private boolean disableAnsi;

  private boolean noConsoleNoAnsi;

  private java.lang.String header;

  private java.lang.String footer;

  private org.apache.logging.log4j.core.layout.PatternLayout$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String %m%n
       7: putfield      #5                  // Field pattern:Ljava/lang/String;
      10: aload_0
      11: invokestatic  #6                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      14: putfield      #7                  // Field charset:Ljava/nio/charset/Charset;
      17: aload_0
      18: iconst_1
      19: putfield      #8                  // Field alwaysWriteExceptions:Z
      22: aload_0
      23: aload_0
      24: invokespecial #9                  // Method useAnsiEscapeCodes:()Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: putfield      #10                 // Field disableAnsi:Z
      38: return

  private boolean useAnsiEscapeCodes();
    Code:
       0: invokestatic  #11                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: astore_1
       4: aload_1
       5: invokevirtual #12                 // Method org/apache/logging/log4j/util/PropertiesUtil.isOsWindows:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: istore_2
      17: aload_1
      18: ldc           #13                 // String log4j.skipJansi
      20: iconst_1
      21: invokevirtual #14                 // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;Z)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore_3
      33: iload_2
      34: ifne          41
      37: iload_3
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field pattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withPatternSelector(org.apache.logging.log4j.core.layout.PatternSelector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field patternSelector:Lorg/apache/logging/log4j/core/layout/PatternSelector;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withRegexReplacement(org.apache.logging.log4j.core.pattern.RegexReplacement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field regexReplacement:Lorg/apache/logging/log4j/core/pattern/RegexReplacement;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withCharset(java.nio.charset.Charset);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field charset:Ljava/nio/charset/Charset;
       9: aload_0
      10: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withAlwaysWriteExceptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field alwaysWriteExceptions:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withDisableAnsi(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field disableAnsi:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withNoConsoleNoAnsi(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field noConsoleNoAnsi:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field header:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout$Builder withFooter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field footer:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.PatternLayout build();
    Code:
       0: new           #3                  // class org/apache/logging/log4j/core/layout/PatternLayout
       3: dup
       4: aload_0
       5: getfield      #16                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       8: aload_0
       9: getfield      #17                 // Field regexReplacement:Lorg/apache/logging/log4j/core/pattern/RegexReplacement;
      12: aload_0
      13: getfield      #5                  // Field pattern:Ljava/lang/String;
      16: aload_0
      17: getfield      #15                 // Field patternSelector:Lorg/apache/logging/log4j/core/layout/PatternSelector;
      20: aload_0
      21: getfield      #7                  // Field charset:Ljava/nio/charset/Charset;
      24: aload_0
      25: getfield      #8                  // Field alwaysWriteExceptions:Z
      28: aload_0
      29: getfield      #10                 // Field disableAnsi:Z
      32: aload_0
      33: getfield      #18                 // Field noConsoleNoAnsi:Z
      36: aload_0
      37: getfield      #19                 // Field header:Ljava/lang/String;
      40: aload_0
      41: getfield      #20                 // Field footer:Ljava/lang/String;
      44: aconst_null
      45: invokespecial #21                 // Method org/apache/logging/log4j/core/layout/PatternLayout."<init>":(Lorg/apache/logging/log4j/core/config/Configuration;Lorg/apache/logging/log4j/core/pattern/RegexReplacement;Ljava/lang/String;Lorg/apache/logging/log4j/core/layout/PatternSelector;Ljava/nio/charset/Charset;ZZZLjava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/core/layout/PatternLayout$1;)V
      48: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method build:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
       4: areturn

  org.apache.logging.log4j.core.layout.PatternLayout$Builder(org.apache.logging.log4j.core.layout.PatternLayout$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
