Compiled from "EnhancedPatternLayout.java"
public class org.apache.log4j.EnhancedPatternLayout extends org.apache.log4j.Layout {
  public static final java.lang.String DEFAULT_CONVERSION_PATTERN;

  public static final java.lang.String TTCC_CONVERSION_PATTERN;

  protected final int BUF_SIZE;

  protected final int MAX_CAPACITY;

  public static final java.lang.String PATTERN_RULE_REGISTRY;

  private org.apache.log4j.helpers.PatternConverter head;

  private java.lang.String conversionPattern;

  private boolean handlesExceptions;

  public org.apache.log4j.EnhancedPatternLayout();
    Code:
       0: aload_0
       1: ldc           #1                  // String %m%n
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;)V
       6: return

  public org.apache.log4j.EnhancedPatternLayout(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/log4j/Layout."<init>":()V
       4: aload_0
       5: sipush        256
       8: putfield      #4                  // Field BUF_SIZE:I
      11: aload_0
      12: sipush        1024
      15: putfield      #5                  // Field MAX_CAPACITY:I
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field conversionPattern:Ljava/lang/String;
      23: aload_0
      24: aload_0
      25: aload_1
      26: ifnonnull     34
      29: ldc           #1                  // String %m%n
      31: goto          35
      34: aload_1
      35: invokevirtual #7                  // Method createPatternParser:(Ljava/lang/String;)Lorg/apache/log4j/helpers/PatternParser;
      38: invokevirtual #8                  // Method org/apache/log4j/helpers/PatternParser.parse:()Lorg/apache/log4j/helpers/PatternConverter;
      41: putfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      44: aload_0
      45: getfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      48: instanceof    #10                 // class org/apache/log4j/pattern/BridgePatternConverter
      51: ifeq          79
      54: aload_0
      55: aload_0
      56: getfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      59: checkcast     #10                 // class org/apache/log4j/pattern/BridgePatternConverter
      62: invokevirtual #11                 // Method org/apache/log4j/pattern/BridgePatternConverter.ignoresThrowable:()Z
      65: ifne          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: putfield      #12                 // Field handlesExceptions:Z
      76: goto          84
      79: aload_0
      80: iconst_0
      81: putfield      #12                 // Field handlesExceptions:Z
      84: return

  public void setConversionPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method org/apache/log4j/helpers/OptionConverter.convertSpecialChars:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #6                  // Field conversionPattern:Ljava/lang/String;
       8: aload_0
       9: aload_0
      10: aload_0
      11: getfield      #6                  // Field conversionPattern:Ljava/lang/String;
      14: invokevirtual #7                  // Method createPatternParser:(Ljava/lang/String;)Lorg/apache/log4j/helpers/PatternParser;
      17: invokevirtual #8                  // Method org/apache/log4j/helpers/PatternParser.parse:()Lorg/apache/log4j/helpers/PatternConverter;
      20: putfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      23: aload_0
      24: getfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      27: instanceof    #10                 // class org/apache/log4j/pattern/BridgePatternConverter
      30: ifeq          58
      33: aload_0
      34: aload_0
      35: getfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      38: checkcast     #10                 // class org/apache/log4j/pattern/BridgePatternConverter
      41: invokevirtual #11                 // Method org/apache/log4j/pattern/BridgePatternConverter.ignoresThrowable:()Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: putfield      #12                 // Field handlesExceptions:Z
      55: goto          63
      58: aload_0
      59: iconst_0
      60: putfield      #12                 // Field handlesExceptions:Z
      63: return

  public java.lang.String getConversionPattern();
    Code:
       0: aload_0
       1: getfield      #6                  // Field conversionPattern:Ljava/lang/String;
       4: areturn

  protected org.apache.log4j.helpers.PatternParser createPatternParser(java.lang.String);
    Code:
       0: new           #14                 // class org/apache/log4j/pattern/BridgePatternParser
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method org/apache/log4j/pattern/BridgePatternParser."<init>":(Ljava/lang/String;)V
       8: areturn

  public void activateOptions();
    Code:
       0: return

  public java.lang.String format(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: new           #16                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #9                  // Field head:Lorg/apache/log4j/helpers/PatternConverter;
      12: astore_3
      13: aload_3
      14: ifnull        31
      17: aload_3
      18: aload_2
      19: aload_1
      20: invokevirtual #18                 // Method org/apache/log4j/helpers/PatternConverter.format:(Ljava/lang/StringBuffer;Lorg/apache/log4j/spi/LoggingEvent;)V
      23: aload_3
      24: getfield      #19                 // Field org/apache/log4j/helpers/PatternConverter.next:Lorg/apache/log4j/helpers/PatternConverter;
      27: astore_3
      28: goto          13
      31: aload_2
      32: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      35: areturn

  public boolean ignoresThrowable();
    Code:
       0: aload_0
       1: getfield      #12                 // Field handlesExceptions:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
