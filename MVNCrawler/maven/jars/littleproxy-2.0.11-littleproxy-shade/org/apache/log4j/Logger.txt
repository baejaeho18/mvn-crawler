Compiled from "Logger.java"
public class org.apache.log4j.Logger extends org.apache.log4j.Category {
  private static final java.lang.String FQCN;

  static java.lang.Class class$org$apache$log4j$Logger;

  protected org.apache.log4j.Logger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/log4j/Category."<init>":(Ljava/lang/String;)V
       5: return

  public static org.apache.log4j.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       4: areturn

  public static org.apache.log4j.Logger getLogger(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: invokestatic  #7                  // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       7: areturn

  public static org.apache.log4j.Logger getRootLogger();
    Code:
       0: invokestatic  #9                  // Method org/apache/log4j/LogManager.getRootLogger:()Lorg/apache/log4j/Logger;
       3: areturn

  public static org.apache.log4j.Logger getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #10                 // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/String;Lorg/apache/log4j/spi/LoggerFactory;)Lorg/apache/log4j/Logger;
       5: areturn

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        5000
       7: invokeinterface #12,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #13                 // Field org/apache/log4j/Level.TRACE:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #14                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #15                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #16                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #13                 // Field org/apache/log4j/Level.TRACE:Lorg/apache/log4j/Level;
      36: aload_1
      37: aconst_null
      38: invokevirtual #17                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        5000
       7: invokeinterface #12,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #13                 // Field org/apache/log4j/Level.TRACE:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #14                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #15                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #16                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #13                 // Field org/apache/log4j/Level.TRACE:Lorg/apache/log4j/Level;
      36: aload_1
      37: aload_2
      38: invokevirtual #17                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: getfield      #11                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        5000
       7: invokeinterface #12,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          17
      15: iconst_0
      16: ireturn
      17: getstatic     #13                 // Field org/apache/log4j/Level.TRACE:Lorg/apache/log4j/Level;
      20: aload_0
      21: invokevirtual #14                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      24: invokevirtual #15                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      27: ireturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: getstatic     #18                 // Field class$org$apache$log4j$Logger:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #19                 // String org.apache.log4j.Logger
       8: invokestatic  #20                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #18                 // Field class$org$apache$log4j$Logger:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #18                 // Field class$org$apache$log4j$Logger:Ljava/lang/Class;
      21: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      24: putstatic     #16                 // Field FQCN:Ljava/lang/String;
      27: return
}
