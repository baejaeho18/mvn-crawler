Compiled from "ThreadPatternConverter.java"
public class org.apache.log4j.pattern.ThreadPatternConverter extends org.apache.log4j.pattern.LoggingEventPatternConverter {
  private static final org.apache.log4j.pattern.ThreadPatternConverter INSTANCE;

  private org.apache.log4j.pattern.ThreadPatternConverter();
    Code:
       0: aload_0
       1: ldc           #1                  // String Thread
       3: ldc           #2                  // String thread
       5: invokespecial #3                  // Method org/apache/log4j/pattern/LoggingEventPatternConverter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       8: return

  public static org.apache.log4j.pattern.ThreadPatternConverter newInstance(java.lang.String[]);
    Code:
       0: getstatic     #4                  // Field INSTANCE:Lorg/apache/log4j/pattern/ThreadPatternConverter;
       3: areturn

  public void format(org.apache.log4j.spi.LoggingEvent, java.lang.StringBuffer);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #5                  // Method org/apache/log4j/spi/LoggingEvent.getThreadName:()Ljava/lang/String;
       5: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       8: pop
       9: return

  static {};
    Code:
       0: new           #7                  // class org/apache/log4j/pattern/ThreadPatternConverter
       3: dup
       4: invokespecial #8                  // Method "<init>":()V
       7: putstatic     #4                  // Field INSTANCE:Lorg/apache/log4j/pattern/ThreadPatternConverter;
      10: return
}
