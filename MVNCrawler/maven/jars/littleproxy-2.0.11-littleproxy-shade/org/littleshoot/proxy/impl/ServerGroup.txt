Compiled from "ServerGroup.java"
public class org.littleshoot.proxy.impl.ServerGroup {
  private static final org.slf4j.Logger log;

  public static final int DEFAULT_INCOMING_ACCEPTOR_THREADS;

  public static final int DEFAULT_INCOMING_WORKER_THREADS;

  public static final int DEFAULT_OUTGOING_WORKER_THREADS;

  private static final java.util.concurrent.atomic.AtomicInteger serverGroupCount;

  private final java.lang.String name;

  private final int serverGroupId;

  private final int incomingAcceptorThreads;

  private final int incomingWorkerThreads;

  private final int outgoingWorkerThreads;

  public final java.util.List<org.littleshoot.proxy.HttpProxyServer> registeredServers;

  private final java.util.EnumMap<org.littleshoot.proxy.TransportProtocol, org.littleshoot.proxy.impl.ProxyThreadPools> protocolThreadPools;

  private static final java.util.EnumMap<org.littleshoot.proxy.TransportProtocol, java.nio.channels.spi.SelectorProvider> TRANSPORT_PROTOCOL_SELECTOR_PROVIDERS;

  private final java.util.concurrent.atomic.AtomicBoolean stopped;

  private final java.lang.Object THREAD_POOL_INIT_LOCK;

  private final java.lang.Object SERVER_REGISTRATION_LOCK;

  public org.littleshoot.proxy.impl.ServerGroup(java.lang.String, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field registeredServers:Ljava/util/List;
      16: aload_0
      17: new           #5                  // class java/util/EnumMap
      20: dup
      21: ldc           #6                  // class org/littleshoot/proxy/TransportProtocol
      23: invokespecial #7                  // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      26: putfield      #8                  // Field protocolThreadPools:Ljava/util/EnumMap;
      29: aload_0
      30: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      33: dup
      34: iconst_0
      35: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      38: putfield      #11                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      41: aload_0
      42: new           #12                 // class java/lang/Object
      45: dup
      46: invokespecial #1                  // Method java/lang/Object."<init>":()V
      49: putfield      #13                 // Field THREAD_POOL_INIT_LOCK:Ljava/lang/Object;
      52: aload_0
      53: new           #12                 // class java/lang/Object
      56: dup
      57: invokespecial #1                  // Method java/lang/Object."<init>":()V
      60: putfield      #14                 // Field SERVER_REGISTRATION_LOCK:Ljava/lang/Object;
      63: aload_0
      64: aload_1
      65: putfield      #15                 // Field name:Ljava/lang/String;
      68: aload_0
      69: getstatic     #16                 // Field serverGroupCount:Ljava/util/concurrent/atomic/AtomicInteger;
      72: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      75: putfield      #18                 // Field serverGroupId:I
      78: aload_0
      79: iload_2
      80: putfield      #19                 // Field incomingAcceptorThreads:I
      83: aload_0
      84: iload_3
      85: putfield      #20                 // Field incomingWorkerThreads:I
      88: aload_0
      89: iload         4
      91: putfield      #21                 // Field outgoingWorkerThreads:I
      94: return

  private org.littleshoot.proxy.impl.ProxyThreadPools getThreadPoolsForProtocol(org.littleshoot.proxy.TransportProtocol);
    Code:
       0: aload_0
       1: getfield      #8                  // Field protocolThreadPools:Ljava/util/EnumMap;
       4: aload_1
       5: invokevirtual #22                 // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnonnull     154
      11: aload_0
      12: getfield      #13                 // Field THREAD_POOL_INIT_LOCK:Ljava/lang/Object;
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: getfield      #8                  // Field protocolThreadPools:Ljava/util/EnumMap;
      22: aload_1
      23: invokevirtual #22                 // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: ifnonnull     142
      29: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      32: ldc           #24                 // String Initializing thread pools for {} with {} acceptor threads, {} incoming worker threads, and {} outgoing worker threads
      34: iconst_4
      35: anewarray     #12                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: aastore
      42: dup
      43: iconst_1
      44: aload_0
      45: getfield      #19                 // Field incomingAcceptorThreads:I
      48: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_2
      54: aload_0
      55: getfield      #20                 // Field incomingWorkerThreads:I
      58: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: dup
      63: iconst_3
      64: aload_0
      65: getfield      #21                 // Field outgoingWorkerThreads:I
      68: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: aastore
      72: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      77: getstatic     #27                 // Field TRANSPORT_PROTOCOL_SELECTOR_PROVIDERS:Ljava/util/EnumMap;
      80: aload_1
      81: invokevirtual #22                 // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #28                 // class java/nio/channels/spi/SelectorProvider
      87: astore_3
      88: aload_3
      89: ifnonnull     101
      92: new           #29                 // class org/littleshoot/proxy/UnknownTransportProtocolException
      95: dup
      96: aload_1
      97: invokespecial #30                 // Method org/littleshoot/proxy/UnknownTransportProtocolException."<init>":(Lorg/littleshoot/proxy/TransportProtocol;)V
     100: athrow
     101: new           #31                 // class org/littleshoot/proxy/impl/ProxyThreadPools
     104: dup
     105: aload_3
     106: aload_0
     107: getfield      #19                 // Field incomingAcceptorThreads:I
     110: aload_0
     111: getfield      #20                 // Field incomingWorkerThreads:I
     114: aload_0
     115: getfield      #21                 // Field outgoingWorkerThreads:I
     118: aload_0
     119: getfield      #15                 // Field name:Ljava/lang/String;
     122: aload_0
     123: getfield      #18                 // Field serverGroupId:I
     126: invokespecial #32                 // Method org/littleshoot/proxy/impl/ProxyThreadPools."<init>":(Ljava/nio/channels/spi/SelectorProvider;IIILjava/lang/String;I)V
     129: astore        4
     131: aload_0
     132: getfield      #8                  // Field protocolThreadPools:Ljava/util/EnumMap;
     135: aload_1
     136: aload         4
     138: invokevirtual #33                 // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: aload_2
     143: monitorexit
     144: goto          154
     147: astore        5
     149: aload_2
     150: monitorexit
     151: aload         5
     153: athrow
     154: aload_0
     155: getfield      #8                  // Field protocolThreadPools:Ljava/util/EnumMap;
     158: aload_1
     159: invokevirtual #22                 // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #31                 // class org/littleshoot/proxy/impl/ProxyThreadPools
     165: areturn
    Exception table:
       from    to  target type
          18   144   147   any
         147   151   147   any

  public void registerProxyServer(org.littleshoot.proxy.HttpProxyServer);
    Code:
       0: aload_0
       1: getfield      #14                 // Field SERVER_REGISTRATION_LOCK:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field registeredServers:Ljava/util/List;
      11: aload_1
      12: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public void unregisterProxyServer(org.littleshoot.proxy.HttpProxyServer, boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field SERVER_REGISTRATION_LOCK:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field registeredServers:Ljava/util/List;
      11: aload_1
      12: invokeinterface #35,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: istore        4
      19: iload         4
      21: ifne          34
      24: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      27: ldc           #36                 // String Attempted to unregister proxy server from ServerGroup that it was not registered with. Was the proxy unregistered twice?
      29: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      34: aload_0
      35: getfield      #4                  // Field registeredServers:Ljava/util/List;
      38: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      43: ifeq          64
      46: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      49: ldc           #39                 // String Proxy server unregistered from ServerGroup. No proxy servers remain registered, so shutting down ServerGroup.
      51: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      56: aload_0
      57: iload_2
      58: invokespecial #41                 // Method shutdown:(Z)V
      61: goto          86
      64: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      67: ldc           #42                 // String Proxy server unregistered from ServerGroup. Not shutting down ServerGroup ({} proxy servers remain registered).
      69: aload_0
      70: getfield      #4                  // Field registeredServers:Ljava/util/List;
      73: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
      78: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      86: aload_3
      87: monitorexit
      88: goto          98
      91: astore        5
      93: aload_3
      94: monitorexit
      95: aload         5
      97: athrow
      98: return
    Exception table:
       from    to  target type
           7    88    91   any
          91    95    91   any

  private void shutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          23
      12: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      15: ldc           #46                 // String Shutdown requested, but ServerGroup is already stopped. Doing nothing.
      17: invokeinterface #47,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      22: return
      23: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      26: ldc           #48                 // String Shutting down server group event loops {}
      28: iload_1
      29: ifeq          37
      32: ldc           #49                 // String (graceful)
      34: goto          39
      37: ldc           #50                 // String (non-graceful)
      39: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      44: new           #2                  // class java/util/ArrayList
      47: dup
      48: invokespecial #52                 // Method java/util/ArrayList."<init>":()V
      51: astore_2
      52: aload_0
      53: getfield      #8                  // Field protocolThreadPools:Ljava/util/EnumMap;
      56: invokevirtual #53                 // Method java/util/EnumMap.values:()Ljava/util/Collection;
      59: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      64: astore_3
      65: aload_3
      66: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          100
      74: aload_3
      75: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #31                 // class org/littleshoot/proxy/impl/ProxyThreadPools
      83: astore        4
      85: aload_2
      86: aload         4
      88: invokevirtual #57                 // Method org/littleshoot/proxy/impl/ProxyThreadPools.getAllEventLoops:()Ljava/util/List;
      91: invokeinterface #58,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      96: pop
      97: goto          65
     100: aload_2
     101: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     106: astore_3
     107: aload_3
     108: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          158
     116: aload_3
     117: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #60                 // class io/netty/channel/EventLoopGroup
     125: astore        4
     127: iload_1
     128: ifeq          142
     131: aload         4
     133: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
     138: pop
     139: goto          155
     142: aload         4
     144: lconst_0
     145: lconst_0
     146: getstatic     #62                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     149: invokeinterface #63,  6           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:(JJLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/Future;
     154: pop
     155: goto          107
     158: iload_1
     159: ifeq          227
     162: aload_2
     163: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     168: astore_3
     169: aload_3
     170: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     175: ifeq          227
     178: aload_3
     179: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     184: checkcast     #60                 // class io/netty/channel/EventLoopGroup
     187: astore        4
     189: aload         4
     191: ldc2_w        #64                 // long 60l
     194: getstatic     #62                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     197: invokeinterface #66,  4           // InterfaceMethod io/netty/channel/EventLoopGroup.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     202: pop
     203: goto          224
     206: astore        5
     208: invokestatic  #68                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     211: invokevirtual #69                 // Method java/lang/Thread.interrupt:()V
     214: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
     217: ldc           #70                 // String Interrupted while shutting down event loop
     219: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     224: goto          169
     227: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
     230: ldc           #71                 // String Done shutting down server group
     232: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     237: return
    Exception table:
       from    to  target type
         189   203   206   Class java/lang/InterruptedException

  public io.netty.channel.EventLoopGroup getClientToProxyAcceptorPoolForTransport(org.littleshoot.proxy.TransportProtocol);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #72                 // Method getThreadPoolsForProtocol:(Lorg/littleshoot/proxy/TransportProtocol;)Lorg/littleshoot/proxy/impl/ProxyThreadPools;
       5: invokevirtual #73                 // Method org/littleshoot/proxy/impl/ProxyThreadPools.getClientToProxyAcceptorPool:()Lio/netty/channel/nio/NioEventLoopGroup;
       8: areturn

  public io.netty.channel.EventLoopGroup getClientToProxyWorkerPoolForTransport(org.littleshoot.proxy.TransportProtocol);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #72                 // Method getThreadPoolsForProtocol:(Lorg/littleshoot/proxy/TransportProtocol;)Lorg/littleshoot/proxy/impl/ProxyThreadPools;
       5: invokevirtual #74                 // Method org/littleshoot/proxy/impl/ProxyThreadPools.getClientToProxyWorkerPool:()Lio/netty/channel/nio/NioEventLoopGroup;
       8: areturn

  public io.netty.channel.EventLoopGroup getProxyToServerWorkerPoolForTransport(org.littleshoot.proxy.TransportProtocol);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #72                 // Method getThreadPoolsForProtocol:(Lorg/littleshoot/proxy/TransportProtocol;)Lorg/littleshoot/proxy/impl/ProxyThreadPools;
       5: invokevirtual #75                 // Method org/littleshoot/proxy/impl/ProxyThreadPools.getProxyToServerWorkerPool:()Lio/netty/channel/nio/NioEventLoopGroup;
       8: areturn

  public boolean isStopped();
    Code:
       0: aload_0
       1: getfield      #11                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  static {};
    Code:
       0: ldc           #77                 // class org/littleshoot/proxy/impl/ServerGroup
       2: invokestatic  #78                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #23                 // Field log:Lorg/slf4j/Logger;
       8: new           #79                 // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: iconst_0
      13: invokespecial #80                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      16: putstatic     #16                 // Field serverGroupCount:Ljava/util/concurrent/atomic/AtomicInteger;
      19: new           #5                  // class java/util/EnumMap
      22: dup
      23: ldc           #6                  // class org/littleshoot/proxy/TransportProtocol
      25: invokespecial #7                  // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      28: putstatic     #27                 // Field TRANSPORT_PROTOCOL_SELECTOR_PROVIDERS:Ljava/util/EnumMap;
      31: getstatic     #27                 // Field TRANSPORT_PROTOCOL_SELECTOR_PROVIDERS:Ljava/util/EnumMap;
      34: getstatic     #81                 // Field org/littleshoot/proxy/TransportProtocol.TCP:Lorg/littleshoot/proxy/TransportProtocol;
      37: invokestatic  #82                 // Method java/nio/channels/spi/SelectorProvider.provider:()Ljava/nio/channels/spi/SelectorProvider;
      40: invokevirtual #33                 // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: invokestatic  #83                 // Method org/littleshoot/proxy/impl/ProxyUtils.isUdtAvailable:()Z
      47: ifeq          66
      50: getstatic     #27                 // Field TRANSPORT_PROTOCOL_SELECTOR_PROVIDERS:Ljava/util/EnumMap;
      53: getstatic     #84                 // Field org/littleshoot/proxy/TransportProtocol.UDT:Lorg/littleshoot/proxy/TransportProtocol;
      56: getstatic     #85                 // Field io/netty/channel/udt/nio/NioUdtProvider.BYTE_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
      59: invokevirtual #33                 // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: goto          76
      66: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      69: ldc           #86                 // String UDT provider not found on classpath. UDT transport will not be available.
      71: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      76: return
}
