Compiled from "Eac3Settings.java"
public interface software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder extends software.amazon.awssdk.core.SdkPojo, software.amazon.awssdk.utils.builder.CopyableBuilder<software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder, software.amazon.awssdk.services.mediaconvert.model.Eac3Settings> {
  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder attenuationControl(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder attenuationControl(software.amazon.awssdk.services.mediaconvert.model.Eac3AttenuationControl);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder bitrate(java.lang.Integer);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder bitstreamMode(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder bitstreamMode(software.amazon.awssdk.services.mediaconvert.model.Eac3BitstreamMode);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder codingMode(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder codingMode(software.amazon.awssdk.services.mediaconvert.model.Eac3CodingMode);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dcFilter(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dcFilter(software.amazon.awssdk.services.mediaconvert.model.Eac3DcFilter);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dialnorm(java.lang.Integer);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dynamicRangeCompressionLine(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dynamicRangeCompressionLine(software.amazon.awssdk.services.mediaconvert.model.Eac3DynamicRangeCompressionLine);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dynamicRangeCompressionRf(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder dynamicRangeCompressionRf(software.amazon.awssdk.services.mediaconvert.model.Eac3DynamicRangeCompressionRf);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder lfeControl(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder lfeControl(software.amazon.awssdk.services.mediaconvert.model.Eac3LfeControl);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder lfeFilter(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder lfeFilter(software.amazon.awssdk.services.mediaconvert.model.Eac3LfeFilter);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder loRoCenterMixLevel(java.lang.Double);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder loRoSurroundMixLevel(java.lang.Double);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder ltRtCenterMixLevel(java.lang.Double);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder ltRtSurroundMixLevel(java.lang.Double);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder metadataControl(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder metadataControl(software.amazon.awssdk.services.mediaconvert.model.Eac3MetadataControl);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder passthroughControl(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder passthroughControl(software.amazon.awssdk.services.mediaconvert.model.Eac3PassthroughControl);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder phaseControl(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder phaseControl(software.amazon.awssdk.services.mediaconvert.model.Eac3PhaseControl);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder sampleRate(java.lang.Integer);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder stereoDownmix(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder stereoDownmix(software.amazon.awssdk.services.mediaconvert.model.Eac3StereoDownmix);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder surroundExMode(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder surroundExMode(software.amazon.awssdk.services.mediaconvert.model.Eac3SurroundExMode);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder surroundMode(java.lang.String);

  public abstract software.amazon.awssdk.services.mediaconvert.model.Eac3Settings$Builder surroundMode(software.amazon.awssdk.services.mediaconvert.model.Eac3SurroundMode);
}
