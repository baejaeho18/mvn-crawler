Compiled from "CollectionPager.java"
public class edu.internet2.middleware.grouper.ui.util.CollectionPager implements java.io.Serializable {
  private java.util.Collection alwaysShowCollection;

  private java.util.Collection collection;

  private java.util.HashMap params;

  private int count;

  private int pageSize;

  private int start;

  private boolean complete;

  private java.lang.String startStr;

  private java.lang.String pageSizeStr;

  private java.lang.String target;

  public java.lang.String getTarget();
    Code:
       0: aload_0
       1: getfield      #1                  // Field target:Ljava/lang/String;
       4: areturn

  public void setTarget(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field target:Ljava/lang/String;
       5: return

  public edu.internet2.middleware.grouper.ui.util.CollectionPager(java.util.Collection, java.util.Collection, int, java.lang.String, int, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field params:Ljava/util/HashMap;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field complete:Z
      20: aload_0
      21: ldc           #7                  // String start
      23: putfield      #8                  // Field startStr:Ljava/lang/String;
      26: aload_0
      27: ldc           #9                  // String pageSize
      29: putfield      #10                 // Field pageSizeStr:Ljava/lang/String;
      32: aload_0
      33: ldc           #11                 // String
      35: putfield      #1                  // Field target:Ljava/lang/String;
      38: aload_0
      39: aload_1
      40: putfield      #12                 // Field alwaysShowCollection:Ljava/util/Collection;
      43: aload         4
      45: ifnull        54
      48: aload_0
      49: aload         4
      51: putfield      #8                  // Field startStr:Ljava/lang/String;
      54: aload         6
      56: ifnull        65
      59: aload_0
      60: aload         6
      62: putfield      #10                 // Field pageSizeStr:Ljava/lang/String;
      65: aload_0
      66: aload_2
      67: putfield      #13                 // Field collection:Ljava/util/Collection;
      70: aload_0
      71: iload_3
      72: putfield      #14                 // Field count:I
      75: aload_0
      76: iload         5
      78: putfield      #15                 // Field start:I
      81: aload_0
      82: iload         7
      84: putfield      #16                 // Field pageSize:I
      87: aload_0
      88: getfield      #5                  // Field params:Ljava/util/HashMap;
      91: aload_0
      92: getfield      #10                 // Field pageSizeStr:Ljava/lang/String;
      95: new           #17                 // class java/lang/Integer
      98: dup
      99: iload         7
     101: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
     104: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload_0
     109: getfield      #5                  // Field params:Ljava/util/HashMap;
     112: aload_0
     113: getfield      #8                  // Field startStr:Ljava/lang/String;
     116: new           #17                 // class java/lang/Integer
     119: dup
     120: iload         5
     122: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
     125: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: iload_3
     130: aload_2
     131: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.size:()I
     136: if_icmpne     144
     139: aload_0
     140: iconst_1
     141: putfield      #6                  // Field complete:Z
     144: return

  public boolean isNext();
    Code:
       0: aload_0
       1: getfield      #15                 // Field start:I
       4: aload_0
       5: getfield      #16                 // Field pageSize:I
       8: iadd
       9: aload_0
      10: getfield      #14                 // Field count:I
      13: if_icmplt     18
      16: iconst_0
      17: ireturn
      18: iconst_1
      19: ireturn

  public boolean isPrev();
    Code:
       0: aload_0
       1: getfield      #15                 // Field start:I
       4: iconst_1
       5: if_icmpgt     10
       8: iconst_0
       9: ireturn
      10: iconst_1
      11: ireturn

  public int getNextStart();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isNext:()Z
       4: ifeq          17
       7: aload_0
       8: getfield      #15                 // Field start:I
      11: aload_0
      12: getfield      #16                 // Field pageSize:I
      15: iadd
      16: ireturn
      17: aload_0
      18: getfield      #15                 // Field start:I
      21: ireturn

  public int getPrevStart();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method isPrev:()Z
       4: ifeq          17
       7: aload_0
       8: getfield      #15                 // Field start:I
      11: aload_0
      12: getfield      #16                 // Field pageSize:I
      15: isub
      16: ireturn
      17: iconst_1
      18: ireturn

  public int getLast();
    Code:
       0: aload_0
       1: getfield      #15                 // Field start:I
       4: aload_0
       5: getfield      #16                 // Field pageSize:I
       8: iadd
       9: istore_1
      10: iload_1
      11: aload_0
      12: getfield      #14                 // Field count:I
      15: if_icmple     23
      18: aload_0
      19: getfield      #14                 // Field count:I
      22: ireturn
      23: iload_1
      24: ireturn

  public java.util.Map getNextParams();
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_0
       5: getfield      #8                  // Field startStr:Ljava/lang/String;
       8: new           #17                 // class java/lang/Integer
      11: dup
      12: aload_0
      13: invokevirtual #23                 // Method getNextStart:()I
      16: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      19: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: getfield      #5                  // Field params:Ljava/util/HashMap;
      27: invokevirtual #24                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
      30: checkcast     #25                 // class java/util/Map
      33: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      36: areturn

  public java.util.Map getPrevParams();
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_0
       5: getfield      #8                  // Field startStr:Ljava/lang/String;
       8: new           #17                 // class java/lang/Integer
      11: dup
      12: aload_0
      13: invokevirtual #27                 // Method getPrevStart:()I
      16: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      19: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: getfield      #5                  // Field params:Ljava/util/HashMap;
      27: invokevirtual #24                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
      30: checkcast     #25                 // class java/util/Map
      33: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      36: areturn

  public java.util.Map getRestartParams();
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_0
       5: getfield      #8                  // Field startStr:Ljava/lang/String;
       8: new           #17                 // class java/lang/Integer
      11: dup
      12: iconst_0
      13: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      16: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getfield      #5                  // Field params:Ljava/util/HashMap;
      24: invokevirtual #24                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
      27: checkcast     #25                 // class java/util/Map
      30: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      33: areturn

  public java.util.Collection getCollection();
    Code:
       0: aload_0
       1: getfield      #12                 // Field alwaysShowCollection:Ljava/util/Collection;
       4: invokestatic  #28                 // Method edu/internet2/middleware/grouper/util/GrouperUtil.length:(Ljava/lang/Object;)I
       7: ifne          15
      10: aload_0
      11: invokespecial #29                 // Method getCollectionHelper:()Ljava/util/Collection;
      14: areturn
      15: new           #30                 // class java/util/ArrayList
      18: dup
      19: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      22: astore_1
      23: aload_1
      24: aload_0
      25: getfield      #12                 // Field alwaysShowCollection:Ljava/util/Collection;
      28: invokevirtual #32                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      31: pop
      32: aload_1
      33: aload_0
      34: invokespecial #29                 // Method getCollectionHelper:()Ljava/util/Collection;
      37: invokevirtual #32                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      40: pop
      41: aload_1
      42: areturn

  private java.util.Collection getCollectionHelper();
    Code:
       0: aload_0
       1: getfield      #6                  // Field complete:Z
       4: ifne          12
       7: aload_0
       8: getfield      #13                 // Field collection:Ljava/util/Collection;
      11: areturn
      12: aload_0
      13: getfield      #13                 // Field collection:Ljava/util/Collection;
      16: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      21: astore_1
      22: new           #30                 // class java/util/ArrayList
      25: dup
      26: aload_1
      27: invokestatic  #34                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      30: aload_0
      31: getfield      #15                 // Field start:I
      34: aload_0
      35: invokevirtual #35                 // Method getLast:()I
      38: invokeinterface #36,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      43: invokespecial #37                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      46: areturn

  public int getCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field count:I
       4: ireturn

  public int getPageSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pageSize:I
       4: ireturn

  public java.util.HashMap getParams();
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: areturn

  public void setCollection(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field collection:Ljava/util/Collection;
       5: return

  public void setCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field count:I
       5: return

  public void setPageSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field pageSize:I
       5: return

  public void setParam(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public void setParams(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #38                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
       8: return

  public int getStart();
    Code:
       0: aload_0
       1: getfield      #15                 // Field start:I
       4: ireturn

  public int getStart1();
    Code:
       0: aload_0
       1: getfield      #15                 // Field start:I
       4: iconst_1
       5: iadd
       6: ireturn

  public void setPageSizeStr(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_0
       5: getfield      #10                 // Field pageSizeStr:Ljava/lang/String;
       8: invokevirtual #39                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_0
      13: getfield      #5                  // Field params:Ljava/util/HashMap;
      16: aload_0
      17: getfield      #10                 // Field pageSizeStr:Ljava/lang/String;
      20: invokevirtual #40                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: aload_1
      26: putfield      #10                 // Field pageSizeStr:Ljava/lang/String;
      29: aload_0
      30: getfield      #5                  // Field params:Ljava/util/HashMap;
      33: aload_1
      34: aload_2
      35: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: return

  public void setStartStr(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field params:Ljava/util/HashMap;
       4: aload_0
       5: getfield      #8                  // Field startStr:Ljava/lang/String;
       8: invokevirtual #39                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_0
      13: getfield      #5                  // Field params:Ljava/util/HashMap;
      16: aload_0
      17: getfield      #8                  // Field startStr:Ljava/lang/String;
      20: invokevirtual #40                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: aload_1
      26: putfield      #8                  // Field startStr:Ljava/lang/String;
      29: aload_0
      30: getfield      #5                  // Field params:Ljava/util/HashMap;
      33: aload_1
      34: aload_2
      35: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: return
}
