Compiled from "RestOperations.java"
public interface org.springframework.web.client.RestOperations {
  public abstract <T> T getForObject(java.lang.String, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> T getForObject(java.lang.String, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> T getForObject(java.net.URI, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> getForEntity(java.lang.String, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> getForEntity(java.lang.String, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> getForEntity(java.net.URI, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.http.HttpHeaders headForHeaders(java.lang.String, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.http.HttpHeaders headForHeaders(java.lang.String, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.http.HttpHeaders headForHeaders(java.net.URI) throws org.springframework.web.client.RestClientException;

  public abstract java.net.URI postForLocation(java.lang.String, java.lang.Object, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract java.net.URI postForLocation(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract java.net.URI postForLocation(java.net.URI, java.lang.Object) throws org.springframework.web.client.RestClientException;

  public abstract <T> T postForObject(java.lang.String, java.lang.Object, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> T postForObject(java.lang.String, java.lang.Object, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> T postForObject(java.net.URI, java.lang.Object, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> postForEntity(java.lang.String, java.lang.Object, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> postForEntity(java.lang.String, java.lang.Object, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> postForEntity(java.net.URI, java.lang.Object, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract void put(java.lang.String, java.lang.Object, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract void put(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract void put(java.net.URI, java.lang.Object) throws org.springframework.web.client.RestClientException;

  public abstract <T> T patchForObject(java.lang.String, java.lang.Object, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> T patchForObject(java.lang.String, java.lang.Object, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> T patchForObject(java.net.URI, java.lang.Object, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract void delete(java.lang.String, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract void delete(java.lang.String, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract void delete(java.net.URI) throws org.springframework.web.client.RestClientException;

  public abstract java.util.Set<org.springframework.http.HttpMethod> optionsForAllow(java.lang.String, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract java.util.Set<org.springframework.http.HttpMethod> optionsForAllow(java.lang.String, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract java.util.Set<org.springframework.http.HttpMethod> optionsForAllow(java.net.URI) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, org.springframework.core.ParameterizedTypeReference<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, org.springframework.core.ParameterizedTypeReference<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, org.springframework.core.ParameterizedTypeReference<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(org.springframework.http.RequestEntity<?>, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.http.ResponseEntity<T> exchange(org.springframework.http.RequestEntity<?>, org.springframework.core.ParameterizedTypeReference<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> T execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> T execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> T execute(java.net.URI, org.springframework.http.HttpMethod, org.springframework.web.client.RequestCallback, org.springframework.web.client.ResponseExtractor<T>) throws org.springframework.web.client.RestClientException;
}
