Compiled from "WriteResultPublisher.java"
final class org.springframework.http.server.reactive.WriteResultPublisher$State$2 extends org.springframework.http.server.reactive.WriteResultPublisher$State {
  org.springframework.http.server.reactive.WriteResultPublisher$State$2(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/springframework/http/server/reactive/WriteResultPublisher$State."<init>":(Ljava/lang/String;ILorg/springframework/http/server/reactive/WriteResultPublisher$1;)V
       7: return

  void request(org.springframework.http.server.reactive.WriteResultPublisher, long);
    Code:
       0: lload_2
       1: invokestatic  #2                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: pop
       5: return

  void publishComplete(org.springframework.http.server.reactive.WriteResultPublisher);
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$602:(Lorg/springframework/http/server/reactive/WriteResultPublisher;Z)Z
       5: pop
       6: getstatic     #4                  // Field org/springframework/http/server/reactive/WriteResultPublisher$State.SUBSCRIBED:Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
       9: aload_1
      10: invokestatic  #5                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$200:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
      13: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      16: invokevirtual #7                  // Method org/springframework/http/server/reactive/WriteResultPublisher$State.equals:(Ljava/lang/Object;)Z
      19: ifeq          36
      22: aload_1
      23: invokestatic  #5                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$200:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
      26: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      29: checkcast     #8                  // class org/springframework/http/server/reactive/WriteResultPublisher$State
      32: aload_1
      33: invokevirtual #9                  // Method org/springframework/http/server/reactive/WriteResultPublisher$State.publishComplete:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)V
      36: return

  void publishError(org.springframework.http.server.reactive.WriteResultPublisher, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #10                 // Method org/springframework/http/server/reactive/WriteResultPublisher.access$702:(Lorg/springframework/http/server/reactive/WriteResultPublisher;Ljava/lang/Throwable;)Ljava/lang/Throwable;
       5: pop
       6: getstatic     #4                  // Field org/springframework/http/server/reactive/WriteResultPublisher$State.SUBSCRIBED:Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
       9: aload_1
      10: invokestatic  #5                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$200:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
      13: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      16: invokevirtual #7                  // Method org/springframework/http/server/reactive/WriteResultPublisher$State.equals:(Ljava/lang/Object;)Z
      19: ifeq          37
      22: aload_1
      23: invokestatic  #5                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$200:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
      26: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      29: checkcast     #8                  // class org/springframework/http/server/reactive/WriteResultPublisher$State
      32: aload_1
      33: aload_2
      34: invokevirtual #11                 // Method org/springframework/http/server/reactive/WriteResultPublisher$State.publishError:(Lorg/springframework/http/server/reactive/WriteResultPublisher;Ljava/lang/Throwable;)V
      37: return
}
