Compiled from "ClientDefaultCodecsImpl.java"
class org.springframework.http.codec.support.ClientDefaultCodecsImpl extends org.springframework.http.codec.support.BaseDefaultCodecs implements org.springframework.http.codec.ClientCodecConfigurer$ClientDefaultCodecs {
  private org.springframework.http.codec.support.ClientDefaultCodecsImpl$DefaultMultipartCodecs multipartCodecs;

  private org.springframework.core.codec.Decoder<?> sseDecoder;

  private java.util.function.Supplier<java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>> partWritersSupplier;

  org.springframework.http.codec.support.ClientDefaultCodecsImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/codec/support/BaseDefaultCodecs."<init>":()V
       4: return

  org.springframework.http.codec.support.ClientDefaultCodecsImpl(org.springframework.http.codec.support.ClientDefaultCodecsImpl);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/http/codec/support/BaseDefaultCodecs."<init>":(Lorg/springframework/http/codec/support/BaseDefaultCodecs;)V
       5: aload_0
       6: aload_1
       7: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      10: ifnull        27
      13: new           #4                  // class org/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs
      16: dup
      17: aload_1
      18: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      21: invokespecial #5                  // Method org/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs."<init>":(Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;)V
      24: goto          28
      27: aconst_null
      28: putfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      31: aload_0
      32: aload_1
      33: getfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
      36: putfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
      39: return

  void setPartWritersSupplier(java.util.function.Supplier<java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field partWritersSupplier:Ljava/util/function/Supplier;
       5: return

  public org.springframework.http.codec.ClientCodecConfigurer$MultipartCodecs multipartCodecs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
       4: ifnonnull     18
       7: aload_0
       8: new           #4                  // class org/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs
      11: dup
      12: invokespecial #8                  // Method org/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs."<init>":()V
      15: putfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      18: aload_0
      19: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      22: areturn

  public void serverSentEventDecoder(org.springframework.core.codec.Decoder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
       5: return

  public org.springframework.http.codec.support.ClientDefaultCodecsImpl clone();
    Code:
       0: new           #9                  // class org/springframework/http/codec/support/ClientDefaultCodecsImpl
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      13: putfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      16: aload_1
      17: aload_0
      18: getfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
      21: putfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
      24: aload_1
      25: aload_0
      26: getfield      #7                  // Field partWritersSupplier:Ljava/util/function/Supplier;
      29: putfield      #7                  // Field partWritersSupplier:Ljava/util/function/Supplier;
      32: aload_1
      33: areturn

  protected void extendObjectReaders(java.util.List<org.springframework.http.codec.HttpMessageReader<?>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
       4: ifnull        14
       7: aload_0
       8: getfield      #6                  // Field sseDecoder:Lorg/springframework/core/codec/Decoder;
      11: goto          28
      14: getstatic     #11                 // Field jackson2Present:Z
      17: ifeq          27
      20: aload_0
      21: invokevirtual #12                 // Method getJackson2JsonDecoder:()Lorg/springframework/core/codec/Decoder;
      24: goto          28
      27: aconst_null
      28: astore_2
      29: aload_0
      30: aload_1
      31: new           #13                 // class org/springframework/http/codec/ServerSentEventHttpMessageReader
      34: dup
      35: aload_2
      36: invokespecial #14                 // Method org/springframework/http/codec/ServerSentEventHttpMessageReader."<init>":(Lorg/springframework/core/codec/Decoder;)V
      39: invokevirtual #15                 // Method addCodec:(Ljava/util/List;Ljava/lang/Object;)V
      42: return

  protected void extendTypedWriters(java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #16                 // class org/springframework/http/codec/multipart/MultipartHttpMessageWriter
       5: dup
       6: aload_0
       7: invokespecial #17                 // Method getPartWriters:()Ljava/util/List;
      10: new           #18                 // class org/springframework/http/codec/FormHttpMessageWriter
      13: dup
      14: invokespecial #19                 // Method org/springframework/http/codec/FormHttpMessageWriter."<init>":()V
      17: invokespecial #20                 // Method org/springframework/http/codec/multipart/MultipartHttpMessageWriter."<init>":(Ljava/util/List;Lorg/springframework/http/codec/HttpMessageWriter;)V
      20: invokevirtual #15                 // Method addCodec:(Ljava/util/List;Ljava/lang/Object;)V
      23: return

  private java.util.List<org.springframework.http.codec.HttpMessageWriter<?>> getPartWriters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
       4: ifnull        15
       7: aload_0
       8: getfield      #3                  // Field multipartCodecs:Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs;
      11: invokevirtual #21                 // Method org/springframework/http/codec/support/ClientDefaultCodecsImpl$DefaultMultipartCodecs.getWriters:()Ljava/util/List;
      14: areturn
      15: aload_0
      16: getfield      #7                  // Field partWritersSupplier:Ljava/util/function/Supplier;
      19: ifnull        35
      22: aload_0
      23: getfield      #7                  // Field partWritersSupplier:Ljava/util/function/Supplier;
      26: invokeinterface #22,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      31: checkcast     #23                 // class java/util/List
      34: areturn
      35: invokestatic  #24                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      38: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method clone:()Lorg/springframework/http/codec/support/ClientDefaultCodecsImpl;
       4: areturn
}
