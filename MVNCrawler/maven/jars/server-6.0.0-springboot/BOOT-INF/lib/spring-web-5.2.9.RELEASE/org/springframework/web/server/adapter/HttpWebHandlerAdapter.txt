Compiled from "HttpWebHandlerAdapter.java"
public class org.springframework.web.server.adapter.HttpWebHandlerAdapter extends org.springframework.web.server.handler.WebHandlerDecorator implements org.springframework.http.server.reactive.HttpHandler {
  private static final java.lang.String DISCONNECTED_CLIENT_LOG_CATEGORY;

  private static final java.util.Set<java.lang.String> DISCONNECTED_CLIENT_EXCEPTIONS;

  private static final org.apache.commons.logging.Log logger;

  private static final org.apache.commons.logging.Log lostClientLogger;

  private org.springframework.web.server.session.WebSessionManager sessionManager;

  private org.springframework.http.codec.ServerCodecConfigurer codecConfigurer;

  private org.springframework.web.server.i18n.LocaleContextResolver localeContextResolver;

  private org.springframework.web.server.adapter.ForwardedHeaderTransformer forwardedHeaderTransformer;

  private org.springframework.context.ApplicationContext applicationContext;

  private boolean enableLoggingRequestDetails;

  public org.springframework.web.server.adapter.HttpWebHandlerAdapter(org.springframework.web.server.WebHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/web/server/handler/WebHandlerDecorator."<init>":(Lorg/springframework/web/server/WebHandler;)V
       5: aload_0
       6: new           #2                  // class org/springframework/web/server/session/DefaultWebSessionManager
       9: dup
      10: invokespecial #3                  // Method org/springframework/web/server/session/DefaultWebSessionManager."<init>":()V
      13: putfield      #4                  // Field sessionManager:Lorg/springframework/web/server/session/WebSessionManager;
      16: aload_0
      17: invokestatic  #5                  // InterfaceMethod org/springframework/http/codec/ServerCodecConfigurer.create:()Lorg/springframework/http/codec/ServerCodecConfigurer;
      20: putfield      #6                  // Field codecConfigurer:Lorg/springframework/http/codec/ServerCodecConfigurer;
      23: aload_0
      24: new           #7                  // class org/springframework/web/server/i18n/AcceptHeaderLocaleContextResolver
      27: dup
      28: invokespecial #8                  // Method org/springframework/web/server/i18n/AcceptHeaderLocaleContextResolver."<init>":()V
      31: putfield      #9                  // Field localeContextResolver:Lorg/springframework/web/server/i18n/LocaleContextResolver;
      34: aload_0
      35: iconst_0
      36: putfield      #10                 // Field enableLoggingRequestDetails:Z
      39: return

  public void setSessionManager(org.springframework.web.server.session.WebSessionManager);
    Code:
       0: aload_1
       1: ldc           #11                 // String WebSessionManager must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field sessionManager:Lorg/springframework/web/server/session/WebSessionManager;
      11: return

  public org.springframework.web.server.session.WebSessionManager getSessionManager();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionManager:Lorg/springframework/web/server/session/WebSessionManager;
       4: areturn

  public void setCodecConfigurer(org.springframework.http.codec.ServerCodecConfigurer);
    Code:
       0: aload_1
       1: ldc           #13                 // String ServerCodecConfigurer is required
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field codecConfigurer:Lorg/springframework/http/codec/ServerCodecConfigurer;
      11: aload_0
      12: iconst_0
      13: putfield      #10                 // Field enableLoggingRequestDetails:Z
      16: aload_0
      17: getfield      #6                  // Field codecConfigurer:Lorg/springframework/http/codec/ServerCodecConfigurer;
      20: invokeinterface #14,  1           // InterfaceMethod org/springframework/http/codec/ServerCodecConfigurer.getReaders:()Ljava/util/List;
      25: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      30: ldc           #16                 // class org/springframework/http/codec/LoggingCodecSupport
      32: dup
      33: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: pop
      37: invokedynamic #18,  0             // InvokeDynamic #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      42: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      47: aload_0
      48: invokedynamic #20,  0             // InvokeDynamic #1:accept:(Lorg/springframework/web/server/adapter/HttpWebHandlerAdapter;)Ljava/util/function/Consumer;
      53: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      58: return

  public org.springframework.http.codec.ServerCodecConfigurer getCodecConfigurer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field codecConfigurer:Lorg/springframework/http/codec/ServerCodecConfigurer;
       4: areturn

  public void setLocaleContextResolver(org.springframework.web.server.i18n.LocaleContextResolver);
    Code:
       0: aload_1
       1: ldc           #22                 // String LocaleContextResolver is required
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field localeContextResolver:Lorg/springframework/web/server/i18n/LocaleContextResolver;
      11: return

  public org.springframework.web.server.i18n.LocaleContextResolver getLocaleContextResolver();
    Code:
       0: aload_0
       1: getfield      #9                  // Field localeContextResolver:Lorg/springframework/web/server/i18n/LocaleContextResolver;
       4: areturn

  public void setForwardedHeaderTransformer(org.springframework.web.server.adapter.ForwardedHeaderTransformer);
    Code:
       0: aload_1
       1: ldc           #23                 // String ForwardedHeaderTransformer is required
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #24                 // Field forwardedHeaderTransformer:Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;
      11: return

  public org.springframework.web.server.adapter.ForwardedHeaderTransformer getForwardedHeaderTransformer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field forwardedHeaderTransformer:Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;
       4: areturn

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public org.springframework.context.ApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #25                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: areturn

  public void afterPropertiesSet();
    Code:
       0: getstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          65
      11: aload_0
      12: getfield      #10                 // Field enableLoggingRequestDetails:Z
      15: ifeq          23
      18: ldc           #28                 // String shown which may lead to unsafe logging of potentially sensitive data
      20: goto          25
      23: ldc           #29                 // String masked to prevent unsafe logging of potentially sensitive data
      25: astore_1
      26: getstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
      29: new           #30                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #32                 // String enableLoggingRequestDetails=\'
      38: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #10                 // Field enableLoggingRequestDetails:Z
      45: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      48: ldc           #35                 // String \': form data and headers will be
      50: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      65: return

  public reactor.core.publisher.Mono<java.lang.Void> handle(org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: aload_0
       1: getfield      #24                 // Field forwardedHeaderTransformer:Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;
       4: ifnull        16
       7: aload_0
       8: getfield      #24                 // Field forwardedHeaderTransformer:Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;
      11: aload_1
      12: invokevirtual #38                 // Method org/springframework/web/server/adapter/ForwardedHeaderTransformer.apply:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
      15: astore_1
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #39                 // Method createExchange:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lorg/springframework/web/server/ServerWebExchange;
      22: astore_3
      23: getstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
      26: aload_0
      27: aload_3
      28: invokedynamic #40,  0             // InvokeDynamic #2:apply:(Lorg/springframework/web/server/adapter/HttpWebHandlerAdapter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      33: invokestatic  #41                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      36: aload_0
      37: invokevirtual #42                 // Method getDelegate:()Lorg/springframework/web/server/WebHandler;
      40: aload_3
      41: invokeinterface #43,  2           // InterfaceMethod org/springframework/web/server/WebHandler.handle:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      46: aload_0
      47: aload_3
      48: invokedynamic #44,  0             // InvokeDynamic #3:accept:(Lorg/springframework/web/server/adapter/HttpWebHandlerAdapter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Consumer;
      53: invokevirtual #45                 // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      56: aload_0
      57: aload_3
      58: invokedynamic #46,  0             // InvokeDynamic #4:apply:(Lorg/springframework/web/server/adapter/HttpWebHandlerAdapter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      63: invokevirtual #47                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      66: aload_2
      67: dup
      68: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      71: pop
      72: invokedynamic #48,  0             // InvokeDynamic #5:get:(Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/function/Supplier;
      77: invokestatic  #49                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      80: invokevirtual #50                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      83: areturn

  protected org.springframework.web.server.ServerWebExchange createExchange(org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: new           #51                 // class org/springframework/web/server/adapter/DefaultServerWebExchange
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #4                  // Field sessionManager:Lorg/springframework/web/server/session/WebSessionManager;
      10: aload_0
      11: invokevirtual #52                 // Method getCodecConfigurer:()Lorg/springframework/http/codec/ServerCodecConfigurer;
      14: aload_0
      15: invokevirtual #53                 // Method getLocaleContextResolver:()Lorg/springframework/web/server/i18n/LocaleContextResolver;
      18: aload_0
      19: getfield      #25                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      22: invokespecial #54                 // Method org/springframework/web/server/adapter/DefaultServerWebExchange."<init>":(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Lorg/springframework/web/server/session/WebSessionManager;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/web/server/i18n/LocaleContextResolver;Lorg/springframework/context/ApplicationContext;)V
      25: areturn

  protected java.lang.String formatRequest(org.springframework.http.server.reactive.ServerHttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #55,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getURI:()Ljava/net/URI;
       6: invokevirtual #56                 // Method java/net/URI.getRawQuery:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: invokestatic  #57                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      14: ifeq          39
      17: new           #30                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #58                 // String ?
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: goto          41
      39: ldc           #59                 // String
      41: astore_3
      42: new           #30                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #60                 // String HTTP
      51: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokeinterface #61,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
      60: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #63                 // String  \"
      65: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokeinterface #64,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getPath:()Lorg/springframework/http/server/RequestPath;
      74: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #65                 // String \"
      83: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  private void logResponse(org.springframework.web.server.ServerWebExchange);
    Code:
       0: getstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
       3: aload_0
       4: aload_1
       5: invokedynamic #66,  0             // InvokeDynamic #6:apply:(Lorg/springframework/web/server/adapter/HttpWebHandlerAdapter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      10: invokestatic  #41                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      13: return

  private java.lang.String formatHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: getfield      #10                 // Field enableLoggingRequestDetails:Z
       4: ifeq          14
       7: aload_1
       8: invokevirtual #67                 // Method org/springframework/http/HttpHeaders.toString:()Ljava/lang/String;
      11: goto          28
      14: aload_1
      15: invokevirtual #68                 // Method org/springframework/http/HttpHeaders.isEmpty:()Z
      18: ifeq          26
      21: ldc           #69                 // String {}
      23: goto          28
      26: ldc           #70                 // String {masked}
      28: areturn

  private reactor.core.publisher.Mono<java.lang.Void> handleUnresolvedError(org.springframework.web.server.ServerWebExchange, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #71,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       6: astore_3
       7: aload_1
       8: invokeinterface #72,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      13: astore        4
      15: aload_1
      16: invokeinterface #73,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getLogPrefix:()Ljava/lang/String;
      21: astore        5
      23: aload         4
      25: getstatic     #74                 // Field org/springframework/http/HttpStatus.INTERNAL_SERVER_ERROR:Lorg/springframework/http/HttpStatus;
      28: invokeinterface #75,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setStatusCode:(Lorg/springframework/http/HttpStatus;)Z
      33: ifeq          77
      36: getstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
      39: new           #30                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      46: aload         5
      48: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #76                 // String 500 Server Error for
      53: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: aload_3
      58: invokevirtual #77                 // Method formatRequest:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
      61: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: aload_2
      68: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      73: invokestatic  #79                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      76: areturn
      77: aload_0
      78: aload_2
      79: invokespecial #80                 // Method isDisconnectedClientError:(Ljava/lang/Throwable;)Z
      82: ifeq          190
      85: getstatic     #81                 // Field lostClientLogger:Lorg/apache/commons/logging/Log;
      88: invokeinterface #82,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      93: ifeq          128
      96: getstatic     #81                 // Field lostClientLogger:Lorg/apache/commons/logging/Log;
      99: new           #30                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     106: aload         5
     108: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc           #83                 // String Client went away
     113: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: aload_2
     120: invokeinterface #84,  3           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     125: goto          186
     128: getstatic     #81                 // Field lostClientLogger:Lorg/apache/commons/logging/Log;
     131: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     136: ifeq          186
     139: getstatic     #81                 // Field lostClientLogger:Lorg/apache/commons/logging/Log;
     142: new           #30                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     149: aload         5
     151: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #85                 // String Client went away:
     156: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_2
     160: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: ldc           #86                 // String  (stacktrace at TRACE level for \'
     165: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: ldc           #88                 // String org.springframework.web.server.DisconnectedClient
     170: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: ldc           #89                 // String \')
     175: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     186: invokestatic  #79                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
     189: areturn
     190: getstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
     193: new           #30                 // class java/lang/StringBuilder
     196: dup
     197: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     200: aload         5
     202: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: ldc           #90                 // String Error [
     207: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: aload_2
     211: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     214: ldc           #91                 // String ] for
     216: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload_0
     220: aload_3
     221: invokevirtual #77                 // Method formatRequest:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
     224: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #92                 // String , but ServerHttpResponse already committed (
     229: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload         4
     234: invokeinterface #93,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getStatusCode:()Lorg/springframework/http/HttpStatus;
     239: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     242: ldc           #94                 // String )
     244: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     250: invokeinterface #95,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     255: aload_2
     256: invokestatic  #96                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     259: areturn

  private boolean isDisconnectedClientError(java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #97                 // Method org/springframework/core/NestedExceptionUtils.getMostSpecificCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       4: invokevirtual #98                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ifnull        37
      12: aload_2
      13: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      16: astore_3
      17: aload_3
      18: ldc           #100                // String broken pipe
      20: invokevirtual #101                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      23: ifne          35
      26: aload_3
      27: ldc           #102                // String connection reset by peer
      29: invokevirtual #101                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: getstatic     #103                // Field DISCONNECTED_CLIENT_EXCEPTIONS:Ljava/util/Set;
      40: aload_1
      41: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: invokevirtual #104                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      47: invokeinterface #105,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      52: ireturn

  private java.lang.String lambda$logResponse$4(org.springframework.web.server.ServerWebExchange, java.lang.Boolean);
    Code:
       0: aload_1
       1: invokeinterface #72,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
       6: invokeinterface #93,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getStatusCode:()Lorg/springframework/http/HttpStatus;
      11: astore_3
      12: new           #30                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_1
      20: invokeinterface #73,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getLogPrefix:()Ljava/lang/String;
      25: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #106                // String Completed
      30: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_3
      34: ifnull        41
      37: aload_3
      38: goto          43
      41: ldc           #107                // String 200 OK
      43: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #108                // Method java/lang/Boolean.booleanValue:()Z
      50: ifeq          89
      53: new           #30                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #109                // String , headers=
      62: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: aload_1
      67: invokeinterface #72,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      72: invokeinterface #110,  1          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      77: invokespecial #111                // Method formatHeaders:(Lorg/springframework/http/HttpHeaders;)Ljava/lang/String;
      80: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: goto          91
      89: ldc           #59                 // String
      91: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn

  private reactor.core.publisher.Mono lambda$handle$3(org.springframework.web.server.ServerWebExchange, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #112                // Method handleUnresolvedError:(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
       6: areturn

  private void lambda$handle$2(org.springframework.web.server.ServerWebExchange, java.lang.Void);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #113                // Method logResponse:(Lorg/springframework/web/server/ServerWebExchange;)V
       5: return

  private java.lang.String lambda$handle$1(org.springframework.web.server.ServerWebExchange, java.lang.Boolean);
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokeinterface #73,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getLogPrefix:()Ljava/lang/String;
      13: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: aload_1
      18: invokeinterface #71,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      23: invokevirtual #77                 // Method formatRequest:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #108                // Method java/lang/Boolean.booleanValue:()Z
      33: ifeq          72
      36: new           #30                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #109                // String , headers=
      45: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: aload_1
      50: invokeinterface #71,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      55: invokeinterface #114,  1          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      60: invokespecial #111                // Method formatHeaders:(Lorg/springframework/http/HttpHeaders;)Ljava/lang/String;
      63: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: goto          74
      72: ldc           #59                 // String
      74: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  private void lambda$setCodecConfigurer$0(org.springframework.http.codec.HttpMessageReader);
    Code:
       0: aload_1
       1: checkcast     #16                 // class org/springframework/http/codec/LoggingCodecSupport
       4: invokevirtual #115                // Method org/springframework/http/codec/LoggingCodecSupport.isEnableLoggingRequestDetails:()Z
       7: ifeq          15
      10: aload_0
      11: iconst_1
      12: putfield      #10                 // Field enableLoggingRequestDetails:Z
      15: return

  static {};
    Code:
       0: new           #116                // class java/util/HashSet
       3: dup
       4: iconst_4
       5: anewarray     #117                // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #118                // String AbortedException
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #119                // String ClientAbortException
      17: aastore
      18: dup
      19: iconst_2
      20: ldc           #120                // String EOFException
      22: aastore
      23: dup
      24: iconst_3
      25: ldc           #121                // String EofException
      27: aastore
      28: invokestatic  #122                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      31: invokespecial #123                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      34: putstatic     #103                // Field DISCONNECTED_CLIENT_EXCEPTIONS:Ljava/util/Set;
      37: ldc           #87                 // class org/springframework/web/server/adapter/HttpWebHandlerAdapter
      39: invokestatic  #124                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      42: putstatic     #26                 // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #88                 // String org.springframework.web.server.DisconnectedClient
      47: invokestatic  #125                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;
      50: putstatic     #81                 // Field lostClientLogger:Lorg/apache/commons/logging/Log;
      53: return
}
