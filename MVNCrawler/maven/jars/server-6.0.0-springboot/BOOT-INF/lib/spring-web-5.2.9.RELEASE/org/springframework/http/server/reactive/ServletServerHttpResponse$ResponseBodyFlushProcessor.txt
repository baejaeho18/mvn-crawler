Compiled from "ServletServerHttpResponse.java"
class org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor extends org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<org.springframework.core.io.buffer.DataBuffer> {
  final org.springframework.http.server.reactive.ServletServerHttpResponse this$0;

  public org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       5: aload_0
       6: aload_1
       7: invokestatic  #2                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$400:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Lorg/springframework/http/server/reactive/ServletServerHttpRequest;
      10: invokevirtual #3                  // Method org/springframework/http/server/reactive/ServletServerHttpRequest.getLogPrefix:()Ljava/lang/String;
      13: invokespecial #4                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor."<init>":(Ljava/lang/String;)V
      16: return

  protected org.reactivestreams.Processor<? super org.springframework.core.io.buffer.DataBuffer, java.lang.Void> createWriteProcessor();
    Code:
       0: new           #5                  // class org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       8: invokespecial #6                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
      16: aload_1
      17: invokestatic  #7                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$302:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;)Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;
      20: pop
      21: aload_1
      22: areturn

  protected void flush() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field rsWriteFlushLogger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          41
      11: getstatic     #8                  // Field rsWriteFlushLogger:Lorg/apache/commons/logging/Log;
      14: new           #10                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #12                 // Method getLogPrefix:()Ljava/lang/String;
      25: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #14                 // String Flush attempt
      30: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #1                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
      45: invokestatic  #17                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$500:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
      48: return

  protected boolean isWritePossible();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: invokestatic  #18                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$600:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
       7: ireturn

  protected boolean isFlushPending();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: invokestatic  #19                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$700:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
       7: ireturn
}
