Compiled from "UnsupportedMediaTypeStatusException.java"
public class org.springframework.web.server.UnsupportedMediaTypeStatusException extends org.springframework.web.server.ResponseStatusException {
  private final org.springframework.http.MediaType contentType;

  private final java.util.List<org.springframework.http.MediaType> supportedMediaTypes;

  private final org.springframework.core.ResolvableType bodyType;

  public org.springframework.web.server.UnsupportedMediaTypeStatusException(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/HttpStatus.UNSUPPORTED_MEDIA_TYPE:Lorg/springframework/http/HttpStatus;
       4: aload_1
       5: invokespecial #2                  // Method org/springframework/web/server/ResponseStatusException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
       8: aload_0
       9: aconst_null
      10: putfield      #3                  // Field contentType:Lorg/springframework/http/MediaType;
      13: aload_0
      14: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      17: putfield      #5                  // Field supportedMediaTypes:Ljava/util/List;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field bodyType:Lorg/springframework/core/ResolvableType;
      25: return

  public org.springframework.web.server.UnsupportedMediaTypeStatusException(org.springframework.http.MediaType, java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #7                  // Method "<init>":(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/core/ResolvableType;)V
       7: return

  public org.springframework.web.server.UnsupportedMediaTypeStatusException(org.springframework.http.MediaType, java.util.List<org.springframework.http.MediaType>, org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/HttpStatus.UNSUPPORTED_MEDIA_TYPE:Lorg/springframework/http/HttpStatus;
       4: aload_1
       5: aload_3
       6: invokestatic  #8                  // Method initReason:(Lorg/springframework/http/MediaType;Lorg/springframework/core/ResolvableType;)Ljava/lang/String;
       9: invokespecial #2                  // Method org/springframework/web/server/ResponseStatusException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: putfield      #3                  // Field contentType:Lorg/springframework/http/MediaType;
      17: aload_0
      18: aload_2
      19: invokestatic  #9                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      22: putfield      #5                  // Field supportedMediaTypes:Ljava/util/List;
      25: aload_0
      26: aload_3
      27: putfield      #6                  // Field bodyType:Lorg/springframework/core/ResolvableType;
      30: return

  private static java.lang.String initReason(org.springframework.http.MediaType, org.springframework.core.ResolvableType);
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String Content type \'
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: ifnull        20
      16: aload_0
      17: goto          22
      20: ldc           #14                 // String
      22: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #16                 // String \' not supported
      27: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: ifnull        59
      34: new           #10                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #17                 // String  for bodyType=
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #18                 // Method org/springframework/core/ResolvableType.toString:()Ljava/lang/String;
      50: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: goto          61
      59: ldc           #14                 // String
      61: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public org.springframework.http.MediaType getContentType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field contentType:Lorg/springframework/http/MediaType;
       4: areturn

  public java.util.List<org.springframework.http.MediaType> getSupportedMediaTypes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field supportedMediaTypes:Ljava/util/List;
       4: areturn

  public org.springframework.core.ResolvableType getBodyType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bodyType:Lorg/springframework/core/ResolvableType;
       4: areturn
}
