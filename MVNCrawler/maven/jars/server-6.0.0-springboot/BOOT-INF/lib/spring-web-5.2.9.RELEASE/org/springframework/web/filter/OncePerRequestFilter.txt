Compiled from "OncePerRequestFilter.java"
public abstract class org.springframework.web.filter.OncePerRequestFilter extends org.springframework.web.filter.GenericFilterBean {
  public static final java.lang.String ALREADY_FILTERED_SUFFIX;

  public org.springframework.web.filter.OncePerRequestFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/GenericFilterBean."<init>":()V
       4: return

  public final void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #2                  // class javax/servlet/http/HttpServletRequest
       4: ifeq          14
       7: aload_2
       8: instanceof    #3                  // class javax/servlet/http/HttpServletResponse
      11: ifne          24
      14: new           #4                  // class javax/servlet/ServletException
      17: dup
      18: ldc           #5                  // String OncePerRequestFilter just supports HTTP requests
      20: invokespecial #6                  // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: checkcast     #2                  // class javax/servlet/http/HttpServletRequest
      28: astore        4
      30: aload_2
      31: checkcast     #3                  // class javax/servlet/http/HttpServletResponse
      34: astore        5
      36: aload_0
      37: invokevirtual #7                  // Method getAlreadyFilteredAttributeName:()Ljava/lang/String;
      40: astore        6
      42: aload_1
      43: aload         6
      45: invokeinterface #8,  2            // InterfaceMethod javax/servlet/ServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      50: ifnull        57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: istore        7
      60: aload_0
      61: aload         4
      63: invokespecial #9                  // Method skipDispatch:(Ljavax/servlet/http/HttpServletRequest;)Z
      66: ifne          78
      69: aload_0
      70: aload         4
      72: invokevirtual #10                 // Method shouldNotFilter:(Ljavax/servlet/http/HttpServletRequest;)Z
      75: ifeq          89
      78: aload_3
      79: aload_1
      80: aload_2
      81: invokeinterface #11,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      86: goto          174
      89: iload         7
      91: ifeq          130
      94: getstatic     #12                 // Field javax/servlet/DispatcherType.ERROR:Ljavax/servlet/DispatcherType;
      97: aload_1
      98: invokeinterface #13,  1           // InterfaceMethod javax/servlet/ServletRequest.getDispatcherType:()Ljavax/servlet/DispatcherType;
     103: invokevirtual #14                 // Method javax/servlet/DispatcherType.equals:(Ljava/lang/Object;)Z
     106: ifeq          119
     109: aload_0
     110: aload         4
     112: aload         5
     114: aload_3
     115: invokevirtual #15                 // Method doFilterNestedErrorDispatch:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
     118: return
     119: aload_3
     120: aload_1
     121: aload_2
     122: invokeinterface #11,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     127: goto          174
     130: aload_1
     131: aload         6
     133: getstatic     #16                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     136: invokeinterface #17,  3           // InterfaceMethod javax/servlet/ServletRequest.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     141: aload_0
     142: aload         4
     144: aload         5
     146: aload_3
     147: invokevirtual #18                 // Method doFilterInternal:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
     150: aload_1
     151: aload         6
     153: invokeinterface #19,  2           // InterfaceMethod javax/servlet/ServletRequest.removeAttribute:(Ljava/lang/String;)V
     158: goto          174
     161: astore        8
     163: aload_1
     164: aload         6
     166: invokeinterface #19,  2           // InterfaceMethod javax/servlet/ServletRequest.removeAttribute:(Ljava/lang/String;)V
     171: aload         8
     173: athrow
     174: return
    Exception table:
       from    to  target type
         141   150   161   any
         161   163   161   any

  private boolean skipDispatch(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method isAsyncDispatch:(Ljavax/servlet/http/HttpServletRequest;)Z
       5: ifeq          17
       8: aload_0
       9: invokevirtual #21                 // Method shouldNotFilterAsyncDispatch:()Z
      12: ifeq          17
      15: iconst_1
      16: ireturn
      17: aload_1
      18: ldc           #23                 // String javax.servlet.error.request_uri
      20: invokeinterface #24,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      25: ifnull        37
      28: aload_0
      29: invokevirtual #25                 // Method shouldNotFilterErrorDispatch:()Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  protected boolean isAsyncDispatch(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokestatic  #26                 // Method org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager:(Ljavax/servlet/ServletRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
       4: invokevirtual #27                 // Method org/springframework/web/context/request/async/WebAsyncManager.hasConcurrentResult:()Z
       7: ireturn

  protected boolean isAsyncStarted(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokestatic  #26                 // Method org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager:(Ljavax/servlet/ServletRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
       4: invokevirtual #28                 // Method org/springframework/web/context/request/async/WebAsyncManager.isConcurrentHandlingStarted:()Z
       7: ireturn

  protected java.lang.String getAlreadyFilteredAttributeName();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getFilterName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: aload_0
      10: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #31                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: astore_1
      17: new           #32                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #36                 // String .FILTERED
      30: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  protected boolean shouldNotFilter(javax.servlet.http.HttpServletRequest) throws javax.servlet.ServletException;
    Code:
       0: iconst_0
       1: ireturn

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean shouldNotFilterErrorDispatch();
    Code:
       0: iconst_1
       1: ireturn

  protected abstract void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;

  protected void doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokeinterface #11,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
       8: return
}
