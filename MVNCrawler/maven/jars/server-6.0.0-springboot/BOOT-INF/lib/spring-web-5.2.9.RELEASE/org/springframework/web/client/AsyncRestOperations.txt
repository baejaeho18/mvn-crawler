Compiled from "AsyncRestOperations.java"
public interface org.springframework.web.client.AsyncRestOperations {
  public abstract org.springframework.web.client.RestOperations getRestOperations();

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> getForEntity(java.lang.String, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> getForEntity(java.lang.String, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> getForEntity(java.net.URI, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<org.springframework.http.HttpHeaders> headForHeaders(java.lang.String, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<org.springframework.http.HttpHeaders> headForHeaders(java.lang.String, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<org.springframework.http.HttpHeaders> headForHeaders(java.net.URI) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<java.net.URI> postForLocation(java.lang.String, org.springframework.http.HttpEntity<?>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<java.net.URI> postForLocation(java.lang.String, org.springframework.http.HttpEntity<?>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<java.net.URI> postForLocation(java.net.URI, org.springframework.http.HttpEntity<?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> postForEntity(java.lang.String, org.springframework.http.HttpEntity<?>, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> postForEntity(java.lang.String, org.springframework.http.HttpEntity<?>, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> postForEntity(java.net.URI, org.springframework.http.HttpEntity<?>, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<?> put(java.lang.String, org.springframework.http.HttpEntity<?>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<?> put(java.lang.String, org.springframework.http.HttpEntity<?>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<?> put(java.net.URI, org.springframework.http.HttpEntity<?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<?> delete(java.lang.String, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<?> delete(java.lang.String, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<?> delete(java.net.URI) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<java.util.Set<org.springframework.http.HttpMethod>> optionsForAllow(java.lang.String, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<java.util.Set<org.springframework.http.HttpMethod>> optionsForAllow(java.lang.String, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract org.springframework.util.concurrent.ListenableFuture<java.util.Set<org.springframework.http.HttpMethod>> optionsForAllow(java.net.URI) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, java.lang.Class<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, java.lang.Class<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, java.lang.Class<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, org.springframework.core.ParameterizedTypeReference<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> exchange(java.lang.String, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, org.springframework.core.ParameterizedTypeReference<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<org.springframework.http.ResponseEntity<T>> exchange(java.net.URI, org.springframework.http.HttpMethod, org.springframework.http.HttpEntity<?>, org.springframework.core.ParameterizedTypeReference<T>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<T> execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.AsyncRequestCallback, org.springframework.web.client.ResponseExtractor<T>, java.lang.Object...) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<T> execute(java.lang.String, org.springframework.http.HttpMethod, org.springframework.web.client.AsyncRequestCallback, org.springframework.web.client.ResponseExtractor<T>, java.util.Map<java.lang.String, ?>) throws org.springframework.web.client.RestClientException;

  public abstract <T> org.springframework.util.concurrent.ListenableFuture<T> execute(java.net.URI, org.springframework.http.HttpMethod, org.springframework.web.client.AsyncRequestCallback, org.springframework.web.client.ResponseExtractor<T>) throws org.springframework.web.client.RestClientException;
}
