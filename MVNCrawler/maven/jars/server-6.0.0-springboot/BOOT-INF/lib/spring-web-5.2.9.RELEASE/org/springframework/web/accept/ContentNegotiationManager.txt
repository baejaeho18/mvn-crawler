Compiled from "ContentNegotiationManager.java"
public class org.springframework.web.accept.ContentNegotiationManager implements org.springframework.web.accept.ContentNegotiationStrategy,org.springframework.web.accept.MediaTypeFileExtensionResolver {
  private final java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> strategies;

  private final java.util.Set<org.springframework.web.accept.MediaTypeFileExtensionResolver> resolvers;

  public org.springframework.web.accept.ContentNegotiationManager(org.springframework.web.accept.ContentNegotiationStrategy...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #2                  // Method "<init>":(Ljava/util/Collection;)V
       8: return

  public org.springframework.web.accept.ContentNegotiationManager(java.util.Collection<org.springframework.web.accept.ContentNegotiationStrategy>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #6                  // Field strategies:Ljava/util/List;
      15: aload_0
      16: new           #7                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #8                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #9                  // Field resolvers:Ljava/util/Set;
      26: aload_1
      27: ldc           #10                 // String At least one ContentNegotiationStrategy is expected
      29: invokestatic  #11                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      32: aload_0
      33: getfield      #6                  // Field strategies:Ljava/util/List;
      36: aload_1
      37: invokeinterface #12,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      42: pop
      43: aload_0
      44: getfield      #6                  // Field strategies:Ljava/util/List;
      47: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          96
      62: aload_2
      63: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
      71: astore_3
      72: aload_3
      73: instanceof    #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      76: ifeq          93
      79: aload_0
      80: getfield      #9                  // Field resolvers:Ljava/util/Set;
      83: aload_3
      84: checkcast     #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      87: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      92: pop
      93: goto          53
      96: return

  public org.springframework.web.accept.ContentNegotiationManager();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
       5: dup
       6: iconst_0
       7: new           #19                 // class org/springframework/web/accept/HeaderContentNegotiationStrategy
      10: dup
      11: invokespecial #20                 // Method org/springframework/web/accept/HeaderContentNegotiationStrategy."<init>":()V
      14: aastore
      15: invokespecial #21                 // Method "<init>":([Lorg/springframework/web/accept/ContentNegotiationStrategy;)V
      18: return

  public java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> getStrategies();
    Code:
       0: aload_0
       1: getfield      #6                  // Field strategies:Ljava/util/List;
       4: areturn

  public <T extends org.springframework.web.accept.ContentNegotiationStrategy> T getStrategy(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getStrategies:()Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #23                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      34: ifeq          39
      37: aload_3
      38: areturn
      39: goto          10
      42: aconst_null
      43: areturn

  public void addFileExtensionResolvers(org.springframework.web.accept.MediaTypeFileExtensionResolver...);
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvers:Ljava/util/Set;
       4: aload_1
       5: invokestatic  #24                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.util.List<org.springframework.http.MediaType> resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest) throws org.springframework.web.HttpMediaTypeNotAcceptableException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field strategies:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          57
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #25,  2           // InterfaceMethod org/springframework/web/accept/ContentNegotiationStrategy.resolveMediaTypes:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
      36: astore        4
      38: aload         4
      40: getstatic     #26                 // Field MEDIA_TYPE_ALL_LIST:Ljava/util/List;
      43: invokeinterface #27,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: goto          10
      54: aload         4
      56: areturn
      57: getstatic     #26                 // Field MEDIA_TYPE_ALL_LIST:Ljava/util/List;
      60: areturn

  public java.util.List<java.lang.String> resolveFileExtensions(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/MediaType;)Ljava/util/function/Function;
       7: invokespecial #29                 // Method doResolveExtensions:(Ljava/util/function/Function;)Ljava/util/List;
      10: areturn

  public java.util.List<java.lang.String> getAllFileExtensions();
    Code:
       0: aload_0
       1: invokedynamic #30,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       6: invokespecial #29                 // Method doResolveExtensions:(Ljava/util/function/Function;)Ljava/util/List;
       9: areturn

  private java.util.List<java.lang.String> doResolveExtensions(java.util.function.Function<org.springframework.web.accept.MediaTypeFileExtensionResolver, java.util.List<java.lang.String>>);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #9                  // Field resolvers:Ljava/util/Set;
       6: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          130
      21: aload_3
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      30: astore        4
      32: aload_1
      33: aload         4
      35: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #33                 // class java/util/List
      43: astore        5
      45: aload         5
      47: invokestatic  #34                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      50: ifeq          56
      53: goto          12
      56: aload_2
      57: ifnull        64
      60: aload_2
      61: goto          72
      64: new           #4                  // class java/util/ArrayList
      67: dup
      68: iconst_4
      69: invokespecial #35                 // Method java/util/ArrayList."<init>":(I)V
      72: astore_2
      73: aload         5
      75: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      80: astore        6
      82: aload         6
      84: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          127
      92: aload         6
      94: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #36                 // class java/lang/String
     102: astore        7
     104: aload_2
     105: aload         7
     107: invokeinterface #37,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     112: ifne          124
     115: aload_2
     116: aload         7
     118: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: goto          82
     127: goto          12
     130: aload_2
     131: ifnull        138
     134: aload_2
     135: goto          141
     138: invokestatic  #39                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     141: areturn

  public java.util.Map<java.lang.String, org.springframework.http.MediaType> getMediaTypeMappings();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #9                  // Field resolvers:Ljava/util/Set;
       6: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          86
      21: aload_2
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      30: astore_3
      31: aload_3
      32: instanceof    #40                 // class org/springframework/web/accept/MappingMediaTypeFileExtensionResolver
      35: ifeq          83
      38: aload_3
      39: checkcast     #40                 // class org/springframework/web/accept/MappingMediaTypeFileExtensionResolver
      42: invokevirtual #41                 // Method org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.getMediaTypes:()Ljava/util/Map;
      45: astore        4
      47: aload         4
      49: invokestatic  #42                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      52: ifeq          58
      55: goto          12
      58: aload_1
      59: ifnull        66
      62: aload_1
      63: goto          74
      66: new           #43                 // class java/util/HashMap
      69: dup
      70: iconst_4
      71: invokespecial #44                 // Method java/util/HashMap."<init>":(I)V
      74: astore_1
      75: aload_1
      76: aload         4
      78: invokeinterface #45,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      83: goto          12
      86: aload_1
      87: ifnull        94
      90: aload_1
      91: goto          97
      94: invokestatic  #46                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      97: areturn

  private static java.util.List lambda$resolveFileExtensions$0(org.springframework.http.MediaType, org.springframework.web.accept.MediaTypeFileExtensionResolver);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #47,  2           // InterfaceMethod org/springframework/web/accept/MediaTypeFileExtensionResolver.resolveFileExtensions:(Lorg/springframework/http/MediaType;)Ljava/util/List;
       7: areturn
}
