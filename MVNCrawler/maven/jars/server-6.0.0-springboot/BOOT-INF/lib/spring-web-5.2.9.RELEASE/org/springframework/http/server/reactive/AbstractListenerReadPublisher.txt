Compiled from "AbstractListenerReadPublisher.java"
public abstract class org.springframework.http.server.reactive.AbstractListenerReadPublisher<T> implements org.reactivestreams.Publisher<T> {
  protected static org.apache.commons.logging.Log rsReadLogger;

  private final java.util.concurrent.atomic.AtomicReference<org.springframework.http.server.reactive.AbstractListenerReadPublisher$State> state;

  private volatile long demand;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.springframework.http.server.reactive.AbstractListenerReadPublisher> DEMAND_FIELD_UPDATER;

  private volatile org.reactivestreams.Subscriber<? super T> subscriber;

  private volatile boolean completionBeforeDemand;

  private volatile java.lang.Throwable errorBeforeDemand;

  private final java.lang.String logPrefix;

  public org.springframework.http.server.reactive.AbstractListenerReadPublisher();
    Code:
       0: aload_0
       1: ldc           #12                 // String
       3: invokespecial #13                 // Method "<init>":(Ljava/lang/String;)V
       6: return

  public org.springframework.http.server.reactive.AbstractListenerReadPublisher(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #15                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: getstatic     #16                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.UNSUBSCRIBED:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;
      12: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: aload_1
      20: putfield      #18                 // Field logPrefix:Ljava/lang/String;
      23: return

  public java.lang.String getLogPrefix();
    Code:
       0: aload_0
       1: getfield      #18                 // Field logPrefix:Ljava/lang/String;
       4: areturn

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      10: aload_0
      11: aload_1
      12: invokevirtual #21                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.subscribe:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;Lorg/reactivestreams/Subscriber;)V
      15: return

  public final void onDataAvailable();
    Code:
       0: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
       3: new           #23                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      10: aload_0
      11: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
      14: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #27                 // String onDataAvailable
      19: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      30: aload_0
      31: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      34: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      37: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      40: aload_0
      41: invokevirtual #30                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.onDataAvailable:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)V
      44: return

  public void onAllDataRead();
    Code:
       0: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
       3: new           #23                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      10: aload_0
      11: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
      14: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #31                 // String onAllDataRead
      19: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      30: aload_0
      31: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      34: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      37: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      40: aload_0
      41: invokevirtual #32                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.onAllDataRead:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)V
      44: return

  public final void onError(java.lang.Throwable);
    Code:
       0: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          45
      11: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      14: new           #23                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #34                 // String Connection error:
      30: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      49: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      52: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      55: aload_0
      56: aload_1
      57: invokevirtual #36                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.onError:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;Ljava/lang/Throwable;)V
      60: return

  protected abstract void checkOnDataAvailable();

  protected abstract T read() throws java.io.IOException;

  protected abstract void readingPaused();

  protected abstract void discardData();

  private boolean readAndPublish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field demand:J
       4: dup2
       5: lstore_1
       6: lconst_0
       7: lcmp
       8: ifle          177
      11: aload_0
      12: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      15: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      18: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      21: getstatic     #37                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.COMPLETED:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;
      24: invokevirtual #38                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.equals:(Ljava/lang/Object;)Z
      27: ifne          177
      30: aload_0
      31: invokevirtual #39                 // Method read:()Ljava/lang/Object;
      34: astore_3
      35: aload_3
      36: ifnull        131
      39: lload_1
      40: ldc2_w        #41                 // long 9223372036854775807l
      43: lcmp
      44: ifeq          58
      47: getstatic     #4                  // Field DEMAND_FIELD_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      50: aload_0
      51: ldc2_w        #43                 // long -1l
      54: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      57: pop2
      58: aload_0
      59: getfield      #8                  // Field subscriber:Lorg/reactivestreams/Subscriber;
      62: astore        4
      64: aload         4
      66: ifnull        73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ldc           #46                 // String No subscriber
      76: invokestatic  #47                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      79: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      82: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      87: ifeq          120
      90: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      93: new           #23                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     100: aload_0
     101: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
     104: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #48                 // String Publishing data read
     109: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     120: aload         4
     122: aload_3
     123: invokeinterface #49,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     128: goto          174
     131: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
     134: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     139: ifeq          172
     142: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
     145: new           #23                 // class java/lang/StringBuilder
     148: dup
     149: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     152: aload_0
     153: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
     156: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #50                 // String No more data to read
     161: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     172: iconst_1
     173: ireturn
     174: goto          0
     177: iconst_0
     178: ireturn

  private boolean changeState(org.springframework.http.server.reactive.AbstractListenerReadPublisher$State, org.springframework.http.server.reactive.AbstractListenerReadPublisher$State);
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aload_2
       6: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: istore_3
      10: iload_3
      11: ifeq          63
      14: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      17: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      22: ifeq          63
      25: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      28: new           #23                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      35: aload_0
      36: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
      39: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #52                 // String  ->
      48: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      63: iload_3
      64: ireturn

  private void changeToDemandState(org.springframework.http.server.reactive.AbstractListenerReadPublisher$State);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #53                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.DEMAND:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;
       5: invokespecial #10                 // Method changeState:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;)Z
       8: ifeq          25
      11: aload_1
      12: getstatic     #54                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.READING:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;
      15: invokevirtual #38                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.equals:(Ljava/lang/Object;)Z
      18: ifne          25
      21: aload_0
      22: invokevirtual #55                 // Method checkOnDataAvailable:()V
      25: return

  private void handleCompletionOrErrorBeforeDemand();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      10: astore_1
      11: aload_1
      12: getstatic     #16                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.UNSUBSCRIBED:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;
      15: invokevirtual #38                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.equals:(Ljava/lang/Object;)Z
      18: ifne          151
      21: aload_1
      22: getstatic     #56                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.SUBSCRIBING:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;
      25: invokevirtual #38                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.equals:(Ljava/lang/Object;)Z
      28: ifne          151
      31: aload_0
      32: getfield      #6                  // Field completionBeforeDemand:Z
      35: ifeq          82
      38: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      41: new           #23                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      48: aload_0
      49: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
      52: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #57                 // String Completed before demand
      57: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      68: aload_0
      69: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      72: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      75: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      78: aload_0
      79: invokevirtual #32                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.onAllDataRead:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)V
      82: aload_0
      83: getfield      #5                  // Field errorBeforeDemand:Ljava/lang/Throwable;
      86: astore_2
      87: aload_2
      88: ifnull        151
      91: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      94: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      99: ifeq          136
     102: getstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
     105: new           #23                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     112: aload_0
     113: invokevirtual #25                 // Method getLogPrefix:()Ljava/lang/String;
     116: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #58                 // String Completed with error before demand:
     121: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_2
     125: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     136: aload_0
     137: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
     140: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     143: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
     146: aload_0
     147: aload_2
     148: invokevirtual #36                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.onError:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;Ljava/lang/Throwable;)V
     151: return

  private org.reactivestreams.Subscription createSubscription();
    Code:
       0: new           #59                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$ReadSubscription
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #60                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$ReadSubscription."<init>":(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$1;)V
       9: areturn

  static java.util.concurrent.atomic.AtomicReference access$100(org.springframework.http.server.reactive.AbstractListenerReadPublisher);
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static boolean access$300(org.springframework.http.server.reactive.AbstractListenerReadPublisher, org.springframework.http.server.reactive.AbstractListenerReadPublisher$State, org.springframework.http.server.reactive.AbstractListenerReadPublisher$State);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method changeState:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;)Z
       6: ireturn

  static org.reactivestreams.Subscription access$400(org.springframework.http.server.reactive.AbstractListenerReadPublisher);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method createSubscription:()Lorg/reactivestreams/Subscription;
       4: areturn

  static org.reactivestreams.Subscriber access$502(org.springframework.http.server.reactive.AbstractListenerReadPublisher, org.reactivestreams.Subscriber);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field subscriber:Lorg/reactivestreams/Subscriber;
       6: areturn

  static void access$600(org.springframework.http.server.reactive.AbstractListenerReadPublisher);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method handleCompletionOrErrorBeforeDemand:()V
       4: return

  static boolean access$702(org.springframework.http.server.reactive.AbstractListenerReadPublisher, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field completionBeforeDemand:Z
       6: ireturn

  static java.lang.Throwable access$802(org.springframework.http.server.reactive.AbstractListenerReadPublisher, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field errorBeforeDemand:Ljava/lang/Throwable;
       6: areturn

  static java.util.concurrent.atomic.AtomicLongFieldUpdater access$900();
    Code:
       0: getstatic     #4                  // Field DEMAND_FIELD_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: areturn

  static void access$1000(org.springframework.http.server.reactive.AbstractListenerReadPublisher, org.springframework.http.server.reactive.AbstractListenerReadPublisher$State);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method changeToDemandState:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher$State;)V
       5: return

  static boolean access$1100(org.springframework.http.server.reactive.AbstractListenerReadPublisher) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method readAndPublish:()Z
       4: ireturn

  static long access$1200(org.springframework.http.server.reactive.AbstractListenerReadPublisher);
    Code:
       0: aload_0
       1: getfield      #1                  // Field demand:J
       4: lreturn

  static org.reactivestreams.Subscriber access$500(org.springframework.http.server.reactive.AbstractListenerReadPublisher);
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscriber:Lorg/reactivestreams/Subscriber;
       4: areturn

  static {};
    Code:
       0: ldc           #61                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher
       2: invokestatic  #62                 // Method org/springframework/core/log/LogDelegateFactory.getHiddenLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #22                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
       8: ldc           #61                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher
      10: ldc           #63                 // String demand
      12: invokestatic  #64                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      15: putstatic     #4                  // Field DEMAND_FIELD_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      18: return
}
