Compiled from "ProtobufEncoder.java"
public class org.springframework.http.codec.protobuf.ProtobufEncoder extends org.springframework.http.codec.protobuf.ProtobufCodecSupport implements org.springframework.http.codec.HttpMessageEncoder<com.google.protobuf.Message> {
  private static final java.util.List<org.springframework.http.MediaType> streamingMediaTypes;

  public org.springframework.http.codec.protobuf.ProtobufEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/codec/protobuf/ProtobufCodecSupport."<init>":()V
       4: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: ldc           #2                  // class com/google/protobuf/Message
       2: aload_1
       3: invokevirtual #3                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          24
      12: aload_0
      13: aload_2
      14: invokevirtual #5                  // Method supportsMimeType:(Lorg/springframework/util/MimeType;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<? extends com.google.protobuf.Message>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/protobuf/ProtobufEncoder;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/reactivestreams/Publisher;)Ljava/util/function/Function;
      12: invokevirtual #8                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      15: areturn

  public org.springframework.core.io.buffer.DataBuffer encodeValue(com.google.protobuf.Message, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #9                  // Method encodeValue:(Lcom/google/protobuf/Message;Lorg/springframework/core/io/buffer/DataBufferFactory;Z)Lorg/springframework/core/io/buffer/DataBuffer;
       7: areturn

  private org.springframework.core.io.buffer.DataBuffer encodeValue(com.google.protobuf.Message, org.springframework.core.io.buffer.DataBufferFactory, boolean);
    Code:
       0: aload_2
       1: invokeinterface #10,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:()Lorg/springframework/core/io/buffer/DataBuffer;
       6: astore        4
       8: iconst_1
       9: istore        5
      11: iload_3
      12: ifeq          31
      15: aload_1
      16: aload         4
      18: invokeinterface #11,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asOutputStream:()Ljava/io/OutputStream;
      23: invokeinterface #12,  2           // InterfaceMethod com/google/protobuf/Message.writeDelimitedTo:(Ljava/io/OutputStream;)V
      28: goto          44
      31: aload_1
      32: aload         4
      34: invokeinterface #11,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asOutputStream:()Ljava/io/OutputStream;
      39: invokeinterface #13,  2           // InterfaceMethod com/google/protobuf/Message.writeTo:(Ljava/io/OutputStream;)V
      44: iconst_0
      45: istore        5
      47: aload         4
      49: astore        6
      51: iload         5
      53: ifeq          62
      56: aload         4
      58: invokestatic  #14                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      61: pop
      62: aload         6
      64: areturn
      65: astore        6
      67: new           #16                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #17                 // String Unexpected I/O error while writing to data buffer
      73: aload         6
      75: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: athrow
      79: astore        7
      81: iload         5
      83: ifeq          92
      86: aload         4
      88: invokestatic  #14                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      91: pop
      92: aload         7
      94: athrow
    Exception table:
       from    to  target type
          11    51    65   Class java/io/IOException
          11    51    79   any
          65    81    79   any

  public java.util.List<org.springframework.http.MediaType> getStreamingMediaTypes();
    Code:
       0: getstatic     #19                 // Field streamingMediaTypes:Ljava/util/List;
       3: areturn

  public java.util.List<org.springframework.util.MimeType> getEncodableMimeTypes();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getMimeTypes:()Ljava/util/List;
       4: areturn

  public org.springframework.core.io.buffer.DataBuffer encodeValue(java.lang.Object, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class com/google/protobuf/Message
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #21                 // Method encodeValue:(Lcom/google/protobuf/Message;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
      14: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$1(org.springframework.core.io.buffer.DataBufferFactory, org.reactivestreams.Publisher, com.google.protobuf.Message);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: instanceof    #22                 // class reactor/core/publisher/Mono
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: invokespecial #9                  // Method encodeValue:(Lcom/google/protobuf/Message;Lorg/springframework/core/io/buffer/DataBufferFactory;Z)Lorg/springframework/core/io/buffer/DataBuffer;
      18: areturn

  private static org.springframework.http.MediaType lambda$static$0(org.springframework.util.MimeType);
    Code:
       0: new           #23                 // class org/springframework/http/MediaType
       3: dup
       4: aload_0
       5: invokevirtual #24                 // Method org/springframework/util/MimeType.getType:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #25                 // Method org/springframework/util/MimeType.getSubtype:()Ljava/lang/String;
      12: ldc           #27                 // String delimited
      14: ldc           #28                 // String true
      16: invokestatic  #29                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      19: invokespecial #30                 // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      22: areturn

  static {};
    Code:
       0: getstatic     #31                 // Field MIME_TYPES:Ljava/util/List;
       3: invokeinterface #32,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       8: invokedynamic #33,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      13: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      18: invokestatic  #35                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      21: invokeinterface #36,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      26: checkcast     #37                 // class java/util/List
      29: putstatic     #19                 // Field streamingMediaTypes:Ljava/util/List;
      32: return
}
