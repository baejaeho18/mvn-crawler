Compiled from "AbstractRequestLoggingFilter.java"
public abstract class org.springframework.web.filter.AbstractRequestLoggingFilter extends org.springframework.web.filter.OncePerRequestFilter {
  public static final java.lang.String DEFAULT_BEFORE_MESSAGE_PREFIX;

  public static final java.lang.String DEFAULT_BEFORE_MESSAGE_SUFFIX;

  public static final java.lang.String DEFAULT_AFTER_MESSAGE_PREFIX;

  public static final java.lang.String DEFAULT_AFTER_MESSAGE_SUFFIX;

  private static final int DEFAULT_MAX_PAYLOAD_LENGTH;

  private boolean includeQueryString;

  private boolean includeClientInfo;

  private boolean includeHeaders;

  private boolean includePayload;

  private java.util.function.Predicate<java.lang.String> headerPredicate;

  private int maxPayloadLength;

  private java.lang.String beforeMessagePrefix;

  private java.lang.String beforeMessageSuffix;

  private java.lang.String afterMessagePrefix;

  private java.lang.String afterMessageSuffix;

  public org.springframework.web.filter.AbstractRequestLoggingFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field includeQueryString:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field includeClientInfo:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field includeHeaders:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field includePayload:Z
      24: aload_0
      25: bipush        50
      27: putfield      #7                  // Field maxPayloadLength:I
      30: aload_0
      31: ldc           #8                  // String Before request [
      33: putfield      #9                  // Field beforeMessagePrefix:Ljava/lang/String;
      36: aload_0
      37: ldc           #10                 // String ]
      39: putfield      #11                 // Field beforeMessageSuffix:Ljava/lang/String;
      42: aload_0
      43: ldc           #12                 // String After request [
      45: putfield      #13                 // Field afterMessagePrefix:Ljava/lang/String;
      48: aload_0
      49: ldc           #10                 // String ]
      51: putfield      #14                 // Field afterMessageSuffix:Ljava/lang/String;
      54: return

  public void setIncludeQueryString(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field includeQueryString:Z
       5: return

  protected boolean isIncludeQueryString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field includeQueryString:Z
       4: ireturn

  public void setIncludeClientInfo(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field includeClientInfo:Z
       5: return

  protected boolean isIncludeClientInfo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field includeClientInfo:Z
       4: ireturn

  public void setIncludeHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field includeHeaders:Z
       5: return

  protected boolean isIncludeHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field includeHeaders:Z
       4: ireturn

  public void setIncludePayload(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field includePayload:Z
       5: return

  protected boolean isIncludePayload();
    Code:
       0: aload_0
       1: getfield      #5                  // Field includePayload:Z
       4: ireturn

  public void setHeaderPredicate(java.util.function.Predicate<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field headerPredicate:Ljava/util/function/Predicate;
       5: return

  protected java.util.function.Predicate<java.lang.String> getHeaderPredicate();
    Code:
       0: aload_0
       1: getfield      #15                 // Field headerPredicate:Ljava/util/function/Predicate;
       4: areturn

  public void setMaxPayloadLength(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #16                 // String \'maxPayloadLength\' should be larger than or equal to 0
      11: invokestatic  #17                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #7                  // Field maxPayloadLength:I
      19: return

  protected int getMaxPayloadLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxPayloadLength:I
       4: ireturn

  public void setBeforeMessagePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field beforeMessagePrefix:Ljava/lang/String;
       5: return

  public void setBeforeMessageSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field beforeMessageSuffix:Ljava/lang/String;
       5: return

  public void setAfterMessagePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field afterMessagePrefix:Ljava/lang/String;
       5: return

  public void setAfterMessageSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field afterMessageSuffix:Ljava/lang/String;
       5: return

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method isAsyncDispatch:(Ljavax/servlet/http/HttpServletRequest;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore        4
      15: aload_1
      16: astore        5
      18: aload_0
      19: invokevirtual #19                 // Method isIncludePayload:()Z
      22: ifeq          51
      25: iload         4
      27: ifeq          51
      30: aload_1
      31: instanceof    #20                 // class org/springframework/web/util/ContentCachingRequestWrapper
      34: ifne          51
      37: new           #20                 // class org/springframework/web/util/ContentCachingRequestWrapper
      40: dup
      41: aload_1
      42: aload_0
      43: invokevirtual #21                 // Method getMaxPayloadLength:()I
      46: invokespecial #22                 // Method org/springframework/web/util/ContentCachingRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;I)V
      49: astore        5
      51: aload_0
      52: aload         5
      54: invokevirtual #23                 // Method shouldLog:(Ljavax/servlet/http/HttpServletRequest;)Z
      57: istore        6
      59: iload         6
      61: ifeq          81
      64: iload         4
      66: ifeq          81
      69: aload_0
      70: aload         5
      72: aload_0
      73: aload         5
      75: invokespecial #24                 // Method getBeforeMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      78: invokevirtual #25                 // Method beforeRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
      81: aload_3
      82: aload         5
      84: aload_2
      85: invokeinterface #26,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      90: iload         6
      92: ifeq          150
      95: aload_0
      96: aload         5
      98: invokevirtual #27                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
     101: ifne          150
     104: aload_0
     105: aload         5
     107: aload_0
     108: aload         5
     110: invokespecial #28                 // Method getAfterMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
     113: invokevirtual #29                 // Method afterRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
     116: goto          150
     119: astore        7
     121: iload         6
     123: ifeq          147
     126: aload_0
     127: aload         5
     129: invokevirtual #27                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
     132: ifne          147
     135: aload_0
     136: aload         5
     138: aload_0
     139: aload         5
     141: invokespecial #28                 // Method getAfterMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
     144: invokevirtual #29                 // Method afterRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
     147: aload         7
     149: athrow
     150: return
    Exception table:
       from    to  target type
          81    90   119   any
         119   121   119   any

  private java.lang.String getBeforeMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field beforeMessagePrefix:Ljava/lang/String;
       6: aload_0
       7: getfield      #11                 // Field beforeMessageSuffix:Ljava/lang/String;
      10: invokevirtual #30                 // Method createMessage:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  private java.lang.String getAfterMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #13                 // Field afterMessagePrefix:Ljava/lang/String;
       6: aload_0
       7: getfield      #14                 // Field afterMessageSuffix:Ljava/lang/String;
      10: invokevirtual #30                 // Method createMessage:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  protected java.lang.String createMessage(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload         4
      18: aload_1
      19: invokeinterface #34,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      24: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #35                 // String
      29: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload         4
      35: aload_1
      36: invokeinterface #36,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      41: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_0
      46: invokevirtual #37                 // Method isIncludeQueryString:()Z
      49: ifeq          78
      52: aload_1
      53: invokeinterface #38,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      58: astore        5
      60: aload         5
      62: ifnull        78
      65: aload         4
      67: bipush        63
      69: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: aload         5
      74: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: aload_0
      79: invokevirtual #40                 // Method isIncludeClientInfo:()Z
      82: ifeq          172
      85: aload_1
      86: invokeinterface #41,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteAddr:()Ljava/lang/String;
      91: astore        5
      93: aload         5
      95: invokestatic  #42                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      98: ifeq          114
     101: aload         4
     103: ldc           #43                 // String , client=
     105: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload         5
     110: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: aload_1
     115: iconst_0
     116: invokeinterface #44,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
     121: astore        6
     123: aload         6
     125: ifnull        146
     128: aload         4
     130: ldc           #45                 // String , session=
     132: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload         6
     137: invokeinterface #46,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
     142: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: aload_1
     147: invokeinterface #47,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteUser:()Ljava/lang/String;
     152: astore        7
     154: aload         7
     156: ifnull        172
     159: aload         4
     161: ldc           #48                 // String , user=
     163: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload         7
     168: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: pop
     172: aload_0
     173: invokevirtual #49                 // Method isIncludeHeaders:()Z
     176: ifeq          268
     179: new           #50                 // class org/springframework/http/server/ServletServerHttpRequest
     182: dup
     183: aload_1
     184: invokespecial #51                 // Method org/springframework/http/server/ServletServerHttpRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
     187: invokevirtual #52                 // Method org/springframework/http/server/ServletServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
     190: astore        5
     192: aload_0
     193: invokevirtual #53                 // Method getHeaderPredicate:()Ljava/util/function/Predicate;
     196: ifnull        255
     199: aload_1
     200: invokeinterface #54,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
     205: astore        6
     207: aload         6
     209: invokeinterface #55,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     214: ifeq          255
     217: aload         6
     219: invokeinterface #56,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     224: checkcast     #57                 // class java/lang/String
     227: astore        7
     229: aload_0
     230: invokevirtual #53                 // Method getHeaderPredicate:()Ljava/util/function/Predicate;
     233: aload         7
     235: invokeinterface #58,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
     240: ifne          252
     243: aload         5
     245: aload         7
     247: ldc           #59                 // String masked
     249: invokevirtual #60                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
     252: goto          207
     255: aload         4
     257: ldc           #61                 // String , headers=
     259: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: aload         5
     264: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     267: pop
     268: aload_0
     269: invokevirtual #19                 // Method isIncludePayload:()Z
     272: ifeq          300
     275: aload_0
     276: aload_1
     277: invokevirtual #63                 // Method getMessagePayload:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
     280: astore        5
     282: aload         5
     284: ifnull        300
     287: aload         4
     289: ldc           #64                 // String , payload=
     291: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: aload         5
     296: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: pop
     300: aload         4
     302: aload_3
     303: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     306: pop
     307: aload         4
     309: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     312: areturn

  protected java.lang.String getMessagePayload(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: ldc           #20                 // class org/springframework/web/util/ContentCachingRequestWrapper
       3: invokestatic  #66                 // Method org/springframework/web/util/WebUtils.getNativeRequest:(Ljavax/servlet/ServletRequest;Ljava/lang/Class;)Ljava/lang/Object;
       6: checkcast     #20                 // class org/springframework/web/util/ContentCachingRequestWrapper
       9: astore_2
      10: aload_2
      11: ifnull        56
      14: aload_2
      15: invokevirtual #67                 // Method org/springframework/web/util/ContentCachingRequestWrapper.getContentAsByteArray:()[B
      18: astore_3
      19: aload_3
      20: arraylength
      21: ifle          56
      24: aload_3
      25: arraylength
      26: aload_0
      27: invokevirtual #21                 // Method getMaxPayloadLength:()I
      30: invokestatic  #68                 // Method java/lang/Math.min:(II)I
      33: istore        4
      35: new           #57                 // class java/lang/String
      38: dup
      39: aload_3
      40: iconst_0
      41: iload         4
      43: aload_2
      44: invokevirtual #69                 // Method org/springframework/web/util/ContentCachingRequestWrapper.getCharacterEncoding:()Ljava/lang/String;
      47: invokespecial #70                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      50: areturn
      51: astore        5
      53: ldc           #72                 // String [unknown]
      55: areturn
      56: aconst_null
      57: areturn
    Exception table:
       from    to  target type
          35    50    51   Class java/io/UnsupportedEncodingException

  protected boolean shouldLog(javax.servlet.http.HttpServletRequest);
    Code:
       0: iconst_1
       1: ireturn

  protected abstract void beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String);

  protected abstract void afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String);
}
