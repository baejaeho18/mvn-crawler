Compiled from "PathPatternParser.java"
public class org.springframework.web.util.pattern.PathPatternParser {
  private static final org.apache.commons.logging.Log logger;

  private boolean matchOptionalTrailingSeparator;

  private boolean caseSensitive;

  private org.springframework.http.server.PathContainer$Options pathOptions;

  public static final org.springframework.web.util.pattern.PathPatternParser defaultInstance;

  public org.springframework.web.util.pattern.PathPatternParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field matchOptionalTrailingSeparator:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field caseSensitive:Z
      14: aload_0
      15: getstatic     #4                  // Field org/springframework/http/server/PathContainer$Options.HTTP_PATH:Lorg/springframework/http/server/PathContainer$Options;
      18: putfield      #5                  // Field pathOptions:Lorg/springframework/http/server/PathContainer$Options;
      21: return

  public void setMatchOptionalTrailingSeparator(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field matchOptionalTrailingSeparator:Z
       5: return

  public boolean isMatchOptionalTrailingSeparator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field matchOptionalTrailingSeparator:Z
       4: ireturn

  public void setCaseSensitive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field caseSensitive:Z
       5: return

  public boolean isCaseSensitive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field caseSensitive:Z
       4: ireturn

  public void setPathOptions(org.springframework.http.server.PathContainer$Options);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field pathOptions:Lorg/springframework/http/server/PathContainer$Options;
       5: return

  public org.springframework.http.server.PathContainer$Options getPathOptions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pathOptions:Lorg/springframework/http/server/PathContainer$Options;
       4: areturn

  public org.springframework.web.util.pattern.PathPattern parse(java.lang.String) throws org.springframework.web.util.pattern.PatternParseException;
    Code:
       0: aload_1
       1: new           #6                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #8                  // String **
      10: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #5                  // Field pathOptions:Lorg/springframework/http/server/PathContainer$Options;
      17: invokevirtual #10                 // Method org/springframework/http/server/PathContainer$Options.separator:()C
      20: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      23: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #13                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      29: istore_2
      30: iload_2
      31: iconst_m1
      32: if_icmpeq     55
      35: iload_2
      36: aload_1
      37: invokevirtual #14                 // Method java/lang/String.length:()I
      40: iconst_3
      41: isub
      42: if_icmpeq     55
      45: getstatic     #15                 // Field logger:Lorg/apache/commons/logging/Log;
      48: ldc           #16                 // String \'**\' patterns are not supported in the middle of patterns and will be rejected in the future. Consider using \'*\' instead for matching a single path segment.
      50: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      55: new           #18                 // class org/springframework/web/util/pattern/InternalPathPatternParser
      58: dup
      59: aload_0
      60: invokespecial #19                 // Method org/springframework/web/util/pattern/InternalPathPatternParser."<init>":(Lorg/springframework/web/util/pattern/PathPatternParser;)V
      63: aload_1
      64: invokevirtual #20                 // Method org/springframework/web/util/pattern/InternalPathPatternParser.parse:(Ljava/lang/String;)Lorg/springframework/web/util/pattern/PathPattern;
      67: areturn

  static {};
    Code:
       0: ldc           #21                 // class org/springframework/web/util/pattern/PathPatternParser
       2: invokestatic  #22                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #15                 // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #23                 // class org/springframework/web/util/pattern/PathPatternParser$1
      11: dup
      12: invokespecial #24                 // Method org/springframework/web/util/pattern/PathPatternParser$1."<init>":()V
      15: putstatic     #25                 // Field defaultInstance:Lorg/springframework/web/util/pattern/PathPatternParser;
      18: return
}
