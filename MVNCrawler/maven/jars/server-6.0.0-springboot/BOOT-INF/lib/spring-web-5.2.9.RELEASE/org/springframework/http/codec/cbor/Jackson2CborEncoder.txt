Compiled from "Jackson2CborEncoder.java"
public class org.springframework.http.codec.cbor.Jackson2CborEncoder extends org.springframework.http.codec.json.AbstractJackson2Encoder {
  public org.springframework.http.codec.cbor.Jackson2CborEncoder();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.cbor:()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
       4: invokevirtual #2                  // Method org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.build:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       7: iconst_1
       8: anewarray     #3                  // class org/springframework/util/MimeType
      11: dup
      12: iconst_0
      13: getstatic     #4                  // Field org/springframework/http/MediaType.APPLICATION_CBOR:Lorg/springframework/http/MediaType;
      16: aastore
      17: invokespecial #5                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
      20: return

  public org.springframework.http.codec.cbor.Jackson2CborEncoder(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method org/springframework/http/codec/json/AbstractJackson2Encoder."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
       6: ldc           #7                  // class com/fasterxml/jackson/dataformat/cbor/CBORFactory
       8: aload_1
       9: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectMapper.getFactory:()Lcom/fasterxml/jackson/core/JsonFactory;
      12: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokestatic  #10                 // Method org/springframework/util/Assert.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)V
      18: return

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<?>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #12                 // String Does not support stream encoding yet
       6: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
