Compiled from "ServletServerHttpRequest.java"
class org.springframework.http.server.reactive.ServletServerHttpRequest extends org.springframework.http.server.reactive.AbstractServerHttpRequest {
  static final org.springframework.core.io.buffer.DataBuffer EOF_BUFFER;

  private final javax.servlet.http.HttpServletRequest request;

  private final org.springframework.http.server.reactive.ServletServerHttpRequest$RequestBodyPublisher bodyPublisher;

  private final java.lang.Object cookieLock;

  private final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private final byte[] buffer;

  public org.springframework.http.server.reactive.ServletServerHttpRequest(javax.servlet.http.HttpServletRequest, javax.servlet.AsyncContext, java.lang.String, org.springframework.core.io.buffer.DataBufferFactory, int) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method createDefaultHttpHeaders:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/HttpHeaders;
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: iload         5
      12: invokespecial #3                  // Method "<init>":(Lorg/springframework/http/HttpHeaders;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/AsyncContext;Ljava/lang/String;Lorg/springframework/core/io/buffer/DataBufferFactory;I)V
      15: return

  public org.springframework.http.server.reactive.ServletServerHttpRequest(org.springframework.http.HttpHeaders, javax.servlet.http.HttpServletRequest, javax.servlet.AsyncContext, java.lang.String, org.springframework.core.io.buffer.DataBufferFactory, int) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #4                  // Method initUri:(Ljavax/servlet/http/HttpServletRequest;)Ljava/net/URI;
       5: new           #5                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      12: aload_2
      13: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
      18: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload         4
      23: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: aload_1
      30: aload_2
      31: invokestatic  #10                 // Method initHeaders:(Lorg/springframework/http/HttpHeaders;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/HttpHeaders;
      34: invokespecial #11                 // Method org/springframework/http/server/reactive/AbstractServerHttpRequest."<init>":(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V
      37: aload_0
      38: new           #12                 // class java/lang/Object
      41: dup
      42: invokespecial #13                 // Method java/lang/Object."<init>":()V
      45: putfield      #14                 // Field cookieLock:Ljava/lang/Object;
      48: aload         5
      50: ldc           #15                 // String \'bufferFactory\' must not be null
      52: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      55: iload         6
      57: ifle          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #17                 // String \'bufferSize\' must be higher than 0
      67: invokestatic  #18                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      70: aload_0
      71: aload_2
      72: putfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      75: aload_0
      76: aload         5
      78: putfield      #20                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      81: aload_0
      82: iload         6
      84: newarray       byte
      86: putfield      #21                 // Field buffer:[B
      89: aload_3
      90: new           #22                 // class org/springframework/http/server/reactive/ServletServerHttpRequest$RequestAsyncListener
      93: dup
      94: aload_0
      95: aconst_null
      96: invokespecial #23                 // Method org/springframework/http/server/reactive/ServletServerHttpRequest$RequestAsyncListener."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpRequest;Lorg/springframework/http/server/reactive/ServletServerHttpRequest$1;)V
      99: invokeinterface #24,  2           // InterfaceMethod javax/servlet/AsyncContext.addListener:(Ljavax/servlet/AsyncListener;)V
     104: aload_2
     105: invokeinterface #25,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
     110: astore        7
     112: aload_0
     113: new           #26                 // class org/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher
     116: dup
     117: aload_0
     118: aload         7
     120: invokespecial #27                 // Method org/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpRequest;Ljavax/servlet/ServletInputStream;)V
     123: putfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
     126: aload_0
     127: getfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
     130: invokevirtual #28                 // Method org/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher.registerReadListener:()V
     133: return

  private static org.springframework.http.HttpHeaders createDefaultHttpHeaders(javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #29                 // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #30                 // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
      14: astore_2
      15: aload_2
      16: invokeinterface #32,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      21: ifeq          74
      24: aload_2
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      30: checkcast     #34                 // class java/lang/String
      33: astore_3
      34: aload_0
      35: aload_3
      36: invokeinterface #35,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      41: astore        4
      43: aload         4
      45: invokeinterface #32,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      50: ifeq          71
      53: aload_1
      54: aload_3
      55: aload         4
      57: invokeinterface #33,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      62: checkcast     #34                 // class java/lang/String
      65: invokevirtual #36                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      68: goto          43
      71: goto          15
      74: aload_1
      75: areturn

  private static java.net.URI initUri(javax.servlet.http.HttpServletRequest) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: ldc           #37                 // String \'request\' must not be null
       3: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #38,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURL:()Ljava/lang/StringBuffer;
      12: astore_1
      13: aload_0
      14: invokeinterface #39,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: invokestatic  #40                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      24: ifeq          38
      27: aload_1
      28: bipush        63
      30: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      33: aload_2
      34: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: new           #43                 // class java/net/URI
      41: dup
      42: aload_1
      43: invokevirtual #44                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokespecial #45                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      49: areturn

  private static org.springframework.http.HttpHeaders initHeaders(org.springframework.http.HttpHeaders, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       4: astore_2
       5: aload_2
       6: ifnonnull     33
       9: aload_1
      10: invokeinterface #47,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentType:()Ljava/lang/String;
      15: astore_3
      16: aload_3
      17: invokestatic  #48                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      20: ifeq          33
      23: aload_3
      24: invokestatic  #49                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #50                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      33: aload_2
      34: ifnull        120
      37: aload_2
      38: invokevirtual #51                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      41: ifnonnull     120
      44: aload_1
      45: invokeinterface #52,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCharacterEncoding:()Ljava/lang/String;
      50: astore_3
      51: aload_3
      52: invokestatic  #48                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      55: ifeq          120
      58: aload_3
      59: invokestatic  #53                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      62: astore        4
      64: new           #54                 // class org/springframework/util/LinkedCaseInsensitiveMap
      67: dup
      68: invokespecial #55                 // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":()V
      71: astore        5
      73: aload         5
      75: aload_2
      76: invokevirtual #56                 // Method org/springframework/http/MediaType.getParameters:()Ljava/util/Map;
      79: invokeinterface #57,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      84: aload         5
      86: ldc           #58                 // String charset
      88: aload         4
      90: invokevirtual #59                 // Method java/nio/charset/Charset.toString:()Ljava/lang/String;
      93: invokeinterface #60,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: new           #61                 // class org/springframework/http/MediaType
     103: dup
     104: aload_2
     105: invokevirtual #62                 // Method org/springframework/http/MediaType.getType:()Ljava/lang/String;
     108: aload_2
     109: invokevirtual #63                 // Method org/springframework/http/MediaType.getSubtype:()Ljava/lang/String;
     112: aload         5
     114: invokespecial #64                 // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     117: invokevirtual #50                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
     120: aload_0
     121: invokevirtual #65                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
     124: ldc2_w        #66                 // long -1l
     127: lcmp
     128: ifne          149
     131: aload_1
     132: invokeinterface #68,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentLength:()I
     137: istore_3
     138: iload_3
     139: iconst_m1
     140: if_icmpeq     149
     143: aload_0
     144: iload_3
     145: i2l
     146: invokevirtual #69                 // Method org/springframework/http/HttpHeaders.setContentLength:(J)V
     149: aload_0
     150: areturn

  public java.lang.String getMethodValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #70,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
       9: areturn

  protected org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> initCookies();
    Code:
       0: new           #71                 // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: invokespecial #72                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #14                 // Field cookieLock:Ljava/lang/Object;
      12: dup
      13: astore_3
      14: monitorenter
      15: aload_0
      16: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      19: invokeinterface #73,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      24: astore_2
      25: aload_3
      26: monitorexit
      27: goto          37
      30: astore        4
      32: aload_3
      33: monitorexit
      34: aload         4
      36: athrow
      37: aload_2
      38: ifnull        102
      41: aload_2
      42: astore_3
      43: aload_3
      44: arraylength
      45: istore        4
      47: iconst_0
      48: istore        5
      50: iload         5
      52: iload         4
      54: if_icmpge     102
      57: aload_3
      58: iload         5
      60: aaload
      61: astore        6
      63: aload         6
      65: invokevirtual #74                 // Method javax/servlet/http/Cookie.getName:()Ljava/lang/String;
      68: astore        7
      70: new           #75                 // class org/springframework/http/HttpCookie
      73: dup
      74: aload         7
      76: aload         6
      78: invokevirtual #76                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      81: invokespecial #77                 // Method org/springframework/http/HttpCookie."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      84: astore        8
      86: aload_1
      87: aload         7
      89: aload         8
      91: invokeinterface #78,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      96: iinc          5, 1
      99: goto          50
     102: aload_1
     103: areturn
    Exception table:
       from    to  target type
          15    27    30   any
          30    34    30   any

  public java.net.InetSocketAddress getLocalAddress();
    Code:
       0: new           #79                 // class java/net/InetSocketAddress
       3: dup
       4: aload_0
       5: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       8: invokeinterface #80,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocalAddr:()Ljava/lang/String;
      13: aload_0
      14: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      17: invokeinterface #81,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocalPort:()I
      22: invokespecial #82                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      25: areturn

  public java.net.InetSocketAddress getRemoteAddress();
    Code:
       0: new           #79                 // class java/net/InetSocketAddress
       3: dup
       4: aload_0
       5: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       8: invokeinterface #83,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteHost:()Ljava/lang/String;
      13: aload_0
      14: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      17: invokeinterface #84,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemotePort:()I
      22: invokespecial #82                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      25: areturn

  protected org.springframework.http.server.reactive.SslInfo initSslInfo();
    Code:
       0: aload_0
       1: invokespecial #85                 // Method getX509Certificates:()[Ljava/security/cert/X509Certificate;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: new           #86                 // class org/springframework/http/server/reactive/DefaultSslInfo
      12: dup
      13: aload_0
      14: invokespecial #87                 // Method getSslSessionId:()Ljava/lang/String;
      17: aload_1
      18: invokespecial #88                 // Method org/springframework/http/server/reactive/DefaultSslInfo."<init>":(Ljava/lang/String;[Ljava/security/cert/X509Certificate;)V
      21: goto          25
      24: aconst_null
      25: areturn

  private java.lang.String getSslSessionId();
    Code:
       0: aload_0
       1: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: ldc           #89                 // String javax.servlet.request.ssl_session_id
       6: invokeinterface #90,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #34                 // class java/lang/String
      14: areturn

  private java.security.cert.X509Certificate[] getX509Certificates();
    Code:
       0: ldc           #91                 // String javax.servlet.request.X509Certificate
       2: astore_1
       3: aload_0
       4: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       7: aload_1
       8: invokeinterface #90,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #92                 // class "[Ljava/security/cert/X509Certificate;"
      16: checkcast     #92                 // class "[Ljava/security/cert/X509Certificate;"
      19: areturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
       4: invokestatic  #93                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       7: areturn

  org.springframework.core.io.buffer.DataBuffer readFromInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #25,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
       9: aload_0
      10: getfield      #21                 // Field buffer:[B
      13: invokevirtual #94                 // Method javax/servlet/ServletInputStream.read:([B)I
      16: istore_1
      17: aload_0
      18: iload_1
      19: invokevirtual #95                 // Method logBytesRead:(I)V
      22: iload_1
      23: ifle          52
      26: aload_0
      27: getfield      #20                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      30: iload_1
      31: invokeinterface #96,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      36: astore_2
      37: aload_2
      38: aload_0
      39: getfield      #21                 // Field buffer:[B
      42: iconst_0
      43: iload_1
      44: invokeinterface #97,  4           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([BII)Lorg/springframework/core/io/buffer/DataBuffer;
      49: pop
      50: aload_2
      51: areturn
      52: iload_1
      53: iconst_m1
      54: if_icmpne     61
      57: getstatic     #98                 // Field EOF_BUFFER:Lorg/springframework/core/io/buffer/DataBuffer;
      60: areturn
      61: aconst_null
      62: areturn

  protected final void logBytesRead(int);
    Code:
       0: getstatic     #99                 // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher.rsReadLogger:Lorg/apache/commons/logging/Log;
       3: astore_2
       4: aload_2
       5: invokeinterface #100,  1          // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      10: ifeq          60
      13: aload_2
      14: new           #5                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #101                // Method getLogPrefix:()Ljava/lang/String;
      25: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #102                // String Read
      30: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_1
      34: invokevirtual #103                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: iload_1
      38: iconst_m1
      39: if_icmpeq     47
      42: ldc           #104                // String  bytes
      44: goto          49
      47: ldc           #105                // String
      49: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokeinterface #106,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      60: return

  public <T> T getNativeRequest();
    Code:
       0: aload_0
       1: getfield      #19                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: areturn

  static org.springframework.http.server.reactive.ServletServerHttpRequest$RequestBodyPublisher access$100(org.springframework.http.server.reactive.ServletServerHttpRequest);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
       4: areturn

  static {};
    Code:
       0: new           #107                // class org/springframework/core/io/buffer/DefaultDataBufferFactory
       3: dup
       4: invokespecial #108                // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
       7: iconst_0
       8: invokevirtual #109                // Method org/springframework/core/io/buffer/DefaultDataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
      11: putstatic     #98                 // Field EOF_BUFFER:Lorg/springframework/core/io/buffer/DataBuffer;
      14: return
}
