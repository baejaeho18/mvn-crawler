Compiled from "ReactorClientHttpRequest.java"
class org.springframework.http.client.reactive.ReactorClientHttpRequest extends org.springframework.http.client.reactive.AbstractClientHttpRequest implements org.springframework.http.ZeroCopyHttpOutputMessage {
  private final org.springframework.http.HttpMethod httpMethod;

  private final java.net.URI uri;

  private final reactor.netty.http.client.HttpClientRequest request;

  private final reactor.netty.NettyOutbound outbound;

  private final org.springframework.core.io.buffer.NettyDataBufferFactory bufferFactory;

  public org.springframework.http.client.reactive.ReactorClientHttpRequest(org.springframework.http.HttpMethod, java.net.URI, reactor.netty.http.client.HttpClientRequest, reactor.netty.NettyOutbound);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/client/reactive/AbstractClientHttpRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field httpMethod:Lorg/springframework/http/HttpMethod;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field uri:Ljava/net/URI;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field request:Lreactor/netty/http/client/HttpClientRequest;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field outbound:Lreactor/netty/NettyOutbound;
      25: aload_0
      26: new           #6                  // class org/springframework/core/io/buffer/NettyDataBufferFactory
      29: dup
      30: aload         4
      32: invokeinterface #7,  1            // InterfaceMethod reactor/netty/NettyOutbound.alloc:()Lio/netty/buffer/ByteBufAllocator;
      37: invokespecial #8                  // Method org/springframework/core/io/buffer/NettyDataBufferFactory."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      40: putfield      #9                  // Field bufferFactory:Lorg/springframework/core/io/buffer/NettyDataBufferFactory;
      43: return

  public org.springframework.core.io.buffer.DataBufferFactory bufferFactory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field bufferFactory:Lorg/springframework/core/io/buffer/NettyDataBufferFactory;
       4: areturn

  public org.springframework.http.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #2                  // Field httpMethod:Lorg/springframework/http/HttpMethod;
       4: areturn

  public java.net.URI getURI();
    Code:
       0: aload_0
       1: getfield      #3                  // Field uri:Ljava/net/URI;
       4: areturn

  public reactor.core.publisher.Mono<java.lang.Void> writeWith(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #10,  0             // InvokeDynamic #0:get:(Lorg/springframework/http/client/reactive/ReactorClientHttpRequest;Lorg/reactivestreams/Publisher;)Ljava/util/function/Supplier;
       8: invokevirtual #11                 // Method doCommit:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Void> writeAndFlushWith(org.reactivestreams.Publisher<? extends org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>>);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: invokedynamic #13,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: invokevirtual #14                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      12: astore_2
      13: aload_0
      14: aload_0
      15: aload_2
      16: invokedynamic #15,  0             // InvokeDynamic #2:get:(Lorg/springframework/http/client/reactive/ReactorClientHttpRequest;Lorg/reactivestreams/Publisher;)Ljava/util/function/Supplier;
      21: invokevirtual #11                 // Method doCommit:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      24: areturn

  private static org.reactivestreams.Publisher<io.netty.buffer.ByteBuf> toByteBufs(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: invokedynamic #16,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: invokevirtual #14                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Void> writeWith(java.nio.file.Path, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #17,  0             // InvokeDynamic #4:get:(Lorg/springframework/http/client/reactive/ReactorClientHttpRequest;Ljava/nio/file/Path;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #11                 // Method doCommit:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Void> setComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field outbound:Lreactor/netty/NettyOutbound;
       5: dup
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #19,  0             // InvokeDynamic #5:get:(Lreactor/netty/NettyOutbound;)Ljava/util/function/Supplier;
      15: invokevirtual #11                 // Method doCommit:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  protected void applyHeaders();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
       4: aload_0
       5: invokedynamic #21,  0             // InvokeDynamic #6:accept:(Lorg/springframework/http/client/reactive/ReactorClientHttpRequest;)Ljava/util/function/BiConsumer;
      10: invokevirtual #22                 // Method org/springframework/http/HttpHeaders.forEach:(Ljava/util/function/BiConsumer;)V
      13: return

  protected void applyCookies();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getCookies:()Lorg/springframework/util/MultiValueMap;
       4: invokeinterface #24,  1           // InterfaceMethod org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
       9: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #26,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      19: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokedynamic #28,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      29: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      34: aload_0
      35: getfield      #4                  // Field request:Lreactor/netty/http/client/HttpClientRequest;
      38: dup
      39: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: pop
      43: invokedynamic #30,  0             // InvokeDynamic #9:accept:(Lreactor/netty/http/client/HttpClientRequest;)Ljava/util/function/Consumer;
      48: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      53: return

  private static io.netty.handler.codec.http.cookie.DefaultCookie lambda$applyCookies$4(org.springframework.http.HttpCookie);
    Code:
       0: new           #32                 // class io/netty/handler/codec/http/cookie/DefaultCookie
       3: dup
       4: aload_0
       5: invokevirtual #33                 // Method org/springframework/http/HttpCookie.getName:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #34                 // Method org/springframework/http/HttpCookie.getValue:()Ljava/lang/String;
      12: invokespecial #35                 // Method io/netty/handler/codec/http/cookie/DefaultCookie."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: areturn

  private void lambda$applyHeaders$3(java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Lreactor/netty/http/client/HttpClientRequest;
       4: invokeinterface #36,  1           // InterfaceMethod reactor/netty/http/client/HttpClientRequest.requestHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
       9: aload_1
      10: aload_2
      11: invokevirtual #37                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/netty/handler/codec/http/HttpHeaders;
      14: pop
      15: return

  private org.reactivestreams.Publisher lambda$writeWith$2(java.nio.file.Path, long, long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field outbound:Lreactor/netty/NettyOutbound;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokeinterface #38,  6           // InterfaceMethod reactor/netty/NettyOutbound.sendFile:(Ljava/nio/file/Path;JJ)Lreactor/netty/NettyOutbound;
      13: invokeinterface #39,  1           // InterfaceMethod reactor/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      18: areturn

  private org.reactivestreams.Publisher lambda$writeAndFlushWith$1(org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: getfield      #5                  // Field outbound:Lreactor/netty/NettyOutbound;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod reactor/netty/NettyOutbound.sendGroups:(Lorg/reactivestreams/Publisher;)Lreactor/netty/NettyOutbound;
      10: invokeinterface #39,  1           // InterfaceMethod reactor/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      15: areturn

  private org.reactivestreams.Publisher lambda$writeWith$0(org.reactivestreams.Publisher);
    Code:
       0: aload_1
       1: instanceof    #41                 // class reactor/core/publisher/Mono
       4: ifeq          36
       7: aload_1
       8: invokestatic  #42                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      11: invokedynamic #16,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      16: invokevirtual #43                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      19: astore_2
      20: aload_0
      21: getfield      #5                  // Field outbound:Lreactor/netty/NettyOutbound;
      24: aload_2
      25: invokeinterface #44,  2           // InterfaceMethod reactor/netty/NettyOutbound.send:(Lorg/reactivestreams/Publisher;)Lreactor/netty/NettyOutbound;
      30: invokeinterface #39,  1           // InterfaceMethod reactor/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      35: areturn
      36: aload_1
      37: invokestatic  #12                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      40: invokedynamic #16,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      45: invokevirtual #14                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      48: astore_2
      49: aload_0
      50: getfield      #5                  // Field outbound:Lreactor/netty/NettyOutbound;
      53: aload_2
      54: invokeinterface #44,  2           // InterfaceMethod reactor/netty/NettyOutbound.send:(Lorg/reactivestreams/Publisher;)Lreactor/netty/NettyOutbound;
      59: invokeinterface #39,  1           // InterfaceMethod reactor/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      64: areturn
}
