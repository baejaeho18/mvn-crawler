Compiled from "ServerSentEventHttpMessageReader.java"
public class org.springframework.http.codec.ServerSentEventHttpMessageReader implements org.springframework.http.codec.HttpMessageReader<java.lang.Object> {
  private static final org.springframework.core.ResolvableType STRING_TYPE;

  private static final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private final org.springframework.core.codec.Decoder<?> decoder;

  private final org.springframework.core.codec.StringDecoder lineDecoder;

  public org.springframework.http.codec.ServerSentEventHttpMessageReader();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/core/codec/Decoder;)V
       5: return

  public org.springframework.http.codec.ServerSentEventHttpMessageReader(org.springframework.core.codec.Decoder<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method org/springframework/core/codec/StringDecoder.textPlainOnly:()Lorg/springframework/core/codec/StringDecoder;
       8: putfield      #4                  // Field lineDecoder:Lorg/springframework/core/codec/StringDecoder;
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      16: return

  public org.springframework.core.codec.Decoder<?> getDecoder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field decoder:Lorg/springframework/core/codec/Decoder;
       4: areturn

  public void setMaxInMemorySize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lineDecoder:Lorg/springframework/core/codec/StringDecoder;
       4: iload_1
       5: invokevirtual #6                  // Method org/springframework/core/codec/StringDecoder.setMaxInMemorySize:(I)V
       8: return

  public int getMaxInMemorySize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lineDecoder:Lorg/springframework/core/codec/StringDecoder;
       4: invokevirtual #7                  // Method org/springframework/core/codec/StringDecoder.getMaxInMemorySize:()I
       7: ireturn

  public java.util.List<org.springframework.http.MediaType> getReadableMediaTypes();
    Code:
       0: getstatic     #8                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
       3: invokestatic  #9                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: areturn

  public boolean canRead(org.springframework.core.ResolvableType, org.springframework.http.MediaType);
    Code:
       0: getstatic     #8                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
       3: aload_2
       4: invokevirtual #10                 // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
       7: ifne          18
      10: aload_0
      11: aload_1
      12: invokespecial #11                 // Method isServerSentEvent:(Lorg/springframework/core/ResolvableType;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean isServerSentEvent(org.springframework.core.ResolvableType);
    Code:
       0: ldc           #12                 // class org/springframework/http/codec/ServerSentEvent
       2: aload_1
       3: invokevirtual #13                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #14                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public reactor.core.publisher.Flux<java.lang.Object> read(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #15                 // class org/springframework/http/codec/ServerSentEventHttpMessageReader$LimitTracker
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #16                 // Method org/springframework/http/codec/ServerSentEventHttpMessageReader$LimitTracker."<init>":(Lorg/springframework/http/codec/ServerSentEventHttpMessageReader;Lorg/springframework/http/codec/ServerSentEventHttpMessageReader$1;)V
       9: astore        4
      11: aload_0
      12: aload_1
      13: invokespecial #11                 // Method isServerSentEvent:(Lorg/springframework/core/ResolvableType;)Z
      16: istore        5
      18: iload         5
      20: ifeq          33
      23: aload_1
      24: iconst_0
      25: newarray       int
      27: invokevirtual #17                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      30: goto          34
      33: aload_1
      34: astore        6
      36: aload_0
      37: getfield      #4                  // Field lineDecoder:Lorg/springframework/core/codec/StringDecoder;
      40: aload_2
      41: invokeinterface #18,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
      46: getstatic     #19                 // Field STRING_TYPE:Lorg/springframework/core/ResolvableType;
      49: aconst_null
      50: aload_3
      51: invokevirtual #20                 // Method org/springframework/core/codec/StringDecoder.decode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      54: aload         4
      56: dup
      57: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: pop
      61: invokedynamic #22,  0             // InvokeDynamic #0:accept:(Lorg/springframework/http/codec/ServerSentEventHttpMessageReader$LimitTracker;)Ljava/util/function/Consumer;
      66: invokevirtual #23                 // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      69: invokedynamic #24,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      74: invokevirtual #25                 // Method reactor/core/publisher/Flux.bufferUntil:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
      77: aload_0
      78: aload         6
      80: iload         5
      82: aload_3
      83: invokedynamic #26,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/codec/ServerSentEventHttpMessageReader;Lorg/springframework/core/ResolvableType;ZLjava/util/Map;)Ljava/util/function/Function;
      88: invokevirtual #27                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      91: areturn

  private java.lang.Object buildEvent(java.util.List<java.lang.String>, org.springframework.core.ResolvableType, boolean, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: iload_3
       1: ifeq          10
       4: invokestatic  #28                 // Method org/springframework/http/codec/ServerSentEvent.builder:()Lorg/springframework/http/codec/ServerSentEvent$Builder;
       7: goto          11
      10: aconst_null
      11: astore        5
      13: aconst_null
      14: astore        6
      16: aconst_null
      17: astore        7
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        8
      27: aload         8
      29: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          252
      37: aload         8
      39: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #32                 // class java/lang/String
      47: astore        9
      49: aload         9
      51: ldc           #33                 // String data:
      53: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      56: ifeq          98
      59: aload         6
      61: ifnull        69
      64: aload         6
      66: goto          76
      69: new           #35                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      76: astore        6
      78: aload         6
      80: aload         9
      82: iconst_5
      83: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      86: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
      89: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #40                 // String \n
      94: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: iload_3
      99: ifeq          249
     102: aload         9
     104: ldc           #41                 // String id:
     106: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     109: ifeq          132
     112: aload         5
     114: aload         9
     116: iconst_3
     117: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     120: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
     123: invokeinterface #42,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.id:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     128: pop
     129: goto          249
     132: aload         9
     134: ldc           #43                 // String event:
     136: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     139: ifeq          163
     142: aload         5
     144: aload         9
     146: bipush        6
     148: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     151: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
     154: invokeinterface #44,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.event:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     159: pop
     160: goto          249
     163: aload         9
     165: ldc           #45                 // String retry:
     167: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     170: ifeq          200
     173: aload         5
     175: aload         9
     177: bipush        6
     179: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     182: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
     185: invokestatic  #46                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     188: invokestatic  #47                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     191: invokeinterface #48,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.retry:(Ljava/time/Duration;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     196: pop
     197: goto          249
     200: aload         9
     202: ldc           #49                 // String :
     204: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     207: ifeq          249
     210: aload         7
     212: ifnull        220
     215: aload         7
     217: goto          227
     220: new           #35                 // class java/lang/StringBuilder
     223: dup
     224: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     227: astore        7
     229: aload         7
     231: aload         9
     233: iconst_1
     234: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     237: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
     240: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: ldc           #40                 // String \n
     245: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: goto          27
     252: aload         6
     254: ifnull        269
     257: aload_0
     258: aload         6
     260: aload_2
     261: aload         4
     263: invokespecial #50                 // Method decodeData:(Ljava/lang/StringBuilder;Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Ljava/lang/Object;
     266: goto          270
     269: aconst_null
     270: astore        8
     272: iload_3
     273: ifeq          325
     276: aload         7
     278: ifnull        302
     281: aload         5
     283: aload         7
     285: iconst_0
     286: aload         7
     288: invokevirtual #51                 // Method java/lang/StringBuilder.length:()I
     291: iconst_1
     292: isub
     293: invokevirtual #52                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     296: invokeinterface #53,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.comment:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     301: pop
     302: aload         8
     304: ifnull        317
     307: aload         5
     309: aload         8
     311: invokeinterface #54,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.data:(Ljava/lang/Object;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     316: pop
     317: aload         5
     319: invokeinterface #55,  1           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.build:()Lorg/springframework/http/codec/ServerSentEvent;
     324: areturn
     325: aload         8
     327: areturn

  private java.lang.Object decodeData(java.lang.StringBuilder, org.springframework.core.ResolvableType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: ldc           #32                 // class java/lang/String
       2: aload_2
       3: invokevirtual #56                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       6: if_acmpne     21
       9: aload_1
      10: iconst_0
      11: aload_1
      12: invokevirtual #51                 // Method java/lang/StringBuilder.length:()I
      15: iconst_1
      16: isub
      17: invokevirtual #52                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
      20: areturn
      21: aload_0
      22: getfield      #5                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      25: ifnonnull     38
      28: new           #57                 // class org/springframework/core/codec/CodecException
      31: dup
      32: ldc           #58                 // String No SSE decoder configured and the data is not String.
      34: invokespecial #59                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: getstatic     #61                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      45: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      48: astore        4
      50: getstatic     #63                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      53: aload         4
      55: invokeinterface #64,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      60: astore        5
      62: aload_0
      63: getfield      #5                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      66: aload         5
      68: aload_2
      69: getstatic     #8                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
      72: aload_3
      73: invokeinterface #65,  5           // InterfaceMethod org/springframework/core/codec/Decoder.decode:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
      78: areturn

  public reactor.core.publisher.Mono<java.lang.Object> readMono(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: ldc           #32                 // class java/lang/String
       6: if_acmpne     35
       9: aload_2
      10: invokeinterface #18,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
      15: astore        4
      17: aload_0
      18: getfield      #4                  // Field lineDecoder:Lorg/springframework/core/codec/StringDecoder;
      21: aload         4
      23: aload_1
      24: aconst_null
      25: aconst_null
      26: invokevirtual #66                 // Method org/springframework/core/codec/StringDecoder.decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      29: ldc           #67                 // class java/lang/Object
      31: invokevirtual #68                 // Method reactor/core/publisher/Mono.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      34: areturn
      35: new           #69                 // class java/lang/UnsupportedOperationException
      38: dup
      39: ldc           #70                 // String ServerSentEventHttpMessageReader only supports reading stream of events as a Flux
      41: invokespecial #71                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      44: invokestatic  #72                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      47: areturn

  private org.reactivestreams.Publisher lambda$read$0(org.springframework.core.ResolvableType, boolean, java.util.Map, java.util.List);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: iload_2
       5: aload_3
       6: invokespecial #73                 // Method buildEvent:(Ljava/util/List;Lorg/springframework/core/ResolvableType;ZLjava/util/Map;)Ljava/lang/Object;
       9: astore        5
      11: aload         5
      13: ifnull        24
      16: aload         5
      18: invokestatic  #74                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      21: goto          27
      24: invokestatic  #75                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      27: areturn

  static {};
    Code:
       0: ldc           #32                 // class java/lang/String
       2: invokestatic  #76                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       5: putstatic     #19                 // Field STRING_TYPE:Lorg/springframework/core/ResolvableType;
       8: new           #77                 // class org/springframework/core/io/buffer/DefaultDataBufferFactory
      11: dup
      12: invokespecial #78                 // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
      15: putstatic     #63                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      18: return
}
