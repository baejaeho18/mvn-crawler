Compiled from "Jaxb2XmlDecoder.java"
public class org.springframework.http.codec.xml.Jaxb2XmlDecoder extends org.springframework.core.codec.AbstractDecoder<java.lang.Object> {
  private static final java.lang.String JAXB_DEFAULT_ANNOTATION_VALUE;

  private static final javax.xml.stream.XMLInputFactory inputFactory;

  private final org.springframework.http.codec.xml.XmlEventDecoder xmlEventDecoder;

  private final org.springframework.http.codec.xml.JaxbContextContainer jaxbContexts;

  private java.util.function.Function<javax.xml.bind.Unmarshaller, javax.xml.bind.Unmarshaller> unmarshallerProcessor;

  private int maxInMemorySize;

  public org.springframework.http.codec.xml.Jaxb2XmlDecoder();
    Code:
       0: aload_0
       1: iconst_3
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.APPLICATION_XML:Lorg/springframework/util/MimeType;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #3                  // Field org/springframework/util/MimeTypeUtils.TEXT_XML:Lorg/springframework/util/MimeType;
      16: aastore
      17: dup
      18: iconst_2
      19: new           #4                  // class org/springframework/http/MediaType
      22: dup
      23: ldc           #5                  // String application
      25: ldc           #6                  // String *+xml
      27: invokespecial #7                  // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: aastore
      31: invokespecial #8                  // Method org/springframework/core/codec/AbstractDecoder."<init>":([Lorg/springframework/util/MimeType;)V
      34: aload_0
      35: new           #9                  // class org/springframework/http/codec/xml/XmlEventDecoder
      38: dup
      39: invokespecial #10                 // Method org/springframework/http/codec/xml/XmlEventDecoder."<init>":()V
      42: putfield      #11                 // Field xmlEventDecoder:Lorg/springframework/http/codec/xml/XmlEventDecoder;
      45: aload_0
      46: new           #12                 // class org/springframework/http/codec/xml/JaxbContextContainer
      49: dup
      50: invokespecial #13                 // Method org/springframework/http/codec/xml/JaxbContextContainer."<init>":()V
      53: putfield      #14                 // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
      56: aload_0
      57: invokestatic  #15                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      60: putfield      #16                 // Field unmarshallerProcessor:Ljava/util/function/Function;
      63: aload_0
      64: ldc           #17                 // int 262144
      66: putfield      #18                 // Field maxInMemorySize:I
      69: return

  public org.springframework.http.codec.xml.Jaxb2XmlDecoder(org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/core/codec/AbstractDecoder."<init>":([Lorg/springframework/util/MimeType;)V
       5: aload_0
       6: new           #9                  // class org/springframework/http/codec/xml/XmlEventDecoder
       9: dup
      10: invokespecial #10                 // Method org/springframework/http/codec/xml/XmlEventDecoder."<init>":()V
      13: putfield      #11                 // Field xmlEventDecoder:Lorg/springframework/http/codec/xml/XmlEventDecoder;
      16: aload_0
      17: new           #12                 // class org/springframework/http/codec/xml/JaxbContextContainer
      20: dup
      21: invokespecial #13                 // Method org/springframework/http/codec/xml/JaxbContextContainer."<init>":()V
      24: putfield      #14                 // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
      27: aload_0
      28: invokestatic  #15                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      31: putfield      #16                 // Field unmarshallerProcessor:Ljava/util/function/Function;
      34: aload_0
      35: ldc           #17                 // int 262144
      37: putfield      #18                 // Field maxInMemorySize:I
      40: return

  public void setUnmarshallerProcessor(java.util.function.Function<javax.xml.bind.Unmarshaller, javax.xml.bind.Unmarshaller>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field unmarshallerProcessor:Ljava/util/function/Function;
       5: aload_1
       6: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.andThen:(Ljava/util/function/Function;)Ljava/util/function/Function;
      11: putfield      #16                 // Field unmarshallerProcessor:Ljava/util/function/Function;
      14: return

  public java.util.function.Function<javax.xml.bind.Unmarshaller, javax.xml.bind.Unmarshaller> getUnmarshallerProcessor();
    Code:
       0: aload_0
       1: getfield      #16                 // Field unmarshallerProcessor:Ljava/util/function/Function;
       4: areturn

  public void setMaxInMemorySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field maxInMemorySize:I
       5: aload_0
       6: getfield      #11                 // Field xmlEventDecoder:Lorg/springframework/http/codec/xml/XmlEventDecoder;
       9: iload_1
      10: invokevirtual #20                 // Method org/springframework/http/codec/xml/XmlEventDecoder.setMaxInMemorySize:(I)V
      13: return

  public int getMaxInMemorySize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxInMemorySize:I
       4: ireturn

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: ldc           #22                 // class javax/xml/bind/annotation/XmlRootElement
       8: invokevirtual #23                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      11: ifne          23
      14: aload_3
      15: ldc           #24                 // class javax/xml/bind/annotation/XmlType
      17: invokevirtual #23                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      20: ifeq          36
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #25                 // Method org/springframework/core/codec/AbstractDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public reactor.core.publisher.Flux<java.lang.Object> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field xmlEventDecoder:Lorg/springframework/http/codec/xml/XmlEventDecoder;
       4: aload_1
       5: ldc           #26                 // class javax/xml/stream/events/XMLEvent
       7: invokestatic  #27                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      10: aload_3
      11: aload         4
      13: invokevirtual #28                 // Method org/springframework/http/codec/xml/XmlEventDecoder.decode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      16: astore        5
      18: aload_2
      19: invokevirtual #21                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      22: astore        6
      24: aload_0
      25: aload         6
      27: invokevirtual #29                 // Method toQName:(Ljava/lang/Class;)Ljavax/xml/namespace/QName;
      30: astore        7
      32: aload_0
      33: aload         5
      35: aload         7
      37: invokevirtual #30                 // Method split:(Lreactor/core/publisher/Flux;Ljavax/xml/namespace/QName;)Lreactor/core/publisher/Flux;
      40: astore        8
      42: aload         8
      44: aload_0
      45: aload         6
      47: aload         4
      49: invokedynamic #31,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/xml/Jaxb2XmlDecoder;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/function/Function;
      54: invokevirtual #32                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      57: areturn

  public reactor.core.publisher.Mono<java.lang.Object> decodeToMono(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #18                 // Field maxInMemorySize:I
       5: invokestatic  #33                 // Method org/springframework/core/io/buffer/DataBufferUtils.join:(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Mono;
       8: aload_0
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokedynamic #34,  0             // InvokeDynamic #1:apply:(Lorg/springframework/http/codec/xml/Jaxb2XmlDecoder;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/util/function/Function;
      18: invokevirtual #35                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      21: areturn

  public java.lang.Object decode(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>) throws org.springframework.core.codec.DecodingException;
    Code:
       0: getstatic     #36                 // Field inputFactory:Ljavax/xml/stream/XMLInputFactory;
       3: aload_1
       4: invokeinterface #37,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asInputStream:()Ljava/io/InputStream;
       9: invokevirtual #38                 // Method javax/xml/stream/XMLInputFactory.createXMLEventReader:(Ljava/io/InputStream;)Ljavax/xml/stream/XMLEventReader;
      12: astore        5
      14: new           #39                 // class java/util/ArrayList
      17: dup
      18: invokespecial #40                 // Method java/util/ArrayList."<init>":()V
      21: astore        6
      23: aload         5
      25: aload         6
      27: invokedynamic #41,  0             // InvokeDynamic #2:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      32: invokeinterface #42,  2           // InterfaceMethod java/util/Iterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      37: aload_0
      38: aload         6
      40: aload_2
      41: invokevirtual #21                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      44: invokespecial #43                 // Method unmarshal:(Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Object;
      47: astore        7
      49: aload_1
      50: invokestatic  #44                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      53: pop
      54: aload         7
      56: areturn
      57: astore        5
      59: aload         5
      61: invokestatic  #46                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      64: athrow
      65: astore        5
      67: aload         5
      69: invokevirtual #48                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      72: instanceof    #45                 // class javax/xml/stream/XMLStreamException
      75: ifeq          86
      78: aload         5
      80: invokevirtual #48                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      83: goto          88
      86: aload         5
      88: astore        5
      90: aload         5
      92: invokestatic  #46                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      95: athrow
      96: astore        8
      98: aload_1
      99: invokestatic  #44                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     102: pop
     103: aload         8
     105: athrow
    Exception table:
       from    to  target type
           0    49    57   Class javax/xml/stream/XMLStreamException
           0    49    65   Class java/lang/Throwable
           0    49    96   any
          57    98    96   any

  private java.lang.Object unmarshal(java.util.List<javax.xml.stream.events.XMLEvent>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #49                 // Method initUnmarshaller:(Ljava/lang/Class;)Ljavax/xml/bind/Unmarshaller;
       5: astore_3
       6: aload_1
       7: invokestatic  #50                 // Method org/springframework/util/xml/StaxUtils.createXMLEventReader:(Ljava/util/List;)Ljavax/xml/stream/XMLEventReader;
      10: astore        4
      12: aload_2
      13: ldc           #22                 // class javax/xml/bind/annotation/XmlRootElement
      15: invokevirtual #23                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      18: ifeq          30
      21: aload_3
      22: aload         4
      24: invokeinterface #51,  2           // InterfaceMethod javax/xml/bind/Unmarshaller.unmarshal:(Ljavax/xml/stream/XMLEventReader;)Ljava/lang/Object;
      29: areturn
      30: aload_3
      31: aload         4
      33: aload_2
      34: invokeinterface #52,  3           // InterfaceMethod javax/xml/bind/Unmarshaller.unmarshal:(Ljavax/xml/stream/XMLEventReader;Ljava/lang/Class;)Ljavax/xml/bind/JAXBElement;
      39: astore        5
      41: aload         5
      43: invokevirtual #53                 // Method javax/xml/bind/JAXBElement.getValue:()Ljava/lang/Object;
      46: areturn
      47: astore_3
      48: new           #55                 // class org/springframework/core/codec/DecodingException
      51: dup
      52: new           #56                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #58                 // String Could not unmarshal XML to
      61: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_2
      65: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: aload_3
      72: invokespecial #62                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
      76: astore_3
      77: new           #64                 // class org/springframework/core/codec/CodecException
      80: dup
      81: ldc           #65                 // String Invalid JAXB configuration
      83: aload_3
      84: invokespecial #66                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: athrow
    Exception table:
       from    to  target type
           0    29    47   Class javax/xml/bind/UnmarshalException
          30    46    47   Class javax/xml/bind/UnmarshalException
           0    29    76   Class javax/xml/bind/JAXBException
          30    46    76   Class javax/xml/bind/JAXBException

  private javax.xml.bind.Unmarshaller initUnmarshaller(java.lang.Class<?>) throws org.springframework.core.codec.CodecException, javax.xml.bind.JAXBException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
       4: aload_1
       5: invokevirtual #67                 // Method org/springframework/http/codec/xml/JaxbContextContainer.createUnmarshaller:(Ljava/lang/Class;)Ljavax/xml/bind/Unmarshaller;
       8: astore_2
       9: aload_0
      10: getfield      #16                 // Field unmarshallerProcessor:Ljava/util/function/Function;
      13: aload_2
      14: invokeinterface #68,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #69                 // class javax/xml/bind/Unmarshaller
      22: areturn

  javax.xml.namespace.QName toQName(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #22                 // class javax/xml/bind/annotation/XmlRootElement
       3: invokevirtual #23                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          39
       9: aload_1
      10: ldc           #22                 // class javax/xml/bind/annotation/XmlRootElement
      12: invokevirtual #70                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: checkcast     #22                 // class javax/xml/bind/annotation/XmlRootElement
      18: astore        4
      20: aload         4
      22: invokeinterface #71,  1           // InterfaceMethod javax/xml/bind/annotation/XmlRootElement.name:()Ljava/lang/String;
      27: astore_2
      28: aload         4
      30: invokeinterface #72,  1           // InterfaceMethod javax/xml/bind/annotation/XmlRootElement.namespace:()Ljava/lang/String;
      35: astore_3
      36: goto          113
      39: aload_1
      40: ldc           #24                 // class javax/xml/bind/annotation/XmlType
      42: invokevirtual #23                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      45: ifeq          78
      48: aload_1
      49: ldc           #24                 // class javax/xml/bind/annotation/XmlType
      51: invokevirtual #70                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      54: checkcast     #24                 // class javax/xml/bind/annotation/XmlType
      57: astore        4
      59: aload         4
      61: invokeinterface #73,  1           // InterfaceMethod javax/xml/bind/annotation/XmlType.name:()Ljava/lang/String;
      66: astore_2
      67: aload         4
      69: invokeinterface #74,  1           // InterfaceMethod javax/xml/bind/annotation/XmlType.namespace:()Ljava/lang/String;
      74: astore_3
      75: goto          113
      78: new           #75                 // class java/lang/IllegalArgumentException
      81: dup
      82: new           #56                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #76                 // String Output class [
      91: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #77                 // Method java/lang/Class.getName:()Ljava/lang/String;
      98: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #78                 // String ] is neither annotated with @XmlRootElement nor @XmlType
     103: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: ldc           #81                 // String ##default
     115: aload_2
     116: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     119: ifeq          127
     122: aload_1
     123: invokestatic  #83                 // Method org/springframework/util/ClassUtils.getShortNameAsProperty:(Ljava/lang/Class;)Ljava/lang/String;
     126: astore_2
     127: ldc           #81                 // String ##default
     129: aload_3
     130: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     133: ifeq          183
     136: aload_1
     137: invokevirtual #84                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     140: astore        4
     142: aload         4
     144: ifnull        180
     147: aload         4
     149: ldc           #85                 // class javax/xml/bind/annotation/XmlSchema
     151: invokevirtual #86                 // Method java/lang/Package.isAnnotationPresent:(Ljava/lang/Class;)Z
     154: ifeq          180
     157: aload         4
     159: ldc           #85                 // class javax/xml/bind/annotation/XmlSchema
     161: invokevirtual #87                 // Method java/lang/Package.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     164: checkcast     #85                 // class javax/xml/bind/annotation/XmlSchema
     167: astore        5
     169: aload         5
     171: invokeinterface #88,  1           // InterfaceMethod javax/xml/bind/annotation/XmlSchema.namespace:()Ljava/lang/String;
     176: astore_3
     177: goto          183
     180: ldc           #90                 // String
     182: astore_3
     183: new           #91                 // class javax/xml/namespace/QName
     186: dup
     187: aload_3
     188: aload_2
     189: invokespecial #92                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     192: areturn

  reactor.core.publisher.Flux<java.util.List<javax.xml.stream.events.XMLEvent>> split(reactor.core.publisher.Flux<javax.xml.stream.events.XMLEvent>, javax.xml.namespace.QName);
    Code:
       0: aload_1
       1: new           #93                 // class org/springframework/http/codec/xml/Jaxb2XmlDecoder$SplitHandler
       4: dup
       5: aload_2
       6: invokespecial #94                 // Method org/springframework/http/codec/xml/Jaxb2XmlDecoder$SplitHandler."<init>":(Ljavax/xml/namespace/QName;)V
       9: invokevirtual #95                 // Method reactor/core/publisher/Flux.handle:(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
      12: areturn

  private static void lambda$decode$3(java.util.List, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class javax/xml/stream/events/XMLEvent
       5: invokeinterface #96,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private java.lang.Object lambda$decodeToMono$2(org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokevirtual #97                 // Method decode:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
       9: areturn

  private java.lang.Object lambda$decode$1(java.lang.Class, java.util.Map, java.util.List);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: invokespecial #43                 // Method unmarshal:(Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Object;
       6: astore        4
       8: aload_0
       9: getfield      #98                 // Field logger:Lorg/apache/commons/logging/Log;
      12: aload         4
      14: aload_2
      15: invokedynamic #99,  0             // InvokeDynamic #3:apply:(Ljava/lang/Object;Ljava/util/Map;)Ljava/util/function/Function;
      20: invokestatic  #100                // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      23: aload         4
      25: areturn

  private static java.lang.String lambda$null$0(java.lang.Object, java.util.Map, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #101                // Method java/lang/Boolean.booleanValue:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #102                // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      16: astore_3
      17: new           #56                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokestatic  #103                // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      28: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #104                // String Decoded [
      33: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #105                // String ]
      42: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  static {};
    Code:
       0: invokestatic  #106                // Method org/springframework/util/xml/StaxUtils.createDefensiveInputFactory:()Ljavax/xml/stream/XMLInputFactory;
       3: putstatic     #36                 // Field inputFactory:Ljavax/xml/stream/XMLInputFactory;
       6: return
}
