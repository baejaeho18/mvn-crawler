Compiled from "CommonsMultipartFile.java"
public class org.springframework.web.multipart.commons.CommonsMultipartFile implements org.springframework.web.multipart.MultipartFile,java.io.Serializable {
  protected static final org.apache.commons.logging.Log logger;

  private final org.apache.commons.fileupload.FileItem fileItem;

  private final long size;

  private boolean preserveFilename;

  public org.springframework.web.multipart.commons.CommonsMultipartFile(org.apache.commons.fileupload.FileItem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field preserveFilename:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      19: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/fileupload/FileItem.getSize:()J
      24: putfield      #5                  // Field size:J
      27: return

  public final org.apache.commons.fileupload.FileItem getFileItem();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       4: areturn

  public void setPreserveFilename(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field preserveFilename:Z
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/fileupload/FileItem.getFieldName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getOriginalFilename();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/fileupload/FileItem.getName:()Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: ifnonnull     17
      14: ldc           #8                  // String
      16: areturn
      17: aload_0
      18: getfield      #2                  // Field preserveFilename:Z
      21: ifeq          26
      24: aload_1
      25: areturn
      26: aload_1
      27: bipush        47
      29: invokevirtual #9                  // Method java/lang/String.lastIndexOf:(I)I
      32: istore_2
      33: aload_1
      34: bipush        92
      36: invokevirtual #9                  // Method java/lang/String.lastIndexOf:(I)I
      39: istore_3
      40: iload_3
      41: iload_2
      42: invokestatic  #10                 // Method java/lang/Math.max:(II)I
      45: istore        4
      47: iload         4
      49: iconst_m1
      50: if_icmpeq     62
      53: aload_1
      54: iload         4
      56: iconst_1
      57: iadd
      58: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      61: areturn
      62: aload_1
      63: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.getContentType:()Ljava/lang/String;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:J
       4: lconst_0
       5: lcmp
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:J
       4: lreturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isAvailable:()Z
       4: ifne          17
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #15                 // String File has been moved - cannot be read again
      13: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      21: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.get:()[B
      26: astore_1
      27: aload_1
      28: ifnull        35
      31: aload_1
      32: goto          38
      35: iconst_0
      36: newarray       byte
      38: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isAvailable:()Z
       4: ifne          17
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #15                 // String File has been moved - cannot be read again
      13: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      21: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.getInputStream:()Ljava/io/InputStream;
      26: astore_1
      27: aload_1
      28: ifnull        35
      31: aload_1
      32: goto          38
      35: invokestatic  #19                 // Method org/springframework/util/StreamUtils.emptyInput:()Ljava/io/InputStream;
      38: areturn

  public void transferTo(java.io.File) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isAvailable:()Z
       4: ifne          17
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String File has already been moved - cannot be transferred again
      13: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokevirtual #21                 // Method java/io/File.exists:()Z
      21: ifeq          66
      24: aload_1
      25: invokevirtual #22                 // Method java/io/File.delete:()Z
      28: ifne          66
      31: new           #23                 // class java/io/IOException
      34: dup
      35: new           #24                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #26                 // String Destination file [
      44: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #28                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      51: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #29                 // String ] already exists and could not be deleted
      56: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      70: aload_1
      71: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/fileupload/FileItem.write:(Ljava/io/File;)V
      76: getstatic     #33                 // Field logger:Lorg/apache/commons/logging/Log;
      79: aload_0
      80: aload_1
      81: invokedynamic #34,  0             // InvokeDynamic #0:apply:(Lorg/springframework/web/multipart/commons/CommonsMultipartFile;Ljava/io/File;)Ljava/util/function/Function;
      86: invokestatic  #35                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      89: goto          121
      92: astore_2
      93: new           #14                 // class java/lang/IllegalStateException
      96: dup
      97: aload_2
      98: invokevirtual #37                 // Method org/apache/commons/fileupload/FileUploadException.getMessage:()Ljava/lang/String;
     101: aload_2
     102: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: athrow
     106: astore_2
     107: aload_2
     108: athrow
     109: astore_2
     110: new           #23                 // class java/io/IOException
     113: dup
     114: ldc           #40                 // String File transfer failed
     116: aload_2
     117: invokespecial #41                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     120: athrow
     121: return
    Exception table:
       from    to  target type
          66    89    92   Class org/apache/commons/fileupload/FileUploadException
          66    89   106   Class java/lang/IllegalStateException
          66    89   106   Class java/io/IOException
          66    89   109   Class java/lang/Exception

  public void transferTo(java.nio.file.Path) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isAvailable:()Z
       4: ifne          17
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String File has already been moved - cannot be transferred again
      13: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      21: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.getInputStream:()Ljava/io/InputStream;
      26: aload_1
      27: iconst_0
      28: anewarray     #42                 // class java/nio/file/OpenOption
      31: invokestatic  #43                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      34: invokestatic  #44                 // Method org/springframework/util/FileCopyUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      37: pop
      38: return

  protected boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.isInMemory:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      18: instanceof    #46                 // class org/apache/commons/fileupload/disk/DiskFileItem
      21: ifeq          38
      24: aload_0
      25: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      28: checkcast     #46                 // class org/apache/commons/fileupload/disk/DiskFileItem
      31: invokevirtual #47                 // Method org/apache/commons/fileupload/disk/DiskFileItem.getStoreLocation:()Ljava/io/File;
      34: invokevirtual #21                 // Method java/io/File.exists:()Z
      37: ireturn
      38: aload_0
      39: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      42: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/fileupload/FileItem.getSize:()J
      47: aload_0
      48: getfield      #5                  // Field size:J
      51: lcmp
      52: ifne          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public java.lang.String getStorageDescription();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.isInMemory:()Z
       9: ifeq          15
      12: ldc           #48                 // String in memory
      14: areturn
      15: aload_0
      16: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      19: instanceof    #46                 // class org/apache/commons/fileupload/disk/DiskFileItem
      22: ifeq          62
      25: new           #24                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #49                 // String at [
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
      41: checkcast     #46                 // class org/apache/commons/fileupload/disk/DiskFileItem
      44: invokevirtual #47                 // Method org/apache/commons/fileupload/disk/DiskFileItem.getStoreLocation:()Ljava/io/File;
      47: invokevirtual #28                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      50: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #50                 // String ]
      55: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn
      62: ldc           #51                 // String on disk
      64: areturn

  private java.lang.String lambda$transferTo$0(java.io.File, java.lang.Boolean);
    Code:
       0: ldc           #52                 // String transferred
       2: astore_3
       3: aload_0
       4: getfield      #3                  // Field fileItem:Lorg/apache/commons/fileupload/FileItem;
       7: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/fileupload/FileItem.isInMemory:()Z
      12: ifne          30
      15: aload_0
      16: invokevirtual #13                 // Method isAvailable:()Z
      19: ifeq          27
      22: ldc           #53                 // String copied
      24: goto          29
      27: ldc           #54                 // String moved
      29: astore_3
      30: new           #24                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #55                 // String Part \'
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokevirtual #56                 // Method getName:()Ljava/lang/String;
      46: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #57                 // String \',  filename \'
      51: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: invokevirtual #58                 // Method getOriginalFilename:()Ljava/lang/String;
      58: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #59                 // String \'
      63: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_2
      67: invokevirtual #60                 // Method java/lang/Boolean.booleanValue:()Z
      70: ifeq          98
      73: new           #24                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #61                 // String , stored
      82: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #62                 // Method getStorageDescription:()Ljava/lang/String;
      89: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: goto          100
      98: ldc           #8                  // String
     100: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #63                 // String :
     105: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #64                 // String  to [
     114: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_1
     118: invokevirtual #28                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     121: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #50                 // String ]
     126: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: areturn

  static {};
    Code:
       0: ldc           #65                 // class org/springframework/web/multipart/commons/CommonsMultipartFile
       2: invokestatic  #66                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #33                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
