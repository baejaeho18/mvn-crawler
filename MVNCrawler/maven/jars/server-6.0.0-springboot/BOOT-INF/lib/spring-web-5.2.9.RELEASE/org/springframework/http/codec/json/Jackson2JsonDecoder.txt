Compiled from "Jackson2JsonDecoder.java"
public class org.springframework.http.codec.json.Jackson2JsonDecoder extends org.springframework.http.codec.json.AbstractJackson2Decoder {
  private static final org.springframework.core.codec.StringDecoder STRING_DECODER;

  private static final org.springframework.core.ResolvableType STRING_TYPE;

  public org.springframework.http.codec.json.Jackson2JsonDecoder();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.json:()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
       4: invokevirtual #2                  // Method org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.build:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       7: iconst_0
       8: anewarray     #3                  // class org/springframework/util/MimeType
      11: invokespecial #4                  // Method org/springframework/http/codec/json/AbstractJackson2Decoder."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
      14: return

  public org.springframework.http.codec.json.Jackson2JsonDecoder(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method org/springframework/http/codec/json/AbstractJackson2Decoder."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
       6: return

  protected reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> processInput(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: astore        5
       6: aload_3
       7: ifnonnull     13
      10: aload         5
      12: areturn
      13: aload_3
      14: invokevirtual #6                  // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      17: astore        6
      19: aload         6
      21: ifnull        46
      24: getstatic     #7                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      27: aload         6
      29: invokevirtual #8                  // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
      32: ifne          46
      35: getstatic     #9                  // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      38: aload         6
      40: invokevirtual #8                  // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
      43: ifeq          49
      46: aload         5
      48: areturn
      49: new           #3                  // class org/springframework/util/MimeType
      52: dup
      53: getstatic     #10                 // Field org/springframework/util/MimeTypeUtils.TEXT_PLAIN:Lorg/springframework/util/MimeType;
      56: aload         6
      58: invokespecial #11                 // Method org/springframework/util/MimeType."<init>":(Lorg/springframework/util/MimeType;Ljava/nio/charset/Charset;)V
      61: astore        7
      63: getstatic     #12                 // Field STRING_DECODER:Lorg/springframework/core/codec/StringDecoder;
      66: aload_1
      67: getstatic     #13                 // Field STRING_TYPE:Lorg/springframework/core/ResolvableType;
      70: aload         7
      72: aconst_null
      73: invokevirtual #14                 // Method org/springframework/core/codec/StringDecoder.decode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      76: astore        8
      78: new           #15                 // class org/springframework/core/io/buffer/DefaultDataBufferFactory
      81: dup
      82: invokespecial #16                 // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
      85: astore        9
      87: aload         8
      89: aload         9
      91: invokedynamic #17,  0             // InvokeDynamic #0:apply:(Lorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/function/Function;
      96: invokevirtual #18                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      99: areturn

  private static org.springframework.core.io.buffer.DataBuffer lambda$processInput$0(org.springframework.core.io.buffer.DataBufferFactory, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #7                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokeinterface #20,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      13: areturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #21                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #22                 // String ,
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #23                 // String \n
      13: aastore
      14: invokestatic  #24                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: iconst_0
      18: invokestatic  #25                 // Method org/springframework/core/codec/StringDecoder.textPlainOnly:(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;
      21: putstatic     #12                 // Field STRING_DECODER:Lorg/springframework/core/codec/StringDecoder;
      24: ldc           #21                 // class java/lang/String
      26: invokestatic  #26                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      29: putstatic     #13                 // Field STRING_TYPE:Lorg/springframework/core/ResolvableType;
      32: return
}
