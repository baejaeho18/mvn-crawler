Compiled from "DefaultPathContainer.java"
class org.springframework.http.server.DefaultPathContainer$DefaultPathSegment implements org.springframework.http.server.PathContainer$PathSegment {
  private final java.lang.String value;

  private final java.lang.String valueToMatch;

  private final char[] valueToMatchAsChars;

  private final org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> parameters;

  org.springframework.http.server.DefaultPathContainer$DefaultPathSegment(java.lang.String, java.lang.String, org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field valueToMatch:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      19: putfield      #5                  // Field valueToMatchAsChars:[C
      22: aload_0
      23: aload_3
      24: invokestatic  #6                  // Method org/springframework/util/CollectionUtils.unmodifiableMultiValueMap:(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
      27: putfield      #7                  // Field parameters:Lorg/springframework/util/MultiValueMap;
      30: return

  org.springframework.http.server.DefaultPathContainer$DefaultPathSegment(java.lang.String, org.springframework.http.server.DefaultPathContainer$DefaultSeparator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #8                  // Method org/springframework/http/server/DefaultPathContainer$DefaultSeparator.encodedSequence:()Ljava/lang/String;
      15: invokevirtual #9                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      18: ifeq          36
      21: aload_1
      22: aload_2
      23: invokevirtual #8                  // Method org/springframework/http/server/DefaultPathContainer$DefaultSeparator.encodedSequence:()Ljava/lang/String;
      26: aload_2
      27: invokevirtual #10                 // Method org/springframework/http/server/DefaultPathContainer$DefaultSeparator.value:()Ljava/lang/String;
      30: invokevirtual #11                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      33: goto          37
      36: aload_1
      37: putfield      #3                  // Field valueToMatch:Ljava/lang/String;
      40: aload_0
      41: aload_0
      42: getfield      #3                  // Field valueToMatch:Ljava/lang/String;
      45: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      48: putfield      #5                  // Field valueToMatchAsChars:[C
      51: aload_0
      52: invokestatic  #12                 // Method org/springframework/http/server/DefaultPathContainer.access$000:()Lorg/springframework/util/MultiValueMap;
      55: putfield      #7                  // Field parameters:Lorg/springframework/util/MultiValueMap;
      58: return

  public java.lang.String value();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/String;
       4: areturn

  public java.lang.String valueToMatch();
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueToMatch:Ljava/lang/String;
       4: areturn

  public char[] valueToMatchAsChars();
    Code:
       0: aload_0
       1: getfield      #5                  // Field valueToMatchAsChars:[C
       4: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> parameters();
    Code:
       0: aload_0
       1: getfield      #7                  // Field parameters:Lorg/springframework/util/MultiValueMap;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class org/springframework/http/server/PathContainer$PathSegment
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #14                 // Method value:()Ljava/lang/String;
      20: aload_1
      21: checkcast     #13                 // class org/springframework/http/server/PathContainer$PathSegment
      24: invokeinterface #15,  1           // InterfaceMethod org/springframework/http/server/PathContainer$PathSegment.value:()Ljava/lang/String;
      29: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/String;
       4: invokevirtual #17                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String [value=\'
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field value:Ljava/lang/String;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String \']
      21: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
