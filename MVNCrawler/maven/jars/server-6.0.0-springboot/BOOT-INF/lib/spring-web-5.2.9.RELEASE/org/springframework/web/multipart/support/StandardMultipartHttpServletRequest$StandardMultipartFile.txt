Compiled from "StandardMultipartHttpServletRequest.java"
class org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile implements org.springframework.web.multipart.MultipartFile,java.io.Serializable {
  private final javax.servlet.http.Part part;

  private final java.lang.String filename;

  public org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile(javax.servlet.http.Part, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field part:Ljavax/servlet/http/Part;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field filename:Ljava/lang/String;
      14: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #4,  1            // InterfaceMethod javax/servlet/http/Part.getName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getOriginalFilename();
    Code:
       0: aload_0
       1: getfield      #3                  // Field filename:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #5,  1            // InterfaceMethod javax/servlet/http/Part.getContentType:()Ljava/lang/String;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/Part.getSize:()J
       9: lconst_0
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/Part.getSize:()J
       9: lreturn

  public byte[] getBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/Part.getInputStream:()Ljava/io/InputStream;
       9: invokestatic  #8                  // Method org/springframework/util/FileCopyUtils.copyToByteArray:(Ljava/io/InputStream;)[B
      12: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/Part.getInputStream:()Ljava/io/InputStream;
       9: areturn

  public void transferTo(java.io.File) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: aload_1
       5: invokevirtual #9                  // Method java/io/File.getPath:()Ljava/lang/String;
       8: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/Part.write:(Ljava/lang/String;)V
      13: aload_1
      14: invokevirtual #11                 // Method java/io/File.isAbsolute:()Z
      17: ifeq          51
      20: aload_1
      21: invokevirtual #12                 // Method java/io/File.exists:()Z
      24: ifne          51
      27: aload_0
      28: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
      31: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/Part.getInputStream:()Ljava/io/InputStream;
      36: aload_1
      37: invokevirtual #13                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      40: iconst_0
      41: anewarray     #14                 // class java/nio/file/OpenOption
      44: invokestatic  #15                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      47: invokestatic  #16                 // Method org/springframework/util/FileCopyUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      50: pop
      51: return

  public void transferTo(java.nio.file.Path) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Ljavax/servlet/http/Part;
       4: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/Part.getInputStream:()Ljava/io/InputStream;
       9: aload_1
      10: iconst_0
      11: anewarray     #14                 // class java/nio/file/OpenOption
      14: invokestatic  #15                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      17: invokestatic  #16                 // Method org/springframework/util/FileCopyUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      20: pop
      21: return
}
