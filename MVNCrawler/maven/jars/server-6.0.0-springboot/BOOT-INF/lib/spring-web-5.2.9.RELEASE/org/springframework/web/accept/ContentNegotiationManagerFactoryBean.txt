Compiled from "ContentNegotiationManagerFactoryBean.java"
public class org.springframework.web.accept.ContentNegotiationManagerFactoryBean implements org.springframework.beans.factory.FactoryBean<org.springframework.web.accept.ContentNegotiationManager>, org.springframework.web.context.ServletContextAware, org.springframework.beans.factory.InitializingBean {
  private java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> strategies;

  private boolean favorPathExtension;

  private boolean favorParameter;

  private boolean ignoreAcceptHeader;

  private java.util.Map<java.lang.String, org.springframework.http.MediaType> mediaTypes;

  private boolean ignoreUnknownPathExtensions;

  private java.lang.Boolean useRegisteredExtensionsOnly;

  private java.lang.String parameterName;

  private org.springframework.web.accept.ContentNegotiationStrategy defaultNegotiationStrategy;

  private org.springframework.web.accept.ContentNegotiationManager contentNegotiationManager;

  private javax.servlet.ServletContext servletContext;

  public org.springframework.web.accept.ContentNegotiationManagerFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field favorPathExtension:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field favorParameter:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field ignoreAcceptHeader:Z
      19: aload_0
      20: new           #5                  // class java/util/HashMap
      23: dup
      24: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      27: putfield      #7                  // Field mediaTypes:Ljava/util/Map;
      30: aload_0
      31: iconst_1
      32: putfield      #8                  // Field ignoreUnknownPathExtensions:Z
      35: aload_0
      36: ldc           #9                  // String format
      38: putfield      #10                 // Field parameterName:Ljava/lang/String;
      41: return

  public void setStrategies(java.util.List<org.springframework.web.accept.ContentNegotiationStrategy>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        16
       5: new           #11                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #12                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: goto          17
      16: aconst_null
      17: putfield      #13                 // Field strategies:Ljava/util/List;
      20: return

  public void setFavorPathExtension(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field favorPathExtension:Z
       5: return

  public void setMediaTypes(java.util.Properties);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       4: ifne          17
       7: aload_1
       8: aload_0
       9: invokedynamic #15,  0             // InvokeDynamic #0:accept:(Lorg/springframework/web/accept/ContentNegotiationManagerFactoryBean;)Ljava/util/function/BiConsumer;
      14: invokevirtual #16                 // Method java/util/Properties.forEach:(Ljava/util/function/BiConsumer;)V
      17: return

  public void addMediaType(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field mediaTypes:Ljava/util/Map;
       4: aload_1
       5: getstatic     #17                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       8: invokevirtual #18                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      11: aload_2
      12: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public void addMediaTypes(java.util.Map<java.lang.String, org.springframework.http.MediaType>);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: aload_0
       6: invokedynamic #20,  0             // InvokeDynamic #1:accept:(Lorg/springframework/web/accept/ContentNegotiationManagerFactoryBean;)Ljava/util/function/BiConsumer;
      11: invokeinterface #21,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      16: return

  public void setIgnoreUnknownPathExtensions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field ignoreUnknownPathExtensions:Z
       5: return

  public void setUseJaf(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #22                 // Method setUseRegisteredExtensionsOnly:(Z)V
      13: return

  public void setUseRegisteredExtensionsOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
       8: return

  private boolean useRegisteredExtensionsOnly();
    Code:
       0: aload_0
       1: getfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
       4: ifnull        21
       7: aload_0
       8: getfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
      11: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void setFavorParameter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field favorParameter:Z
       5: return

  public void setParameterName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #26                 // String parameterName is required
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #10                 // Field parameterName:Ljava/lang/String;
      11: return

  public void setIgnoreAcceptHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field ignoreAcceptHeader:Z
       5: return

  public void setDefaultContentType(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: new           #28                 // class org/springframework/web/accept/FixedContentNegotiationStrategy
       4: dup
       5: aload_1
       6: invokespecial #29                 // Method org/springframework/web/accept/FixedContentNegotiationStrategy."<init>":(Lorg/springframework/http/MediaType;)V
       9: putfield      #30                 // Field defaultNegotiationStrategy:Lorg/springframework/web/accept/ContentNegotiationStrategy;
      12: return

  public void setDefaultContentTypes(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: new           #28                 // class org/springframework/web/accept/FixedContentNegotiationStrategy
       4: dup
       5: aload_1
       6: invokespecial #31                 // Method org/springframework/web/accept/FixedContentNegotiationStrategy."<init>":(Ljava/util/List;)V
       9: putfield      #30                 // Field defaultNegotiationStrategy:Lorg/springframework/web/accept/ContentNegotiationStrategy;
      12: return

  public void setDefaultContentTypeStrategy(org.springframework.web.accept.ContentNegotiationStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field defaultNegotiationStrategy:Lorg/springframework/web/accept/ContentNegotiationStrategy;
       5: return

  public void setServletContext(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field servletContext:Ljavax/servlet/ServletContext;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method build:()Lorg/springframework/web/accept/ContentNegotiationManager;
       4: pop
       5: return

  public org.springframework.web.accept.ContentNegotiationManager build();
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: invokespecial #34                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #13                 // Field strategies:Ljava/util/List;
      12: ifnull        29
      15: aload_1
      16: aload_0
      17: getfield      #13                 // Field strategies:Ljava/util/List;
      20: invokeinterface #35,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: goto          215
      29: aload_0
      30: getfield      #2                  // Field favorPathExtension:Z
      33: ifeq          115
      36: aload_0
      37: getfield      #32                 // Field servletContext:Ljavax/servlet/ServletContext;
      40: ifnull        69
      43: aload_0
      44: invokespecial #36                 // Method useRegisteredExtensionsOnly:()Z
      47: ifne          69
      50: new           #37                 // class org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy
      53: dup
      54: aload_0
      55: getfield      #32                 // Field servletContext:Ljavax/servlet/ServletContext;
      58: aload_0
      59: getfield      #7                  // Field mediaTypes:Ljava/util/Map;
      62: invokespecial #38                 // Method org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy."<init>":(Ljavax/servlet/ServletContext;Ljava/util/Map;)V
      65: astore_2
      66: goto          81
      69: new           #39                 // class org/springframework/web/accept/PathExtensionContentNegotiationStrategy
      72: dup
      73: aload_0
      74: getfield      #7                  // Field mediaTypes:Ljava/util/Map;
      77: invokespecial #40                 // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy."<init>":(Ljava/util/Map;)V
      80: astore_2
      81: aload_2
      82: aload_0
      83: getfield      #8                  // Field ignoreUnknownPathExtensions:Z
      86: invokevirtual #41                 // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy.setIgnoreUnknownExtensions:(Z)V
      89: aload_0
      90: getfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
      93: ifnull        107
      96: aload_2
      97: aload_0
      98: getfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
     101: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
     104: invokevirtual #42                 // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy.setUseRegisteredExtensionsOnly:(Z)V
     107: aload_1
     108: aload_2
     109: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     114: pop
     115: aload_0
     116: getfield      #3                  // Field favorParameter:Z
     119: ifeq          176
     122: new           #44                 // class org/springframework/web/accept/ParameterContentNegotiationStrategy
     125: dup
     126: aload_0
     127: getfield      #7                  // Field mediaTypes:Ljava/util/Map;
     130: invokespecial #45                 // Method org/springframework/web/accept/ParameterContentNegotiationStrategy."<init>":(Ljava/util/Map;)V
     133: astore_2
     134: aload_2
     135: aload_0
     136: getfield      #10                 // Field parameterName:Ljava/lang/String;
     139: invokevirtual #46                 // Method org/springframework/web/accept/ParameterContentNegotiationStrategy.setParameterName:(Ljava/lang/String;)V
     142: aload_0
     143: getfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
     146: ifnull        163
     149: aload_2
     150: aload_0
     151: getfield      #24                 // Field useRegisteredExtensionsOnly:Ljava/lang/Boolean;
     154: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
     157: invokevirtual #47                 // Method org/springframework/web/accept/ParameterContentNegotiationStrategy.setUseRegisteredExtensionsOnly:(Z)V
     160: goto          168
     163: aload_2
     164: iconst_1
     165: invokevirtual #47                 // Method org/springframework/web/accept/ParameterContentNegotiationStrategy.setUseRegisteredExtensionsOnly:(Z)V
     168: aload_1
     169: aload_2
     170: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     175: pop
     176: aload_0
     177: getfield      #4                  // Field ignoreAcceptHeader:Z
     180: ifne          197
     183: aload_1
     184: new           #48                 // class org/springframework/web/accept/HeaderContentNegotiationStrategy
     187: dup
     188: invokespecial #49                 // Method org/springframework/web/accept/HeaderContentNegotiationStrategy."<init>":()V
     191: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     196: pop
     197: aload_0
     198: getfield      #30                 // Field defaultNegotiationStrategy:Lorg/springframework/web/accept/ContentNegotiationStrategy;
     201: ifnull        215
     204: aload_1
     205: aload_0
     206: getfield      #30                 // Field defaultNegotiationStrategy:Lorg/springframework/web/accept/ContentNegotiationStrategy;
     209: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     214: pop
     215: aload_0
     216: new           #50                 // class org/springframework/web/accept/ContentNegotiationManager
     219: dup
     220: aload_1
     221: invokespecial #51                 // Method org/springframework/web/accept/ContentNegotiationManager."<init>":(Ljava/util/Collection;)V
     224: putfield      #52                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
     227: aload_0
     228: getfield      #7                  // Field mediaTypes:Ljava/util/Map;
     231: invokestatic  #14                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
     234: ifne          276
     237: aload_0
     238: getfield      #2                  // Field favorPathExtension:Z
     241: ifne          276
     244: aload_0
     245: getfield      #3                  // Field favorParameter:Z
     248: ifne          276
     251: aload_0
     252: getfield      #52                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
     255: iconst_1
     256: anewarray     #53                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
     259: dup
     260: iconst_0
     261: new           #54                 // class org/springframework/web/accept/MappingMediaTypeFileExtensionResolver
     264: dup
     265: aload_0
     266: getfield      #7                  // Field mediaTypes:Ljava/util/Map;
     269: invokespecial #55                 // Method org/springframework/web/accept/MappingMediaTypeFileExtensionResolver."<init>":(Ljava/util/Map;)V
     272: aastore
     273: invokevirtual #56                 // Method org/springframework/web/accept/ContentNegotiationManager.addFileExtensionResolvers:([Lorg/springframework/web/accept/MediaTypeFileExtensionResolver;)V
     276: aload_0
     277: getfield      #52                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
     280: areturn

  public org.springframework.web.accept.ContentNegotiationManager getObject();
    Code:
       0: aload_0
       1: getfield      #52                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
       4: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: ldc           #50                 // class org/springframework/web/accept/ContentNegotiationManager
       2: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getObject:()Lorg/springframework/web/accept/ContentNegotiationManager;
       4: areturn

  private void lambda$setMediaTypes$0(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class java/lang/String
       5: aload_2
       6: checkcast     #58                 // class java/lang/String
       9: invokestatic  #59                 // Method org/springframework/http/MediaType.valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      12: invokevirtual #60                 // Method addMediaType:(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
      15: return
}
