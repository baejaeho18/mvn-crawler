Compiled from "NotAcceptableStatusException.java"
public class org.springframework.web.server.NotAcceptableStatusException extends org.springframework.web.server.ResponseStatusException {
  private final java.util.List<org.springframework.http.MediaType> supportedMediaTypes;

  public org.springframework.web.server.NotAcceptableStatusException(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/HttpStatus.NOT_ACCEPTABLE:Lorg/springframework/http/HttpStatus;
       4: aload_1
       5: invokespecial #2                  // Method org/springframework/web/server/ResponseStatusException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
       8: aload_0
       9: invokestatic  #3                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: putfield      #4                  // Field supportedMediaTypes:Ljava/util/List;
      15: return

  public org.springframework.web.server.NotAcceptableStatusException(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/HttpStatus.NOT_ACCEPTABLE:Lorg/springframework/http/HttpStatus;
       4: ldc           #5                  // String Could not find acceptable representation
       6: invokespecial #2                  // Method org/springframework/web/server/ResponseStatusException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: invokestatic  #6                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      14: putfield      #4                  // Field supportedMediaTypes:Ljava/util/List;
      17: return

  public java.util.Map<java.lang.String, java.lang.String> getHeaders();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getResponseHeaders:()Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #8                  // Method org/springframework/http/HttpHeaders.toSingleValueMap:()Ljava/util/Map;
       7: areturn

  public org.springframework.http.HttpHeaders getResponseHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field supportedMediaTypes:Ljava/util/List;
       4: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          14
      10: getstatic     #10                 // Field org/springframework/http/HttpHeaders.EMPTY:Lorg/springframework/http/HttpHeaders;
      13: areturn
      14: new           #11                 // class org/springframework/http/HttpHeaders
      17: dup
      18: invokespecial #12                 // Method org/springframework/http/HttpHeaders."<init>":()V
      21: astore_1
      22: aload_1
      23: aload_0
      24: getfield      #4                  // Field supportedMediaTypes:Ljava/util/List;
      27: invokevirtual #13                 // Method org/springframework/http/HttpHeaders.setAccept:(Ljava/util/List;)V
      30: aload_1
      31: areturn

  public java.util.List<org.springframework.http.MediaType> getSupportedMediaTypes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field supportedMediaTypes:Ljava/util/List;
       4: areturn
}
