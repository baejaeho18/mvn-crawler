Compiled from "ProtobufHttpMessageConverter.java"
public class org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<com.google.protobuf.Message> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  public static final org.springframework.http.MediaType PROTOBUF;

  public static final java.lang.String X_PROTOBUF_SCHEMA_HEADER;

  public static final java.lang.String X_PROTOBUF_MESSAGE_HEADER;

  private static final java.util.Map<java.lang.Class<?>, java.lang.reflect.Method> methodCache;

  final com.google.protobuf.ExtensionRegistry extensionRegistry;

  private final org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufFormatSupport protobufFormatSupport;

  public org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;Lcom/google/protobuf/ExtensionRegistry;)V
       6: return

  public org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter(org.springframework.http.converter.protobuf.ExtensionRegistryInitializer);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;Lcom/google/protobuf/ExtensionRegistry;)V
       6: aload_1
       7: ifnull        20
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
      15: invokeinterface #3,  2            // InterfaceMethod org/springframework/http/converter/protobuf/ExtensionRegistryInitializer.initializeExtensionRegistry:(Lcom/google/protobuf/ExtensionRegistry;)V
      20: return

  public org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter(com.google.protobuf.ExtensionRegistry);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;Lcom/google/protobuf/ExtensionRegistry;)V
       6: return

  org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter(org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufFormatSupport, com.google.protobuf.ExtensionRegistry);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":()V
       4: aload_1
       5: ifnull        16
       8: aload_0
       9: aload_1
      10: putfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      13: goto          81
      16: ldc           #6                  // String com.googlecode.protobuf.format.FormatFactory
      18: aload_0
      19: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #8                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      25: invokestatic  #9                  // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      28: ifeq          45
      31: aload_0
      32: new           #10                 // class org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaFormatSupport
      35: dup
      36: invokespecial #11                 // Method org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaFormatSupport."<init>":()V
      39: putfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      42: goto          81
      45: ldc           #12                 // String com.google.protobuf.util.JsonFormat
      47: aload_0
      48: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: invokevirtual #8                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      54: invokestatic  #9                  // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      57: ifeq          76
      60: aload_0
      61: new           #13                 // class org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaUtilSupport
      64: dup
      65: aconst_null
      66: aconst_null
      67: invokespecial #14                 // Method org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaUtilSupport."<init>":(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;)V
      70: putfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      73: goto          81
      76: aload_0
      77: aconst_null
      78: putfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      81: aload_0
      82: aload_0
      83: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      86: ifnull        101
      89: aload_0
      90: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      93: invokeinterface #15,  1           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.supportedMediaTypes:()[Lorg/springframework/http/MediaType;
      98: goto          117
     101: iconst_2
     102: anewarray     #16                 // class org/springframework/http/MediaType
     105: dup
     106: iconst_0
     107: getstatic     #17                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
     110: aastore
     111: dup
     112: iconst_1
     113: getstatic     #18                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
     116: aastore
     117: invokestatic  #19                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     120: invokevirtual #20                 // Method setSupportedMediaTypes:(Ljava/util/List;)V
     123: aload_0
     124: aload_2
     125: ifnonnull     134
     128: invokestatic  #21                 // Method com/google/protobuf/ExtensionRegistry.newInstance:()Lcom/google/protobuf/ExtensionRegistry;
     131: goto          135
     134: aload_2
     135: putfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
     138: return

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: ldc           #22                 // class com/google/protobuf/Message
       2: aload_1
       3: invokevirtual #23                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  protected org.springframework.http.MediaType getDefaultContentType(com.google.protobuf.Message);
    Code:
       0: getstatic     #17                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
       3: areturn

  protected com.google.protobuf.Message readInternal(java.lang.Class<? extends com.google.protobuf.Message>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_2
       1: invokeinterface #24,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: invokevirtual #25                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       9: astore_3
      10: aload_3
      11: ifnonnull     18
      14: getstatic     #17                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      17: astore_3
      18: aload_3
      19: invokevirtual #26                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      22: astore        4
      24: aload         4
      26: ifnonnull     34
      29: getstatic     #27                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      32: astore        4
      34: aload_0
      35: aload_1
      36: invokespecial #28                 // Method getMessageBuilder:(Ljava/lang/Class;)Lcom/google/protobuf/Message$Builder;
      39: astore        5
      41: getstatic     #17                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      44: aload_3
      45: invokevirtual #29                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      48: ifeq          72
      51: aload         5
      53: aload_2
      54: invokeinterface #30,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      59: aload_0
      60: getfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
      63: invokeinterface #31,  3           // InterfaceMethod com/google/protobuf/Message$Builder.mergeFrom:(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
      68: pop
      69: goto          144
      72: getstatic     #18                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
      75: aload_3
      76: invokevirtual #29                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      79: ifeq          113
      82: new           #32                 // class java/io/InputStreamReader
      85: dup
      86: aload_2
      87: invokeinterface #30,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      92: aload         4
      94: invokespecial #33                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      97: astore        6
      99: aload         6
     101: aload_0
     102: getfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
     105: aload         5
     107: invokestatic  #34                 // Method com/google/protobuf/TextFormat.merge:(Ljava/lang/Readable;Lcom/google/protobuf/ExtensionRegistry;Lcom/google/protobuf/Message$Builder;)V
     110: goto          144
     113: aload_0
     114: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     117: ifnull        144
     120: aload_0
     121: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     124: aload_2
     125: invokeinterface #30,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
     130: aload         4
     132: aload_3
     133: aload_0
     134: getfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
     137: aload         5
     139: invokeinterface #35,  6           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.merge:(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/springframework/http/MediaType;Lcom/google/protobuf/ExtensionRegistry;Lcom/google/protobuf/Message$Builder;)V
     144: aload         5
     146: invokeinterface #36,  1           // InterfaceMethod com/google/protobuf/Message$Builder.build:()Lcom/google/protobuf/Message;
     151: areturn

  private com.google.protobuf.Message$Builder getMessageBuilder(java.lang.Class<? extends com.google.protobuf.Message>);
    Code:
       0: getstatic     #37                 // Field methodCache:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #39                 // class java/lang/reflect/Method
      12: astore_2
      13: aload_2
      14: ifnonnull     39
      17: aload_1
      18: ldc           #40                 // String newBuilder
      20: iconst_0
      21: anewarray     #41                 // class java/lang/Class
      24: invokevirtual #42                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: astore_2
      28: getstatic     #37                 // Field methodCache:Ljava/util/Map;
      31: aload_1
      32: aload_2
      33: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_2
      40: aload_1
      41: iconst_0
      42: anewarray     #44                 // class java/lang/Object
      45: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #46                 // class com/google/protobuf/Message$Builder
      51: areturn
      52: astore_2
      53: new           #48                 // class org/springframework/http/converter/HttpMessageConversionException
      56: dup
      57: new           #49                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #51                 // String Invalid Protobuf Message type: no invocable newBuilder() method on
      66: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_2
      77: invokespecial #55                 // Method org/springframework/http/converter/HttpMessageConversionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
    Exception table:
       from    to  target type
           0    51    52   Class java/lang/Exception

  protected boolean canWrite(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // Method org/springframework/http/converter/AbstractHttpMessageConverter.canWrite:(Lorg/springframework/http/MediaType;)Z
       5: ifne          28
       8: aload_0
       9: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      12: ifnull        32
      15: aload_0
      16: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      19: aload_1
      20: invokeinterface #57,  2           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.supportsWriteOnly:(Lorg/springframework/http/MediaType;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  protected void writeInternal(com.google.protobuf.Message, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_2
       1: invokeinterface #58,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: invokevirtual #25                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       9: astore_3
      10: aload_3
      11: ifnonnull     34
      14: aload_0
      15: aload_1
      16: invokevirtual #59                 // Method getDefaultContentType:(Lcom/google/protobuf/Message;)Lorg/springframework/http/MediaType;
      19: astore_3
      20: aload_3
      21: ifnull        28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #60                 // String No content type
      31: invokestatic  #61                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      34: aload_3
      35: invokevirtual #26                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      38: astore        4
      40: aload         4
      42: ifnonnull     50
      45: getstatic     #27                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      48: astore        4
      50: getstatic     #17                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      53: aload_3
      54: invokevirtual #29                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      57: ifeq          93
      60: aload_0
      61: aload_2
      62: aload_1
      63: invokespecial #62                 // Method setProtoHeader:(Lorg/springframework/http/HttpOutputMessage;Lcom/google/protobuf/Message;)V
      66: aload_2
      67: invokeinterface #63,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      72: invokestatic  #64                 // Method com/google/protobuf/CodedOutputStream.newInstance:(Ljava/io/OutputStream;)Lcom/google/protobuf/CodedOutputStream;
      75: astore        5
      77: aload_1
      78: aload         5
      80: invokeinterface #65,  2           // InterfaceMethod com/google/protobuf/Message.writeTo:(Lcom/google/protobuf/CodedOutputStream;)V
      85: aload         5
      87: invokevirtual #66                 // Method com/google/protobuf/CodedOutputStream.flush:()V
      90: goto          178
      93: getstatic     #18                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
      96: aload_3
      97: invokevirtual #29                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
     100: ifeq          143
     103: new           #67                 // class java/io/OutputStreamWriter
     106: dup
     107: aload_2
     108: invokeinterface #63,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     113: aload         4
     115: invokespecial #68                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
     118: astore        5
     120: aload_1
     121: aload         5
     123: invokestatic  #69                 // Method com/google/protobuf/TextFormat.print:(Lcom/google/protobuf/MessageOrBuilder;Ljava/lang/Appendable;)V
     126: aload         5
     128: invokevirtual #70                 // Method java/io/OutputStreamWriter.flush:()V
     131: aload_2
     132: invokeinterface #63,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     137: invokevirtual #71                 // Method java/io/OutputStream.flush:()V
     140: goto          178
     143: aload_0
     144: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     147: ifnull        178
     150: aload_0
     151: getfield      #5                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     154: aload_1
     155: aload_2
     156: invokeinterface #63,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     161: aload_3
     162: aload         4
     164: invokeinterface #72,  5           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.print:(Lcom/google/protobuf/Message;Ljava/io/OutputStream;Lorg/springframework/http/MediaType;Ljava/nio/charset/Charset;)V
     169: aload_2
     170: invokeinterface #63,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     175: invokevirtual #71                 // Method java/io/OutputStream.flush:()V
     178: return

  private void setProtoHeader(org.springframework.http.HttpOutputMessage, com.google.protobuf.Message);
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: ldc           #74                 // String X-Protobuf-Schema
       8: aload_2
       9: invokeinterface #75,  1           // InterfaceMethod com/google/protobuf/Message.getDescriptorForType:()Lcom/google/protobuf/Descriptors$Descriptor;
      14: invokevirtual #76                 // Method com/google/protobuf/Descriptors$Descriptor.getFile:()Lcom/google/protobuf/Descriptors$FileDescriptor;
      17: invokevirtual #77                 // Method com/google/protobuf/Descriptors$FileDescriptor.getName:()Ljava/lang/String;
      20: invokevirtual #78                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      23: aload_1
      24: invokeinterface #58,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      29: ldc           #79                 // String X-Protobuf-Message
      31: aload_2
      32: invokeinterface #75,  1           // InterfaceMethod com/google/protobuf/Message.getDescriptorForType:()Lcom/google/protobuf/Descriptors$Descriptor;
      37: invokevirtual #80                 // Method com/google/protobuf/Descriptors$Descriptor.getFullName:()Ljava/lang/String;
      40: invokevirtual #78                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      43: return

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class com/google/protobuf/Message
       5: aload_2
       6: invokevirtual #81                 // Method writeInternal:(Lcom/google/protobuf/Message;Lorg/springframework/http/HttpOutputMessage;)V
       9: return

  protected java.lang.Object readInternal(java.lang.Class, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #82                 // Method readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lcom/google/protobuf/Message;
       6: areturn

  protected org.springframework.http.MediaType getDefaultContentType(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class com/google/protobuf/Message
       5: invokevirtual #59                 // Method getDefaultContentType:(Lcom/google/protobuf/Message;)Lorg/springframework/http/MediaType;
       8: areturn

  static {};
    Code:
       0: getstatic     #83                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #27                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: new           #16                 // class org/springframework/http/MediaType
       9: dup
      10: ldc           #84                 // String application
      12: ldc           #85                 // String x-protobuf
      14: getstatic     #27                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      17: invokespecial #86                 // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      20: putstatic     #17                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      23: new           #87                 // class org/springframework/util/ConcurrentReferenceHashMap
      26: dup
      27: invokespecial #88                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
      30: putstatic     #37                 // Field methodCache:Ljava/util/Map;
      33: return
}
