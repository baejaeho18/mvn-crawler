Compiled from "WriteResultPublisher.java"
final class org.springframework.http.server.reactive.WriteResultPublisher$WriteResultSubscription implements org.reactivestreams.Subscription {
  private final org.springframework.http.server.reactive.WriteResultPublisher publisher;

  public org.springframework.http.server.reactive.WriteResultPublisher$WriteResultSubscription(org.springframework.http.server.reactive.WriteResultPublisher);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
       9: return

  public final void request(long);
    Code:
       0: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
       3: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          55
      11: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
      14: new           #5                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
      25: invokestatic  #7                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$100:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/lang/String;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokespecial #9                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #11                 // String  request:
      40: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: lload_1
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      55: aload_0
      56: invokespecial #9                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      59: aload_0
      60: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
      63: lload_1
      64: invokevirtual #15                 // Method org/springframework/http/server/reactive/WriteResultPublisher$State.request:(Lorg/springframework/http/server/reactive/WriteResultPublisher;J)V
      67: return

  public final void cancel();
    Code:
       0: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
       3: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          51
      11: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
      14: new           #5                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
      25: invokestatic  #7                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$100:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/lang/String;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokespecial #9                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #16                 // String  cancel
      40: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      51: aload_0
      52: invokespecial #9                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      55: aload_0
      56: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
      59: invokevirtual #17                 // Method org/springframework/http/server/reactive/WriteResultPublisher$State.cancel:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)V
      62: return

  private org.springframework.http.server.reactive.WriteResultPublisher$State state();
    Code:
       0: aload_0
       1: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
       4: invokestatic  #18                 // Method org/springframework/http/server/reactive/WriteResultPublisher.access$200:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
       7: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      10: checkcast     #20                 // class org/springframework/http/server/reactive/WriteResultPublisher$State
      13: areturn
}
