Compiled from "Jackson2CodecSupport.java"
public abstract class org.springframework.http.codec.json.Jackson2CodecSupport {
  public static final java.lang.String JSON_VIEW_HINT;

  static final java.lang.String ACTUAL_TYPE_HINT;

  private static final java.lang.String JSON_VIEW_HINT_ERROR;

  private static final java.util.List<org.springframework.util.MimeType> DEFAULT_MIME_TYPES;

  protected final org.apache.commons.logging.Log logger;

  private final com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private final java.util.List<org.springframework.util.MimeType> mimeTypes;

  protected org.springframework.http.codec.json.Jackson2CodecSupport(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/springframework/http/HttpLogging.forLogName:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #5                  // String ObjectMapper must not be null
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      26: aload_0
      27: aload_2
      28: invokestatic  #8                  // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      31: ifne          44
      34: aload_2
      35: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      38: invokestatic  #10                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      41: goto          47
      44: getstatic     #11                 // Field DEFAULT_MIME_TYPES:Ljava/util/List;
      47: putfield      #12                 // Field mimeTypes:Ljava/util/List;
      50: return

  public com.fasterxml.jackson.databind.ObjectMapper getObjectMapper();
    Code:
       0: aload_0
       1: getfield      #7                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: areturn

  protected java.util.List<org.springframework.util.MimeType> getMimeTypes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field mimeTypes:Ljava/util/List;
       4: areturn

  protected boolean supportsMimeType(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_0
       5: getfield      #12                 // Field mimeTypes:Ljava/util/List;
       8: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      13: aload_1
      14: invokedynamic #14,  0             // InvokeDynamic #0:test:(Lorg/springframework/util/MimeType;)Ljava/util/function/Predicate;
      19: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  protected com.fasterxml.jackson.databind.JavaType getJavaType(java.lang.reflect.Type, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: invokevirtual #16                 // Method com/fasterxml/jackson/databind/ObjectMapper.getTypeFactory:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       7: astore_3
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokestatic  #17                 // Method org/springframework/core/GenericTypeResolver.resolveType:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;
      14: invokevirtual #18                 // Method com/fasterxml/jackson/databind/type/TypeFactory.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      17: areturn

  protected java.util.Map<java.lang.String, java.lang.Object> getHints(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getParameter:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/MethodParameter;
       5: astore_2
       6: aload_2
       7: ifnull        136
      10: aconst_null
      11: astore_3
      12: aload_1
      13: invokevirtual #20                 // Method org/springframework/core/ResolvableType.hasGenerics:()Z
      16: ifeq          39
      19: new           #21                 // class java/util/HashMap
      22: dup
      23: iconst_2
      24: invokespecial #22                 // Method java/util/HashMap."<init>":(I)V
      27: astore_3
      28: aload_3
      29: getstatic     #23                 // Field ACTUAL_TYPE_HINT:Ljava/lang/String;
      32: aload_1
      33: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: aload_2
      41: ldc           #25                 // class com/fasterxml/jackson/annotation/JsonView
      43: invokevirtual #26                 // Method getAnnotation:(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      46: checkcast     #25                 // class com/fasterxml/jackson/annotation/JsonView
      49: astore        4
      51: aload         4
      53: ifnull        130
      56: aload         4
      58: invokeinterface #27,  1           // InterfaceMethod com/fasterxml/jackson/annotation/JsonView.value:()[Ljava/lang/Class;
      63: astore        5
      65: aload         5
      67: arraylength
      68: iconst_1
      69: if_icmpne     76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: new           #28                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #31                 // String @JsonView only supported for write hints with exactly 1 class argument:
      86: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_2
      90: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokestatic  #35                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      99: aload_3
     100: ifnull        107
     103: aload_3
     104: goto          115
     107: new           #21                 // class java/util/HashMap
     110: dup
     111: iconst_1
     112: invokespecial #22                 // Method java/util/HashMap."<init>":(I)V
     115: astore_3
     116: aload_3
     117: getstatic     #36                 // Field JSON_VIEW_HINT:Ljava/lang/String;
     120: aload         5
     122: iconst_0
     123: aaload
     124: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_3
     131: ifnull        136
     134: aload_3
     135: areturn
     136: invokestatic  #37                 // Method org/springframework/core/codec/Hints.none:()Ljava/util/Map;
     139: areturn

  protected org.springframework.core.MethodParameter getParameter(org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
       4: instanceof    #39                 // class org/springframework/core/MethodParameter
       7: ifeq          20
      10: aload_1
      11: invokevirtual #38                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
      14: checkcast     #39                 // class org/springframework/core/MethodParameter
      17: goto          21
      20: aconst_null
      21: areturn

  protected abstract <A extends java.lang.annotation.Annotation> A getAnnotation(org.springframework.core.MethodParameter, java.lang.Class<A>);

  private static boolean lambda$supportsMimeType$0(org.springframework.util.MimeType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #40                 // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
       5: ireturn

  static {};
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #30                 // class org/springframework/http/codec/json/Jackson2CodecSupport
       9: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #42                 // String .jsonView
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #36                 // Field JSON_VIEW_HINT:Ljava/lang/String;
      26: new           #28                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #30                 // class org/springframework/http/codec/json/Jackson2CodecSupport
      35: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #43                 // String .actualType
      43: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: putstatic     #23                 // Field ACTUAL_TYPE_HINT:Ljava/lang/String;
      52: iconst_2
      53: anewarray     #44                 // class org/springframework/util/MimeType
      56: dup
      57: iconst_0
      58: new           #44                 // class org/springframework/util/MimeType
      61: dup
      62: ldc           #45                 // String application
      64: ldc           #46                 // String json
      66: invokespecial #47                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      69: aastore
      70: dup
      71: iconst_1
      72: new           #44                 // class org/springframework/util/MimeType
      75: dup
      76: ldc           #45                 // String application
      78: ldc           #48                 // String *+json
      80: invokespecial #47                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      83: aastore
      84: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      87: invokestatic  #10                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      90: putstatic     #11                 // Field DEFAULT_MIME_TYPES:Ljava/util/List;
      93: return
}
