Compiled from "MappingJackson2HttpMessageConverter.java"
public class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter extends org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter {
  private java.lang.String jsonPrefix;

  public org.springframework.http.converter.json.MappingJackson2HttpMessageConverter();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.json:()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
       4: invokevirtual #2                  // Method org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.build:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       7: invokespecial #3                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
      10: return

  public org.springframework.http.converter.json.MappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: anewarray     #4                  // class org/springframework/http/MediaType
       6: dup
       7: iconst_0
       8: getstatic     #5                  // Field org/springframework/http/MediaType.APPLICATION_JSON:Lorg/springframework/http/MediaType;
      11: aastore
      12: dup
      13: iconst_1
      14: new           #4                  // class org/springframework/http/MediaType
      17: dup
      18: ldc           #6                  // String application
      20: ldc           #7                  // String *+json
      22: invokespecial #8                  // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: aastore
      26: invokespecial #9                  // Method org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/http/MediaType;)V
      29: return

  public void setJsonPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field jsonPrefix:Ljava/lang/String;
       5: return

  public void setPrefixJson(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          10
       5: ldc           #11                 // String )]}\',
       7: goto          11
      10: aconst_null
      11: putfield      #10                 // Field jsonPrefix:Ljava/lang/String;
      14: return

  protected void writePrefix(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field jsonPrefix:Ljava/lang/String;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #10                 // Field jsonPrefix:Ljava/lang/String;
      12: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V
      15: return
}
