Compiled from "Jaxb2XmlEncoder.java"
public class org.springframework.http.codec.xml.Jaxb2XmlEncoder extends org.springframework.core.codec.AbstractSingleValueEncoder<java.lang.Object> {
  private final org.springframework.http.codec.xml.JaxbContextContainer jaxbContexts;

  private java.util.function.Function<javax.xml.bind.Marshaller, javax.xml.bind.Marshaller> marshallerProcessor;

  public org.springframework.http.codec.xml.Jaxb2XmlEncoder();
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.APPLICATION_XML:Lorg/springframework/util/MimeType;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #3                  // Field org/springframework/util/MimeTypeUtils.TEXT_XML:Lorg/springframework/util/MimeType;
      16: aastore
      17: invokespecial #4                  // Method org/springframework/core/codec/AbstractSingleValueEncoder."<init>":([Lorg/springframework/util/MimeType;)V
      20: aload_0
      21: new           #5                  // class org/springframework/http/codec/xml/JaxbContextContainer
      24: dup
      25: invokespecial #6                  // Method org/springframework/http/codec/xml/JaxbContextContainer."<init>":()V
      28: putfield      #7                  // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
      31: aload_0
      32: invokestatic  #8                  // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      35: putfield      #9                  // Field marshallerProcessor:Ljava/util/function/Function;
      38: return

  public void setMarshallerProcessor(java.util.function.Function<javax.xml.bind.Marshaller, javax.xml.bind.Marshaller>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field marshallerProcessor:Ljava/util/function/Function;
       5: aload_1
       6: invokeinterface #10,  2           // InterfaceMethod java/util/function/Function.andThen:(Ljava/util/function/Function;)Ljava/util/function/Function;
      11: putfield      #9                  // Field marshallerProcessor:Ljava/util/function/Function;
      14: return

  public java.util.function.Function<javax.xml.bind.Marshaller, javax.xml.bind.Marshaller> getMarshallerProcessor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field marshallerProcessor:Ljava/util/function/Function;
       4: areturn

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method org/springframework/core/codec/AbstractSingleValueEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
       6: ifeq          38
       9: aload_1
      10: invokevirtual #12                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      13: astore_3
      14: aload_3
      15: ldc           #13                 // class javax/xml/bind/annotation/XmlRootElement
      17: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      20: ifne          32
      23: aload_3
      24: ldc           #15                 // class javax/xml/bind/annotation/XmlType
      26: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn
      38: iconst_0
      39: ireturn

  protected reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(java.lang.Object, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokedynamic #16,  0             // InvokeDynamic #0:call:(Lorg/springframework/http/codec/xml/Jaxb2XmlEncoder;Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/util/concurrent/Callable;
      13: invokestatic  #17                 // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
      16: invokevirtual #18                 // Method reactor/core/publisher/Mono.flux:()Lreactor/core/publisher/Flux;
      19: areturn

  public org.springframework.core.io.buffer.DataBuffer encodeValue(java.lang.Object, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload         5
       2: invokestatic  #19                 // Method org/springframework/core/codec/Hints.isLoggingSuppressed:(Ljava/util/Map;)Z
       5: ifne          23
       8: aload_0
       9: getfield      #20                 // Field logger:Lorg/apache/commons/logging/Log;
      12: aload_1
      13: aload         5
      15: invokedynamic #21,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;Ljava/util/Map;)Ljava/util/function/Function;
      20: invokestatic  #22                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      23: iconst_1
      24: istore        6
      26: aload_2
      27: sipush        1024
      30: invokeinterface #23,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      35: astore        7
      37: aload         7
      39: invokeinterface #24,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asOutputStream:()Ljava/io/OutputStream;
      44: astore        8
      46: aload_1
      47: invokestatic  #25                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Object;)Ljava/lang/Class;
      50: astore        9
      52: aload_0
      53: aload         9
      55: invokespecial #26                 // Method initMarshaller:(Ljava/lang/Class;)Ljavax/xml/bind/Marshaller;
      58: astore        10
      60: aload         10
      62: aload_1
      63: aload         8
      65: invokeinterface #27,  3           // InterfaceMethod javax/xml/bind/Marshaller.marshal:(Ljava/lang/Object;Ljava/io/OutputStream;)V
      70: iconst_0
      71: istore        6
      73: aload         7
      75: astore        11
      77: iload         6
      79: ifeq          88
      82: aload         7
      84: invokestatic  #28                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      87: pop
      88: aload         11
      90: areturn
      91: astore        8
      93: new           #30                 // class org/springframework/core/codec/EncodingException
      96: dup
      97: new           #31                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #33                 // String Could not marshal
     106: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_1
     110: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     113: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: ldc           #37                 // String  to XML
     118: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: aload         8
     126: invokespecial #39                 // Method org/springframework/core/codec/EncodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     129: athrow
     130: astore        8
     132: new           #41                 // class org/springframework/core/codec/CodecException
     135: dup
     136: ldc           #42                 // String Invalid JAXB configuration
     138: aload         8
     140: invokespecial #43                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     143: athrow
     144: astore        12
     146: iload         6
     148: ifeq          157
     151: aload         7
     153: invokestatic  #28                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     156: pop
     157: aload         12
     159: athrow
    Exception table:
       from    to  target type
          37    77    91   Class javax/xml/bind/MarshalException
          37    77   130   Class javax/xml/bind/JAXBException
          37    77   144   any
          91   146   144   any

  private javax.xml.bind.Marshaller initMarshaller(java.lang.Class<?>) throws org.springframework.core.codec.CodecException, javax.xml.bind.JAXBException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
       4: aload_1
       5: invokevirtual #44                 // Method org/springframework/http/codec/xml/JaxbContextContainer.createMarshaller:(Ljava/lang/Class;)Ljavax/xml/bind/Marshaller;
       8: astore_2
       9: aload_2
      10: ldc           #46                 // String jaxb.encoding
      12: getstatic     #47                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      15: invokevirtual #48                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      18: invokeinterface #49,  3           // InterfaceMethod javax/xml/bind/Marshaller.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #9                  // Field marshallerProcessor:Ljava/util/function/Function;
      27: aload_2
      28: invokeinterface #50,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #45                 // class javax/xml/bind/Marshaller
      36: astore_2
      37: aload_2
      38: areturn

  private static java.lang.String lambda$encodeValue$1(java.lang.Object, java.util.Map, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #51                 // Method java/lang/Boolean.booleanValue:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #52                 // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      16: astore_3
      17: new           #31                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokestatic  #53                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      28: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #54                 // String Encoding [
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #55                 // String ]
      42: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$0(java.lang.Object, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokevirtual #56                 // Method encodeValue:(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
      11: areturn
}
