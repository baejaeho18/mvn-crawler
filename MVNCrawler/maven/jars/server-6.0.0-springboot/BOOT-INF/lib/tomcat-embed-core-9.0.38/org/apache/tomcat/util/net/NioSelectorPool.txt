Compiled from "NioSelectorPool.java"
public class org.apache.tomcat.util.net.NioSelectorPool {
  protected org.apache.tomcat.util.net.NioBlockingSelector blockingSelector;

  protected volatile java.nio.channels.Selector sharedSelector;

  protected boolean shared;

  protected int maxSelectors;

  protected long sharedSelectorTimeout;

  protected int maxSpareSelectors;

  protected boolean enabled;

  protected java.util.concurrent.atomic.AtomicInteger active;

  protected java.util.concurrent.atomic.AtomicInteger spare;

  protected java.util.concurrent.ConcurrentLinkedQueue<java.nio.channels.Selector> selectors;

  public org.apache.tomcat.util.net.NioSelectorPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String org.apache.tomcat.util.net.NioSelectorShared
       7: ldc           #3                  // String true
       9: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: invokestatic  #5                  // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      15: putfield      #6                  // Field shared:Z
      18: aload_0
      19: sipush        200
      22: putfield      #7                  // Field maxSelectors:I
      25: aload_0
      26: ldc2_w        #8                  // long 30000l
      29: putfield      #10                 // Field sharedSelectorTimeout:J
      32: aload_0
      33: iconst_m1
      34: putfield      #11                 // Field maxSpareSelectors:I
      37: aload_0
      38: iconst_1
      39: putfield      #12                 // Field enabled:Z
      42: aload_0
      43: new           #13                 // class java/util/concurrent/atomic/AtomicInteger
      46: dup
      47: iconst_0
      48: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      51: putfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      54: aload_0
      55: new           #13                 // class java/util/concurrent/atomic/AtomicInteger
      58: dup
      59: iconst_0
      60: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      63: putfield      #16                 // Field spare:Ljava/util/concurrent/atomic/AtomicInteger;
      66: aload_0
      67: new           #17                 // class java/util/concurrent/ConcurrentLinkedQueue
      70: dup
      71: invokespecial #18                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      74: putfield      #19                 // Field selectors:Ljava/util/concurrent/ConcurrentLinkedQueue;
      77: return

  protected java.nio.channels.Selector getSharedSelector() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field shared:Z
       4: ifeq          43
       7: aload_0
       8: getfield      #20                 // Field sharedSelector:Ljava/nio/channels/Selector;
      11: ifnonnull     43
      14: ldc           #21                 // class org/apache/tomcat/util/net/NioSelectorPool
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: getfield      #20                 // Field sharedSelector:Ljava/nio/channels/Selector;
      23: ifnonnull     33
      26: aload_0
      27: invokestatic  #22                 // Method java/nio/channels/Selector.open:()Ljava/nio/channels/Selector;
      30: putfield      #20                 // Field sharedSelector:Ljava/nio/channels/Selector;
      33: aload_1
      34: monitorexit
      35: goto          43
      38: astore_2
      39: aload_1
      40: monitorexit
      41: aload_2
      42: athrow
      43: aload_0
      44: getfield      #20                 // Field sharedSelector:Ljava/nio/channels/Selector;
      47: areturn
    Exception table:
       from    to  target type
          19    35    38   any
          38    41    38   any

  public java.nio.channels.Selector get() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field shared:Z
       4: ifeq          12
       7: aload_0
       8: invokevirtual #23                 // Method getSharedSelector:()Ljava/nio/channels/Selector;
      11: areturn
      12: aload_0
      13: getfield      #12                 // Field enabled:Z
      16: ifeq          33
      19: aload_0
      20: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      26: aload_0
      27: getfield      #7                  // Field maxSelectors:I
      30: if_icmplt     50
      33: aload_0
      34: getfield      #12                 // Field enabled:Z
      37: ifeq          48
      40: aload_0
      41: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      44: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      47: pop
      48: aconst_null
      49: areturn
      50: aconst_null
      51: astore_1
      52: aload_0
      53: getfield      #19                 // Field selectors:Ljava/util/concurrent/ConcurrentLinkedQueue;
      56: invokevirtual #26                 // Method java/util/concurrent/ConcurrentLinkedQueue.size:()I
      59: ifle          75
      62: aload_0
      63: getfield      #19                 // Field selectors:Ljava/util/concurrent/ConcurrentLinkedQueue;
      66: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      69: checkcast     #28                 // class java/nio/channels/Selector
      72: goto          76
      75: aconst_null
      76: astore_1
      77: aload_1
      78: ifnonnull     88
      81: invokestatic  #22                 // Method java/nio/channels/Selector.open:()Ljava/nio/channels/Selector;
      84: astore_1
      85: goto          96
      88: aload_0
      89: getfield      #16                 // Field spare:Ljava/util/concurrent/atomic/AtomicInteger;
      92: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      95: pop
      96: aload_1
      97: ifnonnull     152
     100: aload_0
     101: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
     104: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     107: pop
     108: goto          152
     111: astore_2
     112: invokestatic  #22                 // Method java/nio/channels/Selector.open:()Ljava/nio/channels/Selector;
     115: astore_1
     116: goto          120
     119: astore_3
     120: aload_1
     121: ifnonnull     152
     124: aload_0
     125: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
     128: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     131: pop
     132: goto          152
     135: astore        4
     137: aload_1
     138: ifnonnull     149
     141: aload_0
     142: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
     145: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     148: pop
     149: aload         4
     151: athrow
     152: aload_1
     153: areturn
    Exception table:
       from    to  target type
          52    96   111   Class java/util/NoSuchElementException
         112   116   119   Class java/io/IOException
          52    96   135   any
         111   120   135   any
         135   137   135   any

  public void put(java.nio.channels.Selector) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field shared:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #12                 // Field enabled:Z
      12: ifeq          23
      15: aload_0
      16: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      22: pop
      23: aload_0
      24: getfield      #12                 // Field enabled:Z
      27: ifeq          79
      30: aload_0
      31: getfield      #11                 // Field maxSpareSelectors:I
      34: iconst_m1
      35: if_icmpeq     59
      38: aload_0
      39: getfield      #16                 // Field spare:Ljava/util/concurrent/atomic/AtomicInteger;
      42: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      45: aload_0
      46: getfield      #11                 // Field maxSpareSelectors:I
      49: aload_0
      50: getfield      #7                  // Field maxSelectors:I
      53: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      56: if_icmpge     79
      59: aload_0
      60: getfield      #16                 // Field spare:Ljava/util/concurrent/atomic/AtomicInteger;
      63: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      66: pop
      67: aload_0
      68: getfield      #19                 // Field selectors:Ljava/util/concurrent/ConcurrentLinkedQueue;
      71: aload_1
      72: invokevirtual #33                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
      75: pop
      76: goto          83
      79: aload_1
      80: invokevirtual #34                 // Method java/nio/channels/Selector.close:()V
      83: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #12                 // Field enabled:Z
       5: aload_0
       6: getfield      #19                 // Field selectors:Ljava/util/concurrent/ConcurrentLinkedQueue;
       9: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      12: checkcast     #28                 // class java/nio/channels/Selector
      15: dup
      16: astore_1
      17: ifnull        27
      20: aload_1
      21: invokevirtual #34                 // Method java/nio/channels/Selector.close:()V
      24: goto          5
      27: aload_0
      28: getfield      #16                 // Field spare:Ljava/util/concurrent/atomic/AtomicInteger;
      31: iconst_0
      32: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      35: aload_0
      36: getfield      #15                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      39: iconst_0
      40: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      43: aload_0
      44: getfield      #36                 // Field blockingSelector:Lorg/apache/tomcat/util/net/NioBlockingSelector;
      47: ifnull        57
      50: aload_0
      51: getfield      #36                 // Field blockingSelector:Lorg/apache/tomcat/util/net/NioBlockingSelector;
      54: invokevirtual #37                 // Method org/apache/tomcat/util/net/NioBlockingSelector.close:()V
      57: aload_0
      58: getfield      #6                  // Field shared:Z
      61: ifeq          83
      64: aload_0
      65: invokevirtual #23                 // Method getSharedSelector:()Ljava/nio/channels/Selector;
      68: ifnull        83
      71: aload_0
      72: invokevirtual #23                 // Method getSharedSelector:()Ljava/nio/channels/Selector;
      75: invokevirtual #34                 // Method java/nio/channels/Selector.close:()V
      78: aload_0
      79: aconst_null
      80: putfield      #20                 // Field sharedSelector:Ljava/nio/channels/Selector;
      83: return

  public void open(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field enabled:Z
       5: aload_0
       6: invokevirtual #23                 // Method getSharedSelector:()Ljava/nio/channels/Selector;
       9: pop
      10: aload_0
      11: getfield      #6                  // Field shared:Z
      14: ifeq          40
      17: aload_0
      18: new           #38                 // class org/apache/tomcat/util/net/NioBlockingSelector
      21: dup
      22: invokespecial #39                 // Method org/apache/tomcat/util/net/NioBlockingSelector."<init>":()V
      25: putfield      #36                 // Field blockingSelector:Lorg/apache/tomcat/util/net/NioBlockingSelector;
      28: aload_0
      29: getfield      #36                 // Field blockingSelector:Lorg/apache/tomcat/util/net/NioBlockingSelector;
      32: aload_1
      33: aload_0
      34: invokevirtual #23                 // Method getSharedSelector:()Ljava/nio/channels/Selector;
      37: invokevirtual #40                 // Method org/apache/tomcat/util/net/NioBlockingSelector.open:(Ljava/lang/String;Ljava/nio/channels/Selector;)V
      40: return

  public int write(java.nio.ByteBuffer, org.apache.tomcat.util.net.NioChannel, java.nio.channels.Selector, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field shared:Z
       4: ifeq          19
       7: aload_0
       8: getfield      #36                 // Field blockingSelector:Lorg/apache/tomcat/util/net/NioBlockingSelector;
      11: aload_1
      12: aload_2
      13: lload         4
      15: invokevirtual #41                 // Method org/apache/tomcat/util/net/NioBlockingSelector.write:(Ljava/nio/ByteBuffer;Lorg/apache/tomcat/util/net/NioChannel;J)I
      18: ireturn
      19: aconst_null
      20: astore        6
      22: iconst_0
      23: istore        7
      25: iconst_0
      26: istore        8
      28: iconst_1
      29: istore        9
      31: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
      34: lstore        10
      36: iload         8
      38: ifne          205
      41: aload_1
      42: invokevirtual #43                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      45: ifeq          205
      48: iconst_0
      49: istore        12
      51: iload         9
      53: ifle          97
      56: aload_2
      57: aload_1
      58: invokevirtual #44                 // Method org/apache/tomcat/util/net/NioChannel.write:(Ljava/nio/ByteBuffer;)I
      61: istore        12
      63: iload         12
      65: iconst_m1
      66: if_icmpne     77
      69: new           #45                 // class java/io/EOFException
      72: dup
      73: invokespecial #46                 // Method java/io/EOFException."<init>":()V
      76: athrow
      77: iload         7
      79: iload         12
      81: iadd
      82: istore        7
      84: iload         12
      86: ifle          97
      89: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
      92: lstore        10
      94: goto          36
      97: aload_3
      98: ifnull        167
     101: aload         6
     103: ifnonnull     120
     106: aload_2
     107: invokevirtual #47                 // Method org/apache/tomcat/util/net/NioChannel.getIOChannel:()Ljava/nio/channels/SocketChannel;
     110: aload_3
     111: iconst_4
     112: invokevirtual #49                 // Method java/nio/channels/SocketChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
     115: astore        6
     117: goto          127
     120: aload         6
     122: iconst_4
     123: invokevirtual #50                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
     126: pop
     127: lload         4
     129: lconst_0
     130: lcmp
     131: ifne          143
     134: aload_1
     135: invokevirtual #43                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     138: istore        8
     140: goto          167
     143: lload         4
     145: lconst_0
     146: lcmp
     147: ifge          159
     150: aload_3
     151: invokevirtual #51                 // Method java/nio/channels/Selector.select:()I
     154: istore        9
     156: goto          167
     159: aload_3
     160: lload         4
     162: invokevirtual #52                 // Method java/nio/channels/Selector.select:(J)I
     165: istore        9
     167: lload         4
     169: lconst_0
     170: lcmp
     171: ifle          202
     174: aload_3
     175: ifnull        183
     178: iload         9
     180: ifne          202
     183: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
     186: lload         10
     188: lsub
     189: lload         4
     191: lcmp
     192: iflt          199
     195: iconst_1
     196: goto          200
     199: iconst_0
     200: istore        8
     202: goto          36
     205: iload         8
     207: ifeq          218
     210: new           #53                 // class java/net/SocketTimeoutException
     213: dup
     214: invokespecial #54                 // Method java/net/SocketTimeoutException."<init>":()V
     217: athrow
     218: aload         6
     220: ifnull        264
     223: aload         6
     225: invokevirtual #55                 // Method java/nio/channels/SelectionKey.cancel:()V
     228: aload_3
     229: ifnull        264
     232: aload_3
     233: invokevirtual #56                 // Method java/nio/channels/Selector.selectNow:()I
     236: pop
     237: goto          264
     240: astore        13
     242: aload         6
     244: ifnull        261
     247: aload         6
     249: invokevirtual #55                 // Method java/nio/channels/SelectionKey.cancel:()V
     252: aload_3
     253: ifnull        261
     256: aload_3
     257: invokevirtual #56                 // Method java/nio/channels/Selector.selectNow:()I
     260: pop
     261: aload         13
     263: athrow
     264: iload         7
     266: ireturn
    Exception table:
       from    to  target type
          36   218   240   any
         240   242   240   any

  public int read(java.nio.ByteBuffer, org.apache.tomcat.util.net.NioChannel, java.nio.channels.Selector, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field shared:Z
       4: ifeq          19
       7: aload_0
       8: getfield      #36                 // Field blockingSelector:Lorg/apache/tomcat/util/net/NioBlockingSelector;
      11: aload_1
      12: aload_2
      13: lload         4
      15: invokevirtual #57                 // Method org/apache/tomcat/util/net/NioBlockingSelector.read:(Ljava/nio/ByteBuffer;Lorg/apache/tomcat/util/net/NioChannel;J)I
      18: ireturn
      19: aconst_null
      20: astore        6
      22: iconst_0
      23: istore        7
      25: iconst_0
      26: istore        8
      28: iconst_1
      29: istore        9
      31: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
      34: lstore        10
      36: iload         8
      38: ifne          215
      41: iconst_0
      42: istore        12
      44: iload         9
      46: ifle          101
      49: aload_2
      50: aload_1
      51: invokevirtual #58                 // Method org/apache/tomcat/util/net/NioChannel.read:(Ljava/nio/ByteBuffer;)I
      54: istore        12
      56: iload         12
      58: iconst_m1
      59: if_icmpne     73
      62: iload         7
      64: ifne          215
      67: iconst_m1
      68: istore        7
      70: goto          215
      73: iload         7
      75: iload         12
      77: iadd
      78: istore        7
      80: iload         12
      82: ifle          88
      85: goto          36
      88: iload         12
      90: ifne          101
      93: iload         7
      95: ifle          101
      98: goto          215
     101: aload_3
     102: ifnull        177
     105: aload         6
     107: ifnonnull     124
     110: aload_2
     111: invokevirtual #47                 // Method org/apache/tomcat/util/net/NioChannel.getIOChannel:()Ljava/nio/channels/SocketChannel;
     114: aload_3
     115: iconst_1
     116: invokevirtual #49                 // Method java/nio/channels/SocketChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
     119: astore        6
     121: goto          131
     124: aload         6
     126: iconst_1
     127: invokevirtual #50                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
     130: pop
     131: lload         4
     133: lconst_0
     134: lcmp
     135: ifne          153
     138: iload         7
     140: ifne          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: istore        8
     150: goto          177
     153: lload         4
     155: lconst_0
     156: lcmp
     157: ifge          169
     160: aload_3
     161: invokevirtual #51                 // Method java/nio/channels/Selector.select:()I
     164: istore        9
     166: goto          177
     169: aload_3
     170: lload         4
     172: invokevirtual #52                 // Method java/nio/channels/Selector.select:(J)I
     175: istore        9
     177: lload         4
     179: lconst_0
     180: lcmp
     181: ifle          212
     184: aload_3
     185: ifnull        193
     188: iload         9
     190: ifne          212
     193: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
     196: lload         10
     198: lsub
     199: lload         4
     201: lcmp
     202: iflt          209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: istore        8
     212: goto          36
     215: iload         8
     217: ifeq          228
     220: new           #53                 // class java/net/SocketTimeoutException
     223: dup
     224: invokespecial #54                 // Method java/net/SocketTimeoutException."<init>":()V
     227: athrow
     228: aload         6
     230: ifnull        274
     233: aload         6
     235: invokevirtual #55                 // Method java/nio/channels/SelectionKey.cancel:()V
     238: aload_3
     239: ifnull        274
     242: aload_3
     243: invokevirtual #56                 // Method java/nio/channels/Selector.selectNow:()I
     246: pop
     247: goto          274
     250: astore        13
     252: aload         6
     254: ifnull        271
     257: aload         6
     259: invokevirtual #55                 // Method java/nio/channels/SelectionKey.cancel:()V
     262: aload_3
     263: ifnull        271
     266: aload_3
     267: invokevirtual #56                 // Method java/nio/channels/Selector.selectNow:()I
     270: pop
     271: aload         13
     273: athrow
     274: iload         7
     276: ireturn
    Exception table:
       from    to  target type
          36   228   250   any
         250   252   250   any

  public void setMaxSelectors(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maxSelectors:I
       5: return

  public void setMaxSpareSelectors(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field maxSpareSelectors:I
       5: return

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field enabled:Z
       5: return

  public void setSharedSelectorTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field sharedSelectorTimeout:J
       5: return

  public int getMaxSelectors();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxSelectors:I
       4: ireturn

  public int getMaxSpareSelectors();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxSpareSelectors:I
       4: ireturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #12                 // Field enabled:Z
       4: ireturn

  public long getSharedSelectorTimeout();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sharedSelectorTimeout:J
       4: lreturn

  public java.util.concurrent.ConcurrentLinkedQueue<java.nio.channels.Selector> getSelectors();
    Code:
       0: aload_0
       1: getfield      #19                 // Field selectors:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: areturn

  public java.util.concurrent.atomic.AtomicInteger getSpare();
    Code:
       0: aload_0
       1: getfield      #16                 // Field spare:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  public boolean isShared();
    Code:
       0: aload_0
       1: getfield      #6                  // Field shared:Z
       4: ireturn

  public void setShared(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field shared:Z
       5: return
}
