Compiled from "RemoteIpFilter.java"
public class org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest extends javax.servlet.http.HttpServletRequestWrapper {
  protected final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  protected java.lang.String localName;

  protected int localPort;

  protected java.lang.String remoteAddr;

  protected java.lang.String remoteHost;

  protected java.lang.String scheme;

  protected boolean secure;

  protected java.lang.String serverName;

  protected int serverPort;

  public org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javax/servlet/http/HttpServletRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
       5: aload_0
       6: aload_1
       7: invokeinterface #2,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocalName:()Ljava/lang/String;
      12: putfield      #3                  // Field localName:Ljava/lang/String;
      15: aload_0
      16: aload_1
      17: invokeinterface #4,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocalPort:()I
      22: putfield      #5                  // Field localPort:I
      25: aload_0
      26: aload_1
      27: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteAddr:()Ljava/lang/String;
      32: putfield      #7                  // Field remoteAddr:Ljava/lang/String;
      35: aload_0
      36: aload_1
      37: invokeinterface #8,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteHost:()Ljava/lang/String;
      42: putfield      #9                  // Field remoteHost:Ljava/lang/String;
      45: aload_0
      46: aload_1
      47: invokeinterface #10,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getScheme:()Ljava/lang/String;
      52: putfield      #11                 // Field scheme:Ljava/lang/String;
      55: aload_0
      56: aload_1
      57: invokeinterface #12,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isSecure:()Z
      62: putfield      #13                 // Field secure:Z
      65: aload_0
      66: aload_1
      67: invokeinterface #14,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServerName:()Ljava/lang/String;
      72: putfield      #15                 // Field serverName:Ljava/lang/String;
      75: aload_0
      76: aload_1
      77: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServerPort:()I
      82: putfield      #17                 // Field serverPort:I
      85: aload_0
      86: new           #18                 // class java/util/HashMap
      89: dup
      90: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      93: putfield      #20                 // Field headers:Ljava/util/Map;
      96: aload_1
      97: invokeinterface #21,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
     102: astore_2
     103: aload_2
     104: invokeinterface #22,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     109: ifeq          146
     112: aload_2
     113: invokeinterface #23,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     118: checkcast     #24                 // class java/lang/String
     121: astore_3
     122: aload_0
     123: getfield      #20                 // Field headers:Ljava/util/Map;
     126: aload_3
     127: aload_1
     128: aload_3
     129: invokeinterface #25,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
     134: invokestatic  #26                 // Method java/util/Collections.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
     137: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     142: pop
     143: goto          103
     146: return

  public long getDateHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: ldc2_w        #29                 // long -1l
      13: lreturn
      14: aload_2
      15: invokestatic  #31                 // Method org/apache/tomcat/util/http/FastHttpDateFormat.parseDate:(Ljava/lang/String;)J
      18: lstore_3
      19: lload_3
      20: ldc2_w        #29                 // long -1l
      23: lcmp
      24: ifne          36
      27: new           #32                 // class java/lang/IllegalArgumentException
      30: dup
      31: aload_2
      32: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: lload_3
      37: lreturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        36
      10: aload_2
      11: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: ifnull        36
      19: aload_2
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      25: checkcast     #36                 // class java/util/List
      28: invokeinterface #37,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifeq          38
      36: aconst_null
      37: areturn
      38: aload_2
      39: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #36                 // class java/util/List
      47: iconst_0
      48: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      53: checkcast     #24                 // class java/lang/String
      56: areturn

  protected java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>> getHeaderEntry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          55
      24: aload_2
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #43                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #24                 // class java/lang/String
      43: aload_1
      44: invokevirtual #45                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      47: ifeq          52
      50: aload_3
      51: areturn
      52: goto          15
      55: aconst_null
      56: areturn

  public java.util.Enumeration<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #47                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      12: areturn

  public java.util.Enumeration<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        19
      10: aload_2
      11: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: ifnonnull     26
      19: invokestatic  #48                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      22: invokestatic  #47                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      25: areturn
      26: aload_2
      27: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      32: checkcast     #49                 // class java/util/Collection
      35: invokestatic  #47                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      38: areturn

  public int getIntHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_m1
      11: ireturn
      12: aload_2
      13: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field localName:Ljava/lang/String;
       4: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field localPort:I
       4: ireturn

  public java.lang.String getRemoteAddr();
    Code:
       0: aload_0
       1: getfield      #7                  // Field remoteAddr:Ljava/lang/String;
       4: areturn

  public java.lang.String getRemoteHost();
    Code:
       0: aload_0
       1: getfield      #9                  // Field remoteHost:Ljava/lang/String;
       4: areturn

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #11                 // Field scheme:Ljava/lang/String;
       4: areturn

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field serverName:Ljava/lang/String;
       4: areturn

  public int getServerPort();
    Code:
       0: aload_0
       1: getfield      #17                 // Field serverPort:I
       4: ireturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #13                 // Field secure:Z
       4: ireturn

  public void removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        26
      10: aload_0
      11: getfield      #20                 // Field headers:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: return

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #52                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       4: astore_3
       5: aload_0
       6: aload_1
       7: invokevirtual #34                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
      10: astore        4
      12: aload         4
      14: ifnonnull     32
      17: aload_0
      18: getfield      #20                 // Field headers:Ljava/util/Map;
      21: aload_1
      22: aload_3
      23: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: goto          41
      32: aload         4
      34: aload_3
      35: invokeinterface #53,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: return

  public void setLocalName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field localName:Ljava/lang/String;
       5: return

  public void setLocalPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field localPort:I
       5: return

  public void setRemoteAddr(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field remoteAddr:Ljava/lang/String;
       5: return

  public void setRemoteHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field remoteHost:Ljava/lang/String;
       5: return

  public void setScheme(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field scheme:Ljava/lang/String;
       5: return

  public void setSecure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field secure:Z
       5: return

  public void setServerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field serverName:Ljava/lang/String;
       5: return

  public void setServerPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field serverPort:I
       5: return

  public java.lang.StringBuffer getRequestURL();
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method org/apache/catalina/util/RequestUtil.getRequestURL:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/StringBuffer;
       4: areturn

  public javax.servlet.http.PushBuilder newPushBuilder();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getRequest:()Ljavax/servlet/ServletRequest;
       4: astore_1
       5: aload_1
       6: instanceof    #56                 // class javax/servlet/ServletRequestWrapper
       9: ifeq          23
      12: aload_1
      13: checkcast     #56                 // class javax/servlet/ServletRequestWrapper
      16: invokevirtual #57                 // Method javax/servlet/ServletRequestWrapper.getRequest:()Ljavax/servlet/ServletRequest;
      19: astore_1
      20: goto          5
      23: aload_1
      24: instanceof    #58                 // class org/apache/catalina/connector/RequestFacade
      27: ifeq          39
      30: aload_1
      31: checkcast     #58                 // class org/apache/catalina/connector/RequestFacade
      34: aload_0
      35: invokevirtual #59                 // Method org/apache/catalina/connector/RequestFacade.newPushBuilder:(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
      38: areturn
      39: aconst_null
      40: areturn
}
