Compiled from "ScheduledThreadPoolExecutor.java"
public class org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor implements java.util.concurrent.ScheduledExecutorService {
  protected final java.util.concurrent.ScheduledExecutorService executor;

  public org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor(java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       9: return

  public void shutdown();
    Code:
       0: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aconst_null
       1: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isShutdown:()Z
       9: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isTerminated:()Z
       9: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: lload_1
       5: aload_3
       6: invokeinterface #5,  4            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      10: areturn

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      11: areturn

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      10: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      10: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #10,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      13: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      10: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #12,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      13: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      10: return

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #14,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      13: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #15,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      13: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokeinterface #16,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      15: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokeinterface #17,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      15: areturn
}
