Compiled from "StandardThreadExecutor.java"
public class org.apache.catalina.core.StandardThreadExecutor extends org.apache.catalina.util.LifecycleMBeanBase implements org.apache.catalina.Executor,org.apache.tomcat.util.threads.ResizableExecutor {
  protected static final org.apache.tomcat.util.res.StringManager sm;

  protected int threadPriority;

  protected boolean daemon;

  protected java.lang.String namePrefix;

  protected int maxThreads;

  protected int minSpareThreads;

  protected int maxIdleTime;

  protected org.apache.tomcat.util.threads.ThreadPoolExecutor executor;

  protected java.lang.String name;

  protected boolean prestartminSpareThreads;

  protected int maxQueueSize;

  protected long threadRenewalDelay;

  private org.apache.tomcat.util.threads.TaskQueue taskqueue;

  public org.apache.catalina.core.StandardThreadExecutor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/catalina/util/LifecycleMBeanBase."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #3                  // Field threadPriority:I
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field daemon:Z
      14: aload_0
      15: ldc           #5                  // String tomcat-exec-
      17: putfield      #6                  // Field namePrefix:Ljava/lang/String;
      20: aload_0
      21: sipush        200
      24: putfield      #7                  // Field maxThreads:I
      27: aload_0
      28: bipush        25
      30: putfield      #8                  // Field minSpareThreads:I
      33: aload_0
      34: ldc           #9                  // int 60000
      36: putfield      #10                 // Field maxIdleTime:I
      39: aload_0
      40: aconst_null
      41: putfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      44: aload_0
      45: iconst_0
      46: putfield      #12                 // Field prestartminSpareThreads:Z
      49: aload_0
      50: ldc           #14                 // int 2147483647
      52: putfield      #15                 // Field maxQueueSize:I
      55: aload_0
      56: ldc2_w        #17                 // long 1000l
      59: putfield      #19                 // Field threadRenewalDelay:J
      62: aload_0
      63: aconst_null
      64: putfield      #20                 // Field taskqueue:Lorg/apache/tomcat/util/threads/TaskQueue;
      67: return

  protected void initInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/apache/catalina/util/LifecycleMBeanBase.initInternal:()V
       4: return

  protected void startInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: new           #22                 // class org/apache/tomcat/util/threads/TaskQueue
       4: dup
       5: aload_0
       6: getfield      #15                 // Field maxQueueSize:I
       9: invokespecial #23                 // Method org/apache/tomcat/util/threads/TaskQueue."<init>":(I)V
      12: putfield      #20                 // Field taskqueue:Lorg/apache/tomcat/util/threads/TaskQueue;
      15: new           #24                 // class org/apache/tomcat/util/threads/TaskThreadFactory
      18: dup
      19: aload_0
      20: getfield      #6                  // Field namePrefix:Ljava/lang/String;
      23: aload_0
      24: getfield      #4                  // Field daemon:Z
      27: aload_0
      28: invokevirtual #25                 // Method getThreadPriority:()I
      31: invokespecial #26                 // Method org/apache/tomcat/util/threads/TaskThreadFactory."<init>":(Ljava/lang/String;ZI)V
      34: astore_1
      35: aload_0
      36: new           #27                 // class org/apache/tomcat/util/threads/ThreadPoolExecutor
      39: dup
      40: aload_0
      41: invokevirtual #28                 // Method getMinSpareThreads:()I
      44: aload_0
      45: invokevirtual #29                 // Method getMaxThreads:()I
      48: aload_0
      49: getfield      #10                 // Field maxIdleTime:I
      52: i2l
      53: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      56: aload_0
      57: getfield      #20                 // Field taskqueue:Lorg/apache/tomcat/util/threads/TaskQueue;
      60: aload_1
      61: invokespecial #31                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      64: putfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      67: aload_0
      68: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      71: aload_0
      72: getfield      #19                 // Field threadRenewalDelay:J
      75: invokevirtual #32                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setThreadRenewalDelay:(J)V
      78: aload_0
      79: getfield      #12                 // Field prestartminSpareThreads:Z
      82: ifeq          93
      85: aload_0
      86: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      89: invokevirtual #33                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.prestartAllCoreThreads:()I
      92: pop
      93: aload_0
      94: getfield      #20                 // Field taskqueue:Lorg/apache/tomcat/util/threads/TaskQueue;
      97: aload_0
      98: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
     101: invokevirtual #34                 // Method org/apache/tomcat/util/threads/TaskQueue.setParent:(Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;)V
     104: aload_0
     105: getstatic     #35                 // Field org/apache/catalina/LifecycleState.STARTING:Lorg/apache/catalina/LifecycleState;
     108: invokevirtual #36                 // Method setState:(Lorg/apache/catalina/LifecycleState;)V
     111: return

  protected void stopInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: getstatic     #37                 // Field org/apache/catalina/LifecycleState.STOPPING:Lorg/apache/catalina/LifecycleState;
       4: invokevirtual #36                 // Method setState:(Lorg/apache/catalina/LifecycleState;)V
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: ifnull        22
      14: aload_0
      15: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      18: invokevirtual #38                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      21: pop
      22: aload_0
      23: aconst_null
      24: putfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      27: aload_0
      28: aconst_null
      29: putfield      #20                 // Field taskqueue:Lorg/apache/tomcat/util/threads/TaskQueue;
      32: return

  protected void destroyInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/apache/catalina/util/LifecycleMBeanBase.destroyInternal:()V
       4: return

  public void execute(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        21
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: aload         4
      15: invokevirtual #40                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)V
      18: goto          37
      21: new           #41                 // class java/lang/IllegalStateException
      24: dup
      25: getstatic     #42                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      28: ldc           #43                 // String standardThreadExecutor.notStarted
      30: invokevirtual #44                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      33: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        55
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: aload_1
      12: invokevirtual #46                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      15: goto          71
      18: astore_2
      19: aload_0
      20: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      23: invokevirtual #48                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      26: checkcast     #22                 // class org/apache/tomcat/util/threads/TaskQueue
      29: aload_1
      30: invokevirtual #49                 // Method org/apache/tomcat/util/threads/TaskQueue.force:(Ljava/lang/Runnable;)Z
      33: ifne          52
      36: new           #47                 // class java/util/concurrent/RejectedExecutionException
      39: dup
      40: getstatic     #42                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      43: ldc           #50                 // String standardThreadExecutor.queueFull
      45: invokevirtual #44                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      48: invokespecial #51                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: goto          71
      55: new           #41                 // class java/lang/IllegalStateException
      58: dup
      59: getstatic     #42                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      62: ldc           #43                 // String standardThreadExecutor.notStarted
      64: invokevirtual #44                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      67: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: return
    Exception table:
       from    to  target type
           7    15    18   Class java/util/concurrent/RejectedExecutionException

  public void contextStopping();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        14
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #52                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.contextStopping:()V
      14: return

  public int getThreadPriority();
    Code:
       0: aload_0
       1: getfield      #3                  // Field threadPriority:I
       4: ireturn

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #4                  // Field daemon:Z
       4: ireturn

  public java.lang.String getNamePrefix();
    Code:
       0: aload_0
       1: getfield      #6                  // Field namePrefix:Ljava/lang/String;
       4: areturn

  public int getMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxIdleTime:I
       4: ireturn

  public int getMaxThreads();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxThreads:I
       4: ireturn

  public int getMinSpareThreads();
    Code:
       0: aload_0
       1: getfield      #8                  // Field minSpareThreads:I
       4: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #53                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean isPrestartminSpareThreads();
    Code:
       0: aload_0
       1: getfield      #12                 // Field prestartminSpareThreads:Z
       4: ireturn

  public void setThreadPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field threadPriority:I
       5: return

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field daemon:Z
       5: return

  public void setNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field namePrefix:Ljava/lang/String;
       5: return

  public void setMaxIdleTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field maxIdleTime:I
       5: aload_0
       6: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       9: ifnull        24
      12: aload_0
      13: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      16: iload_1
      17: i2l
      18: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      21: invokevirtual #54                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      24: return

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maxThreads:I
       5: aload_0
       6: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       9: ifnull        20
      12: aload_0
      13: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      16: iload_1
      17: invokevirtual #55                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setMaximumPoolSize:(I)V
      20: return

  public void setMinSpareThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field minSpareThreads:I
       5: aload_0
       6: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       9: ifnull        20
      12: aload_0
      13: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      16: iload_1
      17: invokevirtual #56                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setCorePoolSize:(I)V
      20: return

  public void setPrestartminSpareThreads(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field prestartminSpareThreads:Z
       5: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field name:Ljava/lang/String;
       5: return

  public void setMaxQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field maxQueueSize:I
       5: return

  public int getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field maxQueueSize:I
       4: ireturn

  public long getThreadRenewalDelay();
    Code:
       0: aload_0
       1: getfield      #19                 // Field threadRenewalDelay:J
       4: lreturn

  public void setThreadRenewalDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #19                 // Field threadRenewalDelay:J
       5: aload_0
       6: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       9: ifnull        20
      12: aload_0
      13: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      16: lload_1
      17: invokevirtual #32                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setThreadRenewalDelay:(J)V
      20: return

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #57                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getActiveCount:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public long getCompletedTaskCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #58                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getCompletedTaskCount:()J
      14: goto          18
      17: lconst_0
      18: lreturn

  public int getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #59                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getCorePoolSize:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getLargestPoolSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #60                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getLargestPoolSize:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #61                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getPoolSize:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnull        22
       7: aload_0
       8: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      11: invokevirtual #48                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      14: invokeinterface #62,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      19: goto          23
      22: iconst_m1
      23: ireturn

  public boolean resizePool(int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      13: iload_1
      14: invokevirtual #56                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setCorePoolSize:(I)V
      17: aload_0
      18: getfield      #11                 // Field executor:Lorg/apache/tomcat/util/threads/ThreadPoolExecutor;
      21: iload_2
      22: invokevirtual #55                 // Method org/apache/tomcat/util/threads/ThreadPoolExecutor.setMaximumPoolSize:(I)V
      25: iconst_1
      26: ireturn

  public boolean resizeQueue(int);
    Code:
       0: iconst_0
       1: ireturn

  protected java.lang.String getDomainInternal();
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.String getObjectNameKeyProperties();
    Code:
       0: new           #63                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #65                 // String type=Executor,name=
       9: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #67                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  static {};
    Code:
       0: ldc           #70                 // String org.apache.catalina.core
       2: invokestatic  #71                 // Method org/apache/tomcat/util/res/StringManager.getManager:(Ljava/lang/String;)Lorg/apache/tomcat/util/res/StringManager;
       5: putstatic     #42                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       8: return
}
