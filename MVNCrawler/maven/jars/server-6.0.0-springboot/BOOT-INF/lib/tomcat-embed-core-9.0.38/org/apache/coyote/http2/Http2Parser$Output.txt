Compiled from "Http2Parser.java"
interface org.apache.coyote.http2.Http2Parser$Output {
  public abstract org.apache.coyote.http2.HpackDecoder getHpackDecoder();

  public abstract java.nio.ByteBuffer startRequestBodyFrame(int, int, boolean) throws org.apache.coyote.http2.Http2Exception;

  public abstract void endRequestBodyFrame(int) throws org.apache.coyote.http2.Http2Exception;

  public abstract void receivedEndOfStream(int) throws org.apache.coyote.http2.ConnectionException;

  public abstract void swallowedPadding(int, int) throws org.apache.coyote.http2.ConnectionException, java.io.IOException;

  public abstract org.apache.coyote.http2.HpackDecoder$HeaderEmitter headersStart(int, boolean) throws org.apache.coyote.http2.Http2Exception, java.io.IOException;

  public abstract void headersContinue(int, boolean);

  public abstract void headersEnd(int) throws org.apache.coyote.http2.Http2Exception;

  public abstract void reprioritise(int, int, boolean, int) throws org.apache.coyote.http2.Http2Exception;

  public abstract void reset(int, long) throws org.apache.coyote.http2.Http2Exception;

  public abstract void setting(org.apache.coyote.http2.Setting, long) throws org.apache.coyote.http2.ConnectionException;

  public abstract void settingsEnd(boolean) throws java.io.IOException;

  public abstract void pingReceive(byte[], boolean) throws java.io.IOException;

  public abstract void goaway(int, long, java.lang.String);

  public abstract void incrementWindowSize(int, int) throws org.apache.coyote.http2.Http2Exception;

  public abstract void swallowed(int, org.apache.coyote.http2.FrameType, int, int) throws java.io.IOException;
}
