Compiled from "AbstractChunk.java"
public abstract class org.apache.tomcat.util.buf.AbstractChunk implements java.lang.Cloneable,java.io.Serializable {
  private static final long serialVersionUID;

  protected static final org.apache.tomcat.util.res.StringManager sm;

  public static final int ARRAY_MAX_SIZE;

  private int hashCode;

  protected boolean hasHashCode;

  protected boolean isSet;

  private int limit;

  protected int start;

  protected int end;

  public org.apache.tomcat.util.buf.AbstractChunk();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field hashCode:I
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field hasHashCode:Z
      14: aload_0
      15: iconst_m1
      16: putfield      #5                  // Field limit:I
      19: return

  public void setLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field limit:I
       5: return

  public int getLimit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: ireturn

  protected int getLimitInternal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: ifle          12
       7: aload_0
       8: getfield      #5                  // Field limit:I
      11: ireturn
      12: ldc           #7                  // int 2147483639
      14: ireturn

  public int getStart();
    Code:
       0: aload_0
       1: getfield      #8                  // Field start:I
       4: ireturn

  public int getEnd();
    Code:
       0: aload_0
       1: getfield      #9                  // Field end:I
       4: ireturn

  public void setEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field end:I
       5: return

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #8                  // Field start:I
       4: ireturn

  public void setOffset(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field end:I
       4: iload_1
       5: if_icmpge     13
       8: aload_0
       9: iload_1
      10: putfield      #9                  // Field end:I
      13: aload_0
      14: iload_1
      15: putfield      #8                  // Field start:I
      18: return

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #9                  // Field end:I
       4: aload_0
       5: getfield      #8                  // Field start:I
       8: isub
       9: ireturn

  public boolean isNull();
    Code:
       0: aload_0
       1: getfield      #9                  // Field end:I
       4: ifle          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #10                 // Field isSet:Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public int indexOf(java.lang.String, int, int, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
       5: istore        5
       7: iload_2
       8: iload_3
       9: iadd
      10: istore        6
      12: iload         4
      14: aload_0
      15: getfield      #8                  // Field start:I
      18: iadd
      19: istore        7
      21: iload         7
      23: aload_0
      24: getfield      #9                  // Field end:I
      27: iload_3
      28: isub
      29: if_icmpgt     102
      32: aload_0
      33: iload         7
      35: invokevirtual #12                 // Method getBufferElement:(I)I
      38: iload         5
      40: if_icmpeq     46
      43: goto          96
      46: iload         7
      48: iconst_1
      49: iadd
      50: istore        8
      52: iload_2
      53: iconst_1
      54: iadd
      55: istore        9
      57: iload         9
      59: iload         6
      61: if_icmpge     88
      64: aload_0
      65: iload         8
      67: iinc          8, 1
      70: invokevirtual #12                 // Method getBufferElement:(I)I
      73: aload_1
      74: iload         9
      76: iinc          9, 1
      79: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      82: if_icmpeq     57
      85: goto          96
      88: iload         7
      90: aload_0
      91: getfield      #8                  // Field start:I
      94: isub
      95: ireturn
      96: iinc          7, 1
      99: goto          21
     102: iconst_m1
     103: ireturn

  public void recycle();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field hasHashCode:Z
       5: aload_0
       6: iconst_0
       7: putfield      #10                 // Field isSet:Z
      10: aload_0
      11: iconst_0
      12: putfield      #8                  // Field start:I
      15: aload_0
      16: iconst_0
      17: putfield      #9                  // Field end:I
      20: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasHashCode:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #3                  // Field hashCode:I
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: invokevirtual #13                 // Method hash:()I
      18: istore_1
      19: aload_0
      20: iload_1
      21: putfield      #3                  // Field hashCode:I
      24: aload_0
      25: iconst_1
      26: putfield      #4                  // Field hasHashCode:Z
      29: iload_1
      30: ireturn

  public int hash();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #8                  // Field start:I
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #9                  // Field end:I
      12: if_icmpge     32
      15: iload_1
      16: bipush        37
      18: imul
      19: aload_0
      20: iload_2
      21: invokevirtual #12                 // Method getBufferElement:(I)I
      24: iadd
      25: istore_1
      26: iinc          2, 1
      29: goto          7
      32: iload_1
      33: ireturn

  protected abstract int getBufferElement(int);

  static {};
    Code:
       0: ldc           #6                  // class org/apache/tomcat/util/buf/AbstractChunk
       2: invokestatic  #14                 // Method org/apache/tomcat/util/res/StringManager.getManager:(Ljava/lang/Class;)Lorg/apache/tomcat/util/res/StringManager;
       5: putstatic     #15                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       8: return
}
