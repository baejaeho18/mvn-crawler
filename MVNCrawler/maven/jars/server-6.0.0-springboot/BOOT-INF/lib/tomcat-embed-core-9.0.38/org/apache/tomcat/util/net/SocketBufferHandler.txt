Compiled from "SocketBufferHandler.java"
public class org.apache.tomcat.util.net.SocketBufferHandler {
  static org.apache.tomcat.util.net.SocketBufferHandler EMPTY;

  private volatile boolean readBufferConfiguredForWrite;

  private volatile java.nio.ByteBuffer readBuffer;

  private volatile boolean writeBufferConfiguredForWrite;

  private volatile java.nio.ByteBuffer writeBuffer;

  private final boolean direct;

  public org.apache.tomcat.util.net.SocketBufferHandler(int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field readBufferConfiguredForWrite:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field writeBufferConfiguredForWrite:Z
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field direct:Z
      19: iload_3
      20: ifeq          42
      23: aload_0
      24: iload_1
      25: invokestatic  #5                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      28: putfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      31: aload_0
      32: iload_2
      33: invokestatic  #5                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      36: putfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      39: goto          58
      42: aload_0
      43: iload_1
      44: invokestatic  #8                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      47: putfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      50: aload_0
      51: iload_2
      52: invokestatic  #8                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      55: putfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      58: return

  public void configureReadBufferForWrite();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #9                  // Method setReadBufferConfiguredForWrite:(Z)V
       5: return

  public void configureReadBufferForRead();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #9                  // Method setReadBufferConfiguredForWrite:(Z)V
       5: return

  private void setReadBufferConfiguredForWrite(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field readBufferConfiguredForWrite:Z
       4: iload_1
       5: if_icmpeq     59
       8: iload_1
       9: ifeq          46
      12: aload_0
      13: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      19: istore_2
      20: iload_2
      21: ifne          35
      24: aload_0
      25: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #11                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      31: pop
      32: goto          43
      35: aload_0
      36: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #12                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      42: pop
      43: goto          54
      46: aload_0
      47: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      50: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      53: pop
      54: aload_0
      55: iload_1
      56: putfield      #2                  // Field readBufferConfiguredForWrite:Z
      59: return

  public java.nio.ByteBuffer getReadBuffer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public boolean isReadBufferEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field readBufferConfiguredForWrite:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void unReadReadBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method isReadBufferEmpty:()Z
       4: ifeq          23
       7: aload_0
       8: invokevirtual #16                 // Method configureReadBufferForWrite:()V
      11: aload_0
      12: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      15: aload_1
      16: invokevirtual #17                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      19: pop
      20: goto          312
      23: aload_1
      24: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      27: istore_2
      28: aload_0
      29: getfield      #2                  // Field readBufferConfiguredForWrite:Z
      32: ifeq          146
      35: aload_0
      36: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      42: iload_2
      43: iadd
      44: aload_0
      45: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      48: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I
      51: if_icmple     62
      54: new           #19                 // class java/nio/BufferOverflowException
      57: dup
      58: invokespecial #20                 // Method java/nio/BufferOverflowException."<init>":()V
      61: athrow
      62: iconst_0
      63: istore_3
      64: iload_3
      65: aload_0
      66: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      69: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      72: if_icmpge     100
      75: aload_0
      76: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      79: iload_3
      80: iload_2
      81: iadd
      82: aload_0
      83: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      86: iload_3
      87: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      90: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      93: pop
      94: iinc          3, 1
      97: goto          64
     100: iconst_0
     101: istore_3
     102: iload_3
     103: iload_2
     104: if_icmpge     126
     107: aload_0
     108: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     111: iload_3
     112: aload_1
     113: invokevirtual #23                 // Method java/nio/ByteBuffer.get:()B
     116: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     119: pop
     120: iinc          3, 1
     123: goto          102
     126: aload_0
     127: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     130: aload_0
     131: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     134: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
     137: iload_2
     138: iadd
     139: invokevirtual #24                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     142: pop
     143: goto          312
     146: iload_2
     147: aload_0
     148: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     151: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
     154: isub
     155: istore_3
     156: iload_3
     157: ifle          254
     160: aload_0
     161: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     164: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I
     167: aload_0
     168: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     171: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
     174: isub
     175: iload_3
     176: if_icmpge     187
     179: new           #19                 // class java/nio/BufferOverflowException
     182: dup
     183: invokespecial #20                 // Method java/nio/BufferOverflowException."<init>":()V
     186: athrow
     187: aload_0
     188: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     191: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:()I
     194: istore        4
     196: aload_0
     197: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     200: iload         4
     202: iload_3
     203: iadd
     204: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     207: pop
     208: aload_0
     209: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     212: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
     215: istore        5
     217: iload         5
     219: iload         4
     221: if_icmpge     251
     224: aload_0
     225: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     228: iload         5
     230: iload_3
     231: iadd
     232: aload_0
     233: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     236: iload         5
     238: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
     241: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     244: pop
     245: iinc          5, 1
     248: goto          217
     251: goto          256
     254: iconst_0
     255: istore_3
     256: aload_0
     257: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     260: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
     263: iload_3
     264: iadd
     265: iload_2
     266: isub
     267: istore        4
     269: iload         4
     271: istore        5
     273: iload         5
     275: iload_2
     276: iload         4
     278: iadd
     279: if_icmpge     302
     282: aload_0
     283: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     286: iload         5
     288: aload_1
     289: invokevirtual #23                 // Method java/nio/ByteBuffer.get:()B
     292: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     295: pop
     296: iinc          5, 1
     299: goto          273
     302: aload_0
     303: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
     306: iload         4
     308: invokevirtual #24                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     311: pop
     312: return

  public void configureWriteBufferForWrite();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #27                 // Method setWriteBufferConfiguredForWrite:(Z)V
       5: return

  public void configureWriteBufferForRead();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #27                 // Method setWriteBufferConfiguredForWrite:(Z)V
       5: return

  private void setWriteBufferConfiguredForWrite(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeBufferConfiguredForWrite:Z
       4: iload_1
       5: if_icmpeq     83
       8: iload_1
       9: ifeq          70
      12: aload_0
      13: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      19: istore_2
      20: iload_2
      21: ifne          35
      24: aload_0
      25: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #11                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      31: pop
      32: goto          67
      35: aload_0
      36: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #12                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      42: pop
      43: aload_0
      44: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      47: iload_2
      48: invokevirtual #24                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      51: pop
      52: aload_0
      53: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      56: aload_0
      57: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      60: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I
      63: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      66: pop
      67: goto          78
      70: aload_0
      71: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      74: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      77: pop
      78: aload_0
      79: iload_1
      80: putfield      #3                  // Field writeBufferConfiguredForWrite:Z
      83: return

  public boolean isWriteBufferWritable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeBufferConfiguredForWrite:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #28                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      14: ireturn
      15: aload_0
      16: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      19: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public java.nio.ByteBuffer getWriteBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public boolean isWriteBufferEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeBufferConfiguredForWrite:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #11                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: iconst_1
      10: putfield      #2                  // Field readBufferConfiguredForWrite:Z
      13: aload_0
      14: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      17: invokevirtual #11                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      20: pop
      21: aload_0
      22: iconst_1
      23: putfield      #3                  // Field writeBufferConfiguredForWrite:Z
      26: return

  public void expand(int);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method configureReadBufferForWrite:()V
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
       9: iload_1
      10: invokestatic  #29                 // Method org/apache/tomcat/util/buf/ByteBufferUtils.expand:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      13: putfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      16: aload_0
      17: invokevirtual #30                 // Method configureWriteBufferForWrite:()V
      20: aload_0
      21: aload_0
      22: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      25: iload_1
      26: invokestatic  #29                 // Method org/apache/tomcat/util/buf/ByteBufferUtils.expand:(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
      29: putfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      32: return

  public void free();
    Code:
       0: aload_0
       1: getfield      #4                  // Field direct:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #6                  // Field readBuffer:Ljava/nio/ByteBuffer;
      11: invokestatic  #31                 // Method org/apache/tomcat/util/buf/ByteBufferUtils.cleanDirectBuffer:(Ljava/nio/ByteBuffer;)V
      14: aload_0
      15: getfield      #7                  // Field writeBuffer:Ljava/nio/ByteBuffer;
      18: invokestatic  #31                 // Method org/apache/tomcat/util/buf/ByteBufferUtils.cleanDirectBuffer:(Ljava/nio/ByteBuffer;)V
      21: return

  static {};
    Code:
       0: new           #32                 // class org/apache/tomcat/util/net/SocketBufferHandler$1
       3: dup
       4: iconst_0
       5: iconst_0
       6: iconst_0
       7: invokespecial #33                 // Method org/apache/tomcat/util/net/SocketBufferHandler$1."<init>":(IIZ)V
      10: putstatic     #34                 // Field EMPTY:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      13: return
}
