Compiled from "SSLContext.java"
public final class org.apache.tomcat.jni.SSLContext {
  public static final byte[] DEFAULT_SESSION_ID_CONTEXT;

  private static final java.util.Map<java.lang.Long, org.apache.tomcat.jni.SSLContext$SNICallBack> sniCallBacks;

  public org.apache.tomcat.jni.SSLContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static native long make(long, int, int) throws java.lang.Exception;

  public static native int free(long);

  public static native void setContextId(long, java.lang.String);

  public static native void setBIO(long, long, int);

  public static native void setOptions(long, int);

  public static native int getOptions(long);

  public static native void clearOptions(long, int);

  public static native java.lang.String[] getCiphers(long);

  public static native void setQuietShutdown(long, boolean);

  public static native boolean setCipherSuite(long, java.lang.String) throws java.lang.Exception;

  public static native boolean setCARevocation(long, java.lang.String, java.lang.String) throws java.lang.Exception;

  public static native boolean setCertificateChainFile(long, java.lang.String, boolean);

  public static native boolean setCertificate(long, java.lang.String, java.lang.String, java.lang.String, int) throws java.lang.Exception;

  public static native long setSessionCacheSize(long, long);

  public static native long getSessionCacheSize(long);

  public static native long setSessionCacheTimeout(long, long);

  public static native long getSessionCacheTimeout(long);

  public static native long setSessionCacheMode(long, long);

  public static native long getSessionCacheMode(long);

  public static native long sessionAccept(long);

  public static native long sessionAcceptGood(long);

  public static native long sessionAcceptRenegotiate(long);

  public static native long sessionCacheFull(long);

  public static native long sessionCbHits(long);

  public static native long sessionConnect(long);

  public static native long sessionConnectGood(long);

  public static native long sessionConnectRenegotiate(long);

  public static native long sessionHits(long);

  public static native long sessionMisses(long);

  public static native long sessionNumber(long);

  public static native long sessionTimeouts(long);

  public static native void setSessionTicketKeys(long, byte[]);

  public static native boolean setCACertificate(long, java.lang.String, java.lang.String) throws java.lang.Exception;

  public static native void setRandom(long, java.lang.String);

  public static native void setShutdownType(long, int);

  public static native void setVerify(long, int, int);

  public static native int setALPN(long, byte[], int);

  public static long sniCallBack(long, java.lang.String);
    Code:
       0: getstatic     #2                  // Field sniCallBacks:Ljava/util/Map;
       3: lload_0
       4: invokestatic  #3                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #5                  // class org/apache/tomcat/jni/SSLContext$SNICallBack
      15: astore_3
      16: aload_3
      17: ifnonnull     22
      20: lconst_0
      21: lreturn
      22: aload_3
      23: aload_2
      24: invokeinterface #6,  2            // InterfaceMethod org/apache/tomcat/jni/SSLContext$SNICallBack.getSslContext:(Ljava/lang/String;)J
      29: lreturn

  public static void registerDefault(java.lang.Long, org.apache.tomcat.jni.SSLContext$SNICallBack);
    Code:
       0: getstatic     #2                  // Field sniCallBacks:Ljava/util/Map;
       3: aload_0
       4: aload_1
       5: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public static void unregisterDefault(java.lang.Long);
    Code:
       0: getstatic     #2                  // Field sniCallBacks:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public static native void setCertVerifyCallback(long, org.apache.tomcat.jni.CertificateVerifier);

  public static void setNextProtos(long, java.lang.String);
    Code:
       0: lload_0
       1: aload_2
       2: ldc           #9                  // String ,
       4: invokevirtual #10                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       7: iconst_1
       8: invokestatic  #12                 // Method setNpnProtos:(J[Ljava/lang/String;I)V
      11: return

  public static native void setNpnProtos(long, java.lang.String[], int);

  public static native void setAlpnProtos(long, java.lang.String[], int);

  public static native void setTmpDH(long, java.lang.String) throws java.lang.Exception;

  public static native void setTmpECDHByCurveName(long, java.lang.String) throws java.lang.Exception;

  public static native boolean setSessionIdContext(long, byte[]);

  public static native boolean setCertificateRaw(long, byte[], byte[], int);

  public static native boolean addChainCertificateRaw(long, byte[]);

  public static native boolean addClientCACertificateRaw(long, byte[]);

  static {};
    Code:
       0: bipush        7
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        100
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        101
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        102
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        97
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        117
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        108
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        116
      39: bastore
      40: putstatic     #13                 // Field DEFAULT_SESSION_ID_CONTEXT:[B
      43: new           #14                 // class java/util/concurrent/ConcurrentHashMap
      46: dup
      47: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      50: putstatic     #2                  // Field sniCallBacks:Ljava/util/Map;
      53: return
}
