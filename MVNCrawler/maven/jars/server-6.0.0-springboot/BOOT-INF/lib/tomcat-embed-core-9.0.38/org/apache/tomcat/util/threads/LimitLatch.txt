Compiled from "LimitLatch.java"
public class org.apache.tomcat.util.threads.LimitLatch {
  private static final org.apache.juli.logging.Log log;

  private final org.apache.tomcat.util.threads.LimitLatch$Sync sync;

  private final java.util.concurrent.atomic.AtomicLong count;

  private volatile long limit;

  private volatile boolean released;

  public org.apache.tomcat.util.threads.LimitLatch(long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field released:Z
       9: aload_0
      10: lload_1
      11: putfield      #1                  // Field limit:J
      14: aload_0
      15: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      18: dup
      19: lconst_0
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      23: putfield      #3                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: new           #7                  // class org/apache/tomcat/util/threads/LimitLatch$Sync
      30: dup
      31: aload_0
      32: invokespecial #8                  // Method org/apache/tomcat/util/threads/LimitLatch$Sync."<init>":(Lorg/apache/tomcat/util/threads/LimitLatch;)V
      35: putfield      #9                  // Field sync:Lorg/apache/tomcat/util/threads/LimitLatch$Sync;
      38: return

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getLimit();
    Code:
       0: aload_0
       1: getfield      #1                  // Field limit:J
       4: lreturn

  public void setLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #1                  // Field limit:J
       5: return

  public void countUpOrAwait() throws java.lang.InterruptedException;
    Code:
       0: getstatic     #11                 // Field log:Lorg/apache/juli/logging/Log;
       3: invokeinterface #12,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
       8: ifeq          55
      11: getstatic     #11                 // Field log:Lorg/apache/juli/logging/Log;
      14: new           #13                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #15                 // String Counting up[
      23: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      29: invokevirtual #18                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #19                 // String ] latch=
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #20                 // Method getCount:()J
      44: invokevirtual #21                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #23,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #9                  // Field sync:Lorg/apache/tomcat/util/threads/LimitLatch$Sync;
      59: iconst_1
      60: invokevirtual #24                 // Method org/apache/tomcat/util/threads/LimitLatch$Sync.acquireSharedInterruptibly:(I)V
      63: return

  public long countDown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sync:Lorg/apache/tomcat/util/threads/LimitLatch$Sync;
       4: iconst_0
       5: invokevirtual #25                 // Method org/apache/tomcat/util/threads/LimitLatch$Sync.releaseShared:(I)Z
       8: pop
       9: aload_0
      10: invokevirtual #20                 // Method getCount:()J
      13: lstore_1
      14: getstatic     #11                 // Field log:Lorg/apache/juli/logging/Log;
      17: invokeinterface #12,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      22: ifeq          66
      25: getstatic     #11                 // Field log:Lorg/apache/juli/logging/Log;
      28: new           #13                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #26                 // String Counting down[
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      43: invokevirtual #18                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #19                 // String ] latch=
      51: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: lload_1
      55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #23,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      66: lload_1
      67: lreturn

  public boolean releaseAll();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field released:Z
       5: aload_0
       6: getfield      #9                  // Field sync:Lorg/apache/tomcat/util/threads/LimitLatch$Sync;
       9: iconst_0
      10: invokevirtual #25                 // Method org/apache/tomcat/util/threads/LimitLatch$Sync.releaseShared:(I)Z
      13: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #3                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: aload_0
       9: iconst_0
      10: putfield      #2                  // Field released:Z
      13: return

  public boolean hasQueuedThreads();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sync:Lorg/apache/tomcat/util/threads/LimitLatch$Sync;
       4: invokevirtual #28                 // Method org/apache/tomcat/util/threads/LimitLatch$Sync.hasQueuedThreads:()Z
       7: ireturn

  public java.util.Collection<java.lang.Thread> getQueuedThreads();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sync:Lorg/apache/tomcat/util/threads/LimitLatch$Sync;
       4: invokevirtual #29                 // Method org/apache/tomcat/util/threads/LimitLatch$Sync.getQueuedThreads:()Ljava/util/Collection;
       7: areturn

  static java.util.concurrent.atomic.AtomicLong access$000(org.apache.tomcat.util.threads.LimitLatch);
    Code:
       0: aload_0
       1: getfield      #3                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static boolean access$100(org.apache.tomcat.util.threads.LimitLatch);
    Code:
       0: aload_0
       1: getfield      #2                  // Field released:Z
       4: ireturn

  static long access$200(org.apache.tomcat.util.threads.LimitLatch);
    Code:
       0: aload_0
       1: getfield      #1                  // Field limit:J
       4: lreturn

  static {};
    Code:
       0: ldc           #30                 // class org/apache/tomcat/util/threads/LimitLatch
       2: invokestatic  #31                 // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/apache/juli/logging/Log;
       8: return
}
