Compiled from "HttpServletResponse.java"
public interface javax.servlet.http.HttpServletResponse extends javax.servlet.ServletResponse {
  public static final int SC_CONTINUE;

  public static final int SC_SWITCHING_PROTOCOLS;

  public static final int SC_OK;

  public static final int SC_CREATED;

  public static final int SC_ACCEPTED;

  public static final int SC_NON_AUTHORITATIVE_INFORMATION;

  public static final int SC_NO_CONTENT;

  public static final int SC_RESET_CONTENT;

  public static final int SC_PARTIAL_CONTENT;

  public static final int SC_MULTIPLE_CHOICES;

  public static final int SC_MOVED_PERMANENTLY;

  public static final int SC_MOVED_TEMPORARILY;

  public static final int SC_FOUND;

  public static final int SC_SEE_OTHER;

  public static final int SC_NOT_MODIFIED;

  public static final int SC_USE_PROXY;

  public static final int SC_TEMPORARY_REDIRECT;

  public static final int SC_BAD_REQUEST;

  public static final int SC_UNAUTHORIZED;

  public static final int SC_PAYMENT_REQUIRED;

  public static final int SC_FORBIDDEN;

  public static final int SC_NOT_FOUND;

  public static final int SC_METHOD_NOT_ALLOWED;

  public static final int SC_NOT_ACCEPTABLE;

  public static final int SC_PROXY_AUTHENTICATION_REQUIRED;

  public static final int SC_REQUEST_TIMEOUT;

  public static final int SC_CONFLICT;

  public static final int SC_GONE;

  public static final int SC_LENGTH_REQUIRED;

  public static final int SC_PRECONDITION_FAILED;

  public static final int SC_REQUEST_ENTITY_TOO_LARGE;

  public static final int SC_REQUEST_URI_TOO_LONG;

  public static final int SC_UNSUPPORTED_MEDIA_TYPE;

  public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE;

  public static final int SC_EXPECTATION_FAILED;

  public static final int SC_INTERNAL_SERVER_ERROR;

  public static final int SC_NOT_IMPLEMENTED;

  public static final int SC_BAD_GATEWAY;

  public static final int SC_SERVICE_UNAVAILABLE;

  public static final int SC_GATEWAY_TIMEOUT;

  public static final int SC_HTTP_VERSION_NOT_SUPPORTED;

  public abstract void addCookie(javax.servlet.http.Cookie);

  public abstract boolean containsHeader(java.lang.String);

  public abstract java.lang.String encodeURL(java.lang.String);

  public abstract java.lang.String encodeRedirectURL(java.lang.String);

  public abstract java.lang.String encodeUrl(java.lang.String);

  public abstract java.lang.String encodeRedirectUrl(java.lang.String);

  public abstract void sendError(int, java.lang.String) throws java.io.IOException;

  public abstract void sendError(int) throws java.io.IOException;

  public abstract void sendRedirect(java.lang.String) throws java.io.IOException;

  public abstract void setDateHeader(java.lang.String, long);

  public abstract void addDateHeader(java.lang.String, long);

  public abstract void setHeader(java.lang.String, java.lang.String);

  public abstract void addHeader(java.lang.String, java.lang.String);

  public abstract void setIntHeader(java.lang.String, int);

  public abstract void addIntHeader(java.lang.String, int);

  public abstract void setStatus(int);

  public abstract void setStatus(int, java.lang.String);

  public abstract int getStatus();

  public abstract java.lang.String getHeader(java.lang.String);

  public abstract java.util.Collection<java.lang.String> getHeaders(java.lang.String);

  public abstract java.util.Collection<java.lang.String> getHeaderNames();

  public default void setTrailerFields(java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: return

  public default java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>> getTrailerFields();
    Code:
       0: aconst_null
       1: areturn
}
