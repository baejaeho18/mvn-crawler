Compiled from "AbstractProcessor.java"
public abstract class org.thymeleaf.processor.AbstractProcessor implements org.thymeleaf.processor.IProcessor {
  private final int precedence;

  private final org.thymeleaf.templatemode.TemplateMode templateMode;

  public org.thymeleaf.processor.AbstractProcessor(org.thymeleaf.templatemode.TemplateMode, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Template mode cannot be null
       7: invokestatic  #3                  // Method org/thymeleaf/util/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field templateMode:Lorg/thymeleaf/templatemode/TemplateMode;
      15: aload_0
      16: iload_2
      17: putfield      #5                  // Field precedence:I
      20: return

  public final org.thymeleaf.templatemode.TemplateMode getTemplateMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field templateMode:Lorg/thymeleaf/templatemode/TemplateMode;
       4: areturn

  public final int getPrecedence();
    Code:
       0: aload_0
       1: getfield      #5                  // Field precedence:I
       4: ireturn
}
