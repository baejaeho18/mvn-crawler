Compiled from "StandardExpressionExecutionContext.java"
public final class org.thymeleaf.standard.expression.StandardExpressionExecutionContext {
  public static final org.thymeleaf.standard.expression.StandardExpressionExecutionContext RESTRICTED;

  public static final org.thymeleaf.standard.expression.StandardExpressionExecutionContext RESTRICTED_FORBID_UNSAFE_EXP_RESULTS;

  public static final org.thymeleaf.standard.expression.StandardExpressionExecutionContext NORMAL;

  private static final org.thymeleaf.standard.expression.StandardExpressionExecutionContext RESTRICTED_WITH_TYPE_CONVERSION;

  private static final org.thymeleaf.standard.expression.StandardExpressionExecutionContext RESTRICTED_FORBID_UNSAFE_EXP_RESULTS_WITH_TYPE_CONVERSION;

  private static final org.thymeleaf.standard.expression.StandardExpressionExecutionContext NORMAL_WITH_TYPE_CONVERSION;

  private final boolean restrictVariableAccess;

  private final boolean forbidUnsafeExpressionResults;

  private final boolean performTypeConversion;

  private org.thymeleaf.standard.expression.StandardExpressionExecutionContext(boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field restrictVariableAccess:Z
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field forbidUnsafeExpressionResults:Z
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field performTypeConversion:Z
      19: return

  public boolean getRestrictVariableAccess();
    Code:
       0: aload_0
       1: getfield      #2                  // Field restrictVariableAccess:Z
       4: ireturn

  public boolean getForbidUnsafeExpressionResults();
    Code:
       0: aload_0
       1: getfield      #3                  // Field forbidUnsafeExpressionResults:Z
       4: ireturn

  public boolean getPerformTypeConversion();
    Code:
       0: aload_0
       1: getfield      #4                  // Field performTypeConversion:Z
       4: ireturn

  public org.thymeleaf.standard.expression.StandardExpressionExecutionContext withoutTypeConversion();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getPerformTypeConversion:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: getstatic     #6                  // Field NORMAL_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      13: if_acmpne     20
      16: getstatic     #7                  // Field NORMAL:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      19: areturn
      20: aload_0
      21: getstatic     #8                  // Field RESTRICTED_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      24: if_acmpne     31
      27: getstatic     #9                  // Field RESTRICTED:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      30: areturn
      31: aload_0
      32: getstatic     #10                 // Field RESTRICTED_FORBID_UNSAFE_EXP_RESULTS_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      35: if_acmpne     42
      38: getstatic     #11                 // Field RESTRICTED_FORBID_UNSAFE_EXP_RESULTS:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      41: areturn
      42: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      45: dup
      46: aload_0
      47: invokevirtual #13                 // Method getRestrictVariableAccess:()Z
      50: aload_0
      51: invokevirtual #14                 // Method getForbidUnsafeExpressionResults:()Z
      54: iconst_0
      55: invokespecial #15                 // Method "<init>":(ZZZ)V
      58: areturn

  public org.thymeleaf.standard.expression.StandardExpressionExecutionContext withTypeConversion();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getPerformTypeConversion:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: getstatic     #7                  // Field NORMAL:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      13: if_acmpne     20
      16: getstatic     #6                  // Field NORMAL_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      19: areturn
      20: aload_0
      21: getstatic     #9                  // Field RESTRICTED:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      24: if_acmpne     31
      27: getstatic     #8                  // Field RESTRICTED_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      30: areturn
      31: aload_0
      32: getstatic     #11                 // Field RESTRICTED_FORBID_UNSAFE_EXP_RESULTS:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      35: if_acmpne     42
      38: getstatic     #10                 // Field RESTRICTED_FORBID_UNSAFE_EXP_RESULTS_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      41: areturn
      42: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      45: dup
      46: aload_0
      47: invokevirtual #13                 // Method getRestrictVariableAccess:()Z
      50: aload_0
      51: invokevirtual #14                 // Method getForbidUnsafeExpressionResults:()Z
      54: iconst_1
      55: invokespecial #15                 // Method "<init>":(ZZZ)V
      58: areturn

  static {};
    Code:
       0: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
       3: dup
       4: iconst_1
       5: iconst_0
       6: iconst_0
       7: invokespecial #15                 // Method "<init>":(ZZZ)V
      10: putstatic     #9                  // Field RESTRICTED:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      13: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      16: dup
      17: iconst_1
      18: iconst_1
      19: iconst_0
      20: invokespecial #15                 // Method "<init>":(ZZZ)V
      23: putstatic     #11                 // Field RESTRICTED_FORBID_UNSAFE_EXP_RESULTS:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      26: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      29: dup
      30: iconst_0
      31: iconst_0
      32: iconst_0
      33: invokespecial #15                 // Method "<init>":(ZZZ)V
      36: putstatic     #7                  // Field NORMAL:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      39: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      42: dup
      43: iconst_1
      44: iconst_0
      45: iconst_1
      46: invokespecial #15                 // Method "<init>":(ZZZ)V
      49: putstatic     #8                  // Field RESTRICTED_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      52: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      55: dup
      56: iconst_1
      57: iconst_1
      58: iconst_1
      59: invokespecial #15                 // Method "<init>":(ZZZ)V
      62: putstatic     #10                 // Field RESTRICTED_FORBID_UNSAFE_EXP_RESULTS_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      65: new           #12                 // class org/thymeleaf/standard/expression/StandardExpressionExecutionContext
      68: dup
      69: iconst_0
      70: iconst_0
      71: iconst_1
      72: invokespecial #15                 // Method "<init>":(ZZZ)V
      75: putstatic     #6                  // Field NORMAL_WITH_TYPE_CONVERSION:Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      78: return
}
