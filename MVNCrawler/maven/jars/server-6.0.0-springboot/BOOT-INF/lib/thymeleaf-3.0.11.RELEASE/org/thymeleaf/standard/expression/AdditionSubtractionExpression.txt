Compiled from "AdditionSubtractionExpression.java"
public abstract class org.thymeleaf.standard.expression.AdditionSubtractionExpression extends org.thymeleaf.standard.expression.BinaryOperationExpression {
  private static final long serialVersionUID;

  protected static final java.lang.String ADDITION_OPERATOR;

  protected static final java.lang.String SUBTRACTION_OPERATOR;

  static final java.lang.String[] OPERATORS;

  private static final boolean[] LENIENCIES;

  private static final java.lang.Class<? extends org.thymeleaf.standard.expression.BinaryOperationExpression>[] OPERATOR_CLASSES;

  private static final java.lang.reflect.Method LEFT_ALLOWED_METHOD;

  private static final java.lang.reflect.Method RIGHT_ALLOWED_METHOD;

  protected org.thymeleaf.standard.expression.AdditionSubtractionExpression(org.thymeleaf.standard.expression.IStandardExpression, org.thymeleaf.standard.expression.IStandardExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/thymeleaf/standard/expression/BinaryOperationExpression."<init>":(Lorg/thymeleaf/standard/expression/IStandardExpression;Lorg/thymeleaf/standard/expression/IStandardExpression;)V
       6: return

  static boolean isRightAllowed(org.thymeleaf.standard.expression.IStandardExpression);
    Code:
       0: aload_0
       1: ifnull        29
       4: aload_0
       5: instanceof    #2                  // class org/thymeleaf/standard/expression/Token
       8: ifeq          25
      11: aload_0
      12: instanceof    #3                  // class org/thymeleaf/standard/expression/NumberTokenExpression
      15: ifne          25
      18: aload_0
      19: instanceof    #4                  // class org/thymeleaf/standard/expression/GenericTokenExpression
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  static boolean isLeftAllowed(org.thymeleaf.standard.expression.IStandardExpression);
    Code:
       0: aload_0
       1: ifnull        29
       4: aload_0
       5: instanceof    #2                  // class org/thymeleaf/standard/expression/Token
       8: ifeq          25
      11: aload_0
      12: instanceof    #3                  // class org/thymeleaf/standard/expression/NumberTokenExpression
      15: ifne          25
      18: aload_0
      19: instanceof    #4                  // class org/thymeleaf/standard/expression/GenericTokenExpression
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  static org.thymeleaf.standard.expression.ExpressionParsingState composeAdditionSubtractionExpression(org.thymeleaf.standard.expression.ExpressionParsingState, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #5                  // Field OPERATORS:[Ljava/lang/String;
       5: getstatic     #6                  // Field LENIENCIES:[Z
       8: getstatic     #7                  // Field OPERATOR_CLASSES:[Ljava/lang/Class;
      11: getstatic     #8                  // Field LEFT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
      14: getstatic     #9                  // Field RIGHT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
      17: invokestatic  #10                 // Method composeBinaryOperationExpression:(Lorg/thymeleaf/standard/expression/ExpressionParsingState;I[Ljava/lang/String;[Z[Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Lorg/thymeleaf/standard/expression/ExpressionParsingState;
      20: areturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #11                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #13                 // String +
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #14                 // String -
      13: aastore
      14: putstatic     #5                  // Field OPERATORS:[Ljava/lang/String;
      17: iconst_2
      18: newarray       boolean
      20: dup
      21: iconst_0
      22: iconst_0
      23: bastore
      24: dup
      25: iconst_1
      26: iconst_1
      27: bastore
      28: putstatic     #6                  // Field LENIENCIES:[Z
      31: iconst_2
      32: anewarray     #15                 // class java/lang/Class
      35: dup
      36: iconst_0
      37: ldc           #16                 // class org/thymeleaf/standard/expression/AdditionExpression
      39: aastore
      40: dup
      41: iconst_1
      42: ldc           #17                 // class org/thymeleaf/standard/expression/SubtractionExpression
      44: aastore
      45: putstatic     #7                  // Field OPERATOR_CLASSES:[Ljava/lang/Class;
      48: ldc           #12                 // class org/thymeleaf/standard/expression/AdditionSubtractionExpression
      50: ldc           #18                 // String isLeftAllowed
      52: iconst_1
      53: anewarray     #15                 // class java/lang/Class
      56: dup
      57: iconst_0
      58: ldc           #19                 // class org/thymeleaf/standard/expression/IStandardExpression
      60: aastore
      61: invokevirtual #20                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      64: putstatic     #8                  // Field LEFT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
      67: ldc           #12                 // class org/thymeleaf/standard/expression/AdditionSubtractionExpression
      69: ldc           #21                 // String isRightAllowed
      71: iconst_1
      72: anewarray     #15                 // class java/lang/Class
      75: dup
      76: iconst_0
      77: ldc           #19                 // class org/thymeleaf/standard/expression/IStandardExpression
      79: aastore
      80: invokevirtual #20                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      83: putstatic     #9                  // Field RIGHT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
      86: goto          99
      89: astore_0
      90: new           #23                 // class java/lang/ExceptionInInitializerError
      93: dup
      94: aload_0
      95: invokespecial #24                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/Throwable;)V
      98: athrow
      99: return
    Exception table:
       from    to  target type
          48    86    89   Class java/lang/NoSuchMethodException
}
