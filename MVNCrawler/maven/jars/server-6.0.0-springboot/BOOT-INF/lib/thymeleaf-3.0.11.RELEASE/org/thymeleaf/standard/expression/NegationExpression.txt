Compiled from "NegationExpression.java"
public final class org.thymeleaf.standard.expression.NegationExpression extends org.thymeleaf.standard.expression.ComplexExpression {
  private static final long serialVersionUID;

  private static final org.slf4j.Logger logger;

  private static final java.lang.String OPERATOR_1;

  private static final java.lang.String OPERATOR_2;

  static final java.lang.String[] OPERATORS;

  private final org.thymeleaf.standard.expression.Expression operand;

  public org.thymeleaf.standard.expression.NegationExpression(org.thymeleaf.standard.expression.Expression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/thymeleaf/standard/expression/ComplexExpression."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Operand cannot be null
       7: invokestatic  #3                  // Method org/thymeleaf/util/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field operand:Lorg/thymeleaf/standard/expression/Expression;
      15: return

  public org.thymeleaf.standard.expression.Expression getOperand();
    Code:
       0: aload_0
       1: getfield      #4                  // Field operand:Lorg/thymeleaf/standard/expression/Expression;
       4: areturn

  public java.lang.String getStringRepresentation();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #8                  // String !
      11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: getfield      #4                  // Field operand:Lorg/thymeleaf/standard/expression/Expression;
      19: instanceof    #10                 // class org/thymeleaf/standard/expression/ComplexExpression
      22: ifeq          51
      25: aload_1
      26: bipush        40
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: aload_0
      34: getfield      #4                  // Field operand:Lorg/thymeleaf/standard/expression/Expression;
      37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: pop
      41: aload_1
      42: bipush        41
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      47: pop
      48: goto          60
      51: aload_1
      52: aload_0
      53: getfield      #4                  // Field operand:Lorg/thymeleaf/standard/expression/Expression;
      56: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_1
      61: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn

  public static org.thymeleaf.standard.expression.ExpressionParsingState composeNegationExpression(org.thymeleaf.standard.expression.ExpressionParsingState, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #15                 // Method org/thymeleaf/standard/expression/ExpressionParsingState.get:(I)Ljava/lang/Object;
       5: checkcast     #16                 // class org/thymeleaf/standard/expression/ExpressionParsingNode
       8: invokevirtual #17                 // Method org/thymeleaf/standard/expression/ExpressionParsingNode.getInput:()Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: invokestatic  #18                 // Method org/thymeleaf/util/StringUtils.isEmptyOrWhitespace:(Ljava/lang/String;)Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: aload_2
      22: invokevirtual #19                 // Method java/lang/String.trim:()Ljava/lang/String;
      25: astore_3
      26: aconst_null
      27: astore        4
      29: aload_3
      30: ldc           #8                  // String !
      32: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      35: istore        5
      37: iload         5
      39: iconst_m1
      40: if_icmpne     66
      43: aload_3
      44: ldc           #21                 // String not
      46: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      49: istore        5
      51: iload         5
      53: iconst_m1
      54: if_icmpne     59
      57: aload_0
      58: areturn
      59: ldc           #21                 // String not
      61: astore        4
      63: goto          70
      66: ldc           #8                  // String !
      68: astore        4
      70: iload         5
      72: ifeq          77
      75: aload_0
      76: areturn
      77: aload_3
      78: aload         4
      80: invokevirtual #22                 // Method java/lang/String.length:()I
      83: invokevirtual #23                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      86: astore        6
      88: aload_0
      89: aload         6
      91: invokestatic  #24                 // Method org/thymeleaf/standard/expression/ExpressionParsingUtil.parseAndCompose:(Lorg/thymeleaf/standard/expression/ExpressionParsingState;Ljava/lang/String;)Lorg/thymeleaf/standard/expression/Expression;
      94: astore        7
      96: aload         7
      98: ifnonnull     103
     101: aconst_null
     102: areturn
     103: new           #7                  // class org/thymeleaf/standard/expression/NegationExpression
     106: dup
     107: aload         7
     109: invokespecial #25                 // Method "<init>":(Lorg/thymeleaf/standard/expression/Expression;)V
     112: astore        8
     114: aload_0
     115: iload_1
     116: aload         8
     118: invokevirtual #26                 // Method org/thymeleaf/standard/expression/ExpressionParsingState.setNode:(ILorg/thymeleaf/standard/expression/Expression;)V
     121: aload_0
     122: areturn

  static java.lang.Object executeNegation(org.thymeleaf.context.IExpressionContext, org.thymeleaf.standard.expression.NegationExpression, org.thymeleaf.standard.expression.StandardExpressionExecutionContext);
    Code:
       0: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
       3: invokeinterface #28,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          28
      11: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
      14: ldc           #29                 // String [THYMELEAF][{}] Evaluating negation expression: \"{}\"
      16: invokestatic  #30                 // Method org/thymeleaf/TemplateEngine.threadIndex:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #31                 // Method getStringRepresentation:()Ljava/lang/String;
      23: invokeinterface #32,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_1
      29: invokevirtual #33                 // Method getOperand:()Lorg/thymeleaf/standard/expression/Expression;
      32: aload_0
      33: aload_2
      34: invokevirtual #34                 // Method org/thymeleaf/standard/expression/Expression.execute:(Lorg/thymeleaf/context/IExpressionContext;Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;)Ljava/lang/Object;
      37: astore_3
      38: aload_3
      39: invokestatic  #35                 // Method org/thymeleaf/util/EvaluationUtils.evaluateAsBoolean:(Ljava/lang/Object;)Z
      42: istore        4
      44: iload         4
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: areturn

  static {};
    Code:
       0: ldc           #7                  // class org/thymeleaf/standard/expression/NegationExpression
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #27                 // Field logger:Lorg/slf4j/Logger;
       8: iconst_2
       9: anewarray     #38                 // class java/lang/String
      12: dup
      13: iconst_0
      14: ldc           #8                  // String !
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #21                 // String not
      21: aastore
      22: putstatic     #39                 // Field OPERATORS:[Ljava/lang/String;
      25: return
}
