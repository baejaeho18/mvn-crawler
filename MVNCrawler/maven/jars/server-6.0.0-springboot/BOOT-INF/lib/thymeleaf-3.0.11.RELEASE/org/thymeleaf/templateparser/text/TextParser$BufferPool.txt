Compiled from "TextParser.java"
final class org.thymeleaf.templateparser.text.TextParser$BufferPool {
  private final char[][] pool;

  private final boolean[] allocated;

  private final int poolBufferSize;

  private org.thymeleaf.templateparser.text.TextParser$BufferPool(int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: anewarray     #6                  // class "[C"
       9: putfield      #7                  // Field pool:[[C
      12: aload_0
      13: iload_1
      14: newarray       boolean
      16: putfield      #8                  // Field allocated:[Z
      19: aload_0
      20: iload_2
      21: putfield      #3                  // Field poolBufferSize:I
      24: iconst_0
      25: istore_3
      26: iload_3
      27: aload_0
      28: getfield      #7                  // Field pool:[[C
      31: arraylength
      32: if_icmpge     53
      35: aload_0
      36: getfield      #7                  // Field pool:[[C
      39: iload_3
      40: aload_0
      41: getfield      #3                  // Field poolBufferSize:I
      44: newarray       char
      46: aastore
      47: iinc          3, 1
      50: goto          26
      53: aload_0
      54: getfield      #8                  // Field allocated:[Z
      57: iconst_0
      58: invokestatic  #9                  // Method java/util/Arrays.fill:([ZZ)V
      61: return

  private synchronized char[] allocateBuffer(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field poolBufferSize:I
       5: if_icmpeq     12
       8: iload_1
       9: newarray       char
      11: areturn
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: getfield      #7                  // Field pool:[[C
      19: arraylength
      20: if_icmpge     52
      23: aload_0
      24: getfield      #8                  // Field allocated:[Z
      27: iload_2
      28: baload
      29: ifne          46
      32: aload_0
      33: getfield      #8                  // Field allocated:[Z
      36: iload_2
      37: iconst_1
      38: bastore
      39: aload_0
      40: getfield      #7                  // Field pool:[[C
      43: iload_2
      44: aaload
      45: areturn
      46: iinc          2, 1
      49: goto          14
      52: iload_1
      53: newarray       char
      55: areturn

  private synchronized void releaseBuffer(char[]);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: arraylength
       7: aload_0
       8: getfield      #3                  // Field poolBufferSize:I
      11: if_icmpeq     15
      14: return
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #7                  // Field pool:[[C
      22: arraylength
      23: if_icmpge     50
      26: aload_0
      27: getfield      #7                  // Field pool:[[C
      30: iload_2
      31: aaload
      32: aload_1
      33: if_acmpne     44
      36: aload_0
      37: getfield      #8                  // Field allocated:[Z
      40: iload_2
      41: iconst_0
      42: bastore
      43: return
      44: iinc          2, 1
      47: goto          17
      50: return

  org.thymeleaf.templateparser.text.TextParser$BufferPool(int, int, org.thymeleaf.templateparser.text.TextParser$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #4                  // Method "<init>":(II)V
       6: return

  static int access$100(org.thymeleaf.templateparser.text.TextParser$BufferPool);
    Code:
       0: aload_0
       1: getfield      #3                  // Field poolBufferSize:I
       4: ireturn

  static char[] access$200(org.thymeleaf.templateparser.text.TextParser$BufferPool, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method allocateBuffer:(I)[C
       5: areturn

  static void access$300(org.thymeleaf.templateparser.text.TextParser$BufferPool, char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method releaseBuffer:([C)V
       5: return
}
