Compiled from "OGNLContextPropertyAccessor.java"
public final class org.thymeleaf.standard.expression.OGNLContextPropertyAccessor implements ognl.PropertyAccessor {
  private static final org.slf4j.Logger LOGGER;

  public static final java.lang.String RESTRICT_REQUEST_PARAMETERS;

  static final java.lang.String REQUEST_PARAMETERS_RESTRICTED_VARIABLE_NAME;

  org.thymeleaf.standard.expression.OGNLContextPropertyAccessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Object getProperty(java.util.Map, java.lang.Object, java.lang.Object) throws ognl.OgnlException;
    Code:
       0: aload_2
       1: instanceof    #2                  // class org/thymeleaf/context/IContext
       4: ifne          80
       7: new           #3                  // class java/lang/IllegalStateException
      10: dup
      11: new           #4                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #6                  // String Wrong target type. This property accessor is only usable for
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #2                  // class org/thymeleaf/context/IContext
      25: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #9                  // String  implementations, and in this case the target object is
      33: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: ifnonnull     45
      40: ldc           #10                 // String null
      42: goto          70
      45: new           #4                  // class java/lang/StringBuilder
      48: dup
      49: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #11                 // String of class
      54: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      64: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: ldc           #16                 // String param
      82: aload_3
      83: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          136
      89: aload_1
      90: ifnull        136
      93: aload_1
      94: ldc           #18                 // String %RESTRICT_REQUEST_PARAMETERS%
      96: invokeinterface #19,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     101: ifeq          136
     104: new           #20                 // class ognl/OgnlException
     107: dup
     108: new           #4                  // class java/lang/StringBuilder
     111: dup
     112: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #21                 // String Access to variable \"
     117: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_3
     121: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: ldc           #23                 // String \" is forbidden in this context. Note some restrictions apply to variable access. For example, direct access to request parameters is forbidden in preprocessing and unescaped expressions, in TEXT template mode, in fragment insertion specifications and in some specific attribute processors.
     126: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #24                 // Method ognl/OgnlException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_3
     137: ifnonnull     144
     140: aconst_null
     141: goto          148
     144: aload_3
     145: invokevirtual #25                 // Method java/lang/Object.toString:()Ljava/lang/String;
     148: astore        4
     150: aload         4
     152: aload_1
     153: invokestatic  #26                 // Method checkExecInfo:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
     156: astore        5
     158: aload         5
     160: ifnull        166
     163: aload         5
     165: areturn
     166: aload_2
     167: checkcast     #2                  // class org/thymeleaf/context/IContext
     170: astore        6
     172: aload         6
     174: aload         4
     176: invokeinterface #27,  2           // InterfaceMethod org/thymeleaf/context/IContext.getVariable:(Ljava/lang/String;)Ljava/lang/Object;
     181: areturn

  private static java.lang.Object checkExecInfo(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: ldc           #28                 // String execInfo
       2: aload_0
       3: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          31
       9: getstatic     #29                 // Field LOGGER:Lorg/slf4j/Logger;
      12: ldc           #30                 // String [THYMELEAF][{}] Found Thymeleaf Standard Expression containing a call to the context variable \"execInfo\" (e.g. \"${execInfo.templateName}\"), which has been deprecated. The Execution Info should be now accessed as an expression object instead (e.g. \"${#execInfo.templateName}\"). Deprecated use is still allowed, but will be removed in future versions of Thymeleaf.
      14: invokestatic  #31                 // Method org/thymeleaf/TemplateEngine.threadIndex:()Ljava/lang/String;
      17: invokeinterface #32,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      22: aload_1
      23: ldc           #28                 // String execInfo
      25: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: areturn
      31: aconst_null
      32: areturn

  public void setProperty(java.util.Map, java.lang.Object, java.lang.Object, java.lang.Object) throws ognl.OgnlException;
    Code:
       0: new           #34                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #35                 // String Cannot set values into VariablesMap instances from OGNL Expressions
       6: invokespecial #36                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getSourceAccessor(ognl.OgnlContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #2                  // class org/thymeleaf/context/IContext
       3: invokevirtual #37                 // Method ognl/OgnlContext.setCurrentAccessor:(Ljava/lang/Class;)V
       6: aload_1
       7: ldc           #38                 // class java/lang/Object
       9: invokevirtual #39                 // Method ognl/OgnlContext.setCurrentType:(Ljava/lang/Class;)V
      12: new           #4                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #40                 // String .getVariable(
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_3
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #41                 // String )
      30: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  public java.lang.String getSourceSetter(ognl.OgnlContext, java.lang.Object, java.lang.Object);
    Code:
       0: new           #42                 // class ognl/enhance/UnsupportedCompilationException
       3: dup
       4: new           #4                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #43                 // String Setting expression for
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #44                 // Method ognl/OgnlContext.getCurrentObject:()Ljava/lang/Object;
      20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc           #45                 // String  with index of
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_3
      29: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #46                 // String  cannot be computed. IVariablesMap implementations are considered read-only by OGNL.
      34: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #47                 // Method ognl/enhance/UnsupportedCompilationException."<init>":(Ljava/lang/String;)V
      43: athrow

  static {};
    Code:
       0: ldc           #15                 // class org/thymeleaf/standard/expression/OGNLContextPropertyAccessor
       2: invokestatic  #48                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #29                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
