Compiled from "StandardJavaScriptSerializer.java"
public final class org.thymeleaf.standard.serializer.StandardJavaScriptSerializer implements org.thymeleaf.standard.serializer.IStandardJavaScriptSerializer {
  private static final org.slf4j.Logger logger;

  private final org.thymeleaf.standard.serializer.IStandardJavaScriptSerializer delegate;

  private java.lang.String computeJacksonPackageNameIfPresent();
    Code:
       0: ldc           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
       2: astore_1
       3: aload_1
       4: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       7: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: iconst_0
      13: aload_2
      14: invokevirtual #4                  // Method java/lang/String.length:()I
      17: ldc           #5                  // String .databind
      19: invokevirtual #4                  // Method java/lang/String.length:()I
      22: isub
      23: invokevirtual #6                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      26: areturn
      27: astore_1
      28: aconst_null
      29: areturn
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Throwable

  public org.thymeleaf.standard.serializer.StandardJavaScriptSerializer(boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aconst_null
       5: astore_2
       6: iload_1
       7: ifeq          17
      10: aload_0
      11: invokespecial #9                  // Method computeJacksonPackageNameIfPresent:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: astore_3
      19: aload_3
      20: ifnull        54
      23: new           #10                 // class org/thymeleaf/standard/serializer/StandardJavaScriptSerializer$JacksonStandardJavaScriptSerializer
      26: dup
      27: aload_3
      28: invokespecial #11                 // Method org/thymeleaf/standard/serializer/StandardJavaScriptSerializer$JacksonStandardJavaScriptSerializer."<init>":(Ljava/lang/String;)V
      31: astore_2
      32: goto          54
      35: astore        4
      37: aload_0
      38: aload         4
      40: invokespecial #13                 // Method handleErrorLoggingOnJacksonInitialization:(Ljava/lang/Throwable;)V
      43: goto          54
      46: astore        4
      48: aload_0
      49: aload         4
      51: invokespecial #13                 // Method handleErrorLoggingOnJacksonInitialization:(Ljava/lang/Throwable;)V
      54: aload_2
      55: ifnonnull     67
      58: new           #15                 // class org/thymeleaf/standard/serializer/StandardJavaScriptSerializer$DefaultStandardJavaScriptSerializer
      61: dup
      62: aconst_null
      63: invokespecial #16                 // Method org/thymeleaf/standard/serializer/StandardJavaScriptSerializer$DefaultStandardJavaScriptSerializer."<init>":(Lorg/thymeleaf/standard/serializer/StandardJavaScriptSerializer$1;)V
      66: astore_2
      67: aload_0
      68: aload_2
      69: putfield      #17                 // Field delegate:Lorg/thymeleaf/standard/serializer/IStandardJavaScriptSerializer;
      72: return
    Exception table:
       from    to  target type
          23    32    35   Class java/lang/Exception
          23    32    46   Class java/lang/NoSuchMethodError

  public void serializeValue(java.lang.Object, java.io.Writer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field delegate:Lorg/thymeleaf/standard/serializer/IStandardJavaScriptSerializer;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod org/thymeleaf/standard/serializer/IStandardJavaScriptSerializer.serializeValue:(Ljava/lang/Object;Ljava/io/Writer;)V
      11: return

  private void handleErrorLoggingOnJacksonInitialization(java.lang.Throwable);
    Code:
       0: ldc           #19                 // String [THYMELEAF] Could not initialize Jackson-based serializer even if the Jackson library was detected to be present at the classpath. Please make sure you are adding the jackson-databind module to your classpath, and that version is >= 2.5.0. THYMELEAF INITIALIZATION WILL CONTINUE, but Jackson will not be used for JavaScript serialization.
       2: astore_2
       3: getstatic     #20                 // Field logger:Lorg/slf4j/Logger;
       6: invokeinterface #21,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      11: ifeq          28
      14: getstatic     #20                 // Field logger:Lorg/slf4j/Logger;
      17: ldc           #19                 // String [THYMELEAF] Could not initialize Jackson-based serializer even if the Jackson library was detected to be present at the classpath. Please make sure you are adding the jackson-databind module to your classpath, and that version is >= 2.5.0. THYMELEAF INITIALIZATION WILL CONTINUE, but Jackson will not be used for JavaScript serialization.
      19: aload_1
      20: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: goto          58
      28: getstatic     #20                 // Field logger:Lorg/slf4j/Logger;
      31: new           #23                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #25                 // String [THYMELEAF] Could not initialize Jackson-based serializer even if the Jackson library was detected to be present at the classpath. Please make sure you are adding the jackson-databind module to your classpath, and that version is >= 2.5.0. THYMELEAF INITIALIZATION WILL CONTINUE, but Jackson will not be used for JavaScript serialization. Set the log to DEBUG to see a complete exception trace. Exception message is:
      40: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      47: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      58: return

  static {};
    Code:
       0: ldc           #30                 // class org/thymeleaf/standard/serializer/StandardJavaScriptSerializer
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #20                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
