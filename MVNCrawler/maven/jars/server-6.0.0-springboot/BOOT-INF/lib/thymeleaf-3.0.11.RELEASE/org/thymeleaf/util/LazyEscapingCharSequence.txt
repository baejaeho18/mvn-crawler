Compiled from "LazyEscapingCharSequence.java"
public final class org.thymeleaf.util.LazyEscapingCharSequence extends org.thymeleaf.util.AbstractLazyCharSequence {
  private final org.thymeleaf.IEngineConfiguration configuration;

  private final org.thymeleaf.templatemode.TemplateMode templateMode;

  private final java.lang.Object input;

  public org.thymeleaf.util.LazyEscapingCharSequence(org.thymeleaf.IEngineConfiguration, org.thymeleaf.templatemode.TemplateMode, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/thymeleaf/util/AbstractLazyCharSequence."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Engine Configuraion is null, which is forbidden
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String Template Mode is null, which is forbidden
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #6                  // Field configuration:Lorg/thymeleaf/IEngineConfiguration;
      37: aload_0
      38: aload_2
      39: putfield      #7                  // Field templateMode:Lorg/thymeleaf/templatemode/TemplateMode;
      42: aload_0
      43: aload_3
      44: putfield      #8                  // Field input:Ljava/lang/Object;
      47: return

  protected java.lang.String resolveText();
    Code:
       0: new           #9                  // class org/thymeleaf/util/FastStringWriter
       3: dup
       4: invokespecial #10                 // Method org/thymeleaf/util/FastStringWriter."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #11                 // Method produceEscapedOutput:(Ljava/io/Writer;)V
      13: aload_1
      14: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
      17: areturn

  protected void writeUnresolved(java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method produceEscapedOutput:(Ljava/io/Writer;)V
       5: return

  private void produceEscapedOutput(java.io.Writer);
    Code:
       0: getstatic     #13                 // Field org/thymeleaf/util/LazyEscapingCharSequence$1.$SwitchMap$org$thymeleaf$templatemode$TemplateMode:[I
       3: aload_0
       4: getfield      #7                  // Field templateMode:Lorg/thymeleaf/templatemode/TemplateMode;
       7: invokevirtual #14                 // Method org/thymeleaf/templatemode/TemplateMode.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 6
                     1: 48
                     2: 48
                     3: 67
                     4: 86
                     5: 106
                     6: 126
               default: 145
          }
      48: aload_0
      49: getfield      #8                  // Field input:Ljava/lang/Object;
      52: ifnull        66
      55: aload_0
      56: getfield      #8                  // Field input:Ljava/lang/Object;
      59: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
      62: aload_1
      63: invokestatic  #15                 // Method org/unbescape/html/HtmlEscape.escapeHtml4Xml:(Ljava/lang/String;Ljava/io/Writer;)V
      66: return
      67: aload_0
      68: getfield      #8                  // Field input:Ljava/lang/Object;
      71: ifnull        85
      74: aload_0
      75: getfield      #8                  // Field input:Ljava/lang/Object;
      78: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
      81: aload_1
      82: invokestatic  #16                 // Method org/unbescape/xml/XmlEscape.escapeXml10:(Ljava/lang/String;Ljava/io/Writer;)V
      85: return
      86: aload_0
      87: getfield      #6                  // Field configuration:Lorg/thymeleaf/IEngineConfiguration;
      90: invokestatic  #17                 // Method org/thymeleaf/standard/serializer/StandardSerializers.getJavaScriptSerializer:(Lorg/thymeleaf/IEngineConfiguration;)Lorg/thymeleaf/standard/serializer/IStandardJavaScriptSerializer;
      93: astore_2
      94: aload_2
      95: aload_0
      96: getfield      #8                  // Field input:Ljava/lang/Object;
      99: aload_1
     100: invokeinterface #18,  3           // InterfaceMethod org/thymeleaf/standard/serializer/IStandardJavaScriptSerializer.serializeValue:(Ljava/lang/Object;Ljava/io/Writer;)V
     105: return
     106: aload_0
     107: getfield      #6                  // Field configuration:Lorg/thymeleaf/IEngineConfiguration;
     110: invokestatic  #19                 // Method org/thymeleaf/standard/serializer/StandardSerializers.getCSSSerializer:(Lorg/thymeleaf/IEngineConfiguration;)Lorg/thymeleaf/standard/serializer/IStandardCSSSerializer;
     113: astore_3
     114: aload_3
     115: aload_0
     116: getfield      #8                  // Field input:Ljava/lang/Object;
     119: aload_1
     120: invokeinterface #20,  3           // InterfaceMethod org/thymeleaf/standard/serializer/IStandardCSSSerializer.serializeValue:(Ljava/lang/Object;Ljava/io/Writer;)V
     125: return
     126: aload_0
     127: getfield      #8                  // Field input:Ljava/lang/Object;
     130: ifnull        144
     133: aload_1
     134: aload_0
     135: getfield      #8                  // Field input:Ljava/lang/Object;
     138: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
     141: invokevirtual #21                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     144: return
     145: new           #22                 // class org/thymeleaf/exceptions/TemplateProcessingException
     148: dup
     149: new           #23                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #25                 // String Unrecognized template mode
     158: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_0
     162: getfield      #7                  // Field templateMode:Lorg/thymeleaf/templatemode/TemplateMode;
     165: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     168: ldc           #28                 // String . Cannot produce escaped output for this template mode.
     170: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokespecial #30                 // Method org/thymeleaf/exceptions/TemplateProcessingException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: astore_2
     181: new           #22                 // class org/thymeleaf/exceptions/TemplateProcessingException
     184: dup
     185: ldc           #32                 // String An error happened while trying to produce escaped output
     187: aload_2
     188: invokespecial #33                 // Method org/thymeleaf/exceptions/TemplateProcessingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     191: athrow
    Exception table:
       from    to  target type
           0    66   180   Class java/io/IOException
          67    85   180   Class java/io/IOException
          86   105   180   Class java/io/IOException
         106   125   180   Class java/io/IOException
         126   144   180   Class java/io/IOException
         145   180   180   Class java/io/IOException
}
