Compiled from "VariableExpression.java"
public final class org.thymeleaf.standard.expression.VariableExpression extends org.thymeleaf.standard.expression.SimpleExpression implements org.thymeleaf.standard.expression.IStandardVariableExpression {
  private static final org.slf4j.Logger logger;

  private static final long serialVersionUID;

  static final char SELECTOR;

  private static final java.util.regex.Pattern VAR_PATTERN;

  static final org.thymeleaf.standard.expression.Expression NULL_VALUE;

  private final java.lang.String expression;

  private final boolean convertToString;

  private volatile java.lang.Object cachedExpression;

  public org.thymeleaf.standard.expression.VariableExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public org.thymeleaf.standard.expression.VariableExpression(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/thymeleaf/standard/expression/SimpleExpression."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field cachedExpression:Ljava/lang/Object;
       9: aload_1
      10: ldc           #4                  // String Expression cannot be null
      12: invokestatic  #5                  // Method org/thymeleaf/util/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field expression:Ljava/lang/String;
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field convertToString:Z
      25: return

  public java.lang.String getExpression();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expression:Ljava/lang/String;
       4: areturn

  public boolean getUseSelectionAsRoot();
    Code:
       0: iconst_0
       1: ireturn

  public boolean getConvertToString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field convertToString:Z
       4: ireturn

  public java.lang.Object getCachedExpression();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cachedExpression:Ljava/lang/Object;
       4: areturn

  public void setCachedExpression(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cachedExpression:Ljava/lang/Object;
       5: return

  public java.lang.String getStringRepresentation();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: bipush        36
       9: invokestatic  #11                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      12: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: bipush        123
      17: invokestatic  #11                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      20: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #7                  // Field convertToString:Z
      27: ifeq          38
      30: bipush        123
      32: invokestatic  #11                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      35: goto          40
      38: ldc           #14                 // String
      40: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #6                  // Field expression:Ljava/lang/String;
      47: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #7                  // Field convertToString:Z
      54: ifeq          65
      57: bipush        125
      59: invokestatic  #11                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      62: goto          67
      65: ldc           #14                 // String
      67: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: bipush        125
      72: invokestatic  #11                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      75: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: areturn

  static org.thymeleaf.standard.expression.VariableExpression parseVariableExpression(java.lang.String);
    Code:
       0: getstatic     #16                 // Field VAR_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: aload_1
       9: invokevirtual #18                 // Method java/util/regex/Matcher.matches:()Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: iconst_1
      19: invokevirtual #19                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: invokevirtual #20                 // Method java/lang/String.length:()I
      27: istore_3
      28: iload_3
      29: iconst_2
      30: if_icmple     72
      33: aload_2
      34: iconst_0
      35: invokevirtual #21                 // Method java/lang/String.charAt:(I)C
      38: bipush        123
      40: if_icmpne     72
      43: aload_2
      44: iload_3
      45: iconst_1
      46: isub
      47: invokevirtual #21                 // Method java/lang/String.charAt:(I)C
      50: bipush        125
      52: if_icmpne     72
      55: new           #10                 // class org/thymeleaf/standard/expression/VariableExpression
      58: dup
      59: aload_2
      60: iconst_1
      61: iload_3
      62: iconst_1
      63: isub
      64: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      67: iconst_1
      68: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
      71: areturn
      72: new           #10                 // class org/thymeleaf/standard/expression/VariableExpression
      75: dup
      76: aload_2
      77: iconst_0
      78: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
      81: areturn

  static java.lang.Object executeVariableExpression(org.thymeleaf.context.IExpressionContext, org.thymeleaf.standard.expression.VariableExpression, org.thymeleaf.standard.expression.IStandardVariableExpressionEvaluator, org.thymeleaf.standard.expression.StandardExpressionExecutionContext);
    Code:
       0: getstatic     #23                 // Field logger:Lorg/slf4j/Logger;
       3: invokeinterface #24,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          28
      11: getstatic     #23                 // Field logger:Lorg/slf4j/Logger;
      14: ldc           #25                 // String [THYMELEAF][{}] Evaluating variable expression: \"{}\"
      16: invokestatic  #26                 // Method org/thymeleaf/TemplateEngine.threadIndex:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #27                 // Method getStringRepresentation:()Ljava/lang/String;
      23: invokeinterface #28,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_1
      29: invokevirtual #29                 // Method getConvertToString:()Z
      32: ifeq          42
      35: aload_3
      36: invokevirtual #30                 // Method org/thymeleaf/standard/expression/StandardExpressionExecutionContext.withTypeConversion:()Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      39: goto          46
      42: aload_3
      43: invokevirtual #31                 // Method org/thymeleaf/standard/expression/StandardExpressionExecutionContext.withoutTypeConversion:()Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;
      46: astore        4
      48: aload_2
      49: aload_0
      50: aload_1
      51: aload         4
      53: invokeinterface #32,  4           // InterfaceMethod org/thymeleaf/standard/expression/IStandardVariableExpressionEvaluator.evaluate:(Lorg/thymeleaf/context/IExpressionContext;Lorg/thymeleaf/standard/expression/IStandardVariableExpression;Lorg/thymeleaf/standard/expression/StandardExpressionExecutionContext;)Ljava/lang/Object;
      58: astore        5
      60: aload_3
      61: invokevirtual #33                 // Method org/thymeleaf/standard/expression/StandardExpressionExecutionContext.getForbidUnsafeExpressionResults:()Z
      64: ifne          70
      67: aload         5
      69: areturn
      70: aload         5
      72: ifnull        91
      75: aload         5
      77: instanceof    #34                 // class java/lang/Number
      80: ifne          91
      83: aload         5
      85: instanceof    #35                 // class java/lang/Boolean
      88: ifeq          94
      91: aload         5
      93: areturn
      94: new           #36                 // class org/thymeleaf/exceptions/TemplateProcessingException
      97: dup
      98: ldc           #37                 // String Only variable expressions returning numbers or booleans are allowed in this context, any other datatypes are not trusted in the context of this expression, including Strings or any other object that could be rendered as a text literal. A typical case is HTML attributes for event handlers (e.g. \"onload\"), in which textual data from variables should better be output to \"data-*\" attributes and then read from the event handler.
     100: invokespecial #38                 // Method org/thymeleaf/exceptions/TemplateProcessingException."<init>":(Ljava/lang/String;)V
     103: athrow

  static {};
    Code:
       0: ldc           #10                 // class org/thymeleaf/standard/expression/VariableExpression
       2: invokestatic  #39                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #23                 // Field logger:Lorg/slf4j/Logger;
       8: ldc           #40                 // String ^\\s*\\$\\{(.+?)\\}\\s*$
      10: bipush        32
      12: invokestatic  #42                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      15: putstatic     #16                 // Field VAR_PATTERN:Ljava/util/regex/Pattern;
      18: ldc           #43                 // String ${null}
      20: invokestatic  #44                 // Method parseVariableExpression:(Ljava/lang/String;)Lorg/thymeleaf/standard/expression/VariableExpression;
      23: putstatic     #45                 // Field NULL_VALUE:Lorg/thymeleaf/standard/expression/Expression;
      26: return
}
