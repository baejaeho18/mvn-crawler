Compiled from "EqualsNotEqualsExpression.java"
public abstract class org.thymeleaf.standard.expression.EqualsNotEqualsExpression extends org.thymeleaf.standard.expression.BinaryOperationExpression {
  private static final long serialVersionUID;

  protected static final java.lang.String EQUALS_OPERATOR;

  protected static final java.lang.String EQUALS_OPERATOR_2;

  protected static final java.lang.String NOT_EQUALS_OPERATOR;

  protected static final java.lang.String NOT_EQUALS_OPERATOR_2;

  protected static final java.lang.String NOT_EQUALS_OPERATOR_3;

  static final java.lang.String[] OPERATORS;

  private static final boolean[] LENIENCIES;

  private static final java.lang.Class<? extends org.thymeleaf.standard.expression.BinaryOperationExpression>[] OPERATOR_CLASSES;

  private static final java.lang.reflect.Method LEFT_ALLOWED_METHOD;

  private static final java.lang.reflect.Method RIGHT_ALLOWED_METHOD;

  protected org.thymeleaf.standard.expression.EqualsNotEqualsExpression(org.thymeleaf.standard.expression.IStandardExpression, org.thymeleaf.standard.expression.IStandardExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/thymeleaf/standard/expression/BinaryOperationExpression."<init>":(Lorg/thymeleaf/standard/expression/IStandardExpression;Lorg/thymeleaf/standard/expression/IStandardExpression;)V
       6: return

  static boolean isRightAllowed(org.thymeleaf.standard.expression.IStandardExpression);
    Code:
       0: iconst_1
       1: ireturn

  static boolean isLeftAllowed(org.thymeleaf.standard.expression.IStandardExpression);
    Code:
       0: iconst_1
       1: ireturn

  protected static org.thymeleaf.standard.expression.ExpressionParsingState composeEqualsNotEqualsExpression(org.thymeleaf.standard.expression.ExpressionParsingState, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #2                  // Field OPERATORS:[Ljava/lang/String;
       5: getstatic     #3                  // Field LENIENCIES:[Z
       8: getstatic     #4                  // Field OPERATOR_CLASSES:[Ljava/lang/Class;
      11: getstatic     #5                  // Field LEFT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
      14: getstatic     #6                  // Field RIGHT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
      17: invokestatic  #7                  // Method composeBinaryOperationExpression:(Lorg/thymeleaf/standard/expression/ExpressionParsingState;I[Ljava/lang/String;[Z[Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Lorg/thymeleaf/standard/expression/ExpressionParsingState;
      20: areturn

  static {};
    Code:
       0: iconst_5
       1: anewarray     #8                  // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #10                 // String ==
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #11                 // String !=
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #12                 // String eq
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #13                 // String neq
      23: aastore
      24: dup
      25: iconst_4
      26: ldc           #14                 // String ne
      28: aastore
      29: putstatic     #2                  // Field OPERATORS:[Ljava/lang/String;
      32: iconst_5
      33: newarray       boolean
      35: dup
      36: iconst_0
      37: iconst_0
      38: bastore
      39: dup
      40: iconst_1
      41: iconst_0
      42: bastore
      43: dup
      44: iconst_2
      45: iconst_0
      46: bastore
      47: dup
      48: iconst_3
      49: iconst_0
      50: bastore
      51: dup
      52: iconst_4
      53: iconst_0
      54: bastore
      55: putstatic     #3                  // Field LENIENCIES:[Z
      58: iconst_5
      59: anewarray     #15                 // class java/lang/Class
      62: dup
      63: iconst_0
      64: ldc           #16                 // class org/thymeleaf/standard/expression/EqualsExpression
      66: aastore
      67: dup
      68: iconst_1
      69: ldc           #17                 // class org/thymeleaf/standard/expression/NotEqualsExpression
      71: aastore
      72: dup
      73: iconst_2
      74: ldc           #16                 // class org/thymeleaf/standard/expression/EqualsExpression
      76: aastore
      77: dup
      78: iconst_3
      79: ldc           #17                 // class org/thymeleaf/standard/expression/NotEqualsExpression
      81: aastore
      82: dup
      83: iconst_4
      84: ldc           #17                 // class org/thymeleaf/standard/expression/NotEqualsExpression
      86: aastore
      87: putstatic     #4                  // Field OPERATOR_CLASSES:[Ljava/lang/Class;
      90: ldc           #9                  // class org/thymeleaf/standard/expression/EqualsNotEqualsExpression
      92: ldc           #18                 // String isLeftAllowed
      94: iconst_1
      95: anewarray     #15                 // class java/lang/Class
      98: dup
      99: iconst_0
     100: ldc           #19                 // class org/thymeleaf/standard/expression/IStandardExpression
     102: aastore
     103: invokevirtual #20                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     106: putstatic     #5                  // Field LEFT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
     109: ldc           #9                  // class org/thymeleaf/standard/expression/EqualsNotEqualsExpression
     111: ldc           #21                 // String isRightAllowed
     113: iconst_1
     114: anewarray     #15                 // class java/lang/Class
     117: dup
     118: iconst_0
     119: ldc           #19                 // class org/thymeleaf/standard/expression/IStandardExpression
     121: aastore
     122: invokevirtual #20                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     125: putstatic     #6                  // Field RIGHT_ALLOWED_METHOD:Ljava/lang/reflect/Method;
     128: goto          141
     131: astore_0
     132: new           #23                 // class java/lang/ExceptionInInitializerError
     135: dup
     136: aload_0
     137: invokespecial #24                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/Throwable;)V
     140: athrow
     141: return
    Exception table:
       from    to  target type
          90   128   131   Class java/lang/NoSuchMethodException
}
