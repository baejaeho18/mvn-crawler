Compiled from "JMXMPConnector.java"
public class javax.management.remote.jmxmp.JMXMPConnector extends javax.management.remote.generic.GenericConnector implements java.io.Serializable {
  private static final long serialVersionUID;

  private javax.management.remote.JMXServiceURL address;

  private transient java.util.Map env;

  private static final java.lang.String protocolName;

  public javax.management.remote.jmxmp.JMXMPConnector(javax.management.remote.JMXServiceURL) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljavax/management/remote/JMXServiceURL;Ljava/util/Map;)V
       6: return

  public javax.management.remote.jmxmp.JMXMPConnector(javax.management.remote.JMXServiceURL, java.util.Map) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #2                  // Method javax/management/remote/generic/GenericConnector."<init>":(Ljava/util/Map;)V
       5: aload_0
       6: new           #3                  // class java/util/HashMap
       9: dup
      10: aload_2
      11: ifnonnull     20
      14: getstatic     #4                  // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
      17: goto          21
      20: aload_2
      21: invokespecial #5                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      24: putfield      #6                  // Field env:Ljava/util/Map;
      27: aload_0
      28: aload_1
      29: putfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
      32: aload_0
      33: invokespecial #8                  // Method validateAddress:()V
      36: return

  private void validateAddress() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #10                 // String JMXServiceURL must not be null
      13: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #12                 // String jmxmp
      19: aload_0
      20: getfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
      23: invokevirtual #13                 // Method javax/management/remote/JMXServiceURL.getProtocol:()Ljava/lang/String;
      26: invokevirtual #14                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      29: ifne          65
      32: new           #15                 // class java/net/MalformedURLException
      35: dup
      36: new           #16                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      43: ldc           #18                 // String Unknown protocol:
      45: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: aload_0
      49: getfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
      52: invokevirtual #13                 // Method javax/management/remote/JMXServiceURL.getProtocol:()Ljava/lang/String;
      55: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      61: invokespecial #21                 // Method java/net/MalformedURLException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: return

  public void connect(java.util.Map) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method validateAddress:()V
       4: new           #3                  // class java/util/HashMap
       7: dup
       8: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      11: astore_2
      12: aload_0
      13: getfield      #6                  // Field env:Ljava/util/Map;
      16: ifnull        29
      19: aload_2
      20: aload_0
      21: getfield      #6                  // Field env:Ljava/util/Map;
      24: invokeinterface #23,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      29: aload_1
      30: ifnull        44
      33: aload_1
      34: invokestatic  #24                 // Method com/sun/jmx/remote/opt/util/EnvHelp.checkAttributes:(Ljava/util/Map;)V
      37: aload_2
      38: aload_1
      39: invokeinterface #23,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      44: aload_2
      45: invokestatic  #25                 // Method com/sun/jmx/remote/opt/util/EnvHelp.resolveClientClassLoader:(Ljava/util/Map;)Ljava/lang/ClassLoader;
      48: astore_3
      49: aload_2
      50: ldc           #26                 // String jmx.remote.default.class.loader
      52: aload_3
      53: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_2
      60: ldc           #28                 // String jmx.remote.message.connection
      62: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      67: ifne          104
      70: new           #30                 // class com/sun/jmx/remote/socket/SocketConnection
      73: dup
      74: aload_0
      75: getfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
      78: invokevirtual #31                 // Method javax/management/remote/JMXServiceURL.getHost:()Ljava/lang/String;
      81: aload_0
      82: getfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
      85: invokevirtual #32                 // Method javax/management/remote/JMXServiceURL.getPort:()I
      88: invokespecial #33                 // Method com/sun/jmx/remote/socket/SocketConnection."<init>":(Ljava/lang/String;I)V
      91: astore        4
      93: aload_2
      94: ldc           #28                 // String jmx.remote.message.connection
      96: aload         4
      98: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_0
     105: aload_2
     106: invokespecial #34                 // Method javax/management/remote/generic/GenericConnector.connect:(Ljava/util/Map;)V
     109: return

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
       7: aload_0
       8: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      17: ldc           #37                 // String : JMXServiceURL=
      19: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: aload_0
      23: getfield      #7                  // Field address:Ljavax/management/remote/JMXServiceURL;
      26: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      29: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      32: areturn
}
