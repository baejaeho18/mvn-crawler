Compiled from "SASLInputStream.java"
public class com.sun.jmx.remote.opt.security.SASLInputStream extends java.io.InputStream {
  private int recvMaxBufSize;

  private byte[] saslBuffer;

  private byte[] lenBuf;

  private byte[] buf;

  private int bufPos;

  private java.io.InputStream in;

  private javax.security.sasl.SaslClient sc;

  private javax.security.sasl.SaslServer ss;

  private static final com.sun.jmx.remote.opt.util.ClassLogger logger;

  public com.sun.jmx.remote.opt.security.SASLInputStream(javax.security.sasl.SaslClient, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 65536
       7: putfield      #3                  // Field recvMaxBufSize:I
      10: aload_0
      11: iconst_4
      12: newarray       byte
      14: putfield      #4                  // Field lenBuf:[B
      17: aload_0
      18: iconst_0
      19: newarray       byte
      21: putfield      #5                  // Field buf:[B
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field bufPos:I
      29: aload_0
      30: aload_2
      31: putfield      #7                  // Field in:Ljava/io/InputStream;
      34: aload_0
      35: aload_1
      36: putfield      #8                  // Field sc:Ljavax/security/sasl/SaslClient;
      39: aload_0
      40: aconst_null
      41: putfield      #9                  // Field ss:Ljavax/security/sasl/SaslServer;
      44: aload_1
      45: ldc           #10                 // String javax.security.sasl.maxbuffer
      47: invokeinterface #11,  2           // InterfaceMethod javax/security/sasl/SaslClient.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      52: checkcast     #12                 // class java/lang/String
      55: astore_3
      56: aload_3
      57: ifnull        100
      60: aload_0
      61: aload_3
      62: invokestatic  #13                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      65: putfield      #3                  // Field recvMaxBufSize:I
      68: goto          100
      71: astore        4
      73: new           #15                 // class java/io/IOException
      76: dup
      77: new           #16                 // class java/lang/StringBuffer
      80: dup
      81: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      84: ldc           #18                 // String javax.security.sasl.maxbuffer property must be numeric string:
      86: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      89: aload_3
      90: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      93: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      96: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: aload_0
     102: getfield      #3                  // Field recvMaxBufSize:I
     105: newarray       byte
     107: putfield      #22                 // Field saslBuffer:[B
     110: return
    Exception table:
       from    to  target type
          60    68    71   Class java/lang/NumberFormatException

  public com.sun.jmx.remote.opt.security.SASLInputStream(javax.security.sasl.SaslServer, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 65536
       7: putfield      #3                  // Field recvMaxBufSize:I
      10: aload_0
      11: iconst_4
      12: newarray       byte
      14: putfield      #4                  // Field lenBuf:[B
      17: aload_0
      18: iconst_0
      19: newarray       byte
      21: putfield      #5                  // Field buf:[B
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field bufPos:I
      29: aload_0
      30: aload_2
      31: putfield      #7                  // Field in:Ljava/io/InputStream;
      34: aload_0
      35: aload_1
      36: putfield      #9                  // Field ss:Ljavax/security/sasl/SaslServer;
      39: aload_0
      40: aconst_null
      41: putfield      #8                  // Field sc:Ljavax/security/sasl/SaslClient;
      44: aload_1
      45: ldc           #10                 // String javax.security.sasl.maxbuffer
      47: invokeinterface #23,  2           // InterfaceMethod javax/security/sasl/SaslServer.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      52: checkcast     #12                 // class java/lang/String
      55: astore_3
      56: aload_3
      57: ifnull        100
      60: aload_0
      61: aload_3
      62: invokestatic  #13                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      65: putfield      #3                  // Field recvMaxBufSize:I
      68: goto          100
      71: astore        4
      73: new           #15                 // class java/io/IOException
      76: dup
      77: new           #16                 // class java/lang/StringBuffer
      80: dup
      81: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      84: ldc           #18                 // String javax.security.sasl.maxbuffer property must be numeric string:
      86: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      89: aload_3
      90: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      93: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      96: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: aload_0
     102: getfield      #3                  // Field recvMaxBufSize:I
     105: newarray       byte
     107: putfield      #22                 // Field saslBuffer:[B
     110: return
    Exception table:
       from    to  target type
          60    68    71   Class java/lang/NumberFormatException

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: iconst_0
       7: iconst_1
       8: invokevirtual #24                 // Method read:([BII)I
      11: istore_2
      12: iload_2
      13: ifle          20
      16: aload_1
      17: iconst_0
      18: baload
      19: ireturn
      20: iconst_m1
      21: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufPos:I
       4: aload_0
       5: getfield      #5                  // Field buf:[B
       8: arraylength
       9: if_icmplt     40
      12: aload_0
      13: invokespecial #25                 // Method fill:()I
      16: istore        4
      18: iload         4
      20: ifne          32
      23: aload_0
      24: invokespecial #25                 // Method fill:()I
      27: istore        4
      29: goto          18
      32: iload         4
      34: iconst_m1
      35: if_icmpne     40
      38: iconst_m1
      39: ireturn
      40: aload_0
      41: getfield      #5                  // Field buf:[B
      44: arraylength
      45: aload_0
      46: getfield      #6                  // Field bufPos:I
      49: isub
      50: istore        4
      52: iload_3
      53: iload         4
      55: if_icmple     85
      58: aload_0
      59: getfield      #5                  // Field buf:[B
      62: aload_0
      63: getfield      #6                  // Field bufPos:I
      66: aload_1
      67: iload_2
      68: iload         4
      70: invokestatic  #26                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: aload_0
      75: getfield      #5                  // Field buf:[B
      78: arraylength
      79: putfield      #6                  // Field bufPos:I
      82: iload         4
      84: ireturn
      85: aload_0
      86: getfield      #5                  // Field buf:[B
      89: aload_0
      90: getfield      #6                  // Field bufPos:I
      93: aload_1
      94: iload_2
      95: iload_3
      96: invokestatic  #26                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: aload_0
     100: dup
     101: getfield      #6                  // Field bufPos:I
     104: iload_3
     105: iadd
     106: putfield      #6                  // Field bufPos:I
     109: iload_3
     110: ireturn

  private int fill() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field lenBuf:[B
       5: iconst_4
       6: invokespecial #27                 // Method readFully:([BI)I
       9: istore_1
      10: iload_1
      11: iconst_4
      12: if_icmpeq     17
      15: iconst_m1
      16: ireturn
      17: aload_0
      18: aload_0
      19: getfield      #4                  // Field lenBuf:[B
      22: iconst_0
      23: iconst_4
      24: invokespecial #28                 // Method networkByteOrderToInt:([BII)I
      27: istore_2
      28: iload_2
      29: aload_0
      30: getfield      #3                  // Field recvMaxBufSize:I
      33: if_icmple     70
      36: new           #15                 // class java/io/IOException
      39: dup
      40: new           #16                 // class java/lang/StringBuffer
      43: dup
      44: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      47: iload_2
      48: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      51: ldc           #30                 // String exceeds the negotiated receive buffer size limit:
      53: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: aload_0
      57: getfield      #3                  // Field recvMaxBufSize:I
      60: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      63: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      66: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: getstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      73: invokevirtual #32                 // Method com/sun/jmx/remote/opt/util/ClassLogger.traceOn:()Z
      76: ifeq          111
      79: getstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      82: ldc           #33                 // String fill
      84: new           #16                 // class java/lang/StringBuffer
      87: dup
      88: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      91: ldc           #34                 // String reading
      93: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: iload_2
      97: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     100: ldc           #35                 // String  bytes from network
     102: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     105: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     108: invokevirtual #36                 // Method com/sun/jmx/remote/opt/util/ClassLogger.trace:(Ljava/lang/String;Ljava/lang/String;)V
     111: aload_0
     112: aload_0
     113: getfield      #22                 // Field saslBuffer:[B
     116: iload_2
     117: invokespecial #27                 // Method readFully:([BI)I
     120: istore_1
     121: iload_1
     122: iload_2
     123: if_icmpeq     167
     126: new           #37                 // class java/io/EOFException
     129: dup
     130: new           #16                 // class java/lang/StringBuffer
     133: dup
     134: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
     137: ldc           #38                 // String Expecting to read
     139: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     142: iload_2
     143: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     146: ldc           #39                 // String  bytes but got
     148: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     151: iload_1
     152: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     155: ldc           #40                 // String  bytes before EOF
     157: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     160: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     163: invokespecial #41                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     166: athrow
     167: aload_0
     168: getfield      #8                  // Field sc:Ljavax/security/sasl/SaslClient;
     171: ifnull        196
     174: aload_0
     175: aload_0
     176: getfield      #8                  // Field sc:Ljavax/security/sasl/SaslClient;
     179: aload_0
     180: getfield      #22                 // Field saslBuffer:[B
     183: iconst_0
     184: iload_2
     185: invokeinterface #42,  4           // InterfaceMethod javax/security/sasl/SaslClient.unwrap:([BII)[B
     190: putfield      #5                  // Field buf:[B
     193: goto          215
     196: aload_0
     197: aload_0
     198: getfield      #9                  // Field ss:Ljavax/security/sasl/SaslServer;
     201: aload_0
     202: getfield      #22                 // Field saslBuffer:[B
     205: iconst_0
     206: iload_2
     207: invokeinterface #43,  4           // InterfaceMethod javax/security/sasl/SaslServer.unwrap:([BII)[B
     212: putfield      #5                  // Field buf:[B
     215: aload_0
     216: iconst_0
     217: putfield      #6                  // Field bufPos:I
     220: aload_0
     221: getfield      #5                  // Field buf:[B
     224: arraylength
     225: ireturn

  private int readFully(byte[], int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: getstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
       6: invokevirtual #32                 // Method com/sun/jmx/remote/opt/util/ClassLogger.traceOn:()Z
       9: ifeq          51
      12: getstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      15: ldc           #44                 // String readFully
      17: new           #16                 // class java/lang/StringBuffer
      20: dup
      21: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      24: ldc           #45                 // String readFully
      26: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: iload_2
      30: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      33: ldc           #46                 // String  from
      35: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: aload_0
      39: getfield      #7                  // Field in:Ljava/io/InputStream;
      42: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      45: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      48: invokevirtual #36                 // Method com/sun/jmx/remote/opt/util/ClassLogger.trace:(Ljava/lang/String;Ljava/lang/String;)V
      51: iload_2
      52: ifle          133
      55: aload_0
      56: getfield      #7                  // Field in:Ljava/io/InputStream;
      59: aload_1
      60: iload         4
      62: iload_2
      63: invokevirtual #48                 // Method java/io/InputStream.read:([BII)I
      66: istore_3
      67: getstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      70: invokevirtual #32                 // Method com/sun/jmx/remote/opt/util/ClassLogger.traceOn:()Z
      73: ifeq          103
      76: getstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      79: ldc           #44                 // String readFully
      81: new           #16                 // class java/lang/StringBuffer
      84: dup
      85: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      88: ldc           #49                 // String readFully read
      90: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      93: iload_3
      94: invokevirtual #29                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      97: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     100: invokevirtual #36                 // Method com/sun/jmx/remote/opt/util/ClassLogger.trace:(Ljava/lang/String;Ljava/lang/String;)V
     103: iload_3
     104: iconst_m1
     105: if_icmpne     120
     108: iload         4
     110: ifne          117
     113: iconst_m1
     114: goto          119
     117: iload         4
     119: ireturn
     120: iload         4
     122: iload_3
     123: iadd
     124: istore        4
     126: iload_2
     127: iload_3
     128: isub
     129: istore_2
     130: goto          51
     133: iload         4
     135: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:[B
       4: arraylength
       5: aload_0
       6: getfield      #6                  // Field bufPos:I
       9: isub
      10: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field sc:Ljavax/security/sasl/SaslClient;
       4: ifnull        19
       7: aload_0
       8: getfield      #8                  // Field sc:Ljavax/security/sasl/SaslClient;
      11: invokeinterface #50,  1           // InterfaceMethod javax/security/sasl/SaslClient.dispose:()V
      16: goto          28
      19: aload_0
      20: getfield      #9                  // Field ss:Ljavax/security/sasl/SaslServer;
      23: invokeinterface #51,  1           // InterfaceMethod javax/security/sasl/SaslServer.dispose:()V
      28: aload_0
      29: getfield      #7                  // Field in:Ljava/io/InputStream;
      32: invokevirtual #52                 // Method java/io/InputStream.close:()V
      35: return

  private int networkByteOrderToInt(byte[], int, int);
    Code:
       0: iload_3
       1: iconst_4
       2: if_icmple     15
       5: new           #53                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #54                 // String Cannot handle more than 4 bytes
      11: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iconst_0
      16: istore        4
      18: iconst_0
      19: istore        5
      21: iload         5
      23: iload_3
      24: if_icmpge     55
      27: iload         4
      29: bipush        8
      31: ishl
      32: istore        4
      34: iload         4
      36: aload_1
      37: iload_2
      38: iload         5
      40: iadd
      41: baload
      42: sipush        255
      45: iand
      46: ior
      47: istore        4
      49: iinc          5, 1
      52: goto          21
      55: iload         4
      57: ireturn

  static {};
    Code:
       0: new           #56                 // class com/sun/jmx/remote/opt/util/ClassLogger
       3: dup
       4: ldc           #57                 // String javax.management.remote.misc
       6: ldc           #58                 // String SASLInputStream
       8: invokespecial #59                 // Method com/sun/jmx/remote/opt/util/ClassLogger."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      11: putstatic     #31                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      14: return
}
