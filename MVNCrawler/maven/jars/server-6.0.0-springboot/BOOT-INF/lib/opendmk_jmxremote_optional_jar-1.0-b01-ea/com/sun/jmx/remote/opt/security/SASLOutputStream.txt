Compiled from "SASLOutputStream.java"
public class com.sun.jmx.remote.opt.security.SASLOutputStream extends java.io.OutputStream {
  private int rawSendSize;

  private byte[] lenBuf;

  private java.io.OutputStream out;

  private javax.security.sasl.SaslClient sc;

  private javax.security.sasl.SaslServer ss;

  private static final com.sun.jmx.remote.opt.util.ClassLogger logger;

  public com.sun.jmx.remote.opt.security.SASLOutputStream(javax.security.sasl.SaslClient, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 65536
       7: putfield      #3                  // Field rawSendSize:I
      10: aload_0
      11: iconst_4
      12: newarray       byte
      14: putfield      #4                  // Field lenBuf:[B
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field out:Ljava/io/OutputStream;
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field sc:Ljavax/security/sasl/SaslClient;
      27: aload_0
      28: aconst_null
      29: putfield      #7                  // Field ss:Ljavax/security/sasl/SaslServer;
      32: aload_1
      33: ldc           #8                  // String javax.security.sasl.rawsendsize
      35: invokeinterface #9,  2            // InterfaceMethod javax/security/sasl/SaslClient.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      40: checkcast     #10                 // class java/lang/String
      43: astore_3
      44: aload_3
      45: ifnull        88
      48: aload_0
      49: aload_3
      50: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: putfield      #3                  // Field rawSendSize:I
      56: goto          88
      59: astore        4
      61: new           #13                 // class java/io/IOException
      64: dup
      65: new           #14                 // class java/lang/StringBuffer
      68: dup
      69: invokespecial #15                 // Method java/lang/StringBuffer."<init>":()V
      72: ldc           #16                 // String javax.security.sasl.rawsendsize property must be numeric string:
      74: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      77: aload_3
      78: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      81: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      84: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: return
    Exception table:
       from    to  target type
          48    56    59   Class java/lang/NumberFormatException

  public com.sun.jmx.remote.opt.security.SASLOutputStream(javax.security.sasl.SaslServer, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 65536
       7: putfield      #3                  // Field rawSendSize:I
      10: aload_0
      11: iconst_4
      12: newarray       byte
      14: putfield      #4                  // Field lenBuf:[B
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field out:Ljava/io/OutputStream;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field ss:Ljavax/security/sasl/SaslServer;
      27: aload_0
      28: aconst_null
      29: putfield      #6                  // Field sc:Ljavax/security/sasl/SaslClient;
      32: aload_1
      33: ldc           #8                  // String javax.security.sasl.rawsendsize
      35: invokeinterface #20,  2           // InterfaceMethod javax/security/sasl/SaslServer.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      40: checkcast     #10                 // class java/lang/String
      43: astore_3
      44: aload_3
      45: ifnull        88
      48: aload_0
      49: aload_3
      50: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: putfield      #3                  // Field rawSendSize:I
      56: goto          88
      59: astore        4
      61: new           #13                 // class java/io/IOException
      64: dup
      65: new           #14                 // class java/lang/StringBuffer
      68: dup
      69: invokespecial #15                 // Method java/lang/StringBuffer."<init>":()V
      72: ldc           #16                 // String javax.security.sasl.rawsendsize property must be numeric string:
      74: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      77: aload_3
      78: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      81: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      84: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: return
    Exception table:
       from    to  target type
          48    56    59   Class java/lang/NumberFormatException

  public void write(int) throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: aload_0
      10: aload_2
      11: iconst_0
      12: iconst_1
      13: invokevirtual #21                 // Method write:([BII)V
      16: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #22                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
       3: invokevirtual #23                 // Method com/sun/jmx/remote/opt/util/ClassLogger.traceOn:()Z
       6: ifeq          36
       9: getstatic     #22                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      12: ldc           #24                 // String write
      14: new           #14                 // class java/lang/StringBuffer
      17: dup
      18: invokespecial #15                 // Method java/lang/StringBuffer."<init>":()V
      21: ldc           #25                 // String Total size:
      23: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: iload_3
      27: invokevirtual #26                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      30: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: invokevirtual #27                 // Method com/sun/jmx/remote/opt/util/ClassLogger.trace:(Ljava/lang/String;Ljava/lang/String;)V
      36: iconst_0
      37: istore        7
      39: iload         7
      41: iload_3
      42: if_icmpge     204
      45: iload_3
      46: iload         7
      48: isub
      49: aload_0
      50: getfield      #3                  // Field rawSendSize:I
      53: if_icmpge     63
      56: iload_3
      57: iload         7
      59: isub
      60: goto          67
      63: aload_0
      64: getfield      #3                  // Field rawSendSize:I
      67: istore        4
      69: aload_0
      70: getfield      #6                  // Field sc:Ljavax/security/sasl/SaslClient;
      73: ifnull        97
      76: aload_0
      77: getfield      #6                  // Field sc:Ljavax/security/sasl/SaslClient;
      80: aload_1
      81: iload_2
      82: iload         7
      84: iadd
      85: iload         4
      87: invokeinterface #28,  4           // InterfaceMethod javax/security/sasl/SaslClient.wrap:([BII)[B
      92: astore        5
      94: goto          115
      97: aload_0
      98: getfield      #7                  // Field ss:Ljavax/security/sasl/SaslServer;
     101: aload_1
     102: iload_2
     103: iload         7
     105: iadd
     106: iload         4
     108: invokeinterface #29,  4           // InterfaceMethod javax/security/sasl/SaslServer.wrap:([BII)[B
     113: astore        5
     115: aload_0
     116: aload         5
     118: arraylength
     119: aload_0
     120: getfield      #4                  // Field lenBuf:[B
     123: iconst_0
     124: iconst_4
     125: invokespecial #30                 // Method intToNetworkByteOrder:(I[BII)V
     128: getstatic     #22                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
     131: invokevirtual #23                 // Method com/sun/jmx/remote/opt/util/ClassLogger.traceOn:()Z
     134: ifeq          166
     137: getstatic     #22                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
     140: ldc           #24                 // String write
     142: new           #14                 // class java/lang/StringBuffer
     145: dup
     146: invokespecial #15                 // Method java/lang/StringBuffer."<init>":()V
     149: ldc           #31                 // String sending size:
     151: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     154: aload         5
     156: arraylength
     157: invokevirtual #26                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     160: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     163: invokevirtual #27                 // Method com/sun/jmx/remote/opt/util/ClassLogger.trace:(Ljava/lang/String;Ljava/lang/String;)V
     166: aload_0
     167: getfield      #5                  // Field out:Ljava/io/OutputStream;
     170: aload_0
     171: getfield      #4                  // Field lenBuf:[B
     174: iconst_0
     175: iconst_4
     176: invokevirtual #32                 // Method java/io/OutputStream.write:([BII)V
     179: aload_0
     180: getfield      #5                  // Field out:Ljava/io/OutputStream;
     183: aload         5
     185: iconst_0
     186: aload         5
     188: arraylength
     189: invokevirtual #32                 // Method java/io/OutputStream.write:([BII)V
     192: iload         7
     194: aload_0
     195: getfield      #3                  // Field rawSendSize:I
     198: iadd
     199: istore        7
     201: goto          39
     204: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field sc:Ljavax/security/sasl/SaslClient;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field sc:Ljavax/security/sasl/SaslClient;
      11: invokeinterface #33,  1           // InterfaceMethod javax/security/sasl/SaslClient.dispose:()V
      16: goto          28
      19: aload_0
      20: getfield      #7                  // Field ss:Ljavax/security/sasl/SaslServer;
      23: invokeinterface #34,  1           // InterfaceMethod javax/security/sasl/SaslServer.dispose:()V
      28: aload_0
      29: getfield      #5                  // Field out:Ljava/io/OutputStream;
      32: invokevirtual #35                 // Method java/io/OutputStream.close:()V
      35: return

  private void intToNetworkByteOrder(int, byte[], int, int);
    Code:
       0: iload         4
       2: iconst_4
       3: if_icmple     16
       6: new           #36                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #37                 // String Cannot handle more than 4 bytes
      12: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iload         4
      18: iconst_1
      19: isub
      20: istore        5
      22: iload         5
      24: iflt          50
      27: aload_2
      28: iload_3
      29: iload         5
      31: iadd
      32: iload_1
      33: sipush        255
      36: iand
      37: i2b
      38: bastore
      39: iload_1
      40: bipush        8
      42: iushr
      43: istore_1
      44: iinc          5, -1
      47: goto          22
      50: return

  static {};
    Code:
       0: new           #39                 // class com/sun/jmx/remote/opt/util/ClassLogger
       3: dup
       4: ldc           #40                 // String javax.management.remote.misc
       6: ldc           #41                 // String SASLOutputStream
       8: invokespecial #42                 // Method com/sun/jmx/remote/opt/util/ClassLogger."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      11: putstatic     #22                 // Field logger:Lcom/sun/jmx/remote/opt/util/ClassLogger;
      14: return
}
