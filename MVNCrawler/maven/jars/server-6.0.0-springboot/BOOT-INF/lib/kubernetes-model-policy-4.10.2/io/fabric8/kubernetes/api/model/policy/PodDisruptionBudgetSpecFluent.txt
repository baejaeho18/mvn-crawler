Compiled from "PodDisruptionBudgetSpecFluent.java"
public interface io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent<A extends io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.kubernetes.api.model.IntOrString getMaxUnavailable();

  public abstract io.fabric8.kubernetes.api.model.IntOrString buildMaxUnavailable();

  public abstract A withMaxUnavailable(io.fabric8.kubernetes.api.model.IntOrString);

  public abstract java.lang.Boolean hasMaxUnavailable();

  public abstract A withNewMaxUnavailable(java.lang.String);

  public abstract A withNewMaxUnavailable(java.lang.Integer);

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MaxUnavailableNested<A> withNewMaxUnavailable();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MaxUnavailableNested<A> withNewMaxUnavailableLike(io.fabric8.kubernetes.api.model.IntOrString);

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MaxUnavailableNested<A> editMaxUnavailable();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MaxUnavailableNested<A> editOrNewMaxUnavailable();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MaxUnavailableNested<A> editOrNewMaxUnavailableLike(io.fabric8.kubernetes.api.model.IntOrString);

  public abstract io.fabric8.kubernetes.api.model.IntOrString getMinAvailable();

  public abstract io.fabric8.kubernetes.api.model.IntOrString buildMinAvailable();

  public abstract A withMinAvailable(io.fabric8.kubernetes.api.model.IntOrString);

  public abstract java.lang.Boolean hasMinAvailable();

  public abstract A withNewMinAvailable(java.lang.String);

  public abstract A withNewMinAvailable(java.lang.Integer);

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MinAvailableNested<A> withNewMinAvailable();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MinAvailableNested<A> withNewMinAvailableLike(io.fabric8.kubernetes.api.model.IntOrString);

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MinAvailableNested<A> editMinAvailable();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MinAvailableNested<A> editOrNewMinAvailable();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$MinAvailableNested<A> editOrNewMinAvailableLike(io.fabric8.kubernetes.api.model.IntOrString);

  public abstract io.fabric8.kubernetes.api.model.LabelSelector getSelector();

  public abstract io.fabric8.kubernetes.api.model.LabelSelector buildSelector();

  public abstract A withSelector(io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract java.lang.Boolean hasSelector();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$SelectorNested<A> withNewSelector();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$SelectorNested<A> withNewSelectorLike(io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$SelectorNested<A> editSelector();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$SelectorNested<A> editOrNewSelector();

  public abstract io.fabric8.kubernetes.api.model.policy.PodDisruptionBudgetSpecFluent$SelectorNested<A> editOrNewSelectorLike(io.fabric8.kubernetes.api.model.LabelSelector);
}
