Compiled from "ExpressionBuilder.java"
class com.sun.el.lang.ExpressionBuilder$SoftConcurrentHashMap extends java.util.concurrent.ConcurrentHashMap<java.lang.String, com.sun.el.parser.Node> {
  private static final int CACHE_INIT_SIZE;

  private java.util.concurrent.ConcurrentHashMap<java.lang.String, com.sun.el.lang.ExpressionBuilder$NodeSoftReference> map;

  private java.lang.ref.ReferenceQueue<com.sun.el.parser.Node> refQ;

  private com.sun.el.lang.ExpressionBuilder$SoftConcurrentHashMap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: sipush        256
      12: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      15: putfield      #6                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      18: aload_0
      19: new           #7                  // class java/lang/ref/ReferenceQueue
      22: dup
      23: invokespecial #8                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      26: putfield      #9                  // Field refQ:Ljava/lang/ref/ReferenceQueue;
      29: return

  private void cleanup();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #9                  // Field refQ:Ljava/lang/ref/ReferenceQueue;
       6: invokevirtual #10                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       9: checkcast     #11                 // class com/sun/el/lang/ExpressionBuilder$NodeSoftReference
      12: dup
      13: astore_1
      14: ifnull        32
      17: aload_0
      18: getfield      #6                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      21: aload_1
      22: getfield      #12                 // Field com/sun/el/lang/ExpressionBuilder$NodeSoftReference.key:Ljava/lang/String;
      25: invokevirtual #13                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: goto          2
      32: return

  public com.sun.el.parser.Node put(java.lang.String, com.sun.el.parser.Node);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method cleanup:()V
       4: aload_0
       5: getfield      #6                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: new           #11                 // class com/sun/el/lang/ExpressionBuilder$NodeSoftReference
      12: dup
      13: aload_1
      14: aload_2
      15: aload_0
      16: getfield      #9                  // Field refQ:Ljava/lang/ref/ReferenceQueue;
      19: invokespecial #15                 // Method com/sun/el/lang/ExpressionBuilder$NodeSoftReference."<init>":(Ljava/lang/String;Lcom/sun/el/parser/Node;Ljava/lang/ref/ReferenceQueue;)V
      22: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #11                 // class com/sun/el/lang/ExpressionBuilder$NodeSoftReference
      28: astore_3
      29: aload_3
      30: ifnonnull     37
      33: aconst_null
      34: goto          44
      37: aload_3
      38: invokevirtual #17                 // Method com/sun/el/lang/ExpressionBuilder$NodeSoftReference.get:()Ljava/lang/Object;
      41: checkcast     #18                 // class com/sun/el/parser/Node
      44: areturn

  public com.sun.el.parser.Node putIfAbsent(java.lang.String, com.sun.el.parser.Node);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method cleanup:()V
       4: aload_0
       5: getfield      #6                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: new           #11                 // class com/sun/el/lang/ExpressionBuilder$NodeSoftReference
      12: dup
      13: aload_1
      14: aload_2
      15: aload_0
      16: getfield      #9                  // Field refQ:Ljava/lang/ref/ReferenceQueue;
      19: invokespecial #15                 // Method com/sun/el/lang/ExpressionBuilder$NodeSoftReference."<init>":(Ljava/lang/String;Lcom/sun/el/parser/Node;Ljava/lang/ref/ReferenceQueue;)V
      22: invokevirtual #19                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #11                 // class com/sun/el/lang/ExpressionBuilder$NodeSoftReference
      28: astore_3
      29: aload_3
      30: ifnonnull     37
      33: aconst_null
      34: goto          44
      37: aload_3
      38: invokevirtual #17                 // Method com/sun/el/lang/ExpressionBuilder$NodeSoftReference.get:()Ljava/lang/Object;
      41: checkcast     #18                 // class com/sun/el/parser/Node
      44: areturn

  public com.sun.el.parser.Node get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method cleanup:()V
       4: aload_0
       5: getfield      #6                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #20                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #11                 // class com/sun/el/lang/ExpressionBuilder$NodeSoftReference
      15: astore_2
      16: aload_2
      17: ifnonnull     22
      20: aconst_null
      21: areturn
      22: aload_2
      23: invokevirtual #17                 // Method com/sun/el/lang/ExpressionBuilder$NodeSoftReference.get:()Ljava/lang/Object;
      26: ifnonnull     40
      29: aload_0
      30: getfield      #6                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      33: aload_1
      34: invokevirtual #13                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aconst_null
      39: areturn
      40: aload_2
      41: invokevirtual #17                 // Method com/sun/el/lang/ExpressionBuilder$NodeSoftReference.get:()Ljava/lang/Object;
      44: checkcast     #18                 // class com/sun/el/parser/Node
      47: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class java/lang/String
       5: aload_2
       6: checkcast     #18                 // class com/sun/el/parser/Node
       9: invokevirtual #22                 // Method putIfAbsent:(Ljava/lang/String;Lcom/sun/el/parser/Node;)Lcom/sun/el/parser/Node;
      12: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class java/lang/String
       5: aload_2
       6: checkcast     #18                 // class com/sun/el/parser/Node
       9: invokevirtual #23                 // Method put:(Ljava/lang/String;Lcom/sun/el/parser/Node;)Lcom/sun/el/parser/Node;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method get:(Ljava/lang/Object;)Lcom/sun/el/parser/Node;
       5: areturn

  com.sun.el.lang.ExpressionBuilder$SoftConcurrentHashMap(com.sun.el.lang.ExpressionBuilder$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
