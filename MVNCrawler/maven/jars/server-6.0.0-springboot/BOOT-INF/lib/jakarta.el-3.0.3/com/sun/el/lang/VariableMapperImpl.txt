Compiled from "VariableMapperImpl.java"
public class com.sun.el.lang.VariableMapperImpl extends javax.el.VariableMapper implements java.io.Externalizable {
  private static final long serialVersionUID;

  private java.util.Map<java.lang.String, javax.el.ValueExpression> vars;

  public com.sun.el.lang.VariableMapperImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/el/VariableMapper."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field vars:Ljava/util/Map;
      15: return

  public javax.el.ValueExpression resolveVariable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field vars:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class javax/el/ValueExpression
      13: areturn

  public javax.el.ValueExpression setVariable(java.lang.String, javax.el.ValueExpression);
    Code:
       0: aload_0
       1: getfield      #4                  // Field vars:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #6                  // class javax/el/ValueExpression
      14: areturn

  public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  1            // InterfaceMethod java/io/ObjectInput.readObject:()Ljava/lang/Object;
       7: checkcast     #9                  // class java/util/Map
      10: putfield      #4                  // Field vars:Ljava/util/Map;
      13: return

  public void writeExternal(java.io.ObjectOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field vars:Ljava/util/Map;
       5: invokeinterface #10,  2           // InterfaceMethod java/io/ObjectOutput.writeObject:(Ljava/lang/Object;)V
      10: return
}
