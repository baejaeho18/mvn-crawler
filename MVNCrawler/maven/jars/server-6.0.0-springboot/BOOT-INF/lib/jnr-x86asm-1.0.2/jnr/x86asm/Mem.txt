Compiled from "Mem.java"
public final class jnr.x86asm.Mem extends jnr.x86asm.Operand {
  private final int base;

  private final int index;

  private final int shift;

  private final jnr.x86asm.SEGMENT segmentPrefix;

  private final jnr.x86asm.Label label;

  private final long target;

  private final long displacement;

  static final boolean $assertionsDisabled;

  jnr.x86asm.Mem(jnr.x86asm.Label, long, int);
    Code:
       0: aload_0
       1: sipush        255
       4: sipush        255
       7: iconst_0
       8: getstatic     #1                  // Field jnr/x86asm/SEGMENT.SEGMENT_NONE:Ljnr/x86asm/SEGMENT;
      11: aload_1
      12: lconst_0
      13: lload_2
      14: iload         4
      16: invokespecial #2                  // Method "<init>":(IIILjnr/x86asm/SEGMENT;Ljnr/x86asm/Label;JJI)V
      19: return

  jnr.x86asm.Mem(jnr.x86asm.Register, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method jnr/x86asm/Register.index:()I
       5: sipush        255
       8: iconst_0
       9: getstatic     #1                  // Field jnr/x86asm/SEGMENT.SEGMENT_NONE:Ljnr/x86asm/SEGMENT;
      12: aconst_null
      13: lconst_0
      14: lload_2
      15: iload         4
      17: invokespecial #2                  // Method "<init>":(IIILjnr/x86asm/SEGMENT;Ljnr/x86asm/Label;JJI)V
      20: return

  jnr.x86asm.Mem(jnr.x86asm.Register, jnr.x86asm.Register, int, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method jnr/x86asm/Register.index:()I
       5: aload_2
       6: invokevirtual #3                  // Method jnr/x86asm/Register.index:()I
       9: iload_3
      10: getstatic     #1                  // Field jnr/x86asm/SEGMENT.SEGMENT_NONE:Ljnr/x86asm/SEGMENT;
      13: aconst_null
      14: lconst_0
      15: lload         4
      17: iload         6
      19: invokespecial #2                  // Method "<init>":(IIILjnr/x86asm/SEGMENT;Ljnr/x86asm/Label;JJI)V
      22: return

  jnr.x86asm.Mem(jnr.x86asm.Label, jnr.x86asm.Register, int, long, int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_2
       3: invokevirtual #3                  // Method jnr/x86asm/Register.index:()I
       6: iload_3
       7: getstatic     #1                  // Field jnr/x86asm/SEGMENT.SEGMENT_NONE:Ljnr/x86asm/SEGMENT;
      10: aload_1
      11: lconst_0
      12: lload         4
      14: iload         6
      16: invokespecial #2                  // Method "<init>":(IIILjnr/x86asm/SEGMENT;Ljnr/x86asm/Label;JJI)V
      19: return

  jnr.x86asm.Mem(long, long, jnr.x86asm.SEGMENT, int);
    Code:
       0: aload_0
       1: sipush        255
       4: sipush        255
       7: iconst_0
       8: aload         5
      10: aconst_null
      11: lload_1
      12: lload_3
      13: iload         6
      15: invokespecial #2                  // Method "<init>":(IIILjnr/x86asm/SEGMENT;Ljnr/x86asm/Label;JJI)V
      18: return

  jnr.x86asm.Mem(long, jnr.x86asm.Register, int, jnr.x86asm.SEGMENT, long, int);
    Code:
       0: aload_0
       1: sipush        255
       4: aload_3
       5: invokevirtual #3                  // Method jnr/x86asm/Register.index:()I
       8: iload         4
      10: aload         5
      12: aconst_null
      13: lload_1
      14: lload         6
      16: iload         8
      18: invokespecial #2                  // Method "<init>":(IIILjnr/x86asm/SEGMENT;Ljnr/x86asm/Label;JJI)V
      21: return

  private jnr.x86asm.Mem(int, int, int, jnr.x86asm.SEGMENT, jnr.x86asm.Label, long, long, int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload         10
       4: invokespecial #4                  // Method jnr/x86asm/Operand."<init>":(II)V
       7: getstatic     #5                  // Field $assertionsDisabled:Z
      10: ifne          26
      13: iload_3
      14: iconst_3
      15: if_icmple     26
      18: new           #6                  // class java/lang/AssertionError
      21: dup
      22: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: iload_1
      28: putfield      #8                  // Field base:I
      31: aload_0
      32: iload_2
      33: putfield      #9                  // Field index:I
      36: aload_0
      37: iload_3
      38: putfield      #10                 // Field shift:I
      41: aload_0
      42: aload         4
      44: putfield      #11                 // Field segmentPrefix:Ljnr/x86asm/SEGMENT;
      47: aload_0
      48: aload         5
      50: putfield      #12                 // Field label:Ljnr/x86asm/Label;
      53: aload_0
      54: lload         6
      56: putfield      #13                 // Field target:J
      59: aload_0
      60: lload         8
      62: putfield      #14                 // Field displacement:J
      65: return

  public final boolean hasLabel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field label:Ljnr/x86asm/Label;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final boolean hasBase();
    Code:
       0: aload_0
       1: getfield      #8                  // Field base:I
       4: sipush        255
       7: if_icmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  boolean hasIndex();
    Code:
       0: aload_0
       1: getfield      #9                  // Field index:I
       4: sipush        255
       7: if_icmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final jnr.x86asm.SEGMENT segmentPrefix();
    Code:
       0: aload_0
       1: getfield      #11                 // Field segmentPrefix:Ljnr/x86asm/SEGMENT;
       4: areturn

  public final int base();
    Code:
       0: aload_0
       1: getfield      #8                  // Field base:I
       4: ireturn

  public final long displacement();
    Code:
       0: aload_0
       1: getfield      #14                 // Field displacement:J
       4: lreturn

  public final int index();
    Code:
       0: aload_0
       1: getfield      #9                  // Field index:I
       4: ireturn

  public final jnr.x86asm.Label label();
    Code:
       0: aload_0
       1: getfield      #12                 // Field label:Ljnr/x86asm/Label;
       4: areturn

  public final int shift();
    Code:
       0: aload_0
       1: getfield      #10                 // Field shift:I
       4: ireturn

  public final long target();
    Code:
       0: aload_0
       1: getfield      #13                 // Field target:J
       4: lreturn

  static {};
    Code:
       0: ldc_w         #15                 // class jnr/x86asm/Mem
       3: invokevirtual #16                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #5                  // Field $assertionsDisabled:Z
      17: return
}
