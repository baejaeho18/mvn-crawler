Compiled from "Assembler.java"
public final class jnr.x86asm.Assembler extends jnr.x86asm.Serializer {
  private final jnr.x86asm.CodeBuffer _buffer;

  private final java.util.List<jnr.x86asm.RelocData> _relocData;

  private final jnr.x86asm.CpuInfo cpuInfo;

  private int _properties;

  int _trampolineSize;

  private final jnr.x86asm.Logger _logger;

  private final jnr.x86asm.CPU cpu;

  public static final jnr.x86asm.CPU I386;

  public static final jnr.x86asm.CPU X86_64;

  private static final int[] nop1;

  private static final int[] nop2;

  private static final int[] nop3;

  private static final int[] nop4;

  private static final int[] nop5;

  private static final int[] nop6;

  private static final int[] nop7;

  private static final int[] nop8;

  private static final int[] nop9;

  private static final int[] nop10;

  private static final int[] nop11;

  static final boolean $assertionsDisabled;

  boolean is64();
    Code:
       0: aload_0
       1: getfield      #1                  // Field cpu:Ljnr/x86asm/CPU;
       4: getstatic     #2                  // Field jnr/x86asm/CPU.X86_64:Ljnr/x86asm/CPU;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static final int intValue(boolean);
    Code:
       0: iload_0
       1: ifeq          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  public jnr.x86asm.Assembler(jnr.x86asm.CPU);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method jnr/x86asm/Serializer."<init>":()V
       4: aload_0
       5: new           #4                  // class jnr/x86asm/CodeBuffer
       8: dup
       9: invokespecial #5                  // Method jnr/x86asm/CodeBuffer."<init>":()V
      12: putfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
      15: aload_0
      16: new           #7                  // class java/util/LinkedList
      19: dup
      20: invokespecial #8                  // Method java/util/LinkedList."<init>":()V
      23: putfield      #9                  // Field _relocData:Ljava/util/List;
      26: aload_0
      27: getstatic     #10                 // Field jnr/x86asm/CpuInfo.GENERIC:Ljnr/x86asm/CpuInfo;
      30: putfield      #11                 // Field cpuInfo:Ljnr/x86asm/CpuInfo;
      33: aload_0
      34: iconst_0
      35: putfield      #12                 // Field _properties:I
      38: aload_0
      39: aconst_null
      40: putfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
      43: aload_0
      44: aload_1
      45: putfield      #1                  // Field cpu:Ljnr/x86asm/CPU;
      48: return

  public final int offset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: invokevirtual #14                 // Method jnr/x86asm/CodeBuffer.offset:()I
       7: ireturn

  public final int codeSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: invokevirtual #14                 // Method jnr/x86asm/CodeBuffer.offset:()I
       7: aload_0
       8: invokevirtual #15                 // Method trampolineSize:()I
      11: iadd
      12: ireturn

  int trampolineSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _trampolineSize:I
       4: ireturn

  public final byte getByteAt(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #17                 // Method jnr/x86asm/CodeBuffer.getByteAt:(I)B
       8: ireturn

  public final short getWordAt(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #18                 // Method jnr/x86asm/CodeBuffer.getWordAt:(I)S
       8: ireturn

  public final int getDWordAt(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #19                 // Method jnr/x86asm/CodeBuffer.getDWordAt:(I)I
       8: ireturn

  public final long getQWordAt(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #20                 // Method jnr/x86asm/CodeBuffer.getQWordAt:(I)J
       8: lreturn

  public final void setByteAt(int, byte);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #21                 // Method jnr/x86asm/CodeBuffer.setByteAt:(IB)V
       9: return

  public final void setWordAt(int, short);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #22                 // Method jnr/x86asm/CodeBuffer.setWordAt:(IS)V
       9: return

  public final void setDWordAt(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #23                 // Method jnr/x86asm/CodeBuffer.setDWordAt:(II)V
       9: return

  public final void setQWordAt(int, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: lload_2
       6: invokevirtual #24                 // Method jnr/x86asm/CodeBuffer.setQWordAt:(IJ)V
       9: return

  public final int getInt32At(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #19                 // Method jnr/x86asm/CodeBuffer.getDWordAt:(I)I
       8: ireturn

  public final void setInt32At(int, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: lload_2
       6: l2i
       7: invokevirtual #23                 // Method jnr/x86asm/CodeBuffer.setDWordAt:(II)V
      10: return

  public final void setVarAt(int, long, boolean, int);
    Code:
       0: iload         5
       2: tableswitch   { // 1 to 8
                     1: 48
                     2: 59
                     3: 86
                     4: 70
                     5: 86
                     6: 86
                     7: 86
                     8: 80
               default: 86
          }
      48: aload_0
      49: iload_1
      50: lload_2
      51: l2i
      52: i2b
      53: invokevirtual #25                 // Method setByteAt:(IB)V
      56: goto          96
      59: aload_0
      60: iload_1
      61: lload_2
      62: l2i
      63: i2s
      64: invokevirtual #26                 // Method setWordAt:(IS)V
      67: goto          96
      70: aload_0
      71: iload_1
      72: lload_2
      73: l2i
      74: invokevirtual #27                 // Method setDWordAt:(II)V
      77: goto          96
      80: aload_0
      81: iload_1
      82: lload_2
      83: invokevirtual #28                 // Method setQWordAt:(IJ)V
      86: new           #29                 // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #30                 // String invalid size
      92: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: return

  final void _emitByte(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: i2b
       6: invokevirtual #32                 // Method jnr/x86asm/CodeBuffer.emitByte:(B)V
       9: return

  final void _emitWord(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: i2s
       6: invokevirtual #33                 // Method jnr/x86asm/CodeBuffer.emitWord:(S)V
       9: return

  final void _emitDWord(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #34                 // Method jnr/x86asm/CodeBuffer.emitDWord:(I)V
       8: return

  final void _emitQWord(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: lload_1
       5: invokevirtual #35                 // Method jnr/x86asm/CodeBuffer.emitQWord:(J)V
       8: return

  final void _emitInt32(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
       4: iload_1
       5: invokevirtual #34                 // Method jnr/x86asm/CodeBuffer.emitDWord:(I)V
       8: return

  final void _emitSysInt(long);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method is64:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
      11: lload_1
      12: invokevirtual #35                 // Method jnr/x86asm/CodeBuffer.emitQWord:(J)V
      15: goto          27
      18: aload_0
      19: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
      22: lload_1
      23: l2i
      24: invokevirtual #34                 // Method jnr/x86asm/CodeBuffer.emitDWord:(I)V
      27: return

  final void _emitOpCode(int);
    Code:
       0: iload_1
       1: ldc           #37                 // int -16777216
       3: iand
       4: ifeq          19
       7: aload_0
       8: iload_1
       9: ldc           #37                 // int -16777216
      11: iand
      12: bipush        24
      14: ishr
      15: i2b
      16: invokevirtual #38                 // Method _emitByte:(I)V
      19: iload_1
      20: ldc           #39                 // int 16711680
      22: iand
      23: ifeq          38
      26: aload_0
      27: iload_1
      28: ldc           #39                 // int 16711680
      30: iand
      31: bipush        16
      33: ishr
      34: i2b
      35: invokevirtual #38                 // Method _emitByte:(I)V
      38: iload_1
      39: ldc           #40                 // int 65280
      41: iand
      42: ifeq          57
      45: aload_0
      46: iload_1
      47: ldc           #40                 // int 65280
      49: iand
      50: bipush        8
      52: ishr
      53: i2b
      54: invokevirtual #38                 // Method _emitByte:(I)V
      57: aload_0
      58: iload_1
      59: sipush        255
      62: iand
      63: i2b
      64: invokevirtual #38                 // Method _emitByte:(I)V
      67: return

  void _emitSegmentPrefix(jnr.x86asm.Operand);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
       4: ifeq          30
       7: aload_1
       8: checkcast     #42                 // class jnr/x86asm/Mem
      11: invokevirtual #43                 // Method jnr/x86asm/Mem.segmentPrefix:()Ljnr/x86asm/SEGMENT;
      14: astore_2
      15: aload_2
      16: getstatic     #44                 // Field jnr/x86asm/SEGMENT.SEGMENT_NONE:Ljnr/x86asm/SEGMENT;
      19: if_acmpeq     30
      22: aload_0
      23: aload_2
      24: invokevirtual #45                 // Method jnr/x86asm/SEGMENT.prefix:()I
      27: invokevirtual #38                 // Method _emitByte:(I)V
      30: return

  void _emitImmediate(jnr.x86asm.Immediate, int);
    Code:
       0: iload_2
       1: tableswitch   { // 1 to 8
                     1: 48
                     2: 59
                     3: 109
                     4: 70
                     5: 109
                     6: 109
                     7: 109
                     8: 81
               default: 109
          }
      48: aload_0
      49: aload_1
      50: invokevirtual #46                 // Method jnr/x86asm/Immediate.byteValue:()B
      53: invokevirtual #38                 // Method _emitByte:(I)V
      56: goto          119
      59: aload_0
      60: aload_1
      61: invokevirtual #47                 // Method jnr/x86asm/Immediate.shortValue:()S
      64: invokevirtual #48                 // Method _emitWord:(I)V
      67: goto          119
      70: aload_0
      71: aload_1
      72: invokevirtual #49                 // Method jnr/x86asm/Immediate.intValue:()I
      75: invokevirtual #50                 // Method _emitDWord:(I)V
      78: goto          119
      81: aload_0
      82: invokevirtual #36                 // Method is64:()Z
      85: ifne          98
      88: new           #29                 // class java/lang/IllegalArgumentException
      91: dup
      92: ldc           #51                 // String 64 bit immediate values not supported for 32bit
      94: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: aload_1
     100: invokevirtual #52                 // Method jnr/x86asm/Immediate.longValue:()J
     103: invokevirtual #53                 // Method _emitQWord:(J)V
     106: goto          119
     109: new           #29                 // class java/lang/IllegalArgumentException
     112: dup
     113: ldc           #54                 // String invalid immediate operand size
     115: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: return

  void _emitRexR(int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method is64:()Z
       4: ifeq          82
       7: iload_2
       8: bipush        8
      10: iand
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore        4
      21: iload_3
      22: bipush        8
      24: iand
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore        5
      35: iload_1
      36: ifne          58
      39: iload         4
      41: ifne          58
      44: iload         5
      46: ifne          58
      49: aload_0
      50: getfield      #12                 // Field _properties:I
      53: iconst_2
      54: iand
      55: ifeq          82
      58: aload_0
      59: bipush        64
      61: iload_1
      62: iconst_3
      63: ishl
      64: ior
      65: iload         4
      67: invokestatic  #55                 // Method intValue:(Z)I
      70: iconst_2
      71: ishl
      72: ior
      73: iload         5
      75: invokestatic  #55                 // Method intValue:(Z)I
      78: ior
      79: invokevirtual #38                 // Method _emitByte:(I)V
      82: return

  void _emitRexR(boolean, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #55                 // Method intValue:(Z)I
       5: iload_2
       6: iload_3
       7: invokevirtual #56                 // Method _emitRexR:(III)V
      10: return

  void _emitRexRM(int, int, jnr.x86asm.Operand);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method is64:()Z
       4: ifeq          190
       7: iload_2
       8: bipush        8
      10: iand
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iconst_0
      25: istore        6
      27: aload_3
      28: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
      31: ifeq          57
      34: aload_3
      35: checkcast     #58                 // class jnr/x86asm/BaseReg
      38: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
      41: bipush        8
      43: iand
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        6
      54: goto          130
      57: aload_3
      58: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
      61: ifeq          130
      64: aload_3
      65: checkcast     #42                 // class jnr/x86asm/Mem
      68: invokevirtual #60                 // Method jnr/x86asm/Mem.index:()I
      71: bipush        8
      73: iand
      74: ifeq          94
      77: aload_3
      78: checkcast     #42                 // class jnr/x86asm/Mem
      81: invokevirtual #60                 // Method jnr/x86asm/Mem.index:()I
      84: sipush        255
      87: if_icmpeq     94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore        5
      97: aload_3
      98: checkcast     #42                 // class jnr/x86asm/Mem
     101: invokevirtual #61                 // Method jnr/x86asm/Mem.base:()I
     104: bipush        8
     106: iand
     107: ifeq          127
     110: aload_3
     111: checkcast     #42                 // class jnr/x86asm/Mem
     114: invokevirtual #61                 // Method jnr/x86asm/Mem.base:()I
     117: sipush        255
     120: if_icmpeq     127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: istore        6
     130: iload_1
     131: ifne          158
     134: iload         4
     136: ifne          158
     139: iload         5
     141: ifne          158
     144: iload         6
     146: ifne          158
     149: aload_0
     150: getfield      #12                 // Field _properties:I
     153: iconst_2
     154: iand
     155: ifeq          190
     158: aload_0
     159: bipush        64
     161: iload_1
     162: iconst_3
     163: ishl
     164: ior
     165: iload         4
     167: invokestatic  #55                 // Method intValue:(Z)I
     170: iconst_2
     171: ishl
     172: ior
     173: iload         5
     175: invokestatic  #55                 // Method intValue:(Z)I
     178: iconst_1
     179: ishl
     180: ior
     181: iload         6
     183: invokestatic  #55                 // Method intValue:(Z)I
     186: ior
     187: invokevirtual #38                 // Method _emitByte:(I)V
     190: return

  void _emitRexRM(boolean, int, jnr.x86asm.Operand);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #55                 // Method intValue:(Z)I
       5: iload_2
       6: aload_3
       7: invokevirtual #62                 // Method _emitRexRM:(IILjnr/x86asm/Operand;)V
      10: return

  void _emitModM(int, jnr.x86asm.Mem, int);
    Code:
       0: getstatic     #63                 // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_2
       7: invokevirtual #64                 // Method jnr/x86asm/Mem.op:()I
      10: iconst_2
      11: if_icmpeq     22
      14: new           #65                 // class java/lang/AssertionError
      17: dup
      18: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: aload_2
      23: invokevirtual #61                 // Method jnr/x86asm/Mem.base:()I
      26: bipush        7
      28: iand
      29: istore        4
      31: aload_2
      32: invokevirtual #60                 // Method jnr/x86asm/Mem.index:()I
      35: bipush        7
      37: iand
      38: istore        5
      40: aload_2
      41: invokevirtual #67                 // Method jnr/x86asm/Mem.displacement:()J
      44: lstore        6
      46: aload_2
      47: invokevirtual #68                 // Method jnr/x86asm/Mem.shift:()I
      50: istore        8
      52: aload_2
      53: invokevirtual #69                 // Method jnr/x86asm/Mem.hasBase:()Z
      56: ifeq          217
      59: aload_2
      60: invokevirtual #70                 // Method jnr/x86asm/Mem.hasIndex:()Z
      63: ifne          217
      66: iload         4
      68: iconst_4
      69: if_icmpne     148
      72: iconst_0
      73: istore        9
      75: lload         6
      77: lconst_0
      78: lcmp
      79: ifeq          97
      82: lload         6
      84: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_2
      95: istore        9
      97: aload_0
      98: iload         9
     100: iload_1
     101: iconst_4
     102: invokevirtual #72                 // Method _emitMod:(III)V
     105: aload_0
     106: iconst_0
     107: iconst_4
     108: iconst_4
     109: invokevirtual #73                 // Method _emitSib:(III)V
     112: lload         6
     114: lconst_0
     115: lcmp
     116: ifeq          145
     119: lload         6
     121: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
     124: ifeq          138
     127: aload_0
     128: lload         6
     130: l2i
     131: i2b
     132: invokevirtual #38                 // Method _emitByte:(I)V
     135: goto          145
     138: aload_0
     139: lload         6
     141: l2i
     142: invokevirtual #74                 // Method _emitInt32:(I)V
     145: goto          648
     148: iload         4
     150: iconst_5
     151: if_icmpeq     172
     154: lload         6
     156: lconst_0
     157: lcmp
     158: ifne          172
     161: aload_0
     162: iconst_0
     163: iload_1
     164: iload         4
     166: invokevirtual #72                 // Method _emitMod:(III)V
     169: goto          648
     172: lload         6
     174: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
     177: ifeq          199
     180: aload_0
     181: iconst_1
     182: iload_1
     183: iload         4
     185: invokevirtual #72                 // Method _emitMod:(III)V
     188: aload_0
     189: lload         6
     191: l2i
     192: i2b
     193: invokevirtual #38                 // Method _emitByte:(I)V
     196: goto          648
     199: aload_0
     200: iconst_2
     201: iload_1
     202: iload         4
     204: invokevirtual #72                 // Method _emitMod:(III)V
     207: aload_0
     208: lload         6
     210: l2i
     211: invokevirtual #74                 // Method _emitInt32:(I)V
     214: goto          648
     217: aload_2
     218: invokevirtual #69                 // Method jnr/x86asm/Mem.hasBase:()Z
     221: ifeq          327
     224: aload_2
     225: invokevirtual #70                 // Method jnr/x86asm/Mem.hasIndex:()Z
     228: ifeq          327
     231: iload         4
     233: iconst_5
     234: if_icmpeq     264
     237: lload         6
     239: lconst_0
     240: lcmp
     241: ifne          264
     244: aload_0
     245: iconst_0
     246: iload_1
     247: iconst_4
     248: invokevirtual #72                 // Method _emitMod:(III)V
     251: aload_0
     252: iload         8
     254: iload         5
     256: iload         4
     258: invokevirtual #73                 // Method _emitSib:(III)V
     261: goto          648
     264: lload         6
     266: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
     269: ifeq          300
     272: aload_0
     273: iconst_1
     274: iload_1
     275: iconst_4
     276: invokevirtual #72                 // Method _emitMod:(III)V
     279: aload_0
     280: iload         8
     282: iload         5
     284: iload         4
     286: invokevirtual #73                 // Method _emitSib:(III)V
     289: aload_0
     290: lload         6
     292: l2i
     293: i2b
     294: invokevirtual #38                 // Method _emitByte:(I)V
     297: goto          648
     300: aload_0
     301: iconst_2
     302: iload_1
     303: iconst_4
     304: invokevirtual #72                 // Method _emitMod:(III)V
     307: aload_0
     308: iload         8
     310: iload         5
     312: iload         4
     314: invokevirtual #73                 // Method _emitSib:(III)V
     317: aload_0
     318: lload         6
     320: l2i
     321: invokevirtual #74                 // Method _emitInt32:(I)V
     324: goto          648
     327: aload_0
     328: invokevirtual #36                 // Method is64:()Z
     331: ifne          488
     334: aload_2
     335: invokevirtual #70                 // Method jnr/x86asm/Mem.hasIndex:()Z
     338: ifeq          360
     341: aload_0
     342: iconst_0
     343: iload_1
     344: iconst_4
     345: invokevirtual #72                 // Method _emitMod:(III)V
     348: aload_0
     349: iload         8
     351: iload         5
     353: iconst_5
     354: invokevirtual #73                 // Method _emitSib:(III)V
     357: goto          367
     360: aload_0
     361: iconst_0
     362: iload_1
     363: iconst_5
     364: invokevirtual #72                 // Method _emitMod:(III)V
     367: aload_2
     368: invokevirtual #75                 // Method jnr/x86asm/Mem.hasLabel:()Z
     371: ifeq          473
     374: aload_2
     375: invokevirtual #76                 // Method jnr/x86asm/Mem.label:()Ljnr/x86asm/Label;
     378: astore        9
     380: aload_0
     381: getfield      #9                  // Field _relocData:Ljava/util/List;
     384: invokeinterface #77,  1           // InterfaceMethod java/util/List.size:()I
     389: istore        10
     391: lload         6
     393: lstore        11
     395: aload         9
     397: invokevirtual #78                 // Method jnr/x86asm/Label.isBound:()Z
     400: ifeq          422
     403: lload         11
     405: aload         9
     407: invokevirtual #79                 // Method jnr/x86asm/Label.position:()I
     410: i2l
     411: ladd
     412: lstore        11
     414: aload_0
     415: iconst_0
     416: invokevirtual #74                 // Method _emitInt32:(I)V
     419: goto          439
     422: aload_0
     423: aload         9
     425: bipush        -4
     427: iload_3
     428: isub
     429: i2l
     430: iconst_4
     431: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
     434: iload         10
     436: putfield      #81                 // Field jnr/x86asm/LinkData.relocId:I
     439: new           #82                 // class jnr/x86asm/RelocData
     442: dup
     443: getstatic     #83                 // Field jnr/x86asm/RelocData$Type.RELATIVE_TO_ABSOLUTE:Ljnr/x86asm/RelocData$Type;
     446: iconst_4
     447: aload_0
     448: invokevirtual #84                 // Method offset:()I
     451: lload         11
     453: invokespecial #85                 // Method jnr/x86asm/RelocData."<init>":(Ljnr/x86asm/RelocData$Type;IIJ)V
     456: astore        13
     458: aload_0
     459: getfield      #9                  // Field _relocData:Ljava/util/List;
     462: aload         13
     464: invokeinterface #86,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     469: pop
     470: goto          648
     473: aload_0
     474: aload_2
     475: invokevirtual #87                 // Method jnr/x86asm/Mem.target:()J
     478: lload         6
     480: ladd
     481: l2i
     482: invokevirtual #74                 // Method _emitInt32:(I)V
     485: goto          648
     488: aload_2
     489: invokevirtual #75                 // Method jnr/x86asm/Mem.hasLabel:()Z
     492: ifeq          581
     495: aload_2
     496: invokevirtual #76                 // Method jnr/x86asm/Mem.label:()Ljnr/x86asm/Label;
     499: astore        9
     501: aload_2
     502: invokevirtual #70                 // Method jnr/x86asm/Mem.hasIndex:()Z
     505: ifeq          518
     508: new           #29                 // class java/lang/IllegalArgumentException
     511: dup
     512: ldc           #88                 // String illegal addressing
     514: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     517: athrow
     518: aload_0
     519: iconst_0
     520: iload_1
     521: iconst_5
     522: invokevirtual #72                 // Method _emitMod:(III)V
     525: lload         6
     527: iconst_4
     528: iload_3
     529: iadd
     530: i2l
     531: lsub
     532: lstore        6
     534: aload         9
     536: invokevirtual #78                 // Method jnr/x86asm/Label.isBound:()Z
     539: ifeq          568
     542: lload         6
     544: aload_0
     545: invokevirtual #84                 // Method offset:()I
     548: aload         9
     550: invokevirtual #79                 // Method jnr/x86asm/Label.position:()I
     553: isub
     554: i2l
     555: ladd
     556: lstore        6
     558: aload_0
     559: lload         6
     561: l2i
     562: invokevirtual #74                 // Method _emitInt32:(I)V
     565: goto          578
     568: aload_0
     569: aload         9
     571: lload         6
     573: iconst_4
     574: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
     577: pop
     578: goto          648
     581: aload_0
     582: iconst_0
     583: iload_1
     584: iconst_4
     585: invokevirtual #72                 // Method _emitMod:(III)V
     588: aload_2
     589: invokevirtual #70                 // Method jnr/x86asm/Mem.hasIndex:()Z
     592: ifeq          607
     595: aload_0
     596: iload         8
     598: iload         5
     600: iconst_5
     601: invokevirtual #73                 // Method _emitSib:(III)V
     604: goto          614
     607: aload_0
     608: iconst_0
     609: iconst_4
     610: iconst_5
     611: invokevirtual #73                 // Method _emitSib:(III)V
     614: aload_2
     615: invokevirtual #87                 // Method jnr/x86asm/Mem.target:()J
     618: lload         6
     620: ladd
     621: lstore        9
     623: lload         9
     625: ldc2_w        #89                 // long 4294967295l
     628: lcmp
     629: ifle          641
     632: aload_0
     633: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
     636: ldc           #91                 // String ; Warning: Absolute address truncated to 32 bits\n
     638: invokevirtual #92                 // Method jnr/x86asm/Logger.log:(Ljava/lang/String;)V
     641: aload_0
     642: lload         9
     644: l2i
     645: invokevirtual #74                 // Method _emitInt32:(I)V
     648: return

  void _emitX86Inl(int, boolean, boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #55                 // Method intValue:(Z)I
       7: iload         4
       9: invokevirtual #93                 // Method _emitX86Inl:(IZII)V
      12: return

  void _emitX86Inl(int, boolean, int, int);
    Code:
       0: iload_2
       1: ifeq          10
       4: aload_0
       5: bipush        102
       7: invokevirtual #38                 // Method _emitByte:(I)V
      10: iload_1
      11: ldc           #37                 // int -16777216
      13: iand
      14: ifeq          28
      17: aload_0
      18: iload_1
      19: ldc           #37                 // int -16777216
      21: iand
      22: bipush        24
      24: ishr
      25: invokevirtual #38                 // Method _emitByte:(I)V
      28: aload_0
      29: invokevirtual #36                 // Method is64:()Z
      32: ifeq          43
      35: aload_0
      36: iload_3
      37: iconst_0
      38: iload         4
      40: invokevirtual #56                 // Method _emitRexR:(III)V
      43: iload_1
      44: ldc           #39                 // int 16711680
      46: iand
      47: ifeq          61
      50: aload_0
      51: iload_1
      52: ldc           #39                 // int 16711680
      54: iand
      55: bipush        16
      57: ishr
      58: invokevirtual #38                 // Method _emitByte:(I)V
      61: iload_1
      62: ldc           #40                 // int 65280
      64: iand
      65: ifeq          79
      68: aload_0
      69: iload_1
      70: ldc           #40                 // int 65280
      72: iand
      73: bipush        8
      75: ishr
      76: invokevirtual #38                 // Method _emitByte:(I)V
      79: aload_0
      80: iload_1
      81: sipush        255
      84: iand
      85: iload         4
      87: bipush        7
      89: iand
      90: iadd
      91: invokevirtual #38                 // Method _emitByte:(I)V
      94: return

  void _emitModRM(int, jnr.x86asm.Operand, int);
    Code:
       0: getstatic     #63                 // Field $assertionsDisabled:Z
       3: ifne          30
       6: aload_2
       7: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
      10: iconst_1
      11: if_icmpeq     30
      14: aload_2
      15: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
      18: iconst_2
      19: if_icmpeq     30
      22: new           #65                 // class java/lang/AssertionError
      25: dup
      26: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      29: athrow
      30: aload_2
      31: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
      34: iconst_1
      35: if_icmpne     53
      38: aload_0
      39: iload_1
      40: aload_2
      41: checkcast     #58                 // class jnr/x86asm/BaseReg
      44: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
      47: invokevirtual #95                 // Method _emitModR:(II)V
      50: goto          63
      53: aload_0
      54: iload_1
      55: aload_2
      56: checkcast     #42                 // class jnr/x86asm/Mem
      59: iload_3
      60: invokevirtual #96                 // Method _emitModM:(ILjnr/x86asm/Mem;I)V
      63: return

  void _emitMod(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: iand
       4: bipush        6
       6: ishl
       7: iload_2
       8: bipush        7
      10: iand
      11: iconst_3
      12: ishl
      13: ior
      14: iload_3
      15: bipush        7
      17: iand
      18: ior
      19: i2b
      20: invokevirtual #38                 // Method _emitByte:(I)V
      23: return

  void _emitSib(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: iand
       4: bipush        6
       6: ishl
       7: iload_2
       8: bipush        7
      10: iand
      11: iconst_3
      12: ishl
      13: ior
      14: iload_3
      15: bipush        7
      17: iand
      18: ior
      19: i2b
      20: invokevirtual #38                 // Method _emitByte:(I)V
      23: return

  void _emitModR(int, int);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: iload_2
       4: invokevirtual #72                 // Method _emitMod:(III)V
       7: return

  void _emitModR(int, jnr.x86asm.BaseReg);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: aload_2
       4: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
       7: invokevirtual #72                 // Method _emitMod:(III)V
      10: return

  void _emitX86RM(int, boolean, boolean, int, jnr.x86asm.Operand, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #55                 // Method intValue:(Z)I
       7: iload         4
       9: aload         5
      11: iload         6
      13: invokevirtual #97                 // Method _emitX86RM:(IZIILjnr/x86asm/Operand;I)V
      16: return

  void _emitX86RM(int, boolean, int, int, jnr.x86asm.Operand, int);
    Code:
       0: iload_2
       1: ifeq          10
       4: aload_0
       5: bipush        102
       7: invokevirtual #38                 // Method _emitByte:(I)V
      10: aload_0
      11: aload         5
      13: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
      16: iload_1
      17: ldc           #37                 // int -16777216
      19: iand
      20: ifeq          34
      23: aload_0
      24: iload_1
      25: ldc           #37                 // int -16777216
      27: iand
      28: bipush        24
      30: ishr
      31: invokevirtual #38                 // Method _emitByte:(I)V
      34: aload_0
      35: invokevirtual #36                 // Method is64:()Z
      38: ifeq          50
      41: aload_0
      42: iload_3
      43: iload         4
      45: aload         5
      47: invokevirtual #62                 // Method _emitRexRM:(IILjnr/x86asm/Operand;)V
      50: iload_1
      51: ldc           #39                 // int 16711680
      53: iand
      54: ifeq          69
      57: aload_0
      58: iload_1
      59: ldc           #39                 // int 16711680
      61: iand
      62: bipush        16
      64: ishr
      65: i2b
      66: invokevirtual #38                 // Method _emitByte:(I)V
      69: iload_1
      70: ldc           #40                 // int 65280
      72: iand
      73: ifeq          88
      76: aload_0
      77: iload_1
      78: ldc           #40                 // int 65280
      80: iand
      81: bipush        8
      83: ishr
      84: i2b
      85: invokevirtual #38                 // Method _emitByte:(I)V
      88: aload_0
      89: iload_1
      90: sipush        255
      93: iand
      94: i2b
      95: invokevirtual #38                 // Method _emitByte:(I)V
      98: aload_0
      99: iload         4
     101: aload         5
     103: iload         6
     105: invokevirtual #99                 // Method _emitModRM:(ILjnr/x86asm/Operand;I)V
     108: return

  void _emitX86(jnr.x86asm.INST_CODE, jnr.x86asm.Operand, jnr.x86asm.Operand, jnr.x86asm.Operand);
    Code:
       0: aload_1
       1: invokestatic  #100                // Method jnr/x86asm/InstructionDescription.find:(Ljnr/x86asm/INST_CODE;)Ljnr/x86asm/InstructionDescription;
       4: astore        5
       6: getstatic     #101                // Field jnr/x86asm/Assembler$1.$SwitchMap$jnr$x86asm$InstructionGroup:[I
       9: aload         5
      11: getfield      #102                // Field jnr/x86asm/InstructionDescription.group:Ljnr/x86asm/InstructionGroup;
      14: invokevirtual #103                // Method jnr/x86asm/InstructionGroup.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 42
                     1: 200
                     2: 210
                     3: 573
                     4: 635
                     5: 767
                     6: 930
                     7: 1052
                     8: 1094
                     9: 1554
                    10: 1690
                    11: 2007
                    12: 2231
                    13: 2287
                    14: 2321
                    15: 2880
                    16: 3075
                    17: 3227
                    18: 3287
                    19: 3355
                    20: 3468
                    21: 3564
                    22: 3590
                    23: 3665
                    24: 3756
                    25: 3858
                    26: 4025
                    27: 4176
                    28: 4512
                    29: 4688
                    30: 4784
                    31: 5039
                    32: 5089
                    33: 5160
                    34: 5208
                    35: 5387
                    36: 5830
                    37: 5962
                    38: 6424
                    39: 6474
                    40: 6825
                    41: 7366
                    42: 7853
               default: 7913
          }
     200: aload_0
     201: aload         5
     203: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
     206: invokevirtual #105                // Method _emitOpCode:(I)V
     209: return
     210: aload         5
     212: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
     215: istore        6
     217: aload         5
     219: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
     222: istore        7
     224: aload_2
     225: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
     228: ifeq          283
     231: aload_3
     232: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
     235: ifeq          283
     238: aload_0
     239: iload         6
     241: aload_3
     242: iconst_0
     243: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     246: ifne          253
     249: iconst_1
     250: goto          254
     253: iconst_0
     254: invokestatic  #55                 // Method intValue:(Z)I
     257: iadd
     258: aload_3
     259: bipush        16
     261: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     264: aload_3
     265: bipush        48
     267: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     270: aload_3
     271: checkcast     #108                // class jnr/x86asm/Register
     274: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
     277: aload_2
     278: iconst_0
     279: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
     282: return
     283: aload_2
     284: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
     287: ifeq          344
     290: aload_3
     291: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
     294: ifeq          344
     297: aload_0
     298: iload         6
     300: iconst_2
     301: iadd
     302: aload_2
     303: iconst_0
     304: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     307: ifne          314
     310: iconst_1
     311: goto          315
     314: iconst_0
     315: invokestatic  #55                 // Method intValue:(Z)I
     318: iadd
     319: aload_2
     320: bipush        16
     322: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     325: aload_2
     326: bipush        48
     328: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     331: aload_2
     332: checkcast     #108                // class jnr/x86asm/Register
     335: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
     338: aload_3
     339: iconst_0
     340: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
     343: return
     344: aload_2
     345: iconst_0
     346: invokevirtual #112                // Method jnr/x86asm/Operand.isRegIndex:(I)Z
     349: ifeq          444
     352: aload_3
     353: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
     356: ifeq          444
     359: aload_2
     360: bipush        16
     362: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     365: ifeq          377
     368: aload_0
     369: bipush        102
     371: invokevirtual #38                 // Method _emitByte:(I)V
     374: goto          392
     377: aload_2
     378: bipush        48
     380: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     383: ifeq          392
     386: aload_0
     387: bipush        72
     389: invokevirtual #38                 // Method _emitByte:(I)V
     392: aload_0
     393: iload         7
     395: iconst_3
     396: ishl
     397: iconst_4
     398: aload_2
     399: iconst_0
     400: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
     403: ifne          410
     406: iconst_1
     407: goto          411
     410: iconst_0
     411: invokestatic  #55                 // Method intValue:(Z)I
     414: iadd
     415: ior
     416: invokevirtual #38                 // Method _emitByte:(I)V
     419: aload_0
     420: aload_3
     421: checkcast     #114                // class jnr/x86asm/Immediate
     424: aload_2
     425: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     428: iconst_4
     429: if_icmpgt     439
     432: aload_2
     433: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     436: goto          440
     439: iconst_4
     440: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
     443: return
     444: aload_2
     445: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
     448: ifeq          7913
     451: aload_3
     452: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
     455: ifeq          7913
     458: aload_3
     459: checkcast     #114                // class jnr/x86asm/Immediate
     462: astore        8
     464: aload         8
     466: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
     469: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
     472: ifeq          479
     475: iconst_1
     476: goto          495
     479: aload_2
     480: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     483: iconst_4
     484: if_icmpgt     494
     487: aload_2
     488: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     491: goto          495
     494: iconst_4
     495: istore        9
     497: aload_0
     498: aload         5
     500: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
     503: aload_2
     504: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     507: iconst_1
     508: if_icmpeq     525
     511: iload         9
     513: iconst_1
     514: if_icmpeq     521
     517: iconst_1
     518: goto          526
     521: iconst_3
     522: goto          526
     525: iconst_0
     526: iadd
     527: aload_2
     528: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     531: iconst_2
     532: if_icmpne     539
     535: iconst_1
     536: goto          540
     539: iconst_0
     540: aload_2
     541: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     544: bipush        8
     546: if_icmpne     553
     549: iconst_1
     550: goto          554
     553: iconst_0
     554: iload         7
     556: aload_2
     557: iload         9
     559: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
     562: aload_0
     563: aload_3
     564: checkcast     #114                // class jnr/x86asm/Immediate
     567: iload         9
     569: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
     572: return
     573: aload_2
     574: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
     577: ifeq          7913
     580: aload_2
     581: checkcast     #108                // class jnr/x86asm/Register
     584: astore        6
     586: aload_0
     587: invokevirtual #36                 // Method is64:()Z
     590: ifeq          618
     593: aload_0
     594: aload         6
     596: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
     599: bipush        48
     601: if_icmpne     608
     604: iconst_1
     605: goto          609
     608: iconst_0
     609: iconst_1
     610: aload         6
     612: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
     615: invokevirtual #120                // Method _emitRexR:(ZII)V
     618: aload_0
     619: bipush        15
     621: invokevirtual #38                 // Method _emitByte:(I)V
     624: aload_0
     625: iconst_1
     626: aload         6
     628: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
     631: invokevirtual #95                 // Method _emitModR:(II)V
     634: return
     635: aload_2
     636: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
     639: ifeq          690
     642: aload_3
     643: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
     646: ifeq          690
     649: aload_2
     650: astore        6
     652: aload_3
     653: checkcast     #108                // class jnr/x86asm/Register
     656: astore        7
     658: aload_0
     659: aload         5
     661: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
     664: aload         7
     666: bipush        16
     668: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
     671: aload         7
     673: bipush        48
     675: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
     678: aload         7
     680: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
     683: aload         6
     685: iconst_0
     686: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
     689: return
     690: aload_2
     691: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
     694: ifeq          7913
     697: aload_3
     698: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
     701: ifeq          7913
     704: aload_2
     705: astore        6
     707: aload_3
     708: checkcast     #114                // class jnr/x86asm/Immediate
     711: astore        7
     713: aload_0
     714: aload         5
     716: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
     719: aload         7
     721: invokevirtual #122                // Method jnr/x86asm/Immediate.size:()I
     724: iconst_2
     725: if_icmpne     732
     728: iconst_1
     729: goto          733
     732: iconst_0
     733: aload         7
     735: invokevirtual #122                // Method jnr/x86asm/Immediate.size:()I
     738: bipush        8
     740: if_icmpne     747
     743: iconst_1
     744: goto          748
     747: iconst_0
     748: aload         5
     750: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
     753: aload         6
     755: iconst_1
     756: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
     759: aload_0
     760: aload         7
     762: iconst_1
     763: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
     766: return
     767: aload_2
     768: aload_0
     769: invokevirtual #36                 // Method is64:()Z
     772: ifeq          780
     775: bipush        48
     777: goto          782
     780: bipush        32
     782: invokevirtual #123                // Method jnr/x86asm/Operand.isRegMem:(I)Z
     785: ifeq          805
     788: aload_2
     789: astore        6
     791: aload_0
     792: sipush        255
     795: iconst_0
     796: iconst_0
     797: iconst_2
     798: aload         6
     800: iconst_0
     801: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
     804: return
     805: aload_2
     806: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
     809: ifeq          838
     812: aload_2
     813: checkcast     #114                // class jnr/x86asm/Immediate
     816: astore        6
     818: aload_0
     819: sipush        232
     822: invokevirtual #38                 // Method _emitByte:(I)V
     825: aload_0
     826: getstatic     #124                // Field jnr/x86asm/InstructionGroup.I_CALL:Ljnr/x86asm/InstructionGroup;
     829: aload         6
     831: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
     834: invokevirtual #125                // Method _emitJmpOrCallReloc:(Ljnr/x86asm/InstructionGroup;J)V
     837: return
     838: aload_2
     839: invokevirtual #126                // Method jnr/x86asm/Operand.isLabel:()Z
     842: ifeq          7913
     845: aload_2
     846: checkcast     #127                // class jnr/x86asm/Label
     849: astore        6
     851: aload         6
     853: invokevirtual #78                 // Method jnr/x86asm/Label.isBound:()Z
     856: ifeq          911
     859: iconst_5
     860: istore        7
     862: aload         6
     864: invokevirtual #79                 // Method jnr/x86asm/Label.position:()I
     867: aload_0
     868: invokevirtual #84                 // Method offset:()I
     871: isub
     872: istore        8
     874: getstatic     #63                 // Field $assertionsDisabled:Z
     877: ifne          893
     880: iload         8
     882: ifle          893
     885: new           #65                 // class java/lang/AssertionError
     888: dup
     889: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
     892: athrow
     893: aload_0
     894: sipush        232
     897: invokevirtual #38                 // Method _emitByte:(I)V
     900: aload_0
     901: iload         8
     903: iconst_5
     904: isub
     905: invokevirtual #74                 // Method _emitInt32:(I)V
     908: goto          929
     911: aload_0
     912: sipush        232
     915: invokevirtual #38                 // Method _emitByte:(I)V
     918: aload_0
     919: aload         6
     921: ldc2_w        #128                // long -4l
     924: iconst_4
     925: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
     928: pop
     929: return
     930: aload_2
     931: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
     934: ifeq          7913
     937: aload_3
     938: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
     941: ifeq          7913
     944: aload_2
     945: checkcast     #108                // class jnr/x86asm/Register
     948: astore        6
     950: aload_3
     951: astore        7
     953: getstatic     #63                 // Field $assertionsDisabled:Z
     956: ifne          987
     959: aload         6
     961: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
     964: bipush        32
     966: if_icmpeq     987
     969: aload         6
     971: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
     974: bipush        48
     976: if_icmpeq     987
     979: new           #65                 // class java/lang/AssertionError
     982: dup
     983: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
     986: athrow
     987: aload_0
     988: aload         5
     990: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
     993: aload         7
     995: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
     998: iconst_1
     999: if_icmpeq     1006
    1002: iconst_1
    1003: goto          1007
    1006: iconst_0
    1007: invokestatic  #55                 // Method intValue:(Z)I
    1010: iadd
    1011: aload         7
    1013: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1016: iconst_2
    1017: if_icmpne     1024
    1020: iconst_1
    1021: goto          1025
    1024: iconst_0
    1025: aload         6
    1027: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    1030: bipush        8
    1032: if_icmpne     1039
    1035: iconst_1
    1036: goto          1040
    1039: iconst_0
    1040: aload         6
    1042: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    1045: aload         7
    1047: iconst_0
    1048: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1051: return
    1052: aload_2
    1053: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    1056: ifeq          7913
    1059: aload_3
    1060: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    1063: ifeq          7913
    1066: aload_0
    1067: sipush        200
    1070: invokevirtual #38                 // Method _emitByte:(I)V
    1073: aload_0
    1074: aload_2
    1075: checkcast     #114                // class jnr/x86asm/Immediate
    1078: iconst_2
    1079: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    1082: aload_0
    1083: aload_3
    1084: checkcast     #114                // class jnr/x86asm/Immediate
    1087: iconst_1
    1088: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    1091: goto          7913
    1094: aload_2
    1095: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    1098: ifeq          1178
    1101: aload_3
    1102: invokevirtual #130                // Method jnr/x86asm/Operand.isNone:()Z
    1105: ifeq          1178
    1108: aload         4
    1110: invokevirtual #130                // Method jnr/x86asm/Operand.isNone:()Z
    1113: ifeq          1178
    1116: aload_2
    1117: astore        6
    1119: aload_0
    1120: sipush        246
    1123: aload         6
    1125: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1128: iconst_1
    1129: if_icmpeq     1136
    1132: iconst_1
    1133: goto          1137
    1136: iconst_0
    1137: invokestatic  #55                 // Method intValue:(Z)I
    1140: iadd
    1141: aload         6
    1143: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1146: iconst_2
    1147: if_icmpne     1154
    1150: iconst_1
    1151: goto          1155
    1154: iconst_0
    1155: aload         6
    1157: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1160: bipush        8
    1162: if_icmpne     1169
    1165: iconst_1
    1166: goto          1170
    1169: iconst_0
    1170: iconst_5
    1171: aload         6
    1173: iconst_0
    1174: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1177: return
    1178: aload_2
    1179: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    1182: ifeq          1401
    1185: aload_3
    1186: invokevirtual #130                // Method jnr/x86asm/Operand.isNone:()Z
    1189: ifne          1401
    1192: aload         4
    1194: invokevirtual #130                // Method jnr/x86asm/Operand.isNone:()Z
    1197: ifeq          1401
    1200: aload_2
    1201: checkcast     #108                // class jnr/x86asm/Register
    1204: astore        6
    1206: getstatic     #63                 // Field $assertionsDisabled:Z
    1209: ifne          1230
    1212: aload         6
    1214: bipush        16
    1216: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1219: ifeq          1230
    1222: new           #65                 // class java/lang/AssertionError
    1225: dup
    1226: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    1229: athrow
    1230: aload_3
    1231: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    1234: ifeq          1270
    1237: aload_3
    1238: astore        7
    1240: aload_0
    1241: sipush        4015
    1244: aload         6
    1246: bipush        16
    1248: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1251: aload         6
    1253: bipush        48
    1255: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1258: aload         6
    1260: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    1263: aload         7
    1265: iconst_0
    1266: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1269: return
    1270: aload_3
    1271: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    1274: ifeq          1398
    1277: aload_3
    1278: checkcast     #114                // class jnr/x86asm/Immediate
    1281: astore        7
    1283: aload         7
    1285: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    1288: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
    1291: ifeq          1343
    1294: aload         7
    1296: invokevirtual #131                // Method jnr/x86asm/Immediate.relocMode:()Ljnr/x86asm/RELOC_MODE;
    1299: getstatic     #132                // Field jnr/x86asm/RELOC_MODE.RELOC_NONE:Ljnr/x86asm/RELOC_MODE;
    1302: if_acmpne     1343
    1305: aload_0
    1306: bipush        107
    1308: aload         6
    1310: bipush        16
    1312: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1315: aload         6
    1317: bipush        48
    1319: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1322: aload         6
    1324: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    1327: aload         6
    1329: iconst_1
    1330: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1333: aload_0
    1334: aload         7
    1336: iconst_1
    1337: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    1340: goto          1397
    1343: aload         6
    1345: bipush        16
    1347: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1350: ifeq          1357
    1353: iconst_2
    1354: goto          1358
    1357: iconst_4
    1358: istore        8
    1360: aload_0
    1361: bipush        105
    1363: aload         6
    1365: bipush        16
    1367: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1370: aload         6
    1372: bipush        48
    1374: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1377: aload         6
    1379: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    1382: aload         6
    1384: iload         8
    1386: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1389: aload_0
    1390: aload         7
    1392: iload         8
    1394: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    1397: return
    1398: goto          7913
    1401: aload_2
    1402: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    1405: ifeq          7913
    1408: aload_3
    1409: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    1412: ifeq          7913
    1415: aload         4
    1417: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    1420: ifeq          7913
    1423: aload_2
    1424: checkcast     #108                // class jnr/x86asm/Register
    1427: astore        6
    1429: aload_3
    1430: astore        7
    1432: aload         4
    1434: checkcast     #114                // class jnr/x86asm/Immediate
    1437: astore        8
    1439: aload         8
    1441: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    1444: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
    1447: ifeq          1499
    1450: aload         8
    1452: invokevirtual #131                // Method jnr/x86asm/Immediate.relocMode:()Ljnr/x86asm/RELOC_MODE;
    1455: getstatic     #132                // Field jnr/x86asm/RELOC_MODE.RELOC_NONE:Ljnr/x86asm/RELOC_MODE;
    1458: if_acmpne     1499
    1461: aload_0
    1462: bipush        107
    1464: aload         6
    1466: bipush        16
    1468: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1471: aload         6
    1473: bipush        48
    1475: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1478: aload         6
    1480: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    1483: aload         7
    1485: iconst_1
    1486: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1489: aload_0
    1490: aload         8
    1492: iconst_1
    1493: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    1496: goto          1553
    1499: aload         6
    1501: bipush        16
    1503: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1506: ifeq          1513
    1509: iconst_2
    1510: goto          1514
    1513: iconst_4
    1514: istore        9
    1516: aload_0
    1517: bipush        105
    1519: aload         6
    1521: bipush        16
    1523: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1526: aload         6
    1528: bipush        48
    1530: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    1533: aload         6
    1535: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    1538: aload         7
    1540: iload         9
    1542: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1545: aload_0
    1546: aload         8
    1548: iload         9
    1550: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    1553: return
    1554: aload_2
    1555: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    1558: ifeq          7913
    1561: aload_2
    1562: astore        6
    1564: aload_0
    1565: invokevirtual #36                 // Method is64:()Z
    1568: ifne          1625
    1571: aload         6
    1573: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    1576: ifeq          1625
    1579: aload         6
    1581: bipush        16
    1583: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    1586: ifne          1599
    1589: aload         6
    1591: bipush        32
    1593: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    1596: ifeq          1625
    1599: aload_0
    1600: aload         5
    1602: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    1605: aload         6
    1607: bipush        16
    1609: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    1612: iconst_0
    1613: aload         6
    1615: checkcast     #58                 // class jnr/x86asm/BaseReg
    1618: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    1621: invokevirtual #93                 // Method _emitX86Inl:(IZII)V
    1624: return
    1625: aload_0
    1626: aload         5
    1628: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    1631: aload         6
    1633: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1636: iconst_1
    1637: if_icmpeq     1644
    1640: iconst_1
    1641: goto          1645
    1644: iconst_0
    1645: invokestatic  #55                 // Method intValue:(Z)I
    1648: iadd
    1649: aload         6
    1651: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1654: iconst_2
    1655: if_icmpne     1662
    1658: iconst_1
    1659: goto          1663
    1662: iconst_0
    1663: aload         6
    1665: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    1668: bipush        8
    1670: if_icmpne     1677
    1673: iconst_1
    1674: goto          1678
    1677: iconst_0
    1678: aload         5
    1680: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    1683: aload         6
    1685: iconst_0
    1686: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    1689: return
    1690: aload_2
    1691: invokevirtual #126                // Method jnr/x86asm/Operand.isLabel:()Z
    1694: ifeq          7913
    1697: aload_2
    1698: checkcast     #127                // class jnr/x86asm/Label
    1701: astore        6
    1703: aload_1
    1704: invokevirtual #133                // Method jnr/x86asm/INST_CODE.ordinal:()I
    1707: getstatic     #134                // Field jnr/x86asm/INST_CODE.INST_J_SHORT:Ljnr/x86asm/INST_CODE;
    1710: invokevirtual #133                // Method jnr/x86asm/INST_CODE.ordinal:()I
    1713: if_icmplt     1733
    1716: aload_1
    1717: invokevirtual #133                // Method jnr/x86asm/INST_CODE.ordinal:()I
    1720: getstatic     #135                // Field jnr/x86asm/INST_CODE.INST_JMP_SHORT:Ljnr/x86asm/INST_CODE;
    1723: invokevirtual #133                // Method jnr/x86asm/INST_CODE.ordinal:()I
    1726: if_icmpgt     1733
    1729: iconst_1
    1730: goto          1734
    1733: iconst_0
    1734: istore        7
    1736: aload_3
    1737: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    1740: ifeq          1757
    1743: aload_3
    1744: checkcast     #114                // class jnr/x86asm/Immediate
    1747: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    1750: l2i
    1751: invokestatic  #136                // Method jnr/x86asm/HINT.valueOf:(I)Ljnr/x86asm/HINT;
    1754: goto          1760
    1757: getstatic     #137                // Field jnr/x86asm/HINT.HINT_NONE:Ljnr/x86asm/HINT;
    1760: astore        8
    1762: aload         8
    1764: getstatic     #138                // Field jnr/x86asm/HINT.HINT_TAKEN:Ljnr/x86asm/HINT;
    1767: if_acmpeq     1787
    1770: aload         8
    1772: getstatic     #139                // Field jnr/x86asm/HINT.HINT_NOT_TAKEN:Ljnr/x86asm/HINT;
    1775: if_acmpne     1796
    1778: aload_0
    1779: getfield      #12                 // Field _properties:I
    1782: iconst_4
    1783: iand
    1784: ifeq          1796
    1787: aload_0
    1788: aload         8
    1790: invokevirtual #140                // Method jnr/x86asm/HINT.value:()I
    1793: invokevirtual #38                 // Method _emitByte:(I)V
    1796: aload         6
    1798: invokevirtual #78                 // Method jnr/x86asm/Label.isBound:()Z
    1801: ifeq          1937
    1804: iconst_2
    1805: istore        9
    1807: bipush        6
    1809: istore        10
    1811: aload         6
    1813: invokevirtual #79                 // Method jnr/x86asm/Label.position:()I
    1816: aload_0
    1817: invokevirtual #84                 // Method offset:()I
    1820: isub
    1821: istore        11
    1823: getstatic     #63                 // Field $assertionsDisabled:Z
    1826: ifne          1842
    1829: iload         11
    1831: ifle          1842
    1834: new           #65                 // class java/lang/AssertionError
    1837: dup
    1838: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    1841: athrow
    1842: iload         11
    1844: iconst_2
    1845: isub
    1846: i2l
    1847: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
    1850: ifeq          1881
    1853: aload_0
    1854: bipush        112
    1856: aload         5
    1858: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    1861: sipush        255
    1864: iand
    1865: ior
    1866: invokevirtual #38                 // Method _emitByte:(I)V
    1869: aload_0
    1870: iload         11
    1872: iconst_2
    1873: isub
    1874: i2b
    1875: invokevirtual #38                 // Method _emitByte:(I)V
    1878: goto          1934
    1881: iload         7
    1883: ifeq          1902
    1886: aload_0
    1887: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
    1890: ifnull        1902
    1893: aload_0
    1894: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
    1897: ldc           #141                // String ; WARNING: Emitting long conditional jump, but short jump instruction forced!
    1899: invokevirtual #92                 // Method jnr/x86asm/Logger.log:(Ljava/lang/String;)V
    1902: aload_0
    1903: bipush        15
    1905: invokevirtual #38                 // Method _emitByte:(I)V
    1908: aload_0
    1909: sipush        128
    1912: aload         5
    1914: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    1917: sipush        255
    1920: iand
    1921: ior
    1922: invokevirtual #38                 // Method _emitByte:(I)V
    1925: aload_0
    1926: iload         11
    1928: bipush        6
    1930: isub
    1931: invokevirtual #74                 // Method _emitInt32:(I)V
    1934: goto          2006
    1937: iload         7
    1939: ifeq          1972
    1942: aload_0
    1943: bipush        112
    1945: aload         5
    1947: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    1950: sipush        255
    1953: iand
    1954: ior
    1955: invokevirtual #38                 // Method _emitByte:(I)V
    1958: aload_0
    1959: aload         6
    1961: ldc2_w        #142                // long -1l
    1964: iconst_1
    1965: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
    1968: pop
    1969: goto          2006
    1972: aload_0
    1973: bipush        15
    1975: invokevirtual #38                 // Method _emitByte:(I)V
    1978: aload_0
    1979: sipush        128
    1982: aload         5
    1984: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    1987: sipush        255
    1990: iand
    1991: ior
    1992: invokevirtual #38                 // Method _emitByte:(I)V
    1995: aload_0
    1996: aload         6
    1998: ldc2_w        #128                // long -4l
    2001: iconst_4
    2002: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
    2005: pop
    2006: return
    2007: aload_2
    2008: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    2011: ifeq          2031
    2014: aload_2
    2015: astore        6
    2017: aload_0
    2018: sipush        255
    2021: iconst_0
    2022: iconst_0
    2023: iconst_4
    2024: aload         6
    2026: iconst_0
    2027: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    2030: return
    2031: aload_2
    2032: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    2035: ifeq          2064
    2038: aload_2
    2039: checkcast     #114                // class jnr/x86asm/Immediate
    2042: astore        6
    2044: aload_0
    2045: sipush        233
    2048: invokevirtual #38                 // Method _emitByte:(I)V
    2051: aload_0
    2052: getstatic     #144                // Field jnr/x86asm/InstructionGroup.I_JMP:Ljnr/x86asm/InstructionGroup;
    2055: aload         6
    2057: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    2060: invokevirtual #125                // Method _emitJmpOrCallReloc:(Ljnr/x86asm/InstructionGroup;J)V
    2063: return
    2064: aload_2
    2065: invokevirtual #126                // Method jnr/x86asm/Operand.isLabel:()Z
    2068: ifeq          7913
    2071: aload_2
    2072: checkcast     #127                // class jnr/x86asm/Label
    2075: astore        6
    2077: aload_1
    2078: getstatic     #135                // Field jnr/x86asm/INST_CODE.INST_JMP_SHORT:Ljnr/x86asm/INST_CODE;
    2081: if_acmpne     2088
    2084: iconst_1
    2085: goto          2089
    2088: iconst_0
    2089: istore        7
    2091: aload         6
    2093: invokevirtual #78                 // Method jnr/x86asm/Label.isBound:()Z
    2096: ifeq          2186
    2099: iconst_2
    2100: istore        8
    2102: iconst_5
    2103: istore        9
    2105: aload         6
    2107: invokevirtual #79                 // Method jnr/x86asm/Label.position:()I
    2110: aload_0
    2111: invokevirtual #84                 // Method offset:()I
    2114: isub
    2115: istore        10
    2117: iload         10
    2119: iconst_2
    2120: isub
    2121: i2l
    2122: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
    2125: ifeq          2147
    2128: aload_0
    2129: sipush        235
    2132: invokevirtual #38                 // Method _emitByte:(I)V
    2135: aload_0
    2136: iload         10
    2138: iconst_2
    2139: isub
    2140: i2b
    2141: invokevirtual #38                 // Method _emitByte:(I)V
    2144: goto          2183
    2147: iload         7
    2149: ifeq          2168
    2152: aload_0
    2153: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
    2156: ifnull        2168
    2159: aload_0
    2160: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
    2163: ldc           #145                // String ; WARNING: Emitting long jump, but short jump instruction forced!
    2165: invokevirtual #92                 // Method jnr/x86asm/Logger.log:(Ljava/lang/String;)V
    2168: aload_0
    2169: sipush        233
    2172: invokevirtual #38                 // Method _emitByte:(I)V
    2175: aload_0
    2176: iload         10
    2178: iconst_5
    2179: isub
    2180: invokevirtual #74                 // Method _emitInt32:(I)V
    2183: goto          2230
    2186: iload         7
    2188: ifeq          2212
    2191: aload_0
    2192: sipush        235
    2195: invokevirtual #38                 // Method _emitByte:(I)V
    2198: aload_0
    2199: aload         6
    2201: ldc2_w        #142                // long -1l
    2204: iconst_1
    2205: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
    2208: pop
    2209: goto          2230
    2212: aload_0
    2213: sipush        233
    2216: invokevirtual #38                 // Method _emitByte:(I)V
    2219: aload_0
    2220: aload         6
    2222: ldc2_w        #128                // long -4l
    2225: iconst_4
    2226: invokevirtual #80                 // Method _emitDisplacement:(Ljnr/x86asm/Label;JI)Ljnr/x86asm/LinkData;
    2229: pop
    2230: return
    2231: aload_2
    2232: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    2235: ifeq          7913
    2238: aload_3
    2239: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    2242: ifeq          7913
    2245: aload_2
    2246: checkcast     #108                // class jnr/x86asm/Register
    2249: astore        6
    2251: aload_3
    2252: checkcast     #42                 // class jnr/x86asm/Mem
    2255: astore        7
    2257: aload_0
    2258: sipush        141
    2261: aload         6
    2263: bipush        16
    2265: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    2268: aload         6
    2270: bipush        48
    2272: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    2275: aload         6
    2277: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    2280: aload         7
    2282: iconst_0
    2283: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    2286: return
    2287: aload_2
    2288: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    2291: ifeq          7913
    2294: aload_0
    2295: aload         5
    2297: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    2300: iconst_0
    2301: aload         5
    2303: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    2306: i2b
    2307: aload         5
    2309: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    2312: aload_2
    2313: checkcast     #42                 // class jnr/x86asm/Mem
    2316: iconst_0
    2317: invokevirtual #97                 // Method _emitX86RM:(IZIILjnr/x86asm/Operand;I)V
    2320: return
    2321: aload_2
    2322: astore        6
    2324: aload_3
    2325: astore        7
    2327: aload         6
    2329: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
    2332: iconst_4
    2333: ishl
    2334: aload         7
    2336: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
    2339: ior
    2340: lookupswitch  { // 5
                    17: 2392
                    18: 2445
                    19: 2549
                    33: 2682
                    35: 2786
               default: 2877
          }
    2392: getstatic     #63                 // Field $assertionsDisabled:Z
    2395: ifne          2445
    2398: aload         7
    2400: iconst_0
    2401: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2404: ifne          2445
    2407: aload         7
    2409: bipush        16
    2411: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2414: ifne          2445
    2417: aload         7
    2419: bipush        32
    2421: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2424: ifne          2445
    2427: aload         7
    2429: bipush        48
    2431: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2434: ifne          2445
    2437: new           #65                 // class java/lang/AssertionError
    2440: dup
    2441: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    2444: athrow
    2445: getstatic     #63                 // Field $assertionsDisabled:Z
    2448: ifne          2498
    2451: aload         6
    2453: iconst_0
    2454: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2457: ifne          2498
    2460: aload         6
    2462: bipush        16
    2464: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2467: ifne          2498
    2470: aload         6
    2472: bipush        32
    2474: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2477: ifne          2498
    2480: aload         6
    2482: bipush        48
    2484: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2487: ifne          2498
    2490: new           #65                 // class java/lang/AssertionError
    2493: dup
    2494: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    2497: athrow
    2498: aload_0
    2499: sipush        138
    2502: aload         6
    2504: iconst_0
    2505: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2508: ifne          2515
    2511: iconst_1
    2512: goto          2516
    2515: iconst_0
    2516: invokestatic  #55                 // Method intValue:(Z)I
    2519: iadd
    2520: aload         6
    2522: bipush        16
    2524: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2527: aload         6
    2529: bipush        48
    2531: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2534: aload         6
    2536: checkcast     #108                // class jnr/x86asm/Register
    2539: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    2542: aload         7
    2544: iconst_0
    2545: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    2548: return
    2549: aload_3
    2550: checkcast     #114                // class jnr/x86asm/Immediate
    2553: astore        8
    2555: aload         6
    2557: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2560: istore        9
    2562: aload_0
    2563: invokevirtual #36                 // Method is64:()Z
    2566: ifeq          2629
    2569: iload         9
    2571: bipush        8
    2573: if_icmpne     2629
    2576: aload         8
    2578: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    2581: invokestatic  #146                // Method jnr/x86asm/Util.isInt32:(J)Z
    2584: ifeq          2629
    2587: aload         8
    2589: invokevirtual #131                // Method jnr/x86asm/Immediate.relocMode:()Ljnr/x86asm/RELOC_MODE;
    2592: getstatic     #132                // Field jnr/x86asm/RELOC_MODE.RELOC_NONE:Ljnr/x86asm/RELOC_MODE;
    2595: if_acmpne     2629
    2598: aload_0
    2599: sipush        199
    2602: aload         6
    2604: bipush        16
    2606: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2609: aload         6
    2611: bipush        48
    2613: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2616: iconst_0
    2617: aload         6
    2619: iconst_0
    2620: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    2623: iconst_4
    2624: istore        9
    2626: goto          2673
    2629: aload_0
    2630: aload         6
    2632: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2635: iconst_1
    2636: if_icmpne     2645
    2639: sipush        176
    2642: goto          2648
    2645: sipush        184
    2648: aload         6
    2650: bipush        16
    2652: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2655: aload         6
    2657: bipush        48
    2659: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2662: aload         6
    2664: checkcast     #108                // class jnr/x86asm/Register
    2667: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    2670: invokevirtual #147                // Method _emitX86Inl:(IZZI)V
    2673: aload_0
    2674: aload         8
    2676: iload         9
    2678: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    2681: return
    2682: getstatic     #63                 // Field $assertionsDisabled:Z
    2685: ifne          2735
    2688: aload         7
    2690: iconst_0
    2691: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2694: ifne          2735
    2697: aload         7
    2699: bipush        16
    2701: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2704: ifne          2735
    2707: aload         7
    2709: bipush        32
    2711: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2714: ifne          2735
    2717: aload         7
    2719: bipush        48
    2721: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2724: ifne          2735
    2727: new           #65                 // class java/lang/AssertionError
    2730: dup
    2731: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    2734: athrow
    2735: aload_0
    2736: sipush        136
    2739: aload         7
    2741: iconst_0
    2742: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2745: ifne          2752
    2748: iconst_1
    2749: goto          2753
    2752: iconst_0
    2753: invokestatic  #55                 // Method intValue:(Z)I
    2756: iadd
    2757: aload         7
    2759: bipush        16
    2761: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2764: aload         7
    2766: bipush        48
    2768: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    2771: aload         7
    2773: checkcast     #108                // class jnr/x86asm/Register
    2776: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    2779: aload         6
    2781: iconst_0
    2782: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    2785: return
    2786: aload         6
    2788: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2791: iconst_4
    2792: if_icmpgt     2803
    2795: aload         6
    2797: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2800: goto          2804
    2803: iconst_4
    2804: istore        8
    2806: aload_0
    2807: sipush        198
    2810: aload         6
    2812: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2815: iconst_1
    2816: if_icmpeq     2823
    2819: iconst_1
    2820: goto          2824
    2823: iconst_0
    2824: invokestatic  #55                 // Method intValue:(Z)I
    2827: iadd
    2828: aload         6
    2830: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2833: iconst_2
    2834: if_icmpne     2841
    2837: iconst_1
    2838: goto          2842
    2841: iconst_0
    2842: aload         6
    2844: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    2847: bipush        8
    2849: if_icmpne     2856
    2852: iconst_1
    2853: goto          2857
    2856: iconst_0
    2857: iconst_0
    2858: aload         6
    2860: iload         8
    2862: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    2865: aload_0
    2866: aload         7
    2868: checkcast     #114                // class jnr/x86asm/Immediate
    2871: iload         8
    2873: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    2876: return
    2877: goto          7913
    2880: aload_2
    2881: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    2884: ifeq          2894
    2887: aload_3
    2888: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    2891: ifne          2908
    2894: aload_2
    2895: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    2898: ifeq          7913
    2901: aload_3
    2902: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    2905: ifeq          7913
    2908: aload_2
    2909: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
    2912: iconst_1
    2913: if_icmpne     2920
    2916: iconst_1
    2917: goto          2921
    2920: iconst_0
    2921: istore        6
    2923: iload         6
    2925: ifne          2934
    2928: sipush        160
    2931: goto          2937
    2934: sipush        162
    2937: istore        7
    2939: iload         6
    2941: ifne          2948
    2944: aload_2
    2945: goto          2949
    2948: aload_3
    2949: checkcast     #108                // class jnr/x86asm/Register
    2952: astore        8
    2954: iload         6
    2956: ifne          2963
    2959: aload_3
    2960: goto          2964
    2963: aload_2
    2964: checkcast     #114                // class jnr/x86asm/Immediate
    2967: astore        9
    2969: aload         8
    2971: invokevirtual #148                // Method jnr/x86asm/Register.index:()I
    2974: ifeq          2987
    2977: new           #149                // class java/lang/IllegalStateException
    2980: dup
    2981: ldc           #150                // String reg.index() != 0
    2983: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    2986: athrow
    2987: aload         8
    2989: bipush        16
    2991: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    2994: ifeq          3003
    2997: aload_0
    2998: bipush        102
    3000: invokevirtual #38                 // Method _emitByte:(I)V
    3003: aload_0
    3004: invokevirtual #36                 // Method is64:()Z
    3007: ifeq          3031
    3010: aload_0
    3011: aload         8
    3013: invokevirtual #152                // Method jnr/x86asm/Register.size:()I
    3016: bipush        8
    3018: if_icmpne     3025
    3021: iconst_1
    3022: goto          3026
    3025: iconst_0
    3026: iconst_0
    3027: iconst_0
    3028: invokevirtual #120                // Method _emitRexR:(ZII)V
    3031: aload_0
    3032: iload         7
    3034: aload         8
    3036: invokevirtual #152                // Method jnr/x86asm/Register.size:()I
    3039: iconst_1
    3040: if_icmpeq     3047
    3043: iconst_1
    3044: goto          3048
    3047: iconst_0
    3048: invokestatic  #55                 // Method intValue:(Z)I
    3051: iadd
    3052: invokevirtual #38                 // Method _emitByte:(I)V
    3055: aload_0
    3056: aload         9
    3058: aload_0
    3059: invokevirtual #36                 // Method is64:()Z
    3062: ifeq          3070
    3065: bipush        8
    3067: goto          3071
    3070: iconst_4
    3071: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    3074: return
    3075: aload_2
    3076: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    3079: ifeq          7913
    3082: aload_3
    3083: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3086: ifeq          7913
    3089: aload_2
    3090: checkcast     #108                // class jnr/x86asm/Register
    3093: checkcast     #108                // class jnr/x86asm/Register
    3096: astore        6
    3098: aload_3
    3099: astore        7
    3101: aload         6
    3103: iconst_0
    3104: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    3107: ifeq          3120
    3110: new           #29                 // class java/lang/IllegalArgumentException
    3113: dup
    3114: ldc           #153                // String not gpb
    3116: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    3119: athrow
    3120: aload         7
    3122: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3125: iconst_1
    3126: if_icmpeq     3148
    3129: aload         7
    3131: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3134: iconst_2
    3135: if_icmpeq     3148
    3138: new           #29                 // class java/lang/IllegalArgumentException
    3141: dup
    3142: ldc           #154                // String src.size !=1 && src.size != 2
    3144: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    3147: athrow
    3148: aload         7
    3150: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3153: iconst_2
    3154: if_icmpne     3177
    3157: aload         6
    3159: bipush        16
    3161: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    3164: ifeq          3177
    3167: new           #29                 // class java/lang/IllegalArgumentException
    3170: dup
    3171: ldc           #155                // String not gpw
    3173: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    3176: athrow
    3177: aload_0
    3178: aload         5
    3180: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    3183: aload         7
    3185: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3188: iconst_1
    3189: if_icmpeq     3196
    3192: iconst_1
    3193: goto          3197
    3196: iconst_0
    3197: invokestatic  #55                 // Method intValue:(Z)I
    3200: iadd
    3201: aload         6
    3203: bipush        16
    3205: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    3208: aload         6
    3210: bipush        48
    3212: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    3215: aload         6
    3217: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    3220: aload         7
    3222: iconst_0
    3223: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    3226: return
    3227: aload_0
    3228: invokevirtual #36                 // Method is64:()Z
    3231: ifne          3244
    3234: new           #149                // class java/lang/IllegalStateException
    3237: dup
    3238: ldc           #156                // String illegal instruction
    3240: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    3243: athrow
    3244: aload_2
    3245: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    3248: ifeq          7913
    3251: aload_3
    3252: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3255: ifeq          7913
    3258: aload_2
    3259: checkcast     #108                // class jnr/x86asm/Register
    3262: checkcast     #108                // class jnr/x86asm/Register
    3265: astore        6
    3267: aload_3
    3268: astore        7
    3270: aload_0
    3271: bipush        99
    3273: iconst_0
    3274: iconst_1
    3275: aload         6
    3277: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    3280: aload         7
    3282: iconst_0
    3283: invokevirtual #97                 // Method _emitX86RM:(IZIILjnr/x86asm/Operand;I)V
    3286: return
    3287: aload_2
    3288: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    3291: ifeq          3355
    3294: aload_2
    3295: checkcast     #114                // class jnr/x86asm/Immediate
    3298: checkcast     #114                // class jnr/x86asm/Immediate
    3301: astore        6
    3303: aload         6
    3305: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    3308: invokestatic  #71                 // Method jnr/x86asm/Util.isInt8:(J)Z
    3311: ifeq          3341
    3314: aload         6
    3316: invokevirtual #131                // Method jnr/x86asm/Immediate.relocMode:()Ljnr/x86asm/RELOC_MODE;
    3319: getstatic     #132                // Field jnr/x86asm/RELOC_MODE.RELOC_NONE:Ljnr/x86asm/RELOC_MODE;
    3322: if_acmpne     3341
    3325: aload_0
    3326: bipush        106
    3328: invokevirtual #38                 // Method _emitByte:(I)V
    3331: aload_0
    3332: aload         6
    3334: iconst_1
    3335: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    3338: goto          3354
    3341: aload_0
    3342: bipush        104
    3344: invokevirtual #38                 // Method _emitByte:(I)V
    3347: aload_0
    3348: aload         6
    3350: iconst_4
    3351: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    3354: return
    3355: aload_2
    3356: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    3359: ifeq          3430
    3362: getstatic     #63                 // Field $assertionsDisabled:Z
    3365: ifne          3406
    3368: aload_2
    3369: bipush        16
    3371: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    3374: ifne          3406
    3377: aload_2
    3378: aload_0
    3379: invokevirtual #36                 // Method is64:()Z
    3382: ifeq          3390
    3385: bipush        48
    3387: goto          3392
    3390: bipush        32
    3392: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    3395: ifne          3406
    3398: new           #65                 // class java/lang/AssertionError
    3401: dup
    3402: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    3405: athrow
    3406: aload_0
    3407: aload         5
    3409: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    3412: aload_2
    3413: bipush        16
    3415: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    3418: iconst_0
    3419: aload_2
    3420: checkcast     #108                // class jnr/x86asm/Register
    3423: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    3426: invokevirtual #93                 // Method _emitX86Inl:(IZII)V
    3429: return
    3430: aload_2
    3431: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    3434: ifeq          7913
    3437: aload_0
    3438: aload         5
    3440: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    3443: aload_2
    3444: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3447: iconst_2
    3448: if_icmpne     3455
    3451: iconst_1
    3452: goto          3456
    3455: iconst_0
    3456: iconst_0
    3457: aload         5
    3459: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    3462: aload_2
    3463: iconst_0
    3464: invokevirtual #97                 // Method _emitX86RM:(IZIILjnr/x86asm/Operand;I)V
    3467: return
    3468: aload_2
    3469: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    3472: ifeq          7913
    3475: aload_3
    3476: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3479: ifeq          7913
    3482: aload_2
    3483: checkcast     #108                // class jnr/x86asm/Register
    3486: checkcast     #108                // class jnr/x86asm/Register
    3489: astore        6
    3491: getstatic     #63                 // Field $assertionsDisabled:Z
    3494: ifne          3513
    3497: aload         6
    3499: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    3502: ifne          3513
    3505: new           #65                 // class java/lang/AssertionError
    3508: dup
    3509: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    3512: athrow
    3513: aload_3
    3514: astore        7
    3516: aload_0
    3517: aload         5
    3519: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    3522: aload         6
    3524: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    3527: bipush        16
    3529: if_icmpne     3536
    3532: iconst_1
    3533: goto          3537
    3536: iconst_0
    3537: aload         6
    3539: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    3542: bipush        48
    3544: if_icmpne     3551
    3547: iconst_1
    3548: goto          3552
    3551: iconst_0
    3552: aload         6
    3554: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    3557: aload         7
    3559: iconst_0
    3560: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    3563: return
    3564: aload_2
    3565: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3568: ifeq          7913
    3571: aload_2
    3572: astore        6
    3574: aload_0
    3575: aload         5
    3577: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    3580: iconst_0
    3581: iconst_0
    3582: iconst_0
    3583: aload         6
    3585: iconst_0
    3586: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    3589: return
    3590: aload_2
    3591: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3594: ifeq          7913
    3597: aload_2
    3598: astore        6
    3600: aload_0
    3601: aload         5
    3603: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    3606: aload         6
    3608: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3611: iconst_1
    3612: if_icmpeq     3619
    3615: iconst_1
    3616: goto          3620
    3619: iconst_0
    3620: invokestatic  #55                 // Method intValue:(Z)I
    3623: iadd
    3624: aload         6
    3626: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3629: iconst_2
    3630: if_icmpne     3637
    3633: iconst_1
    3634: goto          3638
    3637: iconst_0
    3638: aload         6
    3640: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3643: bipush        8
    3645: if_icmpne     3652
    3648: iconst_1
    3649: goto          3653
    3652: iconst_0
    3653: aload         5
    3655: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    3658: aload         6
    3660: iconst_0
    3661: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    3664: return
    3665: aload_2
    3666: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3669: ifeq          7913
    3672: aload_3
    3673: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    3676: ifeq          7913
    3679: aload_2
    3680: astore        6
    3682: aload_3
    3683: checkcast     #108                // class jnr/x86asm/Register
    3686: checkcast     #108                // class jnr/x86asm/Register
    3689: astore        7
    3691: aload_0
    3692: aload         5
    3694: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    3697: aload         7
    3699: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    3702: ifeq          3709
    3705: iconst_1
    3706: goto          3710
    3709: iconst_0
    3710: invokestatic  #55                 // Method intValue:(Z)I
    3713: iadd
    3714: aload         7
    3716: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    3719: bipush        16
    3721: if_icmpne     3728
    3724: iconst_1
    3725: goto          3729
    3728: iconst_0
    3729: aload         7
    3731: invokevirtual #119                // Method jnr/x86asm/Register.type:()I
    3734: bipush        48
    3736: if_icmpne     3743
    3739: iconst_1
    3740: goto          3744
    3743: iconst_0
    3744: aload         7
    3746: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    3749: aload         6
    3751: iconst_0
    3752: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    3755: return
    3756: aload_2
    3757: invokevirtual #130                // Method jnr/x86asm/Operand.isNone:()Z
    3760: ifeq          3771
    3763: aload_0
    3764: sipush        195
    3767: invokevirtual #38                 // Method _emitByte:(I)V
    3770: return
    3771: aload_2
    3772: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    3775: ifeq          7913
    3778: aload_2
    3779: checkcast     #114                // class jnr/x86asm/Immediate
    3782: checkcast     #114                // class jnr/x86asm/Immediate
    3785: astore        6
    3787: getstatic     #63                 // Field $assertionsDisabled:Z
    3790: ifne          3812
    3793: aload         6
    3795: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    3798: invokestatic  #157                // Method jnr/x86asm/Util.isUInt16:(J)Z
    3801: ifne          3812
    3804: new           #65                 // class java/lang/AssertionError
    3807: dup
    3808: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    3811: athrow
    3812: aload         6
    3814: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    3817: lconst_0
    3818: lcmp
    3819: ifne          3843
    3822: aload         6
    3824: invokevirtual #131                // Method jnr/x86asm/Immediate.relocMode:()Ljnr/x86asm/RELOC_MODE;
    3827: getstatic     #132                // Field jnr/x86asm/RELOC_MODE.RELOC_NONE:Ljnr/x86asm/RELOC_MODE;
    3830: if_acmpne     3843
    3833: aload_0
    3834: sipush        195
    3837: invokevirtual #38                 // Method _emitByte:(I)V
    3840: goto          3857
    3843: aload_0
    3844: sipush        194
    3847: invokevirtual #38                 // Method _emitByte:(I)V
    3850: aload_0
    3851: aload         6
    3853: iconst_2
    3854: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    3857: return
    3858: aload_2
    3859: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    3862: ifeq          7913
    3865: aload_3
    3866: iconst_1
    3867: invokevirtual #158                // Method jnr/x86asm/Operand.isRegCode:(I)Z
    3870: ifne          3880
    3873: aload_3
    3874: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    3877: ifeq          7913
    3880: aload_3
    3881: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    3884: ifeq          3916
    3887: aload_3
    3888: checkcast     #114                // class jnr/x86asm/Immediate
    3891: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    3894: lconst_1
    3895: lcmp
    3896: ifne          3912
    3899: aload_3
    3900: checkcast     #114                // class jnr/x86asm/Immediate
    3903: invokevirtual #131                // Method jnr/x86asm/Immediate.relocMode:()Ljnr/x86asm/RELOC_MODE;
    3906: getstatic     #132                // Field jnr/x86asm/RELOC_MODE.RELOC_NONE:Ljnr/x86asm/RELOC_MODE;
    3909: if_acmpeq     3916
    3912: iconst_1
    3913: goto          3917
    3916: iconst_0
    3917: istore        6
    3919: iload         6
    3921: ifeq          3930
    3924: sipush        192
    3927: goto          3933
    3930: sipush        208
    3933: istore        7
    3935: aload_2
    3936: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3939: iconst_1
    3940: if_icmpeq     3949
    3943: iload         7
    3945: iconst_1
    3946: ior
    3947: istore        7
    3949: aload_3
    3950: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
    3953: iconst_1
    3954: if_icmpne     3963
    3957: iload         7
    3959: iconst_2
    3960: ior
    3961: istore        7
    3963: aload_0
    3964: iload         7
    3966: aload_2
    3967: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3970: iconst_2
    3971: if_icmpne     3978
    3974: iconst_1
    3975: goto          3979
    3978: iconst_0
    3979: aload_2
    3980: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    3983: bipush        8
    3985: if_icmpne     3992
    3988: iconst_1
    3989: goto          3993
    3992: iconst_0
    3993: aload         5
    3995: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    3998: aload_2
    3999: iload         6
    4001: invokestatic  #55                 // Method intValue:(Z)I
    4004: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    4007: iload         6
    4009: ifeq          4024
    4012: aload_0
    4013: aload_3
    4014: checkcast     #114                // class jnr/x86asm/Immediate
    4017: checkcast     #114                // class jnr/x86asm/Immediate
    4020: iconst_1
    4021: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    4024: return
    4025: aload_2
    4026: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    4029: ifeq          7913
    4032: aload_3
    4033: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4036: ifeq          7913
    4039: aload         4
    4041: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    4044: ifne          4064
    4047: aload         4
    4049: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4052: ifeq          7913
    4055: aload         4
    4057: iconst_1
    4058: invokevirtual #158                // Method jnr/x86asm/Operand.isRegCode:(I)Z
    4061: ifeq          7913
    4064: aload_2
    4065: astore        6
    4067: aload_3
    4068: checkcast     #108                // class jnr/x86asm/Register
    4071: checkcast     #108                // class jnr/x86asm/Register
    4074: astore        7
    4076: aload         4
    4078: astore        8
    4080: getstatic     #63                 // Field $assertionsDisabled:Z
    4083: ifne          4107
    4086: aload         6
    4088: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4091: aload         7
    4093: invokevirtual #152                // Method jnr/x86asm/Register.size:()I
    4096: if_icmpeq     4107
    4099: new           #65                 // class java/lang/AssertionError
    4102: dup
    4103: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    4106: athrow
    4107: aload_0
    4108: aload         5
    4110: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    4113: aload         8
    4115: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4118: invokestatic  #55                 // Method intValue:(Z)I
    4121: iadd
    4122: aload         7
    4124: bipush        16
    4126: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    4129: aload         7
    4131: bipush        48
    4133: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    4136: aload         7
    4138: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4141: aload         6
    4143: aload         8
    4145: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    4148: invokestatic  #55                 // Method intValue:(Z)I
    4151: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    4154: aload         8
    4156: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    4159: ifeq          4175
    4162: aload_0
    4163: aload         8
    4165: checkcast     #114                // class jnr/x86asm/Immediate
    4168: checkcast     #114                // class jnr/x86asm/Immediate
    4171: iconst_1
    4172: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    4175: return
    4176: aload_2
    4177: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    4180: ifeq          4276
    4183: aload_3
    4184: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4187: ifeq          4276
    4190: getstatic     #63                 // Field $assertionsDisabled:Z
    4193: ifne          4215
    4196: aload_2
    4197: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4200: aload_3
    4201: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4204: if_icmpeq     4215
    4207: new           #65                 // class java/lang/AssertionError
    4210: dup
    4211: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    4214: athrow
    4215: aload_0
    4216: sipush        132
    4219: aload_3
    4220: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4223: iconst_1
    4224: if_icmpeq     4231
    4227: iconst_1
    4228: goto          4232
    4231: iconst_0
    4232: invokestatic  #55                 // Method intValue:(Z)I
    4235: iadd
    4236: aload_3
    4237: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4240: iconst_2
    4241: if_icmpne     4248
    4244: iconst_1
    4245: goto          4249
    4248: iconst_0
    4249: aload_3
    4250: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4253: bipush        8
    4255: if_icmpne     4262
    4258: iconst_1
    4259: goto          4263
    4262: iconst_0
    4263: aload_3
    4264: checkcast     #58                 // class jnr/x86asm/BaseReg
    4267: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    4270: aload_2
    4271: iconst_0
    4272: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    4275: return
    4276: aload_2
    4277: iconst_0
    4278: invokevirtual #112                // Method jnr/x86asm/Operand.isRegIndex:(I)Z
    4281: ifeq          4388
    4284: aload_3
    4285: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    4288: ifeq          4388
    4291: aload_2
    4292: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4295: iconst_4
    4296: if_icmpgt     4306
    4299: aload_2
    4300: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4303: goto          4307
    4306: iconst_4
    4307: istore        6
    4309: aload_2
    4310: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4313: iconst_2
    4314: if_icmpne     4323
    4317: aload_0
    4318: bipush        102
    4320: invokevirtual #38                 // Method _emitByte:(I)V
    4323: aload_0
    4324: invokevirtual #36                 // Method is64:()Z
    4327: ifeq          4350
    4330: aload_0
    4331: aload_2
    4332: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4335: bipush        8
    4337: if_icmpne     4344
    4340: iconst_1
    4341: goto          4345
    4344: iconst_0
    4345: iconst_0
    4346: aload_2
    4347: invokevirtual #159                // Method _emitRexRM:(ZILjnr/x86asm/Operand;)V
    4350: aload_0
    4351: sipush        168
    4354: aload_2
    4355: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4358: iconst_1
    4359: if_icmpeq     4366
    4362: iconst_1
    4363: goto          4367
    4366: iconst_0
    4367: invokestatic  #55                 // Method intValue:(Z)I
    4370: iadd
    4371: invokevirtual #38                 // Method _emitByte:(I)V
    4374: aload_0
    4375: aload_3
    4376: checkcast     #114                // class jnr/x86asm/Immediate
    4379: checkcast     #114                // class jnr/x86asm/Immediate
    4382: iload         6
    4384: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    4387: return
    4388: aload_2
    4389: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    4392: ifeq          7913
    4395: aload_3
    4396: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    4399: ifeq          7913
    4402: aload_2
    4403: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4406: iconst_4
    4407: if_icmpgt     4417
    4410: aload_2
    4411: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4414: goto          4418
    4417: iconst_4
    4418: istore        6
    4420: aload_2
    4421: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4424: iconst_2
    4425: if_icmpne     4434
    4428: aload_0
    4429: bipush        102
    4431: invokevirtual #38                 // Method _emitByte:(I)V
    4434: aload_0
    4435: aload_2
    4436: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
    4439: aload_0
    4440: invokevirtual #36                 // Method is64:()Z
    4443: ifeq          4466
    4446: aload_0
    4447: aload_2
    4448: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4451: bipush        8
    4453: if_icmpne     4460
    4456: iconst_1
    4457: goto          4461
    4460: iconst_0
    4461: iconst_0
    4462: aload_2
    4463: invokevirtual #159                // Method _emitRexRM:(ZILjnr/x86asm/Operand;)V
    4466: aload_0
    4467: sipush        246
    4470: aload_2
    4471: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4474: iconst_1
    4475: if_icmpeq     4482
    4478: iconst_1
    4479: goto          4483
    4482: iconst_0
    4483: invokestatic  #55                 // Method intValue:(Z)I
    4486: iadd
    4487: invokevirtual #38                 // Method _emitByte:(I)V
    4490: aload_0
    4491: iconst_0
    4492: aload_2
    4493: iload         6
    4495: invokevirtual #99                 // Method _emitModRM:(ILjnr/x86asm/Operand;I)V
    4498: aload_0
    4499: aload_3
    4500: checkcast     #114                // class jnr/x86asm/Immediate
    4503: checkcast     #114                // class jnr/x86asm/Immediate
    4506: iload         6
    4508: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    4511: return
    4512: aload_2
    4513: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    4516: ifeq          7913
    4519: aload_3
    4520: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4523: ifeq          7913
    4526: aload_2
    4527: astore        6
    4529: aload_3
    4530: checkcast     #108                // class jnr/x86asm/Register
    4533: checkcast     #108                // class jnr/x86asm/Register
    4536: astore        7
    4538: aload         7
    4540: bipush        16
    4542: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    4545: ifeq          4554
    4548: aload_0
    4549: bipush        102
    4551: invokevirtual #38                 // Method _emitByte:(I)V
    4554: aload_0
    4555: aload         6
    4557: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
    4560: aload_0
    4561: invokevirtual #36                 // Method is64:()Z
    4564: ifeq          4585
    4567: aload_0
    4568: aload         7
    4570: bipush        48
    4572: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    4575: aload         7
    4577: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4580: aload         6
    4582: invokevirtual #159                // Method _emitRexRM:(ZILjnr/x86asm/Operand;)V
    4585: aload         6
    4587: invokevirtual #94                 // Method jnr/x86asm/Operand.op:()I
    4590: iconst_1
    4591: if_icmpne     4650
    4594: aload         6
    4596: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4599: iconst_1
    4600: if_icmple     4650
    4603: aload         6
    4605: checkcast     #108                // class jnr/x86asm/Register
    4608: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4611: ifeq          4622
    4614: aload         7
    4616: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4619: ifne          4650
    4622: aload         6
    4624: checkcast     #108                // class jnr/x86asm/Register
    4627: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4630: aload         7
    4632: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4635: ior
    4636: istore        8
    4638: aload_0
    4639: sipush        144
    4642: iload         8
    4644: iadd
    4645: i2b
    4646: invokevirtual #38                 // Method _emitByte:(I)V
    4649: return
    4650: aload_0
    4651: sipush        134
    4654: aload         7
    4656: iconst_0
    4657: invokevirtual #121                // Method jnr/x86asm/Register.isRegType:(I)Z
    4660: ifne          4667
    4663: iconst_1
    4664: goto          4668
    4667: iconst_0
    4668: invokestatic  #55                 // Method intValue:(Z)I
    4671: iadd
    4672: invokevirtual #38                 // Method _emitByte:(I)V
    4675: aload_0
    4676: aload         7
    4678: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4681: aload         6
    4683: iconst_0
    4684: invokevirtual #99                 // Method _emitModRM:(ILjnr/x86asm/Operand;I)V
    4687: return
    4688: aload_2
    4689: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4692: ifeq          4736
    4695: aload_3
    4696: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    4699: ifeq          4736
    4702: aload_0
    4703: ldc           #160                // int 997616
    4705: aload_2
    4706: bipush        16
    4708: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    4711: aload_2
    4712: bipush        48
    4714: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    4717: aload_2
    4718: checkcast     #108                // class jnr/x86asm/Register
    4721: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4724: aload_3
    4725: checkcast     #42                 // class jnr/x86asm/Mem
    4728: checkcast     #42                 // class jnr/x86asm/Mem
    4731: iconst_0
    4732: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    4735: return
    4736: aload_2
    4737: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    4740: ifeq          7913
    4743: aload_3
    4744: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    4747: ifeq          7913
    4750: aload_0
    4751: ldc           #161                // int 997617
    4753: aload_3
    4754: bipush        16
    4756: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    4759: aload_3
    4760: bipush        48
    4762: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    4765: aload_3
    4766: checkcast     #108                // class jnr/x86asm/Register
    4769: invokevirtual #109                // Method jnr/x86asm/Register.code:()I
    4772: aload_2
    4773: checkcast     #42                 // class jnr/x86asm/Mem
    4776: checkcast     #42                 // class jnr/x86asm/Mem
    4779: iconst_0
    4780: invokevirtual #110                // Method _emitX86RM:(IZZILjnr/x86asm/Operand;I)V
    4783: return
    4784: aload_2
    4785: bipush        80
    4787: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    4790: ifeq          4943
    4793: aload_2
    4794: checkcast     #162                // class jnr/x86asm/X87Register
    4797: invokevirtual #163                // Method jnr/x86asm/X87Register.index:()I
    4800: istore        6
    4802: iconst_0
    4803: istore        7
    4805: aload_1
    4806: getstatic     #164                // Field jnr/x86asm/INST_CODE.INST_FCOM:Ljnr/x86asm/INST_CODE;
    4809: if_acmpeq     4850
    4812: aload_1
    4813: getstatic     #165                // Field jnr/x86asm/INST_CODE.INST_FCOMP:Ljnr/x86asm/INST_CODE;
    4816: if_acmpeq     4850
    4819: aload_3
    4820: bipush        80
    4822: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    4825: ifne          4838
    4828: new           #29                 // class java/lang/IllegalArgumentException
    4831: dup
    4832: ldc           #166                // String not x87 reg
    4834: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    4837: athrow
    4838: aload_3
    4839: checkcast     #162                // class jnr/x86asm/X87Register
    4842: invokevirtual #163                // Method jnr/x86asm/X87Register.index:()I
    4845: istore        7
    4847: goto          4870
    4850: iload         6
    4852: ifeq          4870
    4855: iload         7
    4857: ifeq          4870
    4860: new           #29                 // class java/lang/IllegalArgumentException
    4863: dup
    4864: ldc           #156                // String illegal instruction
    4866: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    4869: athrow
    4870: aload_0
    4871: iload         6
    4873: ifne          4890
    4876: aload         5
    4878: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    4881: ldc           #37                 // int -16777216
    4883: iand
    4884: bipush        24
    4886: ishr
    4887: goto          4901
    4890: aload         5
    4892: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    4895: ldc           #39                 // int 16711680
    4897: iand
    4898: bipush        16
    4900: ishr
    4901: invokevirtual #38                 // Method _emitByte:(I)V
    4904: aload_0
    4905: iload         6
    4907: ifne          4927
    4910: aload         5
    4912: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    4915: ldc           #40                 // int 65280
    4917: iand
    4918: bipush        8
    4920: ishr
    4921: iload         7
    4923: iadd
    4924: goto          4939
    4927: aload         5
    4929: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    4932: sipush        255
    4935: iand
    4936: iload         6
    4938: iadd
    4939: invokevirtual #38                 // Method _emitByte:(I)V
    4942: return
    4943: aload_2
    4944: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    4947: ifeq          7913
    4950: aload_2
    4951: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4954: iconst_4
    4955: if_icmpeq     4967
    4958: aload_2
    4959: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4962: bipush        8
    4964: if_icmpne     7913
    4967: aload_3
    4968: invokevirtual #130                // Method jnr/x86asm/Operand.isNone:()Z
    4971: ifeq          7913
    4974: aload_2
    4975: checkcast     #42                 // class jnr/x86asm/Mem
    4978: checkcast     #42                 // class jnr/x86asm/Mem
    4981: astore        6
    4983: aload_0
    4984: aload         6
    4986: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
    4989: aload_0
    4990: aload_2
    4991: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    4994: iconst_4
    4995: if_icmpne     5012
    4998: aload         5
    5000: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5003: ldc           #37                 // int -16777216
    5005: iand
    5006: bipush        24
    5008: ishr
    5009: goto          5023
    5012: aload         5
    5014: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5017: ldc           #39                 // int 16711680
    5019: iand
    5020: bipush        16
    5022: ishr
    5023: invokevirtual #38                 // Method _emitByte:(I)V
    5026: aload_0
    5027: aload         5
    5029: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    5032: aload         6
    5034: iconst_0
    5035: invokevirtual #96                 // Method _emitModM:(ILjnr/x86asm/Mem;I)V
    5038: return
    5039: aload_2
    5040: bipush        80
    5042: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5045: ifeq          7913
    5048: aload_2
    5049: checkcast     #162                // class jnr/x86asm/X87Register
    5052: invokevirtual #163                // Method jnr/x86asm/X87Register.index:()I
    5055: istore        6
    5057: aload_0
    5058: aload         5
    5060: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5063: ldc           #40                 // int 65280
    5065: iand
    5066: bipush        8
    5068: ishr
    5069: invokevirtual #38                 // Method _emitByte:(I)V
    5072: aload_0
    5073: aload         5
    5075: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5078: sipush        255
    5081: iand
    5082: iload         6
    5084: iadd
    5085: invokevirtual #38                 // Method _emitByte:(I)V
    5088: return
    5089: aload_2
    5090: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    5093: ifeq          5128
    5096: aload_2
    5097: checkcast     #58                 // class jnr/x86asm/BaseReg
    5100: invokevirtual #167                // Method jnr/x86asm/BaseReg.type:()I
    5103: bipush        48
    5105: if_icmpgt     5128
    5108: aload_2
    5109: checkcast     #58                 // class jnr/x86asm/BaseReg
    5112: invokevirtual #168                // Method jnr/x86asm/BaseReg.index:()I
    5115: ifne          5128
    5118: aload_0
    5119: aload         5
    5121: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    5124: invokevirtual #105                // Method _emitOpCode:(I)V
    5127: return
    5128: aload_2
    5129: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5132: ifeq          7913
    5135: aload_0
    5136: aload         5
    5138: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5141: iconst_0
    5142: iconst_0
    5143: aload         5
    5145: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    5148: aload_2
    5149: checkcast     #42                 // class jnr/x86asm/Mem
    5152: checkcast     #42                 // class jnr/x86asm/Mem
    5155: iconst_0
    5156: invokevirtual #97                 // Method _emitX86RM:(IZIILjnr/x86asm/Operand;I)V
    5159: return
    5160: aload_2
    5161: bipush        80
    5163: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5166: ifeq          5208
    5169: aload_0
    5170: aload         5
    5172: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    5175: ldc           #37                 // int -16777216
    5177: iand
    5178: bipush        24
    5180: ishr
    5181: invokevirtual #38                 // Method _emitByte:(I)V
    5184: aload_0
    5185: aload         5
    5187: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    5190: ldc           #39                 // int 16711680
    5192: iand
    5193: bipush        16
    5195: ishr
    5196: aload_2
    5197: checkcast     #162                // class jnr/x86asm/X87Register
    5200: invokevirtual #163                // Method jnr/x86asm/X87Register.index:()I
    5203: iadd
    5204: invokevirtual #38                 // Method _emitByte:(I)V
    5207: return
    5208: aload_2
    5209: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5212: ifne          5225
    5215: new           #29                 // class java/lang/IllegalArgumentException
    5218: dup
    5219: ldc           #169                // String not x87 mem
    5221: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    5224: athrow
    5225: aload_2
    5226: checkcast     #42                 // class jnr/x86asm/Mem
    5229: checkcast     #42                 // class jnr/x86asm/Mem
    5232: astore        6
    5234: iconst_0
    5235: istore        7
    5237: iconst_0
    5238: istore        8
    5240: aload_2
    5241: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    5244: iconst_2
    5245: if_icmpne     5278
    5248: aload         5
    5250: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5253: iconst_2
    5254: iand
    5255: ifeq          5278
    5258: aload         5
    5260: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5263: ldc           #37                 // int -16777216
    5265: iand
    5266: bipush        24
    5268: ishr
    5269: istore        7
    5271: aload         5
    5273: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    5276: istore        8
    5278: aload_2
    5279: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    5282: iconst_4
    5283: if_icmpne     5316
    5286: aload         5
    5288: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5291: iconst_4
    5292: iand
    5293: ifeq          5316
    5296: aload         5
    5298: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5301: ldc           #39                 // int 16711680
    5303: iand
    5304: bipush        16
    5306: ishr
    5307: istore        7
    5309: aload         5
    5311: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    5314: istore        8
    5316: aload_2
    5317: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    5320: bipush        8
    5322: if_icmpne     5360
    5325: aload         5
    5327: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5330: bipush        8
    5332: iand
    5333: ifeq          5360
    5336: aload         5
    5338: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5341: ldc           #40                 // int 65280
    5343: iand
    5344: bipush        8
    5346: ishr
    5347: istore        7
    5349: aload         5
    5351: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5354: sipush        255
    5357: iand
    5358: istore        8
    5360: iload         7
    5362: ifeq          7913
    5365: aload_0
    5366: aload         6
    5368: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
    5371: aload_0
    5372: iload         7
    5374: invokevirtual #38                 // Method _emitByte:(I)V
    5377: aload_0
    5378: iload         8
    5380: aload         6
    5382: iconst_0
    5383: invokevirtual #96                 // Method _emitModM:(ILjnr/x86asm/Mem;I)V
    5386: return
    5387: getstatic     #63                 // Field $assertionsDisabled:Z
    5390: ifne          5409
    5393: aload         5
    5395: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5398: ifne          5409
    5401: new           #65                 // class java/lang/AssertionError
    5404: dup
    5405: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    5408: athrow
    5409: getstatic     #63                 // Field $assertionsDisabled:Z
    5412: ifne          5431
    5415: aload         5
    5417: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5420: ifne          5431
    5423: new           #65                 // class java/lang/AssertionError
    5426: dup
    5427: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    5430: athrow
    5431: aload_2
    5432: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5435: ifeq          5449
    5438: aload         5
    5440: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5443: bipush        64
    5445: iand
    5446: ifeq          5625
    5449: aload_2
    5450: bipush        96
    5452: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5455: ifeq          5469
    5458: aload         5
    5460: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5463: bipush        16
    5465: iand
    5466: ifeq          5625
    5469: aload_2
    5470: bipush        112
    5472: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5475: ifeq          5489
    5478: aload         5
    5480: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5483: bipush        32
    5485: iand
    5486: ifeq          5625
    5489: aload_2
    5490: bipush        32
    5492: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5495: ifeq          5508
    5498: aload         5
    5500: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5503: iconst_4
    5504: iand
    5505: ifeq          5625
    5508: aload_2
    5509: bipush        48
    5511: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5514: ifeq          5528
    5517: aload         5
    5519: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5522: bipush        8
    5524: iand
    5525: ifeq          5625
    5528: aload_3
    5529: bipush        96
    5531: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5534: ifeq          5548
    5537: aload         5
    5539: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5542: bipush        16
    5544: iand
    5545: ifeq          5625
    5548: aload_3
    5549: bipush        112
    5551: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5554: ifeq          5568
    5557: aload         5
    5559: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5562: bipush        32
    5564: iand
    5565: ifeq          5625
    5568: aload_3
    5569: bipush        32
    5571: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5574: ifeq          5587
    5577: aload         5
    5579: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5582: iconst_4
    5583: iand
    5584: ifeq          5625
    5587: aload_3
    5588: bipush        48
    5590: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5593: ifeq          5607
    5596: aload         5
    5598: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5601: bipush        8
    5603: iand
    5604: ifeq          5625
    5607: aload_3
    5608: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5611: ifeq          5635
    5614: aload         5
    5616: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5619: bipush        64
    5621: iand
    5622: ifne          5635
    5625: new           #29                 // class java/lang/IllegalArgumentException
    5628: dup
    5629: ldc           #156                // String illegal instruction
    5631: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    5634: athrow
    5635: aload_2
    5636: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5639: ifeq          5659
    5642: aload_3
    5643: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5646: ifeq          5659
    5649: new           #29                 // class java/lang/IllegalArgumentException
    5652: dup
    5653: ldc           #156                // String illegal instruction
    5655: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    5658: athrow
    5659: aload         5
    5661: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    5664: aload         5
    5666: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    5669: ior
    5670: iconst_1
    5671: iand
    5672: ifeq          5679
    5675: iconst_0
    5676: goto          5705
    5679: aload_2
    5680: bipush        48
    5682: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5685: ifne          5697
    5688: aload_2
    5689: bipush        48
    5691: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5694: ifeq          5701
    5697: iconst_1
    5698: goto          5702
    5701: iconst_0
    5702: invokestatic  #55                 // Method intValue:(Z)I
    5705: istore        6
    5707: aload_2
    5708: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    5711: ifeq          5748
    5714: aload_3
    5715: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    5718: ifeq          5748
    5721: aload_0
    5722: aload         5
    5724: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5727: iload         6
    5729: aload_2
    5730: checkcast     #58                 // class jnr/x86asm/BaseReg
    5733: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    5736: aload_3
    5737: checkcast     #58                 // class jnr/x86asm/BaseReg
    5740: checkcast     #58                 // class jnr/x86asm/BaseReg
    5743: iconst_0
    5744: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    5747: return
    5748: aload_2
    5749: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    5752: ifeq          5789
    5755: aload_3
    5756: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5759: ifeq          5789
    5762: aload_0
    5763: aload         5
    5765: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    5768: iload         6
    5770: aload_2
    5771: checkcast     #58                 // class jnr/x86asm/BaseReg
    5774: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    5777: aload_3
    5778: checkcast     #42                 // class jnr/x86asm/Mem
    5781: checkcast     #42                 // class jnr/x86asm/Mem
    5784: iconst_0
    5785: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    5788: return
    5789: aload_2
    5790: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5793: ifeq          7913
    5796: aload_3
    5797: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    5800: ifeq          7913
    5803: aload_0
    5804: aload         5
    5806: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    5809: iload         6
    5811: aload_3
    5812: checkcast     #58                 // class jnr/x86asm/BaseReg
    5815: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    5818: aload_2
    5819: checkcast     #42                 // class jnr/x86asm/Mem
    5822: checkcast     #42                 // class jnr/x86asm/Mem
    5825: iconst_0
    5826: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    5829: return
    5830: aload_2
    5831: bipush        96
    5833: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5836: ifne          5848
    5839: aload_2
    5840: bipush        112
    5842: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5845: ifeq          5896
    5848: aload_3
    5849: bipush        32
    5851: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5854: ifne          5864
    5857: aload_3
    5858: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5861: ifeq          5896
    5864: aload_0
    5865: aload_2
    5866: bipush        112
    5868: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5871: ifeq          5879
    5874: ldc           #173                // int 1711279982
    5876: goto          5882
    5879: sipush        3950
    5882: iconst_0
    5883: aload_2
    5884: checkcast     #58                 // class jnr/x86asm/BaseReg
    5887: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    5890: aload_3
    5891: iconst_0
    5892: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    5895: return
    5896: aload_2
    5897: bipush        32
    5899: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5902: ifne          5912
    5905: aload_2
    5906: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    5909: ifeq          7913
    5912: aload_3
    5913: bipush        96
    5915: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5918: ifne          5930
    5921: aload_3
    5922: bipush        112
    5924: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5927: ifeq          7913
    5930: aload_0
    5931: aload_3
    5932: bipush        112
    5934: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5937: ifeq          5945
    5940: ldc           #174                // int 1711279998
    5942: goto          5948
    5945: sipush        3966
    5948: iconst_0
    5949: aload_3
    5950: checkcast     #58                 // class jnr/x86asm/BaseReg
    5953: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    5956: aload_2
    5957: iconst_0
    5958: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    5961: return
    5962: aload_2
    5963: bipush        96
    5965: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5968: ifeq          6004
    5971: aload_3
    5972: bipush        96
    5974: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    5977: ifeq          6004
    5980: aload_0
    5981: sipush        3951
    5984: iconst_0
    5985: aload_2
    5986: checkcast     #175                // class jnr/x86asm/MMRegister
    5989: invokevirtual #176                // Method jnr/x86asm/MMRegister.code:()I
    5992: aload_3
    5993: checkcast     #175                // class jnr/x86asm/MMRegister
    5996: checkcast     #175                // class jnr/x86asm/MMRegister
    5999: iconst_0
    6000: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6003: return
    6004: aload_2
    6005: bipush        112
    6007: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6010: ifeq          6045
    6013: aload_3
    6014: bipush        112
    6016: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6019: ifeq          6045
    6022: aload_0
    6023: ldc           #177                // int -218099842
    6025: iconst_0
    6026: aload_2
    6027: checkcast     #178                // class jnr/x86asm/XMMRegister
    6030: invokevirtual #179                // Method jnr/x86asm/XMMRegister.code:()I
    6033: aload_3
    6034: checkcast     #178                // class jnr/x86asm/XMMRegister
    6037: checkcast     #178                // class jnr/x86asm/XMMRegister
    6040: iconst_0
    6041: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6044: return
    6045: aload_2
    6046: bipush        96
    6048: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6051: ifeq          6086
    6054: aload_3
    6055: bipush        112
    6057: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6060: ifeq          6086
    6063: aload_0
    6064: ldc           #180                // int -234876970
    6066: iconst_0
    6067: aload_2
    6068: checkcast     #175                // class jnr/x86asm/MMRegister
    6071: invokevirtual #176                // Method jnr/x86asm/MMRegister.code:()I
    6074: aload_3
    6075: checkcast     #178                // class jnr/x86asm/XMMRegister
    6078: checkcast     #178                // class jnr/x86asm/XMMRegister
    6081: iconst_0
    6082: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6085: return
    6086: aload_2
    6087: bipush        112
    6089: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6092: ifeq          6127
    6095: aload_3
    6096: bipush        96
    6098: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6101: ifeq          6127
    6104: aload_0
    6105: ldc           #181                // int -218099754
    6107: iconst_0
    6108: aload_2
    6109: checkcast     #178                // class jnr/x86asm/XMMRegister
    6112: invokevirtual #179                // Method jnr/x86asm/XMMRegister.code:()I
    6115: aload_3
    6116: checkcast     #175                // class jnr/x86asm/MMRegister
    6119: checkcast     #175                // class jnr/x86asm/MMRegister
    6122: iconst_0
    6123: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6126: return
    6127: aload_2
    6128: bipush        96
    6130: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6133: ifeq          6167
    6136: aload_3
    6137: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6140: ifeq          6167
    6143: aload_0
    6144: sipush        3951
    6147: iconst_0
    6148: aload_2
    6149: checkcast     #175                // class jnr/x86asm/MMRegister
    6152: invokevirtual #176                // Method jnr/x86asm/MMRegister.code:()I
    6155: aload_3
    6156: checkcast     #42                 // class jnr/x86asm/Mem
    6159: checkcast     #42                 // class jnr/x86asm/Mem
    6162: iconst_0
    6163: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6166: return
    6167: aload_2
    6168: bipush        112
    6170: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6173: ifeq          6206
    6176: aload_3
    6177: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6180: ifeq          6206
    6183: aload_0
    6184: ldc           #177                // int -218099842
    6186: iconst_0
    6187: aload_2
    6188: checkcast     #178                // class jnr/x86asm/XMMRegister
    6191: invokevirtual #179                // Method jnr/x86asm/XMMRegister.code:()I
    6194: aload_3
    6195: checkcast     #42                 // class jnr/x86asm/Mem
    6198: checkcast     #42                 // class jnr/x86asm/Mem
    6201: iconst_0
    6202: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6205: return
    6206: aload_2
    6207: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6210: ifeq          6246
    6213: aload_3
    6214: bipush        96
    6216: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6219: ifeq          6246
    6222: aload_0
    6223: sipush        3967
    6226: iconst_0
    6227: aload_3
    6228: checkcast     #175                // class jnr/x86asm/MMRegister
    6231: invokevirtual #176                // Method jnr/x86asm/MMRegister.code:()I
    6234: aload_2
    6235: checkcast     #42                 // class jnr/x86asm/Mem
    6238: checkcast     #42                 // class jnr/x86asm/Mem
    6241: iconst_0
    6242: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6245: return
    6246: aload_2
    6247: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6250: ifeq          6285
    6253: aload_3
    6254: bipush        112
    6256: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6259: ifeq          6285
    6262: aload_0
    6263: ldc           #182                // int 1711280086
    6265: iconst_0
    6266: aload_3
    6267: checkcast     #178                // class jnr/x86asm/XMMRegister
    6270: invokevirtual #179                // Method jnr/x86asm/XMMRegister.code:()I
    6273: aload_2
    6274: checkcast     #42                 // class jnr/x86asm/Mem
    6277: checkcast     #42                 // class jnr/x86asm/Mem
    6280: iconst_0
    6281: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6284: return
    6285: aload_0
    6286: invokevirtual #36                 // Method is64:()Z
    6289: ifeq          7913
    6292: aload_2
    6293: bipush        96
    6295: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6298: ifne          6310
    6301: aload_2
    6302: bipush        112
    6304: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6307: ifeq          6358
    6310: aload_3
    6311: bipush        48
    6313: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6316: ifne          6326
    6319: aload_3
    6320: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6323: ifeq          6358
    6326: aload_0
    6327: aload_2
    6328: bipush        112
    6330: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6333: ifeq          6341
    6336: ldc           #173                // int 1711279982
    6338: goto          6344
    6341: sipush        3950
    6344: iconst_1
    6345: aload_2
    6346: checkcast     #58                 // class jnr/x86asm/BaseReg
    6349: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    6352: aload_3
    6353: iconst_0
    6354: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6357: return
    6358: aload_2
    6359: bipush        48
    6361: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6364: ifne          6374
    6367: aload_2
    6368: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6371: ifeq          7913
    6374: aload_3
    6375: bipush        96
    6377: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6380: ifne          6392
    6383: aload_3
    6384: bipush        112
    6386: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6389: ifeq          7913
    6392: aload_0
    6393: aload_3
    6394: bipush        112
    6396: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6399: ifeq          6407
    6402: ldc           #174                // int 1711279998
    6404: goto          6410
    6407: sipush        3966
    6410: iconst_1
    6411: aload_3
    6412: checkcast     #58                 // class jnr/x86asm/BaseReg
    6415: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    6418: aload_2
    6419: iconst_0
    6420: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6423: return
    6424: aload_2
    6425: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6428: ifeq          7913
    6431: aload_3
    6432: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    6435: ifeq          7913
    6438: aload_2
    6439: checkcast     #42                 // class jnr/x86asm/Mem
    6442: checkcast     #42                 // class jnr/x86asm/Mem
    6445: astore        6
    6447: aload_3
    6448: checkcast     #114                // class jnr/x86asm/Immediate
    6451: checkcast     #114                // class jnr/x86asm/Immediate
    6454: astore        7
    6456: aload_0
    6457: sipush        3864
    6460: iconst_0
    6461: aload         7
    6463: invokevirtual #117                // Method jnr/x86asm/Immediate.value:()J
    6466: l2i
    6467: aload         6
    6469: iconst_0
    6470: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6473: return
    6474: aload_2
    6475: invokevirtual #111                // Method jnr/x86asm/Operand.isRegMem:()Z
    6478: ifeq          6514
    6481: aload_3
    6482: bipush        112
    6484: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6487: ifne          6506
    6490: aload_1
    6491: getstatic     #183                // Field jnr/x86asm/INST_CODE.INST_PEXTRW:Ljnr/x86asm/INST_CODE;
    6494: if_acmpne     6514
    6497: aload_3
    6498: bipush        96
    6500: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6503: ifeq          6514
    6506: aload         4
    6508: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    6511: ifne          6524
    6514: new           #149                // class java/lang/IllegalStateException
    6517: dup
    6518: ldc           #156                // String illegal instruction
    6520: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    6523: athrow
    6524: aload         5
    6526: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    6529: istore        6
    6531: aload_2
    6532: bipush        32
    6534: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6537: ifne          6549
    6540: aload_2
    6541: bipush        48
    6543: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6546: ifeq          6553
    6549: iconst_1
    6550: goto          6554
    6553: iconst_0
    6554: istore        7
    6556: aload_1
    6557: getstatic     #184                // Field jnr/x86asm/INST_CODE.INST_PEXTRB:Ljnr/x86asm/INST_CODE;
    6560: if_acmpne     6593
    6563: aload_2
    6564: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6567: ifeq          6593
    6570: aload_2
    6571: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6574: iconst_1
    6575: if_icmpeq     6593
    6578: iload         7
    6580: ifne          6593
    6583: new           #149                // class java/lang/IllegalStateException
    6586: dup
    6587: ldc           #156                // String illegal instruction
    6589: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    6592: athrow
    6593: aload_1
    6594: getstatic     #183                // Field jnr/x86asm/INST_CODE.INST_PEXTRW:Ljnr/x86asm/INST_CODE;
    6597: if_acmpne     6630
    6600: aload_2
    6601: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6604: ifeq          6630
    6607: aload_2
    6608: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6611: iconst_2
    6612: if_icmpeq     6630
    6615: iload         7
    6617: ifne          6630
    6620: new           #149                // class java/lang/IllegalStateException
    6623: dup
    6624: ldc           #156                // String illegal instruction
    6626: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    6629: athrow
    6630: aload_1
    6631: getstatic     #185                // Field jnr/x86asm/INST_CODE.INST_PEXTRD:Ljnr/x86asm/INST_CODE;
    6634: if_acmpne     6667
    6637: aload_2
    6638: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6641: ifeq          6667
    6644: aload_2
    6645: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6648: iconst_4
    6649: if_icmpeq     6667
    6652: iload         7
    6654: ifne          6667
    6657: new           #149                // class java/lang/IllegalStateException
    6660: dup
    6661: ldc           #156                // String illegal instruction
    6663: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    6666: athrow
    6667: aload_1
    6668: getstatic     #186                // Field jnr/x86asm/INST_CODE.INST_PEXTRQ:Ljnr/x86asm/INST_CODE;
    6671: if_acmpne     6705
    6674: aload_2
    6675: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6678: ifeq          6705
    6681: aload_2
    6682: invokevirtual #115                // Method jnr/x86asm/Operand.size:()I
    6685: bipush        8
    6687: if_icmpeq     6705
    6690: iload         7
    6692: ifne          6705
    6695: new           #149                // class java/lang/IllegalStateException
    6698: dup
    6699: ldc           #156                // String illegal instruction
    6701: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    6704: athrow
    6705: aload_3
    6706: bipush        112
    6708: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6711: ifeq          6721
    6714: iload         6
    6716: ldc           #187                // int 1711276032
    6718: ior
    6719: istore        6
    6721: aload_2
    6722: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    6725: ifeq          6778
    6728: aload_0
    6729: iload         6
    6731: aload         5
    6733: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    6736: aload_2
    6737: bipush        48
    6739: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6742: invokestatic  #55                 // Method intValue:(Z)I
    6745: ior
    6746: aload_3
    6747: checkcast     #58                 // class jnr/x86asm/BaseReg
    6750: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    6753: aload_2
    6754: checkcast     #58                 // class jnr/x86asm/BaseReg
    6757: checkcast     #58                 // class jnr/x86asm/BaseReg
    6760: iconst_1
    6761: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6764: aload_0
    6765: aload         4
    6767: checkcast     #114                // class jnr/x86asm/Immediate
    6770: checkcast     #114                // class jnr/x86asm/Immediate
    6773: iconst_1
    6774: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    6777: return
    6778: aload_2
    6779: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    6782: ifeq          7913
    6785: aload_0
    6786: iload         6
    6788: aload         5
    6790: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    6793: aload_3
    6794: checkcast     #58                 // class jnr/x86asm/BaseReg
    6797: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    6800: aload_2
    6801: checkcast     #42                 // class jnr/x86asm/Mem
    6804: checkcast     #42                 // class jnr/x86asm/Mem
    6807: iconst_1
    6808: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    6811: aload_0
    6812: aload         4
    6814: checkcast     #114                // class jnr/x86asm/Immediate
    6817: checkcast     #114                // class jnr/x86asm/Immediate
    6820: iconst_1
    6821: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    6824: return
    6825: getstatic     #63                 // Field $assertionsDisabled:Z
    6828: ifne          6847
    6831: aload         5
    6833: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    6836: ifne          6847
    6839: new           #65                 // class java/lang/AssertionError
    6842: dup
    6843: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    6846: athrow
    6847: getstatic     #63                 // Field $assertionsDisabled:Z
    6850: ifne          6869
    6853: aload         5
    6855: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    6858: ifne          6869
    6861: new           #65                 // class java/lang/AssertionError
    6864: dup
    6865: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    6868: athrow
    6869: aload_2
    6870: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    6873: ifeq          7071
    6876: aload_2
    6877: bipush        96
    6879: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6882: ifeq          6896
    6885: aload         5
    6887: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    6890: bipush        16
    6892: iand
    6893: ifeq          7071
    6896: aload_2
    6897: bipush        112
    6899: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6902: ifeq          6916
    6905: aload         5
    6907: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    6910: bipush        32
    6912: iand
    6913: ifeq          7071
    6916: aload_2
    6917: bipush        32
    6919: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6922: ifeq          6935
    6925: aload         5
    6927: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    6930: iconst_4
    6931: iand
    6932: ifeq          7071
    6935: aload_2
    6936: bipush        48
    6938: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6941: ifeq          6955
    6944: aload         5
    6946: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    6949: bipush        8
    6951: iand
    6952: ifeq          7071
    6955: aload_3
    6956: bipush        96
    6958: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6961: ifeq          6975
    6964: aload         5
    6966: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    6969: bipush        16
    6971: iand
    6972: ifeq          7071
    6975: aload_3
    6976: bipush        112
    6978: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    6981: ifeq          6995
    6984: aload         5
    6986: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    6989: bipush        32
    6991: iand
    6992: ifeq          7071
    6995: aload_3
    6996: bipush        32
    6998: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7001: ifeq          7014
    7004: aload         5
    7006: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7009: iconst_4
    7010: iand
    7011: ifeq          7071
    7014: aload_3
    7015: bipush        48
    7017: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7020: ifeq          7034
    7023: aload         5
    7025: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7028: bipush        8
    7030: iand
    7031: ifeq          7071
    7034: aload_3
    7035: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    7038: ifeq          7052
    7041: aload         5
    7043: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7046: bipush        64
    7048: iand
    7049: ifeq          7071
    7052: aload_3
    7053: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    7056: ifeq          7081
    7059: aload         5
    7061: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7064: sipush        128
    7067: iand
    7068: ifne          7081
    7071: new           #149                // class java/lang/IllegalStateException
    7074: dup
    7075: ldc           #156                // String illegal instruction
    7077: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7080: athrow
    7081: aload         5
    7083: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7086: bipush        48
    7088: iand
    7089: bipush        48
    7091: if_icmpne     7103
    7094: aload_2
    7095: bipush        112
    7097: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7100: ifne          7125
    7103: aload         5
    7105: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7108: bipush        48
    7110: iand
    7111: bipush        48
    7113: if_icmpne     7130
    7116: aload_3
    7117: bipush        112
    7119: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7122: ifeq          7130
    7125: ldc           #187                // int 1711276032
    7127: goto          7131
    7130: iconst_0
    7131: istore        6
    7133: aload         5
    7135: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7138: aload         5
    7140: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7143: ior
    7144: iconst_1
    7145: iand
    7146: ifeq          7153
    7149: iconst_0
    7150: goto          7179
    7153: aload_2
    7154: bipush        48
    7156: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7159: ifne          7171
    7162: aload_2
    7163: bipush        48
    7165: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7168: ifeq          7175
    7171: iconst_1
    7172: goto          7176
    7175: iconst_0
    7176: invokestatic  #55                 // Method intValue:(Z)I
    7179: istore        7
    7181: aload_3
    7182: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    7185: ifeq          7239
    7188: aload         5
    7190: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7193: bipush        60
    7195: iand
    7196: ifne          7209
    7199: new           #149                // class java/lang/IllegalStateException
    7202: dup
    7203: ldc           #156                // String illegal instruction
    7205: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7208: athrow
    7209: aload_0
    7210: aload         5
    7212: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    7215: iload         6
    7217: ior
    7218: iload         7
    7220: aload_2
    7221: checkcast     #58                 // class jnr/x86asm/BaseReg
    7224: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    7227: aload_3
    7228: checkcast     #58                 // class jnr/x86asm/BaseReg
    7231: checkcast     #58                 // class jnr/x86asm/BaseReg
    7234: iconst_0
    7235: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    7238: return
    7239: aload_3
    7240: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    7243: ifeq          7297
    7246: aload         5
    7248: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7251: bipush        64
    7253: iand
    7254: ifne          7267
    7257: new           #149                // class java/lang/IllegalStateException
    7260: dup
    7261: ldc           #156                // String illegal instruction
    7263: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7266: athrow
    7267: aload_0
    7268: aload         5
    7270: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    7273: iload         6
    7275: ior
    7276: iload         7
    7278: aload_2
    7279: checkcast     #58                 // class jnr/x86asm/BaseReg
    7282: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    7285: aload_3
    7286: checkcast     #42                 // class jnr/x86asm/Mem
    7289: checkcast     #42                 // class jnr/x86asm/Mem
    7292: iconst_0
    7293: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    7296: return
    7297: aload_3
    7298: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    7301: ifeq          7913
    7304: aload         5
    7306: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7309: sipush        128
    7312: iand
    7313: ifne          7326
    7316: new           #149                // class java/lang/IllegalStateException
    7319: dup
    7320: ldc           #156                // String illegal instruction
    7322: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7325: athrow
    7326: aload_0
    7327: aload         5
    7329: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    7332: iload         6
    7334: ior
    7335: iload         7
    7337: aload         5
    7339: getfield      #106                // Field jnr/x86asm/InstructionDescription.opCodeR:I
    7342: aload_2
    7343: checkcast     #58                 // class jnr/x86asm/BaseReg
    7346: checkcast     #58                 // class jnr/x86asm/BaseReg
    7349: iconst_1
    7350: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    7353: aload_0
    7354: aload_3
    7355: checkcast     #114                // class jnr/x86asm/Immediate
    7358: checkcast     #114                // class jnr/x86asm/Immediate
    7361: iconst_1
    7362: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    7365: return
    7366: getstatic     #63                 // Field $assertionsDisabled:Z
    7369: ifne          7388
    7372: aload         5
    7374: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7377: ifne          7388
    7380: new           #65                 // class java/lang/AssertionError
    7383: dup
    7384: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    7387: athrow
    7388: getstatic     #63                 // Field $assertionsDisabled:Z
    7391: ifne          7410
    7394: aload         5
    7396: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7399: ifne          7410
    7402: new           #65                 // class java/lang/AssertionError
    7405: dup
    7406: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
    7409: athrow
    7410: aload_2
    7411: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    7414: ifeq          7601
    7417: aload_2
    7418: bipush        96
    7420: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7423: ifeq          7437
    7426: aload         5
    7428: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7431: bipush        16
    7433: iand
    7434: ifeq          7601
    7437: aload_2
    7438: bipush        112
    7440: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7443: ifeq          7457
    7446: aload         5
    7448: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7451: bipush        32
    7453: iand
    7454: ifeq          7601
    7457: aload_2
    7458: bipush        32
    7460: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7463: ifeq          7476
    7466: aload         5
    7468: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7471: iconst_4
    7472: iand
    7473: ifeq          7601
    7476: aload_2
    7477: bipush        48
    7479: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7482: ifeq          7496
    7485: aload         5
    7487: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7490: bipush        8
    7492: iand
    7493: ifeq          7601
    7496: aload_3
    7497: bipush        96
    7499: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7502: ifeq          7516
    7505: aload         5
    7507: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7510: bipush        16
    7512: iand
    7513: ifeq          7601
    7516: aload_3
    7517: bipush        112
    7519: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7522: ifeq          7536
    7525: aload         5
    7527: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7530: bipush        32
    7532: iand
    7533: ifeq          7601
    7536: aload_3
    7537: bipush        32
    7539: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7542: ifeq          7555
    7545: aload         5
    7547: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7550: iconst_4
    7551: iand
    7552: ifeq          7601
    7555: aload_3
    7556: bipush        48
    7558: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7561: ifeq          7575
    7564: aload         5
    7566: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7569: bipush        8
    7571: iand
    7572: ifeq          7601
    7575: aload_3
    7576: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    7579: ifeq          7593
    7582: aload         5
    7584: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7587: bipush        64
    7589: iand
    7590: ifeq          7601
    7593: aload         4
    7595: invokevirtual #113                // Method jnr/x86asm/Operand.isImm:()Z
    7598: ifne          7611
    7601: new           #149                // class java/lang/IllegalStateException
    7604: dup
    7605: ldc           #156                // String illegal instruction
    7607: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7610: athrow
    7611: aload         5
    7613: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7616: bipush        48
    7618: iand
    7619: bipush        48
    7621: if_icmpne     7633
    7624: aload_2
    7625: bipush        112
    7627: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7630: ifne          7655
    7633: aload         5
    7635: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7638: bipush        48
    7640: iand
    7641: bipush        48
    7643: if_icmpne     7660
    7646: aload_3
    7647: bipush        112
    7649: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7652: ifeq          7660
    7655: ldc           #187                // int 1711276032
    7657: goto          7661
    7660: iconst_0
    7661: istore        6
    7663: aload         5
    7665: getfield      #170                // Field jnr/x86asm/InstructionDescription.o1Flags:I
    7668: aload         5
    7670: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7673: ior
    7674: iconst_1
    7675: iand
    7676: ifeq          7683
    7679: iconst_0
    7680: goto          7709
    7683: aload_2
    7684: bipush        48
    7686: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7689: ifne          7701
    7692: aload_2
    7693: bipush        48
    7695: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7698: ifeq          7705
    7701: iconst_1
    7702: goto          7706
    7705: iconst_0
    7706: invokestatic  #55                 // Method intValue:(Z)I
    7709: istore        7
    7711: aload_3
    7712: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
    7715: ifeq          7782
    7718: aload         5
    7720: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7723: bipush        60
    7725: iand
    7726: ifne          7739
    7729: new           #149                // class java/lang/IllegalStateException
    7732: dup
    7733: ldc           #156                // String illegal instruction
    7735: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7738: athrow
    7739: aload_0
    7740: aload         5
    7742: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    7745: iload         6
    7747: ior
    7748: iload         7
    7750: aload_2
    7751: checkcast     #58                 // class jnr/x86asm/BaseReg
    7754: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    7757: aload_3
    7758: checkcast     #58                 // class jnr/x86asm/BaseReg
    7761: checkcast     #58                 // class jnr/x86asm/BaseReg
    7764: iconst_1
    7765: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    7768: aload_0
    7769: aload         4
    7771: checkcast     #114                // class jnr/x86asm/Immediate
    7774: checkcast     #114                // class jnr/x86asm/Immediate
    7777: iconst_1
    7778: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    7781: return
    7782: aload_3
    7783: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    7786: ifeq          7913
    7789: aload         5
    7791: getfield      #171                // Field jnr/x86asm/InstructionDescription.o2Flags:I
    7794: bipush        64
    7796: iand
    7797: ifne          7810
    7800: new           #149                // class java/lang/IllegalStateException
    7803: dup
    7804: ldc           #156                // String illegal instruction
    7806: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
    7809: athrow
    7810: aload_0
    7811: aload         5
    7813: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    7816: iload         6
    7818: ior
    7819: iload         7
    7821: aload_2
    7822: checkcast     #58                 // class jnr/x86asm/BaseReg
    7825: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    7828: aload_3
    7829: checkcast     #42                 // class jnr/x86asm/Mem
    7832: checkcast     #42                 // class jnr/x86asm/Mem
    7835: iconst_1
    7836: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    7839: aload_0
    7840: aload         4
    7842: checkcast     #114                // class jnr/x86asm/Immediate
    7845: checkcast     #114                // class jnr/x86asm/Immediate
    7848: iconst_1
    7849: invokevirtual #116                // Method _emitImmediate:(Ljnr/x86asm/Immediate;I)V
    7852: return
    7853: aload_2
    7854: bipush        96
    7856: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7859: ifeq          7913
    7862: aload_3
    7863: bipush        96
    7865: invokevirtual #107                // Method jnr/x86asm/Operand.isRegType:(I)Z
    7868: ifne          7878
    7871: aload_3
    7872: invokevirtual #41                 // Method jnr/x86asm/Operand.isMem:()Z
    7875: ifeq          7913
    7878: aload_0
    7879: aload         5
    7881: getfield      #104                // Field jnr/x86asm/InstructionDescription.opCode1:I
    7884: iconst_0
    7885: aload_2
    7886: checkcast     #58                 // class jnr/x86asm/BaseReg
    7889: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
    7892: aload_3
    7893: checkcast     #42                 // class jnr/x86asm/Mem
    7896: checkcast     #42                 // class jnr/x86asm/Mem
    7899: iconst_1
    7900: invokevirtual #172                // Method _emitMmu:(IIILjnr/x86asm/Operand;I)V
    7903: aload_0
    7904: aload         5
    7906: getfield      #118                // Field jnr/x86asm/InstructionDescription.opCode2:I
    7909: invokevirtual #38                 // Method _emitByte:(I)V
    7912: return
    7913: return

  void _emitFpu(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #105                // Method _emitOpCode:(I)V
       5: return

  void _emitFpuSTI(int, int);
    Code:
       0: getstatic     #63                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: iconst_0
       7: iload_2
       8: if_icmpgt     17
      11: iload_2
      12: bipush        8
      14: if_icmplt     25
      17: new           #65                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: iload_1
      27: iload_2
      28: iadd
      29: invokevirtual #105                // Method _emitOpCode:(I)V
      32: return

  void _emitFpuMEM(int, int, jnr.x86asm.Mem);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
       5: iload_1
       6: ldc           #37                 // int -16777216
       8: iand
       9: ifeq          23
      12: aload_0
      13: iload_1
      14: ldc           #37                 // int -16777216
      16: iand
      17: bipush        24
      19: ishr
      20: invokevirtual #38                 // Method _emitByte:(I)V
      23: aload_0
      24: invokevirtual #36                 // Method is64:()Z
      27: ifeq          37
      30: aload_0
      31: iconst_0
      32: iload_2
      33: aload_3
      34: invokevirtual #62                 // Method _emitRexRM:(IILjnr/x86asm/Operand;)V
      37: iload_1
      38: ldc           #39                 // int 16711680
      40: iand
      41: ifeq          55
      44: aload_0
      45: iload_1
      46: ldc           #39                 // int 16711680
      48: iand
      49: bipush        16
      51: ishr
      52: invokevirtual #38                 // Method _emitByte:(I)V
      55: iload_1
      56: ldc           #40                 // int 65280
      58: iand
      59: ifeq          73
      62: aload_0
      63: iload_1
      64: ldc           #40                 // int 65280
      66: iand
      67: bipush        8
      69: ishr
      70: invokevirtual #38                 // Method _emitByte:(I)V
      73: aload_0
      74: iload_1
      75: sipush        255
      78: iand
      79: invokevirtual #38                 // Method _emitByte:(I)V
      82: aload_0
      83: iload_2
      84: aload_3
      85: iconst_0
      86: invokevirtual #96                 // Method _emitModM:(ILjnr/x86asm/Mem;I)V
      89: return

  void _emitMmu(int, int, int, jnr.x86asm.Operand, int);
    Code:
       0: aload_0
       1: aload         4
       3: invokevirtual #98                 // Method _emitSegmentPrefix:(Ljnr/x86asm/Operand;)V
       6: iload_1
       7: ldc           #37                 // int -16777216
       9: iand
      10: ifeq          24
      13: aload_0
      14: iload_1
      15: ldc           #37                 // int -16777216
      17: iand
      18: bipush        24
      20: ishr
      21: invokevirtual #38                 // Method _emitByte:(I)V
      24: aload_0
      25: invokevirtual #36                 // Method is64:()Z
      28: ifeq          39
      31: aload_0
      32: iload_2
      33: iload_3
      34: aload         4
      36: invokevirtual #62                 // Method _emitRexRM:(IILjnr/x86asm/Operand;)V
      39: iload_1
      40: ldc           #39                 // int 16711680
      42: iand
      43: ifeq          57
      46: aload_0
      47: iload_1
      48: ldc           #39                 // int 16711680
      50: iand
      51: bipush        16
      53: ishr
      54: invokevirtual #38                 // Method _emitByte:(I)V
      57: aload_0
      58: iload_1
      59: ldc           #40                 // int 65280
      61: iand
      62: bipush        8
      64: ishr
      65: invokevirtual #38                 // Method _emitByte:(I)V
      68: aload_0
      69: iload_1
      70: sipush        255
      73: iand
      74: invokevirtual #38                 // Method _emitByte:(I)V
      77: aload         4
      79: invokevirtual #57                 // Method jnr/x86asm/Operand.isReg:()Z
      82: ifeq          101
      85: aload_0
      86: iload_3
      87: aload         4
      89: checkcast     #58                 // class jnr/x86asm/BaseReg
      92: invokevirtual #59                 // Method jnr/x86asm/BaseReg.code:()I
      95: invokevirtual #95                 // Method _emitModR:(II)V
      98: goto          113
     101: aload_0
     102: iload_3
     103: aload         4
     105: checkcast     #42                 // class jnr/x86asm/Mem
     108: iload         5
     110: invokevirtual #96                 // Method _emitModM:(ILjnr/x86asm/Mem;I)V
     113: return

  jnr.x86asm.LinkData _emitDisplacement(jnr.x86asm.Label, long, int);
    Code:
       0: getstatic     #63                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: invokevirtual #78                 // Method jnr/x86asm/Label.isBound:()Z
      10: ifeq          21
      13: new           #65                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #63                 // Field $assertionsDisabled:Z
      24: ifne          47
      27: iload         4
      29: iconst_1
      30: if_icmpeq     47
      33: iload         4
      35: iconst_4
      36: if_icmpeq     47
      39: new           #65                 // class java/lang/AssertionError
      42: dup
      43: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      46: athrow
      47: new           #188                // class jnr/x86asm/LinkData
      50: dup
      51: aload_0
      52: invokevirtual #84                 // Method offset:()I
      55: lload_2
      56: iconst_m1
      57: invokespecial #189                // Method jnr/x86asm/LinkData."<init>":(IJI)V
      60: astore        5
      62: aload_1
      63: aload         5
      65: invokevirtual #190                // Method jnr/x86asm/Label.link:(Ljnr/x86asm/LinkData;)V
      68: iload         4
      70: iconst_1
      71: if_icmpne     82
      74: aload_0
      75: iconst_1
      76: invokevirtual #38                 // Method _emitByte:(I)V
      79: goto          88
      82: aload_0
      83: ldc           #191                // int 67372036
      85: invokevirtual #50                 // Method _emitDWord:(I)V
      88: aload         5
      90: areturn

  void _emitJmpOrCallReloc(jnr.x86asm.InstructionGroup, long);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method is64:()Z
       4: ifeq          18
       7: aload_0
       8: dup
       9: getfield      #16                 // Field _trampolineSize:I
      12: bipush        14
      14: iadd
      15: putfield      #16                 // Field _trampolineSize:I
      18: new           #82                 // class jnr/x86asm/RelocData
      21: dup
      22: getstatic     #192                // Field jnr/x86asm/RelocData$Type.ABSOLUTE_TO_RELATIVE_TRAMPOLINE:Ljnr/x86asm/RelocData$Type;
      25: iconst_4
      26: aload_0
      27: invokevirtual #84                 // Method offset:()I
      30: lload_2
      31: invokespecial #85                 // Method jnr/x86asm/RelocData."<init>":(Ljnr/x86asm/RelocData$Type;IIJ)V
      34: astore        4
      36: aload_0
      37: getfield      #9                  // Field _relocData:Ljava/util/List;
      40: aload         4
      42: invokeinterface #86,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: iconst_0
      50: invokevirtual #74                 // Method _emitInt32:(I)V
      53: return

  public void relocCode(java.nio.ByteBuffer, long);
    Code:
       0: aload_0
       1: invokevirtual #193                // Method codeSize:()I
       4: istore        4
       6: aload_0
       7: getfield      #6                  // Field _buffer:Ljnr/x86asm/CodeBuffer;
      10: aload_1
      11: invokevirtual #194                // Method jnr/x86asm/CodeBuffer.copyTo:(Ljava/nio/ByteBuffer;)V
      14: aload_0
      15: getfield      #9                  // Field _relocData:Ljava/util/List;
      18: invokeinterface #195,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #196,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          369
      35: aload         5
      37: invokeinterface #197,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #82                 // class jnr/x86asm/RelocData
      45: astore        6
      47: iconst_0
      48: istore        9
      50: getstatic     #63                 // Field $assertionsDisabled:Z
      53: ifne          80
      56: aload         6
      58: getfield      #198                // Field jnr/x86asm/RelocData.offset:I
      61: aload         6
      63: getfield      #199                // Field jnr/x86asm/RelocData.size:I
      66: iadd
      67: iload         4
      69: if_icmple     80
      72: new           #65                 // class java/lang/AssertionError
      75: dup
      76: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: getstatic     #200                // Field jnr/x86asm/Assembler$1.$SwitchMap$jnr$x86asm$RelocData$Type:[I
      83: aload         6
      85: getfield      #201                // Field jnr/x86asm/RelocData.type:Ljnr/x86asm/RelocData$Type;
      88: invokevirtual #202                // Method jnr/x86asm/RelocData$Type.ordinal:()I
      91: iaload
      92: tableswitch   { // 1 to 4
                     1: 124
                     2: 134
                     3: 146
                     4: 146
               default: 214
          }
     124: aload         6
     126: getfield      #203                // Field jnr/x86asm/RelocData.destination:J
     129: lstore        7
     131: goto          224
     134: lload_2
     135: aload         6
     137: getfield      #203                // Field jnr/x86asm/RelocData.destination:J
     140: ladd
     141: lstore        7
     143: goto          224
     146: aload         6
     148: getfield      #203                // Field jnr/x86asm/RelocData.destination:J
     151: lload_2
     152: aload         6
     154: getfield      #198                // Field jnr/x86asm/RelocData.offset:I
     157: i2l
     158: ladd
     159: ldc2_w        #204                // long 4l
     162: ladd
     163: lsub
     164: lstore        7
     166: aload_0
     167: invokevirtual #36                 // Method is64:()Z
     170: ifeq          224
     173: aload         6
     175: getfield      #201                // Field jnr/x86asm/RelocData.type:Ljnr/x86asm/RelocData$Type;
     178: getstatic     #192                // Field jnr/x86asm/RelocData$Type.ABSOLUTE_TO_RELATIVE_TRAMPOLINE:Ljnr/x86asm/RelocData$Type;
     181: if_acmpne     224
     184: lload         7
     186: invokestatic  #146                // Method jnr/x86asm/Util.isInt32:(J)Z
     189: ifne          224
     192: aload_1
     193: invokevirtual #206                // Method java/nio/ByteBuffer.position:()I
     196: i2l
     197: aload         6
     199: getfield      #198                // Field jnr/x86asm/RelocData.offset:I
     202: iconst_4
     203: iadd
     204: i2l
     205: lsub
     206: lstore        7
     208: iconst_1
     209: istore        9
     211: goto          224
     214: new           #149                // class java/lang/IllegalStateException
     217: dup
     218: ldc           #207                // String invalid relocation type
     220: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: aload         6
     226: getfield      #199                // Field jnr/x86asm/RelocData.size:I
     229: lookupswitch  { // 2
                     4: 256
                     8: 272
               default: 287
          }
     256: aload_1
     257: aload         6
     259: getfield      #198                // Field jnr/x86asm/RelocData.offset:I
     262: lload         7
     264: l2i
     265: invokevirtual #208                // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
     268: pop
     269: goto          297
     272: aload_1
     273: aload         6
     275: getfield      #198                // Field jnr/x86asm/RelocData.offset:I
     278: lload         7
     280: invokevirtual #209                // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     283: pop
     284: goto          297
     287: new           #149                // class java/lang/IllegalStateException
     290: dup
     291: ldc           #210                // String invalid relocation size
     293: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     296: athrow
     297: aload_0
     298: invokevirtual #36                 // Method is64:()Z
     301: ifeq          366
     304: iload         9
     306: ifeq          366
     309: aload_0
     310: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
     313: ifnull        357
     316: aload_0
     317: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
     320: ldc           #211                // String ; Trampoline from %x -> %x\n
     322: iconst_2
     323: anewarray     #212                // class java/lang/Object
     326: dup
     327: iconst_0
     328: lload_2
     329: aload         6
     331: getfield      #198                // Field jnr/x86asm/RelocData.offset:I
     334: i2l
     335: ladd
     336: invokestatic  #213                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     339: aastore
     340: dup
     341: iconst_1
     342: aload         6
     344: getfield      #203                // Field jnr/x86asm/RelocData.destination:J
     347: invokestatic  #213                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     350: aastore
     351: invokestatic  #214                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     354: invokevirtual #92                 // Method jnr/x86asm/Logger.log:(Ljava/lang/String;)V
     357: aload_1
     358: aload         6
     360: getfield      #203                // Field jnr/x86asm/RelocData.destination:J
     363: invokestatic  #215                // Method jnr/x86asm/TrampolineWriter.writeTrampoline:(Ljava/nio/ByteBuffer;J)V
     366: goto          25
     369: return

  public void align(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
       4: ifnull        15
       7: aload_0
       8: getfield      #13                 // Field _logger:Ljnr/x86asm/Logger;
      11: lload_1
      12: invokevirtual #216                // Method jnr/x86asm/Logger.logAlign:(J)V
      15: lload_1
      16: lconst_1
      17: lcmp
      18: ifge          22
      21: return
      22: lload_1
      23: ldc2_w        #217                // long 64l
      26: lcmp
      27: ifle          53
      30: getstatic     #63                 // Field $assertionsDisabled:Z
      33: ifne          52
      36: lload_1
      37: ldc2_w        #217                // long 64l
      40: lcmp
      41: ifle          52
      44: new           #65                 // class java/lang/AssertionError
      47: dup
      48: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      51: athrow
      52: return
      53: lload_1
      54: aload_0
      55: invokevirtual #84                 // Method offset:()I
      58: i2l
      59: lload_1
      60: lrem
      61: lsub
      62: l2i
      63: istore_3
      64: iload_3
      65: i2l
      66: lload_1
      67: lcmp
      68: ifne          72
      71: return
      72: aload_0
      73: getfield      #12                 // Field _properties:I
      76: iconst_1
      77: iand
      78: ifeq          625
      81: aload_0
      82: getfield      #11                 // Field cpuInfo:Ljnr/x86asm/CpuInfo;
      85: getfield      #219                // Field jnr/x86asm/CpuInfo.vendor:Ljnr/x86asm/CpuInfo$Vendor;
      88: getstatic     #220                // Field jnr/x86asm/CpuInfo$Vendor.INTEL:Ljnr/x86asm/CpuInfo$Vendor;
      91: if_acmpne     308
      94: aload_0
      95: getfield      #11                 // Field cpuInfo:Ljnr/x86asm/CpuInfo;
      98: getfield      #221                // Field jnr/x86asm/CpuInfo.family:I
     101: bipush        15
     103: iand
     104: bipush        6
     106: if_icmpeq     124
     109: aload_0
     110: getfield      #11                 // Field cpuInfo:Ljnr/x86asm/CpuInfo;
     113: getfield      #221                // Field jnr/x86asm/CpuInfo.family:I
     116: bipush        15
     118: iand
     119: bipush        15
     121: if_icmpne     308
     124: iload_3
     125: tableswitch   { // 1 to 8
                     1: 172
                     2: 183
                     3: 194
                     4: 205
                     5: 216
                     6: 227
                     7: 239
                     8: 251
               default: 263
          }
     172: getstatic     #222                // Field nop1:[I
     175: astore        5
     177: iconst_1
     178: istore        4
     180: goto          272
     183: getstatic     #223                // Field nop2:[I
     186: astore        5
     188: iconst_2
     189: istore        4
     191: goto          272
     194: getstatic     #224                // Field nop3:[I
     197: astore        5
     199: iconst_3
     200: istore        4
     202: goto          272
     205: getstatic     #225                // Field nop4:[I
     208: astore        5
     210: iconst_4
     211: istore        4
     213: goto          272
     216: getstatic     #226                // Field nop5:[I
     219: astore        5
     221: iconst_5
     222: istore        4
     224: goto          272
     227: getstatic     #227                // Field nop6:[I
     230: astore        5
     232: bipush        6
     234: istore        4
     236: goto          272
     239: getstatic     #228                // Field nop7:[I
     242: astore        5
     244: bipush        7
     246: istore        4
     248: goto          272
     251: getstatic     #229                // Field nop8:[I
     254: astore        5
     256: bipush        8
     258: istore        4
     260: goto          272
     263: getstatic     #230                // Field nop9:[I
     266: astore        5
     268: bipush        9
     270: istore        4
     272: iload_3
     273: iload         4
     275: isub
     276: istore_3
     277: iconst_0
     278: istore        6
     280: iload         4
     282: ifle          303
     285: aload_0
     286: aload         5
     288: iload         6
     290: iaload
     291: invokevirtual #38                 // Method _emitByte:(I)V
     294: iinc          6, 1
     297: iinc          4, -1
     300: goto          280
     303: iload_3
     304: ifgt          124
     307: return
     308: aload_0
     309: getfield      #11                 // Field cpuInfo:Ljnr/x86asm/CpuInfo;
     312: getfield      #219                // Field jnr/x86asm/CpuInfo.vendor:Ljnr/x86asm/CpuInfo$Vendor;
     315: getstatic     #231                // Field jnr/x86asm/CpuInfo$Vendor.AMD:Ljnr/x86asm/CpuInfo$Vendor;
     318: if_acmpne     548
     321: aload_0
     322: getfield      #11                 // Field cpuInfo:Ljnr/x86asm/CpuInfo;
     325: getfield      #221                // Field jnr/x86asm/CpuInfo.family:I
     328: bipush        15
     330: if_icmplt     548
     333: iload_3
     334: tableswitch   { // 1 to 10
                     1: 388
                     2: 399
                     3: 410
                     4: 421
                     5: 432
                     6: 443
                     7: 455
                     8: 467
                     9: 479
                    10: 491
               default: 503
          }
     388: getstatic     #222                // Field nop1:[I
     391: astore        5
     393: iconst_1
     394: istore        4
     396: goto          512
     399: getstatic     #223                // Field nop2:[I
     402: astore        5
     404: iconst_2
     405: istore        4
     407: goto          512
     410: getstatic     #224                // Field nop3:[I
     413: astore        5
     415: iconst_3
     416: istore        4
     418: goto          512
     421: getstatic     #225                // Field nop4:[I
     424: astore        5
     426: iconst_4
     427: istore        4
     429: goto          512
     432: getstatic     #226                // Field nop5:[I
     435: astore        5
     437: iconst_5
     438: istore        4
     440: goto          512
     443: getstatic     #227                // Field nop6:[I
     446: astore        5
     448: bipush        6
     450: istore        4
     452: goto          512
     455: getstatic     #228                // Field nop7:[I
     458: astore        5
     460: bipush        7
     462: istore        4
     464: goto          512
     467: getstatic     #229                // Field nop8:[I
     470: astore        5
     472: bipush        8
     474: istore        4
     476: goto          512
     479: getstatic     #230                // Field nop9:[I
     482: astore        5
     484: bipush        9
     486: istore        4
     488: goto          512
     491: getstatic     #232                // Field nop10:[I
     494: astore        5
     496: bipush        10
     498: istore        4
     500: goto          512
     503: getstatic     #233                // Field nop11:[I
     506: astore        5
     508: bipush        11
     510: istore        4
     512: iload_3
     513: iload         4
     515: isub
     516: istore_3
     517: iconst_0
     518: istore        6
     520: iload         4
     522: ifle          543
     525: aload_0
     526: aload         5
     528: iload         6
     530: iaload
     531: invokevirtual #38                 // Method _emitByte:(I)V
     534: iinc          6, 1
     537: iinc          4, -1
     540: goto          520
     543: iload_3
     544: ifgt          333
     547: return
     548: aload_0
     549: invokevirtual #36                 // Method is64:()Z
     552: ifne          625
     555: iload_3
     556: tableswitch   { // 1 to 3
                     1: 611
                     2: 602
                     3: 593
               default: 584
          }
     584: aload_0
     585: bipush        102
     587: invokevirtual #38                 // Method _emitByte:(I)V
     590: iinc          3, -1
     593: aload_0
     594: bipush        102
     596: invokevirtual #38                 // Method _emitByte:(I)V
     599: iinc          3, -1
     602: aload_0
     603: bipush        102
     605: invokevirtual #38                 // Method _emitByte:(I)V
     608: iinc          3, -1
     611: aload_0
     612: sipush        144
     615: invokevirtual #38                 // Method _emitByte:(I)V
     618: iinc          3, -1
     621: iload_3
     622: ifgt          555
     625: iload_3
     626: iinc          3, -1
     629: ifle          642
     632: aload_0
     633: sipush        144
     636: invokevirtual #38                 // Method _emitByte:(I)V
     639: goto          625
     642: return

  static {};
    Code:
       0: ldc_w         #234                // class jnr/x86asm/Assembler
       3: invokevirtual #235                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #63                 // Field $assertionsDisabled:Z
      17: getstatic     #236                // Field jnr/x86asm/CPU.I386:Ljnr/x86asm/CPU;
      20: putstatic     #237                // Field I386:Ljnr/x86asm/CPU;
      23: getstatic     #2                  // Field jnr/x86asm/CPU.X86_64:Ljnr/x86asm/CPU;
      26: putstatic     #238                // Field X86_64:Ljnr/x86asm/CPU;
      29: iconst_1
      30: newarray       int
      32: dup
      33: iconst_0
      34: sipush        144
      37: iastore
      38: putstatic     #222                // Field nop1:[I
      41: iconst_2
      42: newarray       int
      44: dup
      45: iconst_0
      46: bipush        102
      48: iastore
      49: dup
      50: iconst_1
      51: sipush        144
      54: iastore
      55: putstatic     #223                // Field nop2:[I
      58: iconst_3
      59: newarray       int
      61: dup
      62: iconst_0
      63: bipush        15
      65: iastore
      66: dup
      67: iconst_1
      68: bipush        31
      70: iastore
      71: dup
      72: iconst_2
      73: iconst_0
      74: iastore
      75: putstatic     #224                // Field nop3:[I
      78: iconst_4
      79: newarray       int
      81: dup
      82: iconst_0
      83: bipush        15
      85: iastore
      86: dup
      87: iconst_1
      88: bipush        31
      90: iastore
      91: dup
      92: iconst_2
      93: bipush        64
      95: iastore
      96: dup
      97: iconst_3
      98: iconst_0
      99: iastore
     100: putstatic     #225                // Field nop4:[I
     103: iconst_5
     104: newarray       int
     106: dup
     107: iconst_0
     108: bipush        15
     110: iastore
     111: dup
     112: iconst_1
     113: bipush        31
     115: iastore
     116: dup
     117: iconst_2
     118: bipush        68
     120: iastore
     121: dup
     122: iconst_3
     123: iconst_0
     124: iastore
     125: dup
     126: iconst_4
     127: iconst_0
     128: iastore
     129: putstatic     #226                // Field nop5:[I
     132: bipush        6
     134: newarray       int
     136: dup
     137: iconst_0
     138: bipush        102
     140: iastore
     141: dup
     142: iconst_1
     143: bipush        15
     145: iastore
     146: dup
     147: iconst_2
     148: bipush        31
     150: iastore
     151: dup
     152: iconst_3
     153: bipush        68
     155: iastore
     156: dup
     157: iconst_4
     158: iconst_0
     159: iastore
     160: dup
     161: iconst_5
     162: iconst_0
     163: iastore
     164: putstatic     #227                // Field nop6:[I
     167: bipush        7
     169: newarray       int
     171: dup
     172: iconst_0
     173: bipush        15
     175: iastore
     176: dup
     177: iconst_1
     178: bipush        31
     180: iastore
     181: dup
     182: iconst_2
     183: sipush        128
     186: iastore
     187: dup
     188: iconst_3
     189: iconst_0
     190: iastore
     191: dup
     192: iconst_4
     193: iconst_0
     194: iastore
     195: dup
     196: iconst_5
     197: iconst_0
     198: iastore
     199: dup
     200: bipush        6
     202: iconst_0
     203: iastore
     204: putstatic     #228                // Field nop7:[I
     207: bipush        8
     209: newarray       int
     211: dup
     212: iconst_0
     213: bipush        15
     215: iastore
     216: dup
     217: iconst_1
     218: bipush        31
     220: iastore
     221: dup
     222: iconst_2
     223: sipush        132
     226: iastore
     227: dup
     228: iconst_3
     229: iconst_0
     230: iastore
     231: dup
     232: iconst_4
     233: iconst_0
     234: iastore
     235: dup
     236: iconst_5
     237: iconst_0
     238: iastore
     239: dup
     240: bipush        6
     242: iconst_0
     243: iastore
     244: dup
     245: bipush        7
     247: iconst_0
     248: iastore
     249: putstatic     #229                // Field nop8:[I
     252: bipush        9
     254: newarray       int
     256: dup
     257: iconst_0
     258: bipush        102
     260: iastore
     261: dup
     262: iconst_1
     263: bipush        15
     265: iastore
     266: dup
     267: iconst_2
     268: bipush        31
     270: iastore
     271: dup
     272: iconst_3
     273: sipush        132
     276: iastore
     277: dup
     278: iconst_4
     279: iconst_0
     280: iastore
     281: dup
     282: iconst_5
     283: iconst_0
     284: iastore
     285: dup
     286: bipush        6
     288: iconst_0
     289: iastore
     290: dup
     291: bipush        7
     293: iconst_0
     294: iastore
     295: dup
     296: bipush        8
     298: iconst_0
     299: iastore
     300: putstatic     #230                // Field nop9:[I
     303: bipush        10
     305: newarray       int
     307: dup
     308: iconst_0
     309: bipush        102
     311: iastore
     312: dup
     313: iconst_1
     314: bipush        102
     316: iastore
     317: dup
     318: iconst_2
     319: bipush        15
     321: iastore
     322: dup
     323: iconst_3
     324: bipush        31
     326: iastore
     327: dup
     328: iconst_4
     329: sipush        132
     332: iastore
     333: dup
     334: iconst_5
     335: iconst_0
     336: iastore
     337: dup
     338: bipush        6
     340: iconst_0
     341: iastore
     342: dup
     343: bipush        7
     345: iconst_0
     346: iastore
     347: dup
     348: bipush        8
     350: iconst_0
     351: iastore
     352: dup
     353: bipush        9
     355: iconst_0
     356: iastore
     357: putstatic     #232                // Field nop10:[I
     360: bipush        11
     362: newarray       int
     364: dup
     365: iconst_0
     366: bipush        102
     368: iastore
     369: dup
     370: iconst_1
     371: bipush        102
     373: iastore
     374: dup
     375: iconst_2
     376: bipush        102
     378: iastore
     379: dup
     380: iconst_3
     381: bipush        15
     383: iastore
     384: dup
     385: iconst_4
     386: bipush        31
     388: iastore
     389: dup
     390: iconst_5
     391: sipush        132
     394: iastore
     395: dup
     396: bipush        6
     398: iconst_0
     399: iastore
     400: dup
     401: bipush        7
     403: iconst_0
     404: iastore
     405: dup
     406: bipush        8
     408: iconst_0
     409: iastore
     410: dup
     411: bipush        9
     413: iconst_0
     414: iastore
     415: dup
     416: bipush        10
     418: iconst_0
     419: iastore
     420: putstatic     #233                // Field nop11:[I
     423: return
}
