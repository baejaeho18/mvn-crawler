Compiled from "CharRange.java"
final class org.apache.commons.lang3.CharRange implements java.lang.Iterable<java.lang.Character>, java.io.Serializable {
  private static final long serialVersionUID;

  private final char start;

  private final char end;

  private final boolean negated;

  private transient java.lang.String iToString;

  private org.apache.commons.lang3.CharRange(char, char, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iload_2
       6: if_icmple     17
       9: iload_1
      10: istore        4
      12: iload_2
      13: istore_1
      14: iload         4
      16: istore_2
      17: aload_0
      18: iload_1
      19: putfield      #2                  // Field start:C
      22: aload_0
      23: iload_2
      24: putfield      #1                  // Field end:C
      27: aload_0
      28: iload_3
      29: putfield      #3                  // Field negated:Z
      32: return

  public static org.apache.commons.lang3.CharRange is(char);
    Code:
       0: new           #5                  // class org/apache/commons/lang3/CharRange
       3: dup
       4: iload_0
       5: iload_0
       6: iconst_0
       7: invokespecial #6                  // Method "<init>":(CCZ)V
      10: areturn

  public static org.apache.commons.lang3.CharRange isNot(char);
    Code:
       0: new           #5                  // class org/apache/commons/lang3/CharRange
       3: dup
       4: iload_0
       5: iload_0
       6: iconst_1
       7: invokespecial #6                  // Method "<init>":(CCZ)V
      10: areturn

  public static org.apache.commons.lang3.CharRange isIn(char, char);
    Code:
       0: new           #5                  // class org/apache/commons/lang3/CharRange
       3: dup
       4: iload_0
       5: iload_1
       6: iconst_0
       7: invokespecial #6                  // Method "<init>":(CCZ)V
      10: areturn

  public static org.apache.commons.lang3.CharRange isNotIn(char, char);
    Code:
       0: new           #5                  // class org/apache/commons/lang3/CharRange
       3: dup
       4: iload_0
       5: iload_1
       6: iconst_1
       7: invokespecial #6                  // Method "<init>":(CCZ)V
      10: areturn

  public char getStart();
    Code:
       0: aload_0
       1: getfield      #2                  // Field start:C
       4: ireturn

  public char getEnd();
    Code:
       0: aload_0
       1: getfield      #1                  // Field end:C
       4: ireturn

  public boolean isNegated();
    Code:
       0: aload_0
       1: getfield      #3                  // Field negated:Z
       4: ireturn

  public boolean contains(char);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field start:C
       5: if_icmplt     20
       8: iload_1
       9: aload_0
      10: getfield      #1                  // Field end:C
      13: if_icmpgt     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: aload_0
      22: getfield      #3                  // Field negated:Z
      25: if_icmpeq     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean contains(org.apache.commons.lang3.CharRange);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #7                  // String The Range must not be null
      11: iconst_0
      12: anewarray     #8                  // class java/lang/Object
      15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #3                  // Field negated:Z
      22: ifeq          88
      25: aload_1
      26: getfield      #3                  // Field negated:Z
      29: ifeq          60
      32: aload_0
      33: getfield      #2                  // Field start:C
      36: aload_1
      37: getfield      #2                  // Field start:C
      40: if_icmplt     58
      43: aload_0
      44: getfield      #1                  // Field end:C
      47: aload_1
      48: getfield      #1                  // Field end:C
      51: if_icmpgt     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: aload_1
      61: getfield      #1                  // Field end:C
      64: aload_0
      65: getfield      #2                  // Field start:C
      68: if_icmplt     82
      71: aload_1
      72: getfield      #2                  // Field start:C
      75: aload_0
      76: getfield      #1                  // Field end:C
      79: if_icmple     86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ireturn
      88: aload_1
      89: getfield      #3                  // Field negated:Z
      92: ifeq          117
      95: aload_0
      96: getfield      #2                  // Field start:C
      99: ifne          115
     102: aload_0
     103: getfield      #1                  // Field end:C
     106: ldc           #10                 // int 65535
     108: if_icmpne     115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: ireturn
     117: aload_0
     118: getfield      #2                  // Field start:C
     121: aload_1
     122: getfield      #2                  // Field start:C
     125: if_icmpgt     143
     128: aload_0
     129: getfield      #1                  // Field end:C
     132: aload_1
     133: getfield      #1                  // Field end:C
     136: if_icmplt     143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class org/apache/commons/lang3/CharRange
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #5                  // class org/apache/commons/lang3/CharRange
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field start:C
      25: aload_2
      26: getfield      #2                  // Field start:C
      29: if_icmpne     58
      32: aload_0
      33: getfield      #1                  // Field end:C
      36: aload_2
      37: getfield      #1                  // Field end:C
      40: if_icmpne     58
      43: aload_0
      44: getfield      #3                  // Field negated:Z
      47: aload_2
      48: getfield      #3                  // Field negated:Z
      51: if_icmpne     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int hashCode();
    Code:
       0: bipush        83
       2: aload_0
       3: getfield      #2                  // Field start:C
       6: iadd
       7: bipush        7
       9: aload_0
      10: getfield      #1                  // Field end:C
      13: imul
      14: iadd
      15: aload_0
      16: getfield      #3                  // Field negated:Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: iadd
      28: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #11                 // Field iToString:Ljava/lang/String;
       4: ifnonnull     74
       7: new           #12                 // class java/lang/StringBuilder
      10: dup
      11: iconst_4
      12: invokespecial #13                 // Method java/lang/StringBuilder."<init>":(I)V
      15: astore_1
      16: aload_0
      17: invokevirtual #14                 // Method isNegated:()Z
      20: ifeq          30
      23: aload_1
      24: bipush        94
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: pop
      30: aload_1
      31: aload_0
      32: getfield      #2                  // Field start:C
      35: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      38: pop
      39: aload_0
      40: getfield      #2                  // Field start:C
      43: aload_0
      44: getfield      #1                  // Field end:C
      47: if_icmpeq     66
      50: aload_1
      51: bipush        45
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: aload_1
      58: aload_0
      59: getfield      #1                  // Field end:C
      62: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: pop
      66: aload_0
      67: aload_1
      68: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: putfield      #11                 // Field iToString:Ljava/lang/String;
      74: aload_0
      75: getfield      #11                 // Field iToString:Ljava/lang/String;
      78: areturn

  public java.util.Iterator<java.lang.Character> iterator();
    Code:
       0: new           #17                 // class org/apache/commons/lang3/CharRange$CharacterIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #18                 // Method org/apache/commons/lang3/CharRange$CharacterIterator."<init>":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V
       9: areturn

  static boolean access$100(org.apache.commons.lang3.CharRange);
    Code:
       0: aload_0
       1: getfield      #3                  // Field negated:Z
       4: ireturn

  static char access$200(org.apache.commons.lang3.CharRange);
    Code:
       0: aload_0
       1: getfield      #2                  // Field start:C
       4: ireturn

  static char access$300(org.apache.commons.lang3.CharRange);
    Code:
       0: aload_0
       1: getfield      #1                  // Field end:C
       4: ireturn
}
