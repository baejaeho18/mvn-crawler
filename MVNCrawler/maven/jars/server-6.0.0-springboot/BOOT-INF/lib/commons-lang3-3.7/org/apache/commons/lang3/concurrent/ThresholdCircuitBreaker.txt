Compiled from "ThresholdCircuitBreaker.java"
public class org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker extends org.apache.commons.lang3.concurrent.AbstractCircuitBreaker<java.lang.Long> {
  private static final long INITIAL_COUNT;

  private final long threshold;

  private final java.util.concurrent.atomic.AtomicLong used;

  public org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: lload_1
      18: putfield      #5                  // Field threshold:J
      21: return

  public long getThreshold();
    Code:
       0: aload_0
       1: getfield      #5                  // Field threshold:J
       4: lreturn

  public boolean checkState() throws org.apache.commons.lang3.concurrent.CircuitBreakingException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method isOpen:()Z
       4: ireturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.close:()V
       4: aload_0
       5: getfield      #4                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;
       8: lconst_0
       9: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      12: return

  public boolean incrementAndCheckState(java.lang.Long) throws org.apache.commons.lang3.concurrent.CircuitBreakingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field threshold:J
       4: lconst_0
       5: lcmp
       6: ifne          13
       9: aload_0
      10: invokevirtual #9                  // Method open:()V
      13: aload_0
      14: getfield      #4                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;
      17: aload_1
      18: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      21: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      24: lstore_2
      25: lload_2
      26: aload_0
      27: getfield      #5                  // Field threshold:J
      30: lcmp
      31: ifle          38
      34: aload_0
      35: invokevirtual #9                  // Method open:()V
      38: aload_0
      39: invokevirtual #12                 // Method checkState:()Z
      42: ireturn

  public boolean incrementAndCheckState(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class java/lang/Long
       5: invokevirtual #14                 // Method incrementAndCheckState:(Ljava/lang/Long;)Z
       8: ireturn
}
