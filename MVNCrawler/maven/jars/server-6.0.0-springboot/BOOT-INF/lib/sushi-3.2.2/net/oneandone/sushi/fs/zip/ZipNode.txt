Compiled from "ZipNode.java"
public class net.oneandone.sushi.fs.zip.ZipNode extends net.oneandone.sushi.fs.Node<net.oneandone.sushi.fs.zip.ZipNode> {
  private final net.oneandone.sushi.fs.zip.ZipRoot root;

  private final java.lang.String path;

  public net.oneandone.sushi.fs.zip.ZipNode(net.oneandone.sushi.fs.zip.ZipRoot, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/oneandone/sushi/fs/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field path:Ljava/lang/String;
      14: return

  public net.oneandone.sushi.fs.zip.ZipRoot getRoot();
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: areturn

  public long size() throws net.oneandone.sushi.fs.SizeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
       7: aload_0
       8: getfield      #3                  // Field path:Ljava/lang/String;
      11: invokevirtual #5                  // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      14: astore_1
      15: aload_1
      16: ifnonnull     37
      19: new           #6                  // class net/oneandone/sushi/fs/SizeException
      22: dup
      23: aload_0
      24: new           #7                  // class java/io/IOException
      27: dup
      28: ldc           #8                  // String file expected
      30: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: invokespecial #10                 // Method net/oneandone/sushi/fs/SizeException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      36: athrow
      37: aload_1
      38: invokevirtual #11                 // Method java/util/zip/ZipEntry.getSize:()J
      41: lreturn

  public long getLastModified();
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: invokevirtual #12                 // Method net/oneandone/sushi/fs/zip/ZipRoot.getLastModified:()J
       7: lreturn

  public void setLastModified(long) throws net.oneandone.sushi.fs.SetLastModifiedException;
    Code:
       0: new           #13                 // class net/oneandone/sushi/fs/SetLastModifiedException
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method net/oneandone/sushi/fs/SetLastModifiedException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public java.lang.String getPermissions();
    Code:
       0: aload_0
       1: ldc           #15                 // String getPermissions()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setPermissions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #17                 // String setPermissions()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.UserPrincipal getOwner();
    Code:
       0: aload_0
       1: ldc           #18                 // String getOwner()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setOwner(java.nio.file.attribute.UserPrincipal);
    Code:
       0: aload_0
       1: ldc           #19                 // String setOwner()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.GroupPrincipal getGroup();
    Code:
       0: aload_0
       1: ldc           #20                 // String getGroup()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setGroup(java.nio.file.attribute.GroupPrincipal);
    Code:
       0: aload_0
       1: ldc           #21                 // String setGroup()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.zip.ZipNode deleteFile() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: new           #22                 // class net/oneandone/sushi/fs/DeleteException
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public net.oneandone.sushi.fs.zip.ZipNode deleteDirectory() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: new           #22                 // class net/oneandone/sushi/fs/DeleteException
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public net.oneandone.sushi.fs.zip.ZipNode deleteTree() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: new           #22                 // class net/oneandone/sushi/fs/DeleteException
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public net.oneandone.sushi.fs.zip.ZipNode move(net.oneandone.sushi.fs.Node, boolean) throws net.oneandone.sushi.fs.MoveException;
    Code:
       0: new           #24                 // class net/oneandone/sushi/fs/MoveException
       3: dup
       4: aload_0
       5: aload_1
       6: ldc           #25                 // String ZipNode cannot be moved
       8: invokespecial #26                 // Method net/oneandone/sushi/fs/MoveException."<init>":(Lnet/oneandone/sushi/fs/Node;Lnet/oneandone/sushi/fs/Node;Ljava/lang/String;)V
      11: athrow

  public net.oneandone.sushi.fs.zip.ZipNode mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: new           #27                 // class net/oneandone/sushi/fs/MkdirException
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method net/oneandone/sushi/fs/MkdirException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public void mklink(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #29                 // String mklink()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.lang.String readLink();
    Code:
       0: aload_0
       1: ldc           #30                 // String readLink()
       3: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public boolean exists();
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
       7: aload_0
       8: getfield      #3                  // Field path:Ljava/lang/String;
      11: invokevirtual #5                  // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      14: ifnonnull     24
      17: aload_0
      18: invokevirtual #31                 // Method isDirectory:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean isFile() throws net.oneandone.sushi.fs.ExistsException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
       7: aload_0
       8: getfield      #3                  // Field path:Ljava/lang/String;
      11: invokevirtual #5                  // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      14: astore_1
      15: aload_1
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_1
      22: invokevirtual #32                 // Method java/util/zip/ZipEntry.isDirectory:()Z
      25: ifeq          30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: invokevirtual #11                 // Method java/util/zip/ZipEntry.getSize:()J
      34: lconst_0
      35: lcmp
      36: ifle          41
      39: iconst_1
      40: ireturn
      41: aload_0
      42: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
      45: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
      48: aload_1
      49: invokevirtual #33                 // Method java/util/zip/ZipFile.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
      52: astore_2
      53: goto          67
      56: astore_3
      57: new           #34                 // class net/oneandone/sushi/fs/ExistsException
      60: dup
      61: aload_0
      62: aload_3
      63: invokespecial #35                 // Method net/oneandone/sushi/fs/ExistsException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      66: athrow
      67: aload_2
      68: ifnonnull     73
      71: iconst_0
      72: ireturn
      73: aload_2
      74: invokevirtual #36                 // Method java/io/InputStream.close:()V
      77: goto          91
      80: astore_3
      81: new           #34                 // class net/oneandone/sushi/fs/ExistsException
      84: dup
      85: aload_0
      86: aload_3
      87: invokespecial #35                 // Method net/oneandone/sushi/fs/ExistsException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      90: athrow
      91: iconst_1
      92: ireturn
    Exception table:
       from    to  target type
          41    53    56   Class java/io/IOException
          73    77    80   Class java/io/IOException

  public boolean isLink();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field path:Ljava/lang/String;
       4: invokevirtual #37                 // Method java/lang/String.isEmpty:()Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
      16: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
      19: astore_1
      20: aload_1
      21: new           #38                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      28: aload_0
      29: getfield      #3                  // Field path:Ljava/lang/String;
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #41                 // String /
      37: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #5                  // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      46: ifnull        51
      49: iconst_1
      50: ireturn
      51: aload_0
      52: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
      55: aload_0
      56: getfield      #3                  // Field path:Ljava/lang/String;
      59: invokevirtual #43                 // Method net/oneandone/sushi/fs/zip/ZipRoot.list:(Ljava/lang/String;)Ljava/util/List;
      62: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
      67: ifle          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ireturn

  public java.io.InputStream newInputStream() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.NewInputStreamException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field path:Ljava/lang/String;
      13: invokevirtual #5                  // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      16: astore_2
      17: aload_2
      18: ifnonnull     30
      21: new           #45                 // class net/oneandone/sushi/fs/FileNotFoundException
      24: dup
      25: aload_0
      26: invokespecial #46                 // Method net/oneandone/sushi/fs/FileNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      29: athrow
      30: aload_1
      31: aload_2
      32: invokevirtual #33                 // Method java/util/zip/ZipFile.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
      35: areturn
      36: astore_3
      37: new           #47                 // class net/oneandone/sushi/fs/NewInputStreamException
      40: dup
      41: aload_0
      42: aload_3
      43: invokespecial #48                 // Method net/oneandone/sushi/fs/NewInputStreamException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      46: athrow
    Exception table:
       from    to  target type
          30    35    36   Class java/io/IOException

  public long copyFileTo(java.io.OutputStream, long) throws net.oneandone.sushi.fs.CopyFileToException, net.oneandone.sushi.fs.FileNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokevirtual #49                 // Method copyFileToImpl:(Ljava/io/OutputStream;J)J
       6: lreturn

  public void copyFileFrom(java.io.InputStream) throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.CopyFileFromException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method copyFileFromImpl:(Ljava/io/InputStream;)J
       5: pop2
       6: return

  public java.io.OutputStream newOutputStream(boolean);
    Code:
       0: aload_0
       1: new           #38                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #51                 // String newOutputStream(
      10: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: iload_1
      14: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      17: ldc           #53                 // String )
      19: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokevirtual #16                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      28: athrow

  public java.util.List<net.oneandone.sushi.fs.zip.ZipNode> list() throws net.oneandone.sushi.fs.DirectoryNotFoundException, net.oneandone.sushi.fs.ListException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method isFile:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: goto          23
      12: astore_3
      13: new           #55                 // class net/oneandone/sushi/fs/ListException
      16: dup
      17: aload_0
      18: aload_3
      19: invokespecial #56                 // Method net/oneandone/sushi/fs/ListException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      22: athrow
      23: aload_0
      24: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
      27: aload_0
      28: getfield      #3                  // Field path:Ljava/lang/String;
      31: invokevirtual #43                 // Method net/oneandone/sushi/fs/zip/ZipRoot.list:(Ljava/lang/String;)Ljava/util/List;
      34: astore_1
      35: aload_1
      36: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
      41: ifne          88
      44: aload_0
      45: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
      48: invokevirtual #4                  // Method net/oneandone/sushi/fs/zip/ZipRoot.getZip:()Ljava/util/zip/ZipFile;
      51: new           #38                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      58: aload_0
      59: getfield      #3                  // Field path:Ljava/lang/String;
      62: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #41                 // String /
      67: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokevirtual #5                  // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      76: ifnonnull     88
      79: new           #57                 // class net/oneandone/sushi/fs/DirectoryNotFoundException
      82: dup
      83: aload_0
      84: invokespecial #58                 // Method net/oneandone/sushi/fs/DirectoryNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      87: athrow
      88: new           #59                 // class java/util/ArrayList
      91: dup
      92: invokespecial #60                 // Method java/util/ArrayList."<init>":()V
      95: astore_2
      96: aload_1
      97: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     102: astore_3
     103: aload_3
     104: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     109: ifeq          143
     112: aload_3
     113: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #64                 // class java/lang/String
     121: astore        4
     123: aload_2
     124: aload_0
     125: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/zip/ZipRoot;
     128: aload         4
     130: aconst_null
     131: invokevirtual #65                 // Method net/oneandone/sushi/fs/zip/ZipRoot.node:(Ljava/lang/String;Ljava/lang/String;)Lnet/oneandone/sushi/fs/zip/ZipNode;
     134: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     139: pop
     140: goto          103
     143: aload_2
     144: areturn
    Exception table:
       from    to  target type
           0     8    12   Class net/oneandone/sushi/fs/ExistsException

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field path:Ljava/lang/String;
       4: areturn

  public net.oneandone.sushi.fs.Node move(net.oneandone.sushi.fs.Node, boolean) throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.MoveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #67                 // Method move:(Lnet/oneandone/sushi/fs/Node;Z)Lnet/oneandone/sushi/fs/zip/ZipNode;
       6: areturn

  public net.oneandone.sushi.fs.Node deleteDirectory() throws net.oneandone.sushi.fs.DirectoryNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method deleteDirectory:()Lnet/oneandone/sushi/fs/zip/ZipNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteFile() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method deleteFile:()Lnet/oneandone/sushi/fs/zip/ZipNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteTree() throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method deleteTree:()Lnet/oneandone/sushi/fs/zip/ZipNode;
       4: areturn

  public net.oneandone.sushi.fs.Node mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method mkdir:()Lnet/oneandone/sushi/fs/zip/ZipNode;
       4: areturn

  public net.oneandone.sushi.fs.Root getRoot();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getRoot:()Lnet/oneandone/sushi/fs/zip/ZipRoot;
       4: areturn
}
