Compiled from "TimeMachineNode.java"
public class net.oneandone.sushi.fs.timemachine.TimeMachineNode extends net.oneandone.sushi.fs.Node<net.oneandone.sushi.fs.timemachine.TimeMachineNode> {
  private final net.oneandone.sushi.fs.timemachine.TimeMachineRoot root;

  private final net.oneandone.sushi.fs.file.FileNode node;

  private final java.lang.String path;

  public net.oneandone.sushi.fs.timemachine.TimeMachineNode(net.oneandone.sushi.fs.timemachine.TimeMachineRoot, net.oneandone.sushi.fs.file.FileNode, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/oneandone/sushi/fs/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field root:Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field path:Ljava/lang/String;
      19: return

  public net.oneandone.sushi.fs.timemachine.TimeMachineRoot getRoot();
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;
       4: areturn

  public long size() throws net.oneandone.sushi.fs.SizeException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #5                  // Method net/oneandone/sushi/fs/file/FileNode.size:()J
       7: lreturn

  public long getLastModified() throws net.oneandone.sushi.fs.GetLastModifiedException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #6                  // Method net/oneandone/sushi/fs/file/FileNode.getLastModified:()J
       7: lreturn

  public void setLastModified(long) throws net.oneandone.sushi.fs.SetLastModifiedException;
    Code:
       0: new           #7                  // class net/oneandone/sushi/fs/SetLastModifiedException
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method net/oneandone/sushi/fs/SetLastModifiedException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public java.lang.String getPermissions();
    Code:
       0: aload_0
       1: ldc           #9                  // String getPermissions()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setPermissions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #11                 // String setPermissions()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.UserPrincipal getOwner();
    Code:
       0: aload_0
       1: ldc           #12                 // String getOwner()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setOwner(java.nio.file.attribute.UserPrincipal);
    Code:
       0: aload_0
       1: ldc           #13                 // String setOwner()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.GroupPrincipal getGroup();
    Code:
       0: aload_0
       1: ldc           #14                 // String getGroup()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setGroup(java.nio.file.attribute.GroupPrincipal);
    Code:
       0: aload_0
       1: ldc           #15                 // String setGroup()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field path:Ljava/lang/String;
       4: areturn

  public net.oneandone.sushi.fs.timemachine.TimeMachineNode deleteFile() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: ldc           #16                 // String deleteFile()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.timemachine.TimeMachineNode deleteDirectory() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: ldc           #17                 // String deleteDirectory()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.timemachine.TimeMachineNode deleteTree() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: ldc           #18                 // String deleteTree()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.zip.ZipNode move(net.oneandone.sushi.fs.Node, boolean) throws net.oneandone.sushi.fs.MoveException;
    Code:
       0: aload_0
       1: ldc           #19                 // String move()
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.timemachine.TimeMachineNode mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: aload_0
       1: ldc           #20                 // String delete
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void mklink(java.lang.String) throws net.oneandone.sushi.fs.LinkException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: aload_1
       5: invokevirtual #21                 // Method net/oneandone/sushi/fs/file/FileNode.mklink:(Ljava/lang/String;)V
       8: return

  public java.lang.String readLink() throws net.oneandone.sushi.fs.ReadLinkException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #22                 // Method net/oneandone/sushi/fs/file/FileNode.readLink:()Ljava/lang/String;
       7: areturn

  public boolean exists() throws net.oneandone.sushi.fs.ExistsException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #23                 // Method net/oneandone/sushi/fs/file/FileNode.exists:()Z
       7: ireturn

  public boolean isFile() throws net.oneandone.sushi.fs.ExistsException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #24                 // Method net/oneandone/sushi/fs/file/FileNode.isFile:()Z
       7: ireturn

  public boolean isDirectory() throws net.oneandone.sushi.fs.ExistsException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #25                 // Method net/oneandone/sushi/fs/file/FileNode.isDirectory:()Z
       7: ireturn

  public boolean isLink() throws net.oneandone.sushi.fs.ExistsException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #26                 // Method net/oneandone/sushi/fs/file/FileNode.isLink:()Z
       7: ireturn

  public java.io.InputStream newInputStream() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.NewInputStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #27                 // Method net/oneandone/sushi/fs/file/FileNode.newInputStream:()Ljava/io/InputStream;
       7: areturn

  public long copyFileTo(java.io.OutputStream, long) throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.CopyFileToException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokevirtual #28                 // Method copyFileToImpl:(Ljava/io/OutputStream;J)J
       6: lreturn

  public void copyFileFrom(java.io.InputStream) throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.CopyFileFromException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method copyFileFromImpl:(Ljava/io/InputStream;)J
       5: pop2
       6: return

  public java.io.OutputStream newOutputStream(boolean);
    Code:
       0: aload_0
       1: ldc           #30                 // String newOutputStream(boolean)
       3: invokevirtual #10                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.util.List<net.oneandone.sushi.fs.timemachine.TimeMachineNode> list() throws net.oneandone.sushi.fs.ListException, net.oneandone.sushi.fs.DirectoryNotFoundException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field node:Lnet/oneandone/sushi/fs/file/FileNode;
       4: invokevirtual #31                 // Method net/oneandone/sushi/fs/file/FileNode.list:()Ljava/util/List;
       7: astore_1
       8: aload_1
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: new           #32                 // class java/util/ArrayList
      17: dup
      18: aload_1
      19: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      24: invokespecial #34                 // Method java/util/ArrayList."<init>":(I)V
      27: astore_2
      28: aload_0
      29: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;
      32: invokevirtual #35                 // Method net/oneandone/sushi/fs/timemachine/TimeMachineRoot.getFilesystem:()Lnet/oneandone/sushi/fs/timemachine/TimeMachineFilesystem;
      35: astore_3
      36: aload_1
      37: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          135
      54: aload         4
      56: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #39                 // class net/oneandone/sushi/fs/file/FileNode
      64: astore        5
      66: aload_2
      67: new           #40                 // class net/oneandone/sushi/fs/timemachine/TimeMachineNode
      70: dup
      71: aload_0
      72: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;
      75: aload_0
      76: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;
      79: aload         5
      81: invokevirtual #41                 // Method net/oneandone/sushi/fs/timemachine/TimeMachineRoot.resolve:(Lnet/oneandone/sushi/fs/file/FileNode;)Lnet/oneandone/sushi/fs/file/FileNode;
      84: aload_3
      85: iconst_2
      86: anewarray     #42                 // class java/lang/String
      89: dup
      90: iconst_0
      91: aload_0
      92: getfield      #4                  // Field path:Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_1
      98: aload         5
     100: invokevirtual #43                 // Method net/oneandone/sushi/fs/file/FileNode.getName:()Ljava/lang/String;
     103: aastore
     104: invokevirtual #44                 // Method net/oneandone/sushi/fs/Filesystem.join:([Ljava/lang/String;)Ljava/lang/String;
     107: invokespecial #45                 // Method "<init>":(Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;Lnet/oneandone/sushi/fs/file/FileNode;Ljava/lang/String;)V
     110: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          132
     119: astore        6
     121: new           #48                 // class net/oneandone/sushi/fs/ListException
     124: dup
     125: aload_0
     126: aload         6
     128: invokespecial #49                 // Method net/oneandone/sushi/fs/ListException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
     131: athrow
     132: goto          44
     135: aload_2
     136: areturn
    Exception table:
       from    to  target type
          66   116   119   Class java/io/IOException

  public net.oneandone.sushi.fs.Node move(net.oneandone.sushi.fs.Node, boolean) throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.MoveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #50                 // Method move:(Lnet/oneandone/sushi/fs/Node;Z)Lnet/oneandone/sushi/fs/zip/ZipNode;
       6: areturn

  public net.oneandone.sushi.fs.Node deleteDirectory() throws net.oneandone.sushi.fs.DirectoryNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method deleteDirectory:()Lnet/oneandone/sushi/fs/timemachine/TimeMachineNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteFile() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method deleteFile:()Lnet/oneandone/sushi/fs/timemachine/TimeMachineNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteTree() throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method deleteTree:()Lnet/oneandone/sushi/fs/timemachine/TimeMachineNode;
       4: areturn

  public net.oneandone.sushi.fs.Node mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method mkdir:()Lnet/oneandone/sushi/fs/timemachine/TimeMachineNode;
       4: areturn

  public net.oneandone.sushi.fs.Root getRoot();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getRoot:()Lnet/oneandone/sushi/fs/timemachine/TimeMachineRoot;
       4: areturn
}
