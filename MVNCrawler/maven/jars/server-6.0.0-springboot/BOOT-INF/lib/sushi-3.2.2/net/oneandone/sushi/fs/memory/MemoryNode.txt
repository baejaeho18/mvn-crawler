Compiled from "MemoryNode.java"
public class net.oneandone.sushi.fs.memory.MemoryNode extends net.oneandone.sushi.fs.Node<net.oneandone.sushi.fs.memory.MemoryNode> {
  private final net.oneandone.sushi.fs.memory.MemoryRoot root;

  private final java.lang.String path;

  private net.oneandone.sushi.fs.memory.Type type;

  private long lastModified;

  public net.oneandone.sushi.fs.memory.MemoryNode(net.oneandone.sushi.fs.memory.MemoryRoot, java.lang.String, net.oneandone.sushi.fs.memory.Type);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method net/oneandone/sushi/fs/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field path:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
      19: aload_0
      20: lconst_0
      21: putfield      #1                  // Field lastModified:J
      24: return

  public java.net.URI getUri();
    Code:
       0: new           #6                  // class java/net/URI
       3: dup
       4: aload_0
       5: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
       8: invokevirtual #7                  // Method net/oneandone/sushi/fs/memory/MemoryRoot.getFilesystem:()Lnet/oneandone/sushi/fs/memory/MemoryFilesystem;
      11: invokevirtual #8                  // Method net/oneandone/sushi/fs/memory/MemoryFilesystem.getScheme:()Ljava/lang/String;
      14: aconst_null
      15: aload_0
      16: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      19: getfield      #9                  // Field net/oneandone/sushi/fs/memory/MemoryRoot.id:I
      22: invokestatic  #10                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      25: iconst_m1
      26: new           #11                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #13                 // String /
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #3                  // Field path:Ljava/lang/String;
      42: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aconst_null
      49: aconst_null
      50: invokespecial #16                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      53: areturn
      54: astore_1
      55: new           #18                 // class java/lang/IllegalStateException
      58: dup
      59: aload_1
      60: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      63: athrow
    Exception table:
       from    to  target type
           0    53    54   Class java/net/URISyntaxException

  public net.oneandone.sushi.fs.memory.MemoryRoot getRoot();
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
       4: areturn

  public net.oneandone.sushi.fs.memory.Type getType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: areturn

  public boolean exists();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isFile();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #21                 // Field net/oneandone/sushi/fs/memory/Type.FILE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #22                 // Field net/oneandone/sushi/fs/memory/Type.DIRECTORY:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isLink();
    Code:
       0: iconst_0
       1: ireturn

  public long size() throws net.oneandone.sushi.fs.SizeException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isFile:()Z
       4: ifne          25
       7: new           #24                 // class net/oneandone/sushi/fs/SizeException
      10: dup
      11: aload_0
      12: new           #25                 // class java/io/IOException
      15: dup
      16: ldc           #26                 // String file expected
      18: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      21: invokespecial #28                 // Method net/oneandone/sushi/fs/SizeException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      24: athrow
      25: aload_0
      26: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      29: aload_0
      30: getfield      #3                  // Field path:Ljava/lang/String;
      33: invokevirtual #29                 // Method net/oneandone/sushi/fs/memory/MemoryRoot.length:(Ljava/lang/String;)J
      36: lreturn

  public long getLastModified() throws net.oneandone.sushi.fs.GetLastModifiedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpne     20
      10: new           #30                 // class net/oneandone/sushi/fs/GetLastModifiedException
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #31                 // Method net/oneandone/sushi/fs/GetLastModifiedException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      19: athrow
      20: aload_0
      21: getfield      #1                  // Field lastModified:J
      24: lreturn

  public void setLastModified(long) throws net.oneandone.sushi.fs.SetLastModifiedException;
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #1                  // Field lastModified:J
       5: return

  public java.lang.String getPermissions();
    Code:
       0: aload_0
       1: ldc           #32                 // String getPermissions()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setPermissions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #34                 // String setPermissions()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.UserPrincipal getOwner();
    Code:
       0: aload_0
       1: ldc           #35                 // String getUid()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setOwner(java.nio.file.attribute.UserPrincipal);
    Code:
       0: aload_0
       1: ldc           #36                 // String setUid()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.GroupPrincipal getGroup();
    Code:
       0: aload_0
       1: ldc           #37                 // String getGid()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setGroup(java.nio.file.attribute.GroupPrincipal);
    Code:
       0: aload_0
       1: ldc           #38                 // String setGid()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.memory.MemoryNode mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpeq     19
      10: new           #39                 // class net/oneandone/sushi/fs/MkdirException
      13: dup
      14: aload_0
      15: invokespecial #40                 // Method net/oneandone/sushi/fs/MkdirException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      18: athrow
      19: aload_0
      20: invokevirtual #41                 // Method getParent:()Lnet/oneandone/sushi/fs/Node;
      23: checkcast     #42                 // class net/oneandone/sushi/fs/memory/MemoryNode
      26: invokevirtual #43                 // Method isDirectory:()Z
      29: istore_1
      30: iload_1
      31: ifne          43
      34: new           #39                 // class net/oneandone/sushi/fs/MkdirException
      37: dup
      38: aload_0
      39: invokespecial #40                 // Method net/oneandone/sushi/fs/MkdirException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      42: athrow
      43: aload_0
      44: getstatic     #22                 // Field net/oneandone/sushi/fs/memory/Type.DIRECTORY:Lnet/oneandone/sushi/fs/memory/Type;
      47: putfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
      50: aload_0
      51: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
      54: putfield      #1                  // Field lastModified:J
      57: aload_0
      58: areturn

  public void mklink(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #45                 // String mklink()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.lang.String readLink();
    Code:
       0: aload_0
       1: ldc           #46                 // String readLink()
       3: invokevirtual #33                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.memory.MemoryNode deleteFile() throws net.oneandone.sushi.fs.DeleteException, net.oneandone.sushi.fs.FileNotFoundException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method checkFile:()Lnet/oneandone/sushi/fs/Node;
       4: pop
       5: goto          19
       8: astore_1
       9: new           #49                 // class net/oneandone/sushi/fs/DeleteException
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #50                 // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      23: aload_0
      24: invokevirtual #51                 // Method net/oneandone/sushi/fs/memory/MemoryRoot.free:(Lnet/oneandone/sushi/fs/memory/MemoryNode;)V
      27: aload_0
      28: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
      31: putfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
      34: aload_0
      35: areturn
    Exception table:
       from    to  target type
           0     5     8   Class net/oneandone/sushi/fs/ExistsException

  public net.oneandone.sushi.fs.memory.MemoryNode deleteDirectory() throws net.oneandone.sushi.fs.DeleteException, net.oneandone.sushi.fs.DirectoryNotFoundException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #22                 // Field net/oneandone/sushi/fs/memory/Type.DIRECTORY:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpeq     19
      10: new           #52                 // class net/oneandone/sushi/fs/DirectoryNotFoundException
      13: dup
      14: aload_0
      15: invokespecial #53                 // Method net/oneandone/sushi/fs/DirectoryNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      23: aload_0
      24: getfield      #3                  // Field path:Ljava/lang/String;
      27: invokevirtual #54                 // Method net/oneandone/sushi/fs/memory/MemoryRoot.list:(Ljava/lang/String;)Ljava/util/List;
      30: invokeinterface #55,  1           // InterfaceMethod java/util/List.size:()I
      35: ifle          49
      38: new           #49                 // class net/oneandone/sushi/fs/DeleteException
      41: dup
      42: aload_0
      43: ldc           #56                 // String directory is not empty
      45: invokespecial #57                 // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
      53: putfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
      56: aload_0
      57: areturn

  public net.oneandone.sushi.fs.memory.MemoryNode deleteTree() throws net.oneandone.sushi.fs.DeleteException, net.oneandone.sushi.fs.NodeNotFoundException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpne     19
      10: new           #58                 // class net/oneandone/sushi/fs/NodeNotFoundException
      13: dup
      14: aload_0
      15: invokespecial #59                 // Method net/oneandone/sushi/fs/NodeNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      18: athrow
      19: aload_0
      20: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
      23: getstatic     #22                 // Field net/oneandone/sushi/fs/memory/Type.DIRECTORY:Lnet/oneandone/sushi/fs/memory/Type;
      26: if_acmpne     80
      29: aload_0
      30: invokevirtual #60                 // Method list:()Ljava/util/List;
      33: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore_1
      39: aload_1
      40: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          66
      48: aload_1
      49: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #42                 // class net/oneandone/sushi/fs/memory/MemoryNode
      57: astore_2
      58: aload_2
      59: invokevirtual #64                 // Method deleteTree:()Lnet/oneandone/sushi/fs/memory/MemoryNode;
      62: pop
      63: goto          39
      66: goto          80
      69: astore_1
      70: new           #49                 // class net/oneandone/sushi/fs/DeleteException
      73: dup
      74: aload_0
      75: aload_1
      76: invokespecial #50                 // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      79: athrow
      80: aload_0
      81: getstatic     #20                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
      84: putfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
      87: aload_0
      88: areturn
    Exception table:
       from    to  target type
          29    66    69   Class net/oneandone/sushi/fs/ListException
          29    66    69   Class net/oneandone/sushi/fs/DirectoryNotFoundException

  public java.util.List<net.oneandone.sushi.fs.memory.MemoryNode> list() throws net.oneandone.sushi.fs.ListException, net.oneandone.sushi.fs.DirectoryNotFoundException;
    Code:
       0: getstatic     #66                 // Field net/oneandone/sushi/fs/memory/MemoryNode$2.$SwitchMap$net$oneandone$sushi$fs$memory$Type:[I
       3: aload_0
       4: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       7: invokevirtual #67                 // Method net/oneandone/sushi/fs/memory/Type.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 45
                     3: 47
               default: 59
          }
      36: new           #52                 // class net/oneandone/sushi/fs/DirectoryNotFoundException
      39: dup
      40: aload_0
      41: invokespecial #53                 // Method net/oneandone/sushi/fs/DirectoryNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      44: athrow
      45: aconst_null
      46: areturn
      47: aload_0
      48: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      51: aload_0
      52: getfield      #3                  // Field path:Ljava/lang/String;
      55: invokevirtual #54                 // Method net/oneandone/sushi/fs/memory/MemoryRoot.list:(Ljava/lang/String;)Ljava/util/List;
      58: areturn
      59: new           #18                 // class java/lang/IllegalStateException
      62: dup
      63: invokespecial #68                 // Method java/lang/IllegalStateException."<init>":()V
      66: athrow

  public byte[] readBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #21                 // Field net/oneandone/sushi/fs/memory/Type.FILE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpeq     19
      10: new           #69                 // class net/oneandone/sushi/fs/FileNotFoundException
      13: dup
      14: aload_0
      15: invokespecial #70                 // Method net/oneandone/sushi/fs/FileNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      23: aload_0
      24: getfield      #3                  // Field path:Ljava/lang/String;
      27: invokevirtual #71                 // Method net/oneandone/sushi/fs/memory/MemoryRoot.readBytes:(Ljava/lang/String;)[B
      30: areturn

  public java.io.InputStream newInputStream() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.NewInputStreamException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       4: getstatic     #21                 // Field net/oneandone/sushi/fs/memory/Type.FILE:Lnet/oneandone/sushi/fs/memory/Type;
       7: if_acmpeq     19
      10: new           #69                 // class net/oneandone/sushi/fs/FileNotFoundException
      13: dup
      14: aload_0
      15: invokespecial #70                 // Method net/oneandone/sushi/fs/FileNotFoundException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
      23: aload_0
      24: getfield      #3                  // Field path:Ljava/lang/String;
      27: invokevirtual #72                 // Method net/oneandone/sushi/fs/memory/MemoryRoot.open:(Ljava/lang/String;)Ljava/io/InputStream;
      30: areturn
      31: astore_1
      32: new           #73                 // class net/oneandone/sushi/fs/NewInputStreamException
      35: dup
      36: aload_0
      37: aload_1
      38: invokespecial #74                 // Method net/oneandone/sushi/fs/NewInputStreamException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      41: athrow
    Exception table:
       from    to  target type
          19    30    31   Class java/io/IOException

  public long copyFileTo(java.io.OutputStream, long) throws net.oneandone.sushi.fs.CopyFileToException, net.oneandone.sushi.fs.FileNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokevirtual #75                 // Method copyFileToImpl:(Ljava/io/OutputStream;J)J
       6: lreturn

  public void copyFileFrom(java.io.InputStream) throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.CopyFileFromException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method copyFileFromImpl:(Ljava/io/InputStream;)J
       5: pop2
       6: return

  public java.io.OutputStream newOutputStream(boolean) throws net.oneandone.sushi.fs.NewOutputStreamException;
    Code:
       0: getstatic     #66                 // Field net/oneandone/sushi/fs/memory/MemoryNode$2.$SwitchMap$net$oneandone$sushi$fs$memory$Type:[I
       3: aload_0
       4: getfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       7: invokevirtual #67                 // Method net/oneandone/sushi/fs/memory/Type.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     2: 45
                     3: 36
               default: 61
          }
      36: new           #77                 // class net/oneandone/sushi/fs/NewDirectoryOutputStreamException
      39: dup
      40: aload_0
      41: invokespecial #78                 // Method net/oneandone/sushi/fs/NewDirectoryOutputStreamException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
      44: athrow
      45: iload_1
      46: ifeq          56
      49: aload_0
      50: invokevirtual #79                 // Method readBytes:()[B
      53: goto          57
      56: aconst_null
      57: astore_2
      58: goto          63
      61: aconst_null
      62: astore_2
      63: aload_0
      64: invokevirtual #41                 // Method getParent:()Lnet/oneandone/sushi/fs/Node;
      67: checkcast     #42                 // class net/oneandone/sushi/fs/memory/MemoryNode
      70: invokevirtual #80                 // Method checkDirectory:()Lnet/oneandone/sushi/fs/Node;
      73: pop
      74: new           #81                 // class net/oneandone/sushi/fs/memory/MemoryNode$1
      77: dup
      78: aload_0
      79: aload_2
      80: invokespecial #82                 // Method net/oneandone/sushi/fs/memory/MemoryNode$1."<init>":(Lnet/oneandone/sushi/fs/memory/MemoryNode;[B)V
      83: areturn
      84: astore_3
      85: aload_3
      86: athrow
      87: astore_3
      88: new           #83                 // class net/oneandone/sushi/fs/NewOutputStreamException
      91: dup
      92: aload_0
      93: aload_3
      94: invokespecial #84                 // Method net/oneandone/sushi/fs/NewOutputStreamException."<init>":(Lnet/oneandone/sushi/fs/Node;Ljava/lang/Throwable;)V
      97: athrow
    Exception table:
       from    to  target type
           0    83    84   Class net/oneandone/sushi/fs/NewOutputStreamException
           0    83    87   Class java/io/IOException

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field path:Ljava/lang/String;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteDirectory() throws net.oneandone.sushi.fs.DirectoryNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method deleteDirectory:()Lnet/oneandone/sushi/fs/memory/MemoryNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteFile() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method deleteFile:()Lnet/oneandone/sushi/fs/memory/MemoryNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteTree() throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method deleteTree:()Lnet/oneandone/sushi/fs/memory/MemoryNode;
       4: areturn

  public net.oneandone.sushi.fs.Node mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method mkdir:()Lnet/oneandone/sushi/fs/memory/MemoryNode;
       4: areturn

  public net.oneandone.sushi.fs.Root getRoot();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method getRoot:()Lnet/oneandone/sushi/fs/memory/MemoryRoot;
       4: areturn

  static net.oneandone.sushi.fs.memory.Type access$002(net.oneandone.sushi.fs.memory.MemoryNode, net.oneandone.sushi.fs.memory.Type);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field type:Lnet/oneandone/sushi/fs/memory/Type;
       6: areturn

  static java.lang.String access$100(net.oneandone.sushi.fs.memory.MemoryNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field path:Ljava/lang/String;
       4: areturn

  static net.oneandone.sushi.fs.memory.MemoryRoot access$200(net.oneandone.sushi.fs.memory.MemoryNode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/memory/MemoryRoot;
       4: areturn

  static long access$302(net.oneandone.sushi.fs.memory.MemoryNode, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #1                  // Field lastModified:J
       6: lreturn
}
