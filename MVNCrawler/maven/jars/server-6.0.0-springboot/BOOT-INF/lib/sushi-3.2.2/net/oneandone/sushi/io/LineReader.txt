Compiled from "LineReader.java"
public class net.oneandone.sushi.io.LineReader implements java.lang.AutoCloseable {
  public static final int INITIAL_BUFFER_SIZE;

  private final java.io.Reader reader;

  private final net.oneandone.sushi.io.LineFormat format;

  private int lineNumber;

  private final net.oneandone.sushi.io.LineReader$CharArraySequence buffer;

  public net.oneandone.sushi.io.LineReader(java.io.Reader, net.oneandone.sushi.io.LineFormat);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        256
       6: invokespecial #2                  // Method "<init>":(Ljava/io/Reader;Lnet/oneandone/sushi/io/LineFormat;I)V
       9: return

  public net.oneandone.sushi.io.LineReader(java.io.Reader, net.oneandone.sushi.io.LineFormat, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field reader:Ljava/io/Reader;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field lineNumber:I
      19: aload_0
      20: new           #7                  // class net/oneandone/sushi/io/LineReader$CharArraySequence
      23: dup
      24: iconst_0
      25: iconst_0
      26: iload_3
      27: newarray       char
      29: invokespecial #8                  // Method net/oneandone/sushi/io/LineReader$CharArraySequence."<init>":(II[C)V
      32: putfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      35: return

  public int getLine();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lineNumber:I
       4: ireturn

  public java.io.Reader getReader();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reader:Ljava/io/Reader;
       4: areturn

  public net.oneandone.sushi.io.LineFormat getFormat();
    Code:
       0: aload_0
       1: getfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #10                 // Method java/io/Reader.close:()V
       7: return

  public java.lang.String next() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
       4: getfield      #11                 // Field net/oneandone/sushi/io/LineFormat.separator:Ljava/util/regex/Pattern;
       7: aload_0
       8: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      11: invokevirtual #12                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      14: astore_3
      15: aload_3
      16: invokevirtual #13                 // Method java/util/regex/Matcher.find:()Z
      19: ifeq          165
      22: aload_3
      23: invokevirtual #14                 // Method java/util/regex/Matcher.end:()I
      26: istore_2
      27: aload_0
      28: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      31: invokestatic  #15                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.access$000:(Lnet/oneandone/sushi/io/LineReader$CharArraySequence;)I
      34: iload_2
      35: iadd
      36: aload_0
      37: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      40: invokestatic  #16                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.access$100:(Lnet/oneandone/sushi/io/LineReader$CharArraySequence;)I
      43: if_icmpne     110
      46: aload_0
      47: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      50: invokevirtual #17                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.isFull:()Z
      53: ifeq          63
      56: aload_0
      57: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      60: invokevirtual #18                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.grow:()V
      63: aload_0
      64: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      67: aload_0
      68: getfield      #4                  // Field reader:Ljava/io/Reader;
      71: invokevirtual #19                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.fill:(Ljava/io/Reader;)Z
      74: pop
      75: aload_0
      76: getfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
      79: getfield      #11                 // Field net/oneandone/sushi/io/LineFormat.separator:Ljava/util/regex/Pattern;
      82: aload_0
      83: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
      86: invokevirtual #12                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      89: astore_3
      90: aload_3
      91: invokevirtual #13                 // Method java/util/regex/Matcher.find:()Z
      94: ifne          105
      97: new           #20                 // class java/lang/IllegalStateException
     100: dup
     101: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
     104: athrow
     105: aload_3
     106: invokevirtual #14                 // Method java/util/regex/Matcher.end:()I
     109: istore_2
     110: new           #22                 // class java/lang/String
     113: dup
     114: aload_0
     115: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     118: invokestatic  #23                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.access$200:(Lnet/oneandone/sushi/io/LineReader$CharArraySequence;)[C
     121: aload_0
     122: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     125: invokestatic  #15                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.access$000:(Lnet/oneandone/sushi/io/LineReader$CharArraySequence;)I
     128: aload_0
     129: getfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
     132: getfield      #24                 // Field net/oneandone/sushi/io/LineFormat.trim:Lnet/oneandone/sushi/io/LineFormat$Trim;
     135: getstatic     #25                 // Field net/oneandone/sushi/io/LineFormat$Trim.NOTHING:Lnet/oneandone/sushi/io/LineFormat$Trim;
     138: if_acmpne     145
     141: iload_2
     142: goto          149
     145: aload_3
     146: invokevirtual #26                 // Method java/util/regex/Matcher.start:()I
     149: invokespecial #27                 // Method java/lang/String."<init>":([CII)V
     152: astore_1
     153: aload_0
     154: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     157: iload_2
     158: invokestatic  #28                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.access$012:(Lnet/oneandone/sushi/io/LineReader$CharArraySequence;I)I
     161: pop
     162: goto          219
     165: aload_0
     166: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     169: invokevirtual #17                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.isFull:()Z
     172: ifeq          182
     175: aload_0
     176: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     179: invokevirtual #18                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.grow:()V
     182: aload_0
     183: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     186: aload_0
     187: getfield      #4                  // Field reader:Ljava/io/Reader;
     190: invokevirtual #19                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.fill:(Ljava/io/Reader;)Z
     193: ifeq          199
     196: goto          0
     199: aload_0
     200: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     203: invokevirtual #29                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.isEmpty:()Z
     206: ifeq          211
     209: aconst_null
     210: areturn
     211: aload_0
     212: getfield      #9                  // Field buffer:Lnet/oneandone/sushi/io/LineReader$CharArraySequence;
     215: invokevirtual #30                 // Method net/oneandone/sushi/io/LineReader$CharArraySequence.eat:()Ljava/lang/String;
     218: astore_1
     219: aload_0
     220: dup
     221: getfield      #6                  // Field lineNumber:I
     224: iconst_1
     225: iadd
     226: putfield      #6                  // Field lineNumber:I
     229: aload_0
     230: getfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
     233: getfield      #24                 // Field net/oneandone/sushi/io/LineFormat.trim:Lnet/oneandone/sushi/io/LineFormat$Trim;
     236: getstatic     #31                 // Field net/oneandone/sushi/io/LineFormat$Trim.ALL:Lnet/oneandone/sushi/io/LineFormat$Trim;
     239: if_acmpne     247
     242: aload_1
     243: invokevirtual #32                 // Method java/lang/String.trim:()Ljava/lang/String;
     246: astore_1
     247: aload_0
     248: getfield      #5                  // Field format:Lnet/oneandone/sushi/io/LineFormat;
     251: getfield      #33                 // Field net/oneandone/sushi/io/LineFormat.excludes:Ljava/util/regex/Pattern;
     254: aload_1
     255: invokevirtual #12                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     258: invokevirtual #34                 // Method java/util/regex/Matcher.matches:()Z
     261: ifne          0
     264: aload_1
     265: areturn

  public java.util.List<java.lang.String> collect() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #35                 // class java/util/ArrayList
       4: dup
       5: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
       8: invokevirtual #37                 // Method collect:(Ljava/util/List;)Ljava/util/List;
      11: areturn

  public java.util.List<java.lang.String> collect(java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method collect:(Ljava/util/Collection;)Ljava/util/Collection;
       5: checkcast     #39                 // class java/util/List
       8: areturn

  public java.util.Collection<java.lang.String> collect(java.util.Collection<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method next:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     15
       9: aload_0
      10: invokevirtual #41                 // Method close:()V
      13: aload_1
      14: areturn
      15: aload_1
      16: aload_2
      17: invokeinterface #42,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      22: pop
      23: goto          0
}
