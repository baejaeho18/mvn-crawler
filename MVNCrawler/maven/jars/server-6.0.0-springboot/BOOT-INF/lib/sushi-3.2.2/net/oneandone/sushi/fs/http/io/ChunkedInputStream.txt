Compiled from "ChunkedInputStream.java"
public class net.oneandone.sushi.fs.http.io.ChunkedInputStream extends java.io.InputStream {
  private static final int UNKNOWN;

  private static final int EOF;

  private final net.oneandone.sushi.fs.http.io.AsciiInputStream src;

  private final net.oneandone.sushi.io.Buffer skipBuffer;

  private int length;

  private int pos;

  private boolean closed;

  public net.oneandone.sushi.fs.http.io.ChunkedInputStream(net.oneandone.sushi.fs.http.io.AsciiInputStream, net.oneandone.sushi.io.Buffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
       9: aload_0
      10: iconst_m1
      11: putfield      #4                  // Field length:I
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field pos:I
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field closed:Z
      24: aload_0
      25: aload_2
      26: putfield      #7                  // Field skipBuffer:Lnet/oneandone/sushi/io/Buffer;
      29: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_0
       9: goto          31
      12: aload_0
      13: getfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
      16: invokevirtual #8                  // Method net/oneandone/sushi/fs/http/io/AsciiInputStream.available:()I
      19: aload_0
      20: getfield      #4                  // Field length:I
      23: aload_0
      24: getfield      #5                  // Field pos:I
      27: isub
      28: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      31: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method before:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
      13: invokevirtual #11                 // Method net/oneandone/sushi/fs/http/io/AsciiInputStream.read:()I
      16: istore_1
      17: iload_1
      18: iconst_m1
      19: if_icmpeq     36
      22: aload_0
      23: dup
      24: getfield      #5                  // Field pos:I
      27: iconst_1
      28: iadd
      29: putfield      #5                  // Field pos:I
      32: aload_0
      33: invokespecial #12                 // Method afterData:()V
      36: iload_1
      37: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method before:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
      13: aload_1
      14: iload_2
      15: iload_3
      16: aload_0
      17: getfield      #4                  // Field length:I
      20: aload_0
      21: getfield      #5                  // Field pos:I
      24: isub
      25: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      28: invokevirtual #13                 // Method net/oneandone/sushi/fs/http/io/AsciiInputStream.read:([BII)I
      31: istore        4
      33: iload         4
      35: iconst_m1
      36: if_icmpne     91
      39: aload_0
      40: iconst_0
      41: putfield      #4                  // Field length:I
      44: new           #14                 // class net/oneandone/sushi/fs/http/model/ProtocolException
      47: dup
      48: new           #15                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #17                 // String chunk truncated, expected
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #4                  // Field length:I
      64: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #20                 // String , code
      69: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #5                  // Field pos:I
      76: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #21                 // String  bytes
      81: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #23                 // Method net/oneandone/sushi/fs/http/model/ProtocolException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_0
      92: dup
      93: getfield      #5                  // Field pos:I
      96: iload         4
      98: iadd
      99: putfield      #5                  // Field pos:I
     102: aload_0
     103: invokespecial #12                 // Method afterData:()V
     106: iload         4
     108: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #24                 // Method read:([BII)I
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #4                  // Field length:I
      12: ifeq          32
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field length:I
      20: aload_0
      21: getfield      #7                  // Field skipBuffer:Lnet/oneandone/sushi/io/Buffer;
      24: aload_0
      25: ldc2_w        #26                 // long 9223372036854775807l
      28: invokevirtual #28                 // Method net/oneandone/sushi/io/Buffer.skip:(Ljava/io/InputStream;J)J
      31: pop2
      32: aload_0
      33: iconst_1
      34: putfield      #6                  // Field closed:Z
      37: goto          48
      40: astore_1
      41: aload_0
      42: iconst_1
      43: putfield      #6                  // Field closed:Z
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
           8    32    40   any

  private boolean before() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ifeq          17
       7: new           #29                 // class java/io/IOException
      10: dup
      11: ldc           #30                 // String Attempted read from closed stream.
      13: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field length:I
      21: lookupswitch  { // 2
                    -1: 50
                     0: 48
               default: 82
          }
      48: iconst_0
      49: ireturn
      50: aload_0
      51: aload_0
      52: invokespecial #32                 // Method readLength:()I
      55: putfield      #4                  // Field length:I
      58: aload_0
      59: iconst_0
      60: putfield      #5                  // Field pos:I
      63: aload_0
      64: getfield      #4                  // Field length:I
      67: ifne          80
      70: aload_0
      71: getfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
      74: invokestatic  #33                 // Method net/oneandone/sushi/fs/http/model/HeaderList.parse:(Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;)Lnet/oneandone/sushi/fs/http/model/HeaderList;
      77: pop
      78: iconst_0
      79: ireturn
      80: iconst_1
      81: ireturn
      82: iconst_1
      83: ireturn

  private int readLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
       4: invokevirtual #34                 // Method net/oneandone/sushi/fs/http/io/AsciiInputStream.readLine:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ifnonnull     22
      12: new           #14                 // class net/oneandone/sushi/fs/http/model/ProtocolException
      15: dup
      16: ldc           #35                 // String closing chunk expected
      18: invokespecial #23                 // Method net/oneandone/sushi/fs/http/model/ProtocolException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_2
      23: bipush        59
      25: invokevirtual #36                 // Method java/lang/String.indexOf:(I)I
      28: istore_3
      29: aload_2
      30: iconst_0
      31: iload_3
      32: ifge          42
      35: aload_2
      36: invokevirtual #37                 // Method java/lang/String.length:()I
      39: goto          43
      42: iload_3
      43: invokestatic  #38                 // Method net/oneandone/sushi/fs/http/model/Scanner.substringTrimmed:(Ljava/lang/String;II)Ljava/lang/String;
      46: astore_1
      47: aload_1
      48: bipush        16
      50: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      53: ireturn
      54: astore        4
      56: new           #14                 // class net/oneandone/sushi/fs/http/model/ProtocolException
      59: dup
      60: new           #15                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #41                 // String invalid chunk size:
      69: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload         4
      81: invokespecial #42                 // Method net/oneandone/sushi/fs/http/model/ProtocolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: athrow
    Exception table:
       from    to  target type
          47    53    54   Class java/lang/NumberFormatException

  private void afterData() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #4                  // Field length:I
       8: if_icmpge     14
      11: goto          113
      14: aload_0
      15: getfield      #5                  // Field pos:I
      18: aload_0
      19: getfield      #4                  // Field length:I
      22: if_icmple     62
      25: new           #43                 // class java/lang/IllegalStateException
      28: dup
      29: new           #15                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      36: aload_0
      37: getfield      #5                  // Field pos:I
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #44                 // String  >
      45: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field length:I
      52: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: getfield      #2                  // Field src:Lnet/oneandone/sushi/fs/http/io/AsciiInputStream;
      66: invokevirtual #34                 // Method net/oneandone/sushi/fs/http/io/AsciiInputStream.readLine:()Ljava/lang/String;
      69: astore_1
      70: aload_1
      71: ifnull        81
      74: aload_1
      75: invokevirtual #46                 // Method java/lang/String.isEmpty:()Z
      78: ifne          108
      81: new           #14                 // class net/oneandone/sushi/fs/http/model/ProtocolException
      84: dup
      85: new           #15                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #47                 // String expected empty line, got
      94: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #23                 // Method net/oneandone/sushi/fs/http/model/ProtocolException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: iconst_m1
     110: putfield      #4                  // Field length:I
     113: return
}
