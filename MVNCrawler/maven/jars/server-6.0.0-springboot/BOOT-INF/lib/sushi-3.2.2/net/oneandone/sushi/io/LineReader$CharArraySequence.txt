Compiled from "LineReader.java"
class net.oneandone.sushi.io.LineReader$CharArraySequence implements java.lang.CharSequence {
  private int start;

  private int end;

  private char[] chars;

  net.oneandone.sushi.io.LineReader$CharArraySequence(int, int, char[]);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field start:I
       9: aload_0
      10: iload_2
      11: putfield      #2                  // Field end:I
      14: aload_0
      15: aload_3
      16: putfield      #1                  // Field chars:[C
      19: return

  public int length();
    Code:
       0: aload_0
       1: getfield      #2                  // Field end:I
       4: aload_0
       5: getfield      #3                  // Field start:I
       8: isub
       9: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: aload_0
       5: getfield      #3                  // Field start:I
       8: iload_1
       9: iadd
      10: caload
      11: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: new           #5                  // class net/oneandone/sushi/io/LineReader$CharArraySequence
       3: dup
       4: aload_0
       5: getfield      #3                  // Field start:I
       8: iload_1
       9: iadd
      10: aload_0
      11: getfield      #3                  // Field start:I
      14: iload_2
      15: iadd
      16: aload_0
      17: getfield      #1                  // Field chars:[C
      20: invokespecial #6                  // Method "<init>":(II[C)V
      23: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field start:I
       4: aload_0
       5: getfield      #2                  // Field end:I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isFull();
    Code:
       0: aload_0
       1: getfield      #2                  // Field end:I
       4: aload_0
       5: getfield      #1                  // Field chars:[C
       8: arraylength
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String eat();
    Code:
       0: new           #7                  // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #1                  // Field chars:[C
       8: aload_0
       9: getfield      #3                  // Field start:I
      12: aload_0
      13: getfield      #2                  // Field end:I
      16: aload_0
      17: getfield      #3                  // Field start:I
      20: isub
      21: invokespecial #8                  // Method java/lang/String."<init>":([CII)V
      24: astore_1
      25: aload_0
      26: aload_0
      27: getfield      #3                  // Field start:I
      30: putfield      #2                  // Field end:I
      33: aload_1
      34: areturn

  public void grow();
    Code:
       0: aload_0
       1: getfield      #3                  // Field start:I
       4: ifeq          53
       7: aload_0
       8: getfield      #1                  // Field chars:[C
      11: aload_0
      12: getfield      #3                  // Field start:I
      15: aload_0
      16: getfield      #1                  // Field chars:[C
      19: iconst_0
      20: aload_0
      21: getfield      #2                  // Field end:I
      24: aload_0
      25: getfield      #3                  // Field start:I
      28: isub
      29: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_0
      33: dup
      34: getfield      #2                  // Field end:I
      37: aload_0
      38: getfield      #3                  // Field start:I
      41: isub
      42: putfield      #2                  // Field end:I
      45: aload_0
      46: iconst_0
      47: putfield      #3                  // Field start:I
      50: goto          87
      53: aload_0
      54: getfield      #1                  // Field chars:[C
      57: arraylength
      58: iconst_3
      59: imul
      60: iconst_2
      61: idiv
      62: bipush        10
      64: iadd
      65: newarray       char
      67: astore_1
      68: aload_0
      69: getfield      #1                  // Field chars:[C
      72: iconst_0
      73: aload_1
      74: iconst_0
      75: aload_0
      76: getfield      #2                  // Field end:I
      79: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload_0
      83: aload_1
      84: putfield      #1                  // Field chars:[C
      87: return

  public boolean fill(java.io.Reader) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field chars:[C
       5: aload_0
       6: getfield      #2                  // Field end:I
       9: aload_0
      10: getfield      #1                  // Field chars:[C
      13: arraylength
      14: aload_0
      15: getfield      #2                  // Field end:I
      18: isub
      19: invokevirtual #10                 // Method java/io/Reader.read:([CII)I
      22: istore_2
      23: iload_2
      24: iconst_m1
      25: if_icmpeq     40
      28: aload_0
      29: dup
      30: getfield      #2                  // Field end:I
      33: iload_2
      34: iadd
      35: putfield      #2                  // Field end:I
      38: iconst_1
      39: ireturn
      40: iconst_0
      41: ireturn

  static int access$000(net.oneandone.sushi.io.LineReader$CharArraySequence);
    Code:
       0: aload_0
       1: getfield      #3                  // Field start:I
       4: ireturn

  static int access$100(net.oneandone.sushi.io.LineReader$CharArraySequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field end:I
       4: ireturn

  static char[] access$200(net.oneandone.sushi.io.LineReader$CharArraySequence);
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: areturn

  static int access$012(net.oneandone.sushi.io.LineReader$CharArraySequence, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field start:I
       5: iload_1
       6: iadd
       7: dup_x1
       8: putfield      #3                  // Field start:I
      11: ireturn
}
