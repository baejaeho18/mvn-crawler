Compiled from "ConsoleNode.java"
public class net.oneandone.sushi.fs.console.ConsoleNode extends net.oneandone.sushi.fs.Node<net.oneandone.sushi.fs.console.ConsoleNode> {
  private final net.oneandone.sushi.fs.console.ConsoleFilesystem root;

  public net.oneandone.sushi.fs.console.ConsoleNode(net.oneandone.sushi.fs.console.ConsoleFilesystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/oneandone/sushi/fs/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field root:Lnet/oneandone/sushi/fs/console/ConsoleFilesystem;
       9: return

  public net.oneandone.sushi.fs.console.ConsoleFilesystem getRoot();
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lnet/oneandone/sushi/fs/console/ConsoleFilesystem;
       4: areturn

  public java.util.List<net.oneandone.sushi.fs.console.ConsoleNode> list();
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream newInputStream();
    Code:
       0: getstatic     #3                  // Field java/lang/System.in:Ljava/io/InputStream;
       3: areturn

  public long copyFileTo(java.io.OutputStream, long);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void copyFileFrom(java.io.InputStream);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.io.OutputStream newOutputStream(boolean);
    Code:
       0: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       3: areturn

  public net.oneandone.sushi.fs.console.ConsoleNode deleteFile() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: new           #7                  // class net/oneandone/sushi/fs/DeleteException
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public net.oneandone.sushi.fs.console.ConsoleNode deleteDirectory() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: new           #7                  // class net/oneandone/sushi/fs/DeleteException
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public net.oneandone.sushi.fs.console.ConsoleNode deleteTree() throws net.oneandone.sushi.fs.DeleteException;
    Code:
       0: new           #7                  // class net/oneandone/sushi/fs/DeleteException
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method net/oneandone/sushi/fs/DeleteException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public net.oneandone.sushi.fs.console.ConsoleNode move(net.oneandone.sushi.fs.Node, boolean) throws net.oneandone.sushi.fs.MoveException;
    Code:
       0: new           #9                  // class net/oneandone/sushi/fs/MoveException
       3: dup
       4: aload_0
       5: aload_1
       6: ldc           #10                 // String ConsoleNode cannot be moved
       8: invokespecial #11                 // Method net/oneandone/sushi/fs/MoveException."<init>":(Lnet/oneandone/sushi/fs/Node;Lnet/oneandone/sushi/fs/Node;Ljava/lang/String;)V
      11: athrow

  public java.lang.String getPath();
    Code:
       0: aconst_null
       1: areturn

  public boolean exists();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isDirectory();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isFile();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isLink();
    Code:
       0: iconst_0
       1: ireturn

  public long size();
    Code:
       0: aload_0
       1: ldc           #12                 // String length()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public long getLastModified();
    Code:
       0: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
       3: lreturn

  public void setLastModified(long) throws net.oneandone.sushi.fs.SetLastModifiedException;
    Code:
       0: new           #15                 // class net/oneandone/sushi/fs/SetLastModifiedException
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method net/oneandone/sushi/fs/SetLastModifiedException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public java.lang.String getPermissions();
    Code:
       0: aload_0
       1: ldc           #17                 // String getPermissions()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setPermissions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String setPermissions()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.UserPrincipal getOwner();
    Code:
       0: aload_0
       1: ldc           #19                 // String getOwner()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setOwner(java.nio.file.attribute.UserPrincipal);
    Code:
       0: aload_0
       1: ldc           #20                 // String setOwner()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.nio.file.attribute.GroupPrincipal getGroup();
    Code:
       0: aload_0
       1: ldc           #21                 // String getGroup()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public void setGroup(java.nio.file.attribute.GroupPrincipal);
    Code:
       0: aload_0
       1: ldc           #22                 // String setGroup()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.console.ConsoleNode mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: new           #23                 // class net/oneandone/sushi/fs/MkdirException
       3: dup
       4: aload_0
       5: invokespecial #24                 // Method net/oneandone/sushi/fs/MkdirException."<init>":(Lnet/oneandone/sushi/fs/Node;)V
       8: athrow

  public void mklink(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #25                 // String mklink()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public java.lang.String readLink();
    Code:
       0: aload_0
       1: ldc           #26                 // String readLink()
       3: invokevirtual #13                 // Method unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       6: athrow

  public net.oneandone.sushi.fs.Node move(net.oneandone.sushi.fs.Node, boolean) throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.MoveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #27                 // Method move:(Lnet/oneandone/sushi/fs/Node;Z)Lnet/oneandone/sushi/fs/console/ConsoleNode;
       6: areturn

  public net.oneandone.sushi.fs.Node deleteDirectory() throws net.oneandone.sushi.fs.DirectoryNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method deleteDirectory:()Lnet/oneandone/sushi/fs/console/ConsoleNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteFile() throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method deleteFile:()Lnet/oneandone/sushi/fs/console/ConsoleNode;
       4: areturn

  public net.oneandone.sushi.fs.Node deleteTree() throws net.oneandone.sushi.fs.NodeNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method deleteTree:()Lnet/oneandone/sushi/fs/console/ConsoleNode;
       4: areturn

  public net.oneandone.sushi.fs.Node mkdir() throws net.oneandone.sushi.fs.MkdirException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method mkdir:()Lnet/oneandone/sushi/fs/console/ConsoleNode;
       4: areturn

  public net.oneandone.sushi.fs.Root getRoot();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getRoot:()Lnet/oneandone/sushi/fs/console/ConsoleFilesystem;
       4: areturn
}
