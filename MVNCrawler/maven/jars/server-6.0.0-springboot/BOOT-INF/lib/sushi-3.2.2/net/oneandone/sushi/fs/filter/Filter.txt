Compiled from "Filter.java"
public class net.oneandone.sushi.fs.filter.Filter {
  public static final net.oneandone.sushi.fs.filter.Filter NOTHING;

  public static final int DEPTH_INFINITE;

  private final java.util.List<java.lang.Object[]> includes;

  private final java.util.List<java.lang.String> includesRepr;

  private final java.util.List<java.lang.Object[]> excludes;

  private final java.util.List<java.lang.String> excludesRepr;

  private final java.util.List<net.oneandone.sushi.fs.filter.Predicate> predicates;

  private boolean ignoreCase;

  private boolean followLinks;

  private int minDepth;

  private int maxDepth;

  public net.oneandone.sushi.fs.filter.Filter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field includes:Ljava/util/List;
      15: aload_0
      16: new           #3                  // class java/util/ArrayList
      19: dup
      20: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #6                  // Field includesRepr:Ljava/util/List;
      26: aload_0
      27: new           #3                  // class java/util/ArrayList
      30: dup
      31: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #7                  // Field excludes:Ljava/util/List;
      37: aload_0
      38: new           #3                  // class java/util/ArrayList
      41: dup
      42: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #8                  // Field excludesRepr:Ljava/util/List;
      48: aload_0
      49: new           #3                  // class java/util/ArrayList
      52: dup
      53: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      56: putfield      #9                  // Field predicates:Ljava/util/List;
      59: aload_0
      60: iconst_0
      61: putfield      #10                 // Field ignoreCase:Z
      64: aload_0
      65: iconst_0
      66: putfield      #11                 // Field followLinks:Z
      69: aload_0
      70: iconst_1
      71: putfield      #12                 // Field minDepth:I
      74: aload_0
      75: ldc           #14                 // int 2147483647
      77: putfield      #15                 // Field maxDepth:I
      80: return

  public net.oneandone.sushi.fs.filter.Filter(net.oneandone.sushi.fs.filter.Filter);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: getfield      #5                  // Field includes:Ljava/util/List;
      13: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: putfield      #5                  // Field includes:Ljava/util/List;
      19: aload_0
      20: new           #3                  // class java/util/ArrayList
      23: dup
      24: aload_1
      25: getfield      #6                  // Field includesRepr:Ljava/util/List;
      28: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      31: putfield      #6                  // Field includesRepr:Ljava/util/List;
      34: aload_0
      35: new           #3                  // class java/util/ArrayList
      38: dup
      39: aload_1
      40: getfield      #7                  // Field excludes:Ljava/util/List;
      43: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      46: putfield      #7                  // Field excludes:Ljava/util/List;
      49: aload_0
      50: new           #3                  // class java/util/ArrayList
      53: dup
      54: aload_1
      55: getfield      #8                  // Field excludesRepr:Ljava/util/List;
      58: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      61: putfield      #8                  // Field excludesRepr:Ljava/util/List;
      64: aload_0
      65: new           #3                  // class java/util/ArrayList
      68: dup
      69: aload_1
      70: getfield      #9                  // Field predicates:Ljava/util/List;
      73: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      76: putfield      #9                  // Field predicates:Ljava/util/List;
      79: aload_0
      80: aload_1
      81: getfield      #10                 // Field ignoreCase:Z
      84: putfield      #10                 // Field ignoreCase:Z
      87: aload_0
      88: aload_1
      89: getfield      #11                 // Field followLinks:Z
      92: putfield      #11                 // Field followLinks:Z
      95: aload_0
      96: aload_1
      97: getfield      #12                 // Field minDepth:I
     100: putfield      #12                 // Field minDepth:I
     103: aload_0
     104: aload_1
     105: getfield      #15                 // Field maxDepth:I
     108: putfield      #15                 // Field maxDepth:I
     111: return

  public net.oneandone.sushi.fs.filter.Filter ignoreCase();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field ignoreCase:Z
       5: aload_0
       6: areturn

  public net.oneandone.sushi.fs.filter.Filter followLinks();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field followLinks:Z
       5: aload_0
       6: areturn

  public net.oneandone.sushi.fs.filter.Filter minDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field minDepth:I
       5: aload_0
       6: areturn

  public net.oneandone.sushi.fs.filter.Filter maxDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field maxDepth:I
       5: aload_0
       6: areturn

  public net.oneandone.sushi.fs.filter.Filter predicate(net.oneandone.sushi.fs.filter.Predicate);
    Code:
       0: aload_0
       1: getfield      #9                  // Field predicates:Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public net.oneandone.sushi.fs.filter.Filter includeAll();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #18                 // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #19                 // String *
       9: aastore
      10: invokevirtual #20                 // Method includeName:([Ljava/lang/String;)Lnet/oneandone/sushi/fs/filter/Filter;
      13: areturn

  public net.oneandone.sushi.fs.filter.Filter include(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #22                 // Method include:(Ljava/util/List;)Lnet/oneandone/sushi/fs/filter/Filter;
       8: areturn

  public net.oneandone.sushi.fs.filter.Filter include(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          55
      16: aload_2
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #18                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: getfield      #5                  // Field includes:Ljava/util/List;
      30: aload_0
      31: aload_3
      32: invokespecial #26                 // Method compile:(Ljava/lang/String;)[Ljava/lang/Object;
      35: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: getfield      #6                  // Field includesRepr:Ljava/util/List;
      45: aload_3
      46: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          7
      55: aload_0
      56: areturn

  public net.oneandone.sushi.fs.filter.Filter includeName(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     52
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: iconst_1
      22: anewarray     #18                 // class java/lang/String
      25: dup
      26: iconst_0
      27: getstatic     #27                 // Field net/oneandone/sushi/fs/Filesystem.SEPARATOR:Lnet/oneandone/sushi/util/Separator;
      30: ldc           #28                 // String **
      32: aload         5
      34: iconst_0
      35: anewarray     #29                 // class java/lang/Object
      38: invokevirtual #30                 // Method net/oneandone/sushi/util/Separator.join:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
      41: aastore
      42: invokevirtual #31                 // Method include:([Ljava/lang/String;)Lnet/oneandone/sushi/fs/filter/Filter;
      45: pop
      46: iinc          4, 1
      49: goto          8
      52: aload_0
      53: areturn

  public net.oneandone.sushi.fs.filter.Filter exclude(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #32                 // Method exclude:(Ljava/util/List;)Lnet/oneandone/sushi/fs/filter/Filter;
       8: areturn

  public net.oneandone.sushi.fs.filter.Filter exclude(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          55
      16: aload_2
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #18                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: getfield      #7                  // Field excludes:Ljava/util/List;
      30: aload_0
      31: aload_3
      32: invokespecial #26                 // Method compile:(Ljava/lang/String;)[Ljava/lang/Object;
      35: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: getfield      #8                  // Field excludesRepr:Ljava/util/List;
      45: aload_3
      46: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          7
      55: aload_0
      56: areturn

  public net.oneandone.sushi.fs.filter.Filter excludeName(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     52
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: iconst_1
      22: anewarray     #18                 // class java/lang/String
      25: dup
      26: iconst_0
      27: getstatic     #27                 // Field net/oneandone/sushi/fs/Filesystem.SEPARATOR:Lnet/oneandone/sushi/util/Separator;
      30: ldc           #28                 // String **
      32: aload         5
      34: iconst_0
      35: anewarray     #29                 // class java/lang/Object
      38: invokevirtual #30                 // Method net/oneandone/sushi/util/Separator.join:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
      41: aastore
      42: invokevirtual #33                 // Method exclude:([Ljava/lang/String;)Lnet/oneandone/sushi/fs/filter/Filter;
      45: pop
      46: iinc          4, 1
      49: goto          8
      52: aload_0
      53: areturn

  public java.lang.String[] getIncludes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field includesRepr:Ljava/util/List;
       4: invokestatic  #34                 // Method net/oneandone/sushi/util/Strings.toArray:(Ljava/util/Collection;)[Ljava/lang/String;
       7: areturn

  public java.lang.String[] getExcludes();
    Code:
       0: aload_0
       1: getfield      #8                  // Field excludesRepr:Ljava/util/List;
       4: invokestatic  #34                 // Method net/oneandone/sushi/util/Strings.toArray:(Ljava/util/Collection;)[Ljava/lang/String;
       7: areturn

  public java.util.List<net.oneandone.sushi.fs.filter.Predicate> getPredicates();
    Code:
       0: aload_0
       1: getfield      #9                  // Field predicates:Ljava/util/List;
       4: areturn

  private java.lang.Object[] compile(java.lang.String);
    Code:
       0: getstatic     #27                 // Field net/oneandone/sushi/fs/Filesystem.SEPARATOR:Lnet/oneandone/sushi/util/Separator;
       3: aload_1
       4: invokevirtual #35                 // Method net/oneandone/sushi/util/Separator.split:(Ljava/lang/CharSequence;)Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      14: ifne          44
      17: new           #37                 // class java/lang/IllegalArgumentException
      20: dup
      21: new           #38                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #40                 // String empty path:
      30: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_2
      45: iconst_0
      46: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #18                 // class java/lang/String
      54: ldc           #45                 // String
      56: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifeq          89
      62: new           #37                 // class java/lang/IllegalArgumentException
      65: dup
      66: new           #38                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #47                 // String absolute path not allowed:
      75: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_2
      90: aload_2
      91: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      96: iconst_1
      97: isub
      98: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     103: checkcast     #18                 // class java/lang/String
     106: ldc           #45                 // String
     108: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     111: ifeq          141
     114: new           #37                 // class java/lang/IllegalArgumentException
     117: dup
     118: new           #38                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #48                 // String path must not end with separator:
     127: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_1
     131: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_0
     142: aload_2
     143: iconst_0
     144: invokespecial #49                 // Method compileTail:(Ljava/util/List;I)[Ljava/lang/Object;
     147: areturn

  private java.lang.Object[] compileTail(java.util.List<java.lang.String>, int);
    Code:
       0: iload_2
       1: aload_1
       2: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
       7: if_icmpne     12
      10: aconst_null
      11: areturn
      12: aload_1
      13: iload_2
      14: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #18                 // class java/lang/String
      22: aload_0
      23: getfield      #10                 // Field ignoreCase:Z
      26: invokestatic  #50                 // Method net/oneandone/sushi/fs/filter/Glob.compile:(Ljava/lang/String;Z)Ljava/lang/Object;
      29: astore_3
      30: aload_0
      31: aload_1
      32: iload_2
      33: iconst_1
      34: iadd
      35: invokespecial #49                 // Method compileTail:(Ljava/util/List;I)[Ljava/lang/Object;
      38: astore        4
      40: aload_3
      41: getstatic     #51                 // Field net/oneandone/sushi/fs/filter/Glob.STARSTAR:Ljava/util/regex/Pattern;
      44: if_acmpne     82
      47: aload         4
      49: ifnonnull     62
      52: new           #37                 // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #52                 // String ** must be followed by some content
      58: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload         4
      64: iconst_0
      65: aaload
      66: getstatic     #51                 // Field net/oneandone/sushi/fs/filter/Glob.STARSTAR:Ljava/util/regex/Pattern;
      69: if_acmpne     82
      72: new           #37                 // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #53                 // String **/** is not allowed
      78: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iconst_2
      83: anewarray     #29                 // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload_3
      89: aastore
      90: dup
      91: iconst_1
      92: aload         4
      94: aastore
      95: areturn

  public java.util.List<net.oneandone.sushi.fs.Node> collect(net.oneandone.sushi.fs.Node) throws java.io.IOException;
    Code:
       0: new           #3                  // class java/util/ArrayList
       3: dup
       4: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #54                 // Method collect:(Lnet/oneandone/sushi/fs/Node;Ljava/util/List;)V
      14: aload_2
      15: areturn

  public void collect(net.oneandone.sushi.fs.Node, java.util.List<net.oneandone.sushi.fs.Node>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #55                 // class net/oneandone/sushi/fs/filter/CollectAction
       5: dup
       6: aload_2
       7: invokespecial #56                 // Method net/oneandone/sushi/fs/filter/CollectAction."<init>":(Ljava/util/Collection;)V
      10: invokevirtual #57                 // Method invoke:(Lnet/oneandone/sushi/fs/Node;Lnet/oneandone/sushi/fs/filter/Action;)V
      13: return

  public boolean matches(java.lang.String);
    Code:
       0: getstatic     #27                 // Field net/oneandone/sushi/fs/Filesystem.SEPARATOR:Lnet/oneandone/sushi/util/Separator;
       3: aload_1
       4: invokevirtual #35                 // Method net/oneandone/sushi/util/Separator.split:(Ljava/lang/CharSequence;)Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      14: aload_0
      15: getfield      #12                 // Field minDepth:I
      18: if_icmplt     34
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      27: aload_0
      28: getfield      #15                 // Field maxDepth:I
      31: if_icmple     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: getfield      #9                  // Field predicates:Ljava/util/List;
      40: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      45: ifle          58
      48: new           #58                 // class java/lang/UnsupportedOperationException
      51: dup
      52: ldc           #59                 // String cannot match with predicates
      54: invokespecial #60                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: iconst_0
      60: aload_2
      61: new           #3                  // class java/util/ArrayList
      64: dup
      65: aload_0
      66: getfield      #5                  // Field includes:Ljava/util/List;
      69: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      72: new           #3                  // class java/util/ArrayList
      75: dup
      76: aload_0
      77: getfield      #7                  // Field excludes:Ljava/util/List;
      80: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      83: invokespecial #61                 // Method matches:(ILjava/util/List;Ljava/util/List;Ljava/util/List;)Z
      86: ireturn

  private boolean matches(int, java.util.List<java.lang.String>, java.util.List<java.lang.Object[]>, java.util.List<java.lang.Object[]>);
    Code:
       0: iload_1
       1: aload_2
       2: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
       7: if_icmplt     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: iload_1
      14: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #18                 // class java/lang/String
      22: astore        7
      24: new           #3                  // class java/util/ArrayList
      27: dup
      28: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      31: astore        5
      33: new           #3                  // class java/util/ArrayList
      36: dup
      37: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      40: astore        6
      42: aload         7
      44: aload_3
      45: aload         5
      47: invokestatic  #62                 // Method doMatch:(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Z
      50: istore        8
      52: aload         7
      54: aload         4
      56: aload         6
      58: invokestatic  #62                 // Method doMatch:(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Z
      61: istore        9
      63: iload         8
      65: ifeq          75
      68: iload         9
      70: ifne          75
      73: iconst_1
      74: ireturn
      75: aload         5
      77: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      82: ifle          106
      85: aload         6
      87: invokestatic  #63                 // Method excludesAll:(Ljava/util/List;)Z
      90: ifne          106
      93: aload_0
      94: iload_1
      95: iconst_1
      96: iadd
      97: aload_2
      98: aload         5
     100: aload         6
     102: invokespecial #61                 // Method matches:(ILjava/util/List;Ljava/util/List;Ljava/util/List;)Z
     105: ireturn
     106: iconst_0
     107: ireturn

  public void invoke(net.oneandone.sushi.fs.Node, net.oneandone.sushi.fs.filter.Action) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: aload_1
       4: invokevirtual #64                 // Method net/oneandone/sushi/fs/Node.isLink:()Z
       7: new           #3                  // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #5                  // Field includes:Ljava/util/List;
      15: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: new           #3                  // class java/util/ArrayList
      21: dup
      22: aload_0
      23: getfield      #7                  // Field excludes:Ljava/util/List;
      26: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      29: aload_2
      30: invokespecial #65                 // Method doInvoke:(ILnet/oneandone/sushi/fs/Node;ZLjava/util/List;Ljava/util/List;Lnet/oneandone/sushi/fs/filter/Action;)V
      33: return

  private void doInvoke(int, net.oneandone.sushi.fs.Node, boolean, java.util.List<java.lang.Object[]>, java.util.List<java.lang.Object[]>, net.oneandone.sushi.fs.filter.Action) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #15                 // Field maxDepth:I
       5: if_icmplt     9
       8: return
       9: aload_0
      10: getfield      #11                 // Field followLinks:Z
      13: ifne          21
      16: iload_3
      17: ifeq          21
      20: return
      21: aload_0
      22: aload_2
      23: aload         4
      25: invokespecial #66                 // Method list:(Lnet/oneandone/sushi/fs/Node;Ljava/util/List;)Ljava/util/List;
      28: astore        7
      30: goto          47
      33: astore        14
      35: aload         6
      37: aload_2
      38: iload_3
      39: aload         14
      41: invokeinterface #68,  4           // InterfaceMethod net/oneandone/sushi/fs/filter/Action.enterFailed:(Lnet/oneandone/sushi/fs/Node;ZLjava/io/IOException;)V
      46: return
      47: aload         7
      49: ifnonnull     55
      52: goto          237
      55: aload         6
      57: aload_2
      58: iload_3
      59: invokeinterface #69,  3           // InterfaceMethod net/oneandone/sushi/fs/filter/Action.enter:(Lnet/oneandone/sushi/fs/Node;Z)V
      64: iinc          1, 1
      67: aload         7
      69: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      74: astore        14
      76: aload         14
      78: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          228
      86: aload         14
      88: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #70                 // class net/oneandone/sushi/fs/Node
      96: astore        15
      98: aload         15
     100: invokevirtual #71                 // Method net/oneandone/sushi/fs/Node.getName:()Ljava/lang/String;
     103: astore        10
     105: aload         15
     107: invokevirtual #64                 // Method net/oneandone/sushi/fs/Node.isLink:()Z
     110: istore        11
     112: new           #3                  // class java/util/ArrayList
     115: dup
     116: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
     119: astore        8
     121: new           #3                  // class java/util/ArrayList
     124: dup
     125: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
     128: astore        9
     130: aload         10
     132: aload         4
     134: aload         8
     136: invokestatic  #62                 // Method doMatch:(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Z
     139: istore        12
     141: aload         10
     143: aload         5
     145: aload         9
     147: invokestatic  #62                 // Method doMatch:(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Z
     150: istore        13
     152: iload         12
     154: ifeq          192
     157: iload         13
     159: ifne          192
     162: iload_1
     163: aload_0
     164: getfield      #12                 // Field minDepth:I
     167: if_icmplt     192
     170: aload_0
     171: aload         15
     173: iload         11
     175: invokespecial #72                 // Method matchPredicates:(Lnet/oneandone/sushi/fs/Node;Z)Z
     178: ifeq          192
     181: aload         6
     183: aload         15
     185: iload         11
     187: invokeinterface #73,  3           // InterfaceMethod net/oneandone/sushi/fs/filter/Action.select:(Lnet/oneandone/sushi/fs/Node;Z)V
     192: aload         8
     194: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
     199: ifle          225
     202: aload         9
     204: invokestatic  #63                 // Method excludesAll:(Ljava/util/List;)Z
     207: ifne          225
     210: aload_0
     211: iload_1
     212: aload         15
     214: iload         11
     216: aload         8
     218: aload         9
     220: aload         6
     222: invokespecial #65                 // Method doInvoke:(ILnet/oneandone/sushi/fs/Node;ZLjava/util/List;Ljava/util/List;Lnet/oneandone/sushi/fs/filter/Action;)V
     225: goto          76
     228: aload         6
     230: aload_2
     231: iload_3
     232: invokeinterface #74,  3           // InterfaceMethod net/oneandone/sushi/fs/filter/Action.leave:(Lnet/oneandone/sushi/fs/Node;Z)V
     237: return
    Exception table:
       from    to  target type
          21    30    33   Class java/io/IOException

  private java.util.List<? extends net.oneandone.sushi.fs.Node> list(net.oneandone.sushi.fs.Node<?>, java.util.List<java.lang.Object[]>) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmpne     71
      10: aload_2
      11: iconst_0
      12: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #75                 // class "[Ljava/lang/Object;"
      20: iconst_0
      21: aaload
      22: instanceof    #18                 // class java/lang/String
      25: ifeq          71
      28: aload_1
      29: iconst_1
      30: anewarray     #18                 // class java/lang/String
      33: dup
      34: iconst_0
      35: aload_2
      36: iconst_0
      37: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #75                 // class "[Ljava/lang/Object;"
      45: iconst_0
      46: aaload
      47: checkcast     #18                 // class java/lang/String
      50: aastore
      51: invokevirtual #76                 // Method net/oneandone/sushi/fs/Node.join:([Ljava/lang/String;)Lnet/oneandone/sushi/fs/Node;
      54: astore_3
      55: aload_3
      56: invokevirtual #77                 // Method net/oneandone/sushi/fs/Node.exists:()Z
      59: ifeq          67
      62: aload_3
      63: invokestatic  #78                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      66: areturn
      67: invokestatic  #79                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      70: areturn
      71: aload_1
      72: invokevirtual #80                 // Method net/oneandone/sushi/fs/Node.list:()Ljava/util/List;
      75: areturn

  private boolean matchPredicates(net.oneandone.sushi.fs.Node, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field predicates:Ljava/util/List;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_3
      20: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #81                 // class net/oneandone/sushi/fs/filter/Predicate
      28: astore        4
      30: aload         4
      32: aload_1
      33: iload_2
      34: invokeinterface #82,  3           // InterfaceMethod net/oneandone/sushi/fs/filter/Predicate.matches:(Lnet/oneandone/sushi/fs/Node;Z)Z
      39: ifne          44
      42: iconst_0
      43: ireturn
      44: goto          10
      47: iconst_1
      48: ireturn

  private static boolean excludesAll(java.util.List<java.lang.Object[]>);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
       6: istore_2
       7: iconst_0
       8: istore_1
       9: iload_1
      10: iload_2
      11: if_icmpge     60
      14: aload_0
      15: iload_1
      16: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #75                 // class "[Ljava/lang/Object;"
      24: astore_3
      25: aload_3
      26: iconst_1
      27: aaload
      28: checkcast     #75                 // class "[Ljava/lang/Object;"
      31: astore        4
      33: aload_3
      34: iconst_0
      35: aaload
      36: getstatic     #51                 // Field net/oneandone/sushi/fs/filter/Glob.STARSTAR:Ljava/util/regex/Pattern;
      39: if_acmpne     54
      42: aload         4
      44: iconst_0
      45: aaload
      46: getstatic     #83                 // Field net/oneandone/sushi/fs/filter/Glob.STAR:Ljava/util/regex/Pattern;
      49: if_acmpne     54
      52: iconst_1
      53: ireturn
      54: iinc          1, 1
      57: goto          9
      60: iconst_0
      61: ireturn

  private static boolean doMatch(java.lang.String, java.util.List<java.lang.Object[]>, java.util.List<java.lang.Object[]>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
       8: istore        5
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload         5
      17: if_icmpge     129
      20: aload_1
      21: iload         4
      23: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #75                 // class "[Ljava/lang/Object;"
      31: astore        6
      33: aload         6
      35: ifnonnull     48
      38: new           #84                 // class java/lang/IllegalStateException
      41: dup
      42: ldc           #85                 // String unexpected empty path
      44: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload         6
      50: iconst_0
      51: aaload
      52: astore        7
      54: aload         6
      56: iconst_1
      57: aaload
      58: checkcast     #75                 // class "[Ljava/lang/Object;"
      61: astore        8
      63: aload         7
      65: getstatic     #51                 // Field net/oneandone/sushi/fs/filter/Glob.STARSTAR:Ljava/util/regex/Pattern;
      68: if_acmpne     95
      71: aload_2
      72: aload         6
      74: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload         8
      82: iconst_0
      83: aaload
      84: astore        7
      86: aload         8
      88: iconst_1
      89: aaload
      90: checkcast     #75                 // class "[Ljava/lang/Object;"
      93: astore        8
      95: aload         7
      97: aload_0
      98: invokestatic  #87                 // Method matches:(Ljava/lang/Object;Ljava/lang/String;)Z
     101: ifeq          123
     104: aload         8
     106: ifnull        121
     109: aload_2
     110: aload         8
     112: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     117: pop
     118: goto          123
     121: iconst_1
     122: istore_3
     123: iinc          4, 1
     126: goto          13
     129: iload_3
     130: ireturn

  private static boolean matches(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: instanceof    #18                 // class java/lang/String
       4: ifeq          13
       7: aload_1
       8: aload_0
       9: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ireturn
      13: aload_0
      14: checkcast     #88                 // class java/util/regex/Pattern
      17: aload_1
      18: invokestatic  #89                 // Method net/oneandone/sushi/fs/filter/Glob.matches:(Ljava/util/regex/Pattern;Ljava/lang/String;)Z
      21: ireturn

  public java.lang.String toString();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #90                 // String includes=
       9: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field includes:Ljava/util/List;
      16: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #92                 // String , excludes=
      21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field excludes:Ljava/util/List;
      28: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  static {};
    Code:
       0: new           #13                 // class net/oneandone/sushi/fs/filter/Filter
       3: dup
       4: invokespecial #93                 // Method "<init>":()V
       7: iconst_1
       8: anewarray     #18                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #94                 // String **/*
      15: aastore
      16: invokevirtual #33                 // Method exclude:([Ljava/lang/String;)Lnet/oneandone/sushi/fs/filter/Filter;
      19: putstatic     #95                 // Field NOTHING:Lnet/oneandone/sushi/fs/filter/Filter;
      22: return
}
