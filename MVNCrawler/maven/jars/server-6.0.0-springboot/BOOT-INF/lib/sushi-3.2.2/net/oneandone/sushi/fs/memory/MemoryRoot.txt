Compiled from "MemoryRoot.java"
public class net.oneandone.sushi.fs.memory.MemoryRoot implements net.oneandone.sushi.fs.Root<net.oneandone.sushi.fs.memory.MemoryNode> {
  public final net.oneandone.sushi.fs.memory.MemoryFilesystem filesystem;

  public final int id;

  private final java.util.Map<java.lang.String, net.oneandone.sushi.fs.memory.MemoryNode> nodes;

  private final java.util.Map<java.lang.String, java.lang.Object> store;

  public net.oneandone.sushi.fs.memory.MemoryRoot(net.oneandone.sushi.fs.memory.MemoryFilesystem, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field filesystem:Lnet/oneandone/sushi/fs/memory/MemoryFilesystem;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field id:I
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field nodes:Ljava/util/Map;
      25: aload_0
      26: new           #4                  // class java/util/HashMap
      29: dup
      30: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      33: putfield      #7                  // Field store:Ljava/util/Map;
      36: aload_0
      37: new           #8                  // class net/oneandone/sushi/fs/memory/MemoryNode
      40: dup
      41: aload_0
      42: ldc           #9                  // String
      44: getstatic     #10                 // Field net/oneandone/sushi/fs/memory/Type.DIRECTORY:Lnet/oneandone/sushi/fs/memory/Type;
      47: invokespecial #11                 // Method net/oneandone/sushi/fs/memory/MemoryNode."<init>":(Lnet/oneandone/sushi/fs/memory/MemoryRoot;Ljava/lang/String;Lnet/oneandone/sushi/fs/memory/Type;)V
      50: invokevirtual #12                 // Method add:(Lnet/oneandone/sushi/fs/memory/MemoryNode;)V
      53: return

  public net.oneandone.sushi.fs.memory.MemoryFilesystem getFilesystem();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filesystem:Lnet/oneandone/sushi/fs/memory/MemoryFilesystem;
       4: areturn

  public java.lang.String getId();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #15                 // String //
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field id:I
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #18                 // String /
      21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public net.oneandone.sushi.fs.memory.MemoryNode node(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        13
       4: new           #20                 // class java/lang/IllegalArgumentException
       7: dup
       8: aload_2
       9: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: aload_0
      14: getfield      #6                  // Field nodes:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #8                  // class net/oneandone/sushi/fs/memory/MemoryNode
      26: astore_3
      27: aload_3
      28: ifnonnull     59
      31: new           #8                  // class net/oneandone/sushi/fs/memory/MemoryNode
      34: dup
      35: aload_0
      36: aload_1
      37: getstatic     #23                 // Field net/oneandone/sushi/fs/memory/Type.NONE:Lnet/oneandone/sushi/fs/memory/Type;
      40: invokespecial #11                 // Method net/oneandone/sushi/fs/memory/MemoryNode."<init>":(Lnet/oneandone/sushi/fs/memory/MemoryRoot;Ljava/lang/String;Lnet/oneandone/sushi/fs/memory/Type;)V
      43: astore_3
      44: aload_0
      45: getfield      #6                  // Field nodes:Ljava/util/Map;
      48: aload_3
      49: invokevirtual #24                 // Method net/oneandone/sushi/fs/memory/MemoryNode.getPath:()Ljava/lang/String;
      52: aload_3
      53: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_3
      60: areturn

  public void add(net.oneandone.sushi.fs.memory.MemoryNode);
    Code:
       0: aload_0
       1: getfield      #6                  // Field nodes:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #24                 // Method net/oneandone/sushi/fs/memory/MemoryNode.getPath:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void free(net.oneandone.sushi.fs.memory.MemoryNode) throws net.oneandone.sushi.fs.FileNotFoundException, net.oneandone.sushi.fs.DeleteException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #24                 // Method net/oneandone/sushi/fs/memory/MemoryNode.getPath:()Ljava/lang/String;
       8: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: instanceof    #27                 // class net/oneandone/sushi/fs/file/FileNode
      18: ifeq          29
      21: aload_2
      22: checkcast     #27                 // class net/oneandone/sushi/fs/file/FileNode
      25: invokevirtual #28                 // Method net/oneandone/sushi/fs/file/FileNode.deleteFile:()Lnet/oneandone/sushi/fs/file/FileNode;
      28: pop
      29: return

  public long length(java.lang.String) throws net.oneandone.sushi.fs.SizeException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: instanceof    #27                 // class net/oneandone/sushi/fs/file/FileNode
      15: ifeq          26
      18: aload_2
      19: checkcast     #27                 // class net/oneandone/sushi/fs/file/FileNode
      22: invokevirtual #29                 // Method net/oneandone/sushi/fs/file/FileNode.size:()J
      25: lreturn
      26: aload_2
      27: checkcast     #30                 // class "[B"
      30: arraylength
      31: i2l
      32: lreturn

  public java.util.List<net.oneandone.sushi.fs.memory.MemoryNode> list(java.lang.String);
    Code:
       0: new           #31                 // class java/util/ArrayList
       3: dup
       4: invokespecial #32                 // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #6                  // Field nodes:Ljava/util/Map;
      13: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          112
      35: aload         5
      37: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #8                  // class net/oneandone/sushi/fs/memory/MemoryNode
      45: astore        6
      47: aload         6
      49: invokevirtual #24                 // Method net/oneandone/sushi/fs/memory/MemoryNode.getPath:()Ljava/lang/String;
      52: astore_2
      53: aload_2
      54: bipush        47
      56: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I
      59: istore_3
      60: aload_1
      61: aload_2
      62: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifne          109
      68: aload_1
      69: iload_3
      70: iconst_m1
      71: if_icmpne     79
      74: ldc           #9                  // String
      76: goto          85
      79: aload_2
      80: iconst_0
      81: iload_3
      82: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      85: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      88: ifeq          109
      91: aload         6
      93: invokevirtual #41                 // Method net/oneandone/sushi/fs/memory/MemoryNode.exists:()Z
      96: ifeq          109
      99: aload         4
     101: aload         6
     103: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     108: pop
     109: goto          25
     112: aload         4
     114: areturn

  java.io.InputStream open(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: instanceof    #27                 // class net/oneandone/sushi/fs/file/FileNode
      15: ifeq          26
      18: aload_2
      19: checkcast     #27                 // class net/oneandone/sushi/fs/file/FileNode
      22: invokevirtual #43                 // Method net/oneandone/sushi/fs/file/FileNode.newInputStream:()Ljava/io/InputStream;
      25: areturn
      26: new           #44                 // class net/oneandone/sushi/io/CheckedByteArrayInputStream
      29: dup
      30: aload_2
      31: checkcast     #30                 // class "[B"
      34: invokespecial #45                 // Method net/oneandone/sushi/io/CheckedByteArrayInputStream."<init>":([B)V
      37: areturn

  byte[] readBytes(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: instanceof    #27                 // class net/oneandone/sushi/fs/file/FileNode
      15: ifeq          26
      18: aload_2
      19: checkcast     #27                 // class net/oneandone/sushi/fs/file/FileNode
      22: invokevirtual #46                 // Method net/oneandone/sushi/fs/file/FileNode.readBytes:()[B
      25: areturn
      26: aload_2
      27: checkcast     #30                 // class "[B"
      30: astore_3
      31: aload_3
      32: aload_3
      33: arraylength
      34: invokestatic  #47                 // Method java/util/Arrays.copyOf:([BI)[B
      37: areturn

  void store(java.lang.String, byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore        4
      12: aload         4
      14: instanceof    #27                 // class net/oneandone/sushi/fs/file/FileNode
      17: ifeq          29
      20: aload         4
      22: checkcast     #27                 // class net/oneandone/sushi/fs/file/FileNode
      25: invokevirtual #48                 // Method net/oneandone/sushi/fs/file/FileNode.deleteTree:()Lnet/oneandone/sushi/fs/file/FileNode;
      28: pop
      29: iload_3
      30: aload_0
      31: getfield      #2                  // Field filesystem:Lnet/oneandone/sushi/fs/memory/MemoryFilesystem;
      34: invokevirtual #49                 // Method net/oneandone/sushi/fs/memory/MemoryFilesystem.getMaxInMemorySize:()I
      37: if_icmple     81
      40: aload_0
      41: getfield      #2                  // Field filesystem:Lnet/oneandone/sushi/fs/memory/MemoryFilesystem;
      44: invokevirtual #50                 // Method net/oneandone/sushi/fs/memory/MemoryFilesystem.getWorld:()Lnet/oneandone/sushi/fs/World;
      47: invokevirtual #51                 // Method net/oneandone/sushi/fs/World.getTemp:()Lnet/oneandone/sushi/fs/file/FileNode;
      50: invokevirtual #52                 // Method net/oneandone/sushi/fs/file/FileNode.createTempFile:()Lnet/oneandone/sushi/fs/file/FileNode;
      53: astore        5
      55: aload         5
      57: aload_2
      58: iconst_0
      59: iload_3
      60: iconst_0
      61: invokevirtual #53                 // Method net/oneandone/sushi/fs/file/FileNode.writeBytes:([BIIZ)Lnet/oneandone/sushi/fs/Node;
      64: pop
      65: aload_0
      66: getfield      #7                  // Field store:Ljava/util/Map;
      69: aload_1
      70: aload         5
      72: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: goto          108
      81: iload_3
      82: newarray       byte
      84: astore        6
      86: aload_2
      87: iconst_0
      88: aload         6
      90: iconst_0
      91: iload_3
      92: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      95: aload_0
      96: getfield      #7                  // Field store:Ljava/util/Map;
      99: aload_1
     100: aload         6
     102: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: return

  public net.oneandone.sushi.fs.Node node(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #55                 // Method node:(Ljava/lang/String;Ljava/lang/String;)Lnet/oneandone/sushi/fs/memory/MemoryNode;
       6: areturn

  public net.oneandone.sushi.fs.Filesystem getFilesystem();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getFilesystem:()Lnet/oneandone/sushi/fs/memory/MemoryFilesystem;
       4: areturn
}
