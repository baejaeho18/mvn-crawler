Compiled from "SupplementalGroupsStrategyOptionsFluent.java"
public interface io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent<A extends io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToRanges(int, io.fabric8.openshift.api.model.IDRange);

  public abstract A setToRanges(int, io.fabric8.openshift.api.model.IDRange);

  public abstract A addToRanges(io.fabric8.openshift.api.model.IDRange...);

  public abstract A addAllToRanges(java.util.Collection<io.fabric8.openshift.api.model.IDRange>);

  public abstract A removeFromRanges(io.fabric8.openshift.api.model.IDRange...);

  public abstract A removeAllFromRanges(java.util.Collection<io.fabric8.openshift.api.model.IDRange>);

  public abstract A removeMatchingFromRanges(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.IDRangeBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.IDRange> getRanges();

  public abstract java.util.List<io.fabric8.openshift.api.model.IDRange> buildRanges();

  public abstract io.fabric8.openshift.api.model.IDRange buildRange(int);

  public abstract io.fabric8.openshift.api.model.IDRange buildFirstRange();

  public abstract io.fabric8.openshift.api.model.IDRange buildLastRange();

  public abstract io.fabric8.openshift.api.model.IDRange buildMatchingRange(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.IDRangeBuilder>);

  public abstract java.lang.Boolean hasMatchingRange(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.IDRangeBuilder>);

  public abstract A withRanges(java.util.List<io.fabric8.openshift.api.model.IDRange>);

  public abstract A withRanges(io.fabric8.openshift.api.model.IDRange...);

  public abstract java.lang.Boolean hasRanges();

  public abstract A addNewRange(java.lang.Long, java.lang.Long);

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> addNewRange();

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> addNewRangeLike(io.fabric8.openshift.api.model.IDRange);

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> setNewRangeLike(int, io.fabric8.openshift.api.model.IDRange);

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> editRange(int);

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> editFirstRange();

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> editLastRange();

  public abstract io.fabric8.openshift.api.model.SupplementalGroupsStrategyOptionsFluent$RangesNested<A> editMatchingRange(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.IDRangeBuilder>);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
