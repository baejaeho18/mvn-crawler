Compiled from "UserFluent.java"
public interface io.fabric8.openshift.api.model.UserFluent<A extends io.fabric8.openshift.api.model.UserFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getFullName();

  public abstract A withFullName(java.lang.String);

  public abstract java.lang.Boolean hasFullName();

  public abstract A withNewFullName(java.lang.String);

  public abstract A withNewFullName(java.lang.StringBuilder);

  public abstract A withNewFullName(java.lang.StringBuffer);

  public abstract A addToGroups(int, java.lang.String);

  public abstract A setToGroups(int, java.lang.String);

  public abstract A addToGroups(java.lang.String...);

  public abstract A addAllToGroups(java.util.Collection<java.lang.String>);

  public abstract A removeFromGroups(java.lang.String...);

  public abstract A removeAllFromGroups(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getGroups();

  public abstract java.lang.String getGroup(int);

  public abstract java.lang.String getFirstGroup();

  public abstract java.lang.String getLastGroup();

  public abstract java.lang.String getMatchingGroup(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingGroup(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withGroups(java.util.List<java.lang.String>);

  public abstract A withGroups(java.lang.String...);

  public abstract java.lang.Boolean hasGroups();

  public abstract A addNewGroup(java.lang.String);

  public abstract A addNewGroup(java.lang.StringBuilder);

  public abstract A addNewGroup(java.lang.StringBuffer);

  public abstract A addToIdentities(int, java.lang.String);

  public abstract A setToIdentities(int, java.lang.String);

  public abstract A addToIdentities(java.lang.String...);

  public abstract A addAllToIdentities(java.util.Collection<java.lang.String>);

  public abstract A removeFromIdentities(java.lang.String...);

  public abstract A removeAllFromIdentities(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getIdentities();

  public abstract java.lang.String getIdentity(int);

  public abstract java.lang.String getFirstIdentity();

  public abstract java.lang.String getLastIdentity();

  public abstract java.lang.String getMatchingIdentity(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingIdentity(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withIdentities(java.util.List<java.lang.String>);

  public abstract A withIdentities(java.lang.String...);

  public abstract java.lang.Boolean hasIdentities();

  public abstract A addNewIdentity(java.lang.String);

  public abstract A addNewIdentity(java.lang.StringBuilder);

  public abstract A addNewIdentity(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.fabric8.openshift.api.model.UserFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.openshift.api.model.UserFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.openshift.api.model.UserFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.openshift.api.model.UserFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.openshift.api.model.UserFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);
}
