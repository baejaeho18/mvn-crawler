Compiled from "RecreateDeploymentStrategyParamsFluent.java"
public interface io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent<A extends io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.openshift.api.model.LifecycleHook getMid();

  public abstract io.fabric8.openshift.api.model.LifecycleHook buildMid();

  public abstract A withMid(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract java.lang.Boolean hasMid();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$MidNested<A> withNewMid();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$MidNested<A> withNewMidLike(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$MidNested<A> editMid();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$MidNested<A> editOrNewMid();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$MidNested<A> editOrNewMidLike(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract io.fabric8.openshift.api.model.LifecycleHook getPost();

  public abstract io.fabric8.openshift.api.model.LifecycleHook buildPost();

  public abstract A withPost(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract java.lang.Boolean hasPost();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PostNested<A> withNewPost();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PostNested<A> withNewPostLike(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PostNested<A> editPost();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PostNested<A> editOrNewPost();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PostNested<A> editOrNewPostLike(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract io.fabric8.openshift.api.model.LifecycleHook getPre();

  public abstract io.fabric8.openshift.api.model.LifecycleHook buildPre();

  public abstract A withPre(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract java.lang.Boolean hasPre();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PreNested<A> withNewPre();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PreNested<A> withNewPreLike(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PreNested<A> editPre();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PreNested<A> editOrNewPre();

  public abstract io.fabric8.openshift.api.model.RecreateDeploymentStrategyParamsFluent$PreNested<A> editOrNewPreLike(io.fabric8.openshift.api.model.LifecycleHook);

  public abstract java.lang.Long getTimeoutSeconds();

  public abstract A withTimeoutSeconds(java.lang.Long);

  public abstract java.lang.Boolean hasTimeoutSeconds();
}
