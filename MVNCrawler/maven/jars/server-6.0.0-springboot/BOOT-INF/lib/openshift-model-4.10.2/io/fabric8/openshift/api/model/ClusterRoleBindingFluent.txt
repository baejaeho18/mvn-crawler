Compiled from "ClusterRoleBindingFluent.java"
public interface io.fabric8.openshift.api.model.ClusterRoleBindingFluent<A extends io.fabric8.openshift.api.model.ClusterRoleBindingFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToGroupNames(int, java.lang.String);

  public abstract A setToGroupNames(int, java.lang.String);

  public abstract A addToGroupNames(java.lang.String...);

  public abstract A addAllToGroupNames(java.util.Collection<java.lang.String>);

  public abstract A removeFromGroupNames(java.lang.String...);

  public abstract A removeAllFromGroupNames(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getGroupNames();

  public abstract java.lang.String getGroupName(int);

  public abstract java.lang.String getFirstGroupName();

  public abstract java.lang.String getLastGroupName();

  public abstract java.lang.String getMatchingGroupName(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingGroupName(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withGroupNames(java.util.List<java.lang.String>);

  public abstract A withGroupNames(java.lang.String...);

  public abstract java.lang.Boolean hasGroupNames();

  public abstract A addNewGroupName(java.lang.String);

  public abstract A addNewGroupName(java.lang.StringBuilder);

  public abstract A addNewGroupName(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.kubernetes.api.model.ObjectReference getRoleRef();

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildRoleRef();

  public abstract A withRoleRef(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasRoleRef();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$RoleRefNested<A> withNewRoleRef();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$RoleRefNested<A> withNewRoleRefLike(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$RoleRefNested<A> editRoleRef();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$RoleRefNested<A> editOrNewRoleRef();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$RoleRefNested<A> editOrNewRoleRefLike(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract A addToSubjects(int, io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract A setToSubjects(int, io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract A addToSubjects(io.fabric8.kubernetes.api.model.ObjectReference...);

  public abstract A addAllToSubjects(java.util.Collection<io.fabric8.kubernetes.api.model.ObjectReference>);

  public abstract A removeFromSubjects(io.fabric8.kubernetes.api.model.ObjectReference...);

  public abstract A removeAllFromSubjects(java.util.Collection<io.fabric8.kubernetes.api.model.ObjectReference>);

  public abstract A removeMatchingFromSubjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.ObjectReference> getSubjects();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.ObjectReference> buildSubjects();

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildSubject(int);

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildFirstSubject();

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildLastSubject();

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildMatchingSubject(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract java.lang.Boolean hasMatchingSubject(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract A withSubjects(java.util.List<io.fabric8.kubernetes.api.model.ObjectReference>);

  public abstract A withSubjects(io.fabric8.kubernetes.api.model.ObjectReference...);

  public abstract java.lang.Boolean hasSubjects();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> addNewSubject();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> addNewSubjectLike(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> setNewSubjectLike(int, io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> editSubject(int);

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> editFirstSubject();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> editLastSubject();

  public abstract io.fabric8.openshift.api.model.ClusterRoleBindingFluent$SubjectsNested<A> editMatchingSubject(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract A addToUserNames(int, java.lang.String);

  public abstract A setToUserNames(int, java.lang.String);

  public abstract A addToUserNames(java.lang.String...);

  public abstract A addAllToUserNames(java.util.Collection<java.lang.String>);

  public abstract A removeFromUserNames(java.lang.String...);

  public abstract A removeAllFromUserNames(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getUserNames();

  public abstract java.lang.String getUserName(int);

  public abstract java.lang.String getFirstUserName();

  public abstract java.lang.String getLastUserName();

  public abstract java.lang.String getMatchingUserName(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingUserName(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withUserNames(java.util.List<java.lang.String>);

  public abstract A withUserNames(java.lang.String...);

  public abstract java.lang.Boolean hasUserNames();

  public abstract A addNewUserName(java.lang.String);

  public abstract A addNewUserName(java.lang.StringBuilder);

  public abstract A addNewUserName(java.lang.StringBuffer);
}
