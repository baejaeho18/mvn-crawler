Compiled from "RoleBindingRestrictionSpecFluent.java"
public interface io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent<A extends io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.openshift.api.model.GroupRestriction getGrouprestriction();

  public abstract io.fabric8.openshift.api.model.GroupRestriction buildGrouprestriction();

  public abstract A withGrouprestriction(io.fabric8.openshift.api.model.GroupRestriction);

  public abstract java.lang.Boolean hasGrouprestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$GrouprestrictionNested<A> withNewGrouprestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$GrouprestrictionNested<A> withNewGrouprestrictionLike(io.fabric8.openshift.api.model.GroupRestriction);

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$GrouprestrictionNested<A> editGrouprestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$GrouprestrictionNested<A> editOrNewGrouprestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$GrouprestrictionNested<A> editOrNewGrouprestrictionLike(io.fabric8.openshift.api.model.GroupRestriction);

  public abstract io.fabric8.openshift.api.model.ServiceAccountRestriction getServiceaccountrestriction();

  public abstract io.fabric8.openshift.api.model.ServiceAccountRestriction buildServiceaccountrestriction();

  public abstract A withServiceaccountrestriction(io.fabric8.openshift.api.model.ServiceAccountRestriction);

  public abstract java.lang.Boolean hasServiceaccountrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$ServiceaccountrestrictionNested<A> withNewServiceaccountrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$ServiceaccountrestrictionNested<A> withNewServiceaccountrestrictionLike(io.fabric8.openshift.api.model.ServiceAccountRestriction);

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$ServiceaccountrestrictionNested<A> editServiceaccountrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$ServiceaccountrestrictionNested<A> editOrNewServiceaccountrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$ServiceaccountrestrictionNested<A> editOrNewServiceaccountrestrictionLike(io.fabric8.openshift.api.model.ServiceAccountRestriction);

  public abstract io.fabric8.openshift.api.model.UserRestriction getUserrestriction();

  public abstract io.fabric8.openshift.api.model.UserRestriction buildUserrestriction();

  public abstract A withUserrestriction(io.fabric8.openshift.api.model.UserRestriction);

  public abstract java.lang.Boolean hasUserrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$UserrestrictionNested<A> withNewUserrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$UserrestrictionNested<A> withNewUserrestrictionLike(io.fabric8.openshift.api.model.UserRestriction);

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$UserrestrictionNested<A> editUserrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$UserrestrictionNested<A> editOrNewUserrestriction();

  public abstract io.fabric8.openshift.api.model.RoleBindingRestrictionSpecFluent$UserrestrictionNested<A> editOrNewUserrestrictionLike(io.fabric8.openshift.api.model.UserRestriction);
}
