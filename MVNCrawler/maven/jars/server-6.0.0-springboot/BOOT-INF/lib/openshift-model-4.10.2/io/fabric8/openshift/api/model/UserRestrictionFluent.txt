Compiled from "UserRestrictionFluent.java"
public interface io.fabric8.openshift.api.model.UserRestrictionFluent<A extends io.fabric8.openshift.api.model.UserRestrictionFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToGroups(int, java.lang.String);

  public abstract A setToGroups(int, java.lang.String);

  public abstract A addToGroups(java.lang.String...);

  public abstract A addAllToGroups(java.util.Collection<java.lang.String>);

  public abstract A removeFromGroups(java.lang.String...);

  public abstract A removeAllFromGroups(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getGroups();

  public abstract java.lang.String getGroup(int);

  public abstract java.lang.String getFirstGroup();

  public abstract java.lang.String getLastGroup();

  public abstract java.lang.String getMatchingGroup(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingGroup(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withGroups(java.util.List<java.lang.String>);

  public abstract A withGroups(java.lang.String...);

  public abstract java.lang.Boolean hasGroups();

  public abstract A addNewGroup(java.lang.String);

  public abstract A addNewGroup(java.lang.StringBuilder);

  public abstract A addNewGroup(java.lang.StringBuffer);

  public abstract A addToLabels(int, io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract A setToLabels(int, io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract A addToLabels(io.fabric8.kubernetes.api.model.LabelSelector...);

  public abstract A addAllToLabels(java.util.Collection<io.fabric8.kubernetes.api.model.LabelSelector>);

  public abstract A removeFromLabels(io.fabric8.kubernetes.api.model.LabelSelector...);

  public abstract A removeAllFromLabels(java.util.Collection<io.fabric8.kubernetes.api.model.LabelSelector>);

  public abstract A removeMatchingFromLabels(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.LabelSelector> getLabels();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.LabelSelector> buildLabels();

  public abstract io.fabric8.kubernetes.api.model.LabelSelector buildLabel(int);

  public abstract io.fabric8.kubernetes.api.model.LabelSelector buildFirstLabel();

  public abstract io.fabric8.kubernetes.api.model.LabelSelector buildLastLabel();

  public abstract io.fabric8.kubernetes.api.model.LabelSelector buildMatchingLabel(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract java.lang.Boolean hasMatchingLabel(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract A withLabels(java.util.List<io.fabric8.kubernetes.api.model.LabelSelector>);

  public abstract A withLabels(io.fabric8.kubernetes.api.model.LabelSelector...);

  public abstract java.lang.Boolean hasLabels();

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> addNewLabel();

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> addNewLabelLike(io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> setNewLabelLike(int, io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> editLabel(int);

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> editFirstLabel();

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> editLastLabel();

  public abstract io.fabric8.openshift.api.model.UserRestrictionFluent$LabelsNested<A> editMatchingLabel(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract A addToUsers(int, java.lang.String);

  public abstract A setToUsers(int, java.lang.String);

  public abstract A addToUsers(java.lang.String...);

  public abstract A addAllToUsers(java.util.Collection<java.lang.String>);

  public abstract A removeFromUsers(java.lang.String...);

  public abstract A removeAllFromUsers(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getUsers();

  public abstract java.lang.String getUser(int);

  public abstract java.lang.String getFirstUser();

  public abstract java.lang.String getLastUser();

  public abstract java.lang.String getMatchingUser(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingUser(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withUsers(java.util.List<java.lang.String>);

  public abstract A withUsers(java.lang.String...);

  public abstract java.lang.Boolean hasUsers();

  public abstract A addNewUser(java.lang.String);

  public abstract A addNewUser(java.lang.StringBuilder);

  public abstract A addNewUser(java.lang.StringBuffer);
}
