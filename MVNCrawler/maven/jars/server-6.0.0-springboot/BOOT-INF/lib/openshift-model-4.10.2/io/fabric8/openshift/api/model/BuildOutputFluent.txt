Compiled from "BuildOutputFluent.java"
public interface io.fabric8.openshift.api.model.BuildOutputFluent<A extends io.fabric8.openshift.api.model.BuildOutputFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToImageLabels(int, io.fabric8.openshift.api.model.ImageLabel);

  public abstract A setToImageLabels(int, io.fabric8.openshift.api.model.ImageLabel);

  public abstract A addToImageLabels(io.fabric8.openshift.api.model.ImageLabel...);

  public abstract A addAllToImageLabels(java.util.Collection<io.fabric8.openshift.api.model.ImageLabel>);

  public abstract A removeFromImageLabels(io.fabric8.openshift.api.model.ImageLabel...);

  public abstract A removeAllFromImageLabels(java.util.Collection<io.fabric8.openshift.api.model.ImageLabel>);

  public abstract A removeMatchingFromImageLabels(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ImageLabelBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.ImageLabel> getImageLabels();

  public abstract java.util.List<io.fabric8.openshift.api.model.ImageLabel> buildImageLabels();

  public abstract io.fabric8.openshift.api.model.ImageLabel buildImageLabel(int);

  public abstract io.fabric8.openshift.api.model.ImageLabel buildFirstImageLabel();

  public abstract io.fabric8.openshift.api.model.ImageLabel buildLastImageLabel();

  public abstract io.fabric8.openshift.api.model.ImageLabel buildMatchingImageLabel(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ImageLabelBuilder>);

  public abstract java.lang.Boolean hasMatchingImageLabel(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ImageLabelBuilder>);

  public abstract A withImageLabels(java.util.List<io.fabric8.openshift.api.model.ImageLabel>);

  public abstract A withImageLabels(io.fabric8.openshift.api.model.ImageLabel...);

  public abstract java.lang.Boolean hasImageLabels();

  public abstract A addNewImageLabel(java.lang.String, java.lang.String);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> addNewImageLabel();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> addNewImageLabelLike(io.fabric8.openshift.api.model.ImageLabel);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> setNewImageLabelLike(int, io.fabric8.openshift.api.model.ImageLabel);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> editImageLabel(int);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> editFirstImageLabel();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> editLastImageLabel();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ImageLabelsNested<A> editMatchingImageLabel(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ImageLabelBuilder>);

  public abstract io.fabric8.kubernetes.api.model.LocalObjectReference getPushSecret();

  public abstract io.fabric8.kubernetes.api.model.LocalObjectReference buildPushSecret();

  public abstract A withPushSecret(io.fabric8.kubernetes.api.model.LocalObjectReference);

  public abstract java.lang.Boolean hasPushSecret();

  public abstract A withNewPushSecret(java.lang.String);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$PushSecretNested<A> withNewPushSecret();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$PushSecretNested<A> withNewPushSecretLike(io.fabric8.kubernetes.api.model.LocalObjectReference);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$PushSecretNested<A> editPushSecret();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$PushSecretNested<A> editOrNewPushSecret();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$PushSecretNested<A> editOrNewPushSecretLike(io.fabric8.kubernetes.api.model.LocalObjectReference);

  public abstract io.fabric8.kubernetes.api.model.ObjectReference getTo();

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildTo();

  public abstract A withTo(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasTo();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ToNested<A> withNewTo();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ToNested<A> withNewToLike(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ToNested<A> editTo();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ToNested<A> editOrNewTo();

  public abstract io.fabric8.openshift.api.model.BuildOutputFluent$ToNested<A> editOrNewToLike(io.fabric8.kubernetes.api.model.ObjectReference);
}
