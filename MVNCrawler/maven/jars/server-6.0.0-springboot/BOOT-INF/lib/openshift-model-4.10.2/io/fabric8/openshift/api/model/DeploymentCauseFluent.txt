Compiled from "DeploymentCauseFluent.java"
public interface io.fabric8.openshift.api.model.DeploymentCauseFluent<A extends io.fabric8.openshift.api.model.DeploymentCauseFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.openshift.api.model.DeploymentCauseImageTrigger getImageTrigger();

  public abstract io.fabric8.openshift.api.model.DeploymentCauseImageTrigger buildImageTrigger();

  public abstract A withImageTrigger(io.fabric8.openshift.api.model.DeploymentCauseImageTrigger);

  public abstract java.lang.Boolean hasImageTrigger();

  public abstract io.fabric8.openshift.api.model.DeploymentCauseFluent$ImageTriggerNested<A> withNewImageTrigger();

  public abstract io.fabric8.openshift.api.model.DeploymentCauseFluent$ImageTriggerNested<A> withNewImageTriggerLike(io.fabric8.openshift.api.model.DeploymentCauseImageTrigger);

  public abstract io.fabric8.openshift.api.model.DeploymentCauseFluent$ImageTriggerNested<A> editImageTrigger();

  public abstract io.fabric8.openshift.api.model.DeploymentCauseFluent$ImageTriggerNested<A> editOrNewImageTrigger();

  public abstract io.fabric8.openshift.api.model.DeploymentCauseFluent$ImageTriggerNested<A> editOrNewImageTriggerLike(io.fabric8.openshift.api.model.DeploymentCauseImageTrigger);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
