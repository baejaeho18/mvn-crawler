Compiled from "TemplateFluent.java"
public interface io.fabric8.openshift.api.model.TemplateFluent<A extends io.fabric8.openshift.api.model.TemplateFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract A addToLabels(java.lang.String, java.lang.String);

  public abstract A addToLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromLabels(java.lang.String);

  public abstract A removeFromLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getLabels();

  public abstract A withLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasLabels();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract A addToObjects(io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToObjects(int, io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToObjects(int, io.fabric8.kubernetes.api.model.HasMetadata);

  public abstract A setToObjects(int, io.fabric8.kubernetes.api.model.HasMetadata);

  public abstract A addToObjects(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract A addAllToObjects(java.util.Collection<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract A removeFromObjects(io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>);

  public abstract A removeFromObjects(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract A removeAllFromObjects(java.util.Collection<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.HasMetadata> getObjects();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.HasMetadata> buildObjects();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildObject(int);

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildFirstObject();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildLastObject();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildMatchingObject(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract java.lang.Boolean hasMatchingObject(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract A withObjects(java.util.List<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract A withObjects(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract java.lang.Boolean hasObjects();

  public abstract A addToClusterVersionObjects(int, io.fabric8.openshift.api.model.ClusterVersion);

  public abstract A setToClusterVersionObjects(int, io.fabric8.openshift.api.model.ClusterVersion);

  public abstract A addToClusterVersionObjects(io.fabric8.openshift.api.model.ClusterVersion...);

  public abstract A addAllToClusterVersionObjects(java.util.Collection<io.fabric8.openshift.api.model.ClusterVersion>);

  public abstract A removeFromClusterVersionObjects(io.fabric8.openshift.api.model.ClusterVersion...);

  public abstract A removeAllFromClusterVersionObjects(java.util.Collection<io.fabric8.openshift.api.model.ClusterVersion>);

  public abstract A removeMatchingFromClusterVersionObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterVersionObjectsNested<A> setNewClusterVersionObjectLike(int, io.fabric8.openshift.api.model.ClusterVersion);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterVersionObjectsNested<A> addNewClusterVersionObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterVersionObjectsNested<A> addNewClusterVersionObjectLike(io.fabric8.openshift.api.model.ClusterVersion);

  public abstract A addToImageStreamImportObjects(int, io.fabric8.openshift.api.model.ImageStreamImport);

  public abstract A setToImageStreamImportObjects(int, io.fabric8.openshift.api.model.ImageStreamImport);

  public abstract A addToImageStreamImportObjects(io.fabric8.openshift.api.model.ImageStreamImport...);

  public abstract A addAllToImageStreamImportObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageStreamImport>);

  public abstract A removeFromImageStreamImportObjects(io.fabric8.openshift.api.model.ImageStreamImport...);

  public abstract A removeAllFromImageStreamImportObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageStreamImport>);

  public abstract A removeMatchingFromImageStreamImportObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamImportObjectsNested<A> setNewImageStreamImportObjectLike(int, io.fabric8.openshift.api.model.ImageStreamImport);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamImportObjectsNested<A> addNewImageStreamImportObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamImportObjectsNested<A> addNewImageStreamImportObjectLike(io.fabric8.openshift.api.model.ImageStreamImport);

  public abstract A addToDeploymentConfigObjects(int, io.fabric8.openshift.api.model.DeploymentConfig);

  public abstract A setToDeploymentConfigObjects(int, io.fabric8.openshift.api.model.DeploymentConfig);

  public abstract A addToDeploymentConfigObjects(io.fabric8.openshift.api.model.DeploymentConfig...);

  public abstract A addAllToDeploymentConfigObjects(java.util.Collection<io.fabric8.openshift.api.model.DeploymentConfig>);

  public abstract A removeFromDeploymentConfigObjects(io.fabric8.openshift.api.model.DeploymentConfig...);

  public abstract A removeAllFromDeploymentConfigObjects(java.util.Collection<io.fabric8.openshift.api.model.DeploymentConfig>);

  public abstract A removeMatchingFromDeploymentConfigObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$DeploymentConfigObjectsNested<A> setNewDeploymentConfigObjectLike(int, io.fabric8.openshift.api.model.DeploymentConfig);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$DeploymentConfigObjectsNested<A> addNewDeploymentConfigObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$DeploymentConfigObjectsNested<A> addNewDeploymentConfigObjectLike(io.fabric8.openshift.api.model.DeploymentConfig);

  public abstract A addToOAuthAccessTokenObjects(int, io.fabric8.openshift.api.model.OAuthAccessToken);

  public abstract A setToOAuthAccessTokenObjects(int, io.fabric8.openshift.api.model.OAuthAccessToken);

  public abstract A addToOAuthAccessTokenObjects(io.fabric8.openshift.api.model.OAuthAccessToken...);

  public abstract A addAllToOAuthAccessTokenObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthAccessToken>);

  public abstract A removeFromOAuthAccessTokenObjects(io.fabric8.openshift.api.model.OAuthAccessToken...);

  public abstract A removeAllFromOAuthAccessTokenObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthAccessToken>);

  public abstract A removeMatchingFromOAuthAccessTokenObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthAccessTokenObjectsNested<A> setNewOAuthAccessTokenObjectLike(int, io.fabric8.openshift.api.model.OAuthAccessToken);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthAccessTokenObjectsNested<A> addNewOAuthAccessTokenObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthAccessTokenObjectsNested<A> addNewOAuthAccessTokenObjectLike(io.fabric8.openshift.api.model.OAuthAccessToken);

  public abstract A addToRoleBindingObjects(int, io.fabric8.openshift.api.model.RoleBinding);

  public abstract A setToRoleBindingObjects(int, io.fabric8.openshift.api.model.RoleBinding);

  public abstract A addToRoleBindingObjects(io.fabric8.openshift.api.model.RoleBinding...);

  public abstract A addAllToRoleBindingObjects(java.util.Collection<io.fabric8.openshift.api.model.RoleBinding>);

  public abstract A removeFromRoleBindingObjects(io.fabric8.openshift.api.model.RoleBinding...);

  public abstract A removeAllFromRoleBindingObjects(java.util.Collection<io.fabric8.openshift.api.model.RoleBinding>);

  public abstract A removeMatchingFromRoleBindingObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleBindingObjectsNested<A> setNewRoleBindingObjectLike(int, io.fabric8.openshift.api.model.RoleBinding);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleBindingObjectsNested<A> addNewRoleBindingObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleBindingObjectsNested<A> addNewRoleBindingObjectLike(io.fabric8.openshift.api.model.RoleBinding);

  public abstract A addToImageObjects(int, io.fabric8.openshift.api.model.Image);

  public abstract A setToImageObjects(int, io.fabric8.openshift.api.model.Image);

  public abstract A addToImageObjects(io.fabric8.openshift.api.model.Image...);

  public abstract A addAllToImageObjects(java.util.Collection<io.fabric8.openshift.api.model.Image>);

  public abstract A removeFromImageObjects(io.fabric8.openshift.api.model.Image...);

  public abstract A removeAllFromImageObjects(java.util.Collection<io.fabric8.openshift.api.model.Image>);

  public abstract A removeMatchingFromImageObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageObjectsNested<A> setNewImageObjectLike(int, io.fabric8.openshift.api.model.Image);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageObjectsNested<A> addNewImageObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageObjectsNested<A> addNewImageObjectLike(io.fabric8.openshift.api.model.Image);

  public abstract A addToPersistentVolumeClaimObjects(int, io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A setToPersistentVolumeClaimObjects(int, io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToPersistentVolumeClaimObjects(io.fabric8.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A addAllToPersistentVolumeClaimObjects(java.util.Collection<io.fabric8.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeFromPersistentVolumeClaimObjects(io.fabric8.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A removeAllFromPersistentVolumeClaimObjects(java.util.Collection<io.fabric8.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeMatchingFromPersistentVolumeClaimObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$PersistentVolumeClaimObjectsNested<A> setNewPersistentVolumeClaimObjectLike(int, io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$PersistentVolumeClaimObjectsNested<A> addNewPersistentVolumeClaimObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$PersistentVolumeClaimObjectsNested<A> addNewPersistentVolumeClaimObjectLike(io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToRoleObjects(int, io.fabric8.openshift.api.model.Role);

  public abstract A setToRoleObjects(int, io.fabric8.openshift.api.model.Role);

  public abstract A addToRoleObjects(io.fabric8.openshift.api.model.Role...);

  public abstract A addAllToRoleObjects(java.util.Collection<io.fabric8.openshift.api.model.Role>);

  public abstract A removeFromRoleObjects(io.fabric8.openshift.api.model.Role...);

  public abstract A removeAllFromRoleObjects(java.util.Collection<io.fabric8.openshift.api.model.Role>);

  public abstract A removeMatchingFromRoleObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleObjectsNested<A> setNewRoleObjectLike(int, io.fabric8.openshift.api.model.Role);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleObjectsNested<A> addNewRoleObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleObjectsNested<A> addNewRoleObjectLike(io.fabric8.openshift.api.model.Role);

  public abstract A addToProjectObjects(int, io.fabric8.openshift.api.model.Project);

  public abstract A setToProjectObjects(int, io.fabric8.openshift.api.model.Project);

  public abstract A addToProjectObjects(io.fabric8.openshift.api.model.Project...);

  public abstract A addAllToProjectObjects(java.util.Collection<io.fabric8.openshift.api.model.Project>);

  public abstract A removeFromProjectObjects(io.fabric8.openshift.api.model.Project...);

  public abstract A removeAllFromProjectObjects(java.util.Collection<io.fabric8.openshift.api.model.Project>);

  public abstract A removeMatchingFromProjectObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ProjectObjectsNested<A> setNewProjectObjectLike(int, io.fabric8.openshift.api.model.Project);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ProjectObjectsNested<A> addNewProjectObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ProjectObjectsNested<A> addNewProjectObjectLike(io.fabric8.openshift.api.model.Project);

  public abstract A addToBuildConfigObjects(int, io.fabric8.openshift.api.model.BuildConfig);

  public abstract A setToBuildConfigObjects(int, io.fabric8.openshift.api.model.BuildConfig);

  public abstract A addToBuildConfigObjects(io.fabric8.openshift.api.model.BuildConfig...);

  public abstract A addAllToBuildConfigObjects(java.util.Collection<io.fabric8.openshift.api.model.BuildConfig>);

  public abstract A removeFromBuildConfigObjects(io.fabric8.openshift.api.model.BuildConfig...);

  public abstract A removeAllFromBuildConfigObjects(java.util.Collection<io.fabric8.openshift.api.model.BuildConfig>);

  public abstract A removeMatchingFromBuildConfigObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildConfigObjectsNested<A> setNewBuildConfigObjectLike(int, io.fabric8.openshift.api.model.BuildConfig);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildConfigObjectsNested<A> addNewBuildConfigObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildConfigObjectsNested<A> addNewBuildConfigObjectLike(io.fabric8.openshift.api.model.BuildConfig);

  public abstract A addToUserObjects(int, io.fabric8.openshift.api.model.User);

  public abstract A setToUserObjects(int, io.fabric8.openshift.api.model.User);

  public abstract A addToUserObjects(io.fabric8.openshift.api.model.User...);

  public abstract A addAllToUserObjects(java.util.Collection<io.fabric8.openshift.api.model.User>);

  public abstract A removeFromUserObjects(io.fabric8.openshift.api.model.User...);

  public abstract A removeAllFromUserObjects(java.util.Collection<io.fabric8.openshift.api.model.User>);

  public abstract A removeMatchingFromUserObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$UserObjectsNested<A> setNewUserObjectLike(int, io.fabric8.openshift.api.model.User);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$UserObjectsNested<A> addNewUserObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$UserObjectsNested<A> addNewUserObjectLike(io.fabric8.openshift.api.model.User);

  public abstract A addToRouteObjects(int, io.fabric8.openshift.api.model.Route);

  public abstract A setToRouteObjects(int, io.fabric8.openshift.api.model.Route);

  public abstract A addToRouteObjects(io.fabric8.openshift.api.model.Route...);

  public abstract A addAllToRouteObjects(java.util.Collection<io.fabric8.openshift.api.model.Route>);

  public abstract A removeFromRouteObjects(io.fabric8.openshift.api.model.Route...);

  public abstract A removeAllFromRouteObjects(java.util.Collection<io.fabric8.openshift.api.model.Route>);

  public abstract A removeMatchingFromRouteObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RouteObjectsNested<A> setNewRouteObjectLike(int, io.fabric8.openshift.api.model.Route);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RouteObjectsNested<A> addNewRouteObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RouteObjectsNested<A> addNewRouteObjectLike(io.fabric8.openshift.api.model.Route);

  public abstract A addToBuildObjects(int, io.fabric8.openshift.api.model.Build);

  public abstract A setToBuildObjects(int, io.fabric8.openshift.api.model.Build);

  public abstract A addToBuildObjects(io.fabric8.openshift.api.model.Build...);

  public abstract A addAllToBuildObjects(java.util.Collection<io.fabric8.openshift.api.model.Build>);

  public abstract A removeFromBuildObjects(io.fabric8.openshift.api.model.Build...);

  public abstract A removeAllFromBuildObjects(java.util.Collection<io.fabric8.openshift.api.model.Build>);

  public abstract A removeMatchingFromBuildObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildObjectsNested<A> setNewBuildObjectLike(int, io.fabric8.openshift.api.model.Build);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildObjectsNested<A> addNewBuildObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildObjectsNested<A> addNewBuildObjectLike(io.fabric8.openshift.api.model.Build);

  public abstract A addToOAuthAuthorizeTokenObjects(int, io.fabric8.openshift.api.model.OAuthAuthorizeToken);

  public abstract A setToOAuthAuthorizeTokenObjects(int, io.fabric8.openshift.api.model.OAuthAuthorizeToken);

  public abstract A addToOAuthAuthorizeTokenObjects(io.fabric8.openshift.api.model.OAuthAuthorizeToken...);

  public abstract A addAllToOAuthAuthorizeTokenObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthAuthorizeToken>);

  public abstract A removeFromOAuthAuthorizeTokenObjects(io.fabric8.openshift.api.model.OAuthAuthorizeToken...);

  public abstract A removeAllFromOAuthAuthorizeTokenObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthAuthorizeToken>);

  public abstract A removeMatchingFromOAuthAuthorizeTokenObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthAuthorizeTokenObjectsNested<A> setNewOAuthAuthorizeTokenObjectLike(int, io.fabric8.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthAuthorizeTokenObjectsNested<A> addNewOAuthAuthorizeTokenObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthAuthorizeTokenObjectsNested<A> addNewOAuthAuthorizeTokenObjectLike(io.fabric8.openshift.api.model.OAuthAuthorizeToken);

  public abstract A addToRoleBindingRestrictionObjects(int, io.fabric8.openshift.api.model.RoleBindingRestriction);

  public abstract A setToRoleBindingRestrictionObjects(int, io.fabric8.openshift.api.model.RoleBindingRestriction);

  public abstract A addToRoleBindingRestrictionObjects(io.fabric8.openshift.api.model.RoleBindingRestriction...);

  public abstract A addAllToRoleBindingRestrictionObjects(java.util.Collection<io.fabric8.openshift.api.model.RoleBindingRestriction>);

  public abstract A removeFromRoleBindingRestrictionObjects(io.fabric8.openshift.api.model.RoleBindingRestriction...);

  public abstract A removeAllFromRoleBindingRestrictionObjects(java.util.Collection<io.fabric8.openshift.api.model.RoleBindingRestriction>);

  public abstract A removeMatchingFromRoleBindingRestrictionObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleBindingRestrictionObjectsNested<A> setNewRoleBindingRestrictionObjectLike(int, io.fabric8.openshift.api.model.RoleBindingRestriction);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleBindingRestrictionObjectsNested<A> addNewRoleBindingRestrictionObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$RoleBindingRestrictionObjectsNested<A> addNewRoleBindingRestrictionObjectLike(io.fabric8.openshift.api.model.RoleBindingRestriction);

  public abstract A addToImageStreamTagObjects(int, io.fabric8.openshift.api.model.ImageStreamTag);

  public abstract A setToImageStreamTagObjects(int, io.fabric8.openshift.api.model.ImageStreamTag);

  public abstract A addToImageStreamTagObjects(io.fabric8.openshift.api.model.ImageStreamTag...);

  public abstract A addAllToImageStreamTagObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageStreamTag>);

  public abstract A removeFromImageStreamTagObjects(io.fabric8.openshift.api.model.ImageStreamTag...);

  public abstract A removeAllFromImageStreamTagObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageStreamTag>);

  public abstract A removeMatchingFromImageStreamTagObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamTagObjectsNested<A> setNewImageStreamTagObjectLike(int, io.fabric8.openshift.api.model.ImageStreamTag);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamTagObjectsNested<A> addNewImageStreamTagObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamTagObjectsNested<A> addNewImageStreamTagObjectLike(io.fabric8.openshift.api.model.ImageStreamTag);

  public abstract A addToGroupObjects(int, io.fabric8.openshift.api.model.Group);

  public abstract A setToGroupObjects(int, io.fabric8.openshift.api.model.Group);

  public abstract A addToGroupObjects(io.fabric8.openshift.api.model.Group...);

  public abstract A addAllToGroupObjects(java.util.Collection<io.fabric8.openshift.api.model.Group>);

  public abstract A removeFromGroupObjects(io.fabric8.openshift.api.model.Group...);

  public abstract A removeAllFromGroupObjects(java.util.Collection<io.fabric8.openshift.api.model.Group>);

  public abstract A removeMatchingFromGroupObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$GroupObjectsNested<A> setNewGroupObjectLike(int, io.fabric8.openshift.api.model.Group);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$GroupObjectsNested<A> addNewGroupObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$GroupObjectsNested<A> addNewGroupObjectLike(io.fabric8.openshift.api.model.Group);

  public abstract A addToTokenReviewObjects(int, io.fabric8.kubernetes.api.model.authentication.TokenReview);

  public abstract A setToTokenReviewObjects(int, io.fabric8.kubernetes.api.model.authentication.TokenReview);

  public abstract A addToTokenReviewObjects(io.fabric8.kubernetes.api.model.authentication.TokenReview...);

  public abstract A addAllToTokenReviewObjects(java.util.Collection<io.fabric8.kubernetes.api.model.authentication.TokenReview>);

  public abstract A removeFromTokenReviewObjects(io.fabric8.kubernetes.api.model.authentication.TokenReview...);

  public abstract A removeAllFromTokenReviewObjects(java.util.Collection<io.fabric8.kubernetes.api.model.authentication.TokenReview>);

  public abstract A removeMatchingFromTokenReviewObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$TokenReviewObjectsNested<A> setNewTokenReviewObjectLike(int, io.fabric8.kubernetes.api.model.authentication.TokenReview);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$TokenReviewObjectsNested<A> addNewTokenReviewObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$TokenReviewObjectsNested<A> addNewTokenReviewObjectLike(io.fabric8.kubernetes.api.model.authentication.TokenReview);

  public abstract A addToImageSignatureObjects(int, io.fabric8.openshift.api.model.ImageSignature);

  public abstract A setToImageSignatureObjects(int, io.fabric8.openshift.api.model.ImageSignature);

  public abstract A addToImageSignatureObjects(io.fabric8.openshift.api.model.ImageSignature...);

  public abstract A addAllToImageSignatureObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageSignature>);

  public abstract A removeFromImageSignatureObjects(io.fabric8.openshift.api.model.ImageSignature...);

  public abstract A removeAllFromImageSignatureObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageSignature>);

  public abstract A removeMatchingFromImageSignatureObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageSignatureObjectsNested<A> setNewImageSignatureObjectLike(int, io.fabric8.openshift.api.model.ImageSignature);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageSignatureObjectsNested<A> addNewImageSignatureObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageSignatureObjectsNested<A> addNewImageSignatureObjectLike(io.fabric8.openshift.api.model.ImageSignature);

  public abstract A addToSecurityContextConstraintsObjects(int, io.fabric8.openshift.api.model.SecurityContextConstraints);

  public abstract A setToSecurityContextConstraintsObjects(int, io.fabric8.openshift.api.model.SecurityContextConstraints);

  public abstract A addToSecurityContextConstraintsObjects(io.fabric8.openshift.api.model.SecurityContextConstraints...);

  public abstract A addAllToSecurityContextConstraintsObjects(java.util.Collection<io.fabric8.openshift.api.model.SecurityContextConstraints>);

  public abstract A removeFromSecurityContextConstraintsObjects(io.fabric8.openshift.api.model.SecurityContextConstraints...);

  public abstract A removeAllFromSecurityContextConstraintsObjects(java.util.Collection<io.fabric8.openshift.api.model.SecurityContextConstraints>);

  public abstract A removeMatchingFromSecurityContextConstraintsObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$SecurityContextConstraintsObjectsNested<A> setNewSecurityContextConstraintsObjectLike(int, io.fabric8.openshift.api.model.SecurityContextConstraints);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$SecurityContextConstraintsObjectsNested<A> addNewSecurityContextConstraintsObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$SecurityContextConstraintsObjectsNested<A> addNewSecurityContextConstraintsObjectLike(io.fabric8.openshift.api.model.SecurityContextConstraints);

  public abstract A addToClusterRoleBindingObjects(int, io.fabric8.openshift.api.model.ClusterRoleBinding);

  public abstract A setToClusterRoleBindingObjects(int, io.fabric8.openshift.api.model.ClusterRoleBinding);

  public abstract A addToClusterRoleBindingObjects(io.fabric8.openshift.api.model.ClusterRoleBinding...);

  public abstract A addAllToClusterRoleBindingObjects(java.util.Collection<io.fabric8.openshift.api.model.ClusterRoleBinding>);

  public abstract A removeFromClusterRoleBindingObjects(io.fabric8.openshift.api.model.ClusterRoleBinding...);

  public abstract A removeAllFromClusterRoleBindingObjects(java.util.Collection<io.fabric8.openshift.api.model.ClusterRoleBinding>);

  public abstract A removeMatchingFromClusterRoleBindingObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterRoleBindingObjectsNested<A> setNewClusterRoleBindingObjectLike(int, io.fabric8.openshift.api.model.ClusterRoleBinding);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterRoleBindingObjectsNested<A> addNewClusterRoleBindingObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterRoleBindingObjectsNested<A> addNewClusterRoleBindingObjectLike(io.fabric8.openshift.api.model.ClusterRoleBinding);

  public abstract A addToBuildRequestObjects(int, io.fabric8.openshift.api.model.BuildRequest);

  public abstract A setToBuildRequestObjects(int, io.fabric8.openshift.api.model.BuildRequest);

  public abstract A addToBuildRequestObjects(io.fabric8.openshift.api.model.BuildRequest...);

  public abstract A addAllToBuildRequestObjects(java.util.Collection<io.fabric8.openshift.api.model.BuildRequest>);

  public abstract A removeFromBuildRequestObjects(io.fabric8.openshift.api.model.BuildRequest...);

  public abstract A removeAllFromBuildRequestObjects(java.util.Collection<io.fabric8.openshift.api.model.BuildRequest>);

  public abstract A removeMatchingFromBuildRequestObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildRequestObjectsNested<A> setNewBuildRequestObjectLike(int, io.fabric8.openshift.api.model.BuildRequest);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildRequestObjectsNested<A> addNewBuildRequestObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$BuildRequestObjectsNested<A> addNewBuildRequestObjectLike(io.fabric8.openshift.api.model.BuildRequest);

  public abstract A addToNetNamespaceObjects(int, io.fabric8.openshift.api.model.NetNamespace);

  public abstract A setToNetNamespaceObjects(int, io.fabric8.openshift.api.model.NetNamespace);

  public abstract A addToNetNamespaceObjects(io.fabric8.openshift.api.model.NetNamespace...);

  public abstract A addAllToNetNamespaceObjects(java.util.Collection<io.fabric8.openshift.api.model.NetNamespace>);

  public abstract A removeFromNetNamespaceObjects(io.fabric8.openshift.api.model.NetNamespace...);

  public abstract A removeAllFromNetNamespaceObjects(java.util.Collection<io.fabric8.openshift.api.model.NetNamespace>);

  public abstract A removeMatchingFromNetNamespaceObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$NetNamespaceObjectsNested<A> setNewNetNamespaceObjectLike(int, io.fabric8.openshift.api.model.NetNamespace);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$NetNamespaceObjectsNested<A> addNewNetNamespaceObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$NetNamespaceObjectsNested<A> addNewNetNamespaceObjectLike(io.fabric8.openshift.api.model.NetNamespace);

  public abstract A addToImageStreamObjects(int, io.fabric8.openshift.api.model.ImageStream);

  public abstract A setToImageStreamObjects(int, io.fabric8.openshift.api.model.ImageStream);

  public abstract A addToImageStreamObjects(io.fabric8.openshift.api.model.ImageStream...);

  public abstract A addAllToImageStreamObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageStream>);

  public abstract A removeFromImageStreamObjects(io.fabric8.openshift.api.model.ImageStream...);

  public abstract A removeAllFromImageStreamObjects(java.util.Collection<io.fabric8.openshift.api.model.ImageStream>);

  public abstract A removeMatchingFromImageStreamObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamObjectsNested<A> setNewImageStreamObjectLike(int, io.fabric8.openshift.api.model.ImageStream);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamObjectsNested<A> addNewImageStreamObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ImageStreamObjectsNested<A> addNewImageStreamObjectLike(io.fabric8.openshift.api.model.ImageStream);

  public abstract A addToProjectRequestObjects(int, io.fabric8.openshift.api.model.ProjectRequest);

  public abstract A setToProjectRequestObjects(int, io.fabric8.openshift.api.model.ProjectRequest);

  public abstract A addToProjectRequestObjects(io.fabric8.openshift.api.model.ProjectRequest...);

  public abstract A addAllToProjectRequestObjects(java.util.Collection<io.fabric8.openshift.api.model.ProjectRequest>);

  public abstract A removeFromProjectRequestObjects(io.fabric8.openshift.api.model.ProjectRequest...);

  public abstract A removeAllFromProjectRequestObjects(java.util.Collection<io.fabric8.openshift.api.model.ProjectRequest>);

  public abstract A removeMatchingFromProjectRequestObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ProjectRequestObjectsNested<A> setNewProjectRequestObjectLike(int, io.fabric8.openshift.api.model.ProjectRequest);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ProjectRequestObjectsNested<A> addNewProjectRequestObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ProjectRequestObjectsNested<A> addNewProjectRequestObjectLike(io.fabric8.openshift.api.model.ProjectRequest);

  public abstract A addToTemplateObjects(int, io.fabric8.openshift.api.model.Template);

  public abstract A setToTemplateObjects(int, io.fabric8.openshift.api.model.Template);

  public abstract A addToTemplateObjects(io.fabric8.openshift.api.model.Template...);

  public abstract A addAllToTemplateObjects(java.util.Collection<io.fabric8.openshift.api.model.Template>);

  public abstract A removeFromTemplateObjects(io.fabric8.openshift.api.model.Template...);

  public abstract A removeAllFromTemplateObjects(java.util.Collection<io.fabric8.openshift.api.model.Template>);

  public abstract A removeMatchingFromTemplateObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$TemplateObjectsNested<A> setNewTemplateObjectLike(int, io.fabric8.openshift.api.model.Template);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$TemplateObjectsNested<A> addNewTemplateObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$TemplateObjectsNested<A> addNewTemplateObjectLike(io.fabric8.openshift.api.model.Template);

  public abstract A addToOAuthClientAuthorizationObjects(int, io.fabric8.openshift.api.model.OAuthClientAuthorization);

  public abstract A setToOAuthClientAuthorizationObjects(int, io.fabric8.openshift.api.model.OAuthClientAuthorization);

  public abstract A addToOAuthClientAuthorizationObjects(io.fabric8.openshift.api.model.OAuthClientAuthorization...);

  public abstract A addAllToOAuthClientAuthorizationObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthClientAuthorization>);

  public abstract A removeFromOAuthClientAuthorizationObjects(io.fabric8.openshift.api.model.OAuthClientAuthorization...);

  public abstract A removeAllFromOAuthClientAuthorizationObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthClientAuthorization>);

  public abstract A removeMatchingFromOAuthClientAuthorizationObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthClientAuthorizationObjectsNested<A> setNewOAuthClientAuthorizationObjectLike(int, io.fabric8.openshift.api.model.OAuthClientAuthorization);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthClientAuthorizationObjectsNested<A> addNewOAuthClientAuthorizationObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthClientAuthorizationObjectsNested<A> addNewOAuthClientAuthorizationObjectLike(io.fabric8.openshift.api.model.OAuthClientAuthorization);

  public abstract A addToOAuthClientObjects(int, io.fabric8.openshift.api.model.OAuthClient);

  public abstract A setToOAuthClientObjects(int, io.fabric8.openshift.api.model.OAuthClient);

  public abstract A addToOAuthClientObjects(io.fabric8.openshift.api.model.OAuthClient...);

  public abstract A addAllToOAuthClientObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthClient>);

  public abstract A removeFromOAuthClientObjects(io.fabric8.openshift.api.model.OAuthClient...);

  public abstract A removeAllFromOAuthClientObjects(java.util.Collection<io.fabric8.openshift.api.model.OAuthClient>);

  public abstract A removeMatchingFromOAuthClientObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthClientObjectsNested<A> setNewOAuthClientObjectLike(int, io.fabric8.openshift.api.model.OAuthClient);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthClientObjectsNested<A> addNewOAuthClientObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$OAuthClientObjectsNested<A> addNewOAuthClientObjectLike(io.fabric8.openshift.api.model.OAuthClient);

  public abstract A addToIdentityObjects(int, io.fabric8.openshift.api.model.Identity);

  public abstract A setToIdentityObjects(int, io.fabric8.openshift.api.model.Identity);

  public abstract A addToIdentityObjects(io.fabric8.openshift.api.model.Identity...);

  public abstract A addAllToIdentityObjects(java.util.Collection<io.fabric8.openshift.api.model.Identity>);

  public abstract A removeFromIdentityObjects(io.fabric8.openshift.api.model.Identity...);

  public abstract A removeAllFromIdentityObjects(java.util.Collection<io.fabric8.openshift.api.model.Identity>);

  public abstract A removeMatchingFromIdentityObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$IdentityObjectsNested<A> setNewIdentityObjectLike(int, io.fabric8.openshift.api.model.Identity);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$IdentityObjectsNested<A> addNewIdentityObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$IdentityObjectsNested<A> addNewIdentityObjectLike(io.fabric8.openshift.api.model.Identity);

  public abstract A addToClusterRoleObjects(int, io.fabric8.openshift.api.model.ClusterRole);

  public abstract A setToClusterRoleObjects(int, io.fabric8.openshift.api.model.ClusterRole);

  public abstract A addToClusterRoleObjects(io.fabric8.openshift.api.model.ClusterRole...);

  public abstract A addAllToClusterRoleObjects(java.util.Collection<io.fabric8.openshift.api.model.ClusterRole>);

  public abstract A removeFromClusterRoleObjects(io.fabric8.openshift.api.model.ClusterRole...);

  public abstract A removeAllFromClusterRoleObjects(java.util.Collection<io.fabric8.openshift.api.model.ClusterRole>);

  public abstract A removeMatchingFromClusterRoleObjects(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterRoleObjectsNested<A> setNewClusterRoleObjectLike(int, io.fabric8.openshift.api.model.ClusterRole);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterRoleObjectsNested<A> addNewClusterRoleObject();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ClusterRoleObjectsNested<A> addNewClusterRoleObjectLike(io.fabric8.openshift.api.model.ClusterRole);

  public abstract A addToParameters(int, io.fabric8.openshift.api.model.Parameter);

  public abstract A setToParameters(int, io.fabric8.openshift.api.model.Parameter);

  public abstract A addToParameters(io.fabric8.openshift.api.model.Parameter...);

  public abstract A addAllToParameters(java.util.Collection<io.fabric8.openshift.api.model.Parameter>);

  public abstract A removeFromParameters(io.fabric8.openshift.api.model.Parameter...);

  public abstract A removeAllFromParameters(java.util.Collection<io.fabric8.openshift.api.model.Parameter>);

  public abstract A removeMatchingFromParameters(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ParameterBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.Parameter> getParameters();

  public abstract java.util.List<io.fabric8.openshift.api.model.Parameter> buildParameters();

  public abstract io.fabric8.openshift.api.model.Parameter buildParameter(int);

  public abstract io.fabric8.openshift.api.model.Parameter buildFirstParameter();

  public abstract io.fabric8.openshift.api.model.Parameter buildLastParameter();

  public abstract io.fabric8.openshift.api.model.Parameter buildMatchingParameter(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ParameterBuilder>);

  public abstract java.lang.Boolean hasMatchingParameter(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ParameterBuilder>);

  public abstract A withParameters(java.util.List<io.fabric8.openshift.api.model.Parameter>);

  public abstract A withParameters(io.fabric8.openshift.api.model.Parameter...);

  public abstract java.lang.Boolean hasParameters();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> addNewParameter();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> addNewParameterLike(io.fabric8.openshift.api.model.Parameter);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> setNewParameterLike(int, io.fabric8.openshift.api.model.Parameter);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> editParameter(int);

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> editFirstParameter();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> editLastParameter();

  public abstract io.fabric8.openshift.api.model.TemplateFluent$ParametersNested<A> editMatchingParameter(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ParameterBuilder>);
}
