Compiled from "JenkinsPipelineBuildStrategyFluent.java"
public interface io.fabric8.openshift.api.model.JenkinsPipelineBuildStrategyFluent<A extends io.fabric8.openshift.api.model.JenkinsPipelineBuildStrategyFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToEnv(int, io.fabric8.kubernetes.api.model.EnvVar);

  public abstract A setToEnv(int, io.fabric8.kubernetes.api.model.EnvVar);

  public abstract A addToEnv(io.fabric8.kubernetes.api.model.EnvVar...);

  public abstract A addAllToEnv(java.util.Collection<io.fabric8.kubernetes.api.model.EnvVar>);

  public abstract A removeFromEnv(io.fabric8.kubernetes.api.model.EnvVar...);

  public abstract A removeAllFromEnv(java.util.Collection<io.fabric8.kubernetes.api.model.EnvVar>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.EnvVar> getEnv();

  public abstract io.fabric8.kubernetes.api.model.EnvVar getEnv(int);

  public abstract io.fabric8.kubernetes.api.model.EnvVar getFirstEnv();

  public abstract io.fabric8.kubernetes.api.model.EnvVar getLastEnv();

  public abstract io.fabric8.kubernetes.api.model.EnvVar getMatchingEnv(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.EnvVar>);

  public abstract java.lang.Boolean hasMatchingEnv(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.EnvVar>);

  public abstract A withEnv(java.util.List<io.fabric8.kubernetes.api.model.EnvVar>);

  public abstract A withEnv(io.fabric8.kubernetes.api.model.EnvVar...);

  public abstract java.lang.Boolean hasEnv();

  public abstract java.lang.String getJenkinsfile();

  public abstract A withJenkinsfile(java.lang.String);

  public abstract java.lang.Boolean hasJenkinsfile();

  public abstract A withNewJenkinsfile(java.lang.String);

  public abstract A withNewJenkinsfile(java.lang.StringBuilder);

  public abstract A withNewJenkinsfile(java.lang.StringBuffer);

  public abstract java.lang.String getJenkinsfilePath();

  public abstract A withJenkinsfilePath(java.lang.String);

  public abstract java.lang.Boolean hasJenkinsfilePath();

  public abstract A withNewJenkinsfilePath(java.lang.String);

  public abstract A withNewJenkinsfilePath(java.lang.StringBuilder);

  public abstract A withNewJenkinsfilePath(java.lang.StringBuffer);
}
