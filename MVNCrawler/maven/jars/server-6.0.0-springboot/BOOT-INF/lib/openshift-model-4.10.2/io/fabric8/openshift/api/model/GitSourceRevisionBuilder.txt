Compiled from "GitSourceRevisionBuilder.java"
public class io.fabric8.openshift.api.model.GitSourceRevisionBuilder extends io.fabric8.openshift.api.model.GitSourceRevisionFluentImpl<io.fabric8.openshift.api.model.GitSourceRevisionBuilder> implements io.fabric8.kubernetes.api.builder.VisitableBuilder<io.fabric8.openshift.api.model.GitSourceRevision, io.fabric8.openshift.api.model.GitSourceRevisionBuilder> {
  io.fabric8.openshift.api.model.GitSourceRevisionFluent<?> fluent;

  java.lang.Boolean validationEnabled;

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/Boolean;)V
       8: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(java.lang.Boolean);
    Code:
       0: aload_0
       1: new           #3                  // class io/fabric8/openshift/api/model/GitSourceRevision
       4: dup
       5: invokespecial #4                  // Method io/fabric8/openshift/api/model/GitSourceRevision."<init>":()V
       8: aload_1
       9: invokespecial #5                  // Method "<init>":(Lio/fabric8/openshift/api/model/GitSourceRevision;Ljava/lang/Boolean;)V
      12: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(io.fabric8.openshift.api.model.GitSourceRevisionFluent<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #6                  // Method "<init>":(Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;Ljava/lang/Boolean;)V
       9: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(io.fabric8.openshift.api.model.GitSourceRevisionFluent<?>, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class io/fabric8/openshift/api/model/GitSourceRevision
       5: dup
       6: invokespecial #4                  // Method io/fabric8/openshift/api/model/GitSourceRevision."<init>":()V
       9: aload_2
      10: invokespecial #7                  // Method "<init>":(Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;Lio/fabric8/openshift/api/model/GitSourceRevision;Ljava/lang/Boolean;)V
      13: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(io.fabric8.openshift.api.model.GitSourceRevisionFluent<?>, io.fabric8.openshift.api.model.GitSourceRevision);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokespecial #7                  // Method "<init>":(Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;Lio/fabric8/openshift/api/model/GitSourceRevision;Ljava/lang/Boolean;)V
      10: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(io.fabric8.openshift.api.model.GitSourceRevisionFluent<?>, io.fabric8.openshift.api.model.GitSourceRevision, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/fabric8/openshift/api/model/GitSourceRevisionFluentImpl."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
       9: aload_1
      10: aload_2
      11: invokevirtual #10                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getAuthor:()Lio/fabric8/openshift/api/model/SourceControlUser;
      14: invokeinterface #11,  2           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.withAuthor:(Lio/fabric8/openshift/api/model/SourceControlUser;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      19: pop
      20: aload_1
      21: aload_2
      22: invokevirtual #12                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getCommit:()Ljava/lang/String;
      25: invokeinterface #13,  2           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.withCommit:(Ljava/lang/String;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      30: pop
      31: aload_1
      32: aload_2
      33: invokevirtual #14                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getCommitter:()Lio/fabric8/openshift/api/model/SourceControlUser;
      36: invokeinterface #15,  2           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.withCommitter:(Lio/fabric8/openshift/api/model/SourceControlUser;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      41: pop
      42: aload_1
      43: aload_2
      44: invokevirtual #16                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getMessage:()Ljava/lang/String;
      47: invokeinterface #17,  2           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.withMessage:(Ljava/lang/String;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      52: pop
      53: aload_0
      54: aload_3
      55: putfield      #18                 // Field validationEnabled:Ljava/lang/Boolean;
      58: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(io.fabric8.openshift.api.model.GitSourceRevision);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #5                  // Method "<init>":(Lio/fabric8/openshift/api/model/GitSourceRevision;Ljava/lang/Boolean;)V
       9: return

  public io.fabric8.openshift.api.model.GitSourceRevisionBuilder(io.fabric8.openshift.api.model.GitSourceRevision, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/fabric8/openshift/api/model/GitSourceRevisionFluentImpl."<init>":()V
       4: aload_0
       5: aload_0
       6: putfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
       9: aload_0
      10: aload_1
      11: invokevirtual #10                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getAuthor:()Lio/fabric8/openshift/api/model/SourceControlUser;
      14: invokevirtual #19                 // Method withAuthor:(Lio/fabric8/openshift/api/model/SourceControlUser;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #12                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getCommit:()Ljava/lang/String;
      23: invokevirtual #20                 // Method withCommit:(Ljava/lang/String;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      26: pop
      27: aload_0
      28: aload_1
      29: invokevirtual #14                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getCommitter:()Lio/fabric8/openshift/api/model/SourceControlUser;
      32: invokevirtual #21                 // Method withCommitter:(Lio/fabric8/openshift/api/model/SourceControlUser;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      35: pop
      36: aload_0
      37: aload_1
      38: invokevirtual #16                 // Method io/fabric8/openshift/api/model/GitSourceRevision.getMessage:()Ljava/lang/String;
      41: invokevirtual #22                 // Method withMessage:(Ljava/lang/String;)Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      44: pop
      45: aload_0
      46: aload_2
      47: putfield      #18                 // Field validationEnabled:Ljava/lang/Boolean;
      50: return

  public io.fabric8.openshift.api.model.GitSourceRevision build();
    Code:
       0: new           #3                  // class io/fabric8/openshift/api/model/GitSourceRevision
       3: dup
       4: aload_0
       5: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
       8: invokeinterface #23,  1           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.getAuthor:()Lio/fabric8/openshift/api/model/SourceControlUser;
      13: aload_0
      14: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      17: invokeinterface #24,  1           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.getCommit:()Ljava/lang/String;
      22: aload_0
      23: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      26: invokeinterface #25,  1           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.getCommitter:()Lio/fabric8/openshift/api/model/SourceControlUser;
      31: aload_0
      32: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      35: invokeinterface #26,  1           // InterfaceMethod io/fabric8/openshift/api/model/GitSourceRevisionFluent.getMessage:()Ljava/lang/String;
      40: invokespecial #27                 // Method io/fabric8/openshift/api/model/GitSourceRevision."<init>":(Lio/fabric8/openshift/api/model/SourceControlUser;Ljava/lang/String;Lio/fabric8/openshift/api/model/SourceControlUser;Ljava/lang/String;)V
      43: astore_1
      44: aload_1
      45: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #29                 // Method io/fabric8/openshift/api/model/GitSourceRevisionFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #30                 // class io/fabric8/openshift/api/model/GitSourceRevisionBuilder
      38: astore_2
      39: aload_0
      40: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      43: ifnull        71
      46: aload_0
      47: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      50: aload_0
      51: if_acmpeq     71
      54: aload_0
      55: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      58: aload_2
      59: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      62: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifne          88
      68: goto          86
      71: aload_2
      72: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      75: ifnull        88
      78: aload_0
      79: getfield      #9                  // Field fluent:Lio/fabric8/openshift/api/model/GitSourceRevisionFluent;
      82: aload_0
      83: if_acmpeq     88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: getfield      #18                 // Field validationEnabled:Ljava/lang/Boolean;
      92: ifnull        112
      95: aload_0
      96: getfield      #18                 // Field validationEnabled:Ljava/lang/Boolean;
      99: aload_2
     100: getfield      #18                 // Field validationEnabled:Ljava/lang/Boolean;
     103: invokevirtual #32                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     106: ifne          121
     109: goto          119
     112: aload_2
     113: getfield      #18                 // Field validationEnabled:Ljava/lang/Boolean;
     116: ifnull        121
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method build:()Lio/fabric8/openshift/api/model/GitSourceRevision;
       4: areturn
}
