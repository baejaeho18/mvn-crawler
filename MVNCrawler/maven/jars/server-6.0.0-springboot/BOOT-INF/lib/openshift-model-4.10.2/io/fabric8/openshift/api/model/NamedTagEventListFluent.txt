Compiled from "NamedTagEventListFluent.java"
public interface io.fabric8.openshift.api.model.NamedTagEventListFluent<A extends io.fabric8.openshift.api.model.NamedTagEventListFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToConditions(int, io.fabric8.openshift.api.model.TagEventCondition);

  public abstract A setToConditions(int, io.fabric8.openshift.api.model.TagEventCondition);

  public abstract A addToConditions(io.fabric8.openshift.api.model.TagEventCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.fabric8.openshift.api.model.TagEventCondition>);

  public abstract A removeFromConditions(io.fabric8.openshift.api.model.TagEventCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.fabric8.openshift.api.model.TagEventCondition>);

  public abstract A removeMatchingFromConditions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventConditionBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.TagEventCondition> getConditions();

  public abstract java.util.List<io.fabric8.openshift.api.model.TagEventCondition> buildConditions();

  public abstract io.fabric8.openshift.api.model.TagEventCondition buildCondition(int);

  public abstract io.fabric8.openshift.api.model.TagEventCondition buildFirstCondition();

  public abstract io.fabric8.openshift.api.model.TagEventCondition buildLastCondition();

  public abstract io.fabric8.openshift.api.model.TagEventCondition buildMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventConditionBuilder>);

  public abstract A withConditions(java.util.List<io.fabric8.openshift.api.model.TagEventCondition>);

  public abstract A withConditions(io.fabric8.openshift.api.model.TagEventCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> addNewCondition();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> addNewConditionLike(io.fabric8.openshift.api.model.TagEventCondition);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> setNewConditionLike(int, io.fabric8.openshift.api.model.TagEventCondition);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> editCondition(int);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> editLastCondition();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ConditionsNested<A> editMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventConditionBuilder>);

  public abstract A addToItems(int, io.fabric8.openshift.api.model.TagEvent);

  public abstract A setToItems(int, io.fabric8.openshift.api.model.TagEvent);

  public abstract A addToItems(io.fabric8.openshift.api.model.TagEvent...);

  public abstract A addAllToItems(java.util.Collection<io.fabric8.openshift.api.model.TagEvent>);

  public abstract A removeFromItems(io.fabric8.openshift.api.model.TagEvent...);

  public abstract A removeAllFromItems(java.util.Collection<io.fabric8.openshift.api.model.TagEvent>);

  public abstract A removeMatchingFromItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.TagEvent> getItems();

  public abstract java.util.List<io.fabric8.openshift.api.model.TagEvent> buildItems();

  public abstract io.fabric8.openshift.api.model.TagEvent buildItem(int);

  public abstract io.fabric8.openshift.api.model.TagEvent buildFirstItem();

  public abstract io.fabric8.openshift.api.model.TagEvent buildLastItem();

  public abstract io.fabric8.openshift.api.model.TagEvent buildMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventBuilder>);

  public abstract java.lang.Boolean hasMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventBuilder>);

  public abstract A withItems(java.util.List<io.fabric8.openshift.api.model.TagEvent>);

  public abstract A withItems(io.fabric8.openshift.api.model.TagEvent...);

  public abstract java.lang.Boolean hasItems();

  public abstract A addNewItem(java.lang.String, java.lang.String, java.lang.Long, java.lang.String);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> addNewItem();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> addNewItemLike(io.fabric8.openshift.api.model.TagEvent);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> setNewItemLike(int, io.fabric8.openshift.api.model.TagEvent);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> editItem(int);

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> editFirstItem();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> editLastItem();

  public abstract io.fabric8.openshift.api.model.NamedTagEventListFluent$ItemsNested<A> editMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.TagEventBuilder>);

  public abstract java.lang.String getTag();

  public abstract A withTag(java.lang.String);

  public abstract java.lang.Boolean hasTag();

  public abstract A withNewTag(java.lang.String);

  public abstract A withNewTag(java.lang.StringBuilder);

  public abstract A withNewTag(java.lang.StringBuffer);
}
