Compiled from "ClusterVersionSpecFluent.java"
public interface io.fabric8.openshift.api.model.ClusterVersionSpecFluent<A extends io.fabric8.openshift.api.model.ClusterVersionSpecFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getChannel();

  public abstract A withChannel(java.lang.String);

  public abstract java.lang.Boolean hasChannel();

  public abstract A withNewChannel(java.lang.String);

  public abstract A withNewChannel(java.lang.StringBuilder);

  public abstract A withNewChannel(java.lang.StringBuffer);

  public abstract java.lang.String getClusterID();

  public abstract A withClusterID(java.lang.String);

  public abstract java.lang.Boolean hasClusterID();

  public abstract A withNewClusterID(java.lang.String);

  public abstract A withNewClusterID(java.lang.StringBuilder);

  public abstract A withNewClusterID(java.lang.StringBuffer);

  public abstract io.fabric8.openshift.api.model.Update getDesiredUpdate();

  public abstract io.fabric8.openshift.api.model.Update buildDesiredUpdate();

  public abstract A withDesiredUpdate(io.fabric8.openshift.api.model.Update);

  public abstract java.lang.Boolean hasDesiredUpdate();

  public abstract A withNewDesiredUpdate(java.lang.Boolean, java.lang.String, java.lang.String);

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$DesiredUpdateNested<A> withNewDesiredUpdate();

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$DesiredUpdateNested<A> withNewDesiredUpdateLike(io.fabric8.openshift.api.model.Update);

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$DesiredUpdateNested<A> editDesiredUpdate();

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$DesiredUpdateNested<A> editOrNewDesiredUpdate();

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$DesiredUpdateNested<A> editOrNewDesiredUpdateLike(io.fabric8.openshift.api.model.Update);

  public abstract A addToOverrides(int, io.fabric8.openshift.api.model.ComponentOverride);

  public abstract A setToOverrides(int, io.fabric8.openshift.api.model.ComponentOverride);

  public abstract A addToOverrides(io.fabric8.openshift.api.model.ComponentOverride...);

  public abstract A addAllToOverrides(java.util.Collection<io.fabric8.openshift.api.model.ComponentOverride>);

  public abstract A removeFromOverrides(io.fabric8.openshift.api.model.ComponentOverride...);

  public abstract A removeAllFromOverrides(java.util.Collection<io.fabric8.openshift.api.model.ComponentOverride>);

  public abstract A removeMatchingFromOverrides(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ComponentOverrideBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.ComponentOverride> getOverrides();

  public abstract java.util.List<io.fabric8.openshift.api.model.ComponentOverride> buildOverrides();

  public abstract io.fabric8.openshift.api.model.ComponentOverride buildOverride(int);

  public abstract io.fabric8.openshift.api.model.ComponentOverride buildFirstOverride();

  public abstract io.fabric8.openshift.api.model.ComponentOverride buildLastOverride();

  public abstract io.fabric8.openshift.api.model.ComponentOverride buildMatchingOverride(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ComponentOverrideBuilder>);

  public abstract java.lang.Boolean hasMatchingOverride(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ComponentOverrideBuilder>);

  public abstract A withOverrides(java.util.List<io.fabric8.openshift.api.model.ComponentOverride>);

  public abstract A withOverrides(io.fabric8.openshift.api.model.ComponentOverride...);

  public abstract java.lang.Boolean hasOverrides();

  public abstract A addNewOverride(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean);

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> addNewOverride();

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> addNewOverrideLike(io.fabric8.openshift.api.model.ComponentOverride);

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> setNewOverrideLike(int, io.fabric8.openshift.api.model.ComponentOverride);

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> editOverride(int);

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> editFirstOverride();

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> editLastOverride();

  public abstract io.fabric8.openshift.api.model.ClusterVersionSpecFluent$OverridesNested<A> editMatchingOverride(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.ComponentOverrideBuilder>);

  public abstract java.lang.String getUpstream();

  public abstract A withUpstream(java.lang.String);

  public abstract java.lang.Boolean hasUpstream();

  public abstract A withNewUpstream(java.lang.String);

  public abstract A withNewUpstream(java.lang.StringBuilder);

  public abstract A withNewUpstream(java.lang.StringBuffer);
}
