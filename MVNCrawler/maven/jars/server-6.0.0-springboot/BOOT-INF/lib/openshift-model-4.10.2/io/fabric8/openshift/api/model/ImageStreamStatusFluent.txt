Compiled from "ImageStreamStatusFluent.java"
public interface io.fabric8.openshift.api.model.ImageStreamStatusFluent<A extends io.fabric8.openshift.api.model.ImageStreamStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getDockerImageRepository();

  public abstract A withDockerImageRepository(java.lang.String);

  public abstract java.lang.Boolean hasDockerImageRepository();

  public abstract A withNewDockerImageRepository(java.lang.String);

  public abstract A withNewDockerImageRepository(java.lang.StringBuilder);

  public abstract A withNewDockerImageRepository(java.lang.StringBuffer);

  public abstract java.lang.String getPublicDockerImageRepository();

  public abstract A withPublicDockerImageRepository(java.lang.String);

  public abstract java.lang.Boolean hasPublicDockerImageRepository();

  public abstract A withNewPublicDockerImageRepository(java.lang.String);

  public abstract A withNewPublicDockerImageRepository(java.lang.StringBuilder);

  public abstract A withNewPublicDockerImageRepository(java.lang.StringBuffer);

  public abstract A addToTags(int, io.fabric8.openshift.api.model.NamedTagEventList);

  public abstract A setToTags(int, io.fabric8.openshift.api.model.NamedTagEventList);

  public abstract A addToTags(io.fabric8.openshift.api.model.NamedTagEventList...);

  public abstract A addAllToTags(java.util.Collection<io.fabric8.openshift.api.model.NamedTagEventList>);

  public abstract A removeFromTags(io.fabric8.openshift.api.model.NamedTagEventList...);

  public abstract A removeAllFromTags(java.util.Collection<io.fabric8.openshift.api.model.NamedTagEventList>);

  public abstract A removeMatchingFromTags(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.NamedTagEventListBuilder>);

  public abstract java.util.List<io.fabric8.openshift.api.model.NamedTagEventList> getTags();

  public abstract java.util.List<io.fabric8.openshift.api.model.NamedTagEventList> buildTags();

  public abstract io.fabric8.openshift.api.model.NamedTagEventList buildTag(int);

  public abstract io.fabric8.openshift.api.model.NamedTagEventList buildFirstTag();

  public abstract io.fabric8.openshift.api.model.NamedTagEventList buildLastTag();

  public abstract io.fabric8.openshift.api.model.NamedTagEventList buildMatchingTag(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.NamedTagEventListBuilder>);

  public abstract java.lang.Boolean hasMatchingTag(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.NamedTagEventListBuilder>);

  public abstract A withTags(java.util.List<io.fabric8.openshift.api.model.NamedTagEventList>);

  public abstract A withTags(io.fabric8.openshift.api.model.NamedTagEventList...);

  public abstract java.lang.Boolean hasTags();

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> addNewTag();

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> addNewTagLike(io.fabric8.openshift.api.model.NamedTagEventList);

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> setNewTagLike(int, io.fabric8.openshift.api.model.NamedTagEventList);

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> editTag(int);

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> editFirstTag();

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> editLastTag();

  public abstract io.fabric8.openshift.api.model.ImageStreamStatusFluent$TagsNested<A> editMatchingTag(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.openshift.api.model.NamedTagEventListBuilder>);
}
