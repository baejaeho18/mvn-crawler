Compiled from "PolicyRuleFluent.java"
public interface io.fabric8.openshift.api.model.PolicyRuleFluent<A extends io.fabric8.openshift.api.model.PolicyRuleFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToApiGroups(int, java.lang.String);

  public abstract A setToApiGroups(int, java.lang.String);

  public abstract A addToApiGroups(java.lang.String...);

  public abstract A addAllToApiGroups(java.util.Collection<java.lang.String>);

  public abstract A removeFromApiGroups(java.lang.String...);

  public abstract A removeAllFromApiGroups(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getApiGroups();

  public abstract java.lang.String getApiGroup(int);

  public abstract java.lang.String getFirstApiGroup();

  public abstract java.lang.String getLastApiGroup();

  public abstract java.lang.String getMatchingApiGroup(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingApiGroup(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withApiGroups(java.util.List<java.lang.String>);

  public abstract A withApiGroups(java.lang.String...);

  public abstract java.lang.Boolean hasApiGroups();

  public abstract A addNewApiGroup(java.lang.String);

  public abstract A addNewApiGroup(java.lang.StringBuilder);

  public abstract A addNewApiGroup(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.HasMetadata getAttributeRestrictions();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildAttributeRestrictions();

  public abstract A withAttributeRestrictions(io.fabric8.kubernetes.api.model.HasMetadata);

  public abstract java.lang.Boolean hasAttributeRestrictions();

  public abstract A withClusterVersionAttributeRestrictions(io.fabric8.openshift.api.model.ClusterVersion);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ClusterVersionAttributeRestrictionsNested<A> withNewClusterVersionAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ClusterVersionAttributeRestrictionsNested<A> withNewClusterVersionAttributeRestrictionsLike(io.fabric8.openshift.api.model.ClusterVersion);

  public abstract A withImageStreamImportAttributeRestrictions(io.fabric8.openshift.api.model.ImageStreamImport);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageStreamImportAttributeRestrictionsNested<A> withNewImageStreamImportAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageStreamImportAttributeRestrictionsNested<A> withNewImageStreamImportAttributeRestrictionsLike(io.fabric8.openshift.api.model.ImageStreamImport);

  public abstract A withDeploymentConfigAttributeRestrictions(io.fabric8.openshift.api.model.DeploymentConfig);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$DeploymentConfigAttributeRestrictionsNested<A> withNewDeploymentConfigAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$DeploymentConfigAttributeRestrictionsNested<A> withNewDeploymentConfigAttributeRestrictionsLike(io.fabric8.openshift.api.model.DeploymentConfig);

  public abstract A withOAuthAccessTokenAttributeRestrictions(io.fabric8.openshift.api.model.OAuthAccessToken);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthAccessTokenAttributeRestrictionsNested<A> withNewOAuthAccessTokenAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthAccessTokenAttributeRestrictionsNested<A> withNewOAuthAccessTokenAttributeRestrictionsLike(io.fabric8.openshift.api.model.OAuthAccessToken);

  public abstract A withRoleBindingAttributeRestrictions(io.fabric8.openshift.api.model.RoleBinding);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RoleBindingAttributeRestrictionsNested<A> withNewRoleBindingAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RoleBindingAttributeRestrictionsNested<A> withNewRoleBindingAttributeRestrictionsLike(io.fabric8.openshift.api.model.RoleBinding);

  public abstract A withImageAttributeRestrictions(io.fabric8.openshift.api.model.Image);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageAttributeRestrictionsNested<A> withNewImageAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageAttributeRestrictionsNested<A> withNewImageAttributeRestrictionsLike(io.fabric8.openshift.api.model.Image);

  public abstract A withPersistentVolumeClaimAttributeRestrictions(io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$PersistentVolumeClaimAttributeRestrictionsNested<A> withNewPersistentVolumeClaimAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$PersistentVolumeClaimAttributeRestrictionsNested<A> withNewPersistentVolumeClaimAttributeRestrictionsLike(io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A withRoleAttributeRestrictions(io.fabric8.openshift.api.model.Role);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RoleAttributeRestrictionsNested<A> withNewRoleAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RoleAttributeRestrictionsNested<A> withNewRoleAttributeRestrictionsLike(io.fabric8.openshift.api.model.Role);

  public abstract A withProjectAttributeRestrictions(io.fabric8.openshift.api.model.Project);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ProjectAttributeRestrictionsNested<A> withNewProjectAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ProjectAttributeRestrictionsNested<A> withNewProjectAttributeRestrictionsLike(io.fabric8.openshift.api.model.Project);

  public abstract A withBuildConfigAttributeRestrictions(io.fabric8.openshift.api.model.BuildConfig);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$BuildConfigAttributeRestrictionsNested<A> withNewBuildConfigAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$BuildConfigAttributeRestrictionsNested<A> withNewBuildConfigAttributeRestrictionsLike(io.fabric8.openshift.api.model.BuildConfig);

  public abstract A withUserAttributeRestrictions(io.fabric8.openshift.api.model.User);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$UserAttributeRestrictionsNested<A> withNewUserAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$UserAttributeRestrictionsNested<A> withNewUserAttributeRestrictionsLike(io.fabric8.openshift.api.model.User);

  public abstract A withRouteAttributeRestrictions(io.fabric8.openshift.api.model.Route);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RouteAttributeRestrictionsNested<A> withNewRouteAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RouteAttributeRestrictionsNested<A> withNewRouteAttributeRestrictionsLike(io.fabric8.openshift.api.model.Route);

  public abstract A withBuildAttributeRestrictions(io.fabric8.openshift.api.model.Build);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$BuildAttributeRestrictionsNested<A> withNewBuildAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$BuildAttributeRestrictionsNested<A> withNewBuildAttributeRestrictionsLike(io.fabric8.openshift.api.model.Build);

  public abstract A withOAuthAuthorizeTokenAttributeRestrictions(io.fabric8.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthAuthorizeTokenAttributeRestrictionsNested<A> withNewOAuthAuthorizeTokenAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthAuthorizeTokenAttributeRestrictionsNested<A> withNewOAuthAuthorizeTokenAttributeRestrictionsLike(io.fabric8.openshift.api.model.OAuthAuthorizeToken);

  public abstract A withRoleBindingRestrictionAttributeRestrictions(io.fabric8.openshift.api.model.RoleBindingRestriction);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RoleBindingRestrictionAttributeRestrictionsNested<A> withNewRoleBindingRestrictionAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$RoleBindingRestrictionAttributeRestrictionsNested<A> withNewRoleBindingRestrictionAttributeRestrictionsLike(io.fabric8.openshift.api.model.RoleBindingRestriction);

  public abstract A withImageStreamTagAttributeRestrictions(io.fabric8.openshift.api.model.ImageStreamTag);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageStreamTagAttributeRestrictionsNested<A> withNewImageStreamTagAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageStreamTagAttributeRestrictionsNested<A> withNewImageStreamTagAttributeRestrictionsLike(io.fabric8.openshift.api.model.ImageStreamTag);

  public abstract A withGroupAttributeRestrictions(io.fabric8.openshift.api.model.Group);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$GroupAttributeRestrictionsNested<A> withNewGroupAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$GroupAttributeRestrictionsNested<A> withNewGroupAttributeRestrictionsLike(io.fabric8.openshift.api.model.Group);

  public abstract A withTokenReviewAttributeRestrictions(io.fabric8.kubernetes.api.model.authentication.TokenReview);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$TokenReviewAttributeRestrictionsNested<A> withNewTokenReviewAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$TokenReviewAttributeRestrictionsNested<A> withNewTokenReviewAttributeRestrictionsLike(io.fabric8.kubernetes.api.model.authentication.TokenReview);

  public abstract A withImageSignatureAttributeRestrictions(io.fabric8.openshift.api.model.ImageSignature);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageSignatureAttributeRestrictionsNested<A> withNewImageSignatureAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageSignatureAttributeRestrictionsNested<A> withNewImageSignatureAttributeRestrictionsLike(io.fabric8.openshift.api.model.ImageSignature);

  public abstract A withSecurityContextConstraintsAttributeRestrictions(io.fabric8.openshift.api.model.SecurityContextConstraints);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$SecurityContextConstraintsAttributeRestrictionsNested<A> withNewSecurityContextConstraintsAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$SecurityContextConstraintsAttributeRestrictionsNested<A> withNewSecurityContextConstraintsAttributeRestrictionsLike(io.fabric8.openshift.api.model.SecurityContextConstraints);

  public abstract A withClusterRoleBindingAttributeRestrictions(io.fabric8.openshift.api.model.ClusterRoleBinding);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ClusterRoleBindingAttributeRestrictionsNested<A> withNewClusterRoleBindingAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ClusterRoleBindingAttributeRestrictionsNested<A> withNewClusterRoleBindingAttributeRestrictionsLike(io.fabric8.openshift.api.model.ClusterRoleBinding);

  public abstract A withBuildRequestAttributeRestrictions(io.fabric8.openshift.api.model.BuildRequest);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$BuildRequestAttributeRestrictionsNested<A> withNewBuildRequestAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$BuildRequestAttributeRestrictionsNested<A> withNewBuildRequestAttributeRestrictionsLike(io.fabric8.openshift.api.model.BuildRequest);

  public abstract A withNetNamespaceAttributeRestrictions(io.fabric8.openshift.api.model.NetNamespace);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$NetNamespaceAttributeRestrictionsNested<A> withNewNetNamespaceAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$NetNamespaceAttributeRestrictionsNested<A> withNewNetNamespaceAttributeRestrictionsLike(io.fabric8.openshift.api.model.NetNamespace);

  public abstract A withImageStreamAttributeRestrictions(io.fabric8.openshift.api.model.ImageStream);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageStreamAttributeRestrictionsNested<A> withNewImageStreamAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ImageStreamAttributeRestrictionsNested<A> withNewImageStreamAttributeRestrictionsLike(io.fabric8.openshift.api.model.ImageStream);

  public abstract A withProjectRequestAttributeRestrictions(io.fabric8.openshift.api.model.ProjectRequest);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ProjectRequestAttributeRestrictionsNested<A> withNewProjectRequestAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ProjectRequestAttributeRestrictionsNested<A> withNewProjectRequestAttributeRestrictionsLike(io.fabric8.openshift.api.model.ProjectRequest);

  public abstract A withTemplateAttributeRestrictions(io.fabric8.openshift.api.model.Template);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$TemplateAttributeRestrictionsNested<A> withNewTemplateAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$TemplateAttributeRestrictionsNested<A> withNewTemplateAttributeRestrictionsLike(io.fabric8.openshift.api.model.Template);

  public abstract A withOAuthClientAuthorizationAttributeRestrictions(io.fabric8.openshift.api.model.OAuthClientAuthorization);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthClientAuthorizationAttributeRestrictionsNested<A> withNewOAuthClientAuthorizationAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthClientAuthorizationAttributeRestrictionsNested<A> withNewOAuthClientAuthorizationAttributeRestrictionsLike(io.fabric8.openshift.api.model.OAuthClientAuthorization);

  public abstract A withOAuthClientAttributeRestrictions(io.fabric8.openshift.api.model.OAuthClient);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthClientAttributeRestrictionsNested<A> withNewOAuthClientAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$OAuthClientAttributeRestrictionsNested<A> withNewOAuthClientAttributeRestrictionsLike(io.fabric8.openshift.api.model.OAuthClient);

  public abstract A withIdentityAttributeRestrictions(io.fabric8.openshift.api.model.Identity);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$IdentityAttributeRestrictionsNested<A> withNewIdentityAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$IdentityAttributeRestrictionsNested<A> withNewIdentityAttributeRestrictionsLike(io.fabric8.openshift.api.model.Identity);

  public abstract A withClusterRoleAttributeRestrictions(io.fabric8.openshift.api.model.ClusterRole);

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ClusterRoleAttributeRestrictionsNested<A> withNewClusterRoleAttributeRestrictions();

  public abstract io.fabric8.openshift.api.model.PolicyRuleFluent$ClusterRoleAttributeRestrictionsNested<A> withNewClusterRoleAttributeRestrictionsLike(io.fabric8.openshift.api.model.ClusterRole);

  public abstract A addToNonResourceURLs(int, java.lang.String);

  public abstract A setToNonResourceURLs(int, java.lang.String);

  public abstract A addToNonResourceURLs(java.lang.String...);

  public abstract A addAllToNonResourceURLs(java.util.Collection<java.lang.String>);

  public abstract A removeFromNonResourceURLs(java.lang.String...);

  public abstract A removeAllFromNonResourceURLs(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getNonResourceURLs();

  public abstract java.lang.String getNonResourceURL(int);

  public abstract java.lang.String getFirstNonResourceURL();

  public abstract java.lang.String getLastNonResourceURL();

  public abstract java.lang.String getMatchingNonResourceURL(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingNonResourceURL(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withNonResourceURLs(java.util.List<java.lang.String>);

  public abstract A withNonResourceURLs(java.lang.String...);

  public abstract java.lang.Boolean hasNonResourceURLs();

  public abstract A addNewNonResourceURL(java.lang.String);

  public abstract A addNewNonResourceURL(java.lang.StringBuilder);

  public abstract A addNewNonResourceURL(java.lang.StringBuffer);

  public abstract A addToResourceNames(int, java.lang.String);

  public abstract A setToResourceNames(int, java.lang.String);

  public abstract A addToResourceNames(java.lang.String...);

  public abstract A addAllToResourceNames(java.util.Collection<java.lang.String>);

  public abstract A removeFromResourceNames(java.lang.String...);

  public abstract A removeAllFromResourceNames(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getResourceNames();

  public abstract java.lang.String getResourceName(int);

  public abstract java.lang.String getFirstResourceName();

  public abstract java.lang.String getLastResourceName();

  public abstract java.lang.String getMatchingResourceName(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingResourceName(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withResourceNames(java.util.List<java.lang.String>);

  public abstract A withResourceNames(java.lang.String...);

  public abstract java.lang.Boolean hasResourceNames();

  public abstract A addNewResourceName(java.lang.String);

  public abstract A addNewResourceName(java.lang.StringBuilder);

  public abstract A addNewResourceName(java.lang.StringBuffer);

  public abstract A addToResources(int, java.lang.String);

  public abstract A setToResources(int, java.lang.String);

  public abstract A addToResources(java.lang.String...);

  public abstract A addAllToResources(java.util.Collection<java.lang.String>);

  public abstract A removeFromResources(java.lang.String...);

  public abstract A removeAllFromResources(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getResources();

  public abstract java.lang.String getResource(int);

  public abstract java.lang.String getFirstResource();

  public abstract java.lang.String getLastResource();

  public abstract java.lang.String getMatchingResource(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingResource(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withResources(java.util.List<java.lang.String>);

  public abstract A withResources(java.lang.String...);

  public abstract java.lang.Boolean hasResources();

  public abstract A addNewResource(java.lang.String);

  public abstract A addNewResource(java.lang.StringBuilder);

  public abstract A addNewResource(java.lang.StringBuffer);

  public abstract A addToVerbs(int, java.lang.String);

  public abstract A setToVerbs(int, java.lang.String);

  public abstract A addToVerbs(java.lang.String...);

  public abstract A addAllToVerbs(java.util.Collection<java.lang.String>);

  public abstract A removeFromVerbs(java.lang.String...);

  public abstract A removeAllFromVerbs(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getVerbs();

  public abstract java.lang.String getVerb(int);

  public abstract java.lang.String getFirstVerb();

  public abstract java.lang.String getLastVerb();

  public abstract java.lang.String getMatchingVerb(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingVerb(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withVerbs(java.util.List<java.lang.String>);

  public abstract A withVerbs(java.lang.String...);

  public abstract java.lang.Boolean hasVerbs();

  public abstract A addNewVerb(java.lang.String);

  public abstract A addNewVerb(java.lang.StringBuilder);

  public abstract A addNewVerb(java.lang.StringBuffer);
}
