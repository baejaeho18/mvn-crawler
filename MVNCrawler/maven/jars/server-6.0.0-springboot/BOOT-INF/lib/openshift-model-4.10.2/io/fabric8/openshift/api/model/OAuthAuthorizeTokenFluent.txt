Compiled from "OAuthAuthorizeTokenFluent.java"
public interface io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent<A extends io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getClientName();

  public abstract A withClientName(java.lang.String);

  public abstract java.lang.Boolean hasClientName();

  public abstract A withNewClientName(java.lang.String);

  public abstract A withNewClientName(java.lang.StringBuilder);

  public abstract A withNewClientName(java.lang.StringBuffer);

  public abstract java.lang.String getCodeChallenge();

  public abstract A withCodeChallenge(java.lang.String);

  public abstract java.lang.Boolean hasCodeChallenge();

  public abstract A withNewCodeChallenge(java.lang.String);

  public abstract A withNewCodeChallenge(java.lang.StringBuilder);

  public abstract A withNewCodeChallenge(java.lang.StringBuffer);

  public abstract java.lang.String getCodeChallengeMethod();

  public abstract A withCodeChallengeMethod(java.lang.String);

  public abstract java.lang.Boolean hasCodeChallengeMethod();

  public abstract A withNewCodeChallengeMethod(java.lang.String);

  public abstract A withNewCodeChallengeMethod(java.lang.StringBuilder);

  public abstract A withNewCodeChallengeMethod(java.lang.StringBuffer);

  public abstract java.lang.Long getExpiresIn();

  public abstract A withExpiresIn(java.lang.Long);

  public abstract java.lang.Boolean hasExpiresIn();

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.openshift.api.model.OAuthAuthorizeTokenFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.String getRedirectURI();

  public abstract A withRedirectURI(java.lang.String);

  public abstract java.lang.Boolean hasRedirectURI();

  public abstract A withNewRedirectURI(java.lang.String);

  public abstract A withNewRedirectURI(java.lang.StringBuilder);

  public abstract A withNewRedirectURI(java.lang.StringBuffer);

  public abstract A addToScopes(int, java.lang.String);

  public abstract A setToScopes(int, java.lang.String);

  public abstract A addToScopes(java.lang.String...);

  public abstract A addAllToScopes(java.util.Collection<java.lang.String>);

  public abstract A removeFromScopes(java.lang.String...);

  public abstract A removeAllFromScopes(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getScopes();

  public abstract java.lang.String getScope(int);

  public abstract java.lang.String getFirstScope();

  public abstract java.lang.String getLastScope();

  public abstract java.lang.String getMatchingScope(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingScope(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withScopes(java.util.List<java.lang.String>);

  public abstract A withScopes(java.lang.String...);

  public abstract java.lang.Boolean hasScopes();

  public abstract A addNewScope(java.lang.String);

  public abstract A addNewScope(java.lang.StringBuilder);

  public abstract A addNewScope(java.lang.StringBuffer);

  public abstract java.lang.String getState();

  public abstract A withState(java.lang.String);

  public abstract java.lang.Boolean hasState();

  public abstract A withNewState(java.lang.String);

  public abstract A withNewState(java.lang.StringBuilder);

  public abstract A withNewState(java.lang.StringBuffer);

  public abstract java.lang.String getUserName();

  public abstract A withUserName(java.lang.String);

  public abstract java.lang.Boolean hasUserName();

  public abstract A withNewUserName(java.lang.String);

  public abstract A withNewUserName(java.lang.StringBuilder);

  public abstract A withNewUserName(java.lang.StringBuffer);

  public abstract java.lang.String getUserUID();

  public abstract A withUserUID(java.lang.String);

  public abstract java.lang.Boolean hasUserUID();

  public abstract A withNewUserUID(java.lang.String);

  public abstract A withNewUserUID(java.lang.StringBuilder);

  public abstract A withNewUserUID(java.lang.StringBuffer);
}
