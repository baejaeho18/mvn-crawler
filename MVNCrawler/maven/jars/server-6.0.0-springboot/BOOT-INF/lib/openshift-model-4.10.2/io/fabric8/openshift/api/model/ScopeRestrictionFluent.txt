Compiled from "ScopeRestrictionFluent.java"
public interface io.fabric8.openshift.api.model.ScopeRestrictionFluent<A extends io.fabric8.openshift.api.model.ScopeRestrictionFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.openshift.api.model.ClusterRoleScopeRestriction getClusterRole();

  public abstract io.fabric8.openshift.api.model.ClusterRoleScopeRestriction buildClusterRole();

  public abstract A withClusterRole(io.fabric8.openshift.api.model.ClusterRoleScopeRestriction);

  public abstract java.lang.Boolean hasClusterRole();

  public abstract io.fabric8.openshift.api.model.ScopeRestrictionFluent$ClusterRoleNested<A> withNewClusterRole();

  public abstract io.fabric8.openshift.api.model.ScopeRestrictionFluent$ClusterRoleNested<A> withNewClusterRoleLike(io.fabric8.openshift.api.model.ClusterRoleScopeRestriction);

  public abstract io.fabric8.openshift.api.model.ScopeRestrictionFluent$ClusterRoleNested<A> editClusterRole();

  public abstract io.fabric8.openshift.api.model.ScopeRestrictionFluent$ClusterRoleNested<A> editOrNewClusterRole();

  public abstract io.fabric8.openshift.api.model.ScopeRestrictionFluent$ClusterRoleNested<A> editOrNewClusterRoleLike(io.fabric8.openshift.api.model.ClusterRoleScopeRestriction);

  public abstract A addToLiterals(int, java.lang.String);

  public abstract A setToLiterals(int, java.lang.String);

  public abstract A addToLiterals(java.lang.String...);

  public abstract A addAllToLiterals(java.util.Collection<java.lang.String>);

  public abstract A removeFromLiterals(java.lang.String...);

  public abstract A removeAllFromLiterals(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getLiterals();

  public abstract java.lang.String getLiteral(int);

  public abstract java.lang.String getFirstLiteral();

  public abstract java.lang.String getLastLiteral();

  public abstract java.lang.String getMatchingLiteral(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingLiteral(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withLiterals(java.util.List<java.lang.String>);

  public abstract A withLiterals(java.lang.String...);

  public abstract java.lang.Boolean hasLiterals();

  public abstract A addNewLiteral(java.lang.String);

  public abstract A addNewLiteral(java.lang.StringBuilder);

  public abstract A addNewLiteral(java.lang.StringBuffer);
}
