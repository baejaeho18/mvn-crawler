public class org.bouncycastle.crypto.modes.GCMBlockCipher implements org.bouncycastle.crypto.modes.AEADBlockCipher {
  private static final int BLOCK_SIZE;

  private org.bouncycastle.crypto.BlockCipher cipher;

  private org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier;

  private org.bouncycastle.crypto.modes.gcm.GCMExponentiator exp;

  private boolean forEncryption;

  private boolean initialised;

  private int macSize;

  private byte[] lastKey;

  private byte[] nonce;

  private byte[] initialAssociatedText;

  private byte[] H;

  private byte[] J0;

  private byte[] bufBlock;

  private byte[] macBlock;

  private byte[] S;

  private byte[] S_at;

  private byte[] S_atPre;

  private byte[] counter;

  private int blocksRemaining;

  private int bufOff;

  private long totalLength;

  private byte[] atBlock;

  private int atBlockPos;

  private long atLength;

  private long atLengthPre;

  public org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #305                // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;)V
       6: return

  public org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.modes.gcm.GCMMultiplier);
    Code:
       0: aload_0
       1: invokespecial #285                // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #326,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      10: bipush        16
      12: if_icmpeq     25
      15: new           #153                // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #11                 // String cipher required with a block size of 16.
      21: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_2
      26: ifnonnull     37
      29: new           #169                // class org/bouncycastle/crypto/modes/gcm/Tables4kGCMMultiplier
      32: dup
      33: invokespecial #313                // Method org/bouncycastle/crypto/modes/gcm/Tables4kGCMMultiplier."<init>":()V
      36: astore_2
      37: aload_0
      38: aload_1
      39: putfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      42: aload_0
      43: aload_2
      44: putfield      #281                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      47: return

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: areturn

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #157                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #286                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #329,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #289                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /GCM
      21: invokevirtual #289                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #287                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #265                // Field forEncryption:Z
       5: aload_0
       6: aconst_null
       7: putfield      #277                // Field macBlock:[B
      10: aload_0
      11: iconst_1
      12: putfield      #266                // Field initialised:Z
      15: aconst_null
      16: astore        4
      18: aload_2
      19: instanceof    #170                // class org/bouncycastle/crypto/params/AEADParameters
      22: ifeq          123
      25: aload_2
      26: checkcast     #170                // class org/bouncycastle/crypto/params/AEADParameters
      29: astore        5
      31: aload         5
      33: invokevirtual #316                // Method org/bouncycastle/crypto/params/AEADParameters.getNonce:()[B
      36: astore        4
      38: aload_0
      39: aload         5
      41: invokevirtual #315                // Method org/bouncycastle/crypto/params/AEADParameters.getAssociatedText:()[B
      44: putfield      #275                // Field initialAssociatedText:[B
      47: aload         5
      49: invokevirtual #314                // Method org/bouncycastle/crypto/params/AEADParameters.getMacSize:()I
      52: istore        6
      54: iload         6
      56: bipush        32
      58: if_icmplt     77
      61: iload         6
      63: sipush        128
      66: if_icmpgt     77
      69: iload         6
      71: bipush        8
      73: irem
      74: ifeq          105
      77: new           #153                // class java/lang/IllegalArgumentException
      80: dup
      81: new           #157                // class java/lang/StringBuilder
      84: dup
      85: invokespecial #286                // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #7                  // String Invalid value for MAC size:
      90: invokevirtual #289                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: iload         6
      95: invokevirtual #288                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      98: invokevirtual #287                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: iload         6
     108: bipush        8
     110: idiv
     111: putfield      #261                // Field macSize:I
     114: aload         5
     116: invokevirtual #317                // Method org/bouncycastle/crypto/params/AEADParameters.getKey:()Lorg/bouncycastle/crypto/params/KeyParameter;
     119: astore_3
     120: goto          176
     123: aload_2
     124: instanceof    #172                // class org/bouncycastle/crypto/params/ParametersWithIV
     127: ifeq          166
     130: aload_2
     131: checkcast     #172                // class org/bouncycastle/crypto/params/ParametersWithIV
     134: astore        5
     136: aload         5
     138: invokevirtual #319                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
     141: astore        4
     143: aload_0
     144: aconst_null
     145: putfield      #275                // Field initialAssociatedText:[B
     148: aload_0
     149: bipush        16
     151: putfield      #261                // Field macSize:I
     154: aload         5
     156: invokevirtual #320                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     159: checkcast     #171                // class org/bouncycastle/crypto/params/KeyParameter
     162: astore_3
     163: goto          176
     166: new           #153                // class java/lang/IllegalArgumentException
     169: dup
     170: ldc           #13                 // String invalid parameters passed to GCM
     172: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: iload_1
     177: ifeq          185
     180: bipush        16
     182: goto          192
     185: bipush        16
     187: aload_0
     188: getfield      #261                // Field macSize:I
     191: iadd
     192: istore        5
     194: aload_0
     195: iload         5
     197: newarray       byte
     199: putfield      #273                // Field bufBlock:[B
     202: aload         4
     204: ifnull        214
     207: aload         4
     209: arraylength
     210: iconst_1
     211: if_icmpge     224
     214: new           #153                // class java/lang/IllegalArgumentException
     217: dup
     218: ldc           #5                  // String IV must be at least 1 byte
     220: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: iload_1
     225: ifeq          292
     228: aload_0
     229: getfield      #278                // Field nonce:[B
     232: ifnull        292
     235: aload_0
     236: getfield      #278                // Field nonce:[B
     239: aload         4
     241: invokestatic  #323                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
     244: ifeq          292
     247: aload_3
     248: ifnonnull     261
     251: new           #153                // class java/lang/IllegalArgumentException
     254: dup
     255: ldc           #10                 // String cannot reuse nonce for GCM encryption
     257: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     260: athrow
     261: aload_0
     262: getfield      #276                // Field lastKey:[B
     265: ifnull        292
     268: aload_0
     269: getfield      #276                // Field lastKey:[B
     272: aload_3
     273: invokevirtual #318                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
     276: invokestatic  #323                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
     279: ifeq          292
     282: new           #153                // class java/lang/IllegalArgumentException
     285: dup
     286: ldc           #10                 // String cannot reuse nonce for GCM encryption
     288: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     291: athrow
     292: aload_0
     293: aload         4
     295: putfield      #278                // Field nonce:[B
     298: aload_3
     299: ifnull        310
     302: aload_0
     303: aload_3
     304: invokevirtual #318                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
     307: putfield      #276                // Field lastKey:[B
     310: aload_3
     311: ifnull        374
     314: aload_0
     315: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     318: iconst_1
     319: aload_3
     320: invokeinterface #330,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     325: aload_0
     326: bipush        16
     328: newarray       byte
     330: putfield      #267                // Field H:[B
     333: aload_0
     334: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     337: aload_0
     338: getfield      #267                // Field H:[B
     341: iconst_0
     342: aload_0
     343: getfield      #267                // Field H:[B
     346: iconst_0
     347: invokeinterface #328,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     352: pop
     353: aload_0
     354: getfield      #281                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
     357: aload_0
     358: getfield      #267                // Field H:[B
     361: invokeinterface #333,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.init:([B)V
     366: aload_0
     367: aconst_null
     368: putfield      #280                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     371: goto          391
     374: aload_0
     375: getfield      #267                // Field H:[B
     378: ifnonnull     391
     381: new           #153                // class java/lang/IllegalArgumentException
     384: dup
     385: ldc           #8                  // String Key must be specified in initial init
     387: invokespecial #282                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     390: athrow
     391: aload_0
     392: bipush        16
     394: newarray       byte
     396: putfield      #268                // Field J0:[B
     399: aload_0
     400: getfield      #278                // Field nonce:[B
     403: arraylength
     404: bipush        12
     406: if_icmpne     438
     409: aload_0
     410: getfield      #278                // Field nonce:[B
     413: iconst_0
     414: aload_0
     415: getfield      #268                // Field J0:[B
     418: iconst_0
     419: aload_0
     420: getfield      #278                // Field nonce:[B
     423: arraylength
     424: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     427: aload_0
     428: getfield      #268                // Field J0:[B
     431: bipush        15
     433: iconst_1
     434: bastore
     435: goto          488
     438: aload_0
     439: aload_0
     440: getfield      #268                // Field J0:[B
     443: aload_0
     444: getfield      #278                // Field nonce:[B
     447: aload_0
     448: getfield      #278                // Field nonce:[B
     451: arraylength
     452: invokespecial #302                // Method gHASH:([B[BI)V
     455: bipush        16
     457: newarray       byte
     459: astore        6
     461: aload_0
     462: getfield      #278                // Field nonce:[B
     465: arraylength
     466: i2l
     467: ldc2_w        #147                // long 8l
     470: lmul
     471: aload         6
     473: bipush        8
     475: invokestatic  #325                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     478: aload_0
     479: aload_0
     480: getfield      #268                // Field J0:[B
     483: aload         6
     485: invokespecial #301                // Method gHASHBlock:([B[B)V
     488: aload_0
     489: bipush        16
     491: newarray       byte
     493: putfield      #269                // Field S:[B
     496: aload_0
     497: bipush        16
     499: newarray       byte
     501: putfield      #270                // Field S_at:[B
     504: aload_0
     505: bipush        16
     507: newarray       byte
     509: putfield      #271                // Field S_atPre:[B
     512: aload_0
     513: bipush        16
     515: newarray       byte
     517: putfield      #272                // Field atBlock:[B
     520: aload_0
     521: iconst_0
     522: putfield      #258                // Field atBlockPos:I
     525: aload_0
     526: lconst_0
     527: putfield      #262                // Field atLength:J
     530: aload_0
     531: lconst_0
     532: putfield      #263                // Field atLengthPre:J
     535: aload_0
     536: aload_0
     537: getfield      #268                // Field J0:[B
     540: invokestatic  #321                // Method org/bouncycastle/util/Arrays.clone:([B)[B
     543: putfield      #274                // Field counter:[B
     546: aload_0
     547: bipush        -2
     549: putfield      #259                // Field blocksRemaining:I
     552: aload_0
     553: iconst_0
     554: putfield      #260                // Field bufOff:I
     557: aload_0
     558: lconst_0
     559: putfield      #264                // Field totalLength:J
     562: aload_0
     563: getfield      #275                // Field initialAssociatedText:[B
     566: ifnull        583
     569: aload_0
     570: aload_0
     571: getfield      #275                // Field initialAssociatedText:[B
     574: iconst_0
     575: aload_0
     576: getfield      #275                // Field initialAssociatedText:[B
     579: arraylength
     580: invokevirtual #298                // Method processAADBytes:([BII)V
     583: return

  public byte[] getMac();
    Code:
       0: aload_0
       1: getfield      #277                // Field macBlock:[B
       4: ifnonnull     14
       7: aload_0
       8: getfield      #261                // Field macSize:I
      11: newarray       byte
      13: areturn
      14: aload_0
      15: getfield      #277                // Field macBlock:[B
      18: invokestatic  #321                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      21: areturn

  public int getOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #260                // Field bufOff:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #265                // Field forEncryption:Z
      11: ifeq          21
      14: iload_2
      15: aload_0
      16: getfield      #261                // Field macSize:I
      19: iadd
      20: ireturn
      21: iload_2
      22: aload_0
      23: getfield      #261                // Field macSize:I
      26: if_icmpge     33
      29: iconst_0
      30: goto          39
      33: iload_2
      34: aload_0
      35: getfield      #261                // Field macSize:I
      38: isub
      39: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #260                // Field bufOff:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #265                // Field forEncryption:Z
      11: ifne          31
      14: iload_2
      15: aload_0
      16: getfield      #261                // Field macSize:I
      19: if_icmpge     24
      22: iconst_0
      23: ireturn
      24: iload_2
      25: aload_0
      26: getfield      #261                // Field macSize:I
      29: isub
      30: istore_2
      31: iload_2
      32: iload_2
      33: bipush        16
      35: irem
      36: isub
      37: ireturn

  public void processAADByte(byte);
    Code:
       0: aload_0
       1: invokespecial #294                // Method checkStatus:()V
       4: aload_0
       5: getfield      #272                // Field atBlock:[B
       8: aload_0
       9: getfield      #258                // Field atBlockPos:I
      12: iload_1
      13: bastore
      14: aload_0
      15: dup
      16: getfield      #258                // Field atBlockPos:I
      19: iconst_1
      20: iadd
      21: dup_x1
      22: putfield      #258                // Field atBlockPos:I
      25: bipush        16
      27: if_icmpne     59
      30: aload_0
      31: aload_0
      32: getfield      #270                // Field S_at:[B
      35: aload_0
      36: getfield      #272                // Field atBlock:[B
      39: invokespecial #301                // Method gHASHBlock:([B[B)V
      42: aload_0
      43: iconst_0
      44: putfield      #258                // Field atBlockPos:I
      47: aload_0
      48: dup
      49: getfield      #262                // Field atLength:J
      52: ldc2_w        #149                // long 16l
      55: ladd
      56: putfield      #262                // Field atLength:J
      59: return

  public void processAADBytes(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #294                // Method checkStatus:()V
       4: iconst_0
       5: istore        4
       7: iload         4
       9: iload_3
      10: if_icmpge     79
      13: aload_0
      14: getfield      #272                // Field atBlock:[B
      17: aload_0
      18: getfield      #258                // Field atBlockPos:I
      21: aload_1
      22: iload_2
      23: iload         4
      25: iadd
      26: baload
      27: bastore
      28: aload_0
      29: dup
      30: getfield      #258                // Field atBlockPos:I
      33: iconst_1
      34: iadd
      35: dup_x1
      36: putfield      #258                // Field atBlockPos:I
      39: bipush        16
      41: if_icmpne     73
      44: aload_0
      45: aload_0
      46: getfield      #270                // Field S_at:[B
      49: aload_0
      50: getfield      #272                // Field atBlock:[B
      53: invokespecial #301                // Method gHASHBlock:([B[B)V
      56: aload_0
      57: iconst_0
      58: putfield      #258                // Field atBlockPos:I
      61: aload_0
      62: dup
      63: getfield      #262                // Field atLength:J
      66: ldc2_w        #149                // long 16l
      69: ladd
      70: putfield      #262                // Field atLength:J
      73: iinc          4, 1
      76: goto          7
      79: return

  private void initCipher();
    Code:
       0: aload_0
       1: getfield      #262                // Field atLength:J
       4: lconst_0
       5: lcmp
       6: ifle          32
       9: aload_0
      10: getfield      #270                // Field S_at:[B
      13: iconst_0
      14: aload_0
      15: getfield      #271                // Field S_atPre:[B
      18: iconst_0
      19: bipush        16
      21: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: aload_0
      26: getfield      #262                // Field atLength:J
      29: putfield      #263                // Field atLengthPre:J
      32: aload_0
      33: getfield      #258                // Field atBlockPos:I
      36: ifle          70
      39: aload_0
      40: aload_0
      41: getfield      #271                // Field S_atPre:[B
      44: aload_0
      45: getfield      #272                // Field atBlock:[B
      48: iconst_0
      49: aload_0
      50: getfield      #258                // Field atBlockPos:I
      53: invokespecial #304                // Method gHASHPartial:([B[BII)V
      56: aload_0
      57: dup
      58: getfield      #263                // Field atLengthPre:J
      61: aload_0
      62: getfield      #258                // Field atBlockPos:I
      65: i2l
      66: ladd
      67: putfield      #263                // Field atLengthPre:J
      70: aload_0
      71: getfield      #263                // Field atLengthPre:J
      74: lconst_0
      75: lcmp
      76: ifle          94
      79: aload_0
      80: getfield      #271                // Field S_atPre:[B
      83: iconst_0
      84: aload_0
      85: getfield      #269                // Field S:[B
      88: iconst_0
      89: bipush        16
      91: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: invokespecial #294                // Method checkStatus:()V
       4: aload_0
       5: getfield      #273                // Field bufBlock:[B
       8: aload_0
       9: getfield      #260                // Field bufOff:I
      12: iload_1
      13: bastore
      14: aload_0
      15: dup
      16: getfield      #260                // Field bufOff:I
      19: iconst_1
      20: iadd
      21: dup_x1
      22: putfield      #260                // Field bufOff:I
      25: aload_0
      26: getfield      #273                // Field bufBlock:[B
      29: arraylength
      30: if_icmpne     88
      33: aload_0
      34: aload_0
      35: getfield      #273                // Field bufBlock:[B
      38: iconst_0
      39: aload_2
      40: iload_3
      41: invokespecial #300                // Method processBlock:([BI[BI)V
      44: aload_0
      45: getfield      #265                // Field forEncryption:Z
      48: ifeq          59
      51: aload_0
      52: iconst_0
      53: putfield      #260                // Field bufOff:I
      56: goto          85
      59: aload_0
      60: getfield      #273                // Field bufBlock:[B
      63: bipush        16
      65: aload_0
      66: getfield      #273                // Field bufBlock:[B
      69: iconst_0
      70: aload_0
      71: getfield      #261                // Field macSize:I
      74: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      77: aload_0
      78: aload_0
      79: getfield      #261                // Field macSize:I
      82: putfield      #260                // Field bufOff:I
      85: bipush        16
      87: ireturn
      88: iconst_0
      89: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: invokespecial #294                // Method checkStatus:()V
       4: aload_1
       5: arraylength
       6: iload_2
       7: isub
       8: iload_3
       9: if_icmpge     22
      12: new           #160                // class org/bouncycastle/crypto/DataLengthException
      15: dup
      16: ldc           #6                  // String Input buffer too short
      18: invokespecial #291                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iconst_0
      23: istore        6
      25: aload_0
      26: getfield      #265                // Field forEncryption:Z
      29: ifeq          155
      32: aload_0
      33: getfield      #260                // Field bufOff:I
      36: ifeq          101
      39: iload_3
      40: ifle          101
      43: iinc          3, -1
      46: aload_0
      47: getfield      #273                // Field bufBlock:[B
      50: aload_0
      51: getfield      #260                // Field bufOff:I
      54: aload_1
      55: iload_2
      56: iinc          2, 1
      59: baload
      60: bastore
      61: aload_0
      62: dup
      63: getfield      #260                // Field bufOff:I
      66: iconst_1
      67: iadd
      68: dup_x1
      69: putfield      #260                // Field bufOff:I
      72: bipush        16
      74: if_icmpne     39
      77: aload_0
      78: aload_0
      79: getfield      #273                // Field bufBlock:[B
      82: iconst_0
      83: aload         4
      85: iload         5
      87: invokespecial #300                // Method processBlock:([BI[BI)V
      90: aload_0
      91: iconst_0
      92: putfield      #260                // Field bufOff:I
      95: iinc          6, 16
      98: goto          101
     101: iload_3
     102: bipush        16
     104: if_icmplt     132
     107: aload_0
     108: aload_1
     109: iload_2
     110: aload         4
     112: iload         5
     114: iload         6
     116: iadd
     117: invokespecial #300                // Method processBlock:([BI[BI)V
     120: iinc          2, 16
     123: iinc          3, -16
     126: iinc          6, 16
     129: goto          101
     132: iload_3
     133: ifle          249
     136: aload_1
     137: iload_2
     138: aload_0
     139: getfield      #273                // Field bufBlock:[B
     142: iconst_0
     143: iload_3
     144: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     147: aload_0
     148: iload_3
     149: putfield      #260                // Field bufOff:I
     152: goto          249
     155: iconst_0
     156: istore        7
     158: iload         7
     160: iload_3
     161: if_icmpge     249
     164: aload_0
     165: getfield      #273                // Field bufBlock:[B
     168: aload_0
     169: getfield      #260                // Field bufOff:I
     172: aload_1
     173: iload_2
     174: iload         7
     176: iadd
     177: baload
     178: bastore
     179: aload_0
     180: dup
     181: getfield      #260                // Field bufOff:I
     184: iconst_1
     185: iadd
     186: dup_x1
     187: putfield      #260                // Field bufOff:I
     190: aload_0
     191: getfield      #273                // Field bufBlock:[B
     194: arraylength
     195: if_icmpne     243
     198: aload_0
     199: aload_0
     200: getfield      #273                // Field bufBlock:[B
     203: iconst_0
     204: aload         4
     206: iload         5
     208: iload         6
     210: iadd
     211: invokespecial #300                // Method processBlock:([BI[BI)V
     214: aload_0
     215: getfield      #273                // Field bufBlock:[B
     218: bipush        16
     220: aload_0
     221: getfield      #273                // Field bufBlock:[B
     224: iconst_0
     225: aload_0
     226: getfield      #261                // Field macSize:I
     229: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     232: aload_0
     233: aload_0
     234: getfield      #261                // Field macSize:I
     237: putfield      #260                // Field bufOff:I
     240: iinc          6, 16
     243: iinc          7, 1
     246: goto          158
     249: iload         6
     251: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: invokespecial #294                // Method checkStatus:()V
       4: aload_0
       5: getfield      #264                // Field totalLength:J
       8: lconst_0
       9: lcmp
      10: ifne          17
      13: aload_0
      14: invokespecial #295                // Method initCipher:()V
      17: aload_0
      18: getfield      #260                // Field bufOff:I
      21: istore_3
      22: aload_0
      23: getfield      #265                // Field forEncryption:Z
      26: ifeq          52
      29: aload_1
      30: arraylength
      31: iload_2
      32: isub
      33: iload_3
      34: aload_0
      35: getfield      #261                // Field macSize:I
      38: iadd
      39: if_icmpge     95
      42: new           #162                // class org/bouncycastle/crypto/OutputLengthException
      45: dup
      46: ldc           #9                  // String Output buffer too short
      48: invokespecial #293                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_3
      53: aload_0
      54: getfield      #261                // Field macSize:I
      57: if_icmpge     70
      60: new           #161                // class org/bouncycastle/crypto/InvalidCipherTextException
      63: dup
      64: ldc           #12                 // String data too short
      66: invokespecial #292                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: iload_3
      71: aload_0
      72: getfield      #261                // Field macSize:I
      75: isub
      76: istore_3
      77: aload_1
      78: arraylength
      79: iload_2
      80: isub
      81: iload_3
      82: if_icmpge     95
      85: new           #162                // class org/bouncycastle/crypto/OutputLengthException
      88: dup
      89: ldc           #9                  // String Output buffer too short
      91: invokespecial #293                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: iload_3
      96: ifle          111
      99: aload_0
     100: aload_0
     101: getfield      #273                // Field bufBlock:[B
     104: iconst_0
     105: iload_3
     106: aload_1
     107: iload_2
     108: invokespecial #299                // Method processPartial:([BII[BI)V
     111: aload_0
     112: dup
     113: getfield      #262                // Field atLength:J
     116: aload_0
     117: getfield      #258                // Field atBlockPos:I
     120: i2l
     121: ladd
     122: putfield      #262                // Field atLength:J
     125: aload_0
     126: getfield      #262                // Field atLength:J
     129: aload_0
     130: getfield      #263                // Field atLengthPre:J
     133: lcmp
     134: ifle          268
     137: aload_0
     138: getfield      #258                // Field atBlockPos:I
     141: ifle          161
     144: aload_0
     145: aload_0
     146: getfield      #270                // Field S_at:[B
     149: aload_0
     150: getfield      #272                // Field atBlock:[B
     153: iconst_0
     154: aload_0
     155: getfield      #258                // Field atBlockPos:I
     158: invokespecial #304                // Method gHASHPartial:([B[BII)V
     161: aload_0
     162: getfield      #263                // Field atLengthPre:J
     165: lconst_0
     166: lcmp
     167: ifle          181
     170: aload_0
     171: getfield      #270                // Field S_at:[B
     174: aload_0
     175: getfield      #271                // Field S_atPre:[B
     178: invokestatic  #310                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
     181: aload_0
     182: getfield      #264                // Field totalLength:J
     185: ldc2_w        #147                // long 8l
     188: lmul
     189: ldc2_w        #151                // long 127l
     192: ladd
     193: bipush        7
     195: lushr
     196: lstore        4
     198: bipush        16
     200: newarray       byte
     202: astore        6
     204: aload_0
     205: getfield      #280                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     208: ifnonnull     235
     211: aload_0
     212: new           #165                // class org/bouncycastle/crypto/modes/gcm/BasicGCMExponentiator
     215: dup
     216: invokespecial #306                // Method org/bouncycastle/crypto/modes/gcm/BasicGCMExponentiator."<init>":()V
     219: putfield      #280                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     222: aload_0
     223: getfield      #280                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     226: aload_0
     227: getfield      #267                // Field H:[B
     230: invokeinterface #332,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMExponentiator.init:([B)V
     235: aload_0
     236: getfield      #280                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     239: lload         4
     241: aload         6
     243: invokeinterface #331,  4          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMExponentiator.exponentiateX:(J[B)V
     248: aload_0
     249: getfield      #270                // Field S_at:[B
     252: aload         6
     254: invokestatic  #309                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiply:([B[B)V
     257: aload_0
     258: getfield      #269                // Field S:[B
     261: aload_0
     262: getfield      #270                // Field S_at:[B
     265: invokestatic  #310                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
     268: bipush        16
     270: newarray       byte
     272: astore        4
     274: aload_0
     275: getfield      #262                // Field atLength:J
     278: ldc2_w        #147                // long 8l
     281: lmul
     282: aload         4
     284: iconst_0
     285: invokestatic  #325                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     288: aload_0
     289: getfield      #264                // Field totalLength:J
     292: ldc2_w        #147                // long 8l
     295: lmul
     296: aload         4
     298: bipush        8
     300: invokestatic  #325                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     303: aload_0
     304: aload_0
     305: getfield      #269                // Field S:[B
     308: aload         4
     310: invokespecial #301                // Method gHASHBlock:([B[B)V
     313: bipush        16
     315: newarray       byte
     317: astore        5
     319: aload_0
     320: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     323: aload_0
     324: getfield      #268                // Field J0:[B
     327: iconst_0
     328: aload         5
     330: iconst_0
     331: invokeinterface #328,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     336: pop
     337: aload         5
     339: aload_0
     340: getfield      #269                // Field S:[B
     343: invokestatic  #310                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
     346: iload_3
     347: istore        6
     349: aload_0
     350: aload_0
     351: getfield      #261                // Field macSize:I
     354: newarray       byte
     356: putfield      #277                // Field macBlock:[B
     359: aload         5
     361: iconst_0
     362: aload_0
     363: getfield      #277                // Field macBlock:[B
     366: iconst_0
     367: aload_0
     368: getfield      #261                // Field macSize:I
     371: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     374: aload_0
     375: getfield      #265                // Field forEncryption:Z
     378: ifeq          412
     381: aload_0
     382: getfield      #277                // Field macBlock:[B
     385: iconst_0
     386: aload_1
     387: iload_2
     388: aload_0
     389: getfield      #260                // Field bufOff:I
     392: iadd
     393: aload_0
     394: getfield      #261                // Field macSize:I
     397: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     400: iload         6
     402: aload_0
     403: getfield      #261                // Field macSize:I
     406: iadd
     407: istore        6
     409: goto          457
     412: aload_0
     413: getfield      #261                // Field macSize:I
     416: newarray       byte
     418: astore        7
     420: aload_0
     421: getfield      #273                // Field bufBlock:[B
     424: iload_3
     425: aload         7
     427: iconst_0
     428: aload_0
     429: getfield      #261                // Field macSize:I
     432: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     435: aload_0
     436: getfield      #277                // Field macBlock:[B
     439: aload         7
     441: invokestatic  #324                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
     444: ifne          457
     447: new           #161                // class org/bouncycastle/crypto/InvalidCipherTextException
     450: dup
     451: ldc           #14                 // String mac check in GCM failed
     453: invokespecial #292                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     456: athrow
     457: aload_0
     458: iconst_0
     459: invokespecial #296                // Method reset:(Z)V
     462: iload         6
     464: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #296                // Method reset:(Z)V
       5: return

  private void reset(boolean);
    Code:
       0: aload_0
       1: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #327,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
       9: aload_0
      10: bipush        16
      12: newarray       byte
      14: putfield      #269                // Field S:[B
      17: aload_0
      18: bipush        16
      20: newarray       byte
      22: putfield      #270                // Field S_at:[B
      25: aload_0
      26: bipush        16
      28: newarray       byte
      30: putfield      #271                // Field S_atPre:[B
      33: aload_0
      34: bipush        16
      36: newarray       byte
      38: putfield      #272                // Field atBlock:[B
      41: aload_0
      42: iconst_0
      43: putfield      #258                // Field atBlockPos:I
      46: aload_0
      47: lconst_0
      48: putfield      #262                // Field atLength:J
      51: aload_0
      52: lconst_0
      53: putfield      #263                // Field atLengthPre:J
      56: aload_0
      57: aload_0
      58: getfield      #268                // Field J0:[B
      61: invokestatic  #321                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      64: putfield      #274                // Field counter:[B
      67: aload_0
      68: bipush        -2
      70: putfield      #259                // Field blocksRemaining:I
      73: aload_0
      74: iconst_0
      75: putfield      #260                // Field bufOff:I
      78: aload_0
      79: lconst_0
      80: putfield      #264                // Field totalLength:J
      83: aload_0
      84: getfield      #273                // Field bufBlock:[B
      87: ifnull        98
      90: aload_0
      91: getfield      #273                // Field bufBlock:[B
      94: iconst_0
      95: invokestatic  #322                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      98: iload_1
      99: ifeq          107
     102: aload_0
     103: aconst_null
     104: putfield      #277                // Field macBlock:[B
     107: aload_0
     108: getfield      #265                // Field forEncryption:Z
     111: ifeq          122
     114: aload_0
     115: iconst_0
     116: putfield      #266                // Field initialised:Z
     119: goto          143
     122: aload_0
     123: getfield      #275                // Field initialAssociatedText:[B
     126: ifnull        143
     129: aload_0
     130: aload_0
     131: getfield      #275                // Field initialAssociatedText:[B
     134: iconst_0
     135: aload_0
     136: getfield      #275                // Field initialAssociatedText:[B
     139: arraylength
     140: invokevirtual #298                // Method processAADBytes:([BII)V
     143: return

  private void processBlock(byte[], int, byte[], int);
    Code:
       0: aload_3
       1: arraylength
       2: iload         4
       4: isub
       5: bipush        16
       7: if_icmpge     20
      10: new           #162                // class org/bouncycastle/crypto/OutputLengthException
      13: dup
      14: ldc           #9                  // String Output buffer too short
      16: invokespecial #293                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #264                // Field totalLength:J
      24: lconst_0
      25: lcmp
      26: ifne          33
      29: aload_0
      30: invokespecial #295                // Method initCipher:()V
      33: bipush        16
      35: newarray       byte
      37: astore        5
      39: aload_0
      40: aload         5
      42: invokespecial #297                // Method getNextCTRBlock:([B)V
      45: aload_0
      46: getfield      #265                // Field forEncryption:Z
      49: ifeq          83
      52: aload         5
      54: aload_1
      55: iload_2
      56: invokestatic  #311                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[BI)V
      59: aload_0
      60: aload_0
      61: getfield      #269                // Field S:[B
      64: aload         5
      66: invokespecial #301                // Method gHASHBlock:([B[B)V
      69: aload         5
      71: iconst_0
      72: aload_3
      73: iload         4
      75: bipush        16
      77: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      80: goto          104
      83: aload_0
      84: aload_0
      85: getfield      #269                // Field S:[B
      88: aload_1
      89: iload_2
      90: invokespecial #303                // Method gHASHBlock:([B[BI)V
      93: aload         5
      95: iconst_0
      96: aload_1
      97: iload_2
      98: aload_3
      99: iload         4
     101: invokestatic  #308                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([BI[BI[BI)V
     104: aload_0
     105: dup
     106: getfield      #264                // Field totalLength:J
     109: ldc2_w        #149                // long 16l
     112: ladd
     113: putfield      #264                // Field totalLength:J
     116: return

  private void processPartial(byte[], int, int, byte[], int);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore        6
       6: aload_0
       7: aload         6
       9: invokespecial #297                // Method getNextCTRBlock:([B)V
      12: aload_0
      13: getfield      #265                // Field forEncryption:Z
      16: ifeq          42
      19: aload_1
      20: iload_2
      21: aload         6
      23: iconst_0
      24: iload_3
      25: invokestatic  #307                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([BI[BII)V
      28: aload_0
      29: aload_0
      30: getfield      #269                // Field S:[B
      33: aload_1
      34: iload_2
      35: iload_3
      36: invokespecial #304                // Method gHASHPartial:([B[BII)V
      39: goto          62
      42: aload_0
      43: aload_0
      44: getfield      #269                // Field S:[B
      47: aload_1
      48: iload_2
      49: iload_3
      50: invokespecial #304                // Method gHASHPartial:([B[BII)V
      53: aload_1
      54: iload_2
      55: aload         6
      57: iconst_0
      58: iload_3
      59: invokestatic  #307                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([BI[BII)V
      62: aload_1
      63: iload_2
      64: aload         4
      66: iload         5
      68: iload_3
      69: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      72: aload_0
      73: dup
      74: getfield      #264                // Field totalLength:J
      77: iload_3
      78: i2l
      79: ladd
      80: putfield      #264                // Field totalLength:J
      83: return

  private void gHASH(byte[], byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     36
       9: iload_3
      10: iload         4
      12: isub
      13: bipush        16
      15: invokestatic  #284                // Method java/lang/Math.min:(II)I
      18: istore        5
      20: aload_0
      21: aload_1
      22: aload_2
      23: iload         4
      25: iload         5
      27: invokespecial #304                // Method gHASHPartial:([B[BII)V
      30: iinc          4, 16
      33: goto          3
      36: return

  private void gHASHBlock(byte[], byte[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #310                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
       5: aload_0
       6: getfield      #281                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
       9: aload_1
      10: invokeinterface #334,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.multiplyH:([B)V
      15: return

  private void gHASHBlock(byte[], byte[], int);
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #311                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[BI)V
       6: aload_0
       7: getfield      #281                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      10: aload_1
      11: invokeinterface #334,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.multiplyH:([B)V
      16: return

  private void gHASHPartial(byte[], byte[], int, int);
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: iload         4
       5: invokestatic  #312                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[BII)V
       8: aload_0
       9: getfield      #281                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      12: aload_1
      13: invokeinterface #334,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.multiplyH:([B)V
      18: return

  private void getNextCTRBlock(byte[]);
    Code:
       0: aload_0
       1: getfield      #259                // Field blocksRemaining:I
       4: ifne          17
       7: new           #154                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String Attempt to process too many blocks
      13: invokespecial #283                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: dup
      19: getfield      #259                // Field blocksRemaining:I
      22: iconst_1
      23: isub
      24: putfield      #259                // Field blocksRemaining:I
      27: iconst_1
      28: istore_2
      29: iload_2
      30: aload_0
      31: getfield      #274                // Field counter:[B
      34: bipush        15
      36: baload
      37: sipush        255
      40: iand
      41: iadd
      42: istore_2
      43: aload_0
      44: getfield      #274                // Field counter:[B
      47: bipush        15
      49: iload_2
      50: i2b
      51: bastore
      52: iload_2
      53: bipush        8
      55: iushr
      56: istore_2
      57: iload_2
      58: aload_0
      59: getfield      #274                // Field counter:[B
      62: bipush        14
      64: baload
      65: sipush        255
      68: iand
      69: iadd
      70: istore_2
      71: aload_0
      72: getfield      #274                // Field counter:[B
      75: bipush        14
      77: iload_2
      78: i2b
      79: bastore
      80: iload_2
      81: bipush        8
      83: iushr
      84: istore_2
      85: iload_2
      86: aload_0
      87: getfield      #274                // Field counter:[B
      90: bipush        13
      92: baload
      93: sipush        255
      96: iand
      97: iadd
      98: istore_2
      99: aload_0
     100: getfield      #274                // Field counter:[B
     103: bipush        13
     105: iload_2
     106: i2b
     107: bastore
     108: iload_2
     109: bipush        8
     111: iushr
     112: istore_2
     113: iload_2
     114: aload_0
     115: getfield      #274                // Field counter:[B
     118: bipush        12
     120: baload
     121: sipush        255
     124: iand
     125: iadd
     126: istore_2
     127: aload_0
     128: getfield      #274                // Field counter:[B
     131: bipush        12
     133: iload_2
     134: i2b
     135: bastore
     136: aload_0
     137: getfield      #279                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     140: aload_0
     141: getfield      #274                // Field counter:[B
     144: iconst_0
     145: aload_1
     146: iconst_0
     147: invokeinterface #328,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     152: pop
     153: return

  private void checkStatus();
    Code:
       0: aload_0
       1: getfield      #266                // Field initialised:Z
       4: ifne          34
       7: aload_0
       8: getfield      #265                // Field forEncryption:Z
      11: ifeq          24
      14: new           #154                // class java/lang/IllegalStateException
      17: dup
      18: ldc           #3                  // String GCM cipher cannot be reused for encryption
      20: invokespecial #283                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #154                // class java/lang/IllegalStateException
      27: dup
      28: ldc           #4                  // String GCM cipher needs to be initialised
      30: invokespecial #283                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return
}
