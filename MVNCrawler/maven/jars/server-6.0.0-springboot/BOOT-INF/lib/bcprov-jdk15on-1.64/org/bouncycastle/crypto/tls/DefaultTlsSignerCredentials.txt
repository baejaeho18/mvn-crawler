public class org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials extends org.bouncycastle.crypto.tls.AbstractTlsSignerCredentials {
  protected org.bouncycastle.crypto.tls.TlsContext context;

  protected org.bouncycastle.crypto.tls.Certificate certificate;

  protected org.bouncycastle.crypto.params.AsymmetricKeyParameter privateKey;

  protected org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm signatureAndHashAlgorithm;

  protected org.bouncycastle.crypto.tls.TlsSigner signer;

  public org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #123                // Method "<init>":(Lorg/bouncycastle/crypto/tls/TlsContext;Lorg/bouncycastle/crypto/tls/Certificate;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;)V
       8: return

  public org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm);
    Code:
       0: aload_0
       1: invokespecial #121                // Method org/bouncycastle/crypto/tls/AbstractTlsSignerCredentials."<init>":()V
       4: aload_2
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #2                  // String \'certificate\' cannot be null
      14: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: invokevirtual #122                // Method org/bouncycastle/crypto/tls/Certificate.isEmpty:()Z
      22: ifeq          35
      25: new           #55                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #1                  // String \'certificate\' cannot be empty
      31: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_3
      36: ifnonnull     49
      39: new           #55                 // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #3                  // String \'privateKey\' cannot be null
      45: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_3
      50: invokevirtual #120                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      53: ifne          66
      56: new           #55                 // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #4                  // String \'privateKey\' must be private
      62: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_1
      67: invokestatic  #128                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      70: ifeq          88
      73: aload         4
      75: ifnonnull     88
      78: new           #55                 // class java/lang/IllegalArgumentException
      81: dup
      82: ldc           #6                  // String \'signatureAndHashAlgorithm\' cannot be null for (D)TLS 1.2+
      84: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_3
      89: instanceof    #62                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      92: ifeq          109
      95: aload_0
      96: new           #69                 // class org/bouncycastle/crypto/tls/TlsRSASigner
      99: dup
     100: invokespecial #127                // Method org/bouncycastle/crypto/tls/TlsRSASigner."<init>":()V
     103: putfield      #113                // Field signer:Lorg/bouncycastle/crypto/tls/TlsSigner;
     106: goto          184
     109: aload_3
     110: instanceof    #60                 // class org/bouncycastle/crypto/params/DSAPrivateKeyParameters
     113: ifeq          130
     116: aload_0
     117: new           #66                 // class org/bouncycastle/crypto/tls/TlsDSSSigner
     120: dup
     121: invokespecial #124                // Method org/bouncycastle/crypto/tls/TlsDSSSigner."<init>":()V
     124: putfield      #113                // Field signer:Lorg/bouncycastle/crypto/tls/TlsSigner;
     127: goto          184
     130: aload_3
     131: instanceof    #61                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
     134: ifeq          151
     137: aload_0
     138: new           #67                 // class org/bouncycastle/crypto/tls/TlsECDSASigner
     141: dup
     142: invokespecial #125                // Method org/bouncycastle/crypto/tls/TlsECDSASigner."<init>":()V
     145: putfield      #113                // Field signer:Lorg/bouncycastle/crypto/tls/TlsSigner;
     148: goto          184
     151: new           #55                 // class java/lang/IllegalArgumentException
     154: dup
     155: new           #57                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #117                // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #5                  // String \'privateKey\' type not supported:
     164: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_3
     168: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     171: invokevirtual #114                // Method java/lang/Class.getName:()Ljava/lang/String;
     174: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     183: athrow
     184: aload_0
     185: getfield      #113                // Field signer:Lorg/bouncycastle/crypto/tls/TlsSigner;
     188: aload_1
     189: invokeinterface #130,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSigner.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V
     194: aload_0
     195: aload_1
     196: putfield      #112                // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
     199: aload_0
     200: aload_2
     201: putfield      #110                // Field certificate:Lorg/bouncycastle/crypto/tls/Certificate;
     204: aload_0
     205: aload_3
     206: putfield      #109                // Field privateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
     209: aload_0
     210: aload         4
     212: putfield      #111                // Field signatureAndHashAlgorithm:Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;
     215: return

  public org.bouncycastle.crypto.tls.Certificate getCertificate();
    Code:
       0: aload_0
       1: getfield      #110                // Field certificate:Lorg/bouncycastle/crypto/tls/Certificate;
       4: areturn

  public byte[] generateCertificateSignature(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #112                // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
       4: invokestatic  #128                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       7: ifeq          29
      10: aload_0
      11: getfield      #113                // Field signer:Lorg/bouncycastle/crypto/tls/TlsSigner;
      14: aload_0
      15: getfield      #111                // Field signatureAndHashAlgorithm:Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;
      18: aload_0
      19: getfield      #109                // Field privateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      22: aload_1
      23: invokeinterface #131,  4          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSigner.generateRawSignature:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;[B)[B
      28: areturn
      29: aload_0
      30: getfield      #113                // Field signer:Lorg/bouncycastle/crypto/tls/TlsSigner;
      33: aload_0
      34: getfield      #109                // Field privateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      37: aload_1
      38: invokeinterface #129,  3          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSigner.generateRawSignature:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;[B)[B
      43: areturn
      44: astore_2
      45: new           #68                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      48: dup
      49: bipush        80
      51: aload_2
      52: invokespecial #126                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(SLjava/lang/Throwable;)V
      55: athrow
    Exception table:
       from    to  target type
           0    28    44   Class org/bouncycastle/crypto/CryptoException
          29    43    44   Class org/bouncycastle/crypto/CryptoException

  public org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm getSignatureAndHashAlgorithm();
    Code:
       0: aload_0
       1: getfield      #111                // Field signatureAndHashAlgorithm:Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;
       4: areturn
}
