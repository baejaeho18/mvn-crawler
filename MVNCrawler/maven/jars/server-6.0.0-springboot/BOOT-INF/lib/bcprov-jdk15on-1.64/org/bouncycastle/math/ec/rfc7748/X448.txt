public abstract class org.bouncycastle.math.ec.rfc7748.X448 {
  public static final int POINT_SIZE;

  public static final int SCALAR_SIZE;

  private static final int C_A;

  private static final int C_A24;

  public org.bouncycastle.math.ec.rfc7748.X448();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method java/lang/Object."<init>":()V
       4: return

  public static boolean calculateAgreement(byte[], int, byte[], int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: invokestatic  #95                 // Method scalarMult:([BI[BI[BI)V
      11: aload         4
      13: iload         5
      15: bipush        56
      17: invokestatic  #113                // Method org/bouncycastle/util/Arrays.areAllZeroes:([BII)Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private static int decode32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: istore_2
       8: iload_2
       9: aload_0
      10: iinc          1, 1
      13: iload_1
      14: baload
      15: sipush        255
      18: iand
      19: bipush        8
      21: ishl
      22: ior
      23: istore_2
      24: iload_2
      25: aload_0
      26: iinc          1, 1
      29: iload_1
      30: baload
      31: sipush        255
      34: iand
      35: bipush        16
      37: ishl
      38: ior
      39: istore_2
      40: iload_2
      41: aload_0
      42: iinc          1, 1
      45: iload_1
      46: baload
      47: bipush        24
      49: ishl
      50: ior
      51: istore_2
      52: iload_2
      53: ireturn

  private static void decodeScalar(byte[], int, int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        14
       5: if_icmpge     26
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_1
      12: iload_3
      13: iconst_4
      14: imul
      15: iadd
      16: invokestatic  #93                 // Method decode32:([BI)I
      19: iastore
      20: iinc          3, 1
      23: goto          2
      26: aload_2
      27: iconst_0
      28: dup2
      29: iaload
      30: bipush        -4
      32: iand
      33: iastore
      34: aload_2
      35: bipush        13
      37: dup2
      38: iaload
      39: ldc           #1                  // int -2147483648
      41: ior
      42: iastore
      43: return

  public static void generatePrivateKey(java.security.SecureRandom, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method java/security/SecureRandom.nextBytes:([B)V
       5: aload_1
       6: iconst_0
       7: dup2
       8: baload
       9: sipush        252
      12: iand
      13: i2b
      14: bastore
      15: aload_1
      16: bipush        55
      18: dup2
      19: baload
      20: sipush        128
      23: ior
      24: i2b
      25: bastore
      26: return

  public static void generatePublicKey(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #94                 // Method scalarMultBase:([BI[BI)V
       7: return

  private static void pointDouble(int[], int[]);
    Code:
       0: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
       3: astore_2
       4: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X448Field.add:([I[I[I)V
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sub:([I[I[I)V
      20: aload_2
      21: aload_2
      22: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
      25: aload_3
      26: aload_3
      27: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
      30: aload_2
      31: aload_3
      32: aload_0
      33: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
      36: aload_2
      37: aload_3
      38: aload_2
      39: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sub:([I[I[I)V
      42: aload_2
      43: ldc           #2                  // int 39082
      45: aload_1
      46: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([II[I)V
      49: aload_1
      50: aload_3
      51: aload_1
      52: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X448Field.add:([I[I[I)V
      55: aload_1
      56: aload_2
      57: aload_1
      58: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
      61: return

  public static void precompute();
    Code:
       0: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc8032/Ed448.precompute:()V
       3: return

  public static void scalarMult(byte[], int, byte[], int, byte[], int);
    Code:
       0: bipush        14
       2: newarray       int
       4: astore        6
       6: aload_0
       7: iload_1
       8: aload         6
      10: invokestatic  #96                 // Method decodeScalar:([BI[I)V
      13: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      16: astore        7
      18: aload_2
      19: iload_3
      20: aload         7
      22: invokestatic  #101                // Method org/bouncycastle/math/ec/rfc7748/X448Field.decode:([BI[I)V
      25: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      28: astore        8
      30: aload         7
      32: iconst_0
      33: aload         8
      35: iconst_0
      36: invokestatic  #104                // Method org/bouncycastle/math/ec/rfc7748/X448Field.copy:([II[II)V
      39: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      42: astore        9
      44: aload         9
      46: iconst_0
      47: iconst_1
      48: iastore
      49: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      52: astore        10
      54: aload         10
      56: iconst_0
      57: iconst_1
      58: iastore
      59: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      62: astore        11
      64: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      67: astore        12
      69: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
      72: astore        13
      74: sipush        447
      77: istore        14
      79: iconst_1
      80: istore        15
      82: aload         10
      84: aload         11
      86: aload         12
      88: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X448Field.add:([I[I[I)V
      91: aload         10
      93: aload         11
      95: aload         10
      97: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sub:([I[I[I)V
     100: aload         8
     102: aload         9
     104: aload         11
     106: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X448Field.add:([I[I[I)V
     109: aload         8
     111: aload         9
     113: aload         8
     115: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sub:([I[I[I)V
     118: aload         12
     120: aload         8
     122: aload         12
     124: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
     127: aload         10
     129: aload         11
     131: aload         10
     133: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
     136: aload         11
     138: aload         11
     140: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
     143: aload         8
     145: aload         8
     147: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
     150: aload         11
     152: aload         8
     154: aload         13
     156: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sub:([I[I[I)V
     159: aload         13
     161: ldc           #2                  // int 39082
     163: aload         9
     165: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([II[I)V
     168: aload         9
     170: aload         8
     172: aload         9
     174: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X448Field.add:([I[I[I)V
     177: aload         9
     179: aload         13
     181: aload         9
     183: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
     186: aload         8
     188: aload         11
     190: aload         8
     192: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
     195: aload         12
     197: aload         10
     199: aload         11
     201: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sub:([I[I[I)V
     204: aload         12
     206: aload         10
     208: aload         10
     210: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X448Field.add:([I[I[I)V
     213: aload         10
     215: aload         10
     217: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
     220: aload         11
     222: aload         11
     224: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
     227: aload         11
     229: aload         7
     231: aload         11
     233: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
     236: iinc          14, -1
     239: iload         14
     241: iconst_5
     242: iushr
     243: istore        16
     245: iload         14
     247: bipush        31
     249: iand
     250: istore        17
     252: aload         6
     254: iload         16
     256: iaload
     257: iload         17
     259: iushr
     260: iconst_1
     261: iand
     262: istore        18
     264: iload         15
     266: iload         18
     268: ixor
     269: istore        15
     271: iload         15
     273: aload         8
     275: aload         10
     277: invokestatic  #100                // Method org/bouncycastle/math/ec/rfc7748/X448Field.cswap:(I[I[I)V
     280: iload         15
     282: aload         9
     284: aload         11
     286: invokestatic  #100                // Method org/bouncycastle/math/ec/rfc7748/X448Field.cswap:(I[I[I)V
     289: iload         18
     291: istore        15
     293: iload         14
     295: iconst_2
     296: if_icmpge     82
     299: iconst_0
     300: istore        16
     302: iload         16
     304: iconst_2
     305: if_icmpge     321
     308: aload         8
     310: aload         9
     312: invokestatic  #97                 // Method pointDouble:([I[I)V
     315: iinc          16, 1
     318: goto          302
     321: aload         9
     323: aload         9
     325: invokestatic  #106                // Method org/bouncycastle/math/ec/rfc7748/X448Field.inv:([I[I)V
     328: aload         8
     330: aload         9
     332: aload         8
     334: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
     337: aload         8
     339: invokestatic  #102                // Method org/bouncycastle/math/ec/rfc7748/X448Field.normalize:([I)V
     342: aload         8
     344: aload         4
     346: iload         5
     348: invokestatic  #105                // Method org/bouncycastle/math/ec/rfc7748/X448Field.encode:([I[BI)V
     351: return

  public static void scalarMultBase(byte[], int, byte[], int);
    Code:
       0: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
       3: astore        4
       5: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc7748/X448Field.create:()[I
       8: astore        5
      10: invokestatic  #98                 // Method org/bouncycastle/math/ec/rfc7748/X448$Friend.access$000:()Lorg/bouncycastle/math/ec/rfc7748/X448$Friend;
      13: aload_0
      14: iload_1
      15: aload         4
      17: aload         5
      19: invokestatic  #112                // Method org/bouncycastle/math/ec/rfc8032/Ed448.scalarMultBaseXY:(Lorg/bouncycastle/math/ec/rfc7748/X448$Friend;[BI[I[I)V
      22: aload         4
      24: aload         4
      26: invokestatic  #106                // Method org/bouncycastle/math/ec/rfc7748/X448Field.inv:([I[I)V
      29: aload         4
      31: aload         5
      33: aload         4
      35: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X448Field.mul:([I[I[I)V
      38: aload         4
      40: aload         4
      42: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X448Field.sqr:([I[I)V
      45: aload         4
      47: invokestatic  #102                // Method org/bouncycastle/math/ec/rfc7748/X448Field.normalize:([I)V
      50: aload         4
      52: aload_2
      53: iload_3
      54: invokestatic  #105                // Method org/bouncycastle/math/ec/rfc7748/X448Field.encode:([I[BI)V
      57: return
}
