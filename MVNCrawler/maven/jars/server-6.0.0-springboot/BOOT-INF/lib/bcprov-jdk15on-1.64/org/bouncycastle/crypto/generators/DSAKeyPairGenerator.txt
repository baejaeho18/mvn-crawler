public class org.bouncycastle.crypto.generators.DSAKeyPairGenerator implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator {
  private static final java.math.BigInteger ONE;

  private org.bouncycastle.crypto.params.DSAKeyGenerationParameters param;

  public org.bouncycastle.crypto.generators.DSAKeyPairGenerator();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.KeyGenerationParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #38                 // class org/bouncycastle/crypto/params/DSAKeyGenerationParameters
       5: putfield      #79                 // Field param:Lorg/bouncycastle/crypto/params/DSAKeyGenerationParameters;
       8: return

  public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair();
    Code:
       0: aload_0
       1: getfield      #79                 // Field param:Lorg/bouncycastle/crypto/params/DSAKeyGenerationParameters;
       4: invokevirtual #89                 // Method org/bouncycastle/crypto/params/DSAKeyGenerationParameters.getParameters:()Lorg/bouncycastle/crypto/params/DSAParameters;
       7: astore_1
       8: aload_1
       9: invokevirtual #92                 // Method org/bouncycastle/crypto/params/DSAParameters.getQ:()Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #79                 // Field param:Lorg/bouncycastle/crypto/params/DSAKeyGenerationParameters;
      16: invokevirtual #88                 // Method org/bouncycastle/crypto/params/DSAKeyGenerationParameters.getRandom:()Ljava/security/SecureRandom;
      19: invokestatic  #86                 // Method generatePrivateKey:(Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      22: astore_2
      23: aload_1
      24: invokevirtual #91                 // Method org/bouncycastle/crypto/params/DSAParameters.getP:()Ljava/math/BigInteger;
      27: aload_1
      28: invokevirtual #90                 // Method org/bouncycastle/crypto/params/DSAParameters.getG:()Ljava/math/BigInteger;
      31: aload_2
      32: invokestatic  #87                 // Method calculatePublicKey:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      35: astore_3
      36: new           #35                 // class org/bouncycastle/crypto/AsymmetricCipherKeyPair
      39: dup
      40: new           #41                 // class org/bouncycastle/crypto/params/DSAPublicKeyParameters
      43: dup
      44: aload_3
      45: aload_1
      46: invokespecial #94                 // Method org/bouncycastle/crypto/params/DSAPublicKeyParameters."<init>":(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAParameters;)V
      49: new           #40                 // class org/bouncycastle/crypto/params/DSAPrivateKeyParameters
      52: dup
      53: aload_2
      54: aload_1
      55: invokespecial #93                 // Method org/bouncycastle/crypto/params/DSAPrivateKeyParameters."<init>":(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAParameters;)V
      58: invokespecial #85                 // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair."<init>":(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V
      61: areturn

  private static java.math.BigInteger generatePrivateKey(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method java/math/BigInteger.bitLength:()I
       4: iconst_2
       5: iushr
       6: istore_2
       7: getstatic     #78                 // Field ONE:Ljava/math/BigInteger;
      10: aload_0
      11: getstatic     #78                 // Field ONE:Ljava/math/BigInteger;
      14: invokevirtual #83                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      17: aload_1
      18: invokestatic  #96                 // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      21: astore_3
      22: aload_3
      23: invokestatic  #95                 // Method org/bouncycastle/math/ec/WNafUtil.getNafWeight:(Ljava/math/BigInteger;)I
      26: iload_2
      27: if_icmplt     32
      30: aload_3
      31: areturn
      32: goto          7

  private static java.math.BigInteger calculatePublicKey(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #84                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       6: areturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #82                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #78                 // Field ONE:Ljava/math/BigInteger;
       7: return
}
