public class org.bouncycastle.pqc.crypto.gmss.GMSSLeaf {
  private org.bouncycastle.crypto.Digest messDigestOTS;

  private int mdsize;

  private int keysize;

  private org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom gmssRandom;

  private byte[] leaf;

  private byte[] concHashs;

  private int i;

  private int j;

  private int two_power_w;

  private int w;

  private int steps;

  private byte[] seed;

  byte[] privateKeyOTS;

  public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, byte[][], int[]);
    Code:
       0: aload_0
       1: invokespecial #138                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: iconst_0
       7: iaload
       8: putfield      #123                // Field i:I
      11: aload_0
      12: aload_3
      13: iconst_1
      14: iaload
      15: putfield      #124                // Field j:I
      18: aload_0
      19: aload_3
      20: iconst_2
      21: iaload
      22: putfield      #127                // Field steps:I
      25: aload_0
      26: aload_3
      27: iconst_3
      28: iaload
      29: putfield      #129                // Field w:I
      32: aload_0
      33: aload_1
      34: putfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      37: aload_0
      38: new           #73                 // class org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom
      41: dup
      42: aload_0
      43: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      46: invokespecial #152                // Method org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      49: putfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
      52: aload_0
      53: aload_0
      54: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      57: invokeinterface #155,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      62: putfield      #126                // Field mdsize:I
      65: aload_0
      66: getfield      #126                // Field mdsize:I
      69: iconst_3
      70: ishl
      71: istore        4
      73: iload         4
      75: i2d
      76: aload_0
      77: getfield      #129                // Field w:I
      80: i2d
      81: ddiv
      82: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
      85: d2i
      86: istore        5
      88: aload_0
      89: iload         5
      91: aload_0
      92: getfield      #129                // Field w:I
      95: ishl
      96: iconst_1
      97: iadd
      98: invokespecial #148                // Method getLog:(I)I
     101: istore        6
     103: aload_0
     104: iload         5
     106: iload         6
     108: i2d
     109: aload_0
     110: getfield      #129                // Field w:I
     113: i2d
     114: ddiv
     115: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
     118: d2i
     119: iadd
     120: putfield      #125                // Field keysize:I
     123: aload_0
     124: iconst_1
     125: aload_0
     126: getfield      #129                // Field w:I
     129: ishl
     130: putfield      #128                // Field two_power_w:I
     133: aload_0
     134: aload_2
     135: iconst_0
     136: aaload
     137: putfield      #132                // Field privateKeyOTS:[B
     140: aload_0
     141: aload_2
     142: iconst_1
     143: aaload
     144: putfield      #133                // Field seed:[B
     147: aload_0
     148: aload_2
     149: iconst_2
     150: aaload
     151: putfield      #130                // Field concHashs:[B
     154: aload_0
     155: aload_2
     156: iconst_3
     157: aaload
     158: putfield      #131                // Field leaf:[B
     161: return

  org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, int, int);
    Code:
       0: aload_0
       1: invokespecial #138                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #129                // Field w:I
       9: aload_0
      10: aload_1
      11: putfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      14: aload_0
      15: new           #73                 // class org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom
      18: dup
      19: aload_0
      20: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      23: invokespecial #152                // Method org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      26: putfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
      29: aload_0
      30: aload_0
      31: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      34: invokeinterface #155,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      39: putfield      #126                // Field mdsize:I
      42: aload_0
      43: getfield      #126                // Field mdsize:I
      46: iconst_3
      47: ishl
      48: istore        4
      50: iload         4
      52: i2d
      53: iload_2
      54: i2d
      55: ddiv
      56: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
      59: d2i
      60: istore        5
      62: aload_0
      63: iload         5
      65: iload_2
      66: ishl
      67: iconst_1
      68: iadd
      69: invokespecial #148                // Method getLog:(I)I
      72: istore        6
      74: aload_0
      75: iload         5
      77: iload         6
      79: i2d
      80: iload_2
      81: i2d
      82: ddiv
      83: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
      86: d2i
      87: iadd
      88: putfield      #125                // Field keysize:I
      91: aload_0
      92: iconst_1
      93: iload_2
      94: ishl
      95: putfield      #128                // Field two_power_w:I
      98: aload_0
      99: iconst_1
     100: iload_2
     101: ishl
     102: iconst_1
     103: isub
     104: aload_0
     105: getfield      #125                // Field keysize:I
     108: imul
     109: iconst_1
     110: iadd
     111: aload_0
     112: getfield      #125                // Field keysize:I
     115: iadd
     116: i2d
     117: iload_3
     118: i2d
     119: ddiv
     120: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
     123: d2i
     124: putfield      #127                // Field steps:I
     127: aload_0
     128: aload_0
     129: getfield      #126                // Field mdsize:I
     132: newarray       byte
     134: putfield      #133                // Field seed:[B
     137: aload_0
     138: aload_0
     139: getfield      #126                // Field mdsize:I
     142: newarray       byte
     144: putfield      #131                // Field leaf:[B
     147: aload_0
     148: aload_0
     149: getfield      #126                // Field mdsize:I
     152: newarray       byte
     154: putfield      #132                // Field privateKeyOTS:[B
     157: aload_0
     158: aload_0
     159: getfield      #126                // Field mdsize:I
     162: aload_0
     163: getfield      #125                // Field keysize:I
     166: imul
     167: newarray       byte
     169: putfield      #130                // Field concHashs:[B
     172: return

  public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, int, int, byte[]);
    Code:
       0: aload_0
       1: invokespecial #138                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #129                // Field w:I
       9: aload_0
      10: aload_1
      11: putfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      14: aload_0
      15: new           #73                 // class org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom
      18: dup
      19: aload_0
      20: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      23: invokespecial #152                // Method org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      26: putfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
      29: aload_0
      30: aload_0
      31: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      34: invokeinterface #155,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      39: putfield      #126                // Field mdsize:I
      42: aload_0
      43: getfield      #126                // Field mdsize:I
      46: iconst_3
      47: ishl
      48: istore        5
      50: iload         5
      52: i2d
      53: iload_2
      54: i2d
      55: ddiv
      56: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
      59: d2i
      60: istore        6
      62: aload_0
      63: iload         6
      65: iload_2
      66: ishl
      67: iconst_1
      68: iadd
      69: invokespecial #148                // Method getLog:(I)I
      72: istore        7
      74: aload_0
      75: iload         6
      77: iload         7
      79: i2d
      80: iload_2
      81: i2d
      82: ddiv
      83: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
      86: d2i
      87: iadd
      88: putfield      #125                // Field keysize:I
      91: aload_0
      92: iconst_1
      93: iload_2
      94: ishl
      95: putfield      #128                // Field two_power_w:I
      98: aload_0
      99: iconst_1
     100: iload_2
     101: ishl
     102: iconst_1
     103: isub
     104: aload_0
     105: getfield      #125                // Field keysize:I
     108: imul
     109: iconst_1
     110: iadd
     111: aload_0
     112: getfield      #125                // Field keysize:I
     115: iadd
     116: i2d
     117: iload_3
     118: i2d
     119: ddiv
     120: invokestatic  #137                // Method java/lang/Math.ceil:(D)D
     123: d2i
     124: putfield      #127                // Field steps:I
     127: aload_0
     128: aload_0
     129: getfield      #126                // Field mdsize:I
     132: newarray       byte
     134: putfield      #133                // Field seed:[B
     137: aload_0
     138: aload_0
     139: getfield      #126                // Field mdsize:I
     142: newarray       byte
     144: putfield      #131                // Field leaf:[B
     147: aload_0
     148: aload_0
     149: getfield      #126                // Field mdsize:I
     152: newarray       byte
     154: putfield      #132                // Field privateKeyOTS:[B
     157: aload_0
     158: aload_0
     159: getfield      #126                // Field mdsize:I
     162: aload_0
     163: getfield      #125                // Field keysize:I
     166: imul
     167: newarray       byte
     169: putfield      #130                // Field concHashs:[B
     172: aload_0
     173: aload         4
     175: invokevirtual #149                // Method initLeafCalc:([B)V
     178: return

  private org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.pqc.crypto.gmss.GMSSLeaf);
    Code:
       0: aload_0
       1: invokespecial #138                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
       9: putfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      12: aload_0
      13: aload_1
      14: getfield      #126                // Field mdsize:I
      17: putfield      #126                // Field mdsize:I
      20: aload_0
      21: aload_1
      22: getfield      #125                // Field keysize:I
      25: putfield      #125                // Field keysize:I
      28: aload_0
      29: aload_1
      30: getfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
      33: putfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
      36: aload_0
      37: aload_1
      38: getfield      #131                // Field leaf:[B
      41: invokestatic  #153                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      44: putfield      #131                // Field leaf:[B
      47: aload_0
      48: aload_1
      49: getfield      #130                // Field concHashs:[B
      52: invokestatic  #153                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      55: putfield      #130                // Field concHashs:[B
      58: aload_0
      59: aload_1
      60: getfield      #123                // Field i:I
      63: putfield      #123                // Field i:I
      66: aload_0
      67: aload_1
      68: getfield      #124                // Field j:I
      71: putfield      #124                // Field j:I
      74: aload_0
      75: aload_1
      76: getfield      #128                // Field two_power_w:I
      79: putfield      #128                // Field two_power_w:I
      82: aload_0
      83: aload_1
      84: getfield      #129                // Field w:I
      87: putfield      #129                // Field w:I
      90: aload_0
      91: aload_1
      92: getfield      #127                // Field steps:I
      95: putfield      #127                // Field steps:I
      98: aload_0
      99: aload_1
     100: getfield      #133                // Field seed:[B
     103: invokestatic  #153                // Method org/bouncycastle/util/Arrays.clone:([B)[B
     106: putfield      #133                // Field seed:[B
     109: aload_0
     110: aload_1
     111: getfield      #132                // Field privateKeyOTS:[B
     114: invokestatic  #153                // Method org/bouncycastle/util/Arrays.clone:([B)[B
     117: putfield      #132                // Field privateKeyOTS:[B
     120: return

  void initLeafCalc(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #123                // Field i:I
       5: aload_0
       6: iconst_0
       7: putfield      #124                // Field j:I
      10: aload_0
      11: getfield      #126                // Field mdsize:I
      14: newarray       byte
      16: astore_2
      17: aload_1
      18: iconst_0
      19: aload_2
      20: iconst_0
      21: aload_0
      22: getfield      #133                // Field seed:[B
      25: arraylength
      26: invokestatic  #144                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_0
      30: aload_0
      31: getfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
      34: aload_2
      35: invokevirtual #151                // Method org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom.nextSeed:([B)[B
      38: putfield      #133                // Field seed:[B
      41: return

  org.bouncycastle.pqc.crypto.gmss.GMSSLeaf nextLeaf();
    Code:
       0: new           #72                 // class org/bouncycastle/pqc/crypto/gmss/GMSSLeaf
       3: dup
       4: aload_0
       5: invokespecial #150                // Method "<init>":(Lorg/bouncycastle/pqc/crypto/gmss/GMSSLeaf;)V
       8: astore_1
       9: aload_1
      10: invokespecial #145                // Method updateLeafCalc:()V
      13: aload_1
      14: areturn

  private void updateLeafCalc();
    Code:
       0: aload_0
       1: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #155,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
       9: newarray       byte
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: getfield      #127                // Field steps:I
      19: sipush        10000
      22: iadd
      23: if_icmpge     248
      26: aload_0
      27: getfield      #123                // Field i:I
      30: aload_0
      31: getfield      #125                // Field keysize:I
      34: if_icmpne     100
      37: aload_0
      38: getfield      #124                // Field j:I
      41: aload_0
      42: getfield      #128                // Field two_power_w:I
      45: iconst_1
      46: isub
      47: if_icmpne     100
      50: aload_0
      51: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      54: aload_0
      55: getfield      #130                // Field concHashs:[B
      58: iconst_0
      59: aload_0
      60: getfield      #130                // Field concHashs:[B
      63: arraylength
      64: invokeinterface #157,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      69: aload_0
      70: aload_0
      71: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      74: invokeinterface #155,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      79: newarray       byte
      81: putfield      #131                // Field leaf:[B
      84: aload_0
      85: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
      88: aload_0
      89: getfield      #131                // Field leaf:[B
      92: iconst_0
      93: invokeinterface #156,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      98: pop
      99: return
     100: aload_0
     101: getfield      #123                // Field i:I
     104: ifeq          120
     107: aload_0
     108: getfield      #124                // Field j:I
     111: aload_0
     112: getfield      #128                // Field two_power_w:I
     115: iconst_1
     116: isub
     117: if_icmpne     153
     120: aload_0
     121: dup
     122: getfield      #123                // Field i:I
     125: iconst_1
     126: iadd
     127: putfield      #123                // Field i:I
     130: aload_0
     131: iconst_0
     132: putfield      #124                // Field j:I
     135: aload_0
     136: aload_0
     137: getfield      #135                // Field gmssRandom:Lorg/bouncycastle/pqc/crypto/gmss/util/GMSSRandom;
     140: aload_0
     141: getfield      #133                // Field seed:[B
     144: invokevirtual #151                // Method org/bouncycastle/pqc/crypto/gmss/util/GMSSRandom.nextSeed:([B)[B
     147: putfield      #132                // Field privateKeyOTS:[B
     150: goto          242
     153: aload_0
     154: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
     157: aload_0
     158: getfield      #132                // Field privateKeyOTS:[B
     161: iconst_0
     162: aload_0
     163: getfield      #132                // Field privateKeyOTS:[B
     166: arraylength
     167: invokeinterface #157,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     172: aload_0
     173: aload_1
     174: putfield      #132                // Field privateKeyOTS:[B
     177: aload_0
     178: getfield      #134                // Field messDigestOTS:Lorg/bouncycastle/crypto/Digest;
     181: aload_0
     182: getfield      #132                // Field privateKeyOTS:[B
     185: iconst_0
     186: invokeinterface #156,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     191: pop
     192: aload_0
     193: dup
     194: getfield      #124                // Field j:I
     197: iconst_1
     198: iadd
     199: putfield      #124                // Field j:I
     202: aload_0
     203: getfield      #124                // Field j:I
     206: aload_0
     207: getfield      #128                // Field two_power_w:I
     210: iconst_1
     211: isub
     212: if_icmpne     242
     215: aload_0
     216: getfield      #132                // Field privateKeyOTS:[B
     219: iconst_0
     220: aload_0
     221: getfield      #130                // Field concHashs:[B
     224: aload_0
     225: getfield      #126                // Field mdsize:I
     228: aload_0
     229: getfield      #123                // Field i:I
     232: iconst_1
     233: isub
     234: imul
     235: aload_0
     236: getfield      #126                // Field mdsize:I
     239: invokestatic  #144                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     242: iinc          2, 1
     245: goto          14
     248: new           #65                 // class java/lang/IllegalStateException
     251: dup
     252: new           #69                 // class java/lang/StringBuilder
     255: dup
     256: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     259: ldc           #4                  // String unable to updateLeaf in steps:
     261: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: aload_0
     265: getfield      #127                // Field steps:I
     268: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     271: ldc           #2                  // String
     273: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: aload_0
     277: getfield      #123                // Field i:I
     280: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     283: ldc           #2                  // String
     285: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: aload_0
     289: getfield      #124                // Field j:I
     292: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     295: invokevirtual #141                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokespecial #136                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     301: athrow

  public byte[] getLeaf();
    Code:
       0: aload_0
       1: getfield      #131                // Field leaf:[B
       4: invokestatic  #153                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  private int getLog(int);
    Code:
       0: iconst_1
       1: istore_2
       2: iconst_2
       3: istore_3
       4: iload_3
       5: iload_1
       6: if_icmpge     19
       9: iload_3
      10: iconst_1
      11: ishl
      12: istore_3
      13: iinc          2, 1
      16: goto          4
      19: iload_2
      20: ireturn

  public byte[][] getStatByte();
    Code:
       0: iconst_4
       1: anewarray     #64                 // class "[B"
       4: astore_1
       5: aload_1
       6: iconst_0
       7: aload_0
       8: getfield      #132                // Field privateKeyOTS:[B
      11: aastore
      12: aload_1
      13: iconst_1
      14: aload_0
      15: getfield      #133                // Field seed:[B
      18: aastore
      19: aload_1
      20: iconst_2
      21: aload_0
      22: getfield      #130                // Field concHashs:[B
      25: aastore
      26: aload_1
      27: iconst_3
      28: aload_0
      29: getfield      #131                // Field leaf:[B
      32: aastore
      33: aload_1
      34: areturn

  public int[] getStatInt();
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_1
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getfield      #123                // Field i:I
      10: iastore
      11: aload_1
      12: iconst_1
      13: aload_0
      14: getfield      #124                // Field j:I
      17: iastore
      18: aload_1
      19: iconst_2
      20: aload_0
      21: getfield      #127                // Field steps:I
      24: iastore
      25: aload_1
      26: iconst_3
      27: aload_0
      28: getfield      #129                // Field w:I
      31: iastore
      32: aload_1
      33: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #1                  // String
       2: astore_1
       3: iconst_0
       4: istore_2
       5: iload_2
       6: iconst_4
       7: if_icmpge     45
      10: new           #69                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      17: aload_1
      18: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #146                // Method getStatInt:()[I
      25: iload_2
      26: iaload
      27: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #2                  // String
      32: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #141                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: astore_1
      39: iinc          2, 1
      42: goto          5
      45: new           #69                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      52: aload_1
      53: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #2                  // String
      58: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #126                // Field mdsize:I
      65: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      68: ldc           #2                  // String
      70: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: getfield      #125                // Field keysize:I
      77: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #2                  // String
      82: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #128                // Field two_power_w:I
      89: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: ldc           #2                  // String
      94: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #141                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: astore_1
     101: aload_0
     102: invokevirtual #147                // Method getStatByte:()[[B
     105: astore_2
     106: iconst_0
     107: istore_3
     108: iload_3
     109: iconst_4
     110: if_icmpge     184
     113: aload_2
     114: iload_3
     115: aaload
     116: ifnull        158
     119: new           #69                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     126: aload_1
     127: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: new           #68                 // class java/lang/String
     133: dup
     134: aload_2
     135: iload_3
     136: aaload
     137: invokestatic  #154                // Method org/bouncycastle/util/encoders/Hex.encode:([B)[B
     140: invokespecial #139                // Method java/lang/String."<init>":([B)V
     143: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc           #2                  // String
     148: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: invokevirtual #141                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: astore_1
     155: goto          178
     158: new           #69                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     165: aload_1
     166: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: ldc           #3                  // String null
     171: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #141                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: astore_1
     178: iinc          3, 1
     181: goto          108
     184: aload_1
     185: areturn
}
