public class org.bouncycastle.crypto.params.RSAKeyParameters extends org.bouncycastle.crypto.params.AsymmetricKeyParameter {
  private static final java.math.BigInteger SMALL_PRIMES_PRODUCT;

  private static final java.math.BigInteger ONE;

  private java.math.BigInteger modulus;

  private java.math.BigInteger exponent;

  public org.bouncycastle.crypto.params.RSAKeyParameters(boolean, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #70                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: iload_1
       6: ifne          28
       9: aload_3
      10: invokevirtual #65                 // Method java/math/BigInteger.intValue:()I
      13: iconst_1
      14: iand
      15: ifne          28
      18: new           #33                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #4                  // String RSA publicExponent is even
      24: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_0
      30: aload_2
      31: invokespecial #71                 // Method validate:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      34: putfield      #63                 // Field modulus:Ljava/math/BigInteger;
      37: aload_0
      38: aload_3
      39: putfield      #62                 // Field exponent:Ljava/math/BigInteger;
      42: return

  private java.math.BigInteger validate(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method java/math/BigInteger.intValue:()I
       4: iconst_1
       5: iand
       6: ifne          19
       9: new           #33                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String RSA modulus is even
      15: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: ldc           #5                  // String org.bouncycastle.rsa.allow_unsafe_mod
      21: invokestatic  #72                 // Method org/bouncycastle/util/Properties.isOverrideSet:(Ljava/lang/String;)Z
      24: ifeq          29
      27: aload_1
      28: areturn
      29: aload_1
      30: getstatic     #61                 // Field SMALL_PRIMES_PRODUCT:Ljava/math/BigInteger;
      33: invokevirtual #69                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      36: getstatic     #60                 // Field ONE:Ljava/math/BigInteger;
      39: invokevirtual #66                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      42: ifne          55
      45: new           #33                 // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #2                  // String RSA modulus has a small prime factor
      51: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: areturn

  public java.math.BigInteger getModulus();
    Code:
       0: aload_0
       1: getfield      #63                 // Field modulus:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getExponent();
    Code:
       0: aload_0
       1: getfield      #62                 // Field exponent:Ljava/math/BigInteger;
       4: areturn

  static {};
    Code:
       0: new           #34                 // class java/math/BigInteger
       3: dup
       4: ldc           #1                  // String 8138e8a0fcf3a4e84a771d40fd305d7f4aa59306d7251de54d98af8fe95729a1f73d893fa424cd2edc8636a6c3285e022b0e3866a565ae8108eed8591cd4fe8d2ce86165a978d719ebf647f362d33fca29cd179fb42401cbaf3df0c614056f9c8f3cfd51e474afb6bc6974f78db8aba8e9e517fded658591ab7502bd41849462f
       6: bipush        16
       8: invokespecial #67                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      11: putstatic     #61                 // Field SMALL_PRIMES_PRODUCT:Ljava/math/BigInteger;
      14: lconst_1
      15: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      18: putstatic     #60                 // Field ONE:Ljava/math/BigInteger;
      21: return
}
