public class org.bouncycastle.crypto.ec.ECNewRandomnessTransform implements org.bouncycastle.crypto.ec.ECPairFactorTransform {
  private org.bouncycastle.crypto.params.ECPublicKeyParameters key;

  private java.security.SecureRandom random;

  private java.math.BigInteger lastK;

  public org.bouncycastle.crypto.ec.ECNewRandomnessTransform();
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #54                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          54
       7: aload_1
       8: checkcast     #54                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore_2
      12: aload_2
      13: invokevirtual #121                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      16: instanceof    #53                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      19: ifne          32
      22: new           #44                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #2                  // String ECPublicKeyParameters are required for new randomness transform.
      28: invokespecial #106                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_2
      34: invokevirtual #121                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      37: checkcast     #53                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      40: putfield      #105                // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      43: aload_0
      44: aload_2
      45: invokevirtual #120                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      48: putfield      #104                // Field random:Ljava/security/SecureRandom;
      51: goto          86
      54: aload_1
      55: instanceof    #53                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      58: ifne          71
      61: new           #44                 // class java/lang/IllegalArgumentException
      64: dup
      65: ldc           #2                  // String ECPublicKeyParameters are required for new randomness transform.
      67: invokespecial #106                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: aload_1
      73: checkcast     #53                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      76: putfield      #105                // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      79: aload_0
      80: invokestatic  #109                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      83: putfield      #104                // Field random:Ljava/security/SecureRandom;
      86: return

  public org.bouncycastle.crypto.ec.ECPair transform(org.bouncycastle.crypto.ec.ECPair);
    Code:
       0: aload_0
       1: getfield      #105                // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
       4: ifnonnull     17
       7: new           #45                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String ECNewRandomnessTransform not initialised
      13: invokespecial #107                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #105                // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      21: invokevirtual #118                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      24: astore_2
      25: aload_2
      26: invokevirtual #115                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      29: astore_3
      30: aload_0
      31: invokevirtual #110                // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      34: astore        4
      36: aload_3
      37: aload_0
      38: getfield      #104                // Field random:Ljava/security/SecureRandom;
      41: invokestatic  #114                // Method org/bouncycastle/crypto/ec/ECUtil.generateK:(Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      44: astore        5
      46: iconst_2
      47: anewarray     #58                 // class org/bouncycastle/math/ec/ECPoint
      50: dup
      51: iconst_0
      52: aload         4
      54: aload_2
      55: invokevirtual #117                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      58: aload         5
      60: invokeinterface #127,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      65: aload_2
      66: invokevirtual #116                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      69: aload_1
      70: invokevirtual #111                // Method org/bouncycastle/crypto/ec/ECPair.getX:()Lorg/bouncycastle/math/ec/ECPoint;
      73: invokestatic  #122                // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      76: invokevirtual #125                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_0
      83: getfield      #105                // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      86: invokevirtual #119                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      89: aload         5
      91: invokevirtual #124                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      94: aload_2
      95: invokevirtual #116                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      98: aload_1
      99: invokevirtual #112                // Method org/bouncycastle/crypto/ec/ECPair.getY:()Lorg/bouncycastle/math/ec/ECPoint;
     102: invokestatic  #122                // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     105: invokevirtual #125                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     108: aastore
     109: astore        6
     111: aload_2
     112: invokevirtual #116                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
     115: aload         6
     117: invokevirtual #123                // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
     120: aload_0
     121: aload         5
     123: putfield      #103                // Field lastK:Ljava/math/BigInteger;
     126: new           #49                 // class org/bouncycastle/crypto/ec/ECPair
     129: dup
     130: aload         6
     132: iconst_0
     133: aaload
     134: aload         6
     136: iconst_1
     137: aaload
     138: invokespecial #113                // Method org/bouncycastle/crypto/ec/ECPair."<init>":(Lorg/bouncycastle/math/ec/ECPoint;Lorg/bouncycastle/math/ec/ECPoint;)V
     141: areturn

  public java.math.BigInteger getTransformValue();
    Code:
       0: aload_0
       1: getfield      #103                // Field lastK:Ljava/math/BigInteger;
       4: areturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #59                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #126                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn
}
