class org.bouncycastle.crypto.generators.DHParametersHelper {
  private static final java.math.BigInteger ONE;

  private static final java.math.BigInteger TWO;

  org.bouncycastle.crypto.generators.DHParametersHelper();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: return

  static java.math.BigInteger[] generateSafePrimes(int, int, java.security.SecureRandom);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: istore        5
       5: iload_0
       6: iconst_2
       7: iushr
       8: istore        6
      10: iload         5
      12: iconst_2
      13: aload_2
      14: invokestatic  #65                 // Method org/bouncycastle/util/BigIntegers.createRandomPrime:(IILjava/security/SecureRandom;)Ljava/math/BigInteger;
      17: astore        4
      19: aload         4
      21: iconst_1
      22: invokevirtual #59                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      25: getstatic     #54                 // Field ONE:Ljava/math/BigInteger;
      28: invokevirtual #61                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      31: astore_3
      32: aload_3
      33: iload_1
      34: invokevirtual #57                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      37: ifne          43
      40: goto          10
      43: iload_1
      44: iconst_2
      45: if_icmple     62
      48: aload         4
      50: iload_1
      51: iconst_2
      52: isub
      53: invokevirtual #57                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      56: ifne          62
      59: goto          10
      62: aload_3
      63: invokestatic  #64                 // Method org/bouncycastle/math/ec/WNafUtil.getNafWeight:(Ljava/math/BigInteger;)I
      66: iload         6
      68: if_icmpge     74
      71: goto          10
      74: iconst_2
      75: anewarray     #27                 // class java/math/BigInteger
      78: dup
      79: iconst_0
      80: aload_3
      81: aastore
      82: dup
      83: iconst_1
      84: aload         4
      86: aastore
      87: areturn

  static java.math.BigInteger selectGenerator(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: getstatic     #55                 // Field TWO:Ljava/math/BigInteger;
       4: invokevirtual #62                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       7: astore_3
       8: getstatic     #55                 // Field TWO:Ljava/math/BigInteger;
      11: aload_3
      12: aload_2
      13: invokestatic  #66                 // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      16: astore        5
      18: aload         5
      20: getstatic     #55                 // Field TWO:Ljava/math/BigInteger;
      23: aload_0
      24: invokevirtual #63                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      27: astore        4
      29: aload         4
      31: getstatic     #54                 // Field ONE:Ljava/math/BigInteger;
      34: invokevirtual #58                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      37: ifne          8
      40: aload         4
      42: areturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #60                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #54                 // Field ONE:Ljava/math/BigInteger;
       7: ldc2_w        #24                 // long 2l
      10: invokestatic  #60                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      13: putstatic     #55                 // Field TWO:Ljava/math/BigInteger;
      16: return
}
