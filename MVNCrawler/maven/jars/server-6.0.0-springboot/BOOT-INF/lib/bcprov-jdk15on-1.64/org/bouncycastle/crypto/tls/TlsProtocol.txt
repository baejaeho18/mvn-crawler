public abstract class org.bouncycastle.crypto.tls.TlsProtocol implements org.bouncycastle.crypto.tls.TlsCloseable {
  protected static final java.lang.Integer EXT_RenegotiationInfo;

  protected static final java.lang.Integer EXT_SessionTicket;

  protected static final short CS_START;

  protected static final short CS_CLIENT_HELLO;

  protected static final short CS_SERVER_HELLO;

  protected static final short CS_SERVER_SUPPLEMENTAL_DATA;

  protected static final short CS_SERVER_CERTIFICATE;

  protected static final short CS_CERTIFICATE_STATUS;

  protected static final short CS_SERVER_KEY_EXCHANGE;

  protected static final short CS_CERTIFICATE_REQUEST;

  protected static final short CS_SERVER_HELLO_DONE;

  protected static final short CS_CLIENT_SUPPLEMENTAL_DATA;

  protected static final short CS_CLIENT_CERTIFICATE;

  protected static final short CS_CLIENT_KEY_EXCHANGE;

  protected static final short CS_CERTIFICATE_VERIFY;

  protected static final short CS_CLIENT_FINISHED;

  protected static final short CS_SERVER_SESSION_TICKET;

  protected static final short CS_SERVER_FINISHED;

  protected static final short CS_END;

  protected static final short ADS_MODE_1_Nsub1;

  protected static final short ADS_MODE_0_N;

  protected static final short ADS_MODE_0_N_FIRSTONLY;

  private org.bouncycastle.crypto.tls.ByteQueue applicationDataQueue;

  private org.bouncycastle.crypto.tls.ByteQueue alertQueue;

  private org.bouncycastle.crypto.tls.ByteQueue handshakeQueue;

  org.bouncycastle.crypto.tls.RecordStream recordStream;

  protected java.security.SecureRandom secureRandom;

  private org.bouncycastle.crypto.tls.TlsInputStream tlsInputStream;

  private org.bouncycastle.crypto.tls.TlsOutputStream tlsOutputStream;

  private volatile boolean closed;

  private volatile boolean failedWithError;

  private volatile boolean appDataReady;

  private volatile boolean appDataSplitEnabled;

  private volatile int appDataSplitMode;

  private byte[] expected_verify_data;

  protected org.bouncycastle.crypto.tls.TlsSession tlsSession;

  protected org.bouncycastle.crypto.tls.SessionParameters sessionParameters;

  protected org.bouncycastle.crypto.tls.SecurityParameters securityParameters;

  protected org.bouncycastle.crypto.tls.Certificate peerCertificate;

  protected int[] offeredCipherSuites;

  protected short[] offeredCompressionMethods;

  protected java.util.Hashtable clientExtensions;

  protected java.util.Hashtable serverExtensions;

  protected short connection_state;

  protected boolean resumedSession;

  protected boolean receivedChangeCipherSpec;

  protected boolean secure_renegotiation;

  protected boolean allowCertificateStatus;

  protected boolean expectSessionTicket;

  protected boolean blocking;

  protected org.bouncycastle.crypto.tls.ByteQueueInputStream inputBuffers;

  protected org.bouncycastle.crypto.tls.ByteQueueOutputStream outputBuffer;

  public org.bouncycastle.crypto.tls.TlsProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #724                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
       8: dup
       9: iconst_0
      10: invokespecial #741                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      13: putfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      16: aload_0
      17: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
      20: dup
      21: iconst_2
      22: invokespecial #741                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      25: putfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      28: aload_0
      29: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
      32: dup
      33: iconst_0
      34: invokespecial #741                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      37: putfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      40: aload_0
      41: aconst_null
      42: putfield      #706                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      45: aload_0
      46: aconst_null
      47: putfield      #707                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      50: aload_0
      51: iconst_0
      52: putfield      #683                // Field closed:Z
      55: aload_0
      56: iconst_0
      57: putfield      #685                // Field failedWithError:Z
      60: aload_0
      61: iconst_0
      62: putfield      #680                // Field appDataReady:Z
      65: aload_0
      66: iconst_1
      67: putfield      #681                // Field appDataSplitEnabled:Z
      70: aload_0
      71: iconst_0
      72: putfield      #677                // Field appDataSplitMode:I
      75: aload_0
      76: aconst_null
      77: putfield      #689                // Field expected_verify_data:[B
      80: aload_0
      81: aconst_null
      82: putfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      85: aload_0
      86: aconst_null
      87: putfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      90: aload_0
      91: aconst_null
      92: putfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      95: aload_0
      96: aconst_null
      97: putfield      #702                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
     100: aload_0
     101: aconst_null
     102: putfield      #690                // Field offeredCipherSuites:[I
     105: aload_0
     106: aconst_null
     107: putfield      #691                // Field offeredCompressionMethods:[S
     110: aload_0
     111: aconst_null
     112: putfield      #695                // Field clientExtensions:Ljava/util/Hashtable;
     115: aload_0
     116: aconst_null
     117: putfield      #696                // Field serverExtensions:Ljava/util/Hashtable;
     120: aload_0
     121: iconst_0
     122: putfield      #678                // Field connection_state:S
     125: aload_0
     126: iconst_0
     127: putfield      #687                // Field resumedSession:Z
     130: aload_0
     131: iconst_0
     132: putfield      #686                // Field receivedChangeCipherSpec:Z
     135: aload_0
     136: iconst_0
     137: putfield      #688                // Field secure_renegotiation:Z
     140: aload_0
     141: iconst_0
     142: putfield      #679                // Field allowCertificateStatus:Z
     145: aload_0
     146: iconst_0
     147: putfield      #684                // Field expectSessionTicket:Z
     150: aload_0
     151: iconst_1
     152: putfield      #682                // Field blocking:Z
     155: aload_0
     156: new           #387                // class org/bouncycastle/crypto/tls/RecordStream
     159: dup
     160: aload_0
     161: aload_1
     162: aload_2
     163: invokespecial #773                // Method org/bouncycastle/crypto/tls/RecordStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;Ljava/io/InputStream;Ljava/io/OutputStream;)V
     166: putfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     169: aload_0
     170: aload_3
     171: putfield      #694                // Field secureRandom:Ljava/security/SecureRandom;
     174: return

  public org.bouncycastle.crypto.tls.TlsProtocol(java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #724                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
       8: dup
       9: iconst_0
      10: invokespecial #741                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      13: putfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      16: aload_0
      17: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
      20: dup
      21: iconst_2
      22: invokespecial #741                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      25: putfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      28: aload_0
      29: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
      32: dup
      33: iconst_0
      34: invokespecial #741                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      37: putfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      40: aload_0
      41: aconst_null
      42: putfield      #706                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      45: aload_0
      46: aconst_null
      47: putfield      #707                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      50: aload_0
      51: iconst_0
      52: putfield      #683                // Field closed:Z
      55: aload_0
      56: iconst_0
      57: putfield      #685                // Field failedWithError:Z
      60: aload_0
      61: iconst_0
      62: putfield      #680                // Field appDataReady:Z
      65: aload_0
      66: iconst_1
      67: putfield      #681                // Field appDataSplitEnabled:Z
      70: aload_0
      71: iconst_0
      72: putfield      #677                // Field appDataSplitMode:I
      75: aload_0
      76: aconst_null
      77: putfield      #689                // Field expected_verify_data:[B
      80: aload_0
      81: aconst_null
      82: putfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      85: aload_0
      86: aconst_null
      87: putfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      90: aload_0
      91: aconst_null
      92: putfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      95: aload_0
      96: aconst_null
      97: putfield      #702                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
     100: aload_0
     101: aconst_null
     102: putfield      #690                // Field offeredCipherSuites:[I
     105: aload_0
     106: aconst_null
     107: putfield      #691                // Field offeredCompressionMethods:[S
     110: aload_0
     111: aconst_null
     112: putfield      #695                // Field clientExtensions:Ljava/util/Hashtable;
     115: aload_0
     116: aconst_null
     117: putfield      #696                // Field serverExtensions:Ljava/util/Hashtable;
     120: aload_0
     121: iconst_0
     122: putfield      #678                // Field connection_state:S
     125: aload_0
     126: iconst_0
     127: putfield      #687                // Field resumedSession:Z
     130: aload_0
     131: iconst_0
     132: putfield      #686                // Field receivedChangeCipherSpec:Z
     135: aload_0
     136: iconst_0
     137: putfield      #688                // Field secure_renegotiation:Z
     140: aload_0
     141: iconst_0
     142: putfield      #679                // Field allowCertificateStatus:Z
     145: aload_0
     146: iconst_0
     147: putfield      #684                // Field expectSessionTicket:Z
     150: aload_0
     151: iconst_0
     152: putfield      #682                // Field blocking:Z
     155: aload_0
     156: new           #382                // class org/bouncycastle/crypto/tls/ByteQueueInputStream
     159: dup
     160: invokespecial #751                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream."<init>":()V
     163: putfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
     166: aload_0
     167: new           #383                // class org/bouncycastle/crypto/tls/ByteQueueOutputStream
     170: dup
     171: invokespecial #754                // Method org/bouncycastle/crypto/tls/ByteQueueOutputStream."<init>":()V
     174: putfield      #701                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
     177: aload_0
     178: new           #387                // class org/bouncycastle/crypto/tls/RecordStream
     181: dup
     182: aload_0
     183: aload_0
     184: getfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
     187: aload_0
     188: getfield      #701                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
     191: invokespecial #773                // Method org/bouncycastle/crypto/tls/RecordStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;Ljava/io/InputStream;Ljava/io/OutputStream;)V
     194: putfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     197: aload_0
     198: aload_1
     199: putfield      #694                // Field secureRandom:Ljava/security/SecureRandom;
     202: return

  protected abstract org.bouncycastle.crypto.tls.TlsContext getContext();

  abstract org.bouncycastle.crypto.tls.AbstractTlsContext getContextAdmin();

  protected abstract org.bouncycastle.crypto.tls.TlsPeer getPeer();

  protected void handleAlertMessage(short, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #829                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
       4: iload_1
       5: iload_2
       6: invokeinterface #873,  3          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertReceived:(SS)V
      11: iload_1
      12: iconst_1
      13: if_icmpne     24
      16: aload_0
      17: iload_2
      18: invokevirtual #812                // Method handleAlertWarningMessage:(S)V
      21: goto          37
      24: aload_0
      25: invokevirtual #807                // Method handleFailure:()V
      28: new           #396                // class org/bouncycastle/crypto/tls/TlsFatalAlertReceived
      31: dup
      32: iload_2
      33: invokespecial #799                // Method org/bouncycastle/crypto/tls/TlsFatalAlertReceived."<init>":(S)V
      36: athrow
      37: return

  protected void handleAlertWarningMessage(short) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifne          26
       4: aload_0
       5: getfield      #680                // Field appDataReady:Z
       8: ifne          21
      11: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      14: dup
      15: bipush        40
      17: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      20: athrow
      21: aload_0
      22: iconst_0
      23: invokevirtual #816                // Method handleClose:(Z)V
      26: return

  protected void handleChangeCipherSpecMessage() throws java.io.IOException;
    Code:
       0: return

  protected void handleClose(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #683                // Field closed:Z
       4: ifne          56
       7: aload_0
       8: iconst_1
       9: putfield      #683                // Field closed:Z
      12: iload_1
      13: ifeq          31
      16: aload_0
      17: getfield      #680                // Field appDataReady:Z
      20: ifne          31
      23: aload_0
      24: bipush        90
      26: ldc           #21                 // String User canceled handshake
      28: invokevirtual #825                // Method raiseAlertWarning:(SLjava/lang/String;)V
      31: aload_0
      32: iconst_0
      33: ldc           #15                 // String Connection closed
      35: invokevirtual #825                // Method raiseAlertWarning:(SLjava/lang/String;)V
      38: aload_0
      39: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      42: invokevirtual #765                // Method org/bouncycastle/crypto/tls/RecordStream.safeClose:()V
      45: aload_0
      46: getfield      #680                // Field appDataReady:Z
      49: ifne          56
      52: aload_0
      53: invokevirtual #805                // Method cleanupHandshake:()V
      56: return

  protected void handleException(short, java.lang.String, java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #683                // Field closed:Z
       4: ifne          18
       7: aload_0
       8: iload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #831                // Method raiseAlertFatal:(SLjava/lang/String;Ljava/lang/Throwable;)V
      14: aload_0
      15: invokevirtual #807                // Method handleFailure:()V
      18: return

  protected void handleFailure();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #683                // Field closed:Z
       5: aload_0
       6: iconst_1
       7: putfield      #685                // Field failedWithError:Z
      10: aload_0
      11: invokevirtual #808                // Method invalidateSession:()V
      14: aload_0
      15: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      18: invokevirtual #765                // Method org/bouncycastle/crypto/tls/RecordStream.safeClose:()V
      21: aload_0
      22: getfield      #680                // Field appDataReady:Z
      25: ifne          32
      28: aload_0
      29: invokevirtual #805                // Method cleanupHandshake:()V
      32: return

  protected abstract void handleHandshakeMessage(short, java.io.ByteArrayInputStream) throws java.io.IOException;

  protected void applyMaxFragmentLengthExtension() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
       4: getfield      #675                // Field org/bouncycastle/crypto/tls/SecurityParameters.maxFragmentLength:S
       7: iflt          54
      10: aload_0
      11: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      14: getfield      #675                // Field org/bouncycastle/crypto/tls/SecurityParameters.maxFragmentLength:S
      17: invokestatic  #758                // Method org/bouncycastle/crypto/tls/MaxFragmentLength.isValid:(S)Z
      20: ifne          33
      23: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      26: dup
      27: bipush        80
      29: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      32: athrow
      33: iconst_1
      34: bipush        8
      36: aload_0
      37: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      40: getfield      #675                // Field org/bouncycastle/crypto/tls/SecurityParameters.maxFragmentLength:S
      43: iadd
      44: ishl
      45: istore_1
      46: aload_0
      47: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      50: iload_1
      51: invokevirtual #768                // Method org/bouncycastle/crypto/tls/RecordStream.setPlaintextLimit:(I)V
      54: return

  protected void checkReceivedChangeCipherSpec(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #686                // Field receivedChangeCipherSpec:Z
       5: if_icmpeq     18
       8: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      11: dup
      12: bipush        10
      14: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      17: athrow
      18: return

  protected void cleanupHandshake();
    Code:
       0: aload_0
       1: getfield      #689                // Field expected_verify_data:[B
       4: ifnull        20
       7: aload_0
       8: getfield      #689                // Field expected_verify_data:[B
      11: iconst_0
      12: invokestatic  #858                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      15: aload_0
      16: aconst_null
      17: putfield      #689                // Field expected_verify_data:[B
      20: aload_0
      21: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      24: invokevirtual #776                // Method org/bouncycastle/crypto/tls/SecurityParameters.clear:()V
      27: aload_0
      28: aconst_null
      29: putfield      #702                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      32: aload_0
      33: aconst_null
      34: putfield      #690                // Field offeredCipherSuites:[I
      37: aload_0
      38: aconst_null
      39: putfield      #691                // Field offeredCompressionMethods:[S
      42: aload_0
      43: aconst_null
      44: putfield      #695                // Field clientExtensions:Ljava/util/Hashtable;
      47: aload_0
      48: aconst_null
      49: putfield      #696                // Field serverExtensions:Ljava/util/Hashtable;
      52: aload_0
      53: iconst_0
      54: putfield      #687                // Field resumedSession:Z
      57: aload_0
      58: iconst_0
      59: putfield      #686                // Field receivedChangeCipherSpec:Z
      62: aload_0
      63: iconst_0
      64: putfield      #688                // Field secure_renegotiation:Z
      67: aload_0
      68: iconst_0
      69: putfield      #679                // Field allowCertificateStatus:Z
      72: aload_0
      73: iconst_0
      74: putfield      #684                // Field expectSessionTicket:Z
      77: return

  protected void blockForHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          40
       7: aload_0
       8: getfield      #678                // Field connection_state:S
      11: bipush        16
      13: if_icmpeq     40
      16: aload_0
      17: getfield      #683                // Field closed:Z
      20: ifeq          33
      23: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      26: dup
      27: bipush        80
      29: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      32: athrow
      33: aload_0
      34: invokevirtual #811                // Method safeReadRecord:()V
      37: goto          7
      40: return

  protected void completeHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        16
       3: putfield      #678                // Field connection_state:S
       6: aload_0
       7: getfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      10: invokevirtual #740                // Method org/bouncycastle/crypto/tls/ByteQueue.shrink:()V
      13: aload_0
      14: getfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      17: invokevirtual #740                // Method org/bouncycastle/crypto/tls/ByteQueue.shrink:()V
      20: aload_0
      21: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      24: invokevirtual #762                // Method org/bouncycastle/crypto/tls/RecordStream.finaliseHandshake:()V
      27: aload_0
      28: aload_0
      29: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      32: invokestatic  #854                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv11:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: putfield      #681                // Field appDataSplitEnabled:Z
      46: aload_0
      47: getfield      #680                // Field appDataReady:Z
      50: ifne          89
      53: aload_0
      54: iconst_1
      55: putfield      #680                // Field appDataReady:Z
      58: aload_0
      59: getfield      #682                // Field blocking:Z
      62: ifeq          89
      65: aload_0
      66: new           #398                // class org/bouncycastle/crypto/tls/TlsInputStream
      69: dup
      70: aload_0
      71: invokespecial #800                // Method org/bouncycastle/crypto/tls/TlsInputStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;)V
      74: putfield      #706                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      77: aload_0
      78: new           #401                // class org/bouncycastle/crypto/tls/TlsOutputStream
      81: dup
      82: aload_0
      83: invokespecial #802                // Method org/bouncycastle/crypto/tls/TlsOutputStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;)V
      86: putfield      #707                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      89: aload_0
      90: getfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      93: ifnull        226
      96: aload_0
      97: getfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     100: ifnonnull     215
     103: aload_0
     104: new           #390                // class org/bouncycastle/crypto/tls/SessionParameters$Builder
     107: dup
     108: invokespecial #782                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder."<init>":()V
     111: aload_0
     112: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     115: invokevirtual #774                // Method org/bouncycastle/crypto/tls/SecurityParameters.getCipherSuite:()I
     118: invokevirtual #784                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setCipherSuite:(I)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     121: aload_0
     122: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     125: invokevirtual #775                // Method org/bouncycastle/crypto/tls/SecurityParameters.getCompressionAlgorithm:()S
     128: invokevirtual #785                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setCompressionAlgorithm:(S)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     131: aload_0
     132: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     135: invokevirtual #777                // Method org/bouncycastle/crypto/tls/SecurityParameters.isExtendedMasterSecret:()Z
     138: invokevirtual #786                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setExtendedMasterSecret:(Z)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     141: aload_0
     142: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     145: invokevirtual #778                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
     148: invokevirtual #787                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setMasterSecret:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     151: aload_0
     152: getfield      #702                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
     155: invokevirtual #791                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setPeerCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     158: aload_0
     159: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     162: invokevirtual #779                // Method org/bouncycastle/crypto/tls/SecurityParameters.getPSKIdentity:()[B
     165: invokevirtual #788                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setPSKIdentity:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     168: aload_0
     169: getfield      #704                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     172: invokevirtual #780                // Method org/bouncycastle/crypto/tls/SecurityParameters.getSRPIdentity:()[B
     175: invokevirtual #789                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setSRPIdentity:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     178: aload_0
     179: getfield      #696                // Field serverExtensions:Ljava/util/Hashtable;
     182: invokevirtual #790                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setServerExtensions:(Ljava/util/Hashtable;)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     185: invokevirtual #783                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.build:()Lorg/bouncycastle/crypto/tls/SessionParameters;
     188: putfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     191: aload_0
     192: new           #406                // class org/bouncycastle/crypto/tls/TlsSessionImpl
     195: dup
     196: aload_0
     197: getfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     200: invokeinterface #876,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSession.getSessionID:()[B
     205: aload_0
     206: getfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     209: invokespecial #839                // Method org/bouncycastle/crypto/tls/TlsSessionImpl."<init>":([BLorg/bouncycastle/crypto/tls/SessionParameters;)V
     212: putfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     215: aload_0
     216: invokevirtual #826                // Method getContextAdmin:()Lorg/bouncycastle/crypto/tls/AbstractTlsContext;
     219: aload_0
     220: getfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     223: invokevirtual #738                // Method org/bouncycastle/crypto/tls/AbstractTlsContext.setResumableSession:(Lorg/bouncycastle/crypto/tls/TlsSession;)V
     226: aload_0
     227: invokevirtual #829                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
     230: invokeinterface #872,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyHandshakeComplete:()V
     235: aload_0
     236: invokevirtual #805                // Method cleanupHandshake:()V
     239: goto          249
     242: astore_1
     243: aload_0
     244: invokevirtual #805                // Method cleanupHandshake:()V
     247: aload_1
     248: athrow
     249: return
    Exception table:
       from    to  target type
           0   235   242   any

  protected void processRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: tableswitch   { // 20 to 23
                    20: 85
                    21: 32
                    22: 96
                    23: 50
               default: 179
          }
      32: aload_0
      33: getfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      36: aload_2
      37: iload_3
      38: iload         4
      40: invokevirtual #745                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
      43: aload_0
      44: invokespecial #809                // Method processAlertQueue:()V
      47: goto          189
      50: aload_0
      51: getfield      #680                // Field appDataReady:Z
      54: ifne          67
      57: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      60: dup
      61: bipush        10
      63: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      66: athrow
      67: aload_0
      68: getfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      71: aload_2
      72: iload_3
      73: iload         4
      75: invokevirtual #745                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
      78: aload_0
      79: invokespecial #810                // Method processApplicationDataQueue:()V
      82: goto          189
      85: aload_0
      86: aload_2
      87: iload_3
      88: iload         4
      90: invokespecial #821                // Method processChangeCipherSpec:([BII)V
      93: goto          189
      96: aload_0
      97: getfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
     100: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
     103: ifle          128
     106: aload_0
     107: getfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
     110: aload_2
     111: iload_3
     112: iload         4
     114: invokevirtual #745                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
     117: aload_0
     118: aload_0
     119: getfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
     122: invokespecial #827                // Method processHandshakeQueue:(Lorg/bouncycastle/crypto/tls/ByteQueue;)V
     125: goto          189
     128: new           #381                // class org/bouncycastle/crypto/tls/ByteQueue
     131: dup
     132: aload_2
     133: iload_3
     134: iload         4
     136: invokespecial #744                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":([BII)V
     139: astore        5
     141: aload_0
     142: aload         5
     144: invokespecial #827                // Method processHandshakeQueue:(Lorg/bouncycastle/crypto/tls/ByteQueue;)V
     147: aload         5
     149: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
     152: istore        6
     154: iload         6
     156: ifle          176
     159: aload_0
     160: getfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
     163: aload_2
     164: iload_3
     165: iload         4
     167: iadd
     168: iload         6
     170: isub
     171: iload         6
     173: invokevirtual #745                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
     176: goto          189
     179: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     182: dup
     183: bipush        80
     185: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     188: athrow
     189: return

  private void processHandshakeQueue(org.bouncycastle.crypto.tls.ByteQueue) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       4: iconst_4
       5: if_icmplt     173
       8: iconst_4
       9: newarray       byte
      11: astore_2
      12: aload_1
      13: aload_2
      14: iconst_0
      15: iconst_4
      16: iconst_0
      17: invokevirtual #746                // Method org/bouncycastle/crypto/tls/ByteQueue.read:([BIII)V
      20: aload_2
      21: iconst_0
      22: invokestatic  #844                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      25: istore_3
      26: aload_2
      27: iconst_1
      28: invokestatic  #843                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
      31: istore        4
      33: iconst_4
      34: iload         4
      36: iadd
      37: istore        5
      39: aload_1
      40: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      43: iload         5
      45: if_icmpge     51
      48: goto          173
      51: iconst_0
      52: iload_3
      53: if_icmpeq     150
      56: bipush        20
      58: iload_3
      59: if_icmpne     119
      62: aload_0
      63: iconst_1
      64: invokevirtual #815                // Method checkReceivedChangeCipherSpec:(Z)V
      67: aload_0
      68: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      71: astore        6
      73: aload_0
      74: getfield      #689                // Field expected_verify_data:[B
      77: ifnonnull     116
      80: aload         6
      82: invokeinterface #869,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      87: invokevirtual #778                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
      90: ifnull        116
      93: aload_0
      94: aload_0
      95: aload         6
      97: invokeinterface #867,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
     102: ifne          109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: invokevirtual #817                // Method createVerifyData:(Z)[B
     113: putfield      #689                // Field expected_verify_data:[B
     116: goto          137
     119: aload_0
     120: aload_0
     121: getfield      #678                // Field connection_state:S
     124: bipush        16
     126: if_icmpne     133
     129: iconst_1
     130: goto          134
     133: iconst_0
     134: invokevirtual #815                // Method checkReceivedChangeCipherSpec:(Z)V
     137: aload_1
     138: aload_0
     139: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     142: invokevirtual #771                // Method org/bouncycastle/crypto/tls/RecordStream.getHandshakeHashUpdater:()Ljava/io/OutputStream;
     145: iload         5
     147: invokevirtual #749                // Method org/bouncycastle/crypto/tls/ByteQueue.copyTo:(Ljava/io/OutputStream;I)V
     150: aload_1
     151: iconst_4
     152: invokevirtual #742                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:(I)V
     155: aload_1
     156: iload         4
     158: invokevirtual #748                // Method org/bouncycastle/crypto/tls/ByteQueue.readFrom:(I)Ljava/io/ByteArrayInputStream;
     161: astore        6
     163: aload_0
     164: iload_3
     165: aload         6
     167: invokevirtual #824                // Method handleHandshakeMessage:(SLjava/io/ByteArrayInputStream;)V
     170: goto          0
     173: return

  private void processApplicationDataQueue();
    Code:
       0: return

  private void processAlertQueue() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       4: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       7: iconst_2
       8: if_icmplt     40
      11: aload_0
      12: getfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      15: iconst_2
      16: iconst_0
      17: invokevirtual #743                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:(II)[B
      20: astore_1
      21: aload_1
      22: iconst_0
      23: baload
      24: i2s
      25: istore_2
      26: aload_1
      27: iconst_1
      28: baload
      29: i2s
      30: istore_3
      31: aload_0
      32: iload_2
      33: iload_3
      34: invokevirtual #813                // Method handleAlertMessage:(SS)V
      37: goto          0
      40: return

  private void processChangeCipherSpec(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     94
       9: aload_1
      10: iload_2
      11: iload         4
      13: iadd
      14: invokestatic  #844                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      17: istore        5
      19: iload         5
      21: iconst_1
      22: if_icmpeq     35
      25: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      28: dup
      29: bipush        50
      31: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      34: athrow
      35: aload_0
      36: getfield      #686                // Field receivedChangeCipherSpec:Z
      39: ifne          62
      42: aload_0
      43: getfield      #697                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      46: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      49: ifgt          62
      52: aload_0
      53: getfield      #699                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      56: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      59: ifle          72
      62: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      65: dup
      66: bipush        10
      68: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      71: athrow
      72: aload_0
      73: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      76: invokevirtual #764                // Method org/bouncycastle/crypto/tls/RecordStream.receivedReadCipherSpec:()V
      79: aload_0
      80: iconst_1
      81: putfield      #686                // Field receivedChangeCipherSpec:Z
      84: aload_0
      85: invokevirtual #806                // Method handleChangeCipherSpecMessage:()V
      88: iinc          4, 1
      91: goto          3
      94: return

  protected int applicationDataAvailable();
    Code:
       0: aload_0
       1: getfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       4: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       7: ireturn

  protected int readApplicationData(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      11: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      14: ifne          67
      17: aload_0
      18: getfield      #683                // Field closed:Z
      21: ifeq          60
      24: aload_0
      25: getfield      #685                // Field failedWithError:Z
      28: ifeq          41
      31: new           #365                // class java/io/IOException
      34: dup
      35: ldc           #3                  // String Cannot read application data on failed TLS connection
      37: invokespecial #718                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #680                // Field appDataReady:Z
      45: ifne          58
      48: new           #369                // class java/lang/IllegalStateException
      51: dup
      52: ldc           #4                  // String Cannot read application data until initial handshake completed.
      54: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: iconst_m1
      59: ireturn
      60: aload_0
      61: invokevirtual #811                // Method safeReadRecord:()V
      64: goto          7
      67: iload_3
      68: aload_0
      69: getfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      72: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      75: invokestatic  #723                // Method java/lang/Math.min:(II)I
      78: istore_3
      79: aload_0
      80: getfield      #698                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      83: aload_1
      84: iload_2
      85: iload_3
      86: iconst_0
      87: invokevirtual #747                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:([BIII)V
      90: iload_3
      91: ireturn

  protected void safeCheckRecordHeader(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: aload_1
       5: invokevirtual #770                // Method org/bouncycastle/crypto/tls/RecordStream.checkRecordHeader:([B)V
       8: goto          58
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #796                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      17: ldc           #17                 // String Failed to read record
      19: aload_2
      20: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      23: aload_2
      24: athrow
      25: astore_2
      26: aload_0
      27: bipush        80
      29: ldc           #17                 // String Failed to read record
      31: aload_2
      32: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      35: aload_2
      36: athrow
      37: astore_2
      38: aload_0
      39: bipush        80
      41: ldc           #17                 // String Failed to read record
      43: aload_2
      44: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      47: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      50: dup
      51: bipush        80
      53: aload_2
      54: invokespecial #798                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(SLjava/lang/Throwable;)V
      57: athrow
      58: return
    Exception table:
       from    to  target type
           0     8    11   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0     8    25   Class java/io/IOException
           0     8    37   Class java/lang/RuntimeException

  protected void safeReadRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #767                // Method org/bouncycastle/crypto/tls/RecordStream.readRecord:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #680                // Field appDataReady:Z
      15: ifne          28
      18: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      21: dup
      22: bipush        40
      24: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      27: athrow
      28: goto          81
      31: astore_1
      32: aload_1
      33: athrow
      34: astore_1
      35: aload_0
      36: aload_1
      37: invokevirtual #796                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      40: ldc           #17                 // String Failed to read record
      42: aload_1
      43: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      46: aload_1
      47: athrow
      48: astore_1
      49: aload_0
      50: bipush        80
      52: ldc           #17                 // String Failed to read record
      54: aload_1
      55: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      58: aload_1
      59: athrow
      60: astore_1
      61: aload_0
      62: bipush        80
      64: ldc           #17                 // String Failed to read record
      66: aload_1
      67: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      70: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      73: dup
      74: bipush        80
      76: aload_1
      77: invokespecial #798                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(SLjava/lang/Throwable;)V
      80: athrow
      81: aload_0
      82: invokevirtual #807                // Method handleFailure:()V
      85: new           #400                // class org/bouncycastle/crypto/tls/TlsNoCloseNotifyException
      88: dup
      89: invokespecial #801                // Method org/bouncycastle/crypto/tls/TlsNoCloseNotifyException."<init>":()V
      92: athrow
    Exception table:
       from    to  target type
           0    10    31   Class org/bouncycastle/crypto/tls/TlsFatalAlertReceived
          11    28    31   Class org/bouncycastle/crypto/tls/TlsFatalAlertReceived
           0    10    34   Class org/bouncycastle/crypto/tls/TlsFatalAlert
          11    28    34   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0    10    48   Class java/io/IOException
          11    28    48   Class java/io/IOException
           0    10    60   Class java/lang/RuntimeException
          11    28    60   Class java/lang/RuntimeException

  protected void safeWriteRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: iload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #769                // Method org/bouncycastle/crypto/tls/RecordStream.writeRecord:(S[BII)V
      12: goto          72
      15: astore        5
      17: aload_0
      18: aload         5
      20: invokevirtual #796                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      23: ldc           #18                 // String Failed to write record
      25: aload         5
      27: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      30: aload         5
      32: athrow
      33: astore        5
      35: aload_0
      36: bipush        80
      38: ldc           #18                 // String Failed to write record
      40: aload         5
      42: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      45: aload         5
      47: athrow
      48: astore        5
      50: aload_0
      51: bipush        80
      53: ldc           #18                 // String Failed to write record
      55: aload         5
      57: invokevirtual #830                // Method handleException:(SLjava/lang/String;Ljava/lang/Throwable;)V
      60: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      63: dup
      64: bipush        80
      66: aload         5
      68: invokespecial #798                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(SLjava/lang/Throwable;)V
      71: athrow
      72: return
    Exception table:
       from    to  target type
           0    12    15   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0    12    33   Class java/io/IOException
           0    12    48   Class java/lang/RuntimeException

  protected void writeData(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #683                // Field closed:Z
       4: ifeq          17
       7: new           #365                // class java/io/IOException
      10: dup
      11: ldc           #14                 // String Cannot write application data on closed/failed TLS connection
      13: invokespecial #718                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_3
      18: ifle          134
      21: aload_0
      22: getfield      #681                // Field appDataSplitEnabled:Z
      25: ifeq          94
      28: aload_0
      29: getfield      #677                // Field appDataSplitMode:I
      32: tableswitch   { // 0 to 2
                     0: 79
                     1: 65
                     2: 60
               default: 79
          }
      60: aload_0
      61: iconst_0
      62: putfield      #681                // Field appDataSplitEnabled:Z
      65: aload_0
      66: bipush        23
      68: getstatic     #709                // Field org/bouncycastle/crypto/tls/TlsUtils.EMPTY_BYTES:[B
      71: iconst_0
      72: iconst_0
      73: invokevirtual #814                // Method safeWriteRecord:(S[BII)V
      76: goto          94
      79: aload_0
      80: bipush        23
      82: aload_1
      83: iload_2
      84: iconst_1
      85: invokevirtual #814                // Method safeWriteRecord:(S[BII)V
      88: iinc          2, 1
      91: iinc          3, -1
      94: iload_3
      95: ifle          17
      98: iload_3
      99: aload_0
     100: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     103: invokevirtual #761                // Method org/bouncycastle/crypto/tls/RecordStream.getPlaintextLimit:()I
     106: invokestatic  #723                // Method java/lang/Math.min:(II)I
     109: istore        4
     111: aload_0
     112: bipush        23
     114: aload_1
     115: iload_2
     116: iload         4
     118: invokevirtual #814                // Method safeWriteRecord:(S[BII)V
     121: iload_2
     122: iload         4
     124: iadd
     125: istore_2
     126: iload_3
     127: iload         4
     129: isub
     130: istore_3
     131: goto          17
     134: return

  protected void setAppDataSplitMode(int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_1
       5: iconst_2
       6: if_icmple     36
       9: new           #368                // class java/lang/IllegalArgumentException
      12: dup
      13: new           #374                // class java/lang/StringBuilder
      16: dup
      17: invokespecial #726                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #19                 // String Illegal appDataSplitMode mode:
      22: invokevirtual #729                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #728                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #727                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #720                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #677                // Field appDataSplitMode:I
      41: return

  protected void writeHandshakeMessage(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_4
       2: if_icmpge     15
       5: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
       8: dup
       9: bipush        80
      11: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      14: athrow
      15: aload_1
      16: iload_2
      17: invokestatic  #844                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      20: istore        4
      22: iload         4
      24: ifeq          40
      27: aload_0
      28: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      31: invokevirtual #771                // Method org/bouncycastle/crypto/tls/RecordStream.getHandshakeHashUpdater:()Ljava/io/OutputStream;
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokevirtual #719                // Method java/io/OutputStream.write:([BII)V
      40: iconst_0
      41: istore        5
      43: iload_3
      44: iload         5
      46: isub
      47: aload_0
      48: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      51: invokevirtual #761                // Method org/bouncycastle/crypto/tls/RecordStream.getPlaintextLimit:()I
      54: invokestatic  #723                // Method java/lang/Math.min:(II)I
      57: istore        6
      59: aload_0
      60: bipush        22
      62: aload_1
      63: iload_2
      64: iload         5
      66: iadd
      67: iload         6
      69: invokevirtual #814                // Method safeWriteRecord:(S[BII)V
      72: iload         5
      74: iload         6
      76: iadd
      77: istore        5
      79: iload         5
      81: iload_3
      82: if_icmplt     43
      85: return

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifne          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #6                  // String Cannot use OutputStream in non-blocking mode! Use offerOutput() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #707                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      21: areturn

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifne          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String Cannot use InputStream in non-blocking mode! Use offerInput() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #706                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      21: areturn

  public void closeInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #7                  // String Cannot use closeInput() in blocking mode!
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #683                // Field closed:Z
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      29: invokevirtual #750                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.available:()I
      32: ifle          43
      35: new           #364                // class java/io/EOFException
      38: dup
      39: invokespecial #716                // Method java/io/EOFException."<init>":()V
      42: athrow
      43: aload_0
      44: getfield      #680                // Field appDataReady:Z
      47: ifne          60
      50: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      53: dup
      54: bipush        40
      56: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      59: athrow
      60: new           #400                // class org/bouncycastle/crypto/tls/TlsNoCloseNotifyException
      63: dup
      64: invokespecial #801                // Method org/bouncycastle/crypto/tls/TlsNoCloseNotifyException."<init>":()V
      67: athrow

  public void offerInput(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #820                // Method offerInput:([BII)V
       8: return

  public void offerInput(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Cannot use offerInput() in blocking mode! Use getInputStream() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #683                // Field closed:Z
      21: ifeq          34
      24: new           #365                // class java/io/IOException
      27: dup
      28: ldc           #16                 // String Connection is closed, cannot accept any more input
      30: invokespecial #718                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      38: aload_1
      39: iload_2
      40: iload_3
      41: invokevirtual #753                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.addBytes:([BII)V
      44: aload_0
      45: getfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      48: invokevirtual #750                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.available:()I
      51: iconst_5
      52: if_icmplt     134
      55: iconst_5
      56: newarray       byte
      58: astore        4
      60: aload_0
      61: getfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      64: aload         4
      66: invokevirtual #752                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.peek:([B)I
      69: pop
      70: aload         4
      72: iconst_3
      73: invokestatic  #842                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
      76: iconst_5
      77: iadd
      78: istore        5
      80: aload_0
      81: getfield      #700                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      84: invokevirtual #750                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.available:()I
      87: iload         5
      89: if_icmpge     101
      92: aload_0
      93: aload         4
      95: invokevirtual #818                // Method safeCheckRecordHeader:([B)V
      98: goto          134
     101: aload_0
     102: invokevirtual #811                // Method safeReadRecord:()V
     105: aload_0
     106: getfield      #683                // Field closed:Z
     109: ifeq          131
     112: aload_0
     113: getfield      #678                // Field connection_state:S
     116: bipush        16
     118: if_icmpeq     134
     121: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     124: dup
     125: bipush        80
     127: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     130: athrow
     131: goto          44
     134: return

  public int getAvailableInputBytes();
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #8                  // String Cannot use getAvailableInputBytes() in blocking mode! Use getInputStream().available() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #803                // Method applicationDataAvailable:()I
      21: ireturn

  public int readInput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #12                 // String Cannot use readInput() in blocking mode! Use getInputStream() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: iload_2
      20: iload_3
      21: aload_0
      22: invokevirtual #803                // Method applicationDataAvailable:()I
      25: invokestatic  #723                // Method java/lang/Math.min:(II)I
      28: invokevirtual #819                // Method readApplicationData:([BII)I
      31: ireturn
      32: astore        4
      34: new           #373                // class java/lang/RuntimeException
      37: dup
      38: aload         4
      40: invokevirtual #717                // Method java/io/IOException.toString:()Ljava/lang/String;
      43: invokespecial #725                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      46: athrow
    Exception table:
       from    to  target type
          17    31    32   Class java/io/IOException

  public void offerOutput(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #11                 // String Cannot use offerOutput() in blocking mode! Use getOutputStream() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #680                // Field appDataReady:Z
      21: ifne          34
      24: new           #365                // class java/io/IOException
      27: dup
      28: ldc           #2                  // String Application data cannot be sent until the handshake is complete!
      30: invokespecial #718                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload_3
      38: invokevirtual #822                // Method writeData:([BII)V
      41: return

  public int getAvailableOutputBytes();
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #9                  // String Cannot use getAvailableOutputBytes() in blocking mode! Use getOutputStream() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #701                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
      21: invokevirtual #755                // Method org/bouncycastle/crypto/tls/ByteQueueOutputStream.getBuffer:()Lorg/bouncycastle/crypto/tls/ByteQueue;
      24: invokevirtual #739                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      27: ireturn

  public int readOutput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #682                // Field blocking:Z
       4: ifeq          17
       7: new           #369                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #13                 // String Cannot use readOutput() in blocking mode! Use getOutputStream() instead.
      13: invokespecial #721                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #804                // Method getAvailableOutputBytes:()I
      21: iload_3
      22: invokestatic  #723                // Method java/lang/Math.min:(II)I
      25: istore        4
      27: aload_0
      28: getfield      #701                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
      31: invokevirtual #755                // Method org/bouncycastle/crypto/tls/ByteQueueOutputStream.getBuffer:()Lorg/bouncycastle/crypto/tls/ByteQueue;
      34: aload_1
      35: iload_2
      36: iload         4
      38: iconst_0
      39: invokevirtual #747                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:([BIII)V
      42: iload         4
      44: ireturn

  protected void invalidateSession();
    Code:
       0: aload_0
       1: getfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
       4: ifnull        19
       7: aload_0
       8: getfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      11: invokevirtual #781                // Method org/bouncycastle/crypto/tls/SessionParameters.clear:()V
      14: aload_0
      15: aconst_null
      16: putfield      #705                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      19: aload_0
      20: getfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      23: ifnull        40
      26: aload_0
      27: getfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      30: invokeinterface #875,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSession.invalidate:()V
      35: aload_0
      36: aconst_null
      37: putfield      #708                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      40: return

  protected void processFinishedMessage(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #689                // Field expected_verify_data:[B
       4: ifnonnull     17
       7: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: aload_0
      18: getfield      #689                // Field expected_verify_data:[B
      21: arraylength
      22: aload_1
      23: invokestatic  #846                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      26: astore_2
      27: aload_1
      28: invokestatic  #823                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      31: aload_0
      32: getfield      #689                // Field expected_verify_data:[B
      35: aload_2
      36: invokestatic  #859                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
      39: ifne          52
      42: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      45: dup
      46: bipush        51
      48: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      51: athrow
      52: return

  protected void raiseAlertFatal(short, java.lang.String, java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #829                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
       4: iconst_2
       5: iload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #874,  5          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertRaised:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      13: iconst_2
      14: newarray       byte
      16: dup
      17: iconst_0
      18: iconst_2
      19: bastore
      20: dup
      21: iconst_1
      22: iload_1
      23: i2b
      24: bastore
      25: astore        4
      27: aload_0
      28: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      31: bipush        21
      33: aload         4
      35: iconst_0
      36: iconst_2
      37: invokevirtual #769                // Method org/bouncycastle/crypto/tls/RecordStream.writeRecord:(S[BII)V
      40: goto          45
      43: astore        5
      45: return
    Exception table:
       from    to  target type
          27    40    43   Class java/lang/Exception

  protected void raiseAlertWarning(short, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #829                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
       4: iconst_1
       5: iload_1
       6: aload_2
       7: aconst_null
       8: invokeinterface #874,  5          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertRaised:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      13: iconst_2
      14: newarray       byte
      16: dup
      17: iconst_0
      18: iconst_1
      19: bastore
      20: dup
      21: iconst_1
      22: iload_1
      23: i2b
      24: bastore
      25: astore_3
      26: aload_0
      27: bipush        21
      29: aload_3
      30: iconst_0
      31: iconst_2
      32: invokevirtual #814                // Method safeWriteRecord:(S[BII)V
      35: return

  protected void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #674                // Field org/bouncycastle/crypto/tls/Certificate.EMPTY_CHAIN:Lorg/bouncycastle/crypto/tls/Certificate;
       7: astore_1
       8: aload_1
       9: invokevirtual #756                // Method org/bouncycastle/crypto/tls/Certificate.isEmpty:()Z
      12: ifeq          79
      15: aload_0
      16: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      19: astore_2
      20: aload_2
      21: invokeinterface #867,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
      26: ifne          79
      29: aload_0
      30: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      33: invokeinterface #868,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      38: astore_3
      39: aload_3
      40: invokevirtual #759                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
      43: ifeq          79
      46: new           #374                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #726                // Method java/lang/StringBuilder."<init>":()V
      53: aload_3
      54: invokevirtual #760                // Method org/bouncycastle/crypto/tls/ProtocolVersion.toString:()Ljava/lang/String;
      57: invokevirtual #729                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #1                  // String  client didn\'t provide credentials
      62: invokevirtual #729                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #727                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore        4
      70: aload_0
      71: bipush        41
      73: aload         4
      75: invokevirtual #825                // Method raiseAlertWarning:(SLjava/lang/String;)V
      78: return
      79: new           #404                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
      82: dup
      83: aload_0
      84: bipush        11
      86: invokespecial #837                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;S)V
      89: astore_2
      90: aload_1
      91: aload_2
      92: invokevirtual #757                // Method org/bouncycastle/crypto/tls/Certificate.encode:(Ljava/io/OutputStream;)V
      95: aload_2
      96: invokevirtual #835                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      99: return

  protected void sendChangeCipherSpecMessage() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_1
       6: bastore
       7: astore_1
       8: aload_0
       9: bipush        20
      11: aload_1
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokevirtual #814                // Method safeWriteRecord:(S[BII)V
      18: aload_0
      19: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      22: invokevirtual #766                // Method org/bouncycastle/crypto/tls/RecordStream.sentWriteCipherSpec:()V
      25: return

  protected void sendFinishedMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       5: invokeinterface #867,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
      10: invokevirtual #817                // Method createVerifyData:(Z)[B
      13: astore_1
      14: new           #404                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
      17: dup
      18: aload_0
      19: bipush        20
      21: aload_1
      22: arraylength
      23: invokespecial #838                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;SI)V
      26: astore_2
      27: aload_2
      28: aload_1
      29: invokevirtual #836                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.write:([B)V
      32: aload_2
      33: invokevirtual #835                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      36: return

  protected void sendSupplementalDataMessage(java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #404                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
       3: dup
       4: aload_0
       5: bipush        23
       7: invokespecial #837                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;S)V
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokestatic  #833                // Method writeSupplementalData:(Ljava/io/OutputStream;Ljava/util/Vector;)V
      16: aload_2
      17: invokevirtual #835                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      20: return

  protected byte[] createVerifyData(boolean);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       4: astore_2
       5: iload_1
       6: ifeq          14
       9: ldc           #23                 // String server finished
      11: goto          16
      14: ldc           #22                 // String client finished
      16: astore_3
      17: iload_1
      18: ifeq          27
      21: getstatic     #711                // Field org/bouncycastle/crypto/tls/TlsUtils.SSL_SERVER:[B
      24: goto          30
      27: getstatic     #710                // Field org/bouncycastle/crypto/tls/TlsUtils.SSL_CLIENT:[B
      30: astore        4
      32: aload_2
      33: aload_0
      34: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      37: invokevirtual #772                // Method org/bouncycastle/crypto/tls/RecordStream.getHandshakeHash:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      40: aload         4
      42: invokestatic  #834                // Method getCurrentPRFHash:(Lorg/bouncycastle/crypto/tls/TlsContext;Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;[B)[B
      45: astore        5
      47: aload_2
      48: aload_3
      49: aload         5
      51: invokestatic  #857                // Method org/bouncycastle/crypto/tls/TlsUtils.calculateVerifyData:(Lorg/bouncycastle/crypto/tls/TlsContext;Ljava/lang/String;[B)[B
      54: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #816                // Method handleClose:(Z)V
       5: return

  protected void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #703                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #763                // Method org/bouncycastle/crypto/tls/RecordStream.flush:()V
       7: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #683                // Field closed:Z
       4: ireturn

  protected short processMaxFragmentLengthExtension(java.util.Hashtable, java.util.Hashtable, short) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #795                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
       4: istore        4
       6: iload         4
       8: iflt          44
      11: iload         4
      13: invokestatic  #758                // Method org/bouncycastle/crypto/tls/MaxFragmentLength.isValid:(S)Z
      16: ifeq          35
      19: aload_0
      20: getfield      #687                // Field resumedSession:Z
      23: ifne          44
      26: iload         4
      28: aload_1
      29: invokestatic  #795                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
      32: if_icmpeq     44
      35: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      38: dup
      39: iload_3
      40: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      43: athrow
      44: iload         4
      46: ireturn

  protected void refuseRenegotiation() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #828                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       4: invokestatic  #853                // Method org/bouncycastle/crypto/tls/TlsUtils.isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       7: ifeq          20
      10: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      13: dup
      14: bipush        40
      16: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      19: athrow
      20: aload_0
      21: bipush        100
      23: ldc           #20                 // String Renegotiation not supported
      25: invokevirtual #825                // Method raiseAlertWarning:(SLjava/lang/String;)V
      28: return

  protected static void assertEmpty(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #712                // Method java/io/ByteArrayInputStream.available:()I
       4: ifle          17
       7: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        50
      13: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  protected static byte[] createRandomBlock(boolean, org.bouncycastle.crypto.prng.RandomGenerator);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokeinterface #866,  2          // InterfaceMethod org/bouncycastle/crypto/prng/RandomGenerator.nextBytes:([B)V
      12: iload_0
      13: ifeq          21
      16: aload_2
      17: iconst_0
      18: invokestatic  #845                // Method org/bouncycastle/crypto/tls/TlsUtils.writeGMTUnixTime:([BI)V
      21: aload_2
      22: areturn

  protected static byte[] createRenegotiationInfo(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #841                // Method org/bouncycastle/crypto/tls/TlsUtils.encodeOpaque8:([B)[B
       4: areturn

  protected static void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsKeyExchange) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #871,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsKeyExchange.generatePremasterSecret:()[B
       6: astore_2
       7: aload_0
       8: invokeinterface #869,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      13: aload_0
      14: aload_2
      15: invokestatic  #856                // Method org/bouncycastle/crypto/tls/TlsUtils.calculateMasterSecret:(Lorg/bouncycastle/crypto/tls/TlsContext;[B)[B
      18: putfield      #676                // Field org/bouncycastle/crypto/tls/SecurityParameters.masterSecret:[B
      21: aload_2
      22: ifnull        45
      25: aload_2
      26: iconst_0
      27: invokestatic  #858                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      30: goto          45
      33: astore_3
      34: aload_2
      35: ifnull        43
      38: aload_2
      39: iconst_0
      40: invokestatic  #858                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
           7    21    33   any

  protected static byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsHandshakeHash, byte[]);
    Code:
       0: aload_1
       1: invokeinterface #870,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.forkPRFHash:()Lorg/bouncycastle/crypto/Digest;
       6: astore_3
       7: aload_2
       8: ifnull        28
      11: aload_0
      12: invokestatic  #853                // Method org/bouncycastle/crypto/tls/TlsUtils.isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      15: ifeq          28
      18: aload_3
      19: aload_2
      20: iconst_0
      21: aload_2
      22: arraylength
      23: invokeinterface #865,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      28: aload_3
      29: invokeinterface #863,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      34: newarray       byte
      36: astore        4
      38: aload_3
      39: aload         4
      41: iconst_0
      42: invokeinterface #864,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      47: pop
      48: aload         4
      50: areturn

  protected static java.util.Hashtable readExtensions(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #712                // Method java/io/ByteArrayInputStream.available:()I
       4: iconst_1
       5: if_icmpge     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: invokestatic  #848                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      14: astore_1
      15: aload_0
      16: invokestatic  #823                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      19: new           #362                // class java/io/ByteArrayInputStream
      22: dup
      23: aload_1
      24: invokespecial #713                // Method java/io/ByteArrayInputStream."<init>":([B)V
      27: astore_2
      28: new           #376                // class java/util/Hashtable
      31: dup
      32: invokespecial #730                // Method java/util/Hashtable."<init>":()V
      35: astore_3
      36: aload_2
      37: invokevirtual #712                // Method java/io/ByteArrayInputStream.available:()I
      40: ifle          83
      43: aload_2
      44: invokestatic  #847                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      47: invokestatic  #860                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      50: astore        4
      52: aload_2
      53: invokestatic  #848                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      56: astore        5
      58: aconst_null
      59: aload_3
      60: aload         4
      62: aload         5
      64: invokevirtual #733                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: if_acmpeq     80
      70: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      73: dup
      74: bipush        47
      76: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      79: athrow
      80: goto          36
      83: aload_3
      84: areturn

  protected static java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #849                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque24:(Ljava/io/InputStream;)[B
       4: astore_1
       5: aload_0
       6: invokestatic  #823                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
       9: new           #362                // class java/io/ByteArrayInputStream
      12: dup
      13: aload_1
      14: invokespecial #713                // Method java/io/ByteArrayInputStream."<init>":([B)V
      17: astore_2
      18: new           #377                // class java/util/Vector
      21: dup
      22: invokespecial #735                // Method java/util/Vector."<init>":()V
      25: astore_3
      26: aload_2
      27: invokevirtual #712                // Method java/io/ByteArrayInputStream.available:()I
      30: ifle          63
      33: aload_2
      34: invokestatic  #847                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      37: istore        4
      39: aload_2
      40: invokestatic  #848                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      43: astore        5
      45: aload_3
      46: new           #391                // class org/bouncycastle/crypto/tls/SupplementalDataEntry
      49: dup
      50: iload         4
      52: aload         5
      54: invokespecial #794                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry."<init>":(I[B)V
      57: invokevirtual #737                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      60: goto          26
      63: aload_3
      64: areturn

  protected static void writeExtensions(java.io.OutputStream, java.util.Hashtable) throws java.io.IOException;
    Code:
       0: new           #363                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #714                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: iconst_1
      11: invokestatic  #832                // Method writeSelectedExtensions:(Ljava/io/OutputStream;Ljava/util/Hashtable;Z)V
      14: aload_2
      15: aload_1
      16: iconst_0
      17: invokestatic  #832                // Method writeSelectedExtensions:(Ljava/io/OutputStream;Ljava/util/Hashtable;Z)V
      20: aload_2
      21: invokevirtual #715                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      24: astore_3
      25: aload_3
      26: aload_0
      27: invokestatic  #851                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      30: return

  protected static void writeSelectedExtensions(java.io.OutputStream, java.util.Hashtable, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #731                // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       4: astore_3
       5: aload_3
       6: invokeinterface #861,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          81
      14: aload_3
      15: invokeinterface #862,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #370                // class java/lang/Integer
      23: astore        4
      25: aload         4
      27: invokevirtual #722                // Method java/lang/Integer.intValue:()I
      30: istore        5
      32: aload_1
      33: aload         4
      35: invokevirtual #732                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #361                // class "[B"
      41: checkcast     #361                // class "[B"
      44: astore        6
      46: iload_2
      47: aload         6
      49: arraylength
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: if_icmpne     78
      61: iload         5
      63: invokestatic  #840                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      66: iload         5
      68: aload_0
      69: invokestatic  #850                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      72: aload         6
      74: aload_0
      75: invokestatic  #851                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      78: goto          5
      81: return

  protected static void writeSupplementalData(java.io.OutputStream, java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #363                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #714                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: invokevirtual #734                // Method java/util/Vector.size:()I
      15: if_icmpge     61
      18: aload_1
      19: iload_3
      20: invokevirtual #736                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      23: checkcast     #391                // class org/bouncycastle/crypto/tls/SupplementalDataEntry
      26: astore        4
      28: aload         4
      30: invokevirtual #792                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry.getDataType:()I
      33: istore        5
      35: iload         5
      37: invokestatic  #840                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      40: iload         5
      42: aload_2
      43: invokestatic  #850                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      46: aload         4
      48: invokevirtual #793                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry.getData:()[B
      51: aload_2
      52: invokestatic  #851                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      55: iinc          3, 1
      58: goto          10
      61: aload_2
      62: invokevirtual #715                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      65: astore_3
      66: aload_3
      67: aload_0
      68: invokestatic  #852                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque24:([BLjava/io/OutputStream;)V
      71: return

  protected static int getPRFAlgorithm(org.bouncycastle.crypto.tls.TlsContext, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #855                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       4: istore_2
       5: iload_1
       6: lookupswitch  { // 144
                    59: 1168
                    60: 1168
                    61: 1168
                    62: 1168
                    63: 1168
                    64: 1168
                   103: 1168
                   104: 1168
                   105: 1168
                   106: 1168
                   107: 1168
                   108: 1168
                   109: 1168
                   156: 1168
                   157: 1184
                   158: 1168
                   159: 1184
                   160: 1168
                   161: 1184
                   162: 1168
                   163: 1184
                   164: 1168
                   165: 1184
                   166: 1168
                   167: 1184
                   168: 1168
                   169: 1184
                   170: 1168
                   171: 1184
                   172: 1168
                   173: 1184
                   175: 1200
                   177: 1200
                   179: 1200
                   181: 1200
                   183: 1200
                   185: 1200
                   186: 1168
                   187: 1168
                   188: 1168
                   189: 1168
                   190: 1168
                   191: 1168
                   192: 1168
                   193: 1168
                   194: 1168
                   195: 1168
                   196: 1168
                   197: 1168
                 49187: 1168
                 49188: 1184
                 49189: 1168
                 49190: 1184
                 49191: 1168
                 49192: 1184
                 49193: 1168
                 49194: 1184
                 49195: 1168
                 49196: 1184
                 49197: 1168
                 49198: 1184
                 49199: 1168
                 49200: 1184
                 49201: 1168
                 49202: 1184
                 49208: 1200
                 49211: 1200
                 49266: 1168
                 49267: 1184
                 49268: 1168
                 49269: 1184
                 49270: 1168
                 49271: 1184
                 49272: 1168
                 49273: 1184
                 49274: 1168
                 49275: 1184
                 49276: 1168
                 49277: 1184
                 49278: 1168
                 49279: 1184
                 49280: 1168
                 49281: 1184
                 49282: 1168
                 49283: 1184
                 49284: 1168
                 49285: 1184
                 49286: 1168
                 49287: 1184
                 49288: 1168
                 49289: 1184
                 49290: 1168
                 49291: 1184
                 49292: 1168
                 49293: 1184
                 49294: 1168
                 49295: 1184
                 49296: 1168
                 49297: 1184
                 49298: 1168
                 49299: 1184
                 49301: 1200
                 49303: 1200
                 49305: 1200
                 49307: 1200
                 49308: 1168
                 49309: 1168
                 49310: 1168
                 49311: 1168
                 49312: 1168
                 49313: 1168
                 49314: 1168
                 49315: 1168
                 49316: 1168
                 49317: 1168
                 49318: 1168
                 49319: 1168
                 49320: 1168
                 49321: 1168
                 49322: 1168
                 49323: 1168
                 49324: 1168
                 49325: 1168
                 49326: 1168
                 49327: 1168
                 52392: 1168
                 52393: 1168
                 52394: 1168
                 52395: 1168
                 52396: 1168
                 52397: 1168
                 52398: 1168
                 65280: 1168
                 65281: 1168
                 65282: 1168
                 65283: 1168
                 65284: 1168
                 65285: 1168
                 65296: 1168
                 65297: 1168
                 65298: 1168
                 65299: 1168
                 65300: 1168
                 65301: 1168
               default: 1208
          }
    1168: iload_2
    1169: ifeq          1174
    1172: iconst_1
    1173: ireturn
    1174: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1177: dup
    1178: bipush        47
    1180: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1183: athrow
    1184: iload_2
    1185: ifeq          1190
    1188: iconst_2
    1189: ireturn
    1190: new           #395                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1193: dup
    1194: bipush        47
    1196: invokespecial #797                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1199: athrow
    1200: iload_2
    1201: ifeq          1206
    1204: iconst_2
    1205: ireturn
    1206: iconst_0
    1207: ireturn
    1208: iload_2
    1209: ifeq          1214
    1212: iconst_1
    1213: ireturn
    1214: iconst_0
    1215: ireturn

  static {};
    Code:
       0: ldc_w         #360                // int 65281
       3: invokestatic  #860                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       6: putstatic     #692                // Field EXT_RenegotiationInfo:Ljava/lang/Integer;
       9: bipush        35
      11: invokestatic  #860                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      14: putstatic     #693                // Field EXT_SessionTicket:Ljava/lang/Integer;
      17: return
}
