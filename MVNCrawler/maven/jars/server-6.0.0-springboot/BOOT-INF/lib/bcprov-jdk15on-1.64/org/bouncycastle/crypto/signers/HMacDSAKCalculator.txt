public class org.bouncycastle.crypto.signers.HMacDSAKCalculator implements org.bouncycastle.crypto.signers.DSAKCalculator {
  private static final java.math.BigInteger ZERO;

  private final org.bouncycastle.crypto.macs.HMac hMac;

  private final byte[] K;

  private final byte[] V;

  private java.math.BigInteger n;

  public org.bouncycastle.crypto.signers.HMacDSAKCalculator(org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #54                 // class org/bouncycastle/crypto/macs/HMac
       8: dup
       9: aload_1
      10: invokespecial #121                // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      13: putfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      16: aload_0
      17: aload_0
      18: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      21: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      24: newarray       byte
      26: putfield      #102                // Field V:[B
      29: aload_0
      30: aload_0
      31: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      34: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      37: newarray       byte
      39: putfield      #101                // Field K:[B
      42: return

  public boolean isDeterministic();
    Code:
       0: iconst_1
       1: ireturn

  public void init(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: new           #49                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #1                  // String Operation not supported
       6: invokespecial #106                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void init(java.math.BigInteger, java.math.BigInteger, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field n:Ljava/math/BigInteger;
       5: aload_0
       6: getfield      #102                // Field V:[B
       9: iconst_1
      10: invokestatic  #124                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      13: aload_0
      14: getfield      #101                // Field K:[B
      17: iconst_0
      18: invokestatic  #124                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      21: aload_1
      22: invokestatic  #125                // Method org/bouncycastle/util/BigIntegers.getUnsignedByteLength:(Ljava/math/BigInteger;)I
      25: istore        4
      27: iload         4
      29: newarray       byte
      31: astore        5
      33: aload_2
      34: invokestatic  #126                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
      37: astore        6
      39: aload         6
      41: iconst_0
      42: aload         5
      44: aload         5
      46: arraylength
      47: aload         6
      49: arraylength
      50: isub
      51: aload         6
      53: arraylength
      54: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: iload         4
      59: newarray       byte
      61: astore        7
      63: aload_0
      64: aload_3
      65: invokespecial #123                // Method bitsToInt:([B)Ljava/math/BigInteger;
      68: astore        8
      70: aload         8
      72: aload_1
      73: invokevirtual #114                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      76: iflt          87
      79: aload         8
      81: aload_1
      82: invokevirtual #115                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      85: astore        8
      87: aload         8
      89: invokestatic  #126                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
      92: astore        9
      94: aload         9
      96: iconst_0
      97: aload         7
      99: aload         7
     101: arraylength
     102: aload         9
     104: arraylength
     105: isub
     106: aload         9
     108: arraylength
     109: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: aload_0
     113: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     116: new           #55                 // class org/bouncycastle/crypto/params/KeyParameter
     119: dup
     120: aload_0
     121: getfield      #101                // Field K:[B
     124: invokespecial #122                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     127: invokevirtual #120                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     130: aload_0
     131: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     134: aload_0
     135: getfield      #102                // Field V:[B
     138: iconst_0
     139: aload_0
     140: getfield      #102                // Field V:[B
     143: arraylength
     144: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     147: aload_0
     148: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     151: iconst_0
     152: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:(B)V
     155: aload_0
     156: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     159: aload         5
     161: iconst_0
     162: aload         5
     164: arraylength
     165: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     168: aload_0
     169: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     172: aload         7
     174: iconst_0
     175: aload         7
     177: arraylength
     178: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     181: aload_0
     182: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     185: aload_0
     186: getfield      #101                // Field K:[B
     189: iconst_0
     190: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     193: pop
     194: aload_0
     195: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     198: new           #55                 // class org/bouncycastle/crypto/params/KeyParameter
     201: dup
     202: aload_0
     203: getfield      #101                // Field K:[B
     206: invokespecial #122                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     209: invokevirtual #120                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     212: aload_0
     213: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     216: aload_0
     217: getfield      #102                // Field V:[B
     220: iconst_0
     221: aload_0
     222: getfield      #102                // Field V:[B
     225: arraylength
     226: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     229: aload_0
     230: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     233: aload_0
     234: getfield      #102                // Field V:[B
     237: iconst_0
     238: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     241: pop
     242: aload_0
     243: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     246: aload_0
     247: getfield      #102                // Field V:[B
     250: iconst_0
     251: aload_0
     252: getfield      #102                // Field V:[B
     255: arraylength
     256: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     259: aload_0
     260: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     263: iconst_1
     264: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:(B)V
     267: aload_0
     268: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     271: aload         5
     273: iconst_0
     274: aload         5
     276: arraylength
     277: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     280: aload_0
     281: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     284: aload         7
     286: iconst_0
     287: aload         7
     289: arraylength
     290: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     293: aload_0
     294: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     297: aload_0
     298: getfield      #101                // Field K:[B
     301: iconst_0
     302: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     305: pop
     306: aload_0
     307: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     310: new           #55                 // class org/bouncycastle/crypto/params/KeyParameter
     313: dup
     314: aload_0
     315: getfield      #101                // Field K:[B
     318: invokespecial #122                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     321: invokevirtual #120                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     324: aload_0
     325: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     328: aload_0
     329: getfield      #102                // Field V:[B
     332: iconst_0
     333: aload_0
     334: getfield      #102                // Field V:[B
     337: arraylength
     338: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     341: aload_0
     342: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     345: aload_0
     346: getfield      #102                // Field V:[B
     349: iconst_0
     350: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     353: pop
     354: return

  public java.math.BigInteger nextK();
    Code:
       0: aload_0
       1: getfield      #104                // Field n:Ljava/math/BigInteger;
       4: invokestatic  #125                // Method org/bouncycastle/util/BigIntegers.getUnsignedByteLength:(Ljava/math/BigInteger;)I
       7: newarray       byte
       9: astore_1
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_1
      14: arraylength
      15: if_icmpge     79
      18: aload_0
      19: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      22: aload_0
      23: getfield      #102                // Field V:[B
      26: iconst_0
      27: aload_0
      28: getfield      #102                // Field V:[B
      31: arraylength
      32: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
      35: aload_0
      36: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      39: aload_0
      40: getfield      #102                // Field V:[B
      43: iconst_0
      44: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
      47: pop
      48: aload_1
      49: arraylength
      50: iload_2
      51: isub
      52: aload_0
      53: getfield      #102                // Field V:[B
      56: arraylength
      57: invokestatic  #107                // Method java/lang/Math.min:(II)I
      60: istore_3
      61: aload_0
      62: getfield      #102                // Field V:[B
      65: iconst_0
      66: aload_1
      67: iload_2
      68: iload_3
      69: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      72: iload_2
      73: iload_3
      74: iadd
      75: istore_2
      76: goto          12
      79: aload_0
      80: aload_1
      81: invokespecial #123                // Method bitsToInt:([B)Ljava/math/BigInteger;
      84: astore_3
      85: aload_3
      86: getstatic     #103                // Field ZERO:Ljava/math/BigInteger;
      89: invokevirtual #114                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      92: ifle          108
      95: aload_3
      96: aload_0
      97: getfield      #104                // Field n:Ljava/math/BigInteger;
     100: invokevirtual #114                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     103: ifge          108
     106: aload_3
     107: areturn
     108: aload_0
     109: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     112: aload_0
     113: getfield      #102                // Field V:[B
     116: iconst_0
     117: aload_0
     118: getfield      #102                // Field V:[B
     121: arraylength
     122: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     125: aload_0
     126: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     129: iconst_0
     130: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:(B)V
     133: aload_0
     134: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     137: aload_0
     138: getfield      #101                // Field K:[B
     141: iconst_0
     142: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     145: pop
     146: aload_0
     147: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     150: new           #55                 // class org/bouncycastle/crypto/params/KeyParameter
     153: dup
     154: aload_0
     155: getfield      #101                // Field K:[B
     158: invokespecial #122                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     161: invokevirtual #120                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     164: aload_0
     165: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     168: aload_0
     169: getfield      #102                // Field V:[B
     172: iconst_0
     173: aload_0
     174: getfield      #102                // Field V:[B
     177: arraylength
     178: invokevirtual #119                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     181: aload_0
     182: getfield      #105                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     185: aload_0
     186: getfield      #102                // Field V:[B
     189: iconst_0
     190: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     193: pop
     194: goto          10

  private java.math.BigInteger bitsToInt(byte[]);
    Code:
       0: new           #53                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: aload_1
       6: invokespecial #111                // Method java/math/BigInteger."<init>":(I[B)V
       9: astore_2
      10: aload_1
      11: arraylength
      12: bipush        8
      14: imul
      15: aload_0
      16: getfield      #104                // Field n:Ljava/math/BigInteger;
      19: invokevirtual #110                // Method java/math/BigInteger.bitLength:()I
      22: if_icmple     43
      25: aload_2
      26: aload_1
      27: arraylength
      28: bipush        8
      30: imul
      31: aload_0
      32: getfield      #104                // Field n:Ljava/math/BigInteger;
      35: invokevirtual #110                // Method java/math/BigInteger.bitLength:()I
      38: isub
      39: invokevirtual #112                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      42: astore_2
      43: aload_2
      44: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #113                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #103                // Field ZERO:Ljava/math/BigInteger;
       7: return
}
