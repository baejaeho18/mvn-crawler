public class org.bouncycastle.crypto.signers.ECNRSigner implements org.bouncycastle.crypto.DSAExt {
  private boolean forSigning;

  private org.bouncycastle.crypto.params.ECKeyParameters key;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.signers.ECNRSigner();
    Code:
       0: aload_0
       1: invokespecial #157                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #151                // Field forSigning:Z
       5: iload_1
       6: ifeq          61
       9: aload_2
      10: instanceof    #84                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      13: ifeq          43
      16: aload_2
      17: checkcast     #84                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokevirtual #181                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      26: putfield      #152                // Field random:Ljava/security/SecureRandom;
      29: aload_0
      30: aload_3
      31: invokevirtual #182                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      34: checkcast     #82                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      37: putfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      40: goto          69
      43: aload_0
      44: invokestatic  #168                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      47: putfield      #152                // Field random:Ljava/security/SecureRandom;
      50: aload_0
      51: aload_2
      52: checkcast     #82                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      55: putfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      58: goto          69
      61: aload_0
      62: aload_2
      63: checkcast     #83                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      66: putfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      69: return

  public java.math.BigInteger getOrder();
    Code:
       0: aload_0
       1: getfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
       4: invokevirtual #176                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       7: invokevirtual #173                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger[] generateSignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #151                // Field forSigning:Z
       4: ifne          17
       7: new           #71                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String not initialised for signing
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #183                // Method getOrder:()Ljava/math/BigInteger;
      21: astore_2
      22: new           #73                 // class java/math/BigInteger
      25: dup
      26: iconst_1
      27: aload_1
      28: invokespecial #159                // Method java/math/BigInteger."<init>":(I[B)V
      31: astore_3
      32: aload_0
      33: getfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      36: checkcast     #82                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      39: astore        4
      41: aload_3
      42: aload_2
      43: invokevirtual #161                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      46: iflt          59
      49: new           #77                 // class org/bouncycastle/crypto/DataLengthException
      52: dup
      53: ldc           #1                  // String input too large for ECNR key
      55: invokespecial #169                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aconst_null
      60: astore        5
      62: aconst_null
      63: astore        6
      65: new           #78                 // class org/bouncycastle/crypto/generators/ECKeyPairGenerator
      68: dup
      69: invokespecial #170                // Method org/bouncycastle/crypto/generators/ECKeyPairGenerator."<init>":()V
      72: astore        8
      74: aload         8
      76: new           #80                 // class org/bouncycastle/crypto/params/ECKeyGenerationParameters
      79: dup
      80: aload         4
      82: invokevirtual #178                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      85: aload_0
      86: getfield      #152                // Field random:Ljava/security/SecureRandom;
      89: invokespecial #175                // Method org/bouncycastle/crypto/params/ECKeyGenerationParameters."<init>":(Lorg/bouncycastle/crypto/params/ECDomainParameters;Ljava/security/SecureRandom;)V
      92: invokevirtual #172                // Method org/bouncycastle/crypto/generators/ECKeyPairGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      95: aload         8
      97: invokevirtual #171                // Method org/bouncycastle/crypto/generators/ECKeyPairGenerator.generateKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
     100: astore        7
     102: aload         7
     104: invokevirtual #167                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPublic:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
     107: checkcast     #83                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
     110: astore        9
     112: aload         9
     114: invokevirtual #180                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     117: invokevirtual #188                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     120: invokevirtual #186                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     123: astore        10
     125: aload         10
     127: aload_3
     128: invokevirtual #162                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     131: aload_2
     132: invokevirtual #163                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     135: astore        5
     137: aload         5
     139: getstatic     #155                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     142: invokevirtual #160                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     145: ifne          65
     148: aload         4
     150: invokevirtual #177                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
     153: astore        8
     155: aload         7
     157: invokevirtual #166                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPrivate:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
     160: checkcast     #82                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
     163: invokevirtual #177                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
     166: astore        9
     168: aload         9
     170: aload         5
     172: aload         8
     174: invokevirtual #164                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     177: invokevirtual #165                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     180: aload_2
     181: invokevirtual #163                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     184: astore        6
     186: iconst_2
     187: anewarray     #73                 // class java/math/BigInteger
     190: astore        10
     192: aload         10
     194: iconst_0
     195: aload         5
     197: aastore
     198: aload         10
     200: iconst_1
     201: aload         6
     203: aastore
     204: aload         10
     206: areturn

  public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #151                // Field forSigning:Z
       4: ifeq          17
       7: new           #71                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #4                  // String not initialised for verifying
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      21: checkcast     #83                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      24: astore        4
      26: aload         4
      28: invokevirtual #179                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      31: invokevirtual #173                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      34: astore        5
      36: aload         5
      38: invokevirtual #158                // Method java/math/BigInteger.bitLength:()I
      41: istore        6
      43: new           #73                 // class java/math/BigInteger
      46: dup
      47: iconst_1
      48: aload_1
      49: invokespecial #159                // Method java/math/BigInteger."<init>":(I[B)V
      52: astore        7
      54: aload         7
      56: invokevirtual #158                // Method java/math/BigInteger.bitLength:()I
      59: istore        8
      61: iload         8
      63: iload         6
      65: if_icmple     78
      68: new           #77                 // class org/bouncycastle/crypto/DataLengthException
      71: dup
      72: ldc           #2                  // String input too large for ECNR key.
      74: invokespecial #169                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: aload         4
      81: aload_2
      82: aload_3
      83: invokespecial #184                // Method extractT:(Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      86: astore        9
      88: aload         9
      90: ifnull        112
      93: aload         9
      95: aload         7
      97: aload         5
      99: invokevirtual #163                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     102: invokevirtual #160                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     105: ifeq          112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: ireturn

  public byte[] getRecoveredMessage(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #151                // Field forSigning:Z
       4: ifeq          17
       7: new           #71                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String not initialised for verifying/recovery
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: getfield      #153                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      22: checkcast     #83                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      25: aload_1
      26: aload_2
      27: invokespecial #184                // Method extractT:(Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      30: astore_3
      31: aload_3
      32: ifnull        40
      35: aload_3
      36: invokestatic  #190                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
      39: areturn
      40: aconst_null
      41: areturn

  private java.math.BigInteger extractT(org.bouncycastle.crypto.params.ECPublicKeyParameters, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #179                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       4: invokevirtual #173                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
       7: astore        4
       9: aload_2
      10: getstatic     #154                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      13: invokevirtual #161                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      16: iflt          28
      19: aload_2
      20: aload         4
      22: invokevirtual #161                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      25: iflt          30
      28: aconst_null
      29: areturn
      30: aload_3
      31: getstatic     #155                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      34: invokevirtual #161                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      37: iflt          49
      40: aload_3
      41: aload         4
      43: invokevirtual #161                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      46: iflt          51
      49: aconst_null
      50: areturn
      51: aload_1
      52: invokevirtual #179                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      55: invokevirtual #174                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      58: astore        5
      60: aload_1
      61: invokevirtual #180                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      64: astore        6
      66: aload         5
      68: aload_3
      69: aload         6
      71: aload_2
      72: invokestatic  #185                // Method org/bouncycastle/math/ec/ECAlgorithms.sumOfTwoMultiplies:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      75: invokevirtual #189                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      78: astore        7
      80: aload         7
      82: invokevirtual #187                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      85: ifeq          90
      88: aconst_null
      89: areturn
      90: aload         7
      92: invokevirtual #188                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      95: invokevirtual #186                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      98: astore        8
     100: aload_2
     101: aload         8
     103: invokevirtual #165                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     106: aload         4
     108: invokevirtual #163                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     111: areturn
}
