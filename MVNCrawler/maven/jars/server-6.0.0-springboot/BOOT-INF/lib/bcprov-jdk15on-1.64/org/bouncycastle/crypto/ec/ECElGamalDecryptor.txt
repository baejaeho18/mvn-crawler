public class org.bouncycastle.crypto.ec.ECElGamalDecryptor implements org.bouncycastle.crypto.ec.ECDecryptor {
  private org.bouncycastle.crypto.params.ECPrivateKeyParameters key;

  public org.bouncycastle.crypto.ec.ECElGamalDecryptor();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #36                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
       4: ifne          17
       7: new           #29                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #2                  // String ECPrivateKeyParameters are required for decryption.
      13: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #36                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      22: putfield      #62                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      25: return

  public org.bouncycastle.math.ec.ECPoint decrypt(org.bouncycastle.crypto.ec.ECPair);
    Code:
       0: aload_0
       1: getfield      #62                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       4: ifnonnull     17
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String ECElGamalDecryptor not initialised
      13: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #62                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      21: invokevirtual #70                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      24: invokevirtual #68                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      27: astore_2
      28: aload_2
      29: aload_1
      30: invokevirtual #66                 // Method org/bouncycastle/crypto/ec/ECPair.getX:()Lorg/bouncycastle/math/ec/ECPoint;
      33: invokestatic  #71                 // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      36: aload_0
      37: getfield      #62                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      40: invokevirtual #69                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      43: invokevirtual #73                 // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      46: astore_3
      47: aload_2
      48: aload_1
      49: invokevirtual #67                 // Method org/bouncycastle/crypto/ec/ECPair.getY:()Lorg/bouncycastle/math/ec/ECPoint;
      52: invokestatic  #71                 // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      55: aload_3
      56: invokevirtual #74                 // Method org/bouncycastle/math/ec/ECPoint.subtract:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      59: invokevirtual #72                 // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      62: areturn
}
