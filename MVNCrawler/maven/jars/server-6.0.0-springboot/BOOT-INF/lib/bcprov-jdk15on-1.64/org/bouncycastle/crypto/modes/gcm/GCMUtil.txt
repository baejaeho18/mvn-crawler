public abstract class org.bouncycastle.crypto.modes.gcm.GCMUtil {
  private static final int E1;

  private static final long E1L;

  public org.bouncycastle.crypto.modes.gcm.GCMUtil();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] oneAsBytes();
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_0
       5: aload_0
       6: iconst_0
       7: bipush        -128
       9: bastore
      10: aload_0
      11: areturn

  public static int[] oneAsInts();
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc           #1                  // int -2147483648
       8: iastore
       9: aload_0
      10: areturn

  public static long[] oneAsLongs();
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc2_w        #63                 // long -9223372036854775808l
       9: lastore
      10: aload_0
      11: areturn

  public static byte[] asBytes(int[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokestatic  #89                 // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
      11: aload_1
      12: areturn

  public static void asBytes(int[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #89                 // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
       6: return

  public static byte[] asBytes(long[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokestatic  #90                 // Method org/bouncycastle/util/Pack.longToBigEndian:([J[BI)V
      11: aload_1
      12: areturn

  public static void asBytes(long[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #90                 // Method org/bouncycastle/util/Pack.longToBigEndian:([J[BI)V
       6: return

  public static int[] asInts(byte[]);
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_1
       7: invokestatic  #87                 // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[I)V
      10: aload_1
      11: areturn

  public static void asInts(byte[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #87                 // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[I)V
       6: return

  public static long[] asLongs(byte[]);
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_1
       7: invokestatic  #88                 // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI[J)V
      10: aload_1
      11: areturn

  public static void asLongs(byte[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #88                 // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI[J)V
       6: return

  public static void copy(int[], int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: iaload
       5: iastore
       6: aload_1
       7: iconst_1
       8: aload_0
       9: iconst_1
      10: iaload
      11: iastore
      12: aload_1
      13: iconst_2
      14: aload_0
      15: iconst_2
      16: iaload
      17: iastore
      18: aload_1
      19: iconst_3
      20: aload_0
      21: iconst_3
      22: iaload
      23: iastore
      24: return

  public static void copy(long[], long[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: laload
       5: lastore
       6: aload_1
       7: iconst_1
       8: aload_0
       9: iconst_1
      10: laload
      11: lastore
      12: return

  public static void divideP(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lload_2
      10: bipush        63
      12: lshr
      13: lstore        6
      15: lload_2
      16: lload         6
      18: ldc2_w        #65                 // long -2233785415175766016l
      21: land
      22: lxor
      23: lstore_2
      24: aload_1
      25: iconst_0
      26: lload_2
      27: iconst_1
      28: lshl
      29: lload         4
      31: bipush        63
      33: lushr
      34: lor
      35: lastore
      36: aload_1
      37: iconst_1
      38: lload         4
      40: iconst_1
      41: lshl
      42: lload         6
      44: lneg
      45: lor
      46: lastore
      47: return

  public static void multiply(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method asLongs:([B)[J
       4: astore_2
       5: aload_1
       6: invokestatic  #83                 // Method asLongs:([B)[J
       9: astore_3
      10: aload_2
      11: aload_3
      12: invokestatic  #85                 // Method multiply:([J[J)V
      15: aload_2
      16: aload_0
      17: invokestatic  #84                 // Method asBytes:([J[B)V
      20: return

  public static void multiply(int[], int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_1
       5: iconst_1
       6: iaload
       7: istore_3
       8: aload_1
       9: iconst_2
      10: iaload
      11: istore        4
      13: aload_1
      14: iconst_3
      15: iaload
      16: istore        5
      18: iconst_0
      19: istore        6
      21: iconst_0
      22: istore        7
      24: iconst_0
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iconst_0
      31: istore        10
      33: iload         10
      35: iconst_4
      36: if_icmpge     170
      39: aload_0
      40: iload         10
      42: iaload
      43: istore        11
      45: iconst_0
      46: istore        12
      48: iload         12
      50: bipush        32
      52: if_icmpge     164
      55: iload         11
      57: bipush        31
      59: ishr
      60: istore        13
      62: iload         11
      64: iconst_1
      65: ishl
      66: istore        11
      68: iload         6
      70: iload_2
      71: iload         13
      73: iand
      74: ixor
      75: istore        6
      77: iload         7
      79: iload_3
      80: iload         13
      82: iand
      83: ixor
      84: istore        7
      86: iload         8
      88: iload         4
      90: iload         13
      92: iand
      93: ixor
      94: istore        8
      96: iload         9
      98: iload         5
     100: iload         13
     102: iand
     103: ixor
     104: istore        9
     106: iload         5
     108: bipush        31
     110: ishl
     111: bipush        8
     113: ishr
     114: istore        14
     116: iload         5
     118: iconst_1
     119: iushr
     120: iload         4
     122: bipush        31
     124: ishl
     125: ior
     126: istore        5
     128: iload         4
     130: iconst_1
     131: iushr
     132: iload_3
     133: bipush        31
     135: ishl
     136: ior
     137: istore        4
     139: iload_3
     140: iconst_1
     141: iushr
     142: iload_2
     143: bipush        31
     145: ishl
     146: ior
     147: istore_3
     148: iload_2
     149: iconst_1
     150: iushr
     151: iload         14
     153: ldc           #2                  // int -520093696
     155: iand
     156: ixor
     157: istore_2
     158: iinc          12, 1
     161: goto          48
     164: iinc          10, 1
     167: goto          33
     170: aload_0
     171: iconst_0
     172: iload         6
     174: iastore
     175: aload_0
     176: iconst_1
     177: iload         7
     179: iastore
     180: aload_0
     181: iconst_2
     182: iload         8
     184: iastore
     185: aload_0
     186: iconst_3
     187: iload         9
     189: iastore
     190: return

  public static void multiply(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: aload_1
      10: iconst_0
      11: laload
      12: lstore        6
      14: aload_1
      15: iconst_1
      16: laload
      17: lstore        8
      19: lconst_0
      20: lstore        10
      22: lconst_0
      23: lstore        12
      25: lconst_0
      26: lstore        14
      28: iconst_0
      29: istore        16
      31: iload         16
      33: bipush        64
      35: if_icmpge     142
      38: lload_2
      39: bipush        63
      41: lshr
      42: lstore        17
      44: lload_2
      45: iconst_1
      46: lshl
      47: lstore_2
      48: lload         10
      50: lload         6
      52: lload         17
      54: land
      55: lxor
      56: lstore        10
      58: lload         12
      60: lload         8
      62: lload         17
      64: land
      65: lxor
      66: lstore        12
      68: lload         4
      70: bipush        63
      72: lshr
      73: lstore        19
      75: lload         4
      77: iconst_1
      78: lshl
      79: lstore        4
      81: lload         12
      83: lload         6
      85: lload         19
      87: land
      88: lxor
      89: lstore        12
      91: lload         14
      93: lload         8
      95: lload         19
      97: land
      98: lxor
      99: lstore        14
     101: lload         8
     103: bipush        63
     105: lshl
     106: bipush        8
     108: lshr
     109: lstore        21
     111: lload         8
     113: iconst_1
     114: lushr
     115: lload         6
     117: bipush        63
     119: lshl
     120: lor
     121: lstore        8
     123: lload         6
     125: iconst_1
     126: lushr
     127: lload         21
     129: ldc2_w        #65                 // long -2233785415175766016l
     132: land
     133: lxor
     134: lstore        6
     136: iinc          16, 1
     139: goto          31
     142: lload         10
     144: lload         14
     146: lload         14
     148: iconst_1
     149: lushr
     150: lxor
     151: lload         14
     153: iconst_2
     154: lushr
     155: lxor
     156: lload         14
     158: bipush        7
     160: lushr
     161: lxor
     162: lxor
     163: lstore        10
     165: lload         12
     167: lload         14
     169: bipush        63
     171: lshl
     172: lload         14
     174: bipush        62
     176: lshl
     177: lxor
     178: lload         14
     180: bipush        57
     182: lshl
     183: lxor
     184: lxor
     185: lstore        12
     187: aload_0
     188: iconst_0
     189: lload         10
     191: lastore
     192: aload_0
     193: iconst_1
     194: lload         12
     196: lastore
     197: return

  public static void multiplyP(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_1
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_2
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore_3
      12: aload_0
      13: iconst_3
      14: iaload
      15: istore        4
      17: iload         4
      19: bipush        31
      21: ishl
      22: bipush        31
      24: ishr
      25: istore        5
      27: aload_0
      28: iconst_0
      29: iload_1
      30: iconst_1
      31: iushr
      32: iload         5
      34: ldc           #2                  // int -520093696
      36: iand
      37: ixor
      38: iastore
      39: aload_0
      40: iconst_1
      41: iload_2
      42: iconst_1
      43: iushr
      44: iload_1
      45: bipush        31
      47: ishl
      48: ior
      49: iastore
      50: aload_0
      51: iconst_2
      52: iload_3
      53: iconst_1
      54: iushr
      55: iload_2
      56: bipush        31
      58: ishl
      59: ior
      60: iastore
      61: aload_0
      62: iconst_3
      63: iload         4
      65: iconst_1
      66: iushr
      67: iload_3
      68: bipush        31
      70: ishl
      71: ior
      72: iastore
      73: return

  public static void multiplyP(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_3
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore        4
      13: aload_0
      14: iconst_3
      15: iaload
      16: istore        5
      18: iload         5
      20: bipush        31
      22: ishl
      23: bipush        31
      25: ishr
      26: istore        6
      28: aload_1
      29: iconst_0
      30: iload_2
      31: iconst_1
      32: iushr
      33: iload         6
      35: ldc           #2                  // int -520093696
      37: iand
      38: ixor
      39: iastore
      40: aload_1
      41: iconst_1
      42: iload_3
      43: iconst_1
      44: iushr
      45: iload_2
      46: bipush        31
      48: ishl
      49: ior
      50: iastore
      51: aload_1
      52: iconst_2
      53: iload         4
      55: iconst_1
      56: iushr
      57: iload_3
      58: bipush        31
      60: ishl
      61: ior
      62: iastore
      63: aload_1
      64: iconst_3
      65: iload         5
      67: iconst_1
      68: iushr
      69: iload         4
      71: bipush        31
      73: ishl
      74: ior
      75: iastore
      76: return

  public static void multiplyP(long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_1
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore_3
       8: lload_3
       9: bipush        63
      11: lshl
      12: bipush        63
      14: lshr
      15: lstore        5
      17: aload_0
      18: iconst_0
      19: lload_1
      20: iconst_1
      21: lushr
      22: lload         5
      24: ldc2_w        #65                 // long -2233785415175766016l
      27: land
      28: lxor
      29: lastore
      30: aload_0
      31: iconst_1
      32: lload_3
      33: iconst_1
      34: lushr
      35: lload_1
      36: bipush        63
      38: lshl
      39: lor
      40: lastore
      41: return

  public static void multiplyP(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lload         4
      11: bipush        63
      13: lshl
      14: bipush        63
      16: lshr
      17: lstore        6
      19: aload_1
      20: iconst_0
      21: lload_2
      22: iconst_1
      23: lushr
      24: lload         6
      26: ldc2_w        #65                 // long -2233785415175766016l
      29: land
      30: lxor
      31: lastore
      32: aload_1
      33: iconst_1
      34: lload         4
      36: iconst_1
      37: lushr
      38: lload_2
      39: bipush        63
      41: lshl
      42: lor
      43: lastore
      44: return

  public static void multiplyP3(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lload         4
      11: bipush        61
      13: lshl
      14: lstore        6
      16: aload_1
      17: iconst_0
      18: lload_2
      19: iconst_3
      20: lushr
      21: lload         6
      23: lxor
      24: lload         6
      26: iconst_1
      27: lushr
      28: lxor
      29: lload         6
      31: iconst_2
      32: lushr
      33: lxor
      34: lload         6
      36: bipush        7
      38: lushr
      39: lxor
      40: lastore
      41: aload_1
      42: iconst_1
      43: lload         4
      45: iconst_3
      46: lushr
      47: lload_2
      48: bipush        61
      50: lshl
      51: lor
      52: lastore
      53: return

  public static void multiplyP4(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lload         4
      11: bipush        60
      13: lshl
      14: lstore        6
      16: aload_1
      17: iconst_0
      18: lload_2
      19: iconst_4
      20: lushr
      21: lload         6
      23: lxor
      24: lload         6
      26: iconst_1
      27: lushr
      28: lxor
      29: lload         6
      31: iconst_2
      32: lushr
      33: lxor
      34: lload         6
      36: bipush        7
      38: lushr
      39: lxor
      40: lastore
      41: aload_1
      42: iconst_1
      43: lload         4
      45: iconst_4
      46: lushr
      47: lload_2
      48: bipush        60
      50: lshl
      51: lor
      52: lastore
      53: return

  public static void multiplyP7(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lload         4
      11: bipush        57
      13: lshl
      14: lstore        6
      16: aload_1
      17: iconst_0
      18: lload_2
      19: bipush        7
      21: lushr
      22: lload         6
      24: lxor
      25: lload         6
      27: iconst_1
      28: lushr
      29: lxor
      30: lload         6
      32: iconst_2
      33: lushr
      34: lxor
      35: lload         6
      37: bipush        7
      39: lushr
      40: lxor
      41: lastore
      42: aload_1
      43: iconst_1
      44: lload         4
      46: bipush        7
      48: lushr
      49: lload_2
      50: bipush        57
      52: lshl
      53: lor
      54: lastore
      55: return

  public static void multiplyP8(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_1
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_2
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore_3
      12: aload_0
      13: iconst_3
      14: iaload
      15: istore        4
      17: iload         4
      19: bipush        24
      21: ishl
      22: istore        5
      24: aload_0
      25: iconst_0
      26: iload_1
      27: bipush        8
      29: iushr
      30: iload         5
      32: ixor
      33: iload         5
      35: iconst_1
      36: iushr
      37: ixor
      38: iload         5
      40: iconst_2
      41: iushr
      42: ixor
      43: iload         5
      45: bipush        7
      47: iushr
      48: ixor
      49: iastore
      50: aload_0
      51: iconst_1
      52: iload_2
      53: bipush        8
      55: iushr
      56: iload_1
      57: bipush        24
      59: ishl
      60: ior
      61: iastore
      62: aload_0
      63: iconst_2
      64: iload_3
      65: bipush        8
      67: iushr
      68: iload_2
      69: bipush        24
      71: ishl
      72: ior
      73: iastore
      74: aload_0
      75: iconst_3
      76: iload         4
      78: bipush        8
      80: iushr
      81: iload_3
      82: bipush        24
      84: ishl
      85: ior
      86: iastore
      87: return

  public static void multiplyP8(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_3
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore        4
      13: aload_0
      14: iconst_3
      15: iaload
      16: istore        5
      18: iload         5
      20: bipush        24
      22: ishl
      23: istore        6
      25: aload_1
      26: iconst_0
      27: iload_2
      28: bipush        8
      30: iushr
      31: iload         6
      33: ixor
      34: iload         6
      36: iconst_1
      37: iushr
      38: ixor
      39: iload         6
      41: iconst_2
      42: iushr
      43: ixor
      44: iload         6
      46: bipush        7
      48: iushr
      49: ixor
      50: iastore
      51: aload_1
      52: iconst_1
      53: iload_3
      54: bipush        8
      56: iushr
      57: iload_2
      58: bipush        24
      60: ishl
      61: ior
      62: iastore
      63: aload_1
      64: iconst_2
      65: iload         4
      67: bipush        8
      69: iushr
      70: iload_3
      71: bipush        24
      73: ishl
      74: ior
      75: iastore
      76: aload_1
      77: iconst_3
      78: iload         5
      80: bipush        8
      82: iushr
      83: iload         4
      85: bipush        24
      87: ishl
      88: ior
      89: iastore
      90: return

  public static void multiplyP8(long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_1
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore_3
       8: lload_3
       9: bipush        56
      11: lshl
      12: lstore        5
      14: aload_0
      15: iconst_0
      16: lload_1
      17: bipush        8
      19: lushr
      20: lload         5
      22: lxor
      23: lload         5
      25: iconst_1
      26: lushr
      27: lxor
      28: lload         5
      30: iconst_2
      31: lushr
      32: lxor
      33: lload         5
      35: bipush        7
      37: lushr
      38: lxor
      39: lastore
      40: aload_0
      41: iconst_1
      42: lload_3
      43: bipush        8
      45: lushr
      46: lload_1
      47: bipush        56
      49: lshl
      50: lor
      51: lastore
      52: return

  public static void multiplyP8(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lload         4
      11: bipush        56
      13: lshl
      14: lstore        6
      16: aload_1
      17: iconst_0
      18: lload_2
      19: bipush        8
      21: lushr
      22: lload         6
      24: lxor
      25: lload         6
      27: iconst_1
      28: lushr
      29: lxor
      30: lload         6
      32: iconst_2
      33: lushr
      34: lxor
      35: lload         6
      37: bipush        7
      39: lushr
      40: lxor
      41: lastore
      42: aload_1
      43: iconst_1
      44: lload         4
      46: bipush        8
      48: lushr
      49: lload_2
      50: bipush        56
      52: lshl
      53: lor
      54: lastore
      55: return

  public static long[] pAsLongs();
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc2_w        #67                 // long 4611686018427387904l
       9: lastore
      10: aload_0
      11: areturn

  public static void square(long[], long[]);
    Code:
       0: iconst_4
       1: newarray       long
       3: astore_2
       4: aload_0
       5: iconst_0
       6: laload
       7: aload_2
       8: iconst_0
       9: invokestatic  #86                 // Method org/bouncycastle/math/raw/Interleave.expand64To128Rev:(J[JI)V
      12: aload_0
      13: iconst_1
      14: laload
      15: aload_2
      16: iconst_2
      17: invokestatic  #86                 // Method org/bouncycastle/math/raw/Interleave.expand64To128Rev:(J[JI)V
      20: aload_2
      21: iconst_0
      22: laload
      23: lstore_3
      24: aload_2
      25: iconst_1
      26: laload
      27: lstore        5
      29: aload_2
      30: iconst_2
      31: laload
      32: lstore        7
      34: aload_2
      35: iconst_3
      36: laload
      37: lstore        9
      39: lload         5
      41: lload         9
      43: lload         9
      45: iconst_1
      46: lushr
      47: lxor
      48: lload         9
      50: iconst_2
      51: lushr
      52: lxor
      53: lload         9
      55: bipush        7
      57: lushr
      58: lxor
      59: lxor
      60: lstore        5
      62: lload         7
      64: lload         9
      66: bipush        63
      68: lshl
      69: lload         9
      71: bipush        62
      73: lshl
      74: lxor
      75: lload         9
      77: bipush        57
      79: lshl
      80: lxor
      81: lxor
      82: lstore        7
      84: lload_3
      85: lload         7
      87: lload         7
      89: iconst_1
      90: lushr
      91: lxor
      92: lload         7
      94: iconst_2
      95: lushr
      96: lxor
      97: lload         7
      99: bipush        7
     101: lushr
     102: lxor
     103: lxor
     104: lstore_3
     105: lload         5
     107: lload         7
     109: bipush        63
     111: lshl
     112: lload         7
     114: bipush        62
     116: lshl
     117: lxor
     118: lload         7
     120: bipush        57
     122: lshl
     123: lxor
     124: lxor
     125: lstore        5
     127: aload_1
     128: iconst_0
     129: lload_3
     130: lastore
     131: aload_1
     132: iconst_1
     133: lload         5
     135: lastore
     136: return

  public static void xor(byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iload_2
       4: dup2
       5: baload
       6: aload_1
       7: iload_2
       8: baload
       9: ixor
      10: i2b
      11: bastore
      12: iinc          2, 1
      15: aload_0
      16: iload_2
      17: dup2
      18: baload
      19: aload_1
      20: iload_2
      21: baload
      22: ixor
      23: i2b
      24: bastore
      25: iinc          2, 1
      28: aload_0
      29: iload_2
      30: dup2
      31: baload
      32: aload_1
      33: iload_2
      34: baload
      35: ixor
      36: i2b
      37: bastore
      38: iinc          2, 1
      41: aload_0
      42: iload_2
      43: dup2
      44: baload
      45: aload_1
      46: iload_2
      47: baload
      48: ixor
      49: i2b
      50: bastore
      51: iinc          2, 1
      54: iload_2
      55: bipush        16
      57: if_icmplt     2
      60: return

  public static void xor(byte[], byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: iload_3
       4: dup2
       5: baload
       6: aload_1
       7: iload_2
       8: iload_3
       9: iadd
      10: baload
      11: ixor
      12: i2b
      13: bastore
      14: iinc          3, 1
      17: aload_0
      18: iload_3
      19: dup2
      20: baload
      21: aload_1
      22: iload_2
      23: iload_3
      24: iadd
      25: baload
      26: ixor
      27: i2b
      28: bastore
      29: iinc          3, 1
      32: aload_0
      33: iload_3
      34: dup2
      35: baload
      36: aload_1
      37: iload_2
      38: iload_3
      39: iadd
      40: baload
      41: ixor
      42: i2b
      43: bastore
      44: iinc          3, 1
      47: aload_0
      48: iload_3
      49: dup2
      50: baload
      51: aload_1
      52: iload_2
      53: iload_3
      54: iadd
      55: baload
      56: ixor
      57: i2b
      58: bastore
      59: iinc          3, 1
      62: iload_3
      63: bipush        16
      65: if_icmplt     2
      68: return

  public static void xor(byte[], int, byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        6
       3: aload         4
       5: iload         5
       7: iload         6
       9: iadd
      10: aload_0
      11: iload_1
      12: iload         6
      14: iadd
      15: baload
      16: aload_2
      17: iload_3
      18: iload         6
      20: iadd
      21: baload
      22: ixor
      23: i2b
      24: bastore
      25: iinc          6, 1
      28: aload         4
      30: iload         5
      32: iload         6
      34: iadd
      35: aload_0
      36: iload_1
      37: iload         6
      39: iadd
      40: baload
      41: aload_2
      42: iload_3
      43: iload         6
      45: iadd
      46: baload
      47: ixor
      48: i2b
      49: bastore
      50: iinc          6, 1
      53: aload         4
      55: iload         5
      57: iload         6
      59: iadd
      60: aload_0
      61: iload_1
      62: iload         6
      64: iadd
      65: baload
      66: aload_2
      67: iload_3
      68: iload         6
      70: iadd
      71: baload
      72: ixor
      73: i2b
      74: bastore
      75: iinc          6, 1
      78: aload         4
      80: iload         5
      82: iload         6
      84: iadd
      85: aload_0
      86: iload_1
      87: iload         6
      89: iadd
      90: baload
      91: aload_2
      92: iload_3
      93: iload         6
      95: iadd
      96: baload
      97: ixor
      98: i2b
      99: bastore
     100: iinc          6, 1
     103: iload         6
     105: bipush        16
     107: if_icmplt     3
     110: return

  public static void xor(byte[], byte[], int, int);
    Code:
       0: iinc          3, -1
       3: iload_3
       4: iflt          22
       7: aload_0
       8: iload_3
       9: dup2
      10: baload
      11: aload_1
      12: iload_2
      13: iload_3
      14: iadd
      15: baload
      16: ixor
      17: i2b
      18: bastore
      19: goto          0
      22: return

  public static void xor(byte[], int, byte[], int, int);
    Code:
       0: iinc          4, -1
       3: iload         4
       5: iflt          27
       8: aload_0
       9: iload_1
      10: iload         4
      12: iadd
      13: dup2
      14: baload
      15: aload_2
      16: iload_3
      17: iload         4
      19: iadd
      20: baload
      21: ixor
      22: i2b
      23: bastore
      24: goto          0
      27: return

  public static void xor(byte[], byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: iload_3
       4: aload_0
       5: iload_3
       6: baload
       7: aload_1
       8: iload_3
       9: baload
      10: ixor
      11: i2b
      12: bastore
      13: iinc          3, 1
      16: aload_2
      17: iload_3
      18: aload_0
      19: iload_3
      20: baload
      21: aload_1
      22: iload_3
      23: baload
      24: ixor
      25: i2b
      26: bastore
      27: iinc          3, 1
      30: aload_2
      31: iload_3
      32: aload_0
      33: iload_3
      34: baload
      35: aload_1
      36: iload_3
      37: baload
      38: ixor
      39: i2b
      40: bastore
      41: iinc          3, 1
      44: aload_2
      45: iload_3
      46: aload_0
      47: iload_3
      48: baload
      49: aload_1
      50: iload_3
      51: baload
      52: ixor
      53: i2b
      54: bastore
      55: iinc          3, 1
      58: iload_3
      59: bipush        16
      61: if_icmplt     2
      64: return

  public static void xor(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_0
       6: iaload
       7: ixor
       8: iastore
       9: aload_0
      10: iconst_1
      11: dup2
      12: iaload
      13: aload_1
      14: iconst_1
      15: iaload
      16: ixor
      17: iastore
      18: aload_0
      19: iconst_2
      20: dup2
      21: iaload
      22: aload_1
      23: iconst_2
      24: iaload
      25: ixor
      26: iastore
      27: aload_0
      28: iconst_3
      29: dup2
      30: iaload
      31: aload_1
      32: iconst_3
      33: iaload
      34: ixor
      35: iastore
      36: return

  public static void xor(int[], int[], int[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: iaload
       5: aload_1
       6: iconst_0
       7: iaload
       8: ixor
       9: iastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: iaload
      15: aload_1
      16: iconst_1
      17: iaload
      18: ixor
      19: iastore
      20: aload_2
      21: iconst_2
      22: aload_0
      23: iconst_2
      24: iaload
      25: aload_1
      26: iconst_2
      27: iaload
      28: ixor
      29: iastore
      30: aload_2
      31: iconst_3
      32: aload_0
      33: iconst_3
      34: iaload
      35: aload_1
      36: iconst_3
      37: iaload
      38: ixor
      39: iastore
      40: return

  public static void xor(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: laload
       4: aload_1
       5: iconst_0
       6: laload
       7: lxor
       8: lastore
       9: aload_0
      10: iconst_1
      11: dup2
      12: laload
      13: aload_1
      14: iconst_1
      15: laload
      16: lxor
      17: lastore
      18: return

  public static void xor(long[], long[], long[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: laload
       5: aload_1
       6: iconst_0
       7: laload
       8: lxor
       9: lastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: laload
      15: aload_1
      16: iconst_1
      17: laload
      18: lxor
      19: lastore
      20: return
}
