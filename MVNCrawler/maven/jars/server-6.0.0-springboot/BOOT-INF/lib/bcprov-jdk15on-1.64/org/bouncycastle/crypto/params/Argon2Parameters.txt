public class org.bouncycastle.crypto.params.Argon2Parameters {
  public static final int ARGON2_d;

  public static final int ARGON2_i;

  public static final int ARGON2_id;

  public static final int ARGON2_VERSION_10;

  public static final int ARGON2_VERSION_13;

  private static final int DEFAULT_ITERATIONS;

  private static final int DEFAULT_MEMORY_COST;

  private static final int DEFAULT_LANES;

  private static final int DEFAULT_TYPE;

  private static final int DEFAULT_VERSION;

  private final byte[] salt;

  private final byte[] secret;

  private final byte[] additional;

  private final int iterations;

  private final int memory;

  private final int lanes;

  private final int version;

  private final int type;

  private final org.bouncycastle.crypto.CharToByteConverter converter;

  private org.bouncycastle.crypto.params.Argon2Parameters(int, byte[], byte[], byte[], int, int, int, int, org.bouncycastle.crypto.CharToByteConverter);
    Code:
       0: aload_0
       1: invokespecial #82                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokestatic  #85                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       9: putfield      #79                 // Field salt:[B
      12: aload_0
      13: aload_3
      14: invokestatic  #85                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      17: putfield      #80                 // Field secret:[B
      20: aload_0
      21: aload         4
      23: invokestatic  #85                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      26: putfield      #78                 // Field additional:[B
      29: aload_0
      30: iload         5
      32: putfield      #73                 // Field iterations:I
      35: aload_0
      36: iload         6
      38: putfield      #75                 // Field memory:I
      41: aload_0
      42: iload         7
      44: putfield      #74                 // Field lanes:I
      47: aload_0
      48: iload         8
      50: putfield      #77                 // Field version:I
      53: aload_0
      54: iload_1
      55: putfield      #76                 // Field type:I
      58: aload_0
      59: aload         9
      61: putfield      #81                 // Field converter:Lorg/bouncycastle/crypto/CharToByteConverter;
      64: return

  public byte[] getSalt();
    Code:
       0: aload_0
       1: getfield      #79                 // Field salt:[B
       4: invokestatic  #85                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getSecret();
    Code:
       0: aload_0
       1: getfield      #80                 // Field secret:[B
       4: invokestatic  #85                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getAdditional();
    Code:
       0: aload_0
       1: getfield      #78                 // Field additional:[B
       4: invokestatic  #85                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getIterations();
    Code:
       0: aload_0
       1: getfield      #73                 // Field iterations:I
       4: ireturn

  public int getMemory();
    Code:
       0: aload_0
       1: getfield      #75                 // Field memory:I
       4: ireturn

  public int getLanes();
    Code:
       0: aload_0
       1: getfield      #74                 // Field lanes:I
       4: ireturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #77                 // Field version:I
       4: ireturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #76                 // Field type:I
       4: ireturn

  public org.bouncycastle.crypto.CharToByteConverter getCharToByteConverter();
    Code:
       0: aload_0
       1: getfield      #81                 // Field converter:Lorg/bouncycastle/crypto/CharToByteConverter;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #79                 // Field salt:[B
       4: invokestatic  #84                 // Method org/bouncycastle/util/Arrays.clear:([B)V
       7: aload_0
       8: getfield      #80                 // Field secret:[B
      11: invokestatic  #84                 // Method org/bouncycastle/util/Arrays.clear:([B)V
      14: aload_0
      15: getfield      #78                 // Field additional:[B
      18: invokestatic  #84                 // Method org/bouncycastle/util/Arrays.clear:([B)V
      21: return

  org.bouncycastle.crypto.params.Argon2Parameters(int, byte[], byte[], byte[], int, int, int, int, org.bouncycastle.crypto.CharToByteConverter, org.bouncycastle.crypto.params.Argon2Parameters$1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: aload         9
      16: invokespecial #83                 // Method "<init>":(I[B[B[BIIIILorg/bouncycastle/crypto/CharToByteConverter;)V
      19: return
}
