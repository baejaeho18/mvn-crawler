public class org.bouncycastle.jcajce.provider.asymmetric.edec.BCEdDSAPrivateKey implements org.bouncycastle.jcajce.interfaces.EdDSAKey,java.security.PrivateKey {
  static final long serialVersionUID;

  private transient org.bouncycastle.crypto.params.AsymmetricKeyParameter eddsaPrivateKey;

  private final boolean hasPublicKey;

  private final byte[] attributes;

  org.bouncycastle.jcajce.provider.asymmetric.edec.BCEdDSAPrivateKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #142                // Field hasPublicKey:Z
       9: aload_0
      10: aconst_null
      11: putfield      #143                // Field attributes:[B
      14: aload_0
      15: aload_1
      16: putfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      19: return

  org.bouncycastle.jcajce.provider.asymmetric.edec.BCEdDSAPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #155                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.hasPublicKey:()Z
       9: putfield      #142                // Field hasPublicKey:Z
      12: aload_0
      13: aload_1
      14: invokevirtual #158                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getAttributes:()Lorg/bouncycastle/asn1/ASN1Set;
      17: ifnull        30
      20: aload_1
      21: invokevirtual #158                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getAttributes:()Lorg/bouncycastle/asn1/ASN1Set;
      24: invokevirtual #153                // Method org/bouncycastle/asn1/ASN1Set.getEncoded:()[B
      27: goto          31
      30: aconst_null
      31: putfield      #143                // Field attributes:[B
      34: aload_0
      35: aload_1
      36: invokespecial #170                // Method populateFromPrivateKeyInfo:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)V
      39: return

  private void populateFromPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #157                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.parsePrivateKey:()Lorg/bouncycastle/asn1/ASN1Encodable;
       4: astore_2
       5: getstatic     #141                // Field org/bouncycastle/asn1/edec/EdECObjectIdentifiers.id_Ed448:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       8: aload_1
       9: invokevirtual #159                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getPrivateKeyAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      12: invokevirtual #162                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getAlgorithm:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      15: invokevirtual #150                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.equals:(Lorg/bouncycastle/asn1/ASN1Primitive;)Z
      18: ifeq          43
      21: aload_0
      22: new           #81                 // class org/bouncycastle/crypto/params/Ed448PrivateKeyParameters
      25: dup
      26: aload_2
      27: invokestatic  #152                // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      30: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      33: iconst_0
      34: invokespecial #165                // Method org/bouncycastle/crypto/params/Ed448PrivateKeyParameters."<init>":([BI)V
      37: putfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      40: goto          62
      43: aload_0
      44: new           #80                 // class org/bouncycastle/crypto/params/Ed25519PrivateKeyParameters
      47: dup
      48: aload_2
      49: invokestatic  #152                // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      52: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      55: iconst_0
      56: invokespecial #163                // Method org/bouncycastle/crypto/params/Ed25519PrivateKeyParameters."<init>":([BI)V
      59: putfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      62: return

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: instanceof    #81                 // class org/bouncycastle/crypto/params/Ed448PrivateKeyParameters
       7: ifeq          15
      10: ldc           #2                  // String Ed448
      12: goto          17
      15: ldc           #1                  // String Ed25519
      17: areturn

  public java.lang.String getFormat();
    Code:
       0: ldc           #3                  // String PKCS#8
       2: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #143                // Field attributes:[B
       4: invokestatic  #154                // Method org/bouncycastle/asn1/ASN1Set.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Set;
       7: astore_1
       8: aload_0
       9: getfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      12: aload_1
      13: invokestatic  #167                // Method org/bouncycastle/crypto/util/PrivateKeyInfoFactory.createPrivateKeyInfo:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/asn1/ASN1Set;)Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;
      16: astore_2
      17: aload_0
      18: getfield      #142                // Field hasPublicKey:Z
      21: ifeq          29
      24: aload_2
      25: invokevirtual #156                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getEncoded:()[B
      28: areturn
      29: new           #78                 // class org/bouncycastle/asn1/pkcs/PrivateKeyInfo
      32: dup
      33: aload_2
      34: invokevirtual #159                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getPrivateKeyAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      37: aload_2
      38: invokevirtual #157                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.parsePrivateKey:()Lorg/bouncycastle/asn1/ASN1Encodable;
      41: aload_1
      42: invokespecial #161                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo."<init>":(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/ASN1Encodable;Lorg/bouncycastle/asn1/ASN1Set;)V
      45: invokevirtual #156                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getEncoded:()[B
      48: areturn
      49: astore_1
      50: aconst_null
      51: areturn
    Exception table:
       from    to  target type
           0    28    49   Class java/io/IOException
          29    48    49   Class java/io/IOException

  org.bouncycastle.crypto.params.AsymmetricKeyParameter engineGetKeyParameters();
    Code:
       0: aload_0
       1: getfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: instanceof    #81                 // class org/bouncycastle/crypto/params/Ed448PrivateKeyParameters
       7: ifeq          24
      10: aload_0
      11: getfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      14: checkcast     #81                 // class org/bouncycastle/crypto/params/Ed448PrivateKeyParameters
      17: invokevirtual #166                // Method org/bouncycastle/crypto/params/Ed448PrivateKeyParameters.generatePublicKey:()Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      20: astore_1
      21: goto          35
      24: aload_0
      25: getfield      #144                // Field eddsaPrivateKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      28: checkcast     #80                 // class org/bouncycastle/crypto/params/Ed25519PrivateKeyParameters
      31: invokevirtual #164                // Method org/bouncycastle/crypto/params/Ed25519PrivateKeyParameters.generatePublicKey:()Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      34: astore_1
      35: ldc           #4                  // String Private Key
      37: aload_0
      38: invokevirtual #169                // Method getAlgorithm:()Ljava/lang/String;
      41: aload_1
      42: invokestatic  #171                // Method org/bouncycastle/jcajce/provider/asymmetric/edec/Utils.keyToString:(Ljava/lang/String;Ljava/lang/String;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)Ljava/lang/String;
      45: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #84                 // class org/bouncycastle/jcajce/provider/asymmetric/edec/BCEdDSAPrivateKey
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #84                 // class org/bouncycastle/jcajce/provider/asymmetric/edec/BCEdDSAPrivateKey
      20: astore_2
      21: aload_2
      22: invokevirtual #168                // Method getEncoded:()[B
      25: aload_0
      26: invokevirtual #168                // Method getEncoded:()[B
      29: invokestatic  #173                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method getEncoded:()[B
       4: invokestatic  #172                // Method org/bouncycastle/util/Arrays.hashCode:([B)I
       7: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #145                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #146                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: checkcast     #67                 // class "[B"
      11: checkcast     #67                 // class "[B"
      14: astore_2
      15: aload_0
      16: aload_2
      17: invokestatic  #160                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;
      20: invokespecial #170                // Method populateFromPrivateKeyInfo:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)V
      23: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #147                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #168                // Method getEncoded:()[B
       9: invokevirtual #148                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return
}
