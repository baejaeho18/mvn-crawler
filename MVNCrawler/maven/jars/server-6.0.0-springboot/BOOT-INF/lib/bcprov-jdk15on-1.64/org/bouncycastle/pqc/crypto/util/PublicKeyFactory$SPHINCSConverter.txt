class org.bouncycastle.pqc.crypto.util.PublicKeyFactory$SPHINCSConverter extends org.bouncycastle.pqc.crypto.util.PublicKeyFactory$SubjectPublicKeyInfoConverter {
  private org.bouncycastle.pqc.crypto.util.PublicKeyFactory$SPHINCSConverter();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #57                 // Method org/bouncycastle/pqc/crypto/util/PublicKeyFactory$SubjectPublicKeyInfoConverter."<init>":(Lorg/bouncycastle/pqc/crypto/util/PublicKeyFactory$1;)V
       5: return

  org.bouncycastle.crypto.params.AsymmetricKeyParameter getPublicKeyParameters(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #27                 // class org/bouncycastle/pqc/crypto/sphincs/SPHINCSPublicKeyParameters
       3: dup
       4: aload_1
       5: invokevirtual #52                 // Method org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.getPublicKeyData:()Lorg/bouncycastle/asn1/DERBitString;
       8: invokevirtual #50                 // Method org/bouncycastle/asn1/DERBitString.getBytes:()[B
      11: aload_1
      12: invokevirtual #53                 // Method org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.getAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      15: invokevirtual #51                 // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getParameters:()Lorg/bouncycastle/asn1/ASN1Encodable;
      18: invokestatic  #54                 // Method org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/pqc/asn1/SPHINCS256KeyParams;
      21: invokestatic  #58                 // Method org/bouncycastle/pqc/crypto/util/Utils.sphincs256LookupTreeAlgName:(Lorg/bouncycastle/pqc/asn1/SPHINCS256KeyParams;)Ljava/lang/String;
      24: invokespecial #55                 // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPublicKeyParameters."<init>":([BLjava/lang/String;)V
      27: areturn

  org.bouncycastle.pqc.crypto.util.PublicKeyFactory$SPHINCSConverter(org.bouncycastle.pqc.crypto.util.PublicKeyFactory$1);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method "<init>":()V
       4: return
}
