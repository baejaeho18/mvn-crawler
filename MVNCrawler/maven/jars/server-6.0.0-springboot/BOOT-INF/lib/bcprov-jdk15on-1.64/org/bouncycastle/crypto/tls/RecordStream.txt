class org.bouncycastle.crypto.tls.RecordStream {
  private static int DEFAULT_PLAINTEXT_LIMIT;

  static final int TLS_HEADER_SIZE;

  static final int TLS_HEADER_TYPE_OFFSET;

  static final int TLS_HEADER_VERSION_OFFSET;

  static final int TLS_HEADER_LENGTH_OFFSET;

  private org.bouncycastle.crypto.tls.TlsProtocol handler;

  private java.io.InputStream input;

  private java.io.OutputStream output;

  private org.bouncycastle.crypto.tls.TlsCompression pendingCompression;

  private org.bouncycastle.crypto.tls.TlsCompression readCompression;

  private org.bouncycastle.crypto.tls.TlsCompression writeCompression;

  private org.bouncycastle.crypto.tls.TlsCipher pendingCipher;

  private org.bouncycastle.crypto.tls.TlsCipher readCipher;

  private org.bouncycastle.crypto.tls.TlsCipher writeCipher;

  private org.bouncycastle.crypto.tls.RecordStream$SequenceNumber readSeqNo;

  private org.bouncycastle.crypto.tls.RecordStream$SequenceNumber writeSeqNo;

  private java.io.ByteArrayOutputStream buffer;

  private org.bouncycastle.crypto.tls.TlsHandshakeHash handshakeHash;

  private org.bouncycastle.util.io.SimpleOutputStream handshakeHashUpdater;

  private org.bouncycastle.crypto.tls.ProtocolVersion readVersion;

  private org.bouncycastle.crypto.tls.ProtocolVersion writeVersion;

  private boolean restrictReadVersion;

  private int plaintextLimit;

  private int compressedLimit;

  private int ciphertextLimit;

  org.bouncycastle.crypto.tls.RecordStream(org.bouncycastle.crypto.tls.TlsProtocol, java.io.InputStream, java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #249                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       9: aload_0
      10: aconst_null
      11: putfield      #236                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      14: aload_0
      15: aconst_null
      16: putfield      #237                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      19: aload_0
      20: aconst_null
      21: putfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      24: aload_0
      25: aconst_null
      26: putfield      #233                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      29: aload_0
      30: aconst_null
      31: putfield      #234                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      34: aload_0
      35: new           #127                // class org/bouncycastle/crypto/tls/RecordStream$SequenceNumber
      38: dup
      39: aconst_null
      40: invokespecial #260                // Method org/bouncycastle/crypto/tls/RecordStream$SequenceNumber."<init>":(Lorg/bouncycastle/crypto/tls/RecordStream$1;)V
      43: putfield      #230                // Field readSeqNo:Lorg/bouncycastle/crypto/tls/RecordStream$SequenceNumber;
      46: aload_0
      47: new           #127                // class org/bouncycastle/crypto/tls/RecordStream$SequenceNumber
      50: dup
      51: aconst_null
      52: invokespecial #260                // Method org/bouncycastle/crypto/tls/RecordStream$SequenceNumber."<init>":(Lorg/bouncycastle/crypto/tls/RecordStream$1;)V
      55: putfield      #231                // Field writeSeqNo:Lorg/bouncycastle/crypto/tls/RecordStream$SequenceNumber;
      58: aload_0
      59: new           #117                // class java/io/ByteArrayOutputStream
      62: dup
      63: invokespecial #241                // Method java/io/ByteArrayOutputStream."<init>":()V
      66: putfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
      69: aload_0
      70: aconst_null
      71: putfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      74: aload_0
      75: new           #126                // class org/bouncycastle/crypto/tls/RecordStream$1
      78: dup
      79: aload_0
      80: invokespecial #258                // Method org/bouncycastle/crypto/tls/RecordStream$1."<init>":(Lorg/bouncycastle/crypto/tls/RecordStream;)V
      83: putfield      #240                // Field handshakeHashUpdater:Lorg/bouncycastle/util/io/SimpleOutputStream;
      86: aload_0
      87: aconst_null
      88: putfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      91: aload_0
      92: aconst_null
      93: putfield      #229                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      96: aload_0
      97: iconst_1
      98: putfield      #224                // Field restrictReadVersion:Z
     101: aload_0
     102: aload_1
     103: putfield      #239                // Field handler:Lorg/bouncycastle/crypto/tls/TlsProtocol;
     106: aload_0
     107: aload_2
     108: putfield      #226                // Field input:Ljava/io/InputStream;
     111: aload_0
     112: aload_3
     113: putfield      #227                // Field output:Ljava/io/OutputStream;
     116: aload_0
     117: new           #133                // class org/bouncycastle/crypto/tls/TlsNullCompression
     120: dup
     121: invokespecial #263                // Method org/bouncycastle/crypto/tls/TlsNullCompression."<init>":()V
     124: putfield      #236                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
     127: aload_0
     128: aload_0
     129: getfield      #236                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
     132: putfield      #237                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
     135: return

  void init(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: new           #132                // class org/bouncycastle/crypto/tls/TlsNullCipher
       4: dup
       5: aload_1
       6: invokespecial #262                // Method org/bouncycastle/crypto/tls/TlsNullCipher."<init>":(Lorg/bouncycastle/crypto/tls/TlsContext;)V
       9: putfield      #233                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      12: aload_0
      13: aload_0
      14: getfield      #233                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      17: putfield      #234                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      20: aload_0
      21: new           #123                // class org/bouncycastle/crypto/tls/DeferredHash
      24: dup
      25: invokespecial #251                // Method org/bouncycastle/crypto/tls/DeferredHash."<init>":()V
      28: putfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      31: aload_0
      32: getfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      35: aload_1
      36: invokeinterface #278,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V
      41: aload_0
      42: getstatic     #220                // Field DEFAULT_PLAINTEXT_LIMIT:I
      45: invokevirtual #254                // Method setPlaintextLimit:(I)V
      48: return

  int getPlaintextLimit();
    Code:
       0: aload_0
       1: getfield      #223                // Field plaintextLimit:I
       4: ireturn

  void setPlaintextLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #223                // Field plaintextLimit:I
       5: aload_0
       6: aload_0
       7: getfield      #223                // Field plaintextLimit:I
      10: sipush        1024
      13: iadd
      14: putfield      #222                // Field compressedLimit:I
      17: aload_0
      18: aload_0
      19: getfield      #222                // Field compressedLimit:I
      22: sipush        1024
      25: iadd
      26: putfield      #221                // Field ciphertextLimit:I
      29: return

  org.bouncycastle.crypto.tls.ProtocolVersion getReadVersion();
    Code:
       0: aload_0
       1: getfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: areturn

  void setReadVersion(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       5: return

  void setWriteVersion(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #229                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       5: return

  void setRestrictReadVersion(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #224                // Field restrictReadVersion:Z
       5: return

  void setPendingConnectionState(org.bouncycastle.crypto.tls.TlsCompression, org.bouncycastle.crypto.tls.TlsCipher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       5: aload_0
       6: aload_2
       7: putfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      10: return

  void sentWriteCipherSpec() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       4: ifnull        14
       7: aload_0
       8: getfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      11: ifnonnull     24
      14: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      17: dup
      18: bipush        40
      20: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      23: athrow
      24: aload_0
      25: aload_0
      26: getfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      29: putfield      #237                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      32: aload_0
      33: aload_0
      34: getfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      37: putfield      #234                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      40: aload_0
      41: new           #127                // class org/bouncycastle/crypto/tls/RecordStream$SequenceNumber
      44: dup
      45: aconst_null
      46: invokespecial #260                // Method org/bouncycastle/crypto/tls/RecordStream$SequenceNumber."<init>":(Lorg/bouncycastle/crypto/tls/RecordStream$1;)V
      49: putfield      #231                // Field writeSeqNo:Lorg/bouncycastle/crypto/tls/RecordStream$SequenceNumber;
      52: return

  void receivedReadCipherSpec() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       4: ifnull        14
       7: aload_0
       8: getfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      11: ifnonnull     24
      14: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      17: dup
      18: bipush        40
      20: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      23: athrow
      24: aload_0
      25: aload_0
      26: getfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      29: putfield      #236                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      32: aload_0
      33: aload_0
      34: getfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      37: putfield      #233                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      40: aload_0
      41: new           #127                // class org/bouncycastle/crypto/tls/RecordStream$SequenceNumber
      44: dup
      45: aconst_null
      46: invokespecial #260                // Method org/bouncycastle/crypto/tls/RecordStream$SequenceNumber."<init>":(Lorg/bouncycastle/crypto/tls/RecordStream$1;)V
      49: putfield      #230                // Field readSeqNo:Lorg/bouncycastle/crypto/tls/RecordStream$SequenceNumber;
      52: return

  void finaliseHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #236                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       4: aload_0
       5: getfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       8: if_acmpne     44
      11: aload_0
      12: getfield      #237                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      15: aload_0
      16: getfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      19: if_acmpne     44
      22: aload_0
      23: getfield      #233                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      26: aload_0
      27: getfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      30: if_acmpne     44
      33: aload_0
      34: getfield      #234                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      37: aload_0
      38: getfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      41: if_acmpeq     54
      44: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      47: dup
      48: bipush        40
      50: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      53: athrow
      54: aload_0
      55: aconst_null
      56: putfield      #235                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      59: aload_0
      60: aconst_null
      61: putfield      #232                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      64: return

  void checkRecordHeader(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: invokestatic  #269                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
       5: istore_2
       6: iload_2
       7: bipush        10
       9: invokestatic  #256                // Method checkType:(SS)V
      12: aload_0
      13: getfield      #224                // Field restrictReadVersion:Z
      16: ifne          49
      19: aload_1
      20: iconst_1
      21: invokestatic  #268                // Method org/bouncycastle/crypto/tls/TlsUtils.readVersionRaw:([BI)I
      24: istore_3
      25: iload_3
      26: sipush        -256
      29: iand
      30: sipush        768
      33: if_icmpeq     46
      36: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      39: dup
      40: bipush        47
      42: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      45: athrow
      46: goto          86
      49: aload_1
      50: iconst_1
      51: invokestatic  #273                // Method org/bouncycastle/crypto/tls/TlsUtils.readVersion:([BI)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      54: astore_3
      55: aload_0
      56: getfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      59: ifnonnull     65
      62: goto          86
      65: aload_3
      66: aload_0
      67: getfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      70: invokevirtual #252                // Method org/bouncycastle/crypto/tls/ProtocolVersion.equals:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      73: ifne          86
      76: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      79: dup
      80: bipush        47
      82: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      85: athrow
      86: aload_1
      87: iconst_3
      88: invokestatic  #267                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
      91: istore_3
      92: iload_3
      93: aload_0
      94: getfield      #221                // Field ciphertextLimit:I
      97: bipush        22
      99: invokestatic  #255                // Method checkLength:(IIS)V
     102: return

  boolean readRecord() throws java.io.IOException;
    Code:
       0: iconst_5
       1: aload_0
       2: getfield      #226                // Field input:Ljava/io/InputStream;
       5: invokestatic  #270                // Method org/bouncycastle/crypto/tls/TlsUtils.readAllOrNothing:(ILjava/io/InputStream;)[B
       8: astore_1
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: iconst_0
      17: invokestatic  #269                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      20: istore_2
      21: iload_2
      22: bipush        10
      24: invokestatic  #256                // Method checkType:(SS)V
      27: aload_0
      28: getfield      #224                // Field restrictReadVersion:Z
      31: ifne          64
      34: aload_1
      35: iconst_1
      36: invokestatic  #268                // Method org/bouncycastle/crypto/tls/TlsUtils.readVersionRaw:([BI)I
      39: istore_3
      40: iload_3
      41: sipush        -256
      44: iand
      45: sipush        768
      48: if_icmpeq     61
      51: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      54: dup
      55: bipush        47
      57: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      60: athrow
      61: goto          106
      64: aload_1
      65: iconst_1
      66: invokestatic  #273                // Method org/bouncycastle/crypto/tls/TlsUtils.readVersion:([BI)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      69: astore_3
      70: aload_0
      71: getfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      74: ifnonnull     85
      77: aload_0
      78: aload_3
      79: putfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      82: goto          106
      85: aload_3
      86: aload_0
      87: getfield      #228                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      90: invokevirtual #252                // Method org/bouncycastle/crypto/tls/ProtocolVersion.equals:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      93: ifne          106
      96: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      99: dup
     100: bipush        47
     102: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     105: athrow
     106: aload_1
     107: iconst_3
     108: invokestatic  #267                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
     111: istore_3
     112: iload_3
     113: aload_0
     114: getfield      #221                // Field ciphertextLimit:I
     117: bipush        22
     119: invokestatic  #255                // Method checkLength:(IIS)V
     122: aload_0
     123: iload_2
     124: aload_0
     125: getfield      #226                // Field input:Ljava/io/InputStream;
     128: iload_3
     129: invokevirtual #257                // Method decodeAndVerify:(SLjava/io/InputStream;I)[B
     132: astore        4
     134: aload_0
     135: getfield      #239                // Field handler:Lorg/bouncycastle/crypto/tls/TlsProtocol;
     138: iload_2
     139: aload         4
     141: iconst_0
     142: aload         4
     144: arraylength
     145: invokevirtual #264                // Method org/bouncycastle/crypto/tls/TlsProtocol.processRecord:(S[BII)V
     148: iconst_1
     149: ireturn

  byte[] decodeAndVerify(short, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_2
       2: invokestatic  #271                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
       5: astore        4
       7: aload_0
       8: getfield      #230                // Field readSeqNo:Lorg/bouncycastle/crypto/tls/RecordStream$SequenceNumber;
      11: bipush        10
      13: invokevirtual #259                // Method org/bouncycastle/crypto/tls/RecordStream$SequenceNumber.nextValue:(S)J
      16: lstore        5
      18: aload_0
      19: getfield      #233                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      22: lload         5
      24: iload_1
      25: aload         4
      27: iconst_0
      28: aload         4
      30: arraylength
      31: invokeinterface #274,  7          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCipher.decodeCiphertext:(JS[BII)[B
      36: astore        7
      38: aload         7
      40: arraylength
      41: aload_0
      42: getfield      #222                // Field compressedLimit:I
      45: bipush        22
      47: invokestatic  #255                // Method checkLength:(IIS)V
      50: aload_0
      51: getfield      #236                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      54: aload_0
      55: getfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
      58: invokeinterface #277,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCompression.decompress:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      63: astore        8
      65: aload         8
      67: aload_0
      68: getfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
      71: if_acmpeq     96
      74: aload         8
      76: aload         7
      78: iconst_0
      79: aload         7
      81: arraylength
      82: invokevirtual #248                // Method java/io/OutputStream.write:([BII)V
      85: aload         8
      87: invokevirtual #246                // Method java/io/OutputStream.flush:()V
      90: aload_0
      91: invokespecial #253                // Method getBufferContents:()[B
      94: astore        7
      96: aload         7
      98: arraylength
      99: aload_0
     100: getfield      #223                // Field plaintextLimit:I
     103: bipush        30
     105: invokestatic  #255                // Method checkLength:(IIS)V
     108: aload         7
     110: arraylength
     111: iconst_1
     112: if_icmpge     131
     115: iload_1
     116: bipush        23
     118: if_icmpeq     131
     121: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     124: dup
     125: bipush        47
     127: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     130: athrow
     131: aload         7
     133: areturn

  void writeRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #229                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: ifnonnull     8
       7: return
       8: iload_1
       9: bipush        80
      11: invokestatic  #256                // Method checkType:(SS)V
      14: iload         4
      16: aload_0
      17: getfield      #223                // Field plaintextLimit:I
      20: bipush        80
      22: invokestatic  #255                // Method checkLength:(IIS)V
      25: iload         4
      27: iconst_1
      28: if_icmpge     47
      31: iload_1
      32: bipush        23
      34: if_icmpeq     47
      37: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      40: dup
      41: bipush        80
      43: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      46: athrow
      47: aload_0
      48: getfield      #237                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      51: aload_0
      52: getfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
      55: invokeinterface #276,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCompression.compress:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      60: astore        5
      62: aload_0
      63: getfield      #231                // Field writeSeqNo:Lorg/bouncycastle/crypto/tls/RecordStream$SequenceNumber;
      66: bipush        80
      68: invokevirtual #259                // Method org/bouncycastle/crypto/tls/RecordStream$SequenceNumber.nextValue:(S)J
      71: lstore        6
      73: aload         5
      75: aload_0
      76: getfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
      79: if_acmpne     103
      82: aload_0
      83: getfield      #234                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      86: lload         6
      88: iload_1
      89: aload_2
      90: iload_3
      91: iload         4
      93: invokeinterface #275,  7          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCipher.encodePlaintext:(JS[BII)[B
      98: astore        8
     100: goto          157
     103: aload         5
     105: aload_2
     106: iload_3
     107: iload         4
     109: invokevirtual #248                // Method java/io/OutputStream.write:([BII)V
     112: aload         5
     114: invokevirtual #246                // Method java/io/OutputStream.flush:()V
     117: aload_0
     118: invokespecial #253                // Method getBufferContents:()[B
     121: astore        9
     123: aload         9
     125: arraylength
     126: iload         4
     128: sipush        1024
     131: iadd
     132: bipush        80
     134: invokestatic  #255                // Method checkLength:(IIS)V
     137: aload_0
     138: getfield      #234                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
     141: lload         6
     143: iload_1
     144: aload         9
     146: iconst_0
     147: aload         9
     149: arraylength
     150: invokeinterface #275,  7          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCipher.encodePlaintext:(JS[BII)[B
     155: astore        8
     157: aload         8
     159: arraylength
     160: aload_0
     161: getfield      #221                // Field ciphertextLimit:I
     164: bipush        80
     166: invokestatic  #255                // Method checkLength:(IIS)V
     169: aload         8
     171: arraylength
     172: iconst_5
     173: iadd
     174: newarray       byte
     176: astore        9
     178: iload_1
     179: aload         9
     181: iconst_0
     182: invokestatic  #266                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(S[BI)V
     185: aload_0
     186: getfield      #229                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
     189: aload         9
     191: iconst_1
     192: invokestatic  #272                // Method org/bouncycastle/crypto/tls/TlsUtils.writeVersion:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;[BI)V
     195: aload         8
     197: arraylength
     198: aload         9
     200: iconst_3
     201: invokestatic  #265                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(I[BI)V
     204: aload         8
     206: iconst_0
     207: aload         9
     209: iconst_5
     210: aload         8
     212: arraylength
     213: invokestatic  #250                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     216: aload_0
     217: getfield      #227                // Field output:Ljava/io/OutputStream;
     220: aload         9
     222: invokevirtual #247                // Method java/io/OutputStream.write:([B)V
     225: aload_0
     226: getfield      #227                // Field output:Ljava/io/OutputStream;
     229: invokevirtual #246                // Method java/io/OutputStream.flush:()V
     232: return

  void notifyHelloComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       5: invokeinterface #279,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.notifyPRFDetermined:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: putfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      13: return

  org.bouncycastle.crypto.tls.TlsHandshakeHash getHandshakeHash();
    Code:
       0: aload_0
       1: getfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: areturn

  java.io.OutputStream getHandshakeHashUpdater();
    Code:
       0: aload_0
       1: getfield      #240                // Field handshakeHashUpdater:Lorg/bouncycastle/util/io/SimpleOutputStream;
       4: areturn

  org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish();
    Code:
       0: aload_0
       1: getfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: invokeinterface #280,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.stopTracking:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      15: putfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      18: aload_1
      19: areturn

  void safeClose();
    Code:
       0: aload_0
       1: getfield      #226                // Field input:Ljava/io/InputStream;
       4: invokevirtual #244                // Method java/io/InputStream.close:()V
       7: goto          11
      10: astore_1
      11: aload_0
      12: getfield      #227                // Field output:Ljava/io/OutputStream;
      15: invokevirtual #245                // Method java/io/OutputStream.close:()V
      18: goto          22
      21: astore_1
      22: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException
          11    18    21   Class java/io/IOException

  void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #227                // Field output:Ljava/io/OutputStream;
       4: invokevirtual #246                // Method java/io/OutputStream.flush:()V
       7: return

  private byte[] getBufferContents();
    Code:
       0: aload_0
       1: getfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #243                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       7: astore_1
       8: aload_0
       9: getfield      #225                // Field buffer:Ljava/io/ByteArrayOutputStream;
      12: invokevirtual #242                // Method java/io/ByteArrayOutputStream.reset:()V
      15: aload_1
      16: areturn

  private static void checkType(short, short) throws java.io.IOException;
    Code:
       0: iload_0
       1: tableswitch   { // 20 to 23
                    20: 32
                    21: 32
                    22: 32
                    23: 32
               default: 35
          }
      32: goto          44
      35: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      38: dup
      39: iload_1
      40: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      43: athrow
      44: return

  private static void checkLength(int, int, short) throws java.io.IOException;
    Code:
       0: iload_0
       1: iload_1
       2: if_icmple     14
       5: new           #130                // class org/bouncycastle/crypto/tls/TlsFatalAlert
       8: dup
       9: iload_2
      10: invokespecial #261                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      13: athrow
      14: return

  static org.bouncycastle.crypto.tls.TlsHandshakeHash access$100(org.bouncycastle.crypto.tls.RecordStream);
    Code:
       0: aload_0
       1: getfield      #238                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: areturn

  static {};
    Code:
       0: sipush        16384
       3: putstatic     #220                // Field DEFAULT_PLAINTEXT_LIMIT:I
       6: return
}
