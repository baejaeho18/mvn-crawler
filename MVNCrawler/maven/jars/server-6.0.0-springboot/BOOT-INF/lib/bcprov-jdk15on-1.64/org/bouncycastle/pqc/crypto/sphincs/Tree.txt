class org.bouncycastle.pqc.crypto.sphincs.Tree {
  org.bouncycastle.pqc.crypto.sphincs.Tree();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: return

  static void l_tree(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, byte[], int, byte[], int);
    Code:
       0: bipush        67
       2: istore        7
       4: iconst_0
       5: istore        9
       7: iconst_0
       8: istore        8
      10: iload         8
      12: bipush        7
      14: if_icmpge     129
      17: iconst_0
      18: istore        9
      20: iload         9
      22: iload         7
      24: iconst_1
      25: iushr
      26: if_icmpge     72
      29: aload_0
      30: aload_3
      31: iload         4
      33: iload         9
      35: bipush        32
      37: imul
      38: iadd
      39: aload_3
      40: iload         4
      42: iload         9
      44: iconst_2
      45: imul
      46: bipush        32
      48: imul
      49: iadd
      50: aload         5
      52: iload         6
      54: iload         8
      56: iconst_2
      57: imul
      58: bipush        32
      60: imul
      61: iadd
      62: invokevirtual #45                 // Method org/bouncycastle/pqc/crypto/sphincs/HashFunctions.hash_2n_n_mask:([BI[BI[BI)I
      65: pop
      66: iinc          9, 1
      69: goto          20
      72: iload         7
      74: iconst_1
      75: iand
      76: ifeq          117
      79: aload_3
      80: iload         4
      82: iload         7
      84: iconst_1
      85: isub
      86: bipush        32
      88: imul
      89: iadd
      90: aload_3
      91: iload         4
      93: iload         7
      95: iconst_1
      96: iushr
      97: bipush        32
      99: imul
     100: iadd
     101: bipush        32
     103: invokestatic  #44                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     106: iload         7
     108: iconst_1
     109: iushr
     110: iconst_1
     111: iadd
     112: istore        7
     114: goto          123
     117: iload         7
     119: iconst_1
     120: iushr
     121: istore        7
     123: iinc          8, 1
     126: goto          10
     129: aload_3
     130: iload         4
     132: aload_1
     133: iload_2
     134: bipush        32
     136: invokestatic  #44                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     139: return

  static void treehash(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, int, byte[], org.bouncycastle.pqc.crypto.sphincs.Tree$leafaddr, byte[], int);
    Code:
       0: new           #25                 // class org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr
       3: dup
       4: aload         5
       6: invokespecial #49                 // Method org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr."<init>":(Lorg/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr;)V
       9: astore        8
      11: iload_3
      12: iconst_1
      13: iadd
      14: bipush        32
      16: imul
      17: newarray       byte
      19: astore        11
      21: iload_3
      22: iconst_1
      23: iadd
      24: newarray       int
      26: astore        12
      28: iconst_0
      29: istore        13
      31: aload         8
      33: getfield      #42                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.subleaf:J
      36: iconst_1
      37: iload_3
      38: ishl
      39: i2l
      40: ladd
      41: l2i
      42: istore        9
      44: aload         8
      46: getfield      #42                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.subleaf:J
      49: iload         9
      51: i2l
      52: lcmp
      53: ifge          185
      56: aload_0
      57: aload         11
      59: iload         13
      61: bipush        32
      63: imul
      64: aload         6
      66: iload         7
      68: aload         4
      70: aload         8
      72: invokestatic  #48                 // Method gen_leaf_wots:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BI[BLorg/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr;)V
      75: aload         12
      77: iload         13
      79: iconst_0
      80: iastore
      81: iinc          13, 1
      84: iload         13
      86: iconst_1
      87: if_icmple     171
      90: aload         12
      92: iload         13
      94: iconst_1
      95: isub
      96: iaload
      97: aload         12
      99: iload         13
     101: iconst_2
     102: isub
     103: iaload
     104: if_icmpne     171
     107: iconst_2
     108: aload         12
     110: iload         13
     112: iconst_1
     113: isub
     114: iaload
     115: bipush        7
     117: iadd
     118: imul
     119: bipush        32
     121: imul
     122: istore        14
     124: aload_0
     125: aload         11
     127: iload         13
     129: iconst_2
     130: isub
     131: bipush        32
     133: imul
     134: aload         11
     136: iload         13
     138: iconst_2
     139: isub
     140: bipush        32
     142: imul
     143: aload         6
     145: iload         7
     147: iload         14
     149: iadd
     150: invokevirtual #45                 // Method org/bouncycastle/pqc/crypto/sphincs/HashFunctions.hash_2n_n_mask:([BI[BI[BI)I
     153: pop
     154: aload         12
     156: iload         13
     158: iconst_2
     159: isub
     160: dup2
     161: iaload
     162: iconst_1
     163: iadd
     164: iastore
     165: iinc          13, -1
     168: goto          84
     171: aload         8
     173: dup
     174: getfield      #42                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.subleaf:J
     177: lconst_1
     178: ladd
     179: putfield      #42                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.subleaf:J
     182: goto          44
     185: iconst_0
     186: istore        10
     188: iload         10
     190: bipush        32
     192: if_icmpge     212
     195: aload_1
     196: iload_2
     197: iload         10
     199: iadd
     200: aload         11
     202: iload         10
     204: baload
     205: bastore
     206: iinc          10, 1
     209: goto          188
     212: return

  static void gen_leaf_wots(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, byte[], int, byte[], org.bouncycastle.pqc.crypto.sphincs.Tree$leafaddr);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore        7
       6: sipush        2144
       9: newarray       byte
      11: astore        8
      13: new           #26                 // class org/bouncycastle/pqc/crypto/sphincs/Wots
      16: dup
      17: invokespecial #50                 // Method org/bouncycastle/pqc/crypto/sphincs/Wots."<init>":()V
      20: astore        9
      22: aload_0
      23: aload         7
      25: iconst_0
      26: aload         5
      28: aload         6
      30: invokestatic  #46                 // Method org/bouncycastle/pqc/crypto/sphincs/Seed.get_seed:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BLorg/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr;)V
      33: aload         9
      35: aload_0
      36: aload         8
      38: iconst_0
      39: aload         7
      41: iconst_0
      42: aload_3
      43: iload         4
      45: invokevirtual #51                 // Method org/bouncycastle/pqc/crypto/sphincs/Wots.wots_pkgen:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BI[BI)V
      48: aload_0
      49: aload_1
      50: iload_2
      51: aload         8
      53: iconst_0
      54: aload_3
      55: iload         4
      57: invokestatic  #47                 // Method l_tree:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BI[BI)V
      60: return
}
