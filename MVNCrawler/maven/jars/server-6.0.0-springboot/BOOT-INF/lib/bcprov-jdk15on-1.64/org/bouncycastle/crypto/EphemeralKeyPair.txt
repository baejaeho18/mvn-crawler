public class org.bouncycastle.crypto.EphemeralKeyPair {
  private org.bouncycastle.crypto.AsymmetricCipherKeyPair keyPair;

  private org.bouncycastle.crypto.KeyEncoder publicKeyEncoder;

  public org.bouncycastle.crypto.EphemeralKeyPair(org.bouncycastle.crypto.AsymmetricCipherKeyPair, org.bouncycastle.crypto.KeyEncoder);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #29                 // Field keyPair:Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       9: aload_0
      10: aload_2
      11: putfield      #30                 // Field publicKeyEncoder:Lorg/bouncycastle/crypto/KeyEncoder;
      14: return

  public org.bouncycastle.crypto.AsymmetricCipherKeyPair getKeyPair();
    Code:
       0: aload_0
       1: getfield      #29                 // Field keyPair:Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       4: areturn

  public byte[] getEncodedPublicKey();
    Code:
       0: aload_0
       1: getfield      #30                 // Field publicKeyEncoder:Lorg/bouncycastle/crypto/KeyEncoder;
       4: aload_0
       5: getfield      #29                 // Field keyPair:Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       8: invokevirtual #32                 // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPublic:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      11: invokeinterface #33,  2           // InterfaceMethod org/bouncycastle/crypto/KeyEncoder.getEncoded:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)[B
      16: areturn
}
