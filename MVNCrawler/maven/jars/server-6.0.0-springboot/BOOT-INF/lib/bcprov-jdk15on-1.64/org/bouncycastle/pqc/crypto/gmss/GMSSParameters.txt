public class org.bouncycastle.pqc.crypto.gmss.GMSSParameters {
  private int numOfLayers;

  private int[] heightOfTrees;

  private int[] winternitzParameter;

  private int[] K;

  public org.bouncycastle.pqc.crypto.gmss.GMSSParameters(int, int[], int[], int[]) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #51                 // Method init:(I[I[I[I)V
      13: return

  private void init(int, int[], int[], int[]) throws java.lang.IllegalArgumentException;
    Code:
       0: iconst_1
       1: istore        5
       3: ldc           #1                  // String
       5: astore        6
       7: aload_0
       8: iload_1
       9: putfield      #45                 // Field numOfLayers:I
      12: aload_0
      13: getfield      #45                 // Field numOfLayers:I
      16: aload_3
      17: arraylength
      18: if_icmpne     40
      21: aload_0
      22: getfield      #45                 // Field numOfLayers:I
      25: aload_2
      26: arraylength
      27: if_icmpne     40
      30: aload_0
      31: getfield      #45                 // Field numOfLayers:I
      34: aload         4
      36: arraylength
      37: if_icmpeq     47
      40: iconst_0
      41: istore        5
      43: ldc           #2                  // String Unexpected parameterset format
      45: astore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: aload_0
      53: getfield      #45                 // Field numOfLayers:I
      56: if_icmpge     119
      59: aload         4
      61: iload         7
      63: iaload
      64: iconst_2
      65: if_icmplt     83
      68: aload_2
      69: iload         7
      71: iaload
      72: aload         4
      74: iload         7
      76: iaload
      77: isub
      78: iconst_2
      79: irem
      80: ifeq          90
      83: iconst_0
      84: istore        5
      86: ldc           #4                  // String Wrong parameter K (K >= 2 and H-K even required)!
      88: astore        6
      90: aload_2
      91: iload         7
      93: iaload
      94: iconst_4
      95: if_icmplt     106
      98: aload_3
      99: iload         7
     101: iaload
     102: iconst_2
     103: if_icmpge     113
     106: iconst_0
     107: istore        5
     109: ldc           #3                  // String Wrong parameter H or w (H > 3 and w > 1 required)!
     111: astore        6
     113: iinc          7, 1
     116: goto          50
     119: iload         5
     121: ifeq          152
     124: aload_0
     125: aload_2
     126: invokestatic  #52                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
     129: putfield      #47                 // Field heightOfTrees:[I
     132: aload_0
     133: aload_3
     134: invokestatic  #52                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
     137: putfield      #48                 // Field winternitzParameter:[I
     140: aload_0
     141: aload         4
     143: invokestatic  #52                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
     146: putfield      #46                 // Field K:[I
     149: goto          162
     152: new           #32                 // class java/lang/IllegalArgumentException
     155: dup
     156: aload         6
     158: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: return

  public org.bouncycastle.pqc.crypto.gmss.GMSSParameters(int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: bipush        10
       7: if_icmpgt     49
      10: iconst_1
      11: newarray       int
      13: dup
      14: iconst_0
      15: bipush        10
      17: iastore
      18: astore_2
      19: iconst_1
      20: newarray       int
      22: dup
      23: iconst_0
      24: iconst_3
      25: iastore
      26: astore_3
      27: iconst_1
      28: newarray       int
      30: dup
      31: iconst_0
      32: iconst_2
      33: iastore
      34: astore        4
      36: aload_0
      37: aload_2
      38: arraylength
      39: aload_2
      40: aload_3
      41: aload         4
      43: invokespecial #51                 // Method init:(I[I[I[I)V
      46: goto          185
      49: iload_1
      50: bipush        20
      52: if_icmpgt     107
      55: iconst_2
      56: newarray       int
      58: dup
      59: iconst_0
      60: bipush        10
      62: iastore
      63: dup
      64: iconst_1
      65: bipush        10
      67: iastore
      68: astore_2
      69: iconst_2
      70: newarray       int
      72: dup
      73: iconst_0
      74: iconst_5
      75: iastore
      76: dup
      77: iconst_1
      78: iconst_4
      79: iastore
      80: astore_3
      81: iconst_2
      82: newarray       int
      84: dup
      85: iconst_0
      86: iconst_2
      87: iastore
      88: dup
      89: iconst_1
      90: iconst_2
      91: iastore
      92: astore        4
      94: aload_0
      95: aload_2
      96: arraylength
      97: aload_2
      98: aload_3
      99: aload         4
     101: invokespecial #51                 // Method init:(I[I[I[I)V
     104: goto          185
     107: iconst_4
     108: newarray       int
     110: dup
     111: iconst_0
     112: bipush        10
     114: iastore
     115: dup
     116: iconst_1
     117: bipush        10
     119: iastore
     120: dup
     121: iconst_2
     122: bipush        10
     124: iastore
     125: dup
     126: iconst_3
     127: bipush        10
     129: iastore
     130: astore_2
     131: iconst_4
     132: newarray       int
     134: dup
     135: iconst_0
     136: bipush        9
     138: iastore
     139: dup
     140: iconst_1
     141: bipush        9
     143: iastore
     144: dup
     145: iconst_2
     146: bipush        9
     148: iastore
     149: dup
     150: iconst_3
     151: iconst_3
     152: iastore
     153: astore_3
     154: iconst_4
     155: newarray       int
     157: dup
     158: iconst_0
     159: iconst_2
     160: iastore
     161: dup
     162: iconst_1
     163: iconst_2
     164: iastore
     165: dup
     166: iconst_2
     167: iconst_2
     168: iastore
     169: dup
     170: iconst_3
     171: iconst_2
     172: iastore
     173: astore        4
     175: aload_0
     176: aload_2
     177: arraylength
     178: aload_2
     179: aload_3
     180: aload         4
     182: invokespecial #51                 // Method init:(I[I[I[I)V
     185: return

  public int getNumOfLayers();
    Code:
       0: aload_0
       1: getfield      #45                 // Field numOfLayers:I
       4: ireturn

  public int[] getHeightOfTrees();
    Code:
       0: aload_0
       1: getfield      #47                 // Field heightOfTrees:[I
       4: invokestatic  #52                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
       7: areturn

  public int[] getWinternitzParameter();
    Code:
       0: aload_0
       1: getfield      #48                 // Field winternitzParameter:[I
       4: invokestatic  #52                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
       7: areturn

  public int[] getK();
    Code:
       0: aload_0
       1: getfield      #46                 // Field K:[I
       4: invokestatic  #52                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
       7: areturn
}
