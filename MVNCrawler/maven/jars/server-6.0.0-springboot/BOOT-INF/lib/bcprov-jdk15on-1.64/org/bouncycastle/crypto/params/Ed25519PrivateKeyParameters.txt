public final class org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters extends org.bouncycastle.crypto.params.AsymmetricKeyParameter {
  public static final int KEY_SIZE;

  public static final int SIGNATURE_SIZE;

  private final byte[] data;

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(java.security.SecureRandom);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #79                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        32
       8: newarray       byte
      10: putfield      #75                 // Field data:[B
      13: aload_1
      14: aload_0
      15: getfield      #75                 // Field data:[B
      18: invokestatic  #86                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.generatePrivateKey:(Ljava/security/SecureRandom;[B)V
      21: return

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(byte[], int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #79                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        32
       8: newarray       byte
      10: putfield      #75                 // Field data:[B
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #75                 // Field data:[B
      19: iconst_0
      20: bipush        32
      22: invokestatic  #78                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: return

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #79                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        32
       8: newarray       byte
      10: putfield      #75                 // Field data:[B
      13: bipush        32
      15: aload_1
      16: aload_0
      17: getfield      #75                 // Field data:[B
      20: invokestatic  #88                 // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      23: if_icmpeq     36
      26: new           #44                 // class java/io/EOFException
      29: dup
      30: ldc           #1                  // String EOF encountered in middle of Ed25519 private key
      32: invokespecial #76                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public void encode(byte[], int);
    Code:
       0: aload_0
       1: getfield      #75                 // Field data:[B
       4: iconst_0
       5: aload_1
       6: iload_2
       7: bipush        32
       9: invokestatic  #78                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #75                 // Field data:[B
       4: invokestatic  #87                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public org.bouncycastle.crypto.params.Ed25519PublicKeyParameters generatePublicKey();
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: getfield      #75                 // Field data:[B
       9: iconst_0
      10: aload_1
      11: iconst_0
      12: invokestatic  #82                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.generatePublicKey:([BI[BI)V
      15: new           #50                 // class org/bouncycastle/crypto/params/Ed25519PublicKeyParameters
      18: dup
      19: aload_1
      20: iconst_0
      21: invokespecial #80                 // Method org/bouncycastle/crypto/params/Ed25519PublicKeyParameters."<init>":([BI)V
      24: areturn

  public void sign(int, org.bouncycastle.crypto.params.Ed25519PublicKeyParameters, byte[], byte[], int, int, byte[], int);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore        9
       6: aconst_null
       7: aload_2
       8: if_acmpne     25
      11: aload_0
      12: getfield      #75                 // Field data:[B
      15: iconst_0
      16: aload         9
      18: iconst_0
      19: invokestatic  #82                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.generatePublicKey:([BI[BI)V
      22: goto          32
      25: aload_2
      26: aload         9
      28: iconst_0
      29: invokevirtual #81                 // Method org/bouncycastle/crypto/params/Ed25519PublicKeyParameters.encode:([BI)V
      32: iload_1
      33: tableswitch   { // 0 to 2
                     0: 60
                     1: 99
                     2: 124
               default: 164
          }
      60: aconst_null
      61: aload_3
      62: if_acmpeq     75
      65: new           #46                 // class java/lang/IllegalArgumentException
      68: dup
      69: ldc           #3                  // String ctx
      71: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #75                 // Field data:[B
      79: iconst_0
      80: aload         9
      82: iconst_0
      83: aload         4
      85: iload         5
      87: iload         6
      89: aload         7
      91: iload         8
      93: invokestatic  #83                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.sign:([BI[BI[BII[BI)V
      96: goto          174
      99: aload_0
     100: getfield      #75                 // Field data:[B
     103: iconst_0
     104: aload         9
     106: iconst_0
     107: aload_3
     108: aload         4
     110: iload         5
     112: iload         6
     114: aload         7
     116: iload         8
     118: invokestatic  #84                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.sign:([BI[BI[B[BII[BI)V
     121: goto          174
     124: bipush        64
     126: iload         6
     128: if_icmpeq     141
     131: new           #46                 // class java/lang/IllegalArgumentException
     134: dup
     135: ldc           #4                  // String msgLen
     137: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_0
     142: getfield      #75                 // Field data:[B
     145: iconst_0
     146: aload         9
     148: iconst_0
     149: aload_3
     150: aload         4
     152: iload         5
     154: aload         7
     156: iload         8
     158: invokestatic  #85                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.signPrehash:([BI[BI[B[BI[BI)V
     161: goto          174
     164: new           #46                 // class java/lang/IllegalArgumentException
     167: dup
     168: ldc           #2                  // String algorithm
     170: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     173: athrow
     174: return
}
