public class org.bouncycastle.crypto.macs.DSTU7624Mac implements org.bouncycastle.crypto.Mac {
  private static final int BITS_IN_BYTE;

  private byte[] buf;

  private int bufOff;

  private int macSize;

  private int blockSize;

  private org.bouncycastle.crypto.engines.DSTU7624Engine engine;

  private byte[] c;

  private byte[] cTemp;

  private byte[] kDelta;

  private boolean initCalled;

  public org.bouncycastle.crypto.macs.DSTU7624Mac(int, int);
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #101                // Field initCalled:Z
       9: aload_0
      10: new           #68                 // class org/bouncycastle/crypto/engines/DSTU7624Engine
      13: dup
      14: iload_1
      15: invokespecial #114                // Method org/bouncycastle/crypto/engines/DSTU7624Engine."<init>":(I)V
      18: putfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      21: aload_0
      22: iload_1
      23: bipush        8
      25: idiv
      26: putfield      #98                 // Field blockSize:I
      29: aload_0
      30: iload_2
      31: bipush        8
      33: idiv
      34: putfield      #100                // Field macSize:I
      37: aload_0
      38: aload_0
      39: getfield      #98                 // Field blockSize:I
      42: newarray       byte
      44: putfield      #103                // Field c:[B
      47: aload_0
      48: aload_0
      49: getfield      #98                 // Field blockSize:I
      52: newarray       byte
      54: putfield      #105                // Field kDelta:[B
      57: aload_0
      58: aload_0
      59: getfield      #98                 // Field blockSize:I
      62: newarray       byte
      64: putfield      #104                // Field cTemp:[B
      67: aload_0
      68: aload_0
      69: getfield      #98                 // Field blockSize:I
      72: newarray       byte
      74: putfield      #102                // Field buf:[B
      77: return

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: instanceof    #70                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifeq          28
       7: aload_0
       8: getfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      11: iconst_1
      12: aload_1
      13: invokevirtual #116                // Method org/bouncycastle/crypto/engines/DSTU7624Engine.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      16: aload_0
      17: iconst_1
      18: putfield      #101                // Field initCalled:Z
      21: aload_0
      22: invokevirtual #117                // Method reset:()V
      25: goto          38
      28: new           #61                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #2                  // String Invalid parameter passed to DSTU7624Mac
      34: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String DSTU7624Mac
       2: areturn

  public int getMacSize();
    Code:
       0: aload_0
       1: getfield      #100                // Field macSize:I
       4: ireturn

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #99                 // Field bufOff:I
       4: aload_0
       5: getfield      #102                // Field buf:[B
       8: arraylength
       9: if_icmpne     26
      12: aload_0
      13: aload_0
      14: getfield      #102                // Field buf:[B
      17: iconst_0
      18: invokespecial #118                // Method processBlock:([BI)V
      21: aload_0
      22: iconst_0
      23: putfield      #99                 // Field bufOff:I
      26: aload_0
      27: getfield      #102                // Field buf:[B
      30: aload_0
      31: dup
      32: getfield      #99                 // Field bufOff:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #99                 // Field bufOff:I
      41: iload_1
      42: bastore
      43: return

  public void update(byte[], int, int);
    Code:
       0: iload_3
       1: ifge          14
       4: new           #61                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String can\'t have a negative input length!
      10: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      18: invokevirtual #112                // Method org/bouncycastle/crypto/engines/DSTU7624Engine.getBlockSize:()I
      21: istore        4
      23: iload         4
      25: aload_0
      26: getfield      #99                 // Field bufOff:I
      29: isub
      30: istore        5
      32: iload_3
      33: iload         5
      35: if_icmple     102
      38: aload_1
      39: iload_2
      40: aload_0
      41: getfield      #102                // Field buf:[B
      44: aload_0
      45: getfield      #99                 // Field bufOff:I
      48: iload         5
      50: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      53: aload_0
      54: aload_0
      55: getfield      #102                // Field buf:[B
      58: iconst_0
      59: invokespecial #118                // Method processBlock:([BI)V
      62: aload_0
      63: iconst_0
      64: putfield      #99                 // Field bufOff:I
      67: iload_3
      68: iload         5
      70: isub
      71: istore_3
      72: iload_2
      73: iload         5
      75: iadd
      76: istore_2
      77: iload_3
      78: iload         4
      80: if_icmple     102
      83: aload_0
      84: aload_1
      85: iload_2
      86: invokespecial #118                // Method processBlock:([BI)V
      89: iload_3
      90: iload         4
      92: isub
      93: istore_3
      94: iload_2
      95: iload         4
      97: iadd
      98: istore_2
      99: goto          77
     102: aload_1
     103: iload_2
     104: aload_0
     105: getfield      #102                // Field buf:[B
     108: aload_0
     109: getfield      #99                 // Field bufOff:I
     112: iload_3
     113: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     116: aload_0
     117: dup
     118: getfield      #99                 // Field bufOff:I
     121: iload_3
     122: iadd
     123: putfield      #99                 // Field bufOff:I
     126: return

  private void processBlock(byte[], int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #103                // Field c:[B
       5: iconst_0
       6: aload_1
       7: iload_2
       8: aload_0
       9: getfield      #104                // Field cTemp:[B
      12: invokespecial #119                // Method xor:([BI[BI[B)V
      15: aload_0
      16: getfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      19: aload_0
      20: getfield      #104                // Field cTemp:[B
      23: iconst_0
      24: aload_0
      25: getfield      #103                // Field c:[B
      28: iconst_0
      29: invokevirtual #115                // Method org/bouncycastle/crypto/engines/DSTU7624Engine.processBlock:([BI[BI)I
      32: pop
      33: return

  public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field bufOff:I
       4: aload_0
       5: getfield      #102                // Field buf:[B
       8: arraylength
       9: irem
      10: ifeq          23
      13: new           #65                 // class org/bouncycastle/crypto/DataLengthException
      16: dup
      17: ldc           #4                  // String input must be a multiple of blocksize
      19: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_0
      25: getfield      #103                // Field c:[B
      28: iconst_0
      29: aload_0
      30: getfield      #102                // Field buf:[B
      33: iconst_0
      34: aload_0
      35: getfield      #104                // Field cTemp:[B
      38: invokespecial #119                // Method xor:([BI[BI[B)V
      41: aload_0
      42: aload_0
      43: getfield      #104                // Field cTemp:[B
      46: iconst_0
      47: aload_0
      48: getfield      #105                // Field kDelta:[B
      51: iconst_0
      52: aload_0
      53: getfield      #103                // Field c:[B
      56: invokespecial #119                // Method xor:([BI[BI[B)V
      59: aload_0
      60: getfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      63: aload_0
      64: getfield      #103                // Field c:[B
      67: iconst_0
      68: aload_0
      69: getfield      #103                // Field c:[B
      72: iconst_0
      73: invokevirtual #115                // Method org/bouncycastle/crypto/engines/DSTU7624Engine.processBlock:([BI[BI)I
      76: pop
      77: aload_0
      78: getfield      #100                // Field macSize:I
      81: iload_2
      82: iadd
      83: aload_1
      84: arraylength
      85: if_icmple     98
      88: new           #67                 // class org/bouncycastle/crypto/OutputLengthException
      91: dup
      92: ldc           #5                  // String output buffer too short
      94: invokespecial #111                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: getfield      #103                // Field c:[B
     102: iconst_0
     103: aload_1
     104: iload_2
     105: aload_0
     106: getfield      #100                // Field macSize:I
     109: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: aload_0
     113: invokevirtual #117                // Method reset:()V
     116: aload_0
     117: getfield      #100                // Field macSize:I
     120: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #103                // Field c:[B
       4: iconst_0
       5: invokestatic  #120                // Method org/bouncycastle/util/Arrays.fill:([BB)V
       8: aload_0
       9: getfield      #104                // Field cTemp:[B
      12: iconst_0
      13: invokestatic  #120                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      16: aload_0
      17: getfield      #105                // Field kDelta:[B
      20: iconst_0
      21: invokestatic  #120                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      24: aload_0
      25: getfield      #102                // Field buf:[B
      28: iconst_0
      29: invokestatic  #120                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      32: aload_0
      33: getfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      36: invokevirtual #113                // Method org/bouncycastle/crypto/engines/DSTU7624Engine.reset:()V
      39: aload_0
      40: getfield      #101                // Field initCalled:Z
      43: ifeq          64
      46: aload_0
      47: getfield      #106                // Field engine:Lorg/bouncycastle/crypto/engines/DSTU7624Engine;
      50: aload_0
      51: getfield      #105                // Field kDelta:[B
      54: iconst_0
      55: aload_0
      56: getfield      #105                // Field kDelta:[B
      59: iconst_0
      60: invokevirtual #115                // Method org/bouncycastle/crypto/engines/DSTU7624Engine.processBlock:([BI[BI)I
      63: pop
      64: aload_0
      65: iconst_0
      66: putfield      #99                 // Field bufOff:I
      69: return

  private void xor(byte[], int, byte[], int, byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: isub
       4: aload_0
       5: getfield      #98                 // Field blockSize:I
       8: if_icmplt     33
      11: aload_3
      12: arraylength
      13: iload         4
      15: isub
      16: aload_0
      17: getfield      #98                 // Field blockSize:I
      20: if_icmplt     33
      23: aload         5
      25: arraylength
      26: aload_0
      27: getfield      #98                 // Field blockSize:I
      30: if_icmpge     43
      33: new           #61                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #6                  // String some of input buffers too short
      39: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iconst_0
      44: istore        6
      46: iload         6
      48: aload_0
      49: getfield      #98                 // Field blockSize:I
      52: if_icmpge     81
      55: aload         5
      57: iload         6
      59: aload_1
      60: iload         6
      62: iload_2
      63: iadd
      64: baload
      65: aload_3
      66: iload         6
      68: iload         4
      70: iadd
      71: baload
      72: ixor
      73: i2b
      74: bastore
      75: iinc          6, 1
      78: goto          46
      81: return
}
