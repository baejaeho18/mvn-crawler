public abstract class org.bouncycastle.math.ec.ECCurve$AbstractFp extends org.bouncycastle.math.ec.ECCurve {
  protected org.bouncycastle.math.ec.ECCurve$AbstractFp(java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method org/bouncycastle/math/field/FiniteFields.getPrimeField:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/field/FiniteField;
       5: invokespecial #73                 // Method org/bouncycastle/math/ec/ECCurve."<init>":(Lorg/bouncycastle/math/field/FiniteField;)V
       8: return

  public boolean isValidFieldElement(java.math.BigInteger);
    Code:
       0: aload_1
       1: ifnull        31
       4: aload_1
       5: invokevirtual #71                 // Method java/math/BigInteger.signum:()I
       8: iflt          31
      11: aload_1
      12: aload_0
      13: invokevirtual #74                 // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
      16: invokeinterface #84,  1           // InterfaceMethod org/bouncycastle/math/field/FiniteField.getCharacteristic:()Ljava/math/BigInteger;
      21: invokevirtual #72                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      24: ifge          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  protected org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #75                 // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       5: astore_3
       6: aload_3
       7: invokevirtual #80                 // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      10: aload_0
      11: getfield      #68                 // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
      14: invokevirtual #81                 // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      17: aload_3
      18: invokevirtual #82                 // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      21: aload_0
      22: getfield      #69                 // Field b:Lorg/bouncycastle/math/ec/ECFieldElement;
      25: invokevirtual #81                 // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      28: astore        4
      30: aload         4
      32: invokevirtual #79                 // Method org/bouncycastle/math/ec/ECFieldElement.sqrt:()Lorg/bouncycastle/math/ec/ECFieldElement;
      35: astore        5
      37: aload         5
      39: ifnonnull     52
      42: new           #30                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #1                  // String Invalid point compression
      48: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         5
      54: invokevirtual #77                 // Method org/bouncycastle/math/ec/ECFieldElement.testBitZero:()Z
      57: iload_1
      58: iconst_1
      59: if_icmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: if_icmpeq     77
      70: aload         5
      72: invokevirtual #78                 // Method org/bouncycastle/math/ec/ECFieldElement.negate:()Lorg/bouncycastle/math/ec/ECFieldElement;
      75: astore        5
      77: aload_0
      78: aload_3
      79: aload         5
      81: invokevirtual #76                 // Method createRawPoint:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
      84: areturn
}
