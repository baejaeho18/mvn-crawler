public class org.bouncycastle.crypto.util.ScryptConfig$Builder {
  private final int costParameter;

  private final int blockSize;

  private final int parallelizationParameter;

  private int saltLength;

  public org.bouncycastle.crypto.util.ScryptConfig$Builder(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #45                 // Field saltLength:I
      10: iload_1
      11: iconst_1
      12: if_icmple     22
      15: iload_1
      16: invokestatic  #49                 // Method isPowerOf2:(I)Z
      19: ifne          32
      22: new           #24                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #1                  // String Cost parameter N must be > 1 and a power of 2
      28: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: iload_1
      34: putfield      #43                 // Field costParameter:I
      37: aload_0
      38: iload_2
      39: putfield      #42                 // Field blockSize:I
      42: aload_0
      43: iload_3
      44: putfield      #44                 // Field parallelizationParameter:I
      47: return

  public org.bouncycastle.crypto.util.ScryptConfig$Builder withSaltLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field saltLength:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.util.ScryptConfig build();
    Code:
       0: new           #26                 // class org/bouncycastle/crypto/util/ScryptConfig
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #48                 // Method org/bouncycastle/crypto/util/ScryptConfig."<init>":(Lorg/bouncycastle/crypto/util/ScryptConfig$Builder;Lorg/bouncycastle/crypto/util/ScryptConfig$1;)V
       9: areturn

  private static boolean isPowerOf2(int);
    Code:
       0: iload_0
       1: iload_0
       2: iconst_1
       3: isub
       4: iand
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  static int access$100(org.bouncycastle.crypto.util.ScryptConfig$Builder);
    Code:
       0: aload_0
       1: getfield      #43                 // Field costParameter:I
       4: ireturn

  static int access$200(org.bouncycastle.crypto.util.ScryptConfig$Builder);
    Code:
       0: aload_0
       1: getfield      #42                 // Field blockSize:I
       4: ireturn

  static int access$300(org.bouncycastle.crypto.util.ScryptConfig$Builder);
    Code:
       0: aload_0
       1: getfield      #44                 // Field parallelizationParameter:I
       4: ireturn

  static int access$400(org.bouncycastle.crypto.util.ScryptConfig$Builder);
    Code:
       0: aload_0
       1: getfield      #45                 // Field saltLength:I
       4: ireturn
}
