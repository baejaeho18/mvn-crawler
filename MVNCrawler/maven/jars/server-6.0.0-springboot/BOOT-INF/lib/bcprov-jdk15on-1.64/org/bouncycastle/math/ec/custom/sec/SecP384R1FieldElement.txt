public class org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement extends org.bouncycastle.math.ec.ECFieldElement$AbstractFp {
  public static final java.math.BigInteger Q;

  protected int[] x;

  public org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #121                // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: invokevirtual #118                // Method java/math/BigInteger.signum:()I
      12: iflt          25
      15: aload_1
      16: getstatic     #114                // Field Q:Ljava/math/BigInteger;
      19: invokevirtual #120                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      22: iflt          35
      25: new           #62                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #3                  // String x value invalid for SecP384R1FieldElement
      31: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: invokestatic  #129                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.fromBigInteger:(Ljava/math/BigInteger;)[I
      40: putfield      #113                // Field x:[I
      43: return

  public org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement();
    Code:
       0: aload_0
       1: invokespecial #121                // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_0
       5: bipush        12
       7: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      10: putfield      #113                // Field x:[I
      13: return

  protected org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement(int[]);
    Code:
       0: aload_0
       1: invokespecial #121                // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #113                // Field x:[I
       9: return

  public boolean isZero();
    Code:
       0: bipush        12
       2: aload_0
       3: getfield      #113                // Field x:[I
       6: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat.isZero:(I[I)Z
       9: ireturn

  public boolean isOne();
    Code:
       0: bipush        12
       2: aload_0
       3: getfield      #113                // Field x:[I
       6: invokestatic  #133                // Method org/bouncycastle/math/raw/Nat.isOne:(I[I)Z
       9: ireturn

  public boolean testBitZero();
    Code:
       0: aload_0
       1: getfield      #113                // Field x:[I
       4: iconst_0
       5: invokestatic  #136                // Method org/bouncycastle/math/raw/Nat.getBit:([II)I
       8: iconst_1
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: bipush        12
       2: aload_0
       3: getfield      #113                // Field x:[I
       6: invokestatic  #137                // Method org/bouncycastle/math/raw/Nat.toBigInteger:(I[I)Ljava/math/BigInteger;
       9: areturn

  public java.lang.String getFieldName();
    Code:
       0: ldc           #2                  // String SecP384R1Field
       2: areturn

  public int getFieldSize();
    Code:
       0: getstatic     #114                // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #116                // Method java/math/BigInteger.bitLength:()I
       6: ireturn

  public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: aload_1
      11: checkcast     #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      14: getfield      #113                // Field x:[I
      17: aload_2
      18: invokestatic  #126                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.add:([I[I[I)V
      21: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      24: dup
      25: aload_2
      26: invokespecial #130                // Method "<init>":([I)V
      29: areturn

  public org.bouncycastle.math.ec.ECFieldElement addOne();
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: aload_1
      11: invokestatic  #123                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.addOne:([I[I)V
      14: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #130                // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: aload_1
      11: checkcast     #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      14: getfield      #113                // Field x:[I
      17: aload_2
      18: invokestatic  #128                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.subtract:([I[I[I)V
      21: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      24: dup
      25: aload_2
      26: invokespecial #130                // Method "<init>":([I)V
      29: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: aload_1
      11: checkcast     #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      14: getfield      #113                // Field x:[I
      17: aload_2
      18: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
      21: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      24: dup
      25: aload_2
      26: invokespecial #130                // Method "<init>":([I)V
      29: areturn

  public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: getstatic     #112                // Field org/bouncycastle/math/ec/custom/sec/SecP384R1Field.P:[I
       9: aload_1
      10: checkcast     #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      13: getfield      #113                // Field x:[I
      16: aload_2
      17: invokestatic  #131                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      20: aload_2
      21: aload_0
      22: getfield      #113                // Field x:[I
      25: aload_2
      26: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
      29: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      32: dup
      33: aload_2
      34: invokespecial #130                // Method "<init>":([I)V
      37: areturn

  public org.bouncycastle.math.ec.ECFieldElement negate();
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: aload_1
      11: invokestatic  #124                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.negate:([I[I)V
      14: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #130                // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement square();
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: aload_1
      11: invokestatic  #125                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.square:([I[I)V
      14: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #130                // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement invert();
    Code:
       0: bipush        12
       2: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: getstatic     #112                // Field org/bouncycastle/math/ec/custom/sec/SecP384R1Field.P:[I
       9: aload_0
      10: getfield      #113                // Field x:[I
      13: aload_1
      14: invokestatic  #131                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      17: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      20: dup
      21: aload_1
      22: invokespecial #130                // Method "<init>":([I)V
      25: areturn

  public org.bouncycastle.math.ec.ECFieldElement sqrt();
    Code:
       0: aload_0
       1: getfield      #113                // Field x:[I
       4: astore_1
       5: bipush        12
       7: aload_1
       8: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat.isZero:(I[I)Z
      11: ifne          23
      14: bipush        12
      16: aload_1
      17: invokestatic  #133                // Method org/bouncycastle/math/raw/Nat.isOne:(I[I)Z
      20: ifeq          25
      23: aload_0
      24: areturn
      25: bipush        12
      27: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      30: astore_2
      31: bipush        12
      33: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      36: astore_3
      37: bipush        12
      39: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      42: astore        4
      44: bipush        12
      46: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      49: astore        5
      51: aload_1
      52: aload_2
      53: invokestatic  #125                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.square:([I[I)V
      56: aload_2
      57: aload_1
      58: aload_2
      59: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
      62: aload_2
      63: iconst_2
      64: aload_3
      65: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
      68: aload_3
      69: aload_2
      70: aload_3
      71: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
      74: aload_3
      75: aload_3
      76: invokestatic  #125                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.square:([I[I)V
      79: aload_3
      80: aload_1
      81: aload_3
      82: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
      85: aload_3
      86: iconst_5
      87: aload         4
      89: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
      92: aload         4
      94: aload_3
      95: aload         4
      97: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     100: aload         4
     102: iconst_5
     103: aload         5
     105: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     108: aload         5
     110: aload_3
     111: aload         5
     113: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     116: aload         5
     118: bipush        15
     120: aload_3
     121: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     124: aload_3
     125: aload         5
     127: aload_3
     128: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     131: aload_3
     132: iconst_2
     133: aload         4
     135: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     138: aload_2
     139: aload         4
     141: aload_2
     142: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     145: aload         4
     147: bipush        28
     149: aload         4
     151: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     154: aload_3
     155: aload         4
     157: aload_3
     158: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     161: aload_3
     162: bipush        60
     164: aload         4
     166: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     169: aload         4
     171: aload_3
     172: aload         4
     174: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     177: aload_3
     178: astore        6
     180: aload         4
     182: bipush        120
     184: aload         6
     186: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     189: aload         6
     191: aload         4
     193: aload         6
     195: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     198: aload         6
     200: bipush        15
     202: aload         6
     204: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     207: aload         6
     209: aload         5
     211: aload         6
     213: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     216: aload         6
     218: bipush        33
     220: aload         6
     222: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     225: aload         6
     227: aload_2
     228: aload         6
     230: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     233: aload         6
     235: bipush        64
     237: aload         6
     239: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     242: aload         6
     244: aload_1
     245: aload         6
     247: invokestatic  #127                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.multiply:([I[I[I)V
     250: aload         6
     252: bipush        30
     254: aload_2
     255: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.squareN:([II[I)V
     258: aload_2
     259: aload_3
     260: invokestatic  #125                // Method org/bouncycastle/math/ec/custom/sec/SecP384R1Field.square:([I[I)V
     263: bipush        12
     265: aload_1
     266: aload_3
     267: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.eq:(I[I[I)Z
     270: ifeq          284
     273: new           #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
     276: dup
     277: aload_2
     278: invokespecial #130                // Method "<init>":([I)V
     281: goto          285
     284: aconst_null
     285: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #67                 // class org/bouncycastle/math/ec/custom/sec/SecP384R1FieldElement
      20: astore_2
      21: bipush        12
      23: aload_0
      24: getfield      #113                // Field x:[I
      27: aload_2
      28: getfield      #113                // Field x:[I
      31: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.eq:(I[I[I)Z
      34: ireturn

  public int hashCode();
    Code:
       0: getstatic     #114                // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #117                // Method java/math/BigInteger.hashCode:()I
       6: aload_0
       7: getfield      #113                // Field x:[I
      10: iconst_0
      11: bipush        12
      13: invokestatic  #138                // Method org/bouncycastle/util/Arrays.hashCode:([III)I
      16: ixor
      17: ireturn

  static {};
    Code:
       0: new           #63                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: ldc           #1                  // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF
       7: invokestatic  #139                // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
      10: invokespecial #119                // Method java/math/BigInteger."<init>":(I[B)V
      13: putstatic     #114                // Field Q:Ljava/math/BigInteger;
      16: return
}
