public class org.bouncycastle.crypto.tls.CertificateRequest {
  protected short[] certificateTypes;

  protected java.util.Vector supportedSignatureAlgorithms;

  protected java.util.Vector certificateAuthorities;

  public org.bouncycastle.crypto.tls.CertificateRequest(short[], java.util.Vector, java.util.Vector);
    Code:
       0: aload_0
       1: invokespecial #101                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #96                 // Field certificateTypes:[S
       9: aload_0
      10: aload_2
      11: putfield      #98                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      14: aload_0
      15: aload_3
      16: putfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
      19: return

  public short[] getCertificateTypes();
    Code:
       0: aload_0
       1: getfield      #96                 // Field certificateTypes:[S
       4: areturn

  public java.util.Vector getSupportedSignatureAlgorithms();
    Code:
       0: aload_0
       1: getfield      #98                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
       4: areturn

  public java.util.Vector getCertificateAuthorities();
    Code:
       0: aload_0
       1: getfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
       4: areturn

  public void encode(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field certificateTypes:[S
       4: ifnull        15
       7: aload_0
       8: getfield      #96                 // Field certificateTypes:[S
      11: arraylength
      12: ifne          23
      15: iconst_0
      16: aload_1
      17: invokestatic  #115                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(ILjava/io/OutputStream;)V
      20: goto          31
      23: aload_0
      24: getfield      #96                 // Field certificateTypes:[S
      27: aload_1
      28: invokestatic  #117                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8ArrayWithUint8Length:([SLjava/io/OutputStream;)V
      31: aload_0
      32: getfield      #98                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      35: ifnull        47
      38: aload_0
      39: getfield      #98                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      42: iconst_0
      43: aload_1
      44: invokestatic  #120                // Method org/bouncycastle/crypto/tls/TlsUtils.encodeSupportedSignatureAlgorithms:(Ljava/util/Vector;ZLjava/io/OutputStream;)V
      47: aload_0
      48: getfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
      51: ifnull        64
      54: aload_0
      55: getfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
      58: invokevirtual #104                // Method java/util/Vector.isEmpty:()Z
      61: ifeq          72
      64: iconst_0
      65: aload_1
      66: invokestatic  #114                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      69: goto          194
      72: new           #49                 // class java/util/Vector
      75: dup
      76: aload_0
      77: getfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
      80: invokevirtual #102                // Method java/util/Vector.size:()I
      83: invokespecial #105                // Method java/util/Vector."<init>":(I)V
      86: astore_2
      87: iconst_0
      88: istore_3
      89: iconst_0
      90: istore        4
      92: iload         4
      94: aload_0
      95: getfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
      98: invokevirtual #102                // Method java/util/Vector.size:()I
     101: if_icmpge     147
     104: aload_0
     105: getfield      #97                 // Field certificateAuthorities:Ljava/util/Vector;
     108: iload         4
     110: invokevirtual #106                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
     113: checkcast     #50                 // class org/bouncycastle/asn1/x500/X500Name
     116: astore        5
     118: aload         5
     120: ldc           #1                  // String DER
     122: invokevirtual #108                // Method org/bouncycastle/asn1/x500/X500Name.getEncoded:(Ljava/lang/String;)[B
     125: astore        6
     127: aload_2
     128: aload         6
     130: invokevirtual #107                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     133: iload_3
     134: aload         6
     136: arraylength
     137: iconst_2
     138: iadd
     139: iadd
     140: istore_3
     141: iinc          4, 1
     144: goto          92
     147: iload_3
     148: invokestatic  #111                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
     151: iload_3
     152: aload_1
     153: invokestatic  #114                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
     156: iconst_0
     157: istore        4
     159: iload         4
     161: aload_2
     162: invokevirtual #102                // Method java/util/Vector.size:()I
     165: if_icmpge     194
     168: aload_2
     169: iload         4
     171: invokevirtual #106                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
     174: checkcast     #45                 // class "[B"
     177: checkcast     #45                 // class "[B"
     180: astore        5
     182: aload         5
     184: aload_1
     185: invokestatic  #116                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
     188: iinc          4, 1
     191: goto          159
     194: return

  public static org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #112                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:(Ljava/io/InputStream;)S
       4: istore_2
       5: iload_2
       6: newarray       short
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: iload_2
      15: if_icmpge     32
      18: aload_3
      19: iload         4
      21: aload_1
      22: invokestatic  #112                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:(Ljava/io/InputStream;)S
      25: sastore
      26: iinc          4, 1
      29: goto          12
      32: aconst_null
      33: astore        4
      35: aload_0
      36: invokestatic  #119                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      39: ifeq          49
      42: iconst_0
      43: aload_1
      44: invokestatic  #121                // Method org/bouncycastle/crypto/tls/TlsUtils.parseSupportedSignatureAlgorithms:(ZLjava/io/InputStream;)Ljava/util/Vector;
      47: astore        4
      49: new           #49                 // class java/util/Vector
      52: dup
      53: invokespecial #103                // Method java/util/Vector."<init>":()V
      56: astore        5
      58: aload_1
      59: invokestatic  #113                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      62: astore        6
      64: new           #46                 // class java/io/ByteArrayInputStream
      67: dup
      68: aload         6
      70: invokespecial #100                // Method java/io/ByteArrayInputStream."<init>":([B)V
      73: astore        7
      75: aload         7
      77: invokevirtual #99                 // Method java/io/ByteArrayInputStream.available:()I
      80: ifle          110
      83: aload         7
      85: invokestatic  #113                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      88: astore        8
      90: aload         8
      92: invokestatic  #118                // Method org/bouncycastle/crypto/tls/TlsUtils.readDERObject:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      95: astore        9
      97: aload         5
      99: aload         9
     101: invokestatic  #109                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
     104: invokevirtual #107                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     107: goto          75
     110: new           #51                 // class org/bouncycastle/crypto/tls/CertificateRequest
     113: dup
     114: aload_3
     115: aload         4
     117: aload         5
     119: invokespecial #110                // Method "<init>":([SLjava/util/Vector;Ljava/util/Vector;)V
     122: areturn
}
