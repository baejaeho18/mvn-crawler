Compiled from "ReferrerPolicyServerHttpHeadersWriter.java"
public final class org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter implements org.springframework.security.web.server.header.ServerHttpHeadersWriter {
  public static final java.lang.String REFERRER_POLICY;

  private org.springframework.security.web.server.header.ServerHttpHeadersWriter delegate;

  public org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy.NO_REFERRER:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
       8: invokestatic  #3                  // Method createDelegate:(Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;)Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      11: putfield      #4                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      14: return

  public reactor.core.publisher.Mono<java.lang.Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/springframework/security/web/server/header/ServerHttpHeadersWriter.writeHttpHeaders:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      10: areturn

  public void setPolicy(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy);
    Code:
       0: aload_1
       1: ldc           #6                  // String policy must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #3                  // Method createDelegate:(Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;)Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      11: putfield      #4                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      14: return

  private static org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate(org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy);
    Code:
       0: invokestatic  #8                  // Method org/springframework/security/web/server/header/StaticServerHttpHeadersWriter.builder:()Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder;
       3: ldc           #10                 // String Referrer-Policy
       5: iconst_1
       6: anewarray     #11                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_0
      12: invokevirtual #12                 // Method org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy.getPolicy:()Ljava/lang/String;
      15: aastore
      16: invokevirtual #13                 // Method org/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder.header:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder;
      19: invokevirtual #14                 // Method org/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder.build:()Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter;
      22: areturn
}
