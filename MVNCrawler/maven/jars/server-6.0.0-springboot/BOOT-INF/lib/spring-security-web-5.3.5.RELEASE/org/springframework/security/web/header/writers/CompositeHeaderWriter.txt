Compiled from "CompositeHeaderWriter.java"
public class org.springframework.security.web.header.writers.CompositeHeaderWriter implements org.springframework.security.web.header.HeaderWriter {
  private final java.util.List<org.springframework.security.web.header.HeaderWriter> headerWriters;

  public org.springframework.security.web.header.writers.CompositeHeaderWriter(java.util.List<org.springframework.security.web.header.HeaderWriter>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String headerWriters cannot be empty
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field headerWriters:Ljava/util/List;
      15: return

  public void writeHeaders(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerWriters:Ljava/util/List;
       4: aload_1
       5: aload_2
       6: invokedynamic #5,  0              // InvokeDynamic #0:accept:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/function/Consumer;
      11: invokeinterface #6,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      16: return

  private static void lambda$writeHeaders$0(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.web.header.HeaderWriter);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #7,  3            // InterfaceMethod org/springframework/security/web/header/HeaderWriter.writeHeaders:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       8: return
}
