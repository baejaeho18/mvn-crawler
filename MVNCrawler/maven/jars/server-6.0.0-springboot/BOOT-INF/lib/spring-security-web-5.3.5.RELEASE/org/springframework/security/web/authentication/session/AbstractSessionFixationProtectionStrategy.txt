Compiled from "AbstractSessionFixationProtectionStrategy.java"
abstract class org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy implements org.springframework.security.web.authentication.session.SessionAuthenticationStrategy,org.springframework.context.ApplicationEventPublisherAware {
  protected final org.apache.commons.logging.Log logger;

  private org.springframework.context.ApplicationEventPublisher applicationEventPublisher;

  private boolean alwaysCreateSession;

  org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy$NullEventPublisher
      19: dup
      20: invokespecial #6                  // Method org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy$NullEventPublisher."<init>":()V
      23: putfield      #7                  // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      26: return

  public void onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_2
       1: iconst_0
       2: invokeinterface #8,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore        4
      17: iload         4
      19: ifne          30
      22: aload_0
      23: getfield      #9                  // Field alwaysCreateSession:Z
      26: ifne          30
      29: return
      30: aload_2
      31: invokeinterface #10,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:()Ljavax/servlet/http/HttpSession;
      36: astore        5
      38: iload         4
      40: ifeq          134
      43: aload_2
      44: invokeinterface #11,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isRequestedSessionIdValid:()Z
      49: ifeq          134
      52: aload         5
      54: invokestatic  #12                 // Method org/springframework/web/util/WebUtils.getSessionMutex:(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;
      57: astore        8
      59: aload         8
      61: dup
      62: astore        9
      64: monitorenter
      65: aload         5
      67: invokeinterface #13,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
      72: astore        6
      74: aload_0
      75: aload_2
      76: invokevirtual #14                 // Method applySessionFixation:(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/HttpSession;
      79: astore        5
      81: aload         5
      83: invokeinterface #13,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
      88: astore        7
      90: aload         9
      92: monitorexit
      93: goto          104
      96: astore        10
      98: aload         9
     100: monitorexit
     101: aload         10
     103: athrow
     104: aload         6
     106: aload         7
     108: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     111: ifeq          125
     114: aload_0
     115: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     118: ldc           #16                 // String Your servlet container did not change the session ID when a new session was created. You will not be adequately protected against session-fixation attacks
     120: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     125: aload_0
     126: aload         6
     128: aload         5
     130: aload_1
     131: invokevirtual #18                 // Method onSessionChange:(Ljava/lang/String;Ljavax/servlet/http/HttpSession;Lorg/springframework/security/core/Authentication;)V
     134: return
    Exception table:
       from    to  target type
          65    93    96   any
          96   101    96   any

  abstract javax.servlet.http.HttpSession applySessionFixation(javax.servlet.http.HttpServletRequest);

  protected void onSessionChange(java.lang.String, javax.servlet.http.HttpSession, org.springframework.security.core.Authentication);
    Code:
       0: aload_0
       1: getfield      #7                  // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
       4: new           #19                 // class org/springframework/security/web/authentication/session/SessionFixationProtectionEvent
       7: dup
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokeinterface #13,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
      16: invokespecial #20                 // Method org/springframework/security/web/authentication/session/SessionFixationProtectionEvent."<init>":(Lorg/springframework/security/core/Authentication;Ljava/lang/String;Ljava/lang/String;)V
      19: invokeinterface #21,  2           // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      24: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_1
       1: ldc           #22                 // String applicationEventPublisher cannot be null
       3: invokestatic  #23                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      11: return

  public void setAlwaysCreateSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field alwaysCreateSession:Z
       5: return
}
