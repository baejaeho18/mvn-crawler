Compiled from "SecureChannelProcessor.java"
public class org.springframework.security.web.access.channel.SecureChannelProcessor implements org.springframework.beans.factory.InitializingBean,org.springframework.security.web.access.channel.ChannelProcessor {
  private org.springframework.security.web.access.channel.ChannelEntryPoint entryPoint;

  private java.lang.String secureKeyword;

  public org.springframework.security.web.access.channel.SecureChannelProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/security/web/access/channel/RetryWithHttpsEntryPoint
       8: dup
       9: invokespecial #3                  // Method org/springframework/security/web/access/channel/RetryWithHttpsEntryPoint."<init>":()V
      12: putfield      #4                  // Field entryPoint:Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
      15: aload_0
      16: ldc           #5                  // String REQUIRES_SECURE_CHANNEL
      18: putfield      #6                  // Field secureKeyword:Ljava/lang/String;
      21: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field secureKeyword:Ljava/lang/String;
       4: ldc           #7                  // String secureKeyword required
       6: invokestatic  #8                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #4                  // Field entryPoint:Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
      13: ldc           #9                  // String entryPoint required
      15: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: return

  public void decide(org.springframework.security.web.FilterInvocation, java.util.Collection<org.springframework.security.access.ConfigAttribute>) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_2
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #11                 // String Nulls cannot be provided
      15: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      18: aload_2
      19: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          86
      34: aload_3
      35: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #16                 // class org/springframework/security/access/ConfigAttribute
      43: astore        4
      45: aload_0
      46: aload         4
      48: invokevirtual #17                 // Method supports:(Lorg/springframework/security/access/ConfigAttribute;)Z
      51: ifeq          83
      54: aload_1
      55: invokevirtual #18                 // Method org/springframework/security/web/FilterInvocation.getHttpRequest:()Ljavax/servlet/http/HttpServletRequest;
      58: invokeinterface #19,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isSecure:()Z
      63: ifne          83
      66: aload_0
      67: getfield      #4                  // Field entryPoint:Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
      70: aload_1
      71: invokevirtual #20                 // Method org/springframework/security/web/FilterInvocation.getRequest:()Ljavax/servlet/http/HttpServletRequest;
      74: aload_1
      75: invokevirtual #21                 // Method org/springframework/security/web/FilterInvocation.getResponse:()Ljavax/servlet/http/HttpServletResponse;
      78: invokeinterface #22,  3           // InterfaceMethod org/springframework/security/web/access/channel/ChannelEntryPoint.commence:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      83: goto          25
      86: return

  public org.springframework.security.web.access.channel.ChannelEntryPoint getEntryPoint();
    Code:
       0: aload_0
       1: getfield      #4                  // Field entryPoint:Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
       4: areturn

  public java.lang.String getSecureKeyword();
    Code:
       0: aload_0
       1: getfield      #6                  // Field secureKeyword:Ljava/lang/String;
       4: areturn

  public void setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field entryPoint:Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
       5: return

  public void setSecureKeyword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field secureKeyword:Ljava/lang/String;
       5: return

  public boolean supports(org.springframework.security.access.ConfigAttribute);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: invokeinterface #23,  1           // InterfaceMethod org/springframework/security/access/ConfigAttribute.getAttribute:()Ljava/lang/String;
      10: ifnull        33
      13: aload_1
      14: invokeinterface #23,  1           // InterfaceMethod org/springframework/security/access/ConfigAttribute.getAttribute:()Ljava/lang/String;
      19: aload_0
      20: invokevirtual #24                 // Method getSecureKeyword:()Ljava/lang/String;
      23: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn
}
