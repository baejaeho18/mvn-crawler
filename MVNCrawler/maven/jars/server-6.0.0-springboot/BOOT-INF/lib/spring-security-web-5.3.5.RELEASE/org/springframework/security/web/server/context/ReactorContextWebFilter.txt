Compiled from "ReactorContextWebFilter.java"
public class org.springframework.security.web.server.context.ReactorContextWebFilter implements org.springframework.web.server.WebFilter {
  private final org.springframework.security.web.server.context.ServerSecurityContextRepository repository;

  public org.springframework.security.web.server.context.ReactorContextWebFilter(org.springframework.security.web.server.context.ServerSecurityContextRepository);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String repository cannot be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field repository:Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;
      15: return

  public reactor.core.publisher.Mono<java.lang.Void> filter(org.springframework.web.server.ServerWebExchange, org.springframework.web.server.WebFilterChain);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod org/springframework/web/server/WebFilterChain.filter:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
       7: aload_0
       8: aload_1
       9: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/springframework/security/web/server/context/ReactorContextWebFilter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      14: invokevirtual #7                  // Method reactor/core/publisher/Mono.subscriberContext:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      17: areturn

  private reactor.util.context.Context withSecurityContext(reactor.util.context.Context, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field repository:Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;
       5: aload_2
       6: invokeinterface #8,  2            // InterfaceMethod org/springframework/security/web/server/context/ServerSecurityContextRepository.load:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      11: invokedynamic #9,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      16: invokevirtual #10                 // Method reactor/core/publisher/Mono.as:(Ljava/util/function/Function;)Ljava/lang/Object;
      19: checkcast     #11                 // class reactor/util/context/Context
      22: invokeinterface #12,  2           // InterfaceMethod reactor/util/context/Context.putAll:(Lreactor/util/context/Context;)Lreactor/util/context/Context;
      27: areturn

  private reactor.util.context.Context lambda$filter$0(org.springframework.web.server.ServerWebExchange, reactor.util.context.Context);
    Code:
       0: aload_2
       1: ldc           #13                 // class org/springframework/security/core/context/SecurityContext
       3: invokeinterface #14,  2           // InterfaceMethod reactor/util/context/Context.hasKey:(Ljava/lang/Object;)Z
       8: ifeq          15
      11: aload_2
      12: goto          21
      15: aload_0
      16: aload_2
      17: aload_1
      18: invokespecial #15                 // Method withSecurityContext:(Lreactor/util/context/Context;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/util/context/Context;
      21: areturn
}
