Compiled from "ChannelProcessingFilter.java"
public class org.springframework.security.web.access.channel.ChannelProcessingFilter extends org.springframework.web.filter.GenericFilterBean {
  private org.springframework.security.web.access.channel.ChannelDecisionManager channelDecisionManager;

  private org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource securityMetadataSource;

  public org.springframework.security.web.access.channel.ChannelProcessingFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/GenericFilterBean."<init>":()V
       4: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field securityMetadataSource:Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
       4: ldc           #3                  // String securityMetadataSource must be specified
       6: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #5                  // Field channelDecisionManager:Lorg/springframework/security/web/access/channel/ChannelDecisionManager;
      13: ldc           #6                  // String channelDecisionManager must be specified
      15: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: getfield      #2                  // Field securityMetadataSource:Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
      22: invokeinterface #7,  1            // InterfaceMethod org/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource.getAllConfigAttributes:()Ljava/util/Collection;
      27: astore_1
      28: aload_1
      29: ifnonnull     56
      32: aload_0
      33: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      36: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      41: ifeq          55
      44: aload_0
      45: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      48: ldc           #10                 // String Could not validate configuration attributes as the FilterInvocationSecurityMetadataSource did not return any attributes
      50: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      55: return
      56: new           #12                 // class java/util/HashSet
      59: dup
      60: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      63: astore_2
      64: aload_1
      65: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      70: astore_3
      71: aload_3
      72: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          117
      80: aload_3
      81: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #17                 // class org/springframework/security/access/ConfigAttribute
      89: astore        4
      91: aload_0
      92: getfield      #5                  // Field channelDecisionManager:Lorg/springframework/security/web/access/channel/ChannelDecisionManager;
      95: aload         4
      97: invokeinterface #18,  2           // InterfaceMethod org/springframework/security/web/access/channel/ChannelDecisionManager.supports:(Lorg/springframework/security/access/ConfigAttribute;)Z
     102: ifne          114
     105: aload_2
     106: aload         4
     108: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     113: pop
     114: goto          71
     117: aload_2
     118: invokeinterface #20,  1           // InterfaceMethod java/util/Set.size:()I
     123: ifne          152
     126: aload_0
     127: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
     130: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     135: ifeq          179
     138: aload_0
     139: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
     142: ldc           #22                 // String Validated configuration attributes
     144: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     149: goto          179
     152: new           #24                 // class java/lang/IllegalArgumentException
     155: dup
     156: new           #25                 // class java/lang/StringBuilder
     159: dup
     160: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     163: ldc           #27                 // String Unsupported configuration attributes:
     165: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_2
     169: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     172: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: return

  public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: checkcast     #32                 // class javax/servlet/http/HttpServletRequest
       4: astore        4
       6: aload_2
       7: checkcast     #33                 // class javax/servlet/http/HttpServletResponse
      10: astore        5
      12: new           #34                 // class org/springframework/security/web/FilterInvocation
      15: dup
      16: aload         4
      18: aload         5
      20: aload_3
      21: invokespecial #35                 // Method org/springframework/security/web/FilterInvocation."<init>":(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
      24: astore        6
      26: aload_0
      27: getfield      #2                  // Field securityMetadataSource:Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
      30: aload         6
      32: invokeinterface #36,  2           // InterfaceMethod org/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource.getAttributes:(Ljava/lang/Object;)Ljava/util/Collection;
      37: astore        7
      39: aload         7
      41: ifnull        125
      44: aload_0
      45: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      48: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      53: ifeq          98
      56: aload_0
      57: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      60: new           #25                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #38                 // String Request:
      69: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload         6
      74: invokevirtual #39                 // Method org/springframework/security/web/FilterInvocation.toString:()Ljava/lang/String;
      77: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #40                 // String ; ConfigAttributes:
      82: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload         7
      87: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      98: aload_0
      99: getfield      #5                  // Field channelDecisionManager:Lorg/springframework/security/web/access/channel/ChannelDecisionManager;
     102: aload         6
     104: aload         7
     106: invokeinterface #42,  3           // InterfaceMethod org/springframework/security/web/access/channel/ChannelDecisionManager.decide:(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
     111: aload         6
     113: invokevirtual #43                 // Method org/springframework/security/web/FilterInvocation.getResponse:()Ljavax/servlet/http/HttpServletResponse;
     116: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.isCommitted:()Z
     121: ifeq          125
     124: return
     125: aload_3
     126: aload         4
     128: aload         5
     130: invokeinterface #45,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     135: return

  protected org.springframework.security.web.access.channel.ChannelDecisionManager getChannelDecisionManager();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channelDecisionManager:Lorg/springframework/security/web/access/channel/ChannelDecisionManager;
       4: areturn

  protected org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource getSecurityMetadataSource();
    Code:
       0: aload_0
       1: getfield      #2                  // Field securityMetadataSource:Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
       4: areturn

  public void setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field channelDecisionManager:Lorg/springframework/security/web/access/channel/ChannelDecisionManager;
       5: return

  public void setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field securityMetadataSource:Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
       5: return
}
