Compiled from "AbstractRetryEntryPoint.java"
public abstract class org.springframework.security.web.access.channel.AbstractRetryEntryPoint implements org.springframework.security.web.access.channel.ChannelEntryPoint {
  protected final org.apache.commons.logging.Log logger;

  private org.springframework.security.web.PortMapper portMapper;

  private org.springframework.security.web.PortResolver portResolver;

  private final java.lang.String scheme;

  private final int standardPort;

  private org.springframework.security.web.RedirectStrategy redirectStrategy;

  public org.springframework.security.web.access.channel.AbstractRetryEntryPoint(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class org/springframework/security/web/PortMapperImpl
      19: dup
      20: invokespecial #6                  // Method org/springframework/security/web/PortMapperImpl."<init>":()V
      23: putfield      #7                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      26: aload_0
      27: new           #8                  // class org/springframework/security/web/PortResolverImpl
      30: dup
      31: invokespecial #9                  // Method org/springframework/security/web/PortResolverImpl."<init>":()V
      34: putfield      #10                 // Field portResolver:Lorg/springframework/security/web/PortResolver;
      37: aload_0
      38: new           #11                 // class org/springframework/security/web/DefaultRedirectStrategy
      41: dup
      42: invokespecial #12                 // Method org/springframework/security/web/DefaultRedirectStrategy."<init>":()V
      45: putfield      #13                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
      48: aload_0
      49: aload_1
      50: putfield      #14                 // Field scheme:Ljava/lang/String;
      53: aload_0
      54: iload_2
      55: putfield      #15                 // Field standardPort:I
      58: return

  public void commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
       6: astore_3
       7: new           #17                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_1
      15: invokeinterface #19,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      20: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_3
      24: ifnonnull     32
      27: ldc           #21                 // String
      29: goto          51
      32: new           #17                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #22                 // String ?
      41: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_3
      45: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore        4
      59: aload_0
      60: getfield      #10                 // Field portResolver:Lorg/springframework/security/web/PortResolver;
      63: aload_1
      64: invokeinterface #24,  2           // InterfaceMethod org/springframework/security/web/PortResolver.getServerPort:(Ljavax/servlet/ServletRequest;)I
      69: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      72: astore        5
      74: aload_0
      75: aload         5
      77: invokevirtual #26                 // Method getMappedPort:(Ljava/lang/Integer;)Ljava/lang/Integer;
      80: astore        6
      82: aload         6
      84: ifnull        172
      87: aload         6
      89: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
      92: aload_0
      93: getfield      #15                 // Field standardPort:I
      96: if_icmpeq     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        7
     106: new           #17                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     113: aload_0
     114: getfield      #14                 // Field scheme:Ljava/lang/String;
     117: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_1
     121: invokeinterface #28,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServerName:()Ljava/lang/String;
     126: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: iload         7
     131: ifeq          157
     134: new           #17                 // class java/lang/StringBuilder
     137: dup
     138: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     141: ldc           #29                 // String :
     143: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         6
     148: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     151: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: goto          159
     157: ldc           #21                 // String
     159: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload         4
     164: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: astore        4
     172: aload_0
     173: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     176: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     181: ifeq          213
     184: aload_0
     185: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     188: new           #17                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     195: ldc           #32                 // String Redirecting to:
     197: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload         4
     202: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     213: aload_0
     214: getfield      #13                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
     217: aload_1
     218: aload_2
     219: aload         4
     221: invokeinterface #34,  4           // InterfaceMethod org/springframework/security/web/RedirectStrategy.sendRedirect:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V
     226: return

  protected abstract java.lang.Integer getMappedPort(java.lang.Integer);

  protected final org.springframework.security.web.PortMapper getPortMapper();
    Code:
       0: aload_0
       1: getfield      #7                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
       4: areturn

  public void setPortMapper(org.springframework.security.web.PortMapper);
    Code:
       0: aload_1
       1: ldc           #35                 // String portMapper cannot be null
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      11: return

  public void setPortResolver(org.springframework.security.web.PortResolver);
    Code:
       0: aload_1
       1: ldc           #37                 // String portResolver cannot be null
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #10                 // Field portResolver:Lorg/springframework/security/web/PortResolver;
      11: return

  protected final org.springframework.security.web.PortResolver getPortResolver();
    Code:
       0: aload_0
       1: getfield      #10                 // Field portResolver:Lorg/springframework/security/web/PortResolver;
       4: areturn

  public void setRedirectStrategy(org.springframework.security.web.RedirectStrategy);
    Code:
       0: aload_1
       1: ldc           #38                 // String redirectStrategy cannot be null
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
      11: return

  protected final org.springframework.security.web.RedirectStrategy getRedirectStrategy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
       4: areturn
}
