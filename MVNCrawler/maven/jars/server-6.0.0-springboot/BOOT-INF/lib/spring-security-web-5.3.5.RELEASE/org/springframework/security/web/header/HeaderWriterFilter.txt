Compiled from "HeaderWriterFilter.java"
public class org.springframework.security.web.header.HeaderWriterFilter extends org.springframework.web.filter.OncePerRequestFilter {
  private final java.util.List<org.springframework.security.web.header.HeaderWriter> headerWriters;

  private boolean shouldWriteHeadersEagerly;

  public org.springframework.security.web.header.HeaderWriterFilter(java.util.List<org.springframework.security.web.header.HeaderWriter>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field shouldWriteHeadersEagerly:Z
       9: aload_1
      10: ldc           #3                  // String headerWriters cannot be null or empty
      12: invokestatic  #4                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field headerWriters:Ljava/util/List;
      20: return

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field shouldWriteHeadersEagerly:Z
       4: ifeq          17
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #6                  // Method doHeadersBefore:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
      14: goto          24
      17: aload_0
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokespecial #7                  // Method doHeadersAfter:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
      24: return

  private void doHeadersBefore(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #8                  // Method writeHeaders:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_3
       7: aload_1
       8: aload_2
       9: invokeinterface #9,  3            // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      14: return

  private void doHeadersAfter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: new           #10                 // class org/springframework/security/web/header/HeaderWriterFilter$HeaderWriterResponse
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #11                 // Method org/springframework/security/web/header/HeaderWriterFilter$HeaderWriterResponse."<init>":(Lorg/springframework/security/web/header/HeaderWriterFilter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      10: astore        4
      12: new           #12                 // class org/springframework/security/web/header/HeaderWriterFilter$HeaderWriterRequest
      15: dup
      16: aload_1
      17: aload         4
      19: invokespecial #13                 // Method org/springframework/security/web/header/HeaderWriterFilter$HeaderWriterRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/header/HeaderWriterFilter$HeaderWriterResponse;)V
      22: astore        5
      24: aload_3
      25: aload         5
      27: aload         4
      29: invokeinterface #9,  3            // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      34: aload         4
      36: invokevirtual #14                 // Method org/springframework/security/web/header/HeaderWriterFilter$HeaderWriterResponse.writeHeaders:()V
      39: goto          52
      42: astore        6
      44: aload         4
      46: invokevirtual #14                 // Method org/springframework/security/web/header/HeaderWriterFilter$HeaderWriterResponse.writeHeaders:()V
      49: aload         6
      51: athrow
      52: return
    Exception table:
       from    to  target type
          24    34    42   any
          42    44    42   any

  void writeHeaders(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headerWriters:Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_3
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #18                 // class org/springframework/security/web/header/HeaderWriter
      28: astore        4
      30: aload         4
      32: aload_1
      33: aload_2
      34: invokeinterface #19,  3           // InterfaceMethod org/springframework/security/web/header/HeaderWriter.writeHeaders:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      39: goto          10
      42: return

  public void setShouldWriteHeadersEagerly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field shouldWriteHeadersEagerly:Z
       5: return
}
