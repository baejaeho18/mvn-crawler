Compiled from "MediaTypeServerWebExchangeMatcher.java"
public class org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher implements org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher {
  private final org.apache.commons.logging.Log logger;

  private final java.util.Collection<org.springframework.http.MediaType> matchingMediaTypes;

  private boolean useEquals;

  private java.util.Set<org.springframework.http.MediaType> ignoredMediaTypes;

  public org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher(org.springframework.http.MediaType...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      19: putfield      #6                  // Field ignoredMediaTypes:Ljava/util/Set;
      22: aload_1
      23: ldc           #7                  // String matchingMediaTypes cannot be null
      25: invokestatic  #8                  // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
      28: aload_1
      29: ldc           #9                  // String matchingMediaTypes cannot contain null
      31: invokestatic  #10                 // Method org/springframework/util/Assert.noNullElements:([Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_1
      36: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      39: putfield      #12                 // Field matchingMediaTypes:Ljava/util/Collection;
      42: return

  public org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher(java.util.Collection<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      19: putfield      #6                  // Field ignoredMediaTypes:Ljava/util/Set;
      22: aload_1
      23: ldc           #7                  // String matchingMediaTypes cannot be null
      25: invokestatic  #13                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      28: aload_1
      29: aconst_null
      30: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: aload_1
      44: invokedynamic #15,  0             // InvokeDynamic #0:get:(Ljava/util/Collection;)Ljava/util/function/Supplier;
      49: invokestatic  #16                 // Method org/springframework/util/Assert.isTrue:(ZLjava/util/function/Supplier;)V
      52: aload_0
      53: aload_1
      54: putfield      #12                 // Field matchingMediaTypes:Ljava/util/Collection;
      57: return

  public reactor.core.publisher.Mono<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult> matches(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method resolveMediaTypes:(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;
       5: astore_2
       6: goto          26
       9: astore_3
      10: aload_0
      11: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      14: ldc           #19                 // String Failed to parse MediaTypes, returning false
      16: aload_3
      17: invokeinterface #20,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      22: invokestatic  #21                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.notMatch:()Lreactor/core/publisher/Mono;
      25: areturn
      26: aload_0
      27: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      30: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      35: ifeq          66
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: new           #23                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #25                 // String httpRequestMediaTypes=
      51: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_2
      55: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      66: aload_2
      67: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore_3
      73: aload_3
      74: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          334
      82: aload_3
      83: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #33                 // class org/springframework/http/MediaType
      91: astore        4
      93: aload_0
      94: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      97: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     102: ifeq          134
     105: aload_0
     106: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     109: new           #23                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #34                 // String Processing
     118: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload         4
     123: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     126: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     134: aload_0
     135: aload         4
     137: invokespecial #35                 // Method shouldIgnore:(Lorg/springframework/http/MediaType;)Z
     140: ifeq          157
     143: aload_0
     144: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     147: ldc           #36                 // String Ignoring
     149: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     154: goto          73
     157: aload_0
     158: getfield      #37                 // Field useEquals:Z
     161: ifeq          221
     164: aload_0
     165: getfield      #12                 // Field matchingMediaTypes:Ljava/util/Collection;
     168: aload         4
     170: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
     175: istore        5
     177: aload_0
     178: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     181: new           #23                 // class java/lang/StringBuilder
     184: dup
     185: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     188: ldc           #38                 // String isEqualTo
     190: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: iload         5
     195: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     198: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     206: iload         5
     208: ifeq          217
     211: invokestatic  #40                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.match:()Lreactor/core/publisher/Mono;
     214: goto          220
     217: invokestatic  #21                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.notMatch:()Lreactor/core/publisher/Mono;
     220: areturn
     221: aload_0
     222: getfield      #12                 // Field matchingMediaTypes:Ljava/util/Collection;
     225: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     230: astore        5
     232: aload         5
     234: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     239: ifeq          331
     242: aload         5
     244: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     249: checkcast     #33                 // class org/springframework/http/MediaType
     252: astore        6
     254: aload         6
     256: aload         4
     258: invokevirtual #42                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
     261: istore        7
     263: aload_0
     264: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     267: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     272: ifeq          319
     275: aload_0
     276: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     279: new           #23                 // class java/lang/StringBuilder
     282: dup
     283: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     286: aload         6
     288: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     291: ldc           #43                 // String  .isCompatibleWith
     293: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     296: aload         4
     298: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     301: ldc           #44                 // String  =
     303: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     306: iload         7
     308: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     311: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     314: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     319: iload         7
     321: ifeq          328
     324: invokestatic  #40                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.match:()Lreactor/core/publisher/Mono;
     327: areturn
     328: goto          232
     331: goto          73
     334: aload_0
     335: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     338: ldc           #45                 // String Did not match any media types
     340: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     345: invokestatic  #21                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.notMatch:()Lreactor/core/publisher/Mono;
     348: areturn
    Exception table:
       from    to  target type
           0     6     9   Class org/springframework/web/server/NotAcceptableStatusException

  private boolean shouldIgnore(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #6                  // Field ignoredMediaTypes:Ljava/util/Set;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #33                 // class org/springframework/http/MediaType
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #47                 // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: goto          10
      42: iconst_0
      43: ireturn

  public void setUseEquals(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field useEquals:Z
       5: return

  public void setIgnoredMediaTypes(java.util.Set<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field ignoredMediaTypes:Ljava/util/Set;
       5: return

  private java.util.List<org.springframework.http.MediaType> resolveMediaTypes(org.springframework.web.server.ServerWebExchange) throws org.springframework.web.server.NotAcceptableStatusException;
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       6: invokeinterface #49,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: invokevirtual #50                 // Method org/springframework/http/HttpHeaders.getAccept:()Ljava/util/List;
      14: astore_2
      15: aload_2
      16: invokestatic  #51                 // Method org/springframework/http/MediaType.sortBySpecificityAndQuality:(Ljava/util/List;)V
      19: aload_2
      20: areturn
      21: astore_2
      22: aload_1
      23: invokeinterface #48,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      28: invokeinterface #49,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      33: ldc           #53                 // String Accept
      35: invokevirtual #54                 // Method org/springframework/http/HttpHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
      38: astore_3
      39: new           #18                 // class org/springframework/web/server/NotAcceptableStatusException
      42: dup
      43: new           #23                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #55                 // String Could not parse \'Accept\' header [
      52: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #56                 // String ]:
      61: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_2
      65: invokevirtual #57                 // Method org/springframework/http/InvalidMediaTypeException.getMessage:()Ljava/lang/String;
      68: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #58                 // Method org/springframework/web/server/NotAcceptableStatusException."<init>":(Ljava/lang/String;)V
      77: athrow
    Exception table:
       from    to  target type
           0    20    21   Class org/springframework/http/InvalidMediaTypeException

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #59                 // String MediaTypeRequestMatcher [matchingMediaTypes=
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field matchingMediaTypes:Ljava/util/Collection;
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #60                 // String , useEquals=
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #37                 // Field useEquals:Z
      28: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: ldc           #61                 // String , ignoredMediaTypes=
      33: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field ignoredMediaTypes:Ljava/util/Set;
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #62                 // String ]
      45: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  private static java.lang.String lambda$new$0(java.util.Collection);
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #63                 // String matchingMediaTypes cannot contain null. Got
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn
}
