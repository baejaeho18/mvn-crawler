Compiled from "LoginUrlAuthenticationEntryPoint.java"
public class org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint implements org.springframework.security.web.AuthenticationEntryPoint,org.springframework.beans.factory.InitializingBean {
  private static final org.apache.commons.logging.Log logger;

  private org.springframework.security.web.PortMapper portMapper;

  private org.springframework.security.web.PortResolver portResolver;

  private java.lang.String loginFormUrl;

  private boolean forceHttps;

  private boolean useForward;

  private final org.springframework.security.web.RedirectStrategy redirectStrategy;

  public org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/security/web/PortMapperImpl
       8: dup
       9: invokespecial #3                  // Method org/springframework/security/web/PortMapperImpl."<init>":()V
      12: putfield      #4                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      15: aload_0
      16: new           #5                  // class org/springframework/security/web/PortResolverImpl
      19: dup
      20: invokespecial #6                  // Method org/springframework/security/web/PortResolverImpl."<init>":()V
      23: putfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      26: aload_0
      27: iconst_0
      28: putfield      #8                  // Field forceHttps:Z
      31: aload_0
      32: iconst_0
      33: putfield      #9                  // Field useForward:Z
      36: aload_0
      37: new           #10                 // class org/springframework/security/web/DefaultRedirectStrategy
      40: dup
      41: invokespecial #11                 // Method org/springframework/security/web/DefaultRedirectStrategy."<init>":()V
      44: putfield      #12                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
      47: aload_1
      48: ldc           #13                 // String loginFormUrl cannot be null
      50: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload_0
      54: aload_1
      55: putfield      #15                 // Field loginFormUrl:Ljava/lang/String;
      58: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #15                 // Field loginFormUrl:Ljava/lang/String;
       4: invokestatic  #16                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          24
      10: aload_0
      11: getfield      #15                 // Field loginFormUrl:Ljava/lang/String;
      14: invokestatic  #17                 // Method org/springframework/security/web/util/UrlUtils.isValidRedirectUrl:(Ljava/lang/String;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #18                 // String loginFormUrl must be specified and must be a valid redirect URL
      27: invokestatic  #19                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      30: aload_0
      31: getfield      #9                  // Field useForward:Z
      34: ifeq          57
      37: aload_0
      38: getfield      #15                 // Field loginFormUrl:Ljava/lang/String;
      41: invokestatic  #20                 // Method org/springframework/security/web/util/UrlUtils.isAbsoluteUrl:(Ljava/lang/String;)Z
      44: ifeq          57
      47: new           #21                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #22                 // String useForward must be false if using an absolute loginFormURL
      53: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #4                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      61: ldc           #24                 // String portMapper must be specified
      63: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      66: aload_0
      67: getfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      70: ldc           #25                 // String portResolver must be specified
      72: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      75: return

  protected java.lang.String determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLoginFormUrl:()Ljava/lang/String;
       4: areturn

  public void commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #9                  // Field useForward:Z
       7: ifeq          111
      10: aload_0
      11: getfield      #8                  // Field forceHttps:Z
      14: ifeq          38
      17: ldc           #27                 // String http
      19: aload_1
      20: invokeinterface #28,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getScheme:()Ljava/lang/String;
      25: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          38
      31: aload_0
      32: aload_1
      33: invokevirtual #30                 // Method buildHttpsRedirectUrlForRequest:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      36: astore        4
      38: aload         4
      40: ifnonnull     120
      43: aload_0
      44: aload_1
      45: aload_2
      46: aload_3
      47: invokevirtual #31                 // Method determineUrlToUseForThisRequest:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)Ljava/lang/String;
      50: astore        5
      52: getstatic     #32                 // Field logger:Lorg/apache/commons/logging/Log;
      55: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      60: ifeq          91
      63: getstatic     #32                 // Field logger:Lorg/apache/commons/logging/Log;
      66: new           #34                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #36                 // String Server side forward to:
      75: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload         5
      80: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      91: aload_1
      92: aload         5
      94: invokeinterface #40,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestDispatcher:(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
      99: astore        6
     101: aload         6
     103: aload_1
     104: aload_2
     105: invokeinterface #41,  3           // InterfaceMethod javax/servlet/RequestDispatcher.forward:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     110: return
     111: aload_0
     112: aload_1
     113: aload_2
     114: aload_3
     115: invokevirtual #42                 // Method buildRedirectUrlToLoginPage:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)Ljava/lang/String;
     118: astore        4
     120: aload_0
     121: getfield      #12                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
     124: aload_1
     125: aload_2
     126: aload         4
     128: invokeinterface #43,  4           // InterfaceMethod org/springframework/security/web/RedirectStrategy.sendRedirect:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V
     133: return

  protected java.lang.String buildRedirectUrlToLoginPage(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #31                 // Method determineUrlToUseForThisRequest:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)Ljava/lang/String;
       7: astore        4
       9: aload         4
      11: invokestatic  #20                 // Method org/springframework/security/web/util/UrlUtils.isAbsoluteUrl:(Ljava/lang/String;)Z
      14: ifeq          20
      17: aload         4
      19: areturn
      20: aload_0
      21: getfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      24: aload_1
      25: invokeinterface #44,  2           // InterfaceMethod org/springframework/security/web/PortResolver.getServerPort:(Ljavax/servlet/ServletRequest;)I
      30: istore        5
      32: aload_1
      33: invokeinterface #28,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getScheme:()Ljava/lang/String;
      38: astore        6
      40: new           #45                 // class org/springframework/security/web/util/RedirectUrlBuilder
      43: dup
      44: invokespecial #46                 // Method org/springframework/security/web/util/RedirectUrlBuilder."<init>":()V
      47: astore        7
      49: aload         7
      51: aload         6
      53: invokevirtual #47                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setScheme:(Ljava/lang/String;)V
      56: aload         7
      58: aload_1
      59: invokeinterface #48,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServerName:()Ljava/lang/String;
      64: invokevirtual #49                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setServerName:(Ljava/lang/String;)V
      67: aload         7
      69: iload         5
      71: invokevirtual #50                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setPort:(I)V
      74: aload         7
      76: aload_1
      77: invokeinterface #51,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
      82: invokevirtual #52                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setContextPath:(Ljava/lang/String;)V
      85: aload         7
      87: aload         4
      89: invokevirtual #53                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setPathInfo:(Ljava/lang/String;)V
      92: aload_0
      93: getfield      #8                  // Field forceHttps:Z
      96: ifeq          178
      99: ldc           #27                 // String http
     101: aload         6
     103: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifeq          178
     109: aload_0
     110: getfield      #4                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
     113: iload         5
     115: invokestatic  #54                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: invokeinterface #55,  2           // InterfaceMethod org/springframework/security/web/PortMapper.lookupHttpsPort:(Ljava/lang/Integer;)Ljava/lang/Integer;
     123: astore        8
     125: aload         8
     127: ifnull        150
     130: aload         7
     132: ldc           #56                 // String https
     134: invokevirtual #47                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setScheme:(Ljava/lang/String;)V
     137: aload         7
     139: aload         8
     141: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
     144: invokevirtual #50                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setPort:(I)V
     147: goto          178
     150: getstatic     #32                 // Field logger:Lorg/apache/commons/logging/Log;
     153: new           #34                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #58                 // String Unable to redirect to HTTPS as no port mapping found for HTTP port
     162: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: iload         5
     167: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     170: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokeinterface #60,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     178: aload         7
     180: invokevirtual #61                 // Method org/springframework/security/web/util/RedirectUrlBuilder.getUrl:()Ljava/lang/String;
     183: areturn

  protected java.lang.String buildHttpsRedirectUrlForRequest(javax.servlet.http.HttpServletRequest) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod org/springframework/security/web/PortResolver.getServerPort:(Ljavax/servlet/ServletRequest;)I
      10: istore_2
      11: aload_0
      12: getfield      #4                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      15: iload_2
      16: invokestatic  #54                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokeinterface #55,  2           // InterfaceMethod org/springframework/security/web/PortMapper.lookupHttpsPort:(Ljava/lang/Integer;)Ljava/lang/Integer;
      24: astore_3
      25: aload_3
      26: ifnull        115
      29: new           #45                 // class org/springframework/security/web/util/RedirectUrlBuilder
      32: dup
      33: invokespecial #46                 // Method org/springframework/security/web/util/RedirectUrlBuilder."<init>":()V
      36: astore        4
      38: aload         4
      40: ldc           #56                 // String https
      42: invokevirtual #47                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setScheme:(Ljava/lang/String;)V
      45: aload         4
      47: aload_1
      48: invokeinterface #48,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServerName:()Ljava/lang/String;
      53: invokevirtual #49                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setServerName:(Ljava/lang/String;)V
      56: aload         4
      58: aload_3
      59: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
      62: invokevirtual #50                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setPort:(I)V
      65: aload         4
      67: aload_1
      68: invokeinterface #51,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
      73: invokevirtual #52                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setContextPath:(Ljava/lang/String;)V
      76: aload         4
      78: aload_1
      79: invokeinterface #62,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServletPath:()Ljava/lang/String;
      84: invokevirtual #63                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setServletPath:(Ljava/lang/String;)V
      87: aload         4
      89: aload_1
      90: invokeinterface #64,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getPathInfo:()Ljava/lang/String;
      95: invokevirtual #53                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setPathInfo:(Ljava/lang/String;)V
      98: aload         4
     100: aload_1
     101: invokeinterface #65,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
     106: invokevirtual #66                 // Method org/springframework/security/web/util/RedirectUrlBuilder.setQuery:(Ljava/lang/String;)V
     109: aload         4
     111: invokevirtual #61                 // Method org/springframework/security/web/util/RedirectUrlBuilder.getUrl:()Ljava/lang/String;
     114: areturn
     115: getstatic     #32                 // Field logger:Lorg/apache/commons/logging/Log;
     118: new           #34                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #58                 // String Unable to redirect to HTTPS as no port mapping found for HTTP port
     127: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: iload_2
     131: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     134: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokeinterface #60,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     142: aconst_null
     143: areturn

  public void setForceHttps(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field forceHttps:Z
       5: return

  protected boolean isForceHttps();
    Code:
       0: aload_0
       1: getfield      #8                  // Field forceHttps:Z
       4: ireturn

  public java.lang.String getLoginFormUrl();
    Code:
       0: aload_0
       1: getfield      #15                 // Field loginFormUrl:Ljava/lang/String;
       4: areturn

  public void setPortMapper(org.springframework.security.web.PortMapper);
    Code:
       0: aload_1
       1: ldc           #67                 // String portMapper cannot be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      11: return

  protected org.springframework.security.web.PortMapper getPortMapper();
    Code:
       0: aload_0
       1: getfield      #4                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
       4: areturn

  public void setPortResolver(org.springframework.security.web.PortResolver);
    Code:
       0: aload_1
       1: ldc           #68                 // String portResolver cannot be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      11: return

  protected org.springframework.security.web.PortResolver getPortResolver();
    Code:
       0: aload_0
       1: getfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
       4: areturn

  public void setUseForward(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field useForward:Z
       5: return

  protected boolean isUseForward();
    Code:
       0: aload_0
       1: getfield      #9                  // Field useForward:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #69                 // class org/springframework/security/web/authentication/LoginUrlAuthenticationEntryPoint
       2: invokestatic  #70                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #32                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
