Compiled from "AbstractSecurityWebApplicationInitializer.java"
public abstract class org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer implements org.springframework.web.WebApplicationInitializer {
  private static final java.lang.String SERVLET_CONTEXT_PREFIX;

  public static final java.lang.String DEFAULT_FILTER_NAME;

  private final java.lang.Class<?>[] configurationClasses;

  protected org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field configurationClasses:[Ljava/lang/Class;
       9: return

  protected org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field configurationClasses:[Ljava/lang/Class;
       9: return

  public final void onStartup(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method beforeSpringSecurityFilterChain:(Ljavax/servlet/ServletContext;)V
       5: aload_0
       6: getfield      #2                  // Field configurationClasses:[Ljava/lang/Class;
       9: ifnull        42
      12: new           #4                  // class org/springframework/web/context/support/AnnotationConfigWebApplicationContext
      15: dup
      16: invokespecial #5                  // Method org/springframework/web/context/support/AnnotationConfigWebApplicationContext."<init>":()V
      19: astore_2
      20: aload_2
      21: aload_0
      22: getfield      #2                  // Field configurationClasses:[Ljava/lang/Class;
      25: invokevirtual #6                  // Method org/springframework/web/context/support/AnnotationConfigWebApplicationContext.register:([Ljava/lang/Class;)V
      28: aload_1
      29: new           #7                  // class org/springframework/web/context/ContextLoaderListener
      32: dup
      33: aload_2
      34: invokespecial #8                  // Method org/springframework/web/context/ContextLoaderListener."<init>":(Lorg/springframework/web/context/WebApplicationContext;)V
      37: invokeinterface #9,  2            // InterfaceMethod javax/servlet/ServletContext.addListener:(Ljava/util/EventListener;)V
      42: aload_0
      43: invokevirtual #10                 // Method enableHttpSessionEventPublisher:()Z
      46: ifeq          57
      49: aload_1
      50: ldc           #11                 // String org.springframework.security.web.session.HttpSessionEventPublisher
      52: invokeinterface #12,  2           // InterfaceMethod javax/servlet/ServletContext.addListener:(Ljava/lang/String;)V
      57: aload_1
      58: aload_0
      59: invokevirtual #13                 // Method getSessionTrackingModes:()Ljava/util/Set;
      62: invokeinterface #14,  2           // InterfaceMethod javax/servlet/ServletContext.setSessionTrackingModes:(Ljava/util/Set;)V
      67: aload_0
      68: aload_1
      69: invokespecial #15                 // Method insertSpringSecurityFilterChain:(Ljavax/servlet/ServletContext;)V
      72: aload_0
      73: aload_1
      74: invokevirtual #16                 // Method afterSpringSecurityFilterChain:(Ljavax/servlet/ServletContext;)V
      77: return

  protected boolean enableHttpSessionEventPublisher();
    Code:
       0: iconst_0
       1: ireturn

  private void insertSpringSecurityFilterChain(javax.servlet.ServletContext);
    Code:
       0: ldc           #18                 // String springSecurityFilterChain
       2: astore_2
       3: new           #19                 // class org/springframework/web/filter/DelegatingFilterProxy
       6: dup
       7: aload_2
       8: invokespecial #20                 // Method org/springframework/web/filter/DelegatingFilterProxy."<init>":(Ljava/lang/String;)V
      11: astore_3
      12: aload_0
      13: invokespecial #21                 // Method getWebApplicationContextAttribute:()Ljava/lang/String;
      16: astore        4
      18: aload         4
      20: ifnull        29
      23: aload_3
      24: aload         4
      26: invokevirtual #22                 // Method org/springframework/web/filter/DelegatingFilterProxy.setContextAttribute:(Ljava/lang/String;)V
      29: aload_0
      30: aload_1
      31: iconst_1
      32: aload_2
      33: aload_3
      34: invokespecial #23                 // Method registerFilter:(Ljavax/servlet/ServletContext;ZLjava/lang/String;Ljavax/servlet/Filter;)V
      37: return

  protected final void insertFilters(javax.servlet.ServletContext, javax.servlet.Filter...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_2
       4: invokespecial #24                 // Method registerFilters:(Ljavax/servlet/ServletContext;Z[Ljavax/servlet/Filter;)V
       7: return

  protected final void appendFilters(javax.servlet.ServletContext, javax.servlet.Filter...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #24                 // Method registerFilters:(Ljavax/servlet/ServletContext;Z[Ljavax/servlet/Filter;)V
       7: return

  private void registerFilters(javax.servlet.ServletContext, boolean, javax.servlet.Filter...);
    Code:
       0: aload_3
       1: ldc           #25                 // String filters cannot be null or empty
       3: invokestatic  #26                 // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: astore        4
       9: aload         4
      11: arraylength
      12: istore        5
      14: iconst_0
      15: istore        6
      17: iload         6
      19: iload         5
      21: if_icmpge     89
      24: aload         4
      26: iload         6
      28: aaload
      29: astore        7
      31: aload         7
      33: ifnonnull     66
      36: new           #27                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #28                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #30                 // String filters cannot contain null values. Got
      49: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_3
      53: invokestatic  #32                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      56: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload         7
      68: invokestatic  #36                 // Method org/springframework/core/Conventions.getVariableName:(Ljava/lang/Object;)Ljava/lang/String;
      71: astore        8
      73: aload_0
      74: aload_1
      75: iload_2
      76: aload         8
      78: aload         7
      80: invokespecial #23                 // Method registerFilter:(Ljavax/servlet/ServletContext;ZLjava/lang/String;Ljavax/servlet/Filter;)V
      83: iinc          6, 1
      86: goto          17
      89: return

  private void registerFilter(javax.servlet.ServletContext, boolean, java.lang.String, javax.servlet.Filter);
    Code:
       0: aload_1
       1: aload_3
       2: aload         4
       4: invokeinterface #37,  3           // InterfaceMethod javax/servlet/ServletContext.addFilter:(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
       9: astore        5
      11: aload         5
      13: ifnonnull     48
      16: new           #38                 // class java/lang/IllegalStateException
      19: dup
      20: new           #28                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #39                 // String Duplicate Filter registration for \'
      29: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_3
      33: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #40                 // String \'. Check to ensure the Filter is only configured once.
      38: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload         5
      50: aload_0
      51: invokevirtual #42                 // Method isAsyncSecuritySupported:()Z
      54: invokeinterface #43,  2           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.setAsyncSupported:(Z)V
      59: aload_0
      60: invokevirtual #44                 // Method getSecurityDispatcherTypes:()Ljava/util/EnumSet;
      63: astore        6
      65: aload         5
      67: aload         6
      69: iload_2
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: iconst_1
      79: anewarray     #45                 // class java/lang/String
      82: dup
      83: iconst_0
      84: ldc           #46                 // String /*
      86: aastore
      87: invokeinterface #47,  4           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.addMappingForUrlPatterns:(Ljava/util/EnumSet;Z[Ljava/lang/String;)V
      92: return

  private java.lang.String getWebApplicationContextAttribute();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getDispatcherWebApplicationContextSuffix:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: new           #28                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #49                 // String org.springframework.web.servlet.FrameworkServlet.CONTEXT.
      20: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  protected java.util.Set<javax.servlet.SessionTrackingMode> getSessionTrackingModes();
    Code:
       0: getstatic     #50                 // Field javax/servlet/SessionTrackingMode.COOKIE:Ljavax/servlet/SessionTrackingMode;
       3: invokestatic  #51                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       6: areturn

  protected java.lang.String getDispatcherWebApplicationContextSuffix();
    Code:
       0: aconst_null
       1: areturn

  protected void beforeSpringSecurityFilterChain(javax.servlet.ServletContext);
    Code:
       0: return

  protected void afterSpringSecurityFilterChain(javax.servlet.ServletContext);
    Code:
       0: return

  protected java.util.EnumSet<javax.servlet.DispatcherType> getSecurityDispatcherTypes();
    Code:
       0: getstatic     #52                 // Field javax/servlet/DispatcherType.REQUEST:Ljavax/servlet/DispatcherType;
       3: getstatic     #53                 // Field javax/servlet/DispatcherType.ERROR:Ljavax/servlet/DispatcherType;
       6: getstatic     #54                 // Field javax/servlet/DispatcherType.ASYNC:Ljavax/servlet/DispatcherType;
       9: invokestatic  #55                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      12: areturn

  protected boolean isAsyncSecuritySupported();
    Code:
       0: iconst_1
       1: ireturn
}
