Compiled from "CookieServerCsrfTokenRepository.java"
public final class org.springframework.security.web.server.csrf.CookieServerCsrfTokenRepository implements org.springframework.security.web.server.csrf.ServerCsrfTokenRepository {
  static final java.lang.String DEFAULT_CSRF_COOKIE_NAME;

  static final java.lang.String DEFAULT_CSRF_PARAMETER_NAME;

  static final java.lang.String DEFAULT_CSRF_HEADER_NAME;

  private java.lang.String parameterName;

  private java.lang.String headerName;

  private java.lang.String cookiePath;

  private java.lang.String cookieDomain;

  private java.lang.String cookieName;

  private boolean cookieHttpOnly;

  public org.springframework.security.web.server.csrf.CookieServerCsrfTokenRepository();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String _csrf
       7: putfield      #4                  // Field parameterName:Ljava/lang/String;
      10: aload_0
      11: ldc           #5                  // String X-XSRF-TOKEN
      13: putfield      #6                  // Field headerName:Ljava/lang/String;
      16: aload_0
      17: ldc           #7                  // String XSRF-TOKEN
      19: putfield      #8                  // Field cookieName:Ljava/lang/String;
      22: aload_0
      23: iconst_1
      24: putfield      #9                  // Field cookieHttpOnly:Z
      27: return

  public static org.springframework.security.web.server.csrf.CookieServerCsrfTokenRepository withHttpOnlyFalse();
    Code:
       0: new           #2                  // class org/springframework/security/web/server/csrf/CookieServerCsrfTokenRepository
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: astore_0
       8: aload_0
       9: iconst_0
      10: invokevirtual #11                 // Method setCookieHttpOnly:(Z)V
      13: aload_0
      14: areturn

  public reactor.core.publisher.Mono<org.springframework.security.web.server.csrf.CsrfToken> generateToken(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: invokedynamic #12,  0             // InvokeDynamic #0:call:(Lorg/springframework/security/web/server/csrf/CookieServerCsrfTokenRepository;)Ljava/util/concurrent/Callable;
       6: invokestatic  #13                 // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
       9: invokestatic  #14                 // Method reactor/core/scheduler/Schedulers.boundedElastic:()Lreactor/core/scheduler/Scheduler;
      12: invokevirtual #15                 // Method reactor/core/publisher/Mono.subscribeOn:(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Void> saveToken(org.springframework.web.server.ServerWebExchange, org.springframework.security.web.server.csrf.CsrfToken);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #16,  0             // InvokeDynamic #1:run:(Lorg/springframework/security/web/server/csrf/CookieServerCsrfTokenRepository;Lorg/springframework/security/web/server/csrf/CsrfToken;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Runnable;
       8: invokestatic  #17                 // Method reactor/core/publisher/Mono.fromRunnable:(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<org.springframework.security.web.server.csrf.CsrfToken> loadToken(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #18,  0             // InvokeDynamic #2:call:(Lorg/springframework/security/web/server/csrf/CookieServerCsrfTokenRepository;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/concurrent/Callable;
       7: invokestatic  #13                 // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
      10: areturn

  public void setCookieHttpOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field cookieHttpOnly:Z
       5: return

  public void setCookieName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #19                 // String cookieName can\'t be null
       3: invokestatic  #20                 // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #8                  // Field cookieName:Ljava/lang/String;
      11: return

  public void setParameterName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #21                 // String parameterName can\'t be null
       3: invokestatic  #20                 // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field parameterName:Ljava/lang/String;
      11: return

  public void setHeaderName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #22                 // String headerName can\'t be null
       3: invokestatic  #20                 // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field headerName:Ljava/lang/String;
      11: return

  public void setCookiePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field cookiePath:Ljava/lang/String;
       5: return

  public void setCookieDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field cookieDomain:Ljava/lang/String;
       5: return

  private org.springframework.security.web.server.csrf.CsrfToken createCsrfToken();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #25                 // Method createNewToken:()Ljava/lang/String;
       5: invokespecial #26                 // Method createCsrfToken:(Ljava/lang/String;)Lorg/springframework/security/web/server/csrf/CsrfToken;
       8: areturn

  private org.springframework.security.web.server.csrf.CsrfToken createCsrfToken(java.lang.String);
    Code:
       0: new           #27                 // class org/springframework/security/web/server/csrf/DefaultCsrfToken
       3: dup
       4: aload_0
       5: getfield      #6                  // Field headerName:Ljava/lang/String;
       8: aload_0
       9: getfield      #4                  // Field parameterName:Ljava/lang/String;
      12: aload_1
      13: invokespecial #28                 // Method org/springframework/security/web/server/csrf/DefaultCsrfToken."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      16: areturn

  private java.lang.String createNewToken();
    Code:
       0: invokestatic  #29                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
       3: invokevirtual #30                 // Method java/util/UUID.toString:()Ljava/lang/String;
       6: areturn

  private java.lang.String getRequestContext(org.springframework.http.server.reactive.ServerHttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #31,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getPath:()Lorg/springframework/http/server/RequestPath;
       6: invokeinterface #32,  1           // InterfaceMethod org/springframework/http/server/RequestPath.contextPath:()Lorg/springframework/http/server/PathContainer;
      11: invokeinterface #33,  1           // InterfaceMethod org/springframework/http/server/PathContainer.value:()Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: invokestatic  #34                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      21: ifeq          28
      24: aload_2
      25: goto          30
      28: ldc           #35                 // String /
      30: areturn

  private org.springframework.security.web.server.csrf.CsrfToken lambda$loadToken$1(org.springframework.web.server.ServerWebExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       6: invokeinterface #37,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getCookies:()Lorg/springframework/util/MultiValueMap;
      11: aload_0
      12: getfield      #8                  // Field cookieName:Ljava/lang/String;
      15: invokeinterface #38,  2           // InterfaceMethod org/springframework/util/MultiValueMap.getFirst:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #39                 // class org/springframework/http/HttpCookie
      23: astore_2
      24: aload_2
      25: ifnull        38
      28: aload_2
      29: invokevirtual #40                 // Method org/springframework/http/HttpCookie.getValue:()Ljava/lang/String;
      32: invokestatic  #41                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      35: ifne          40
      38: aconst_null
      39: areturn
      40: aload_0
      41: aload_2
      42: invokevirtual #40                 // Method org/springframework/http/HttpCookie.getValue:()Ljava/lang/String;
      45: invokespecial #26                 // Method createCsrfToken:(Ljava/lang/String;)Lorg/springframework/security/web/server/csrf/CsrfToken;
      48: areturn

  private void lambda$saveToken$0(org.springframework.security.web.server.csrf.CsrfToken, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #42,  1           // InterfaceMethod org/springframework/security/web/server/csrf/CsrfToken.getToken:()Ljava/lang/String;
      10: goto          15
      13: ldc           #43                 // String
      15: astore_3
      16: aload_3
      17: invokevirtual #44                 // Method java/lang/String.isEmpty:()Z
      20: ifne          27
      23: iconst_m1
      24: goto          28
      27: iconst_0
      28: istore        4
      30: aload_0
      31: getfield      #23                 // Field cookiePath:Ljava/lang/String;
      34: ifnull        44
      37: aload_0
      38: getfield      #23                 // Field cookiePath:Ljava/lang/String;
      41: goto          54
      44: aload_0
      45: aload_2
      46: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      51: invokespecial #45                 // Method getRequestContext:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
      54: astore        5
      56: aload_2
      57: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      62: invokeinterface #46,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getSslInfo:()Lorg/springframework/http/server/reactive/SslInfo;
      67: ifnull        74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: istore        6
      77: aload_0
      78: getfield      #8                  // Field cookieName:Ljava/lang/String;
      81: aload_3
      82: invokestatic  #47                 // Method org/springframework/http/ResponseCookie.from:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      85: aload_0
      86: getfield      #24                 // Field cookieDomain:Ljava/lang/String;
      89: invokeinterface #48,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.domain:(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      94: aload_0
      95: getfield      #9                  // Field cookieHttpOnly:Z
      98: invokeinterface #49,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.httpOnly:(Z)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
     103: iload         4
     105: i2l
     106: invokeinterface #50,  3           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.maxAge:(J)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
     111: aload         5
     113: invokeinterface #51,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.path:(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
     118: iload         6
     120: invokeinterface #52,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.secure:(Z)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
     125: invokeinterface #53,  1           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.build:()Lorg/springframework/http/ResponseCookie;
     130: astore        7
     132: aload_2
     133: invokeinterface #54,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
     138: aload         7
     140: invokeinterface #55,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.addCookie:(Lorg/springframework/http/ResponseCookie;)V
     145: return
}
