Compiled from "SubjectDnX509PrincipalExtractor.java"
public class org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor implements org.springframework.security.web.authentication.preauth.x509.X509PrincipalExtractor {
  protected final org.apache.commons.logging.Log logger;

  protected org.springframework.context.support.MessageSourceAccessor messages;

  private java.util.regex.Pattern subjectDnPattern;

  public org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method org/springframework/security/core/SpringSecurityMessageSource.getAccessor:()Lorg/springframework/context/support/MessageSourceAccessor;
      19: putfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      22: aload_0
      23: ldc           #7                  // String CN=(.*?)(?:,|$)
      25: invokevirtual #8                  // Method setSubjectDnRegex:(Ljava/lang/String;)V
      28: return

  public java.lang.Object extractPrincipal(java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/security/cert/X509Certificate.getSubjectDN:()Ljava/security/Principal;
       4: invokeinterface #10,  1           // InterfaceMethod java/security/Principal.getName:()Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #11                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #13                 // String Subject DN is \'
      23: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #15                 // String \'
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #18                 // Field subjectDnPattern:Ljava/util/regex/Pattern;
      47: aload_2
      48: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      51: astore_3
      52: aload_3
      53: invokevirtual #20                 // Method java/util/regex/Matcher.find:()Z
      56: ifne          86
      59: new           #21                 // class org/springframework/security/authentication/BadCredentialsException
      62: dup
      63: aload_0
      64: getfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      67: ldc           #22                 // String SubjectDnX509PrincipalExtractor.noMatching
      69: iconst_1
      70: anewarray     #23                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_2
      76: aastore
      77: ldc           #24                 // String No matching pattern was found in subject DN: {0}
      79: invokevirtual #25                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      82: invokespecial #26                 // Method org/springframework/security/authentication/BadCredentialsException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aload_3
      87: invokevirtual #27                 // Method java/util/regex/Matcher.groupCount:()I
      90: iconst_1
      91: if_icmpeq     104
      94: new           #28                 // class java/lang/IllegalArgumentException
      97: dup
      98: ldc           #29                 // String Regular expression must contain a single group
     100: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: iconst_1
     106: invokevirtual #31                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     109: astore        4
     111: aload_0
     112: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     115: new           #11                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #32                 // String Extracted Principal name is \'
     124: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         4
     129: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #15                 // String \'
     134: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     145: aload         4
     147: areturn

  public void setSubjectDnRegex(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #33                 // String Regular expression may not be null or empty
       3: invokestatic  #34                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iconst_2
       9: invokestatic  #36                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      12: putfield      #18                 // Field subjectDnPattern:Ljava/util/regex/Pattern;
      15: return

  public void setMessageSource(org.springframework.context.MessageSource);
    Code:
       0: aload_0
       1: new           #37                 // class org/springframework/context/support/MessageSourceAccessor
       4: dup
       5: aload_1
       6: invokespecial #38                 // Method org/springframework/context/support/MessageSourceAccessor."<init>":(Lorg/springframework/context/MessageSource;)V
       9: putfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      12: return
}
