Compiled from "ReferrerPolicyServerHttpHeadersWriter.java"
public final class org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy extends java.lang.Enum<org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy> {
  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy NO_REFERRER;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy NO_REFERRER_WHEN_DOWNGRADE;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy SAME_ORIGIN;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy ORIGIN;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy STRICT_ORIGIN;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy ORIGIN_WHEN_CROSS_ORIGIN;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy STRICT_ORIGIN_WHEN_CROSS_ORIGIN;

  public static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy UNSAFE_URL;

  private static final java.util.Map<java.lang.String, org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy> REFERRER_POLICIES;

  private java.lang.String policy;

  private static final org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy[] $VALUES;

  public static org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
       3: invokevirtual #2                  // Method "[Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;"
       9: areturn

  public static org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
       9: areturn

  private org.springframework.security.web.server.header.ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field policy:Ljava/lang/String;
      11: return

  public java.lang.String getPolicy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field policy:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
       3: dup
       4: ldc           #8                  // String NO_REFERRER
       6: iconst_0
       7: ldc           #9                  // String no-referrer
       9: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #11                 // Field NO_REFERRER:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
      15: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
      18: dup
      19: ldc           #12                 // String NO_REFERRER_WHEN_DOWNGRADE
      21: iconst_1
      22: ldc           #13                 // String no-referrer-when-downgrade
      24: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #14                 // Field NO_REFERRER_WHEN_DOWNGRADE:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
      30: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
      33: dup
      34: ldc           #15                 // String SAME_ORIGIN
      36: iconst_2
      37: ldc           #16                 // String same-origin
      39: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #17                 // Field SAME_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
      45: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
      48: dup
      49: ldc           #18                 // String ORIGIN
      51: iconst_3
      52: ldc           #19                 // String origin
      54: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #20                 // Field ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
      60: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
      63: dup
      64: ldc           #21                 // String STRICT_ORIGIN
      66: iconst_4
      67: ldc           #22                 // String strict-origin
      69: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: putstatic     #23                 // Field STRICT_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
      75: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
      78: dup
      79: ldc           #24                 // String ORIGIN_WHEN_CROSS_ORIGIN
      81: iconst_5
      82: ldc           #25                 // String origin-when-cross-origin
      84: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      87: putstatic     #26                 // Field ORIGIN_WHEN_CROSS_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
      90: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
      93: dup
      94: ldc           #27                 // String STRICT_ORIGIN_WHEN_CROSS_ORIGIN
      96: bipush        6
      98: ldc           #28                 // String strict-origin-when-cross-origin
     100: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     103: putstatic     #29                 // Field STRICT_ORIGIN_WHEN_CROSS_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     106: new           #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
     109: dup
     110: ldc           #30                 // String UNSAFE_URL
     112: bipush        7
     114: ldc           #31                 // String unsafe-url
     116: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     119: putstatic     #32                 // Field UNSAFE_URL:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     122: bipush        8
     124: anewarray     #4                  // class org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
     127: dup
     128: iconst_0
     129: getstatic     #11                 // Field NO_REFERRER:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     132: aastore
     133: dup
     134: iconst_1
     135: getstatic     #14                 // Field NO_REFERRER_WHEN_DOWNGRADE:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     138: aastore
     139: dup
     140: iconst_2
     141: getstatic     #17                 // Field SAME_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     144: aastore
     145: dup
     146: iconst_3
     147: getstatic     #20                 // Field ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     150: aastore
     151: dup
     152: iconst_4
     153: getstatic     #23                 // Field STRICT_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     156: aastore
     157: dup
     158: iconst_5
     159: getstatic     #26                 // Field ORIGIN_WHEN_CROSS_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     162: aastore
     163: dup
     164: bipush        6
     166: getstatic     #29                 // Field STRICT_ORIGIN_WHEN_CROSS_ORIGIN:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     169: aastore
     170: dup
     171: bipush        7
     173: getstatic     #32                 // Field UNSAFE_URL:Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     176: aastore
     177: putstatic     #1                  // Field $VALUES:[Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     180: new           #33                 // class java/util/HashMap
     183: dup
     184: invokespecial #34                 // Method java/util/HashMap."<init>":()V
     187: astore_0
     188: invokestatic  #35                 // Method values:()[Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
     191: astore_1
     192: aload_1
     193: arraylength
     194: istore_2
     195: iconst_0
     196: istore_3
     197: iload_3
     198: iload_2
     199: if_icmpge     227
     202: aload_1
     203: iload_3
     204: aaload
     205: astore        4
     207: aload_0
     208: aload         4
     210: invokevirtual #36                 // Method getPolicy:()Ljava/lang/String;
     213: aload         4
     215: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     220: pop
     221: iinc          3, 1
     224: goto          197
     227: aload_0
     228: invokestatic  #38                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     231: putstatic     #39                 // Field REFERRER_POLICIES:Ljava/util/Map;
     234: return
}
