Compiled from "ContentSecurityPolicyServerHttpHeadersWriter.java"
public final class org.springframework.security.web.server.header.ContentSecurityPolicyServerHttpHeadersWriter implements org.springframework.security.web.server.header.ServerHttpHeadersWriter {
  public static final java.lang.String CONTENT_SECURITY_POLICY;

  public static final java.lang.String CONTENT_SECURITY_POLICY_REPORT_ONLY;

  private java.lang.String policyDirectives;

  private boolean reportOnly;

  private org.springframework.security.web.server.header.ServerHttpHeadersWriter delegate;

  public org.springframework.security.web.server.header.ContentSecurityPolicyServerHttpHeadersWriter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public reactor.core.publisher.Mono<java.lang.Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
       4: ifnull        20
       7: aload_0
       8: getfield      #2                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      11: aload_1
      12: invokeinterface #3,  2            // InterfaceMethod org/springframework/security/web/server/header/ServerHttpHeadersWriter.writeHttpHeaders:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      17: goto          23
      20: invokestatic  #4                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      23: areturn

  public void setPolicyDirectives(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #5                  // String policyDirectives must not be null or empty
       3: invokestatic  #6                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field policyDirectives:Ljava/lang/String;
      11: aload_0
      12: aload_0
      13: invokespecial #8                  // Method createDelegate:()Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      16: putfield      #2                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      19: return

  public void setReportOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field reportOnly:Z
       5: aload_0
       6: aload_0
       7: invokespecial #8                  // Method createDelegate:()Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      10: putfield      #2                  // Field delegate:Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;
      13: return

  private org.springframework.security.web.server.header.ServerHttpHeadersWriter createDelegate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field policyDirectives:Ljava/lang/String;
       4: ifnull        35
       7: invokestatic  #10                 // Method org/springframework/security/web/server/header/StaticServerHttpHeadersWriter.builder:()Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder;
      10: aload_0
      11: getfield      #9                  // Field reportOnly:Z
      14: invokestatic  #11                 // Method resolveHeader:(Z)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #12                 // class java/lang/String
      21: dup
      22: iconst_0
      23: aload_0
      24: getfield      #7                  // Field policyDirectives:Ljava/lang/String;
      27: aastore
      28: invokevirtual #13                 // Method org/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder.header:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder;
      31: invokevirtual #14                 // Method org/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder.build:()Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter;
      34: areturn
      35: aconst_null
      36: areturn

  private static java.lang.String resolveHeader(boolean);
    Code:
       0: iload_0
       1: ifeq          9
       4: ldc           #16                 // String Content-Security-Policy-Report-Only
       6: goto          11
       9: ldc           #17                 // String Content-Security-Policy
      11: areturn
}
