Compiled from "DefaultHttpFirewall.java"
public class org.springframework.security.web.firewall.DefaultHttpFirewall implements org.springframework.security.web.firewall.HttpFirewall {
  private boolean allowUrlEncodedSlash;

  public org.springframework.security.web.firewall.DefaultHttpFirewall();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.security.web.firewall.FirewalledRequest getFirewalledRequest(javax.servlet.http.HttpServletRequest) throws org.springframework.security.web.firewall.RequestRejectedException;
    Code:
       0: new           #2                  // class org/springframework/security/web/firewall/RequestWrapper
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method org/springframework/security/web/firewall/RequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #4                  // Method org/springframework/security/web/firewall/FirewalledRequest.getServletPath:()Ljava/lang/String;
      14: invokespecial #5                  // Method isNormalized:(Ljava/lang/String;)Z
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: invokevirtual #6                  // Method org/springframework/security/web/firewall/FirewalledRequest.getPathInfo:()Ljava/lang/String;
      25: invokespecial #5                  // Method isNormalized:(Ljava/lang/String;)Z
      28: ifne          80
      31: new           #7                  // class org/springframework/security/web/firewall/RequestRejectedException
      34: dup
      35: new           #8                  // class java/lang/StringBuilder
      38: dup
      39: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #10                 // String Un-normalized paths are not supported:
      44: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_2
      48: invokevirtual #4                  // Method org/springframework/security/web/firewall/FirewalledRequest.getServletPath:()Ljava/lang/String;
      51: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_2
      55: invokevirtual #6                  // Method org/springframework/security/web/firewall/FirewalledRequest.getPathInfo:()Ljava/lang/String;
      58: ifnull        68
      61: aload_2
      62: invokevirtual #6                  // Method org/springframework/security/web/firewall/FirewalledRequest.getPathInfo:()Ljava/lang/String;
      65: goto          70
      68: ldc           #12                 // String
      70: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #14                 // Method org/springframework/security/web/firewall/RequestRejectedException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_2
      81: invokevirtual #15                 // Method org/springframework/security/web/firewall/FirewalledRequest.getRequestURI:()Ljava/lang/String;
      84: astore_3
      85: aload_0
      86: aload_3
      87: invokespecial #16                 // Method containsInvalidUrlEncodedSlash:(Ljava/lang/String;)Z
      90: ifeq          120
      93: new           #7                  // class org/springframework/security/web/firewall/RequestRejectedException
      96: dup
      97: new           #8                  // class java/lang/StringBuilder
     100: dup
     101: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #17                 // String The requestURI cannot contain encoded slash. Got
     106: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_3
     110: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokespecial #14                 // Method org/springframework/security/web/firewall/RequestRejectedException."<init>":(Ljava/lang/String;)V
     119: athrow
     120: aload_2
     121: areturn

  public javax.servlet.http.HttpServletResponse getFirewalledResponse(javax.servlet.http.HttpServletResponse);
    Code:
       0: new           #18                 // class org/springframework/security/web/firewall/FirewalledResponse
       3: dup
       4: aload_1
       5: invokespecial #19                 // Method org/springframework/security/web/firewall/FirewalledResponse."<init>":(Ljavax/servlet/http/HttpServletResponse;)V
       8: areturn

  public void setAllowUrlEncodedSlash(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field allowUrlEncodedSlash:Z
       5: return

  private boolean containsInvalidUrlEncodedSlash(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field allowUrlEncodedSlash:Z
       4: ifne          11
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: ldc           #21                 // String %2f
      16: invokevirtual #22                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      19: ifne          31
      22: aload_1
      23: ldc           #23                 // String %2F
      25: invokevirtual #22                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      28: ifeq          33
      31: iconst_1
      32: ireturn
      33: iconst_0
      34: ireturn

  private boolean isNormalized(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokevirtual #24                 // Method java/lang/String.length:()I
      10: istore_2
      11: iload_2
      12: ifle          87
      15: aload_1
      16: bipush        47
      18: iload_2
      19: iconst_1
      20: isub
      21: invokevirtual #25                 // Method java/lang/String.lastIndexOf:(II)I
      24: istore_3
      25: iload_2
      26: iload_3
      27: isub
      28: istore        4
      30: iload         4
      32: iconst_2
      33: if_icmpne     50
      36: aload_1
      37: iload_3
      38: iconst_1
      39: iadd
      40: invokevirtual #26                 // Method java/lang/String.charAt:(I)C
      43: bipush        46
      45: if_icmpne     50
      48: iconst_0
      49: ireturn
      50: iload         4
      52: iconst_3
      53: if_icmpne     82
      56: aload_1
      57: iload_3
      58: iconst_1
      59: iadd
      60: invokevirtual #26                 // Method java/lang/String.charAt:(I)C
      63: bipush        46
      65: if_icmpne     82
      68: aload_1
      69: iload_3
      70: iconst_2
      71: iadd
      72: invokevirtual #26                 // Method java/lang/String.charAt:(I)C
      75: bipush        46
      77: if_icmpne     82
      80: iconst_0
      81: ireturn
      82: iload_3
      83: istore_2
      84: goto          11
      87: iconst_1
      88: ireturn
}
