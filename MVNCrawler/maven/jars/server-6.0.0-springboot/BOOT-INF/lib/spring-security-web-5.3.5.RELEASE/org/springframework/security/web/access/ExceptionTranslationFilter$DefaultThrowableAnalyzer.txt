Compiled from "ExceptionTranslationFilter.java"
final class org.springframework.security.web.access.ExceptionTranslationFilter$DefaultThrowableAnalyzer extends org.springframework.security.web.util.ThrowableAnalyzer {
  private org.springframework.security.web.access.ExceptionTranslationFilter$DefaultThrowableAnalyzer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/security/web/util/ThrowableAnalyzer."<init>":()V
       4: return

  protected void initExtractorMap();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/security/web/util/ThrowableAnalyzer.initExtractorMap:()V
       4: aload_0
       5: ldc           #4                  // class javax/servlet/ServletException
       7: invokedynamic #5,  0              // InvokeDynamic #0:extractCause:()Lorg/springframework/security/web/util/ThrowableCauseExtractor;
      12: invokevirtual #6                  // Method registerExtractor:(Ljava/lang/Class;Lorg/springframework/security/web/util/ThrowableCauseExtractor;)V
      15: return

  private static java.lang.Throwable lambda$initExtractorMap$0(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #4                  // class javax/servlet/ServletException
       3: invokestatic  #7                  // Method org/springframework/security/web/util/ThrowableAnalyzer.verifyThrowableHierarchy:(Ljava/lang/Throwable;Ljava/lang/Class;)V
       6: aload_0
       7: checkcast     #4                  // class javax/servlet/ServletException
      10: invokevirtual #8                  // Method javax/servlet/ServletException.getRootCause:()Ljava/lang/Throwable;
      13: areturn

  org.springframework.security.web.access.ExceptionTranslationFilter$DefaultThrowableAnalyzer(org.springframework.security.web.access.ExceptionTranslationFilter$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
