Compiled from "ZCompressorInputStream.java"
public class org.apache.commons.compress.compressors.z.ZCompressorInputStream extends org.apache.commons.compress.compressors.lzw.LZWInputStream {
  private static final int MAGIC_1;

  private static final int MAGIC_2;

  private static final int BLOCK_MODE_MASK;

  private static final int MAX_CODE_SIZE_MASK;

  private final boolean blockMode;

  private final int maxCodeSize;

  private long totalCodesRead;

  public org.apache.commons.compress.compressors.z.ZCompressorInputStream(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       5: invokespecial #2                  // Method org/apache/commons/compress/compressors/lzw/LZWInputStream."<init>":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V
       8: aload_0
       9: lconst_0
      10: putfield      #3                  // Field totalCodesRead:J
      13: aload_0
      14: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;
      17: bipush        8
      19: invokevirtual #5                  // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J
      22: l2i
      23: istore_3
      24: aload_0
      25: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;
      28: bipush        8
      30: invokevirtual #5                  // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J
      33: l2i
      34: istore        4
      36: aload_0
      37: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;
      40: bipush        8
      42: invokevirtual #5                  // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J
      45: l2i
      46: istore        5
      48: iload_3
      49: bipush        31
      51: if_icmpne     67
      54: iload         4
      56: sipush        157
      59: if_icmpne     67
      62: iload         5
      64: ifge          77
      67: new           #7                  // class java/io/IOException
      70: dup
      71: ldc           #8                  // String Input is not in .Z format
      73: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: iload         5
      80: sipush        128
      83: iand
      84: ifeq          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: putfield      #10                 // Field blockMode:Z
      95: aload_0
      96: iload         5
      98: bipush        31
     100: iand
     101: putfield      #11                 // Field maxCodeSize:I
     104: aload_0
     105: getfield      #10                 // Field blockMode:Z
     108: ifeq          117
     111: aload_0
     112: bipush        9
     114: invokevirtual #13                 // Method setClearCode:(I)V
     117: aload_0
     118: aload_0
     119: getfield      #11                 // Field maxCodeSize:I
     122: iload_2
     123: invokevirtual #14                 // Method initializeTables:(II)V
     126: aload_0
     127: invokespecial #15                 // Method clearEntries:()V
     130: return

  public org.apache.commons.compress.compressors.z.ZCompressorInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokespecial #16                 // Method "<init>":(Ljava/io/InputStream;I)V
       6: return

  private void clearEntries();
    Code:
       0: aload_0
       1: sipush        256
       4: aload_0
       5: getfield      #10                 // Field blockMode:Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: iadd
      17: invokevirtual #17                 // Method setTableSize:(I)V
      20: return

  protected int readNextCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/apache/commons/compress/compressors/lzw/LZWInputStream.readNextCode:()I
       4: istore_1
       5: iload_1
       6: iflt          19
       9: aload_0
      10: dup
      11: getfield      #3                  // Field totalCodesRead:J
      14: lconst_1
      15: ladd
      16: putfield      #3                  // Field totalCodesRead:J
      19: iload_1
      20: ireturn

  private void reAlignReading() throws java.io.IOException;
    Code:
       0: ldc2_w        #19                 // long 8l
       3: aload_0
       4: getfield      #3                  // Field totalCodesRead:J
       7: ldc2_w        #19                 // long 8l
      10: lrem
      11: lsub
      12: lstore_1
      13: lload_1
      14: ldc2_w        #19                 // long 8l
      17: lcmp
      18: ifne          23
      21: lconst_0
      22: lstore_1
      23: lconst_0
      24: lstore_3
      25: lload_3
      26: lload_1
      27: lcmp
      28: ifge          43
      31: aload_0
      32: invokevirtual #21                 // Method readNextCode:()I
      35: pop
      36: lload_3
      37: lconst_1
      38: ladd
      39: lstore_3
      40: goto          25
      43: aload_0
      44: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;
      47: invokevirtual #22                 // Method org/apache/commons/compress/utils/BitInputStream.clearBitCache:()V
      50: return

  protected int addEntry(int, byte) throws java.io.IOException;
    Code:
       0: iconst_1
       1: aload_0
       2: invokevirtual #23                 // Method getCodeSize:()I
       5: ishl
       6: istore_3
       7: aload_0
       8: iload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #24                 // Method addEntry:(IBI)I
      14: istore        4
      16: aload_0
      17: invokevirtual #25                 // Method getTableSize:()I
      20: iload_3
      21: if_icmpne     43
      24: aload_0
      25: invokevirtual #23                 // Method getCodeSize:()I
      28: aload_0
      29: getfield      #11                 // Field maxCodeSize:I
      32: if_icmpge     43
      35: aload_0
      36: invokespecial #26                 // Method reAlignReading:()V
      39: aload_0
      40: invokevirtual #27                 // Method incrementCodeSize:()V
      43: iload         4
      45: ireturn

  protected int decompressNextSymbol() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method readNextCode:()I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: getfield      #10                 // Field blockMode:Z
      15: ifeq          44
      18: iload_1
      19: aload_0
      20: invokevirtual #28                 // Method getClearCode:()I
      23: if_icmpne     44
      26: aload_0
      27: invokespecial #15                 // Method clearEntries:()V
      30: aload_0
      31: invokespecial #26                 // Method reAlignReading:()V
      34: aload_0
      35: invokevirtual #29                 // Method resetCodeSize:()V
      38: aload_0
      39: invokevirtual #30                 // Method resetPreviousCode:()V
      42: iconst_0
      43: ireturn
      44: iconst_0
      45: istore_2
      46: iload_1
      47: aload_0
      48: invokevirtual #25                 // Method getTableSize:()I
      51: if_icmpne     64
      54: aload_0
      55: invokevirtual #31                 // Method addRepeatOfPreviousCode:()I
      58: pop
      59: iconst_1
      60: istore_2
      61: goto          106
      64: iload_1
      65: aload_0
      66: invokevirtual #25                 // Method getTableSize:()I
      69: if_icmple     106
      72: new           #7                  // class java/io/IOException
      75: dup
      76: ldc           #32                 // String Invalid %d bit code 0x%x
      78: iconst_2
      79: anewarray     #33                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload_0
      85: invokevirtual #23                 // Method getCodeSize:()I
      88: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: aastore
      92: dup
      93: iconst_1
      94: iload_1
      95: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: aastore
      99: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     102: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: aload_0
     107: iload_1
     108: iload_2
     109: invokevirtual #36                 // Method expandCodeToOutputStack:(IZ)I
     112: ireturn

  public static boolean matches(byte[], int);
    Code:
       0: iload_1
       1: iconst_3
       2: if_icmple     25
       5: aload_0
       6: iconst_0
       7: baload
       8: bipush        31
      10: if_icmpne     25
      13: aload_0
      14: iconst_1
      15: baload
      16: bipush        -99
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
}
