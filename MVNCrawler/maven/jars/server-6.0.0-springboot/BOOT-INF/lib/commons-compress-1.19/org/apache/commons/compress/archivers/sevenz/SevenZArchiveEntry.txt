Compiled from "SevenZArchiveEntry.java"
public class org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry implements org.apache.commons.compress.archivers.ArchiveEntry {
  private java.lang.String name;

  private boolean hasStream;

  private boolean isDirectory;

  private boolean isAntiItem;

  private boolean hasCreationDate;

  private boolean hasLastModifiedDate;

  private boolean hasAccessDate;

  private long creationDate;

  private long lastModifiedDate;

  private long accessDate;

  private boolean hasWindowsAttributes;

  private int windowsAttributes;

  private boolean hasCrc;

  private long crc;

  private long compressedCrc;

  private long size;

  private long compressedSize;

  private java.lang.Iterable<? extends org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration> contentMethods;

  public org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field name:Ljava/lang/String;
       5: return

  public boolean hasStream();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hasStream:Z
       4: ireturn

  public void setHasStream(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field hasStream:Z
       5: return

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isDirectory:Z
       4: ireturn

  public void setDirectory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field isDirectory:Z
       5: return

  public boolean isAntiItem();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isAntiItem:Z
       4: ireturn

  public void setAntiItem(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field isAntiItem:Z
       5: return

  public boolean getHasCreationDate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hasCreationDate:Z
       4: ireturn

  public void setHasCreationDate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field hasCreationDate:Z
       5: return

  public java.util.Date getCreationDate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hasCreationDate:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #7                  // Field creationDate:J
      11: invokestatic  #8                  // Method ntfsTimeToJavaTime:(J)Ljava/util/Date;
      14: areturn
      15: new           #9                  // class java/lang/UnsupportedOperationException
      18: dup
      19: ldc           #10                 // String The entry doesn\'t have this timestamp
      21: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      24: athrow

  public void setCreationDate(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field creationDate:J
       5: return

  public void setCreationDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #6                  // Field hasCreationDate:Z
      13: aload_0
      14: getfield      #6                  // Field hasCreationDate:Z
      17: ifeq          28
      20: aload_0
      21: aload_1
      22: invokestatic  #12                 // Method javaTimeToNtfsTime:(Ljava/util/Date;)J
      25: putfield      #7                  // Field creationDate:J
      28: return

  public boolean getHasLastModifiedDate();
    Code:
       0: aload_0
       1: getfield      #13                 // Field hasLastModifiedDate:Z
       4: ireturn

  public void setHasLastModifiedDate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field hasLastModifiedDate:Z
       5: return

  public java.util.Date getLastModifiedDate();
    Code:
       0: aload_0
       1: getfield      #13                 // Field hasLastModifiedDate:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #14                 // Field lastModifiedDate:J
      11: invokestatic  #8                  // Method ntfsTimeToJavaTime:(J)Ljava/util/Date;
      14: areturn
      15: new           #9                  // class java/lang/UnsupportedOperationException
      18: dup
      19: ldc           #10                 // String The entry doesn\'t have this timestamp
      21: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      24: athrow

  public void setLastModifiedDate(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field lastModifiedDate:J
       5: return

  public void setLastModifiedDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #13                 // Field hasLastModifiedDate:Z
      13: aload_0
      14: getfield      #13                 // Field hasLastModifiedDate:Z
      17: ifeq          28
      20: aload_0
      21: aload_1
      22: invokestatic  #12                 // Method javaTimeToNtfsTime:(Ljava/util/Date;)J
      25: putfield      #14                 // Field lastModifiedDate:J
      28: return

  public boolean getHasAccessDate();
    Code:
       0: aload_0
       1: getfield      #15                 // Field hasAccessDate:Z
       4: ireturn

  public void setHasAccessDate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field hasAccessDate:Z
       5: return

  public java.util.Date getAccessDate();
    Code:
       0: aload_0
       1: getfield      #15                 // Field hasAccessDate:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #16                 // Field accessDate:J
      11: invokestatic  #8                  // Method ntfsTimeToJavaTime:(J)Ljava/util/Date;
      14: areturn
      15: new           #9                  // class java/lang/UnsupportedOperationException
      18: dup
      19: ldc           #10                 // String The entry doesn\'t have this timestamp
      21: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      24: athrow

  public void setAccessDate(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field accessDate:J
       5: return

  public void setAccessDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #15                 // Field hasAccessDate:Z
      13: aload_0
      14: getfield      #15                 // Field hasAccessDate:Z
      17: ifeq          28
      20: aload_0
      21: aload_1
      22: invokestatic  #12                 // Method javaTimeToNtfsTime:(Ljava/util/Date;)J
      25: putfield      #16                 // Field accessDate:J
      28: return

  public boolean getHasWindowsAttributes();
    Code:
       0: aload_0
       1: getfield      #17                 // Field hasWindowsAttributes:Z
       4: ireturn

  public void setHasWindowsAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field hasWindowsAttributes:Z
       5: return

  public int getWindowsAttributes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field windowsAttributes:I
       4: ireturn

  public void setWindowsAttributes(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field windowsAttributes:I
       5: return

  public boolean getHasCrc();
    Code:
       0: aload_0
       1: getfield      #19                 // Field hasCrc:Z
       4: ireturn

  public void setHasCrc(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field hasCrc:Z
       5: return

  public int getCrc();
    Code:
       0: aload_0
       1: getfield      #20                 // Field crc:J
       4: l2i
       5: ireturn

  public void setCrc(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: putfield      #20                 // Field crc:J
       6: return

  public long getCrcValue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field crc:J
       4: lreturn

  public void setCrcValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #20                 // Field crc:J
       5: return

  int getCompressedCrc();
    Code:
       0: aload_0
       1: getfield      #21                 // Field compressedCrc:J
       4: l2i
       5: ireturn

  void setCompressedCrc(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: putfield      #21                 // Field compressedCrc:J
       6: return

  long getCompressedCrcValue();
    Code:
       0: aload_0
       1: getfield      #21                 // Field compressedCrc:J
       4: lreturn

  void setCompressedCrcValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #21                 // Field compressedCrc:J
       5: return

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field size:J
       4: lreturn

  public void setSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #22                 // Field size:J
       5: return

  long getCompressedSize();
    Code:
       0: aload_0
       1: getfield      #23                 // Field compressedSize:J
       4: lreturn

  void setCompressedSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #23                 // Field compressedSize:J
       5: return

  public void setContentMethods(java.lang.Iterable<? extends org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration>);
    Code:
       0: aload_1
       1: ifnull        59
       4: new           #24                 // class java/util/LinkedList
       7: dup
       8: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
      11: astore_2
      12: aload_1
      13: invokeinterface #26,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          48
      28: aload_3
      29: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #29                 // class org/apache/commons/compress/archivers/sevenz/SevenZMethodConfiguration
      37: astore        4
      39: aload_2
      40: aload         4
      42: invokevirtual #30                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      45: goto          19
      48: aload_0
      49: aload_2
      50: invokestatic  #31                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      53: putfield      #32                 // Field contentMethods:Ljava/lang/Iterable;
      56: goto          64
      59: aload_0
      60: aconst_null
      61: putfield      #32                 // Field contentMethods:Ljava/lang/Iterable;
      64: return

  public java.lang.Iterable<? extends org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration> getContentMethods();
    Code:
       0: aload_0
       1: getfield      #32                 // Field contentMethods:Ljava/lang/Iterable;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          17
      13: aload_1
      14: invokevirtual #34                 // Method java/lang/String.hashCode:()I
      17: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #36                 // class org/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field name:Ljava/lang/String;
      33: aload_2
      34: getfield      #2                  // Field name:Ljava/lang/String;
      37: invokestatic  #37                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          245
      43: aload_0
      44: getfield      #3                  // Field hasStream:Z
      47: aload_2
      48: getfield      #3                  // Field hasStream:Z
      51: if_icmpne     245
      54: aload_0
      55: getfield      #4                  // Field isDirectory:Z
      58: aload_2
      59: getfield      #4                  // Field isDirectory:Z
      62: if_icmpne     245
      65: aload_0
      66: getfield      #5                  // Field isAntiItem:Z
      69: aload_2
      70: getfield      #5                  // Field isAntiItem:Z
      73: if_icmpne     245
      76: aload_0
      77: getfield      #6                  // Field hasCreationDate:Z
      80: aload_2
      81: getfield      #6                  // Field hasCreationDate:Z
      84: if_icmpne     245
      87: aload_0
      88: getfield      #13                 // Field hasLastModifiedDate:Z
      91: aload_2
      92: getfield      #13                 // Field hasLastModifiedDate:Z
      95: if_icmpne     245
      98: aload_0
      99: getfield      #15                 // Field hasAccessDate:Z
     102: aload_2
     103: getfield      #15                 // Field hasAccessDate:Z
     106: if_icmpne     245
     109: aload_0
     110: getfield      #7                  // Field creationDate:J
     113: aload_2
     114: getfield      #7                  // Field creationDate:J
     117: lcmp
     118: ifne          245
     121: aload_0
     122: getfield      #14                 // Field lastModifiedDate:J
     125: aload_2
     126: getfield      #14                 // Field lastModifiedDate:J
     129: lcmp
     130: ifne          245
     133: aload_0
     134: getfield      #16                 // Field accessDate:J
     137: aload_2
     138: getfield      #16                 // Field accessDate:J
     141: lcmp
     142: ifne          245
     145: aload_0
     146: getfield      #17                 // Field hasWindowsAttributes:Z
     149: aload_2
     150: getfield      #17                 // Field hasWindowsAttributes:Z
     153: if_icmpne     245
     156: aload_0
     157: getfield      #18                 // Field windowsAttributes:I
     160: aload_2
     161: getfield      #18                 // Field windowsAttributes:I
     164: if_icmpne     245
     167: aload_0
     168: getfield      #19                 // Field hasCrc:Z
     171: aload_2
     172: getfield      #19                 // Field hasCrc:Z
     175: if_icmpne     245
     178: aload_0
     179: getfield      #20                 // Field crc:J
     182: aload_2
     183: getfield      #20                 // Field crc:J
     186: lcmp
     187: ifne          245
     190: aload_0
     191: getfield      #21                 // Field compressedCrc:J
     194: aload_2
     195: getfield      #21                 // Field compressedCrc:J
     198: lcmp
     199: ifne          245
     202: aload_0
     203: getfield      #22                 // Field size:J
     206: aload_2
     207: getfield      #22                 // Field size:J
     210: lcmp
     211: ifne          245
     214: aload_0
     215: getfield      #23                 // Field compressedSize:J
     218: aload_2
     219: getfield      #23                 // Field compressedSize:J
     222: lcmp
     223: ifne          245
     226: aload_0
     227: aload_0
     228: getfield      #32                 // Field contentMethods:Ljava/lang/Iterable;
     231: aload_2
     232: getfield      #32                 // Field contentMethods:Ljava/lang/Iterable;
     235: invokespecial #38                 // Method equalSevenZMethods:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Z
     238: ifeq          245
     241: iconst_1
     242: goto          246
     245: iconst_0
     246: ireturn

  public static java.util.Date ntfsTimeToJavaTime(long);
    Code:
       0: invokestatic  #39                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: astore_2
       4: aload_2
       5: ldc           #40                 // String GMT+0
       7: invokestatic  #41                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      10: invokevirtual #42                 // Method java/util/Calendar.setTimeZone:(Ljava/util/TimeZone;)V
      13: aload_2
      14: sipush        1601
      17: iconst_0
      18: iconst_1
      19: iconst_0
      20: iconst_0
      21: iconst_0
      22: invokevirtual #43                 // Method java/util/Calendar.set:(IIIIII)V
      25: aload_2
      26: bipush        14
      28: iconst_0
      29: invokevirtual #45                 // Method java/util/Calendar.set:(II)V
      32: aload_2
      33: invokevirtual #46                 // Method java/util/Calendar.getTimeInMillis:()J
      36: lload_0
      37: ldc2_w        #47                 // long 10000l
      40: ldiv
      41: ladd
      42: lstore_3
      43: new           #49                 // class java/util/Date
      46: dup
      47: lload_3
      48: invokespecial #50                 // Method java/util/Date."<init>":(J)V
      51: areturn

  public static long javaTimeToNtfsTime(java.util.Date);
    Code:
       0: invokestatic  #39                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: astore_1
       4: aload_1
       5: ldc           #40                 // String GMT+0
       7: invokestatic  #41                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      10: invokevirtual #42                 // Method java/util/Calendar.setTimeZone:(Ljava/util/TimeZone;)V
      13: aload_1
      14: sipush        1601
      17: iconst_0
      18: iconst_1
      19: iconst_0
      20: iconst_0
      21: iconst_0
      22: invokevirtual #43                 // Method java/util/Calendar.set:(IIIIII)V
      25: aload_1
      26: bipush        14
      28: iconst_0
      29: invokevirtual #45                 // Method java/util/Calendar.set:(II)V
      32: aload_0
      33: invokevirtual #51                 // Method java/util/Date.getTime:()J
      36: aload_1
      37: invokevirtual #46                 // Method java/util/Calendar.getTimeInMillis:()J
      40: lsub
      41: ldc2_w        #52                 // long 1000l
      44: lmul
      45: ldc2_w        #54                 // long 10l
      48: lmul
      49: lreturn

  private boolean equalSevenZMethods(java.lang.Iterable<? extends org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration>, java.lang.Iterable<? extends org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_2
       5: ifnonnull     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
      14: aload_2
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: invokeinterface #26,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_2
      28: invokeinterface #26,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      33: astore        4
      35: aload_3
      36: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          80
      44: aload         4
      46: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifne          56
      54: iconst_0
      55: ireturn
      56: aload_3
      57: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #29                 // class org/apache/commons/compress/archivers/sevenz/SevenZMethodConfiguration
      65: aload         4
      67: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: invokevirtual #56                 // Method org/apache/commons/compress/archivers/sevenz/SevenZMethodConfiguration.equals:(Ljava/lang/Object;)Z
      75: ifne          35
      78: iconst_0
      79: ireturn
      80: aload         4
      82: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn
}
