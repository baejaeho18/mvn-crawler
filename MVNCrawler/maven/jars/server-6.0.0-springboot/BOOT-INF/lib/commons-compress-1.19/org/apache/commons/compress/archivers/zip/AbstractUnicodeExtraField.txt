Compiled from "AbstractUnicodeExtraField.java"
public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField {
  private long nameCRC32;

  private byte[] unicodeName;

  private byte[] data;

  protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField(java.lang.String, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class java/util/zip/CRC32
       7: dup
       8: invokespecial #3                  // Method java/util/zip/CRC32."<init>":()V
      11: astore        5
      13: aload         5
      15: aload_2
      16: iload_3
      17: iload         4
      19: invokevirtual #4                  // Method java/util/zip/CRC32.update:([BII)V
      22: aload_0
      23: aload         5
      25: invokevirtual #5                  // Method java/util/zip/CRC32.getValue:()J
      28: putfield      #6                  // Field nameCRC32:J
      31: aload_0
      32: aload_1
      33: ldc           #8                  // String UTF-8
      35: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      38: putfield      #10                 // Field unicodeName:[B
      41: goto          58
      44: astore        6
      46: new           #12                 // class java/lang/RuntimeException
      49: dup
      50: ldc           #13                 // String FATAL: UTF-8 encoding not supported.
      52: aload         6
      54: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
      58: return
    Exception table:
       from    to  target type
          31    41    44   Class java/io/UnsupportedEncodingException

  protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokespecial #15                 // Method "<init>":(Ljava/lang/String;[BII)V
       9: return

  private void assembleData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field unicodeName:[B
       4: ifnonnull     8
       7: return
       8: aload_0
       9: iconst_5
      10: aload_0
      11: getfield      #10                 // Field unicodeName:[B
      14: arraylength
      15: iadd
      16: newarray       byte
      18: putfield      #16                 // Field data:[B
      21: aload_0
      22: getfield      #16                 // Field data:[B
      25: iconst_0
      26: iconst_1
      27: bastore
      28: aload_0
      29: getfield      #6                  // Field nameCRC32:J
      32: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      35: iconst_0
      36: aload_0
      37: getfield      #16                 // Field data:[B
      40: iconst_1
      41: iconst_4
      42: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      45: aload_0
      46: getfield      #10                 // Field unicodeName:[B
      49: iconst_0
      50: aload_0
      51: getfield      #16                 // Field data:[B
      54: iconst_5
      55: aload_0
      56: getfield      #10                 // Field unicodeName:[B
      59: arraylength
      60: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: return

  public long getNameCRC32();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameCRC32:J
       4: lreturn

  public void setNameCRC32(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field nameCRC32:J
       5: aload_0
       6: aconst_null
       7: putfield      #16                 // Field data:[B
      10: return

  public byte[] getUnicodeName();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #10                 // Field unicodeName:[B
       6: ifnull        29
       9: aload_0
      10: getfield      #10                 // Field unicodeName:[B
      13: arraylength
      14: newarray       byte
      16: astore_1
      17: aload_0
      18: getfield      #10                 // Field unicodeName:[B
      21: iconst_0
      22: aload_1
      23: iconst_0
      24: aload_1
      25: arraylength
      26: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_1
      30: areturn

  public void setUnicodeName(byte[]);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_0
       5: aload_1
       6: arraylength
       7: newarray       byte
       9: putfield      #10                 // Field unicodeName:[B
      12: aload_1
      13: iconst_0
      14: aload_0
      15: getfield      #10                 // Field unicodeName:[B
      18: iconst_0
      19: aload_1
      20: arraylength
      21: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: goto          32
      27: aload_0
      28: aconst_null
      29: putfield      #10                 // Field unicodeName:[B
      32: aload_0
      33: aconst_null
      34: putfield      #16                 // Field data:[B
      37: return

  public byte[] getCentralDirectoryData();
    Code:
       0: aload_0
       1: getfield      #16                 // Field data:[B
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #19                 // Method assembleData:()V
      11: aconst_null
      12: astore_1
      13: aload_0
      14: getfield      #16                 // Field data:[B
      17: ifnull        40
      20: aload_0
      21: getfield      #16                 // Field data:[B
      24: arraylength
      25: newarray       byte
      27: astore_1
      28: aload_0
      29: getfield      #16                 // Field data:[B
      32: iconst_0
      33: aload_1
      34: iconst_0
      35: aload_1
      36: arraylength
      37: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload_1
      41: areturn

  public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();
    Code:
       0: aload_0
       1: getfield      #16                 // Field data:[B
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #19                 // Method assembleData:()V
      11: new           #20                 // class org/apache/commons/compress/archivers/zip/ZipShort
      14: dup
      15: aload_0
      16: getfield      #16                 // Field data:[B
      19: ifnull        30
      22: aload_0
      23: getfield      #16                 // Field data:[B
      26: arraylength
      27: goto          31
      30: iconst_0
      31: invokespecial #21                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      34: areturn

  public byte[] getLocalFileDataData();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getCentralDirectoryData:()[B
       4: areturn

  public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: areturn

  public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: iload_3
       1: iconst_5
       2: if_icmpge     15
       5: new           #24                 // class java/util/zip/ZipException
       8: dup
       9: ldc           #25                 // String UniCode path extra data must have at least 5 bytes.
      11: invokespecial #26                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_1
      16: iload_2
      17: baload
      18: istore        4
      20: iload         4
      22: iconst_1
      23: if_icmpeq     59
      26: new           #24                 // class java/util/zip/ZipException
      29: dup
      30: new           #27                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #29                 // String Unsupported version [
      39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload         4
      44: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #32                 // String ] for UniCode path extra data.
      49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #26                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: aload_1
      61: iload_2
      62: iconst_1
      63: iadd
      64: invokestatic  #34                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
      67: putfield      #6                  // Field nameCRC32:J
      70: aload_0
      71: iload_3
      72: iconst_5
      73: isub
      74: newarray       byte
      76: putfield      #10                 // Field unicodeName:[B
      79: aload_1
      80: iload_2
      81: iconst_5
      82: iadd
      83: aload_0
      84: getfield      #10                 // Field unicodeName:[B
      87: iconst_0
      88: iload_3
      89: iconst_5
      90: isub
      91: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: aload_0
      95: aconst_null
      96: putfield      #16                 // Field data:[B
      99: return

  public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #35                 // Method parseFromLocalFileData:([BII)V
       7: return
}
