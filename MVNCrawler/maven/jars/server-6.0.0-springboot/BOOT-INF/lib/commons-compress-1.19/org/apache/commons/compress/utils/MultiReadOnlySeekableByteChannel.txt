Compiled from "MultiReadOnlySeekableByteChannel.java"
public class org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel implements java.nio.channels.SeekableByteChannel {
  private final java.util.List<java.nio.channels.SeekableByteChannel> channels;

  private long globalPosition;

  private int currentChannelIdx;

  public org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel(java.util.List<java.nio.channels.SeekableByteChannel>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: ldc           #3                  // String channels must not be null
      12: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/util/Collection
      18: invokespecial #6                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      21: invokestatic  #7                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      24: putfield      #8                  // Field channels:Ljava/util/List;
      27: return

  public synchronized int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isOpen:()Z
       4: ifne          15
       7: new           #10                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #11                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: aload_1
      16: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: iconst_0
      25: istore_2
      26: aload_1
      27: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      30: ifeq          128
      33: aload_0
      34: getfield      #13                 // Field currentChannelIdx:I
      37: aload_0
      38: getfield      #8                  // Field channels:Ljava/util/List;
      41: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      46: if_icmpge     128
      49: aload_0
      50: getfield      #8                  // Field channels:Ljava/util/List;
      53: aload_0
      54: getfield      #13                 // Field currentChannelIdx:I
      57: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      62: checkcast     #16                 // class java/nio/channels/SeekableByteChannel
      65: astore_3
      66: aload_3
      67: aload_1
      68: invokeinterface #17,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      73: istore        4
      75: iload         4
      77: iconst_m1
      78: if_icmpne     94
      81: aload_0
      82: dup
      83: getfield      #13                 // Field currentChannelIdx:I
      86: iconst_1
      87: iadd
      88: putfield      #13                 // Field currentChannelIdx:I
      91: goto          26
      94: aload_3
      95: invokeinterface #18,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
     100: aload_3
     101: invokeinterface #19,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
     106: lcmp
     107: iflt          120
     110: aload_0
     111: dup
     112: getfield      #13                 // Field currentChannelIdx:I
     115: iconst_1
     116: iadd
     117: putfield      #13                 // Field currentChannelIdx:I
     120: iload_2
     121: iload         4
     123: iadd
     124: istore_2
     125: goto          26
     128: iload_2
     129: ifle          145
     132: aload_0
     133: dup
     134: getfield      #20                 // Field globalPosition:J
     137: iload_2
     138: i2l
     139: ladd
     140: putfield      #20                 // Field globalPosition:J
     143: iload_2
     144: ireturn
     145: iconst_m1
     146: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #8                  // Field channels:Ljava/util/List;
       6: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          52
      21: aload_2
      22: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #16                 // class java/nio/channels/SeekableByteChannel
      30: astore_3
      31: aload_3
      32: invokeinterface #24,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
      37: goto          49
      40: astore        4
      42: aload_1
      43: ifnonnull     49
      46: aload         4
      48: astore_1
      49: goto          12
      52: aload_1
      53: ifnull        67
      56: new           #25                 // class java/io/IOException
      59: dup
      60: ldc           #26                 // String failed to close wrapped channel
      62: aload_1
      63: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      66: athrow
      67: return
    Exception table:
       from    to  target type
          31    37    40   Class java/io/IOException

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #8                  // Field channels:Ljava/util/List;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_1
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class java/nio/channels/SeekableByteChannel
      28: astore_2
      29: aload_2
      30: invokeinterface #28,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.isOpen:()Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: goto          10
      43: iconst_1
      44: ireturn

  public long position();
    Code:
       0: aload_0
       1: getfield      #20                 // Field globalPosition:J
       4: lreturn

  public long size() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #8                  // Field channels:Ljava/util/List;
       6: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          45
      21: aload_3
      22: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #16                 // class java/nio/channels/SeekableByteChannel
      30: astore        4
      32: lload_1
      33: aload         4
      35: invokeinterface #19,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
      40: ladd
      41: lstore_1
      42: goto          12
      45: lload_1
      46: lreturn

  public java.nio.channels.SeekableByteChannel truncate(long);
    Code:
       0: new           #29                 // class java/nio/channels/NonWritableChannelException
       3: dup
       4: invokespecial #30                 // Method java/nio/channels/NonWritableChannelException."<init>":()V
       7: athrow

  public int write(java.nio.ByteBuffer);
    Code:
       0: new           #29                 // class java/nio/channels/NonWritableChannelException
       3: dup
       4: invokespecial #30                 // Method java/nio/channels/NonWritableChannelException."<init>":()V
       7: athrow

  public synchronized java.nio.channels.SeekableByteChannel position(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #31                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #32                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #34                 // String Negative position:
      19: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: invokevirtual #9                  // Method isOpen:()Z
      37: ifne          48
      40: new           #10                 // class java/nio/channels/ClosedChannelException
      43: dup
      44: invokespecial #11                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      47: athrow
      48: aload_0
      49: lload_1
      50: putfield      #20                 // Field globalPosition:J
      53: lload_1
      54: lstore_3
      55: iconst_0
      56: istore        5
      58: iload         5
      60: aload_0
      61: getfield      #8                  // Field channels:Ljava/util/List;
      64: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      69: if_icmpge     163
      72: aload_0
      73: getfield      #8                  // Field channels:Ljava/util/List;
      76: iload         5
      78: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      83: checkcast     #16                 // class java/nio/channels/SeekableByteChannel
      86: astore        6
      88: aload         6
      90: invokeinterface #19,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
      95: lstore        7
      97: lload_3
      98: ldc2_w        #39                 // long -1l
     101: lcmp
     102: ifne          111
     105: lconst_0
     106: lstore        9
     108: goto          147
     111: lload_3
     112: lload         7
     114: lcmp
     115: ifgt          138
     118: aload_0
     119: iload         5
     121: putfield      #13                 // Field currentChannelIdx:I
     124: lload_3
     125: lstore        11
     127: ldc2_w        #39                 // long -1l
     130: lstore_3
     131: lload         11
     133: lstore        9
     135: goto          147
     138: lload_3
     139: lload         7
     141: lsub
     142: lstore_3
     143: lload         7
     145: lstore        9
     147: aload         6
     149: lload         9
     151: invokeinterface #41,  3           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     156: pop
     157: iinc          5, 1
     160: goto          58
     163: aload_0
     164: areturn

  public static java.nio.channels.SeekableByteChannel forSeekableByteChannels(java.nio.channels.SeekableByteChannel...);
    Code:
       0: aload_0
       1: ldc           #3                  // String channels must not be null
       3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #42                 // class "[Ljava/nio/channels/SeekableByteChannel;"
       9: arraylength
      10: iconst_1
      11: if_icmpne     18
      14: aload_0
      15: iconst_0
      16: aaload
      17: areturn
      18: new           #43                 // class org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel
      21: dup
      22: aload_0
      23: invokestatic  #44                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      26: invokespecial #45                 // Method "<init>":(Ljava/util/List;)V
      29: areturn

  public static java.nio.channels.SeekableByteChannel forFiles(java.io.File...) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #46                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #47                 // String files must not be null
      11: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #48                 // class "[Ljava/io/File;"
      17: astore_2
      18: aload_2
      19: arraylength
      20: istore_3
      21: iconst_0
      22: istore        4
      24: iload         4
      26: iload_3
      27: if_icmpge     67
      30: aload_2
      31: iload         4
      33: aaload
      34: astore        5
      36: aload_1
      37: aload         5
      39: invokevirtual #49                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      42: iconst_1
      43: anewarray     #50                 // class java/nio/file/OpenOption
      46: dup
      47: iconst_0
      48: getstatic     #51                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      51: aastore
      52: invokestatic  #52                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
      55: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          4, 1
      64: goto          24
      67: aload_1
      68: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      73: iconst_1
      74: if_icmpne     88
      77: aload_1
      78: iconst_0
      79: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      84: checkcast     #16                 // class java/nio/channels/SeekableByteChannel
      87: areturn
      88: new           #43                 // class org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel
      91: dup
      92: aload_1
      93: invokespecial #45                 // Method "<init>":(Ljava/util/List;)V
      96: areturn
}
