Compiled from "ParallelScatterZipCreator.java"
public class org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator {
  private final java.util.Deque<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> streams;

  private final java.util.concurrent.ExecutorService es;

  private final org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier backingStoreSupplier;

  private final java.util.Deque<java.util.concurrent.Future<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>> futures;

  private final long startedAt;

  private long compressionDoneAt;

  private long scatterDoneAt;

  private final java.lang.ThreadLocal<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> tlScatterStreams;

  private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream createDeferred(org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
       6: astore_2
       7: iconst_m1
       8: aload_2
       9: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      12: astore_3
      13: new           #8                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      16: dup
      17: aload_2
      18: aload_3
      19: invokespecial #9                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream."<init>":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V
      22: areturn

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator();
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       4: invokevirtual #11                 // Method java/lang/Runtime.availableProcessors:()I
       7: invokestatic  #12                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      10: invokespecial #13                 // Method "<init>":(Ljava/util/concurrent/ExecutorService;)V
      13: return

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: new           #14                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier
       5: dup
       6: aconst_null
       7: invokespecial #15                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V
      10: invokespecial #16                 // Method "<init>":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V
      13: return

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/concurrent/ConcurrentLinkedDeque
       8: dup
       9: invokespecial #19                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      12: putfield      #2                  // Field streams:Ljava/util/Deque;
      15: aload_0
      16: new           #18                 // class java/util/concurrent/ConcurrentLinkedDeque
      19: dup
      20: invokespecial #19                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      23: putfield      #20                 // Field futures:Ljava/util/Deque;
      26: aload_0
      27: invokestatic  #21                 // Method java/lang/System.currentTimeMillis:()J
      30: putfield      #22                 // Field startedAt:J
      33: aload_0
      34: lconst_0
      35: putfield      #23                 // Field compressionDoneAt:J
      38: aload_0
      39: new           #24                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1
      42: dup
      43: aload_0
      44: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V
      47: putfield      #1                  // Field tlScatterStreams:Ljava/lang/ThreadLocal;
      50: aload_0
      51: aload_2
      52: putfield      #4                  // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;
      55: aload_0
      56: aload_1
      57: putfield      #26                 // Field es:Ljava/util/concurrent/ExecutorService;
      60: return

  public void addArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokevirtual #27                 // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;
       7: invokevirtual #28                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V
      10: return

  public void addArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #29                 // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;
       6: invokevirtual #28                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V
       9: return

  public final void submit(java.util.concurrent.Callable<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: new           #30                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$2
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #31                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$2."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)V
      10: invokevirtual #28                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V
      13: return

  public final void submitStreamAwareCallable(java.util.concurrent.Callable<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field futures:Ljava/util/Deque;
       4: aload_0
       5: getfield      #26                 // Field es:Ljava/util/concurrent/ExecutorService;
       8: aload_1
       9: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      14: invokeinterface #33,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       4: istore_3
       5: iload_3
       6: iconst_m1
       7: if_icmpne     37
      10: new           #36                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #37                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #39                 // String Method must be set on zipArchiveEntry:
      23: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_1
      38: aload_2
      39: invokestatic  #44                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;
      42: astore        4
      44: new           #45                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$3
      47: dup
      48: aload_0
      49: aload         4
      51: invokespecial #46                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$3."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V
      54: areturn

  public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier);
    Code:
       0: new           #47                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #48                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$4."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V
       9: areturn

  public void writeTo(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field futures:Ljava/util/Deque;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #52                 // class java/util/concurrent/Future
      28: astore_3
      29: aload_3
      30: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      35: pop
      36: goto          10
      39: aload_0
      40: getfield      #26                 // Field es:Ljava/util/concurrent/ExecutorService;
      43: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      48: goto          65
      51: astore        4
      53: aload_0
      54: getfield      #26                 // Field es:Ljava/util/concurrent/ExecutorService;
      57: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      62: aload         4
      64: athrow
      65: aload_0
      66: getfield      #26                 // Field es:Ljava/util/concurrent/ExecutorService;
      69: ldc2_w        #55                 // long 60000l
      72: getstatic     #57                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      75: invokeinterface #58,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      80: pop
      81: aload_0
      82: invokestatic  #21                 // Method java/lang/System.currentTimeMillis:()J
      85: putfield      #23                 // Field compressionDoneAt:J
      88: aload_0
      89: getfield      #20                 // Field futures:Ljava/util/Deque;
      92: invokeinterface #49,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      97: astore_2
      98: aload_2
      99: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     104: ifeq          140
     107: aload_2
     108: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #52                 // class java/util/concurrent/Future
     116: astore_3
     117: aload_3
     118: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     123: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
     126: astore        4
     128: aload         4
     130: invokevirtual #59                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
     133: aload_1
     134: invokevirtual #60                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V
     137: goto          98
     140: aload_0
     141: getfield      #2                  // Field streams:Ljava/util/Deque;
     144: invokeinterface #49,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     149: astore_2
     150: aload_2
     151: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     156: ifeq          176
     159: aload_2
     160: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     165: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
     168: astore_3
     169: aload_3
     170: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V
     173: goto          150
     176: aload_0
     177: invokestatic  #21                 // Method java/lang/System.currentTimeMillis:()J
     180: putfield      #62                 // Field scatterDoneAt:J
     183: aload_0
     184: invokespecial #63                 // Method closeAll:()V
     187: goto          199
     190: astore        5
     192: aload_0
     193: invokespecial #63                 // Method closeAll:()V
     196: aload         5
     198: athrow
     199: return
    Exception table:
       from    to  target type
           0    39    51   any
          51    53    51   any
           0   183   190   any
         190   192   190   any

  public org.apache.commons.compress.archivers.zip.ScatterStatistics getStatisticsMessage();
    Code:
       0: new           #64                 // class org/apache/commons/compress/archivers/zip/ScatterStatistics
       3: dup
       4: aload_0
       5: getfield      #23                 // Field compressionDoneAt:J
       8: aload_0
       9: getfield      #22                 // Field startedAt:J
      12: lsub
      13: aload_0
      14: getfield      #62                 // Field scatterDoneAt:J
      17: aload_0
      18: getfield      #23                 // Field compressionDoneAt:J
      21: lsub
      22: invokespecial #65                 // Method org/apache/commons/compress/archivers/zip/ScatterStatistics."<init>":(JJ)V
      25: areturn

  private void closeAll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field streams:Ljava/util/Deque;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_1
      20: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      28: astore_2
      29: aload_2
      30: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V
      33: goto          37
      36: astore_3
      37: goto          10
      40: return
    Exception table:
       from    to  target type
          29    33    36   Class java/io/IOException

  static org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier access$000(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;
       4: areturn

  static org.apache.commons.compress.archivers.zip.ScatterZipOutputStream access$100(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;
       5: areturn

  static java.util.Deque access$200(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator);
    Code:
       0: aload_0
       1: getfield      #2                  // Field streams:Ljava/util/Deque;
       4: areturn

  static java.lang.ThreadLocal access$400(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator);
    Code:
       0: aload_0
       1: getfield      #1                  // Field tlScatterStreams:Ljava/lang/ThreadLocal;
       4: areturn
}
