Compiled from "PKWareExtraHeader.java"
public abstract class org.apache.commons.compress.archivers.zip.PKWareExtraHeader implements org.apache.commons.compress.archivers.zip.ZipExtraField {
  private final org.apache.commons.compress.archivers.zip.ZipShort headerId;

  private byte[] localData;

  private byte[] centralData;

  protected org.apache.commons.compress.archivers.zip.PKWareExtraHeader(org.apache.commons.compress.archivers.zip.ZipShort);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       9: return

  public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: areturn

  public void setLocalFileDataData(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B
       5: putfield      #4                  // Field localData:[B
       8: return

  public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();
    Code:
       0: new           #5                  // class org/apache/commons/compress/archivers/zip/ZipShort
       3: dup
       4: aload_0
       5: getfield      #4                  // Field localData:[B
       8: ifnull        19
      11: aload_0
      12: getfield      #4                  // Field localData:[B
      15: arraylength
      16: goto          20
      19: iconst_0
      20: invokespecial #6                  // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      23: areturn

  public byte[] getLocalFileDataData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field localData:[B
       4: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B
       7: areturn

  public void setCentralDirectoryData(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B
       5: putfield      #7                  // Field centralData:[B
       8: return

  public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field centralData:[B
       4: ifnull        20
       7: new           #5                  // class org/apache/commons/compress/archivers/zip/ZipShort
      10: dup
      11: aload_0
      12: getfield      #7                  // Field centralData:[B
      15: arraylength
      16: invokespecial #6                  // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      19: areturn
      20: aload_0
      21: invokevirtual #8                  // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;
      24: areturn

  public byte[] getCentralDirectoryData();
    Code:
       0: aload_0
       1: getfield      #7                  // Field centralData:[B
       4: ifnull        15
       7: aload_0
       8: getfield      #7                  // Field centralData:[B
      11: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B
      14: areturn
      15: aload_0
      16: invokevirtual #9                  // Method getLocalFileDataData:()[B
      19: areturn

  public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_2
       4: iload_3
       5: iadd
       6: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([BII)[B
       9: invokevirtual #11                 // Method setLocalFileDataData:([B)V
      12: return

  public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: aload_1
       1: iload_2
       2: iload_2
       3: iload_3
       4: iadd
       5: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([BII)[B
       8: astore        4
      10: aload_0
      11: aload         4
      13: invokevirtual #12                 // Method setCentralDirectoryData:([B)V
      16: aload_0
      17: getfield      #4                  // Field localData:[B
      20: ifnonnull     29
      23: aload_0
      24: aload         4
      26: invokevirtual #11                 // Method setLocalFileDataData:([B)V
      29: return

  protected final void assertMinimalLength(int, int) throws java.util.zip.ZipException;
    Code:
       0: iload_2
       1: iload_1
       2: if_icmpge     51
       5: new           #13                 // class java/util/zip/ZipException
       8: dup
       9: new           #14                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #19                 // String  is too short, only
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_2
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #21                 // String  bytes, expected at least
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: iload_1
      41: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #23                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: return
}
