Compiled from "TapeInputStream.java"
class org.apache.commons.compress.archivers.dump.TapeInputStream extends java.io.FilterInputStream {
  private byte[] blockBuffer;

  private int currBlkIdx;

  private int blockSize;

  private static final int RECORD_SIZE;

  private int readOffset;

  private boolean isCompressed;

  private long bytesRead;

  public org.apache.commons.compress.archivers.dump.TapeInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: sipush        1024
       9: newarray       byte
      11: putfield      #3                  // Field blockBuffer:[B
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field currBlkIdx:I
      19: aload_0
      20: sipush        1024
      23: putfield      #5                  // Field blockSize:I
      26: aload_0
      27: sipush        1024
      30: putfield      #6                  // Field readOffset:I
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field isCompressed:Z
      38: aload_0
      39: lconst_0
      40: putfield      #8                  // Field bytesRead:J
      43: return

  public void resetBlockSize(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #7                  // Field isCompressed:Z
       5: iload_1
       6: iconst_1
       7: if_icmpge     42
      10: new           #9                  // class java/io/IOException
      13: dup
      14: new           #10                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #12                 // String Block with
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #15                 // String  records found, must be at least 1
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: sipush        1024
      46: iload_1
      47: imul
      48: putfield      #5                  // Field blockSize:I
      51: aload_0
      52: getfield      #3                  // Field blockBuffer:[B
      55: astore_3
      56: aload_0
      57: aload_0
      58: getfield      #5                  // Field blockSize:I
      61: newarray       byte
      63: putfield      #3                  // Field blockBuffer:[B
      66: aload_3
      67: iconst_0
      68: aload_0
      69: getfield      #3                  // Field blockBuffer:[B
      72: iconst_0
      73: sipush        1024
      76: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_0
      80: aload_0
      81: getfield      #3                  // Field blockBuffer:[B
      84: sipush        1024
      87: aload_0
      88: getfield      #5                  // Field blockSize:I
      91: sipush        1024
      94: isub
      95: invokespecial #20                 // Method readFully:([BII)V
      98: aload_0
      99: iconst_0
     100: putfield      #4                  // Field currBlkIdx:I
     103: aload_0
     104: sipush        1024
     107: putfield      #6                  // Field readOffset:I
     110: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOffset:I
       4: aload_0
       5: getfield      #5                  // Field blockSize:I
       8: if_icmpge     21
      11: aload_0
      12: getfield      #5                  // Field blockSize:I
      15: aload_0
      16: getfield      #6                  // Field readOffset:I
      19: isub
      20: ireturn
      21: aload_0
      22: getfield      #21                 // Field in:Ljava/io/InputStream;
      25: invokevirtual #22                 // Method java/io/InputStream.available:()I
      28: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: new           #23                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #24                 // String All reads must be multiple of record size (1024 bytes.
       6: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: sipush        1024
       4: irem
       5: ifeq          18
       8: new           #23                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #24                 // String All reads must be multiple of record size (1024 bytes.
      14: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     130
      27: aload_0
      28: getfield      #6                  // Field readOffset:I
      31: aload_0
      32: getfield      #5                  // Field blockSize:I
      35: if_icmpne     50
      38: aload_0
      39: iconst_1
      40: invokespecial #26                 // Method readBlock:(Z)V
      43: goto          50
      46: astore        5
      48: iconst_m1
      49: ireturn
      50: iconst_0
      51: istore        5
      53: aload_0
      54: getfield      #6                  // Field readOffset:I
      57: iload_3
      58: iload         4
      60: isub
      61: iadd
      62: aload_0
      63: getfield      #5                  // Field blockSize:I
      66: if_icmpgt     78
      69: iload_3
      70: iload         4
      72: isub
      73: istore        5
      75: goto          89
      78: aload_0
      79: getfield      #5                  // Field blockSize:I
      82: aload_0
      83: getfield      #6                  // Field readOffset:I
      86: isub
      87: istore        5
      89: aload_0
      90: getfield      #3                  // Field blockBuffer:[B
      93: aload_0
      94: getfield      #6                  // Field readOffset:I
      97: aload_1
      98: iload_2
      99: iload         5
     101: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     104: aload_0
     105: dup
     106: getfield      #6                  // Field readOffset:I
     109: iload         5
     111: iadd
     112: putfield      #6                  // Field readOffset:I
     115: iload         4
     117: iload         5
     119: iadd
     120: istore        4
     122: iload_2
     123: iload         5
     125: iadd
     126: istore_2
     127: goto          21
     130: iload         4
     132: ireturn
    Exception table:
       from    to  target type
          38    43    46   Class org/apache/commons/compress/archivers/dump/ShortFileException

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #28                 // long 1024l
       4: lrem
       5: lconst_0
       6: lcmp
       7: ifeq          20
      10: new           #23                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #24                 // String All reads must be multiple of record size (1024 bytes.
      16: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: lconst_0
      21: lstore_3
      22: lload_3
      23: lload_1
      24: lcmp
      25: ifge          132
      28: aload_0
      29: getfield      #6                  // Field readOffset:I
      32: aload_0
      33: getfield      #5                  // Field blockSize:I
      36: if_icmpne     69
      39: aload_0
      40: lload_1
      41: lload_3
      42: lsub
      43: aload_0
      44: getfield      #5                  // Field blockSize:I
      47: i2l
      48: lcmp
      49: ifge          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: invokespecial #26                 // Method readBlock:(Z)V
      60: goto          69
      63: astore        5
      65: ldc2_w        #30                 // long -1l
      68: lreturn
      69: lconst_0
      70: lstore        5
      72: aload_0
      73: getfield      #6                  // Field readOffset:I
      76: i2l
      77: lload_1
      78: lload_3
      79: lsub
      80: ladd
      81: aload_0
      82: getfield      #5                  // Field blockSize:I
      85: i2l
      86: lcmp
      87: ifgt          98
      90: lload_1
      91: lload_3
      92: lsub
      93: lstore        5
      95: goto          111
      98: aload_0
      99: getfield      #5                  // Field blockSize:I
     102: i2l
     103: aload_0
     104: getfield      #6                  // Field readOffset:I
     107: i2l
     108: lsub
     109: lstore        5
     111: aload_0
     112: dup
     113: getfield      #6                  // Field readOffset:I
     116: i2l
     117: lload         5
     119: ladd
     120: l2i
     121: putfield      #6                  // Field readOffset:I
     124: lload_3
     125: lload         5
     127: ladd
     128: lstore_3
     129: goto          22
     132: lload_3
     133: lreturn
    Exception table:
       from    to  target type
          39    60    63   Class org/apache/commons/compress/archivers/dump/ShortFileException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field in:Ljava/io/InputStream;
       4: ifnull        24
       7: aload_0
       8: getfield      #21                 // Field in:Ljava/io/InputStream;
      11: getstatic     #32                 // Field java/lang/System.in:Ljava/io/InputStream;
      14: if_acmpeq     24
      17: aload_0
      18: getfield      #21                 // Field in:Ljava/io/InputStream;
      21: invokevirtual #33                 // Method java/io/InputStream.close:()V
      24: return

  public byte[] peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOffset:I
       4: aload_0
       5: getfield      #5                  // Field blockSize:I
       8: if_icmpne     22
      11: aload_0
      12: iconst_1
      13: invokespecial #26                 // Method readBlock:(Z)V
      16: goto          22
      19: astore_1
      20: aconst_null
      21: areturn
      22: sipush        1024
      25: newarray       byte
      27: astore_1
      28: aload_0
      29: getfield      #3                  // Field blockBuffer:[B
      32: aload_0
      33: getfield      #6                  // Field readOffset:I
      36: aload_1
      37: iconst_0
      38: aload_1
      39: arraylength
      40: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_1
      44: areturn
    Exception table:
       from    to  target type
          11    16    19   Class org/apache/commons/compress/archivers/dump/ShortFileException

  public byte[] readRecord() throws java.io.IOException;
    Code:
       0: sipush        1024
       3: newarray       byte
       5: astore_1
       6: iconst_m1
       7: aload_0
       8: aload_1
       9: iconst_0
      10: aload_1
      11: arraylength
      12: invokevirtual #34                 // Method read:([BII)I
      15: if_icmpne     26
      18: new           #27                 // class org/apache/commons/compress/archivers/dump/ShortFileException
      21: dup
      22: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
      25: athrow
      26: aload_1
      27: areturn

  private void readBlock(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field in:Ljava/io/InputStream;
       4: ifnonnull     17
       7: new           #9                  // class java/io/IOException
      10: dup
      11: ldc           #36                 // String Input buffer is closed
      13: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field isCompressed:Z
      21: ifeq          32
      24: aload_0
      25: getfield      #4                  // Field currBlkIdx:I
      28: iconst_m1
      29: if_icmpne     62
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field blockBuffer:[B
      37: iconst_0
      38: aload_0
      39: getfield      #5                  // Field blockSize:I
      42: invokespecial #20                 // Method readFully:([BII)V
      45: aload_0
      46: dup
      47: getfield      #8                  // Field bytesRead:J
      50: aload_0
      51: getfield      #5                  // Field blockSize:I
      54: i2l
      55: ladd
      56: putfield      #8                  // Field bytesRead:J
      59: goto          351
      62: aload_0
      63: aload_0
      64: getfield      #3                  // Field blockBuffer:[B
      67: iconst_0
      68: iconst_4
      69: invokespecial #20                 // Method readFully:([BII)V
      72: aload_0
      73: dup
      74: getfield      #8                  // Field bytesRead:J
      77: ldc2_w        #37                 // long 4l
      80: ladd
      81: putfield      #8                  // Field bytesRead:J
      84: aload_0
      85: getfield      #3                  // Field blockBuffer:[B
      88: iconst_0
      89: invokestatic  #39                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I
      92: istore_2
      93: iload_2
      94: iconst_1
      95: iand
      96: iconst_1
      97: if_icmpne     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore_3
     106: iload_3
     107: ifne          140
     110: aload_0
     111: aload_0
     112: getfield      #3                  // Field blockBuffer:[B
     115: iconst_0
     116: aload_0
     117: getfield      #5                  // Field blockSize:I
     120: invokespecial #20                 // Method readFully:([BII)V
     123: aload_0
     124: dup
     125: getfield      #8                  // Field bytesRead:J
     128: aload_0
     129: getfield      #5                  // Field blockSize:I
     132: i2l
     133: ladd
     134: putfield      #8                  // Field bytesRead:J
     137: goto          351
     140: iload_2
     141: iconst_1
     142: ishr
     143: bipush        7
     145: iand
     146: istore        4
     148: iload_2
     149: iconst_4
     150: ishr
     151: ldc           #40                 // int 268435455
     153: iand
     154: istore        5
     156: iload         5
     158: newarray       byte
     160: astore        6
     162: aload_0
     163: aload         6
     165: iconst_0
     166: iload         5
     168: invokespecial #20                 // Method readFully:([BII)V
     171: aload_0
     172: dup
     173: getfield      #8                  // Field bytesRead:J
     176: iload         5
     178: i2l
     179: ladd
     180: putfield      #8                  // Field bytesRead:J
     183: iload_1
     184: ifne          198
     187: aload_0
     188: getfield      #3                  // Field blockBuffer:[B
     191: iconst_0
     192: invokestatic  #41                 // Method java/util/Arrays.fill:([BB)V
     195: goto          351
     198: getstatic     #42                 // Field org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I
     201: iload         4
     203: iconst_3
     204: iand
     205: invokestatic  #43                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;
     208: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I
     211: iaload
     212: tableswitch   { // 1 to 3
                     1: 240
                     2: 323
                     3: 333
               default: 343
          }
     240: new           #45                 // class java/util/zip/Inflater
     243: dup
     244: invokespecial #46                 // Method java/util/zip/Inflater."<init>":()V
     247: astore        7
     249: aload         7
     251: aload         6
     253: iconst_0
     254: aload         6
     256: arraylength
     257: invokevirtual #47                 // Method java/util/zip/Inflater.setInput:([BII)V
     260: aload         7
     262: aload_0
     263: getfield      #3                  // Field blockBuffer:[B
     266: invokevirtual #48                 // Method java/util/zip/Inflater.inflate:([B)I
     269: istore        5
     271: iload         5
     273: aload_0
     274: getfield      #5                  // Field blockSize:I
     277: if_icmpeq     288
     280: new           #27                 // class org/apache/commons/compress/archivers/dump/ShortFileException
     283: dup
     284: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
     287: athrow
     288: aload         7
     290: invokevirtual #49                 // Method java/util/zip/Inflater.end:()V
     293: goto          320
     296: astore        8
     298: new           #51                 // class org/apache/commons/compress/archivers/dump/DumpArchiveException
     301: dup
     302: ldc           #52                 // String Bad data
     304: aload         8
     306: invokespecial #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     309: athrow
     310: astore        9
     312: aload         7
     314: invokevirtual #49                 // Method java/util/zip/Inflater.end:()V
     317: aload         9
     319: athrow
     320: goto          351
     323: new           #54                 // class org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
     326: dup
     327: ldc           #55                 // String BZLIB2
     329: invokespecial #56                 // Method org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException."<init>":(Ljava/lang/String;)V
     332: athrow
     333: new           #54                 // class org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
     336: dup
     337: ldc           #57                 // String LZO
     339: invokespecial #56                 // Method org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException."<init>":(Ljava/lang/String;)V
     342: athrow
     343: new           #54                 // class org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
     346: dup
     347: invokespecial #58                 // Method org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException."<init>":()V
     350: athrow
     351: aload_0
     352: dup
     353: getfield      #4                  // Field currBlkIdx:I
     356: iconst_1
     357: iadd
     358: putfield      #4                  // Field currBlkIdx:I
     361: aload_0
     362: iconst_0
     363: putfield      #6                  // Field readOffset:I
     366: return
    Exception table:
       from    to  target type
         249   288   296   Class java/util/zip/DataFormatException
         249   288   310   any
         296   312   310   any

  private void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field in:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #59                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I
      10: istore        4
      12: iload         4
      14: iload_3
      15: if_icmpge     26
      18: new           #27                 // class org/apache/commons/compress/archivers/dump/ShortFileException
      21: dup
      22: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
      25: athrow
      26: return

  public long getBytesRead();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytesRead:J
       4: lreturn
}
