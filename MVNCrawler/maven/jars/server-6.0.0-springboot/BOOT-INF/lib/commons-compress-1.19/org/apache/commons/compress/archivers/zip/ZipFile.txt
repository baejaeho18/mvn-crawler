Compiled from "ZipFile.java"
public class org.apache.commons.compress.archivers.zip.ZipFile implements java.io.Closeable {
  private static final int HASH_SIZE;

  static final int NIBLET_MASK;

  static final int BYTE_SHIFT;

  private static final int POS_0;

  private static final int POS_1;

  private static final int POS_2;

  private static final int POS_3;

  private static final byte[] ONE_ZERO_BYTE;

  private final java.util.List<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> entries;

  private final java.util.Map<java.lang.String, java.util.LinkedList<org.apache.commons.compress.archivers.zip.ZipArchiveEntry>> nameMap;

  private final java.lang.String encoding;

  private final org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  private final java.lang.String archiveName;

  private final java.nio.channels.SeekableByteChannel archive;

  private final boolean useUnicodeExtraFields;

  private volatile boolean closed;

  private final byte[] dwordBuf;

  private final byte[] wordBuf;

  private final byte[] cfhBuf;

  private final byte[] shortBuf;

  private final java.nio.ByteBuffer dwordBbuf;

  private final java.nio.ByteBuffer wordBbuf;

  private final java.nio.ByteBuffer cfhBbuf;

  private static final int CFH_LEN;

  private static final long CFH_SIG;

  static final int MIN_EOCD_SIZE;

  private static final int MAX_EOCD_SIZE;

  private static final int CFD_LOCATOR_OFFSET;

  private static final int ZIP64_EOCDL_LENGTH;

  private static final int ZIP64_EOCDL_LOCATOR_OFFSET;

  private static final int ZIP64_EOCD_CFD_LOCATOR_OFFSET;

  private static final long LFH_OFFSET_FOR_FILENAME_LENGTH;

  private final java.util.Comparator<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> offsetComparator;

  public org.apache.commons.compress.archivers.zip.ZipFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #5                  // String UTF8
       4: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;)V
       7: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #7                  // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: ldc           #5                  // String UTF8
      11: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;)V
      14: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #7                  // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: aload_2
      10: iconst_1
      11: invokespecial #9                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;Z)V
      14: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #9                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;Z)V
       7: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.io.File, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #10                 // Method "<init>":(Ljava/io/File;Ljava/lang/String;ZZ)V
       8: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.io.File, java.lang.String, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: getstatic     #12                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
       8: invokestatic  #13                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      11: iconst_0
      12: anewarray     #14                 // class java/nio/file/attribute/FileAttribute
      15: invokestatic  #15                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;
      18: aload_1
      19: invokevirtual #16                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      22: aload_2
      23: iload_3
      24: iconst_1
      25: iload         4
      27: invokespecial #17                 // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;ZZZ)V
      30: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.nio.channels.SeekableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #18                 // String unknown archive
       4: ldc           #5                  // String UTF8
       6: iconst_1
       7: invokespecial #19                 // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;Z)V
      10: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.nio.channels.SeekableByteChannel, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #18                 // String unknown archive
       4: aload_2
       5: iconst_1
       6: invokespecial #19                 // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;Z)V
       9: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.nio.channels.SeekableByteChannel, java.lang.String, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: iconst_0
       8: invokespecial #17                 // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;ZZZ)V
      11: return

  public org.apache.commons.compress.archivers.zip.ZipFile(java.nio.channels.SeekableByteChannel, java.lang.String, java.lang.String, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: iload         5
       9: invokespecial #17                 // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;ZZZ)V
      12: return

  private org.apache.commons.compress.archivers.zip.ZipFile(java.nio.channels.SeekableByteChannel, java.lang.String, java.lang.String, boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #21                 // class java/util/LinkedList
       8: dup
       9: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      12: putfield      #23                 // Field entries:Ljava/util/List;
      15: aload_0
      16: new           #24                 // class java/util/HashMap
      19: dup
      20: sipush        509
      23: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      26: putfield      #26                 // Field nameMap:Ljava/util/Map;
      29: aload_0
      30: iconst_1
      31: putfield      #27                 // Field closed:Z
      34: aload_0
      35: bipush        8
      37: newarray       byte
      39: putfield      #28                 // Field dwordBuf:[B
      42: aload_0
      43: iconst_4
      44: newarray       byte
      46: putfield      #29                 // Field wordBuf:[B
      49: aload_0
      50: bipush        42
      52: newarray       byte
      54: putfield      #30                 // Field cfhBuf:[B
      57: aload_0
      58: iconst_2
      59: newarray       byte
      61: putfield      #31                 // Field shortBuf:[B
      64: aload_0
      65: aload_0
      66: getfield      #28                 // Field dwordBuf:[B
      69: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      72: putfield      #33                 // Field dwordBbuf:Ljava/nio/ByteBuffer;
      75: aload_0
      76: aload_0
      77: getfield      #29                 // Field wordBuf:[B
      80: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      83: putfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      86: aload_0
      87: aload_0
      88: getfield      #30                 // Field cfhBuf:[B
      91: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      94: putfield      #35                 // Field cfhBbuf:Ljava/nio/ByteBuffer;
      97: aload_0
      98: new           #36                 // class org/apache/commons/compress/archivers/zip/ZipFile$2
     101: dup
     102: aload_0
     103: invokespecial #37                 // Method org/apache/commons/compress/archivers/zip/ZipFile$2."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipFile;)V
     106: putfield      #38                 // Field offsetComparator:Ljava/util/Comparator;
     109: aload_0
     110: aload_2
     111: putfield      #39                 // Field archiveName:Ljava/lang/String;
     114: aload_0
     115: aload_3
     116: putfield      #40                 // Field encoding:Ljava/lang/String;
     119: aload_0
     120: aload_3
     121: invokestatic  #41                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     124: putfield      #42                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     127: aload_0
     128: iload         4
     130: putfield      #43                 // Field useUnicodeExtraFields:Z
     133: aload_0
     134: aload_1
     135: putfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     138: iconst_0
     139: istore        7
     141: aload_0
     142: invokespecial #44                 // Method populateFromCentralDirectory:()Ljava/util/Map;
     145: astore        8
     147: iload         6
     149: ifne          158
     152: aload_0
     153: aload         8
     155: invokespecial #45                 // Method resolveLocalFileHeaderData:(Ljava/util/Map;)V
     158: aload_0
     159: invokespecial #46                 // Method fillNameMap:()V
     162: iconst_1
     163: istore        7
     165: aload_0
     166: iload         7
     168: ifne          175
     171: iconst_1
     172: goto          176
     175: iconst_0
     176: putfield      #27                 // Field closed:Z
     179: iload         7
     181: ifne          235
     184: iload         5
     186: ifeq          235
     189: aload_0
     190: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     193: invokestatic  #47                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
     196: goto          235
     199: astore        9
     201: aload_0
     202: iload         7
     204: ifne          211
     207: iconst_1
     208: goto          212
     211: iconst_0
     212: putfield      #27                 // Field closed:Z
     215: iload         7
     217: ifne          232
     220: iload         5
     222: ifeq          232
     225: aload_0
     226: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     229: invokestatic  #47                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
     232: aload         9
     234: athrow
     235: return
    Exception table:
       from    to  target type
         141   165   199   any
         199   201   199   any

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #40                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #27                 // Field closed:Z
       5: aload_0
       6: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       9: invokeinterface #48,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
      14: return

  public static void closeQuietly(org.apache.commons.compress.archivers.zip.ZipFile);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
       4: return

  public java.util.Enumeration<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> getEntries();
    Code:
       0: aload_0
       1: getfield      #23                 // Field entries:Ljava/util/List;
       4: invokestatic  #49                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
       7: areturn

  public java.util.Enumeration<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> getEntriesInPhysicalOrder();
    Code:
       0: aload_0
       1: getfield      #23                 // Field entries:Ljava/util/List;
       4: aload_0
       5: getfield      #23                 // Field entries:Ljava/util/List;
       8: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
      13: anewarray     #51                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      16: invokeinterface #52,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #53                 // class "[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;"
      24: astore_1
      25: aload_1
      26: aload_0
      27: getfield      #38                 // Field offsetComparator:Ljava/util/Comparator;
      30: invokestatic  #54                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
      33: aload_1
      34: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      37: invokestatic  #49                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      40: areturn

  public org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #26                 // Field nameMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class java/util/LinkedList
      13: astore_2
      14: aload_2
      15: ifnull        28
      18: aload_2
      19: invokevirtual #57                 // Method java/util/LinkedList.getFirst:()Ljava/lang/Object;
      22: checkcast     #51                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      25: goto          29
      28: aconst_null
      29: areturn

  public java.lang.Iterable<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> getEntries(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #26                 // Field nameMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #58                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        22
      18: aload_2
      19: goto          25
      22: invokestatic  #59                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      25: areturn

  public java.lang.Iterable<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> getEntriesInPhysicalOrder(java.lang.String);
    Code:
       0: iconst_0
       1: anewarray     #51                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
       4: astore_2
       5: aload_0
       6: getfield      #26                 // Field nameMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #60,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          47
      18: aload_0
      19: getfield      #26                 // Field nameMap:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #21                 // class java/util/LinkedList
      31: aload_2
      32: invokevirtual #61                 // Method java/util/LinkedList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      35: checkcast     #53                 // class "[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;"
      38: astore_2
      39: aload_2
      40: aload_0
      41: getfield      #38                 // Field offsetComparator:Ljava/util/Comparator;
      44: invokestatic  #54                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
      47: aload_2
      48: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      51: areturn

  public boolean canReadEntryData(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: invokestatic  #62                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.canHandleEntryData:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
       4: ireturn

  public java.io.InputStream getRawInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: instanceof    #63                 // class org/apache/commons/compress/archivers/zip/ZipFile$Entry
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J
      13: lstore_2
      14: lload_2
      15: ldc2_w        #66                 // long -1l
      18: lcmp
      19: ifne          24
      22: aconst_null
      23: areturn
      24: aload_0
      25: lload_2
      26: aload_1
      27: invokevirtual #68                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      30: invokespecial #69                 // Method createBoundedInputStream:(JJ)Lorg/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream;
      33: areturn

  public void copyRawEntries(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream, org.apache.commons.compress.archivers.zip.ZipArchiveEntryPredicate) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method getEntriesInPhysicalOrder:()Ljava/util/Enumeration;
       4: astore_3
       5: aload_3
       6: invokeinterface #71,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          51
      14: aload_3
      15: invokeinterface #72,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #51                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      23: astore        4
      25: aload_2
      26: aload         4
      28: invokeinterface #73,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipArchiveEntryPredicate.test:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      33: ifeq          48
      36: aload_1
      37: aload         4
      39: aload_0
      40: aload         4
      42: invokevirtual #74                 // Method getRawInputStream:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/io/InputStream;
      45: invokevirtual #75                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V
      48: goto          5
      51: return

  public java.io.InputStream getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #63                 // class org/apache/commons/compress/archivers/zip/ZipFile$Entry
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: invokestatic  #76                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.checkRequestedFeatures:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      13: aload_0
      14: aload_1
      15: invokespecial #77                 // Method getDataOffset:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)J
      18: lstore_2
      19: new           #78                 // class java/io/BufferedInputStream
      22: dup
      23: aload_0
      24: lload_2
      25: aload_1
      26: invokevirtual #68                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      29: invokespecial #69                 // Method createBoundedInputStream:(JJ)Lorg/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream;
      32: invokespecial #79                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      35: astore        4
      37: getstatic     #80                 // Field org/apache/commons/compress/archivers/zip/ZipFile$3.$SwitchMap$org$apache$commons$compress$archivers$zip$ZipMethod:[I
      40: aload_1
      41: invokevirtual #81                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      44: invokestatic  #82                 // Method org/apache/commons/compress/archivers/zip/ZipMethod.getMethodByCode:(I)Lorg/apache/commons/compress/archivers/zip/ZipMethod;
      47: invokevirtual #83                 // Method org/apache/commons/compress/archivers/zip/ZipMethod.ordinal:()I
      50: iaload
      51: tableswitch   { // 1 to 19
                     1: 140
                     2: 150
                     3: 160
                     4: 184
                     5: 226
                     6: 236
                     7: 246
                     8: 246
                     9: 246
                    10: 246
                    11: 246
                    12: 246
                    13: 246
                    14: 246
                    15: 246
                    16: 246
                    17: 246
                    18: 246
                    19: 246
               default: 246
          }
     140: new           #84                 // class org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream
     143: dup
     144: aload         4
     146: invokespecial #85                 // Method org/apache/commons/compress/archivers/zip/ZipFile$StoredStatisticsStream."<init>":(Ljava/io/InputStream;)V
     149: areturn
     150: new           #86                 // class org/apache/commons/compress/archivers/zip/UnshrinkingInputStream
     153: dup
     154: aload         4
     156: invokespecial #87                 // Method org/apache/commons/compress/archivers/zip/UnshrinkingInputStream."<init>":(Ljava/io/InputStream;)V
     159: areturn
     160: new           #88                 // class org/apache/commons/compress/archivers/zip/ExplodingInputStream
     163: dup
     164: aload_1
     165: invokevirtual #89                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
     168: invokevirtual #90                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.getSlidingDictionarySize:()I
     171: aload_1
     172: invokevirtual #89                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
     175: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.getNumberOfShannonFanoTrees:()I
     178: aload         4
     180: invokespecial #92                 // Method org/apache/commons/compress/archivers/zip/ExplodingInputStream."<init>":(IILjava/io/InputStream;)V
     183: areturn
     184: new           #93                 // class java/util/zip/Inflater
     187: dup
     188: iconst_1
     189: invokespecial #94                 // Method java/util/zip/Inflater."<init>":(Z)V
     192: astore        5
     194: new           #95                 // class org/apache/commons/compress/archivers/zip/ZipFile$1
     197: dup
     198: aload_0
     199: new           #96                 // class java/io/SequenceInputStream
     202: dup
     203: aload         4
     205: new           #97                 // class java/io/ByteArrayInputStream
     208: dup
     209: getstatic     #98                 // Field ONE_ZERO_BYTE:[B
     212: invokespecial #99                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     215: invokespecial #100                // Method java/io/SequenceInputStream."<init>":(Ljava/io/InputStream;Ljava/io/InputStream;)V
     218: aload         5
     220: aload         5
     222: invokespecial #101                // Method org/apache/commons/compress/archivers/zip/ZipFile$1."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipFile;Ljava/io/InputStream;Ljava/util/zip/Inflater;Ljava/util/zip/Inflater;)V
     225: areturn
     226: new           #102                // class org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream
     229: dup
     230: aload         4
     232: invokespecial #103                // Method org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream."<init>":(Ljava/io/InputStream;)V
     235: areturn
     236: new           #104                // class org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream
     239: dup
     240: aload         4
     242: invokespecial #105                // Method org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream."<init>":(Ljava/io/InputStream;)V
     245: areturn
     246: new           #106                // class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException
     249: dup
     250: aload_1
     251: invokevirtual #81                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     254: invokestatic  #82                 // Method org/apache/commons/compress/archivers/zip/ZipMethod.getMethodByCode:(I)Lorg/apache/commons/compress/archivers/zip/ZipMethod;
     257: aload_1
     258: invokespecial #107                // Method org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
     261: athrow

  public java.lang.String getUnixSymlink(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        110
       4: aload_1
       5: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isUnixSymlink:()Z
       8: ifeq          110
      11: aload_0
      12: aload_1
      13: invokevirtual #109                // Method getInputStream:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/io/InputStream;
      16: astore_2
      17: aconst_null
      18: astore_3
      19: aload_0
      20: getfield      #42                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      23: aload_2
      24: invokestatic  #110                // Method org/apache/commons/compress/utils/IOUtils.toByteArray:(Ljava/io/InputStream;)[B
      27: invokeinterface #111,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
      32: astore        4
      34: aload_2
      35: ifnull        64
      38: aload_3
      39: ifnull        60
      42: aload_2
      43: invokevirtual #112                // Method java/io/InputStream.close:()V
      46: goto          64
      49: astore        5
      51: aload_3
      52: aload         5
      54: invokevirtual #114                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      57: goto          64
      60: aload_2
      61: invokevirtual #112                // Method java/io/InputStream.close:()V
      64: aload         4
      66: areturn
      67: astore        4
      69: aload         4
      71: astore_3
      72: aload         4
      74: athrow
      75: astore        6
      77: aload_2
      78: ifnull        107
      81: aload_3
      82: ifnull        103
      85: aload_2
      86: invokevirtual #112                // Method java/io/InputStream.close:()V
      89: goto          107
      92: astore        7
      94: aload_3
      95: aload         7
      97: invokevirtual #114                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     100: goto          107
     103: aload_2
     104: invokevirtual #112                // Method java/io/InputStream.close:()V
     107: aload         6
     109: athrow
     110: aconst_null
     111: areturn
    Exception table:
       from    to  target type
          42    46    49   Class java/lang/Throwable
          19    34    67   Class java/lang/Throwable
          19    34    75   any
          85    89    92   Class java/lang/Throwable
          67    77    75   any

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #27                 // Field closed:Z
       4: ifne          39
       7: getstatic     #115                // Field java/lang/System.err:Ljava/io/PrintStream;
      10: new           #116                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #117                // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #118                // String Cleaning up unclosed ZipFile for archive
      19: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #39                 // Field archiveName:Ljava/lang/String;
      26: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #120                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokevirtual #121                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #122                // Method close:()V
      39: aload_0
      40: invokespecial #123                // Method java/lang/Object.finalize:()V
      43: goto          53
      46: astore_1
      47: aload_0
      48: invokespecial #123                // Method java/lang/Object.finalize:()V
      51: aload_1
      52: athrow
      53: return
    Exception table:
       from    to  target type
           0    39    46   any

  private java.util.Map<org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment> populateFromCentralDirectory() throws java.io.IOException;
    Code:
       0: new           #24                 // class java/util/HashMap
       3: dup
       4: invokespecial #124                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #125                // Method positionAtCentralDirectory:()V
      12: aload_0
      13: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      16: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      19: pop
      20: aload_0
      21: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      24: aload_0
      25: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      28: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      31: aload_0
      32: getfield      #29                 // Field wordBuf:[B
      35: invokestatic  #128                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([B)J
      38: lstore_2
      39: lload_2
      40: getstatic     #129                // Field CFH_SIG:J
      43: lcmp
      44: ifeq          64
      47: aload_0
      48: invokespecial #130                // Method startsWithLocalFileHeader:()Z
      51: ifeq          64
      54: new           #131                // class java/io/IOException
      57: dup
      58: ldc           #132                // String Central directory is empty, can\'t expand corrupt archive.
      60: invokespecial #133                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: lload_2
      65: getstatic     #129                // Field CFH_SIG:J
      68: lcmp
      69: ifne          107
      72: aload_0
      73: aload_1
      74: invokespecial #134                // Method readCentralDirectoryEntry:(Ljava/util/Map;)V
      77: aload_0
      78: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      81: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      84: pop
      85: aload_0
      86: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      89: aload_0
      90: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      93: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      96: aload_0
      97: getfield      #29                 // Field wordBuf:[B
     100: invokestatic  #128                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([B)J
     103: lstore_2
     104: goto          64
     107: aload_1
     108: areturn

  private void readCentralDirectoryEntry(java.util.Map<org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field cfhBbuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      12: aload_0
      13: getfield      #35                 // Field cfhBbuf:Ljava/nio/ByteBuffer;
      16: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      19: iconst_0
      20: istore_2
      21: new           #63                 // class org/apache/commons/compress/archivers/zip/ZipFile$Entry
      24: dup
      25: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry."<init>":()V
      28: astore_3
      29: aload_0
      30: getfield      #30                 // Field cfhBuf:[B
      33: iload_2
      34: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
      37: istore        4
      39: iinc          2, 2
      42: aload_3
      43: iload         4
      45: invokevirtual #137                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setVersionMadeBy:(I)V
      48: aload_3
      49: iload         4
      51: bipush        8
      53: ishr
      54: bipush        15
      56: iand
      57: invokevirtual #138                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setPlatform:(I)V
      60: aload_3
      61: aload_0
      62: getfield      #30                 // Field cfhBuf:[B
      65: iload_2
      66: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
      69: invokevirtual #139                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setVersionRequired:(I)V
      72: iinc          2, 2
      75: aload_0
      76: getfield      #30                 // Field cfhBuf:[B
      79: iload_2
      80: invokestatic  #140                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.parse:([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
      83: astore        5
      85: aload         5
      87: invokevirtual #141                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.usesUTF8ForNames:()Z
      90: istore        6
      92: iload         6
      94: ifeq          103
      97: getstatic     #142                // Field org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     100: goto          107
     103: aload_0
     104: getfield      #42                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     107: astore        7
     109: iload         6
     111: ifeq          121
     114: aload_3
     115: getstatic     #143                // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME_WITH_EFS_FLAG:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;
     118: invokevirtual #144                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setNameSource:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V
     121: aload_3
     122: aload         5
     124: invokevirtual #145                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V
     127: aload_3
     128: aload_0
     129: getfield      #30                 // Field cfhBuf:[B
     132: iload_2
     133: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     136: invokevirtual #146                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setRawFlag:(I)V
     139: iinc          2, 2
     142: aload_3
     143: aload_0
     144: getfield      #30                 // Field cfhBuf:[B
     147: iload_2
     148: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     151: invokevirtual #147                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setMethod:(I)V
     154: iinc          2, 2
     157: aload_0
     158: getfield      #30                 // Field cfhBuf:[B
     161: iload_2
     162: invokestatic  #148                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
     165: invokestatic  #149                // Method org/apache/commons/compress/archivers/zip/ZipUtil.dosToJavaTime:(J)J
     168: lstore        8
     170: aload_3
     171: lload         8
     173: invokevirtual #150                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setTime:(J)V
     176: iinc          2, 4
     179: aload_3
     180: aload_0
     181: getfield      #30                 // Field cfhBuf:[B
     184: iload_2
     185: invokestatic  #148                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
     188: invokevirtual #151                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setCrc:(J)V
     191: iinc          2, 4
     194: aload_3
     195: aload_0
     196: getfield      #30                 // Field cfhBuf:[B
     199: iload_2
     200: invokestatic  #148                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
     203: invokevirtual #152                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setCompressedSize:(J)V
     206: iinc          2, 4
     209: aload_3
     210: aload_0
     211: getfield      #30                 // Field cfhBuf:[B
     214: iload_2
     215: invokestatic  #148                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
     218: invokevirtual #153                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setSize:(J)V
     221: iinc          2, 4
     224: aload_0
     225: getfield      #30                 // Field cfhBuf:[B
     228: iload_2
     229: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     232: istore        10
     234: iinc          2, 2
     237: aload_0
     238: getfield      #30                 // Field cfhBuf:[B
     241: iload_2
     242: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     245: istore        11
     247: iinc          2, 2
     250: aload_0
     251: getfield      #30                 // Field cfhBuf:[B
     254: iload_2
     255: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     258: istore        12
     260: iinc          2, 2
     263: aload_0
     264: getfield      #30                 // Field cfhBuf:[B
     267: iload_2
     268: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     271: istore        13
     273: iinc          2, 2
     276: aload_3
     277: aload_0
     278: getfield      #30                 // Field cfhBuf:[B
     281: iload_2
     282: invokestatic  #136                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
     285: invokevirtual #154                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setInternalAttributes:(I)V
     288: iinc          2, 2
     291: aload_3
     292: aload_0
     293: getfield      #30                 // Field cfhBuf:[B
     296: iload_2
     297: invokestatic  #148                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
     300: invokevirtual #155                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setExternalAttributes:(J)V
     303: iinc          2, 4
     306: iload         10
     308: newarray       byte
     310: astore        14
     312: aload_0
     313: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     316: aload         14
     318: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     321: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
     324: aload_3
     325: aload         7
     327: aload         14
     329: invokeinterface #111,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     334: aload         14
     336: invokevirtual #156                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setName:(Ljava/lang/String;[B)V
     339: aload_3
     340: aload_0
     341: getfield      #30                 // Field cfhBuf:[B
     344: iload_2
     345: invokestatic  #148                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J
     348: invokevirtual #157                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setLocalHeaderOffset:(J)V
     351: aload_0
     352: getfield      #23                 // Field entries:Ljava/util/List;
     355: aload_3
     356: invokeinterface #158,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     361: pop
     362: iload         11
     364: newarray       byte
     366: astore        15
     368: aload_0
     369: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     372: aload         15
     374: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     377: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
     380: aload_3
     381: aload         15
     383: invokevirtual #159                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setCentralDirectoryExtra:([B)V
     386: aload_0
     387: aload_3
     388: iload         13
     390: invokespecial #160                // Method setSizesAndOffsetFromZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;I)V
     393: iload         12
     395: newarray       byte
     397: astore        16
     399: aload_0
     400: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     403: aload         16
     405: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     408: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
     411: aload_3
     412: aload         7
     414: aload         16
     416: invokeinterface #111,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     421: invokevirtual #161                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setComment:(Ljava/lang/String;)V
     424: iload         6
     426: ifne          456
     429: aload_0
     430: getfield      #43                 // Field useUnicodeExtraFields:Z
     433: ifeq          456
     436: aload_1
     437: aload_3
     438: new           #162                // class org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment
     441: dup
     442: aload         14
     444: aload         16
     446: aconst_null
     447: invokespecial #163                // Method org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment."<init>":([B[BLorg/apache/commons/compress/archivers/zip/ZipFile$1;)V
     450: invokeinterface #164,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     455: pop
     456: aload_3
     457: iconst_1
     458: invokevirtual #165                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setStreamContiguous:(Z)V
     461: return

  private void setSizesAndOffsetFromZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #166                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #167                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
       7: checkcast     #168                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      10: astore_3
      11: aload_3
      12: ifnull        184
      15: aload_1
      16: invokevirtual #169                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      19: ldc2_w        #170                // long 4294967295l
      22: lcmp
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore        4
      33: aload_1
      34: invokevirtual #68                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      37: ldc2_w        #170                // long 4294967295l
      40: lcmp
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: istore        5
      51: aload_1
      52: invokevirtual #172                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalHeaderOffset:()J
      55: ldc2_w        #170                // long 4294967295l
      58: lcmp
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: istore        6
      69: aload_3
      70: iload         4
      72: iload         5
      74: iload         6
      76: iload_2
      77: ldc           #173                // int 65535
      79: if_icmpne     86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: invokevirtual #174                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.reparseCentralDirectoryData:(ZZZZ)V
      90: iload         4
      92: ifeq          109
      95: aload_1
      96: aload_3
      97: invokevirtual #175                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.getSize:()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     100: invokevirtual #176                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J
     103: invokevirtual #177                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V
     106: goto          129
     109: iload         5
     111: ifeq          129
     114: aload_3
     115: new           #178                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     118: dup
     119: aload_1
     120: invokevirtual #169                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     123: invokespecial #179                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     126: invokevirtual #180                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     129: iload         5
     131: ifeq          148
     134: aload_1
     135: aload_3
     136: invokevirtual #181                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.getCompressedSize:()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     139: invokevirtual #176                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J
     142: invokevirtual #182                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
     145: goto          168
     148: iload         4
     150: ifeq          168
     153: aload_3
     154: new           #178                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     157: dup
     158: aload_1
     159: invokevirtual #68                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     162: invokespecial #179                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     165: invokevirtual #183                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     168: iload         6
     170: ifeq          184
     173: aload_1
     174: aload_3
     175: invokevirtual #184                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.getRelativeHeaderOffset:()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     178: invokevirtual #176                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J
     181: invokevirtual #185                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setLocalHeaderOffset:(J)V
     184: return

  private void positionAtCentralDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #186                // Method positionAtEndOfCentralDirectoryRecord:()V
       4: iconst_0
       5: istore_1
       6: aload_0
       7: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      10: invokeinterface #187,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      15: ldc2_w        #188                // long 20l
      18: lcmp
      19: ifle          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore_2
      28: iload_2
      29: ifeq          85
      32: aload_0
      33: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      36: aload_0
      37: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      40: invokeinterface #187,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      45: ldc2_w        #188                // long 20l
      48: lsub
      49: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      54: pop
      55: aload_0
      56: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      59: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      62: pop
      63: aload_0
      64: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      67: aload_0
      68: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      71: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      74: getstatic     #191                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.ZIP64_EOCD_LOC_SIG:[B
      77: aload_0
      78: getfield      #29                 // Field wordBuf:[B
      81: invokestatic  #192                // Method java/util/Arrays.equals:([B[B)Z
      84: istore_1
      85: iload_1
      86: ifne          106
      89: iload_2
      90: ifeq          99
      93: aload_0
      94: bipush        16
      96: invokespecial #193                // Method skipBytes:(I)V
      99: aload_0
     100: invokespecial #194                // Method positionAtCentralDirectory32:()V
     103: goto          110
     106: aload_0
     107: invokespecial #195                // Method positionAtCentralDirectory64:()V
     110: return

  private void positionAtCentralDirectory64() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #193                // Method skipBytes:(I)V
       5: aload_0
       6: getfield      #33                 // Field dwordBbuf:Ljava/nio/ByteBuffer;
       9: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      12: pop
      13: aload_0
      14: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      17: aload_0
      18: getfield      #33                 // Field dwordBbuf:Ljava/nio/ByteBuffer;
      21: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      24: aload_0
      25: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      28: aload_0
      29: getfield      #28                 // Field dwordBuf:[B
      32: invokestatic  #196                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:([B)J
      35: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      40: pop
      41: aload_0
      42: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      45: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      48: pop
      49: aload_0
      50: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      53: aload_0
      54: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      57: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      60: aload_0
      61: getfield      #29                 // Field wordBuf:[B
      64: getstatic     #197                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.ZIP64_EOCD_SIG:[B
      67: invokestatic  #192                // Method java/util/Arrays.equals:([B[B)Z
      70: ifne          83
      73: new           #198                // class java/util/zip/ZipException
      76: dup
      77: ldc           #199                // String Archive\'s ZIP64 end of central directory locator is corrupt.
      79: invokespecial #200                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_0
      84: bipush        44
      86: invokespecial #193                // Method skipBytes:(I)V
      89: aload_0
      90: getfield      #33                 // Field dwordBbuf:Ljava/nio/ByteBuffer;
      93: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      96: pop
      97: aload_0
      98: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     101: aload_0
     102: getfield      #33                 // Field dwordBbuf:Ljava/nio/ByteBuffer;
     105: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
     108: aload_0
     109: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     112: aload_0
     113: getfield      #28                 // Field dwordBuf:[B
     116: invokestatic  #196                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:([B)J
     119: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     124: pop
     125: return

  private void positionAtCentralDirectory32() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #193                // Method skipBytes:(I)V
       6: aload_0
       7: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      10: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      13: pop
      14: aload_0
      15: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      18: aload_0
      19: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      22: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      25: aload_0
      26: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      29: aload_0
      30: getfield      #29                 // Field wordBuf:[B
      33: invokestatic  #128                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([B)J
      36: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      41: pop
      42: return

  private void positionAtEndOfCentralDirectoryRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #201                // long 22l
       4: ldc2_w        #203                // long 65557l
       7: getstatic     #205                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.EOCD_SIG:[B
      10: invokespecial #206                // Method tryToLocateSignature:(JJ[B)Z
      13: istore_1
      14: iload_1
      15: ifne          28
      18: new           #198                // class java/util/zip/ZipException
      21: dup
      22: ldc           #207                // String Archive is not a ZIP archive
      24: invokespecial #200                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  private boolean tryToLocateSignature(long, long, byte[]) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        6
       3: aload_0
       4: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       7: invokeinterface #208,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
      12: lload_1
      13: lsub
      14: lstore        7
      16: lconst_0
      17: aload_0
      18: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      21: invokeinterface #208,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
      26: lload_3
      27: lsub
      28: invokestatic  #209                // Method java/lang/Math.max:(JJ)J
      31: lstore        9
      33: lload         7
      35: lconst_0
      36: lcmp
      37: iflt          182
      40: lload         7
      42: lload         9
      44: lcmp
      45: iflt          182
      48: aload_0
      49: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      52: lload         7
      54: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      59: pop
      60: aload_0
      61: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      64: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      67: pop
      68: aload_0
      69: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      72: aload_0
      73: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      76: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      79: aload_0
      80: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      83: invokevirtual #210                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      86: pop
      87: goto          95
      90: astore        11
      92: goto          182
      95: aload_0
      96: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      99: invokevirtual #212                // Method java/nio/ByteBuffer.get:()B
     102: istore        11
     104: iload         11
     106: aload         5
     108: iconst_0
     109: baload
     110: if_icmpne     173
     113: aload_0
     114: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
     117: invokevirtual #212                // Method java/nio/ByteBuffer.get:()B
     120: istore        11
     122: iload         11
     124: aload         5
     126: iconst_1
     127: baload
     128: if_icmpne     173
     131: aload_0
     132: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
     135: invokevirtual #212                // Method java/nio/ByteBuffer.get:()B
     138: istore        11
     140: iload         11
     142: aload         5
     144: iconst_2
     145: baload
     146: if_icmpne     173
     149: aload_0
     150: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
     153: invokevirtual #212                // Method java/nio/ByteBuffer.get:()B
     156: istore        11
     158: iload         11
     160: aload         5
     162: iconst_3
     163: baload
     164: if_icmpne     173
     167: iconst_1
     168: istore        6
     170: goto          182
     173: lload         7
     175: lconst_1
     176: lsub
     177: lstore        7
     179: goto          40
     182: iload         6
     184: ifeq          199
     187: aload_0
     188: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
     191: lload         7
     193: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     198: pop
     199: iload         6
     201: ireturn
    Exception table:
       from    to  target type
          60    87    90   Class java/io/EOFException

  private void skipBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #187,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
       9: lstore_2
      10: lload_2
      11: iload_1
      12: i2l
      13: ladd
      14: lstore        4
      16: lload         4
      18: aload_0
      19: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      22: invokeinterface #208,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
      27: lcmp
      28: ifle          39
      31: new           #211                // class java/io/EOFException
      34: dup
      35: invokespecial #213                // Method java/io/EOFException."<init>":()V
      38: athrow
      39: aload_0
      40: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      43: lload         4
      45: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      50: pop
      51: return

  private void resolveLocalFileHeaderData(java.util.Map<org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field entries:Ljava/util/List;
       4: invokeinterface #214,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          128
      19: aload_2
      20: invokeinterface #216,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #51                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      28: astore_3
      29: aload_3
      30: checkcast     #63                 // class org/apache/commons/compress/archivers/zip/ZipFile$Entry
      33: astore        4
      35: aload_0
      36: aload         4
      38: invokespecial #217                // Method setDataOffset:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)[I
      41: astore        5
      43: aload         5
      45: iconst_0
      46: iaload
      47: istore        6
      49: aload         5
      51: iconst_1
      52: iaload
      53: istore        7
      55: aload_0
      56: iload         6
      58: invokespecial #193                // Method skipBytes:(I)V
      61: iload         7
      63: newarray       byte
      65: astore        8
      67: aload_0
      68: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      71: aload         8
      73: invokestatic  #32                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      76: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      79: aload         4
      81: aload         8
      83: invokevirtual #218                // Method org/apache/commons/compress/archivers/zip/ZipFile$Entry.setExtra:([B)V
      86: aload_1
      87: aload         4
      89: invokeinterface #60,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      94: ifeq          125
      97: aload_1
      98: aload         4
     100: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #162                // class org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment
     108: astore        9
     110: aload         4
     112: aload         9
     114: invokestatic  #219                // Method org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment.access$100:(Lorg/apache/commons/compress/archivers/zip/ZipFile$NameAndComment;)[B
     117: aload         9
     119: invokestatic  #220                // Method org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipFile$NameAndComment;)[B
     122: invokestatic  #221                // Method org/apache/commons/compress/archivers/zip/ZipUtil.setNameAndCommentFromExtraFields:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;[B[B)V
     125: goto          10
     128: return

  private void fillNameMap();
    Code:
       0: aload_0
       1: getfield      #23                 // Field entries:Ljava/util/List;
       4: invokeinterface #214,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          85
      19: aload_1
      20: invokeinterface #216,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #51                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      28: astore_2
      29: aload_2
      30: invokevirtual #222                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
      33: astore_3
      34: aload_0
      35: getfield      #26                 // Field nameMap:Ljava/util/Map;
      38: aload_3
      39: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #21                 // class java/util/LinkedList
      47: astore        4
      49: aload         4
      51: ifnonnull     76
      54: new           #21                 // class java/util/LinkedList
      57: dup
      58: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      61: astore        4
      63: aload_0
      64: getfield      #26                 // Field nameMap:Ljava/util/Map;
      67: aload_3
      68: aload         4
      70: invokeinterface #164,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload         4
      78: aload_2
      79: invokevirtual #223                // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      82: goto          10
      85: return

  private int[] setDataOffset(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #172                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalHeaderOffset:()J
       4: lstore_2
       5: aload_0
       6: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       9: lload_2
      10: ldc2_w        #224                // long 26l
      13: ladd
      14: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      19: pop
      20: aload_0
      21: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      24: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      27: pop
      28: aload_0
      29: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      32: aload_0
      33: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      36: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      39: aload_0
      40: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      43: invokevirtual #210                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      46: pop
      47: aload_0
      48: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      51: aload_0
      52: getfield      #31                 // Field shortBuf:[B
      55: invokevirtual #226                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      58: pop
      59: aload_0
      60: getfield      #31                 // Field shortBuf:[B
      63: invokestatic  #227                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([B)I
      66: istore        4
      68: aload_0
      69: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      72: aload_0
      73: getfield      #31                 // Field shortBuf:[B
      76: invokevirtual #226                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      79: pop
      80: aload_0
      81: getfield      #31                 // Field shortBuf:[B
      84: invokestatic  #227                // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([B)I
      87: istore        5
      89: aload_1
      90: lload_2
      91: ldc2_w        #224                // long 26l
      94: ladd
      95: ldc2_w        #228                // long 2l
      98: ladd
      99: ldc2_w        #228                // long 2l
     102: ladd
     103: iload         4
     105: i2l
     106: ladd
     107: iload         5
     109: i2l
     110: ladd
     111: invokevirtual #230                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setDataOffset:(J)V
     114: iconst_2
     115: newarray       int
     117: dup
     118: iconst_0
     119: iload         4
     121: iastore
     122: dup
     123: iconst_1
     124: iload         5
     126: iastore
     127: areturn

  private long getDataOffset(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J
       4: lstore_2
       5: lload_2
       6: ldc2_w        #66                 // long -1l
       9: lcmp
      10: ifne          24
      13: aload_0
      14: aload_1
      15: invokespecial #217                // Method setDataOffset:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)[I
      18: pop
      19: aload_1
      20: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDataOffset:()J
      23: lreturn
      24: lload_2
      25: lreturn

  private boolean startsWithLocalFileHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: lconst_0
       5: invokeinterface #190,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      10: pop
      11: aload_0
      12: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      15: invokevirtual #126                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
      23: aload_0
      24: getfield      #34                 // Field wordBbuf:Ljava/nio/ByteBuffer;
      27: invokestatic  #127                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
      30: aload_0
      31: getfield      #29                 // Field wordBuf:[B
      34: getstatic     #231                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.LFH_SIG:[B
      37: invokestatic  #192                // Method java/util/Arrays.equals:([B[B)Z
      40: ireturn

  private org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream createBoundedInputStream(long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: instanceof    #232                // class java/nio/channels/FileChannel
       7: ifeq          23
      10: new           #233                // class org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream
      13: dup
      14: aload_0
      15: lload_1
      16: lload_3
      17: invokespecial #234                // Method org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V
      20: goto          33
      23: new           #235                // class org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream
      26: dup
      27: aload_0
      28: lload_1
      29: lload_3
      30: invokespecial #236                // Method org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V
      33: areturn

  static java.nio.channels.SeekableByteChannel access$300(org.apache.commons.compress.archivers.zip.ZipFile);
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: areturn

  static {};
    Code:
       0: iconst_1
       1: newarray       byte
       3: putstatic     #98                 // Field ONE_ZERO_BYTE:[B
       6: getstatic     #237                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.CFH_SIG:[B
       9: invokestatic  #128                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([B)J
      12: putstatic     #129                // Field CFH_SIG:J
      15: return
}
