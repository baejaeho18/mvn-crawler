Compiled from "X0015_CertificateIdForFile.java"
public class org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile extends org.apache.commons.compress.archivers.zip.PKWareExtraHeader {
  private int rcount;

  private org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm hashAlg;

  public org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/compress/archivers/zip/ZipShort
       4: dup
       5: bipush        21
       7: invokespecial #2                  // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      10: invokespecial #3                  // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
      13: return

  public int getRecordCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rcount:I
       4: ireturn

  public org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm getHashAlgorithm();
    Code:
       0: aload_0
       1: getfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
       4: areturn

  public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: iconst_4
       2: iload_3
       3: invokevirtual #6                  // Method assertMinimalLength:(II)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokespecial #7                  // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
      19: putfield      #4                  // Field rcount:I
      22: aload_0
      23: aload_1
      24: iload_2
      25: iconst_2
      26: iadd
      27: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
      30: invokestatic  #9                  // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
      33: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
      36: return
}
