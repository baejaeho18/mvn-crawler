Compiled from "SeekableInMemoryByteChannel.java"
public class org.apache.commons.compress.utils.SeekableInMemoryByteChannel implements java.nio.channels.SeekableByteChannel {
  private static final int NAIVE_RESIZE_LIMIT;

  private byte[] data;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private int position;

  private int size;

  public org.apache.commons.compress.utils.SeekableInMemoryByteChannel(byte[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #5                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field data:[B
      20: aload_0
      21: aload_1
      22: arraylength
      23: putfield      #7                  // Field size:I
      26: return

  public org.apache.commons.compress.utils.SeekableInMemoryByteChannel();
    Code:
       0: aload_0
       1: iconst_0
       2: newarray       byte
       4: invokespecial #8                  // Method "<init>":([B)V
       7: return

  public org.apache.commons.compress.utils.SeekableInMemoryByteChannel(int);
    Code:
       0: aload_0
       1: iload_1
       2: newarray       byte
       4: invokespecial #8                  // Method "<init>":([B)V
       7: return

  public long position();
    Code:
       0: aload_0
       1: getfield      #9                  // Field position:I
       4: i2l
       5: lreturn

  public java.nio.channels.SeekableByteChannel position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method ensureOpen:()V
       4: lload_1
       5: lconst_0
       6: lcmp
       7: iflt          18
      10: lload_1
      11: ldc2_w        #11                 // long 2147483647l
      14: lcmp
      15: ifle          28
      18: new           #13                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #14                 // String Position has to be in range 0.. 2147483647
      24: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: lload_1
      30: l2i
      31: putfield      #9                  // Field position:I
      34: aload_0
      35: areturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:I
       4: i2l
       5: lreturn

  public java.nio.channels.SeekableByteChannel truncate(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:I
       4: i2l
       5: lload_1
       6: lcmp
       7: ifle          16
      10: aload_0
      11: lload_1
      12: l2i
      13: putfield      #7                  // Field size:I
      16: aload_0
      17: invokespecial #16                 // Method repositionIfNecessary:()V
      20: aload_0
      21: areturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method ensureOpen:()V
       4: aload_0
       5: invokespecial #16                 // Method repositionIfNecessary:()V
       8: aload_1
       9: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      12: istore_2
      13: aload_0
      14: getfield      #7                  // Field size:I
      17: aload_0
      18: getfield      #9                  // Field position:I
      21: isub
      22: istore_3
      23: iload_3
      24: ifgt          29
      27: iconst_m1
      28: ireturn
      29: iload_2
      30: iload_3
      31: if_icmple     36
      34: iload_3
      35: istore_2
      36: aload_1
      37: aload_0
      38: getfield      #6                  // Field data:[B
      41: aload_0
      42: getfield      #9                  // Field position:I
      45: iload_2
      46: invokevirtual #18                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      49: pop
      50: aload_0
      51: dup
      52: getfield      #9                  // Field position:I
      55: iload_2
      56: iadd
      57: putfield      #9                  // Field position:I
      60: iload_2
      61: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method ensureOpen:()V
       4: aload_1
       5: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
       8: istore_2
       9: aload_0
      10: getfield      #7                  // Field size:I
      13: aload_0
      14: getfield      #9                  // Field position:I
      17: isub
      18: istore_3
      19: iload_2
      20: iload_3
      21: if_icmple     60
      24: aload_0
      25: getfield      #9                  // Field position:I
      28: iload_2
      29: iadd
      30: istore        4
      32: iload         4
      34: ifge          54
      37: aload_0
      38: ldc           #21                 // int 2147483647
      40: invokespecial #22                 // Method resize:(I)V
      43: ldc           #21                 // int 2147483647
      45: aload_0
      46: getfield      #9                  // Field position:I
      49: isub
      50: istore_2
      51: goto          60
      54: aload_0
      55: iload         4
      57: invokespecial #22                 // Method resize:(I)V
      60: aload_1
      61: aload_0
      62: getfield      #6                  // Field data:[B
      65: aload_0
      66: getfield      #9                  // Field position:I
      69: iload_2
      70: invokevirtual #23                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      73: pop
      74: aload_0
      75: dup
      76: getfield      #9                  // Field position:I
      79: iload_2
      80: iadd
      81: putfield      #9                  // Field position:I
      84: aload_0
      85: getfield      #7                  // Field size:I
      88: aload_0
      89: getfield      #9                  // Field position:I
      92: if_icmpge     103
      95: aload_0
      96: aload_0
      97: getfield      #9                  // Field position:I
     100: putfield      #7                  // Field size:I
     103: iload_2
     104: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[B
       4: areturn

  private void resize(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[B
       4: arraylength
       5: istore_2
       6: iload_2
       7: ifgt          12
      10: iconst_1
      11: istore_2
      12: iload_1
      13: ldc           #25                 // int 1073741823
      15: if_icmpge     30
      18: iload_2
      19: iload_1
      20: if_icmpge     32
      23: iload_2
      24: iconst_1
      25: ishl
      26: istore_2
      27: goto          18
      30: iload_1
      31: istore_2
      32: aload_0
      33: aload_0
      34: getfield      #6                  // Field data:[B
      37: iload_2
      38: invokestatic  #26                 // Method java/util/Arrays.copyOf:([BI)[B
      41: putfield      #6                  // Field data:[B
      44: return

  private void ensureOpen() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method isOpen:()Z
       4: ifne          15
       7: new           #28                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #29                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: return

  private void repositionIfNecessary();
    Code:
       0: aload_0
       1: getfield      #9                  // Field position:I
       4: aload_0
       5: getfield      #7                  // Field size:I
       8: if_icmple     19
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field size:I
      16: putfield      #9                  // Field position:I
      19: return
}
