Compiled from "BlockLZ4CompressorInputStream.java"
public class org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream extends org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream {
  static final int WINDOW_SIZE;

  static final int SIZE_BITS;

  static final int BACK_REFERENCE_SIZE_MASK;

  static final int LITERAL_SIZE_MASK;

  private int nextBackReferenceSize;

  private org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State state;

  public org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // int 65536
       4: invokespecial #3                  // Method org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream."<init>":(Ljava/io/InputStream;I)V
       7: aload_0
       8: getstatic     #4                  // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      11: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      14: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #6                  // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I
       3: aload_0
       4: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
       7: invokevirtual #7                  // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 5
                     1: 44
                     2: 46
                     3: 50
                     4: 91
                     5: 107
               default: 148
          }
      44: iconst_m1
      45: ireturn
      46: aload_0
      47: invokespecial #8                  // Method readSizes:()V
      50: aload_0
      51: aload_1
      52: iload_2
      53: iload_3
      54: invokevirtual #9                  // Method readLiteral:([BII)I
      57: istore        4
      59: aload_0
      60: invokevirtual #10                 // Method hasMoreDataInBlock:()Z
      63: ifne          73
      66: aload_0
      67: getstatic     #11                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      70: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      73: iload         4
      75: ifle          83
      78: iload         4
      80: goto          90
      83: aload_0
      84: aload_1
      85: iload_2
      86: iload_3
      87: invokevirtual #12                 // Method read:([BII)I
      90: ireturn
      91: aload_0
      92: invokespecial #13                 // Method initializeBackReference:()Z
      95: ifne          107
      98: aload_0
      99: getstatic     #14                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
     102: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
     105: iconst_m1
     106: ireturn
     107: aload_0
     108: aload_1
     109: iload_2
     110: iload_3
     111: invokevirtual #15                 // Method readBackReference:([BII)I
     114: istore        5
     116: aload_0
     117: invokevirtual #10                 // Method hasMoreDataInBlock:()Z
     120: ifne          130
     123: aload_0
     124: getstatic     #4                  // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
     127: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
     130: iload         5
     132: ifle          140
     135: iload         5
     137: goto          147
     140: aload_0
     141: aload_1
     142: iload_2
     143: iload_3
     144: invokevirtual #12                 // Method read:([BII)I
     147: ireturn
     148: new           #16                 // class java/io/IOException
     151: dup
     152: new           #17                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #19                 // String Unknown stream state
     161: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_0
     165: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
     168: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     171: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     177: athrow

  private void readSizes() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readOneByte:()I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     20
      10: new           #16                 // class java/io/IOException
      13: dup
      14: ldc           #25                 // String Premature end of stream while looking for next block
      16: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: iload_1
      22: bipush        15
      24: iand
      25: putfield      #26                 // Field nextBackReferenceSize:I
      28: iload_1
      29: sipush        240
      32: iand
      33: iconst_4
      34: ishr
      35: i2l
      36: lstore_2
      37: lload_2
      38: ldc2_w        #27                 // long 15l
      41: lcmp
      42: ifne          52
      45: lload_2
      46: aload_0
      47: invokespecial #29                 // Method readSizeBytes:()J
      50: ladd
      51: lstore_2
      52: lload_2
      53: lconst_0
      54: lcmp
      55: ifge          68
      58: new           #16                 // class java/io/IOException
      61: dup
      62: ldc           #30                 // String Illegal block with a negative literal size found
      64: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: lload_2
      70: invokevirtual #31                 // Method startLiteral:(J)V
      73: aload_0
      74: getstatic     #32                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      77: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      80: return

  private long readSizeBytes() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: invokevirtual #24                 // Method readOneByte:()I
       6: istore_3
       7: iload_3
       8: iconst_m1
       9: if_icmpne     22
      12: new           #16                 // class java/io/IOException
      15: dup
      16: ldc           #33                 // String Premature end of stream while parsing length
      18: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: lload_1
      23: iload_3
      24: i2l
      25: ladd
      26: lstore_1
      27: iload_3
      28: sipush        255
      31: if_icmpeq     2
      34: lload_1
      35: lreturn

  private boolean initializeBackReference() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #34                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;
       6: iconst_2
       7: invokestatic  #35                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J
      10: l2i
      11: istore_1
      12: goto          27
      15: astore_2
      16: aload_0
      17: getfield      #26                 // Field nextBackReferenceSize:I
      20: ifne          25
      23: iconst_0
      24: ireturn
      25: aload_2
      26: athrow
      27: aload_0
      28: getfield      #26                 // Field nextBackReferenceSize:I
      31: i2l
      32: lstore_2
      33: aload_0
      34: getfield      #26                 // Field nextBackReferenceSize:I
      37: bipush        15
      39: if_icmpne     49
      42: lload_2
      43: aload_0
      44: invokespecial #29                 // Method readSizeBytes:()J
      47: ladd
      48: lstore_2
      49: lload_2
      50: lconst_0
      51: lcmp
      52: ifge          65
      55: new           #16                 // class java/io/IOException
      58: dup
      59: ldc           #36                 // String Illegal block with a negative match length found
      61: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: iload_1
      67: lload_2
      68: ldc2_w        #37                 // long 4l
      71: ladd
      72: invokevirtual #39                 // Method startBackReference:(IJ)V
      75: goto          92
      78: astore        4
      80: new           #16                 // class java/io/IOException
      83: dup
      84: ldc           #41                 // String Illegal block with bad offset found
      86: aload         4
      88: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      91: athrow
      92: aload_0
      93: getstatic     #43                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      96: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;
      99: iconst_1
     100: ireturn
    Exception table:
       from    to  target type
           2    12    15   Class java/io/IOException
          65    75    78   Class java/lang/IllegalArgumentException
}
