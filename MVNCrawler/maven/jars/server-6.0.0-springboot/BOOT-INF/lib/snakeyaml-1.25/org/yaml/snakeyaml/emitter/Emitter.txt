Compiled from "Emitter.java"
public final class org.yaml.snakeyaml.emitter.Emitter implements org.yaml.snakeyaml.emitter.Emitable {
  private static final java.util.Map<java.lang.Character, java.lang.String> ESCAPE_REPLACEMENTS;

  public static final int MIN_INDENT;

  public static final int MAX_INDENT;

  private static final char[] SPACE;

  private static final java.util.Map<java.lang.String, java.lang.String> DEFAULT_TAG_PREFIXES;

  private final java.io.Writer stream;

  private final org.yaml.snakeyaml.util.ArrayStack<org.yaml.snakeyaml.emitter.EmitterState> states;

  private org.yaml.snakeyaml.emitter.EmitterState state;

  private final java.util.Queue<org.yaml.snakeyaml.events.Event> events;

  private org.yaml.snakeyaml.events.Event event;

  private final org.yaml.snakeyaml.util.ArrayStack<java.lang.Integer> indents;

  private java.lang.Integer indent;

  private int flowLevel;

  private boolean rootContext;

  private boolean mappingContext;

  private boolean simpleKeyContext;

  private int column;

  private boolean whitespace;

  private boolean indention;

  private boolean openEnded;

  private java.lang.Boolean canonical;

  private java.lang.Boolean prettyFlow;

  private boolean allowUnicode;

  private int bestIndent;

  private int indicatorIndent;

  private int bestWidth;

  private char[] bestLineBreak;

  private boolean splitLines;

  private int maxSimpleKeyLength;

  private java.util.Map<java.lang.String, java.lang.String> tagPrefixes;

  private java.lang.String preparedAnchor;

  private java.lang.String preparedTag;

  private org.yaml.snakeyaml.emitter.ScalarAnalysis analysis;

  private org.yaml.snakeyaml.DumperOptions$ScalarStyle style;

  private static final java.util.regex.Pattern HANDLE_FORMAT;

  private static final java.util.regex.Pattern ANCHOR_FORMAT;

  public org.yaml.snakeyaml.emitter.Emitter(java.io.Writer, org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field stream:Ljava/io/Writer;
       9: aload_0
      10: new           #25                 // class org/yaml/snakeyaml/util/ArrayStack
      13: dup
      14: bipush        100
      16: invokespecial #26                 // Method org/yaml/snakeyaml/util/ArrayStack."<init>":(I)V
      19: putfield      #12                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
      22: aload_0
      23: new           #27                 // class org/yaml/snakeyaml/emitter/Emitter$ExpectStreamStart
      26: dup
      27: aload_0
      28: aconst_null
      29: invokespecial #28                 // Method org/yaml/snakeyaml/emitter/Emitter$ExpectStreamStart."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      32: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      35: aload_0
      36: new           #29                 // class java/util/concurrent/ArrayBlockingQueue
      39: dup
      40: bipush        100
      42: invokespecial #30                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      45: putfield      #31                 // Field events:Ljava/util/Queue;
      48: aload_0
      49: aconst_null
      50: putfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      53: aload_0
      54: new           #25                 // class org/yaml/snakeyaml/util/ArrayStack
      57: dup
      58: bipush        10
      60: invokespecial #26                 // Method org/yaml/snakeyaml/util/ArrayStack."<init>":(I)V
      63: putfield      #9                  // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
      66: aload_0
      67: aconst_null
      68: putfield      #10                 // Field indent:Ljava/lang/Integer;
      71: aload_0
      72: iconst_0
      73: putfield      #8                  // Field flowLevel:I
      76: aload_0
      77: iconst_0
      78: putfield      #32                 // Field mappingContext:Z
      81: aload_0
      82: iconst_0
      83: putfield      #33                 // Field simpleKeyContext:Z
      86: aload_0
      87: iconst_0
      88: putfield      #7                  // Field column:I
      91: aload_0
      92: iconst_1
      93: putfield      #34                 // Field whitespace:Z
      96: aload_0
      97: iconst_1
      98: putfield      #35                 // Field indention:Z
     101: aload_0
     102: iconst_0
     103: putfield      #20                 // Field openEnded:Z
     106: aload_0
     107: aload_2
     108: invokevirtual #36                 // Method org/yaml/snakeyaml/DumperOptions.isCanonical:()Z
     111: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     114: putfield      #14                 // Field canonical:Ljava/lang/Boolean;
     117: aload_0
     118: aload_2
     119: invokevirtual #38                 // Method org/yaml/snakeyaml/DumperOptions.isPrettyFlow:()Z
     122: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     125: putfield      #4                  // Field prettyFlow:Ljava/lang/Boolean;
     128: aload_0
     129: aload_2
     130: invokevirtual #39                 // Method org/yaml/snakeyaml/DumperOptions.isAllowUnicode:()Z
     133: putfield      #40                 // Field allowUnicode:Z
     136: aload_0
     137: iconst_2
     138: putfield      #41                 // Field bestIndent:I
     141: aload_2
     142: invokevirtual #42                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
     145: iconst_1
     146: if_icmple     166
     149: aload_2
     150: invokevirtual #42                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
     153: bipush        10
     155: if_icmpge     166
     158: aload_0
     159: aload_2
     160: invokevirtual #42                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
     163: putfield      #41                 // Field bestIndent:I
     166: aload_0
     167: aload_2
     168: invokevirtual #44                 // Method org/yaml/snakeyaml/DumperOptions.getIndicatorIndent:()I
     171: putfield      #2                  // Field indicatorIndent:I
     174: aload_0
     175: bipush        80
     177: putfield      #6                  // Field bestWidth:I
     180: aload_2
     181: invokevirtual #45                 // Method org/yaml/snakeyaml/DumperOptions.getWidth:()I
     184: aload_0
     185: getfield      #41                 // Field bestIndent:I
     188: iconst_2
     189: imul
     190: if_icmple     201
     193: aload_0
     194: aload_2
     195: invokevirtual #45                 // Method org/yaml/snakeyaml/DumperOptions.getWidth:()I
     198: putfield      #6                  // Field bestWidth:I
     201: aload_0
     202: aload_2
     203: invokevirtual #46                 // Method org/yaml/snakeyaml/DumperOptions.getLineBreak:()Lorg/yaml/snakeyaml/DumperOptions$LineBreak;
     206: invokevirtual #47                 // Method org/yaml/snakeyaml/DumperOptions$LineBreak.getString:()Ljava/lang/String;
     209: invokevirtual #48                 // Method java/lang/String.toCharArray:()[C
     212: putfield      #49                 // Field bestLineBreak:[C
     215: aload_0
     216: aload_2
     217: invokevirtual #50                 // Method org/yaml/snakeyaml/DumperOptions.getSplitLines:()Z
     220: putfield      #5                  // Field splitLines:Z
     223: aload_0
     224: aload_2
     225: invokevirtual #51                 // Method org/yaml/snakeyaml/DumperOptions.getMaxSimpleKeyLength:()I
     228: putfield      #52                 // Field maxSimpleKeyLength:I
     231: aload_0
     232: new           #53                 // class java/util/LinkedHashMap
     235: dup
     236: invokespecial #54                 // Method java/util/LinkedHashMap."<init>":()V
     239: putfield      #18                 // Field tagPrefixes:Ljava/util/Map;
     242: aload_0
     243: aconst_null
     244: putfield      #55                 // Field preparedAnchor:Ljava/lang/String;
     247: aload_0
     248: aconst_null
     249: putfield      #56                 // Field preparedTag:Ljava/lang/String;
     252: aload_0
     253: aconst_null
     254: putfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     257: aload_0
     258: aconst_null
     259: putfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     262: return

  public void emit(org.yaml.snakeyaml.events.Event) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field events:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #59,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokespecial #60                 // Method needMoreEvents:()Z
      15: ifne          51
      18: aload_0
      19: aload_0
      20: getfield      #31                 // Field events:Ljava/util/Queue;
      23: invokeinterface #61,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      28: checkcast     #62                 // class org/yaml/snakeyaml/events/Event
      31: putfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      34: aload_0
      35: getfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      38: invokeinterface #63,  1           // InterfaceMethod org/yaml/snakeyaml/emitter/EmitterState.expect:()V
      43: aload_0
      44: aconst_null
      45: putfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      48: goto          11
      51: return

  private boolean needMoreEvents();
    Code:
       0: aload_0
       1: getfield      #31                 // Field events:Ljava/util/Queue;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #31                 // Field events:Ljava/util/Queue;
      18: invokeinterface #65,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      23: checkcast     #62                 // class org/yaml/snakeyaml/events/Event
      26: astore_1
      27: aload_1
      28: instanceof    #66                 // class org/yaml/snakeyaml/events/DocumentStartEvent
      31: ifeq          40
      34: aload_0
      35: iconst_1
      36: invokespecial #67                 // Method needEvents:(I)Z
      39: ireturn
      40: aload_1
      41: instanceof    #68                 // class org/yaml/snakeyaml/events/SequenceStartEvent
      44: ifeq          53
      47: aload_0
      48: iconst_2
      49: invokespecial #67                 // Method needEvents:(I)Z
      52: ireturn
      53: aload_1
      54: instanceof    #69                 // class org/yaml/snakeyaml/events/MappingStartEvent
      57: ifeq          66
      60: aload_0
      61: iconst_3
      62: invokespecial #67                 // Method needEvents:(I)Z
      65: ireturn
      66: iconst_0
      67: ireturn

  private boolean needEvents(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #31                 // Field events:Ljava/util/Queue;
       6: invokeinterface #70,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      18: pop
      19: aload_3
      20: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          102
      28: aload_3
      29: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #62                 // class org/yaml/snakeyaml/events/Event
      37: astore        4
      39: aload         4
      41: instanceof    #66                 // class org/yaml/snakeyaml/events/DocumentStartEvent
      44: ifne          55
      47: aload         4
      49: instanceof    #73                 // class org/yaml/snakeyaml/events/CollectionStartEvent
      52: ifeq          61
      55: iinc          2, 1
      58: goto          93
      61: aload         4
      63: instanceof    #74                 // class org/yaml/snakeyaml/events/DocumentEndEvent
      66: ifne          77
      69: aload         4
      71: instanceof    #75                 // class org/yaml/snakeyaml/events/CollectionEndEvent
      74: ifeq          83
      77: iinc          2, -1
      80: goto          93
      83: aload         4
      85: instanceof    #76                 // class org/yaml/snakeyaml/events/StreamEndEvent
      88: ifeq          93
      91: iconst_m1
      92: istore_2
      93: iload_2
      94: ifge          99
      97: iconst_0
      98: ireturn
      99: goto          19
     102: aload_0
     103: getfield      #31                 // Field events:Ljava/util/Queue;
     106: invokeinterface #77,  1           // InterfaceMethod java/util/Queue.size:()I
     111: iload_1
     112: iconst_1
     113: iadd
     114: if_icmpge     121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: ireturn

  private void increaseIndent(boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
       4: aload_0
       5: getfield      #10                 // Field indent:Ljava/lang/Integer;
       8: invokevirtual #78                 // Method org/yaml/snakeyaml/util/ArrayStack.push:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #10                 // Field indent:Ljava/lang/Integer;
      15: ifnonnull     47
      18: iload_1
      19: ifeq          36
      22: aload_0
      23: aload_0
      24: getfield      #41                 // Field bestIndent:I
      27: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: putfield      #10                 // Field indent:Ljava/lang/Integer;
      33: goto          74
      36: aload_0
      37: iconst_0
      38: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: putfield      #10                 // Field indent:Ljava/lang/Integer;
      44: goto          74
      47: iload_2
      48: ifne          74
      51: aload_0
      52: astore_3
      53: aload_3
      54: aload_3
      55: getfield      #10                 // Field indent:Ljava/lang/Integer;
      58: invokevirtual #80                 // Method java/lang/Integer.intValue:()I
      61: aload_0
      62: getfield      #41                 // Field bestIndent:I
      65: iadd
      66: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: dup_x1
      70: putfield      #10                 // Field indent:Ljava/lang/Integer;
      73: pop
      74: return

  private void expectNode(boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field rootContext:Z
       5: aload_0
       6: iload_2
       7: putfield      #32                 // Field mappingContext:Z
      10: aload_0
      11: iload_3
      12: putfield      #33                 // Field simpleKeyContext:Z
      15: aload_0
      16: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      19: instanceof    #82                 // class org/yaml/snakeyaml/events/AliasEvent
      22: ifeq          32
      25: aload_0
      26: invokespecial #83                 // Method expectAlias:()V
      29: goto          221
      32: aload_0
      33: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      36: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      39: ifne          52
      42: aload_0
      43: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      46: instanceof    #73                 // class org/yaml/snakeyaml/events/CollectionStartEvent
      49: ifeq          191
      52: aload_0
      53: ldc           #85                 // String &
      55: invokespecial #86                 // Method processAnchor:(Ljava/lang/String;)V
      58: aload_0
      59: invokespecial #87                 // Method processTag:()V
      62: aload_0
      63: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      66: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      69: ifeq          79
      72: aload_0
      73: invokespecial #88                 // Method expectScalar:()V
      76: goto          221
      79: aload_0
      80: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      83: instanceof    #68                 // class org/yaml/snakeyaml/events/SequenceStartEvent
      86: ifeq          140
      89: aload_0
      90: getfield      #8                  // Field flowLevel:I
      93: ifne          126
      96: aload_0
      97: getfield      #14                 // Field canonical:Ljava/lang/Boolean;
     100: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
     103: ifne          126
     106: aload_0
     107: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     110: checkcast     #68                 // class org/yaml/snakeyaml/events/SequenceStartEvent
     113: invokevirtual #90                 // Method org/yaml/snakeyaml/events/SequenceStartEvent.isFlow:()Z
     116: ifne          126
     119: aload_0
     120: invokespecial #91                 // Method checkEmptySequence:()Z
     123: ifeq          133
     126: aload_0
     127: invokespecial #92                 // Method expectFlowSequence:()V
     130: goto          221
     133: aload_0
     134: invokespecial #93                 // Method expectBlockSequence:()V
     137: goto          221
     140: aload_0
     141: getfield      #8                  // Field flowLevel:I
     144: ifne          177
     147: aload_0
     148: getfield      #14                 // Field canonical:Ljava/lang/Boolean;
     151: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
     154: ifne          177
     157: aload_0
     158: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     161: checkcast     #69                 // class org/yaml/snakeyaml/events/MappingStartEvent
     164: invokevirtual #94                 // Method org/yaml/snakeyaml/events/MappingStartEvent.isFlow:()Z
     167: ifne          177
     170: aload_0
     171: invokespecial #95                 // Method checkEmptyMapping:()Z
     174: ifeq          184
     177: aload_0
     178: invokespecial #96                 // Method expectFlowMapping:()V
     181: goto          221
     184: aload_0
     185: invokespecial #97                 // Method expectBlockMapping:()V
     188: goto          221
     191: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
     194: dup
     195: new           #99                 // class java/lang/StringBuilder
     198: dup
     199: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     202: ldc           #101                // String expected NodeEvent, but got
     204: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: aload_0
     208: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     211: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     214: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     220: athrow
     221: return

  private void expectAlias() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #106                // class org/yaml/snakeyaml/events/NodeEvent
       7: invokevirtual #107                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      10: ifnonnull     23
      13: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      16: dup
      17: ldc           #108                // String anchor is not specified for alias
      19: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: ldc           #109                // String *
      26: invokespecial #86                 // Method processAnchor:(Ljava/lang/String;)V
      29: aload_0
      30: aload_0
      31: getfield      #12                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
      34: invokevirtual #110                // Method org/yaml/snakeyaml/util/ArrayStack.pop:()Ljava/lang/Object;
      37: checkcast     #111                // class org/yaml/snakeyaml/emitter/EmitterState
      40: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      43: return

  private void expectScalar() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_0
       3: invokespecial #112                // Method increaseIndent:(ZZ)V
       6: aload_0
       7: invokespecial #113                // Method processScalar:()V
      10: aload_0
      11: aload_0
      12: getfield      #9                  // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
      15: invokevirtual #110                // Method org/yaml/snakeyaml/util/ArrayStack.pop:()Ljava/lang/Object;
      18: checkcast     #114                // class java/lang/Integer
      21: putfield      #10                 // Field indent:Ljava/lang/Integer;
      24: aload_0
      25: aload_0
      26: getfield      #12                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
      29: invokevirtual #110                // Method org/yaml/snakeyaml/util/ArrayStack.pop:()Ljava/lang/Object;
      32: checkcast     #111                // class org/yaml/snakeyaml/emitter/EmitterState
      35: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      38: return

  private void expectFlowSequence() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #115                // String [
       3: iconst_1
       4: iconst_1
       5: iconst_0
       6: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: aload_0
      10: dup
      11: getfield      #8                  // Field flowLevel:I
      14: iconst_1
      15: iadd
      16: putfield      #8                  // Field flowLevel:I
      19: aload_0
      20: iconst_1
      21: iconst_0
      22: invokespecial #112                // Method increaseIndent:(ZZ)V
      25: aload_0
      26: getfield      #4                  // Field prettyFlow:Ljava/lang/Boolean;
      29: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
      32: ifeq          39
      35: aload_0
      36: invokevirtual #117                // Method writeIndent:()V
      39: aload_0
      40: new           #118                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowSequenceItem
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #119                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowSequenceItem."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      49: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      52: return

  private void expectFlowMapping() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #120                // String {
       3: iconst_1
       4: iconst_1
       5: iconst_0
       6: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: aload_0
      10: dup
      11: getfield      #8                  // Field flowLevel:I
      14: iconst_1
      15: iadd
      16: putfield      #8                  // Field flowLevel:I
      19: aload_0
      20: iconst_1
      21: iconst_0
      22: invokespecial #112                // Method increaseIndent:(ZZ)V
      25: aload_0
      26: getfield      #4                  // Field prettyFlow:Ljava/lang/Boolean;
      29: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
      32: ifeq          39
      35: aload_0
      36: invokevirtual #117                // Method writeIndent:()V
      39: aload_0
      40: new           #121                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowMappingKey
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #122                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowMappingKey."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      49: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      52: return

  private void expectBlockSequence() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field mappingContext:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #35                 // Field indention:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_1
      20: aload_0
      21: iconst_0
      22: iload_1
      23: invokespecial #112                // Method increaseIndent:(ZZ)V
      26: aload_0
      27: new           #123                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockSequenceItem
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #124                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockSequenceItem."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      36: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      39: return

  private void expectBlockMapping() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokespecial #112                // Method increaseIndent:(ZZ)V
       6: aload_0
       7: new           #125                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockMappingKey
      10: dup
      11: aload_0
      12: aconst_null
      13: invokespecial #126                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockMappingKey."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      16: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      19: return

  private boolean checkEmptySequence();
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #68                 // class org/yaml/snakeyaml/events/SequenceStartEvent
       7: ifeq          41
      10: aload_0
      11: getfield      #31                 // Field events:Ljava/util/Queue;
      14: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifne          41
      22: aload_0
      23: getfield      #31                 // Field events:Ljava/util/Queue;
      26: invokeinterface #65,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      31: instanceof    #127                // class org/yaml/snakeyaml/events/SequenceEndEvent
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean checkEmptyMapping();
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #69                 // class org/yaml/snakeyaml/events/MappingStartEvent
       7: ifeq          41
      10: aload_0
      11: getfield      #31                 // Field events:Ljava/util/Queue;
      14: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifne          41
      22: aload_0
      23: getfield      #31                 // Field events:Ljava/util/Queue;
      26: invokeinterface #65,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      31: instanceof    #128                // class org/yaml/snakeyaml/events/MappingEndEvent
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean checkEmptyDocument();
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #66                 // class org/yaml/snakeyaml/events/DocumentStartEvent
       7: ifeq          22
      10: aload_0
      11: getfield      #31                 // Field events:Ljava/util/Queue;
      14: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifeq          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #31                 // Field events:Ljava/util/Queue;
      28: invokeinterface #65,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      33: checkcast     #62                 // class org/yaml/snakeyaml/events/Event
      36: astore_1
      37: aload_1
      38: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      41: ifeq          86
      44: aload_1
      45: checkcast     #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      48: astore_2
      49: aload_2
      50: invokevirtual #129                // Method org/yaml/snakeyaml/events/ScalarEvent.getAnchor:()Ljava/lang/String;
      53: ifnonnull     84
      56: aload_2
      57: invokevirtual #130                // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      60: ifnonnull     84
      63: aload_2
      64: invokevirtual #131                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      67: ifnull        84
      70: aload_2
      71: invokevirtual #132                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      74: invokevirtual #133                // Method java/lang/String.length:()I
      77: ifne          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn
      86: iconst_0
      87: ireturn

  private boolean checkSimpleKey();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       6: instanceof    #106                // class org/yaml/snakeyaml/events/NodeEvent
       9: ifeq          59
      12: aload_0
      13: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      16: checkcast     #106                // class org/yaml/snakeyaml/events/NodeEvent
      19: invokevirtual #107                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      22: ifnull        59
      25: aload_0
      26: getfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      29: ifnonnull     49
      32: aload_0
      33: aload_0
      34: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      37: checkcast     #106                // class org/yaml/snakeyaml/events/NodeEvent
      40: invokevirtual #107                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      43: invokestatic  #134                // Method prepareAnchor:(Ljava/lang/String;)Ljava/lang/String;
      46: putfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      49: iload_1
      50: aload_0
      51: getfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      54: invokevirtual #133                // Method java/lang/String.length:()I
      57: iadd
      58: istore_1
      59: aconst_null
      60: astore_2
      61: aload_0
      62: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      65: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      68: ifeq          85
      71: aload_0
      72: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      75: checkcast     #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      78: invokevirtual #130                // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      81: astore_2
      82: goto          106
      85: aload_0
      86: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      89: instanceof    #73                 // class org/yaml/snakeyaml/events/CollectionStartEvent
      92: ifeq          106
      95: aload_0
      96: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      99: checkcast     #73                 // class org/yaml/snakeyaml/events/CollectionStartEvent
     102: invokevirtual #135                // Method org/yaml/snakeyaml/events/CollectionStartEvent.getTag:()Ljava/lang/String;
     105: astore_2
     106: aload_2
     107: ifnull        136
     110: aload_0
     111: getfield      #56                 // Field preparedTag:Ljava/lang/String;
     114: ifnonnull     126
     117: aload_0
     118: aload_0
     119: aload_2
     120: invokespecial #136                // Method prepareTag:(Ljava/lang/String;)Ljava/lang/String;
     123: putfield      #56                 // Field preparedTag:Ljava/lang/String;
     126: iload_1
     127: aload_0
     128: getfield      #56                 // Field preparedTag:Ljava/lang/String;
     131: invokevirtual #133                // Method java/lang/String.length:()I
     134: iadd
     135: istore_1
     136: aload_0
     137: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     140: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
     143: ifeq          184
     146: aload_0
     147: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     150: ifnonnull     171
     153: aload_0
     154: aload_0
     155: aload_0
     156: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     159: checkcast     #84                 // class org/yaml/snakeyaml/events/ScalarEvent
     162: invokevirtual #132                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
     165: invokespecial #137                // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     168: putfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     171: iload_1
     172: aload_0
     173: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     176: getfield      #138                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.scalar:Ljava/lang/String;
     179: invokevirtual #133                // Method java/lang/String.length:()I
     182: iadd
     183: istore_1
     184: iload_1
     185: aload_0
     186: getfield      #52                 // Field maxSimpleKeyLength:I
     189: if_icmpge     250
     192: aload_0
     193: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     196: instanceof    #82                 // class org/yaml/snakeyaml/events/AliasEvent
     199: ifne          246
     202: aload_0
     203: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     206: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
     209: ifeq          232
     212: aload_0
     213: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     216: getfield      #139                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.empty:Z
     219: ifne          232
     222: aload_0
     223: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     226: getfield      #140                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.multiline:Z
     229: ifeq          246
     232: aload_0
     233: invokespecial #91                 // Method checkEmptySequence:()Z
     236: ifne          246
     239: aload_0
     240: invokespecial #95                 // Method checkEmptyMapping:()Z
     243: ifeq          250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: ireturn

  private void processAnchor(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #106                // class org/yaml/snakeyaml/events/NodeEvent
       7: astore_2
       8: aload_2
       9: invokevirtual #107                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      12: ifnonnull     21
      15: aload_0
      16: aconst_null
      17: putfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      20: return
      21: aload_0
      22: getfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      25: ifnonnull     39
      28: aload_0
      29: aload_2
      30: invokevirtual #107                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      33: invokestatic  #134                // Method prepareAnchor:(Ljava/lang/String;)Ljava/lang/String;
      36: putfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      39: aload_0
      40: new           #99                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      55: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: iconst_1
      62: iconst_0
      63: iconst_0
      64: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      67: aload_0
      68: aconst_null
      69: putfield      #55                 // Field preparedAnchor:Ljava/lang/String;
      72: return

  private void processTag() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       6: instanceof    #84                 // class org/yaml/snakeyaml/events/ScalarEvent
       9: ifeq          119
      12: aload_0
      13: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      16: checkcast     #84                 // class org/yaml/snakeyaml/events/ScalarEvent
      19: astore_2
      20: aload_2
      21: invokevirtual #130                // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      24: astore_1
      25: aload_0
      26: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      29: ifnonnull     40
      32: aload_0
      33: aload_0
      34: invokespecial #141                // Method chooseScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      37: putfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      40: aload_0
      41: getfield      #14                 // Field canonical:Ljava/lang/Boolean;
      44: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
      47: ifeq          54
      50: aload_1
      51: ifnonnull     94
      54: aload_0
      55: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      58: ifnonnull     71
      61: aload_2
      62: invokevirtual #131                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      65: invokevirtual #142                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
      68: ifne          88
      71: aload_0
      72: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      75: ifnull        94
      78: aload_2
      79: invokevirtual #131                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      82: invokevirtual #143                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInNonPlainScalar:()Z
      85: ifeq          94
      88: aload_0
      89: aconst_null
      90: putfield      #56                 // Field preparedTag:Ljava/lang/String;
      93: return
      94: aload_2
      95: invokevirtual #131                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      98: invokevirtual #142                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
     101: ifeq          116
     104: aload_1
     105: ifnonnull     116
     108: ldc           #144                // String !
     110: astore_1
     111: aload_0
     112: aconst_null
     113: putfield      #56                 // Field preparedTag:Ljava/lang/String;
     116: goto          159
     119: aload_0
     120: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     123: checkcast     #73                 // class org/yaml/snakeyaml/events/CollectionStartEvent
     126: astore_2
     127: aload_2
     128: invokevirtual #135                // Method org/yaml/snakeyaml/events/CollectionStartEvent.getTag:()Ljava/lang/String;
     131: astore_1
     132: aload_0
     133: getfield      #14                 // Field canonical:Ljava/lang/Boolean;
     136: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
     139: ifeq          146
     142: aload_1
     143: ifnonnull     159
     146: aload_2
     147: invokevirtual #145                // Method org/yaml/snakeyaml/events/CollectionStartEvent.getImplicit:()Z
     150: ifeq          159
     153: aload_0
     154: aconst_null
     155: putfield      #56                 // Field preparedTag:Ljava/lang/String;
     158: return
     159: aload_1
     160: ifnonnull     173
     163: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
     166: dup
     167: ldc           #146                // String tag is not specified
     169: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: aload_0
     174: getfield      #56                 // Field preparedTag:Ljava/lang/String;
     177: ifnonnull     189
     180: aload_0
     181: aload_0
     182: aload_1
     183: invokespecial #136                // Method prepareTag:(Ljava/lang/String;)Ljava/lang/String;
     186: putfield      #56                 // Field preparedTag:Ljava/lang/String;
     189: aload_0
     190: aload_0
     191: getfield      #56                 // Field preparedTag:Ljava/lang/String;
     194: iconst_1
     195: iconst_0
     196: iconst_0
     197: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     200: aload_0
     201: aconst_null
     202: putfield      #56                 // Field preparedTag:Ljava/lang/String;
     205: return

  private org.yaml.snakeyaml.DumperOptions$ScalarStyle chooseScalarStyle();
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #84                 // class org/yaml/snakeyaml/events/ScalarEvent
       7: astore_1
       8: aload_0
       9: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      12: ifnonnull     27
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokevirtual #132                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      21: invokespecial #137                // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      24: putfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      27: aload_1
      28: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
      31: ifne          44
      34: aload_1
      35: invokevirtual #148                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      38: getstatic     #149                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.DOUBLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      41: if_acmpeq     54
      44: aload_0
      45: getfield      #14                 // Field canonical:Ljava/lang/Boolean;
      48: invokevirtual #89                 // Method java/lang/Boolean.booleanValue:()Z
      51: ifeq          58
      54: getstatic     #149                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.DOUBLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      57: areturn
      58: aload_1
      59: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
      62: ifeq          138
      65: aload_1
      66: invokevirtual #131                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      69: invokevirtual #142                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
      72: ifeq          138
      75: aload_0
      76: getfield      #33                 // Field simpleKeyContext:Z
      79: ifeq          102
      82: aload_0
      83: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      86: getfield      #139                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.empty:Z
      89: ifne          138
      92: aload_0
      93: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      96: getfield      #140                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.multiline:Z
      99: ifne          138
     102: aload_0
     103: getfield      #8                  // Field flowLevel:I
     106: ifeq          119
     109: aload_0
     110: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     113: getfield      #150                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.allowFlowPlain:Z
     116: ifne          136
     119: aload_0
     120: getfield      #8                  // Field flowLevel:I
     123: ifne          138
     126: aload_0
     127: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     130: getfield      #151                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.allowBlockPlain:Z
     133: ifeq          138
     136: aconst_null
     137: areturn
     138: aload_1
     139: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
     142: ifne          194
     145: aload_1
     146: invokevirtual #148                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     149: getstatic     #152                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.LITERAL:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     152: if_acmpeq     165
     155: aload_1
     156: invokevirtual #148                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     159: getstatic     #153                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.FOLDED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     162: if_acmpne     194
     165: aload_0
     166: getfield      #8                  // Field flowLevel:I
     169: ifne          194
     172: aload_0
     173: getfield      #33                 // Field simpleKeyContext:Z
     176: ifne          194
     179: aload_0
     180: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     183: getfield      #154                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.allowBlock:Z
     186: ifeq          194
     189: aload_1
     190: invokevirtual #148                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     193: areturn
     194: aload_1
     195: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
     198: ifne          211
     201: aload_1
     202: invokevirtual #148                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     205: getstatic     #155                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.SINGLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     208: if_acmpne     242
     211: aload_0
     212: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     215: getfield      #156                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.allowSingleQuoted:Z
     218: ifeq          242
     221: aload_0
     222: getfield      #33                 // Field simpleKeyContext:Z
     225: ifeq          238
     228: aload_0
     229: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     232: getfield      #140                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.multiline:Z
     235: ifne          242
     238: getstatic     #155                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.SINGLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     241: areturn
     242: getstatic     #149                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.DOUBLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     245: areturn

  private void processScalar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #84                 // class org/yaml/snakeyaml/events/ScalarEvent
       7: astore_1
       8: aload_0
       9: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      12: ifnonnull     27
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokevirtual #132                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      21: invokespecial #137                // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      24: putfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      27: aload_0
      28: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      31: ifnonnull     42
      34: aload_0
      35: aload_0
      36: invokespecial #141                // Method chooseScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      39: putfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      42: aload_0
      43: getfield      #33                 // Field simpleKeyContext:Z
      46: ifne          60
      49: aload_0
      50: getfield      #5                  // Field splitLines:Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: istore_2
      62: aload_0
      63: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      66: ifnonnull     84
      69: aload_0
      70: aload_0
      71: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      74: getfield      #138                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.scalar:Ljava/lang/String;
      77: iload_2
      78: invokevirtual #157                // Method writePlain:(Ljava/lang/String;Z)V
      81: goto          213
      84: getstatic     #158                // Field org/yaml/snakeyaml/emitter/Emitter$1.$SwitchMap$org$yaml$snakeyaml$DumperOptions$ScalarStyle:[I
      87: aload_0
      88: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      91: invokevirtual #159                // Method org/yaml/snakeyaml/DumperOptions$ScalarStyle.ordinal:()I
      94: iaload
      95: tableswitch   { // 1 to 4
                     1: 124
                     2: 139
                     3: 154
                     4: 169
               default: 183
          }
     124: aload_0
     125: aload_0
     126: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     129: getfield      #138                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.scalar:Ljava/lang/String;
     132: iload_2
     133: invokespecial #160                // Method writeDoubleQuoted:(Ljava/lang/String;Z)V
     136: goto          213
     139: aload_0
     140: aload_0
     141: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     144: getfield      #138                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.scalar:Ljava/lang/String;
     147: iload_2
     148: invokespecial #161                // Method writeSingleQuoted:(Ljava/lang/String;Z)V
     151: goto          213
     154: aload_0
     155: aload_0
     156: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     159: getfield      #138                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.scalar:Ljava/lang/String;
     162: iload_2
     163: invokevirtual #162                // Method writeFolded:(Ljava/lang/String;Z)V
     166: goto          213
     169: aload_0
     170: aload_0
     171: getfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     174: getfield      #138                // Field org/yaml/snakeyaml/emitter/ScalarAnalysis.scalar:Ljava/lang/String;
     177: invokevirtual #163                // Method writeLiteral:(Ljava/lang/String;)V
     180: goto          213
     183: new           #164                // class org/yaml/snakeyaml/error/YAMLException
     186: dup
     187: new           #99                 // class java/lang/StringBuilder
     190: dup
     191: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     194: ldc           #165                // String Unexpected style:
     196: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_0
     200: getfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     203: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     206: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: invokespecial #166                // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     212: athrow
     213: aload_0
     214: aconst_null
     215: putfield      #57                 // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     218: aload_0
     219: aconst_null
     220: putfield      #58                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     223: return

  private java.lang.String prepareVersion(org.yaml.snakeyaml.DumperOptions$Version);
    Code:
       0: aload_1
       1: invokevirtual #167                // Method org/yaml/snakeyaml/DumperOptions$Version.major:()I
       4: iconst_1
       5: if_icmpeq     35
       8: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      11: dup
      12: new           #99                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #168                // String unsupported YAML version:
      21: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: invokevirtual #169                // Method org/yaml/snakeyaml/DumperOptions$Version.getRepresentation:()Ljava/lang/String;
      39: areturn

  private java.lang.String prepareTagHandle(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #133                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #170                // String tag handle must not be empty
      13: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: iconst_0
      19: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      22: bipush        33
      24: if_icmpne     42
      27: aload_1
      28: aload_1
      29: invokevirtual #133                // Method java/lang/String.length:()I
      32: iconst_1
      33: isub
      34: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      37: bipush        33
      39: if_icmpeq     69
      42: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      45: dup
      46: new           #99                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #172                // String tag handle must start and end with \'!\':
      55: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: ldc           #144                // String !
      71: aload_1
      72: invokevirtual #173                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          118
      78: getstatic     #174                // Field HANDLE_FORMAT:Ljava/util/regex/Pattern;
      81: aload_1
      82: invokevirtual #175                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      85: invokevirtual #176                // Method java/util/regex/Matcher.matches:()Z
      88: ifne          118
      91: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      94: dup
      95: new           #99                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #177                // String invalid character in the tag handle:
     104: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload_1
     119: areturn

  private java.lang.String prepareTagPrefix(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #133                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #178                // String tag prefix must not be empty
      13: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #99                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iconst_0
      28: istore        4
      30: aload_1
      31: iconst_0
      32: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      35: bipush        33
      37: if_icmpne     43
      40: iconst_1
      41: istore        4
      43: iload         4
      45: aload_1
      46: invokevirtual #133                // Method java/lang/String.length:()I
      49: if_icmpge     58
      52: iinc          4, 1
      55: goto          43
      58: iload_3
      59: iload         4
      61: if_icmpge     76
      64: aload_2
      65: aload_1
      66: iload_3
      67: iload         4
      69: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
      72: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: aload_2
      77: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  private java.lang.String prepareTag(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #133                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #180                // String tag must not be empty
      13: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #144                // String !
      19: aload_1
      20: invokevirtual #173                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          28
      26: aload_1
      27: areturn
      28: aconst_null
      29: astore_2
      30: aload_1
      31: astore_3
      32: aload_0
      33: getfield      #18                 // Field tagPrefixes:Ljava/util/Map;
      36: invokeinterface #181,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      41: invokeinterface #182,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        4
      48: aload         4
      50: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          107
      58: aload         4
      60: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #183                // class java/lang/String
      68: astore        5
      70: aload_1
      71: aload         5
      73: invokevirtual #184                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      76: ifeq          104
      79: ldc           #144                // String !
      81: aload         5
      83: invokevirtual #173                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifne          101
      89: aload         5
      91: invokevirtual #133                // Method java/lang/String.length:()I
      94: aload_1
      95: invokevirtual #133                // Method java/lang/String.length:()I
      98: if_icmpge     104
     101: aload         5
     103: astore_2
     104: goto          48
     107: aload_2
     108: ifnull        134
     111: aload_1
     112: aload_2
     113: invokevirtual #133                // Method java/lang/String.length:()I
     116: invokevirtual #185                // Method java/lang/String.substring:(I)Ljava/lang/String;
     119: astore_3
     120: aload_0
     121: getfield      #18                 // Field tagPrefixes:Ljava/util/Map;
     124: aload_2
     125: invokeinterface #186,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     130: checkcast     #183                // class java/lang/String
     133: astore_2
     134: aload_3
     135: invokevirtual #133                // Method java/lang/String.length:()I
     138: istore        4
     140: iload         4
     142: ifle          155
     145: aload_3
     146: iconst_0
     147: iload         4
     149: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
     152: goto          157
     155: ldc           #187                // String
     157: astore        5
     159: aload_2
     160: ifnull        183
     163: new           #99                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     170: aload_2
     171: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload         5
     176: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: areturn
     183: new           #99                 // class java/lang/StringBuilder
     186: dup
     187: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     190: ldc           #188                // String !<
     192: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: aload         5
     197: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: ldc           #189                // String >
     202: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: areturn

  static java.lang.String prepareAnchor(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #133                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #190                // String anchor must not be empty
      13: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #191                // Field ANCHOR_FORMAT:Ljava/util/regex/Pattern;
      20: aload_0
      21: invokevirtual #175                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      24: invokevirtual #176                // Method java/util/regex/Matcher.matches:()Z
      27: ifne          57
      30: new           #98                 // class org/yaml/snakeyaml/emitter/EmitterException
      33: dup
      34: new           #99                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #192                // String invalid character in the anchor:
      43: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #105                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: areturn

  private org.yaml.snakeyaml.emitter.ScalarAnalysis analyzeScalar(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #133                // Method java/lang/String.length:()I
       4: ifne          22
       7: new           #193                // class org/yaml/snakeyaml/emitter/ScalarAnalysis
      10: dup
      11: aload_1
      12: iconst_1
      13: iconst_0
      14: iconst_0
      15: iconst_1
      16: iconst_1
      17: iconst_0
      18: invokespecial #194                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis."<init>":(Ljava/lang/String;ZZZZZZ)V
      21: areturn
      22: iconst_0
      23: istore_2
      24: iconst_0
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iconst_0
      36: istore        7
      38: iconst_0
      39: istore        8
      41: iconst_0
      42: istore        9
      44: iconst_0
      45: istore        10
      47: iconst_0
      48: istore        11
      50: aload_1
      51: ldc           #195                // String ---
      53: invokevirtual #184                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      56: ifne          68
      59: aload_1
      60: ldc           #196                // String ...
      62: invokevirtual #184                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      65: ifeq          72
      68: iconst_1
      69: istore_2
      70: iconst_1
      71: istore_3
      72: iconst_1
      73: istore        12
      75: aload_1
      76: invokevirtual #133                // Method java/lang/String.length:()I
      79: iconst_1
      80: if_icmpeq     97
      83: getstatic     #197                // Field org/yaml/snakeyaml/scanner/Constant.NULL_BL_T_LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      86: aload_1
      87: iconst_1
      88: invokevirtual #198                // Method java/lang/String.codePointAt:(I)I
      91: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
      94: ifeq          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: istore        13
     104: iconst_0
     105: istore        14
     107: iconst_0
     108: istore        15
     110: iconst_0
     111: istore        16
     113: iload         16
     115: aload_1
     116: invokevirtual #133                // Method java/lang/String.length:()I
     119: if_icmpge     539
     122: aload_1
     123: iload         16
     125: invokevirtual #198                // Method java/lang/String.codePointAt:(I)I
     128: istore        17
     130: iload         16
     132: ifne          192
     135: ldc           #200                // String #,[]{}&*!|>\'\"%@`
     137: iload         17
     139: invokevirtual #201                // Method java/lang/String.indexOf:(I)I
     142: iconst_m1
     143: if_icmpeq     150
     146: iconst_1
     147: istore_3
     148: iconst_1
     149: istore_2
     150: iload         17
     152: bipush        63
     154: if_icmpeq     164
     157: iload         17
     159: bipush        58
     161: if_icmpne     173
     164: iconst_1
     165: istore_3
     166: iload         13
     168: ifeq          173
     171: iconst_1
     172: istore_2
     173: iload         17
     175: bipush        45
     177: if_icmpne     237
     180: iload         13
     182: ifeq          237
     185: iconst_1
     186: istore_3
     187: iconst_1
     188: istore_2
     189: goto          237
     192: ldc           #202                // String ,?[]{}
     194: iload         17
     196: invokevirtual #201                // Method java/lang/String.indexOf:(I)I
     199: iconst_m1
     200: if_icmpeq     205
     203: iconst_1
     204: istore_3
     205: iload         17
     207: bipush        58
     209: if_icmpne     221
     212: iconst_1
     213: istore_3
     214: iload         13
     216: ifeq          221
     219: iconst_1
     220: istore_2
     221: iload         17
     223: bipush        35
     225: if_icmpne     237
     228: iload         12
     230: ifeq          237
     233: iconst_1
     234: istore_3
     235: iconst_1
     236: istore_2
     237: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     240: iload         17
     242: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     245: istore        18
     247: iload         18
     249: ifeq          255
     252: iconst_1
     253: istore        4
     255: iload         17
     257: bipush        10
     259: if_icmpeq     343
     262: bipush        32
     264: iload         17
     266: if_icmpgt     276
     269: iload         17
     271: bipush        126
     273: if_icmple     343
     276: iload         17
     278: sipush        133
     281: if_icmpeq     327
     284: iload         17
     286: sipush        160
     289: if_icmplt     299
     292: iload         17
     294: ldc           #204                // int 55295
     296: if_icmple     327
     299: iload         17
     301: ldc           #205                // int 57344
     303: if_icmplt     313
     306: iload         17
     308: ldc           #206                // int 65533
     310: if_icmple     327
     313: iload         17
     315: ldc           #207                // int 65536
     317: if_icmplt     340
     320: iload         17
     322: ldc           #208                // int 1114111
     324: if_icmpgt     340
     327: aload_0
     328: getfield      #40                 // Field allowUnicode:Z
     331: ifne          343
     334: iconst_1
     335: istore        5
     337: goto          343
     340: iconst_1
     341: istore        5
     343: iload         17
     345: bipush        32
     347: if_icmpne     389
     350: iload         16
     352: ifne          358
     355: iconst_1
     356: istore        6
     358: iload         16
     360: aload_1
     361: invokevirtual #133                // Method java/lang/String.length:()I
     364: iconst_1
     365: isub
     366: if_icmpne     372
     369: iconst_1
     370: istore        8
     372: iload         15
     374: ifeq          380
     377: iconst_1
     378: istore        10
     380: iconst_1
     381: istore        14
     383: iconst_0
     384: istore        15
     386: goto          439
     389: iload         18
     391: ifeq          433
     394: iload         16
     396: ifne          402
     399: iconst_1
     400: istore        7
     402: iload         16
     404: aload_1
     405: invokevirtual #133                // Method java/lang/String.length:()I
     408: iconst_1
     409: isub
     410: if_icmpne     416
     413: iconst_1
     414: istore        9
     416: iload         14
     418: ifeq          424
     421: iconst_1
     422: istore        11
     424: iconst_0
     425: istore        14
     427: iconst_1
     428: istore        15
     430: goto          439
     433: iconst_0
     434: istore        14
     436: iconst_0
     437: istore        15
     439: iload         16
     441: iload         17
     443: invokestatic  #209                // Method java/lang/Character.charCount:(I)I
     446: iadd
     447: istore        16
     449: getstatic     #210                // Field org/yaml/snakeyaml/scanner/Constant.NULL_BL_T:Lorg/yaml/snakeyaml/scanner/Constant;
     452: iload         17
     454: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     457: ifne          465
     460: iload         18
     462: ifeq          469
     465: iconst_1
     466: goto          470
     469: iconst_0
     470: istore        12
     472: iconst_1
     473: istore        13
     475: iload         16
     477: iconst_1
     478: iadd
     479: aload_1
     480: invokevirtual #133                // Method java/lang/String.length:()I
     483: if_icmpge     536
     486: iload         16
     488: aload_1
     489: iload         16
     491: invokevirtual #198                // Method java/lang/String.codePointAt:(I)I
     494: invokestatic  #209                // Method java/lang/Character.charCount:(I)I
     497: iadd
     498: istore        19
     500: iload         19
     502: aload_1
     503: invokevirtual #133                // Method java/lang/String.length:()I
     506: if_icmpge     536
     509: getstatic     #210                // Field org/yaml/snakeyaml/scanner/Constant.NULL_BL_T:Lorg/yaml/snakeyaml/scanner/Constant;
     512: aload_1
     513: iload         19
     515: invokevirtual #198                // Method java/lang/String.codePointAt:(I)I
     518: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     521: ifne          529
     524: iload         18
     526: ifeq          533
     529: iconst_1
     530: goto          534
     533: iconst_0
     534: istore        13
     536: goto          113
     539: iconst_1
     540: istore        17
     542: iconst_1
     543: istore        18
     545: iconst_1
     546: istore        19
     548: iconst_1
     549: istore        20
     551: iload         6
     553: ifne          571
     556: iload         7
     558: ifne          571
     561: iload         8
     563: ifne          571
     566: iload         9
     568: ifeq          577
     571: iconst_0
     572: dup
     573: istore        18
     575: istore        17
     577: iload         8
     579: ifeq          585
     582: iconst_0
     583: istore        20
     585: iload         10
     587: ifeq          599
     590: iconst_0
     591: dup
     592: istore        19
     594: dup
     595: istore        18
     597: istore        17
     599: iload         11
     601: ifne          609
     604: iload         5
     606: ifeq          621
     609: iconst_0
     610: dup
     611: istore        20
     613: dup
     614: istore        19
     616: dup
     617: istore        18
     619: istore        17
     621: iload         4
     623: ifeq          629
     626: iconst_0
     627: istore        17
     629: iload_3
     630: ifeq          636
     633: iconst_0
     634: istore        17
     636: iload_2
     637: ifeq          643
     640: iconst_0
     641: istore        18
     643: new           #193                // class org/yaml/snakeyaml/emitter/ScalarAnalysis
     646: dup
     647: aload_1
     648: iconst_0
     649: iload         4
     651: iload         17
     653: iload         18
     655: iload         19
     657: iload         20
     659: invokespecial #194                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis."<init>":(Ljava/lang/String;ZZZZZZ)V
     662: areturn

  void flushStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field stream:Ljava/io/Writer;
       4: invokevirtual #211                // Method java/io/Writer.flush:()V
       7: return

  void writeStreamStart();
    Code:
       0: return

  void writeStreamEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #212                // Method flushStream:()V
       4: return

  void writeIndicator(java.lang.String, boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field whitespace:Z
       4: ifne          31
       7: iload_2
       8: ifeq          31
      11: aload_0
      12: dup
      13: getfield      #7                  // Field column:I
      16: iconst_1
      17: iadd
      18: putfield      #7                  // Field column:I
      21: aload_0
      22: getfield      #24                 // Field stream:Ljava/io/Writer;
      25: getstatic     #213                // Field SPACE:[C
      28: invokevirtual #214                // Method java/io/Writer.write:([C)V
      31: aload_0
      32: iload_3
      33: putfield      #34                 // Field whitespace:Z
      36: aload_0
      37: aload_0
      38: getfield      #35                 // Field indention:Z
      41: ifeq          53
      44: iload         4
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: putfield      #35                 // Field indention:Z
      57: aload_0
      58: dup
      59: getfield      #7                  // Field column:I
      62: aload_1
      63: invokevirtual #133                // Method java/lang/String.length:()I
      66: iadd
      67: putfield      #7                  // Field column:I
      70: aload_0
      71: iconst_0
      72: putfield      #20                 // Field openEnded:Z
      75: aload_0
      76: getfield      #24                 // Field stream:Ljava/io/Writer;
      79: aload_1
      80: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
      83: return

  void writeIndent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field indent:Ljava/lang/Integer;
       4: ifnull        18
       7: aload_0
       8: getfield      #10                 // Field indent:Ljava/lang/Integer;
      11: invokevirtual #80                 // Method java/lang/Integer.intValue:()I
      14: istore_1
      15: goto          20
      18: iconst_0
      19: istore_1
      20: aload_0
      21: getfield      #35                 // Field indention:Z
      24: ifeq          50
      27: aload_0
      28: getfield      #7                  // Field column:I
      31: iload_1
      32: if_icmpgt     50
      35: aload_0
      36: getfield      #7                  // Field column:I
      39: iload_1
      40: if_icmpne     55
      43: aload_0
      44: getfield      #34                 // Field whitespace:Z
      47: ifne          55
      50: aload_0
      51: aconst_null
      52: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
      55: aload_0
      56: iload_1
      57: aload_0
      58: getfield      #7                  // Field column:I
      61: isub
      62: invokespecial #1                  // Method writeWhitespace:(I)V
      65: return

  private void writeWhitespace(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifgt          5
       4: return
       5: aload_0
       6: iconst_1
       7: putfield      #34                 // Field whitespace:Z
      10: iload_1
      11: newarray       char
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_2
      18: arraylength
      19: if_icmpge     33
      22: aload_2
      23: iload_3
      24: bipush        32
      26: castore
      27: iinc          3, 1
      30: goto          16
      33: aload_0
      34: dup
      35: getfield      #7                  // Field column:I
      38: iload_1
      39: iadd
      40: putfield      #7                  // Field column:I
      43: aload_0
      44: getfield      #24                 // Field stream:Ljava/io/Writer;
      47: aload_2
      48: invokevirtual #214                // Method java/io/Writer.write:([C)V
      51: return

  private void writeLineBreak(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field whitespace:Z
       5: aload_0
       6: iconst_1
       7: putfield      #35                 // Field indention:Z
      10: aload_0
      11: iconst_0
      12: putfield      #7                  // Field column:I
      15: aload_1
      16: ifnonnull     33
      19: aload_0
      20: getfield      #24                 // Field stream:Ljava/io/Writer;
      23: aload_0
      24: getfield      #49                 // Field bestLineBreak:[C
      27: invokevirtual #214                // Method java/io/Writer.write:([C)V
      30: goto          41
      33: aload_0
      34: getfield      #24                 // Field stream:Ljava/io/Writer;
      37: aload_1
      38: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
      41: return

  void writeVersionDirective(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field stream:Ljava/io/Writer;
       4: ldc           #217                // String %YAML
       6: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #24                 // Field stream:Ljava/io/Writer;
      13: aload_1
      14: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
      17: aload_0
      18: aconst_null
      19: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
      22: return

  void writeTagDirective(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field stream:Ljava/io/Writer;
       4: ldc           #218                // String %TAG
       6: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #24                 // Field stream:Ljava/io/Writer;
      13: aload_1
      14: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #24                 // Field stream:Ljava/io/Writer;
      21: getstatic     #213                // Field SPACE:[C
      24: invokevirtual #214                // Method java/io/Writer.write:([C)V
      27: aload_0
      28: getfield      #24                 // Field stream:Ljava/io/Writer;
      31: aload_2
      32: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
      35: aload_0
      36: aconst_null
      37: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
      40: return

  private void writeSingleQuoted(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #219                // String \'
       3: iconst_1
       4: iconst_0
       5: iconst_0
       6: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: aload_1
      23: invokevirtual #133                // Method java/lang/String.length:()I
      26: if_icmpgt     384
      29: iconst_0
      30: istore        7
      32: iload         6
      34: aload_1
      35: invokevirtual #133                // Method java/lang/String.length:()I
      38: if_icmpge     49
      41: aload_1
      42: iload         6
      44: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      47: istore        7
      49: iload_3
      50: ifeq          147
      53: iload         7
      55: ifeq          65
      58: iload         7
      60: bipush        32
      62: if_icmpeq     318
      65: iload         5
      67: iconst_1
      68: iadd
      69: iload         6
      71: if_icmpne     110
      74: aload_0
      75: getfield      #7                  // Field column:I
      78: aload_0
      79: getfield      #6                  // Field bestWidth:I
      82: if_icmple     110
      85: iload_2
      86: ifeq          110
      89: iload         5
      91: ifeq          110
      94: iload         6
      96: aload_1
      97: invokevirtual #133                // Method java/lang/String.length:()I
     100: if_icmpeq     110
     103: aload_0
     104: invokevirtual #117                // Method writeIndent:()V
     107: goto          140
     110: iload         6
     112: iload         5
     114: isub
     115: istore        8
     117: aload_0
     118: dup
     119: getfield      #7                  // Field column:I
     122: iload         8
     124: iadd
     125: putfield      #7                  // Field column:I
     128: aload_0
     129: getfield      #24                 // Field stream:Ljava/io/Writer;
     132: aload_1
     133: iload         5
     135: iload         8
     137: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     140: iload         6
     142: istore        5
     144: goto          318
     147: iload         4
     149: ifeq          264
     152: iload         7
     154: ifeq          168
     157: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     160: iload         7
     162: invokevirtual #221                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     165: ifeq          318
     168: aload_1
     169: iload         5
     171: invokevirtual #171                // Method java/lang/String.charAt:(I)C
     174: bipush        10
     176: if_icmpne     184
     179: aload_0
     180: aconst_null
     181: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     184: aload_1
     185: iload         5
     187: iload         6
     189: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
     192: astore        8
     194: aload         8
     196: invokevirtual #48                 // Method java/lang/String.toCharArray:()[C
     199: astore        9
     201: aload         9
     203: arraylength
     204: istore        10
     206: iconst_0
     207: istore        11
     209: iload         11
     211: iload         10
     213: if_icmpge     253
     216: aload         9
     218: iload         11
     220: caload
     221: istore        12
     223: iload         12
     225: bipush        10
     227: if_icmpne     238
     230: aload_0
     231: aconst_null
     232: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     235: goto          247
     238: aload_0
     239: iload         12
     241: invokestatic  #222                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     244: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     247: iinc          11, 1
     250: goto          209
     253: aload_0
     254: invokevirtual #117                // Method writeIndent:()V
     257: iload         6
     259: istore        5
     261: goto          318
     264: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     267: iload         7
     269: ldc           #223                // String \u0000 \'
     271: invokevirtual #224                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
     274: ifeq          318
     277: iload         5
     279: iload         6
     281: if_icmpge     318
     284: iload         6
     286: iload         5
     288: isub
     289: istore        8
     291: aload_0
     292: dup
     293: getfield      #7                  // Field column:I
     296: iload         8
     298: iadd
     299: putfield      #7                  // Field column:I
     302: aload_0
     303: getfield      #24                 // Field stream:Ljava/io/Writer;
     306: aload_1
     307: iload         5
     309: iload         8
     311: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     314: iload         6
     316: istore        5
     318: iload         7
     320: bipush        39
     322: if_icmpne     350
     325: aload_0
     326: dup
     327: getfield      #7                  // Field column:I
     330: iconst_2
     331: iadd
     332: putfield      #7                  // Field column:I
     335: aload_0
     336: getfield      #24                 // Field stream:Ljava/io/Writer;
     339: ldc           #225                // String \'\'
     341: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
     344: iload         6
     346: iconst_1
     347: iadd
     348: istore        5
     350: iload         7
     352: ifeq          378
     355: iload         7
     357: bipush        32
     359: if_icmpne     366
     362: iconst_1
     363: goto          367
     366: iconst_0
     367: istore_3
     368: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     371: iload         7
     373: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     376: istore        4
     378: iinc          6, 1
     381: goto          20
     384: aload_0
     385: ldc           #219                // String \'
     387: iconst_0
     388: iconst_0
     389: iconst_0
     390: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     393: return

  private void writeDoubleQuoted(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #226                // String \"
       3: iconst_1
       4: iconst_0
       5: iconst_0
       6: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: aload_1
      17: invokevirtual #133                // Method java/lang/String.length:()I
      20: if_icmpgt     735
      23: aconst_null
      24: astore        5
      26: iload         4
      28: aload_1
      29: invokevirtual #133                // Method java/lang/String.length:()I
      32: if_icmpge     46
      35: aload_1
      36: iload         4
      38: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      41: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      44: astore        5
      46: aload         5
      48: ifnull        85
      51: ldc           #228                // String \"\\\u0085  ﻿
      53: aload         5
      55: invokevirtual #229                // Method java/lang/Character.charValue:()C
      58: invokevirtual #201                // Method java/lang/String.indexOf:(I)I
      61: iconst_m1
      62: if_icmpne     85
      65: bipush        32
      67: aload         5
      69: invokevirtual #229                // Method java/lang/Character.charValue:()C
      72: if_icmpgt     85
      75: aload         5
      77: invokevirtual #229                // Method java/lang/Character.charValue:()C
      80: bipush        126
      82: if_icmple     553
      85: iload_3
      86: iload         4
      88: if_icmpge     122
      91: iload         4
      93: iload_3
      94: isub
      95: istore        6
      97: aload_0
      98: dup
      99: getfield      #7                  // Field column:I
     102: iload         6
     104: iadd
     105: putfield      #7                  // Field column:I
     108: aload_0
     109: getfield      #24                 // Field stream:Ljava/io/Writer;
     112: aload_1
     113: iload_3
     114: iload         6
     116: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     119: iload         4
     121: istore_3
     122: aload         5
     124: ifnull        553
     127: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     130: aload         5
     132: invokeinterface #231,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     137: ifeq          176
     140: new           #99                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #232                // String \\
     149: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     155: aload         5
     157: invokeinterface #186,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #183                // class java/lang/String
     165: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: astore        6
     173: goto          525
     176: aload_0
     177: getfield      #40                 // Field allowUnicode:Z
     180: ifeq          194
     183: aload         5
     185: invokevirtual #229                // Method java/lang/Character.charValue:()C
     188: invokestatic  #233                // Method org/yaml/snakeyaml/reader/StreamReader.isPrintable:(I)Z
     191: ifne          518
     194: aload         5
     196: invokevirtual #229                // Method java/lang/Character.charValue:()C
     199: sipush        255
     202: if_icmpgt     270
     205: new           #99                 // class java/lang/StringBuilder
     208: dup
     209: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     212: ldc           #234                // String 0
     214: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload         5
     219: invokevirtual #229                // Method java/lang/Character.charValue:()C
     222: bipush        16
     224: invokestatic  #235                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     227: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: astore        7
     235: new           #99                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     242: ldc           #236                // String \\x
     244: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload         7
     249: aload         7
     251: invokevirtual #133                // Method java/lang/String.length:()I
     254: iconst_2
     255: isub
     256: invokevirtual #185                // Method java/lang/String.substring:(I)Ljava/lang/String;
     259: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: astore        6
     267: goto          525
     270: aload         5
     272: invokevirtual #229                // Method java/lang/Character.charValue:()C
     275: ldc           #237                // int 55296
     277: if_icmplt     453
     280: aload         5
     282: invokevirtual #229                // Method java/lang/Character.charValue:()C
     285: ldc           #238                // int 56319
     287: if_icmpgt     453
     290: iload         4
     292: iconst_1
     293: iadd
     294: aload_1
     295: invokevirtual #133                // Method java/lang/String.length:()I
     298: if_icmpge     388
     301: aload_1
     302: iinc          4, 1
     305: iload         4
     307: invokevirtual #171                // Method java/lang/String.charAt:(I)C
     310: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     313: astore        7
     315: new           #99                 // class java/lang/StringBuilder
     318: dup
     319: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     322: ldc           #239                // String 000
     324: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     327: aload         5
     329: invokevirtual #229                // Method java/lang/Character.charValue:()C
     332: aload         7
     334: invokevirtual #229                // Method java/lang/Character.charValue:()C
     337: invokestatic  #240                // Method java/lang/Character.toCodePoint:(CC)I
     340: i2l
     341: invokestatic  #241                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     344: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     350: astore        8
     352: new           #99                 // class java/lang/StringBuilder
     355: dup
     356: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     359: ldc           #242                // String \\U
     361: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: aload         8
     366: aload         8
     368: invokevirtual #133                // Method java/lang/String.length:()I
     371: bipush        8
     373: isub
     374: invokevirtual #185                // Method java/lang/String.substring:(I)Ljava/lang/String;
     377: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     380: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     383: astore        6
     385: goto          525
     388: new           #99                 // class java/lang/StringBuilder
     391: dup
     392: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     395: ldc           #239                // String 000
     397: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     400: aload         5
     402: invokevirtual #229                // Method java/lang/Character.charValue:()C
     405: bipush        16
     407: invokestatic  #235                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     410: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     413: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     416: astore        7
     418: new           #99                 // class java/lang/StringBuilder
     421: dup
     422: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     425: ldc           #243                // String \\u
     427: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     430: aload         7
     432: aload         7
     434: invokevirtual #133                // Method java/lang/String.length:()I
     437: iconst_4
     438: isub
     439: invokevirtual #185                // Method java/lang/String.substring:(I)Ljava/lang/String;
     442: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     445: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     448: astore        6
     450: goto          525
     453: new           #99                 // class java/lang/StringBuilder
     456: dup
     457: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     460: ldc           #239                // String 000
     462: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     465: aload         5
     467: invokevirtual #229                // Method java/lang/Character.charValue:()C
     470: bipush        16
     472: invokestatic  #235                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     475: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     478: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     481: astore        7
     483: new           #99                 // class java/lang/StringBuilder
     486: dup
     487: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     490: ldc           #243                // String \\u
     492: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     495: aload         7
     497: aload         7
     499: invokevirtual #133                // Method java/lang/String.length:()I
     502: iconst_4
     503: isub
     504: invokevirtual #185                // Method java/lang/String.substring:(I)Ljava/lang/String;
     507: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     513: astore        6
     515: goto          525
     518: aload         5
     520: invokestatic  #244                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     523: astore        6
     525: aload_0
     526: dup
     527: getfield      #7                  // Field column:I
     530: aload         6
     532: invokevirtual #133                // Method java/lang/String.length:()I
     535: iadd
     536: putfield      #7                  // Field column:I
     539: aload_0
     540: getfield      #24                 // Field stream:Ljava/io/Writer;
     543: aload         6
     545: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
     548: iload         4
     550: iconst_1
     551: iadd
     552: istore_3
     553: iconst_0
     554: iload         4
     556: if_icmpge     729
     559: iload         4
     561: aload_1
     562: invokevirtual #133                // Method java/lang/String.length:()I
     565: iconst_1
     566: isub
     567: if_icmpge     729
     570: aload         5
     572: invokevirtual #229                // Method java/lang/Character.charValue:()C
     575: bipush        32
     577: if_icmpeq     586
     580: iload_3
     581: iload         4
     583: if_icmplt     729
     586: aload_0
     587: getfield      #7                  // Field column:I
     590: iload         4
     592: iload_3
     593: isub
     594: iadd
     595: aload_0
     596: getfield      #6                  // Field bestWidth:I
     599: if_icmple     729
     602: iload_2
     603: ifeq          729
     606: iload_3
     607: iload         4
     609: if_icmplt     619
     612: ldc           #232                // String \\
     614: astore        6
     616: goto          646
     619: new           #99                 // class java/lang/StringBuilder
     622: dup
     623: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     626: aload_1
     627: iload_3
     628: iload         4
     630: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
     633: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     636: ldc           #232                // String \\
     638: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     641: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     644: astore        6
     646: iload_3
     647: iload         4
     649: if_icmpge     655
     652: iload         4
     654: istore_3
     655: aload_0
     656: dup
     657: getfield      #7                  // Field column:I
     660: aload         6
     662: invokevirtual #133                // Method java/lang/String.length:()I
     665: iadd
     666: putfield      #7                  // Field column:I
     669: aload_0
     670: getfield      #24                 // Field stream:Ljava/io/Writer;
     673: aload         6
     675: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
     678: aload_0
     679: invokevirtual #117                // Method writeIndent:()V
     682: aload_0
     683: iconst_0
     684: putfield      #34                 // Field whitespace:Z
     687: aload_0
     688: iconst_0
     689: putfield      #35                 // Field indention:Z
     692: aload_1
     693: iload_3
     694: invokevirtual #171                // Method java/lang/String.charAt:(I)C
     697: bipush        32
     699: if_icmpne     729
     702: ldc           #232                // String \\
     704: astore        6
     706: aload_0
     707: dup
     708: getfield      #7                  // Field column:I
     711: aload         6
     713: invokevirtual #133                // Method java/lang/String.length:()I
     716: iadd
     717: putfield      #7                  // Field column:I
     720: aload_0
     721: getfield      #24                 // Field stream:Ljava/io/Writer;
     724: aload         6
     726: invokevirtual #215                // Method java/io/Writer.write:(Ljava/lang/String;)V
     729: iinc          4, 1
     732: goto          14
     735: aload_0
     736: ldc           #226                // String \"
     738: iconst_0
     739: iconst_0
     740: iconst_0
     741: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     744: return

  private java.lang.String determineBlockHints(java.lang.String);
    Code:
       0: new           #99                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      11: aload_1
      12: iconst_0
      13: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      16: ldc           #245                // String
      18: invokevirtual #224                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
      21: ifeq          33
      24: aload_2
      25: aload_0
      26: getfield      #41                 // Field bestIndent:I
      29: invokevirtual #246                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: aload_1
      35: invokevirtual #133                // Method java/lang/String.length:()I
      38: iconst_1
      39: isub
      40: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      43: istore_3
      44: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      47: iload_3
      48: invokevirtual #221                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
      51: ifeq          64
      54: aload_2
      55: ldc           #247                // String -
      57: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: goto          98
      64: aload_1
      65: invokevirtual #133                // Method java/lang/String.length:()I
      68: iconst_1
      69: if_icmpeq     91
      72: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      75: aload_1
      76: aload_1
      77: invokevirtual #133                // Method java/lang/String.length:()I
      80: iconst_2
      81: isub
      82: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      85: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
      88: ifeq          98
      91: aload_2
      92: ldc           #248                // String +
      94: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_2
      99: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: areturn

  void writeFolded(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #249                // Method determineBlockHints:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_0
       7: new           #99                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #189                // String >
      16: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_3
      20: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: iconst_1
      27: iconst_0
      28: iconst_0
      29: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      32: aload_3
      33: invokevirtual #133                // Method java/lang/String.length:()I
      36: ifle          59
      39: aload_3
      40: aload_3
      41: invokevirtual #133                // Method java/lang/String.length:()I
      44: iconst_1
      45: isub
      46: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      49: bipush        43
      51: if_icmpne     59
      54: aload_0
      55: iconst_1
      56: putfield      #20                 // Field openEnded:Z
      59: aload_0
      60: aconst_null
      61: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
      64: iconst_1
      65: istore        4
      67: iconst_0
      68: istore        5
      70: iconst_1
      71: istore        6
      73: iconst_0
      74: istore        7
      76: iconst_0
      77: istore        8
      79: iload         8
      81: aload_1
      82: invokevirtual #133                // Method java/lang/String.length:()I
      85: if_icmpgt     433
      88: iconst_0
      89: istore        9
      91: iload         8
      93: aload_1
      94: invokevirtual #133                // Method java/lang/String.length:()I
      97: if_icmpge     108
     100: aload_1
     101: iload         8
     103: invokevirtual #171                // Method java/lang/String.charAt:(I)C
     106: istore        9
     108: iload         6
     110: ifeq          261
     113: iload         9
     115: ifeq          129
     118: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     121: iload         9
     123: invokevirtual #221                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     126: ifeq          398
     129: iload         4
     131: ifne          162
     134: iload         9
     136: ifeq          162
     139: iload         9
     141: bipush        32
     143: if_icmpeq     162
     146: aload_1
     147: iload         7
     149: invokevirtual #171                // Method java/lang/String.charAt:(I)C
     152: bipush        10
     154: if_icmpne     162
     157: aload_0
     158: aconst_null
     159: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     162: iload         9
     164: bipush        32
     166: if_icmpne     173
     169: iconst_1
     170: goto          174
     173: iconst_0
     174: istore        4
     176: aload_1
     177: iload         7
     179: iload         8
     181: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
     184: astore        10
     186: aload         10
     188: invokevirtual #48                 // Method java/lang/String.toCharArray:()[C
     191: astore        11
     193: aload         11
     195: arraylength
     196: istore        12
     198: iconst_0
     199: istore        13
     201: iload         13
     203: iload         12
     205: if_icmpge     245
     208: aload         11
     210: iload         13
     212: caload
     213: istore        14
     215: iload         14
     217: bipush        10
     219: if_icmpne     230
     222: aload_0
     223: aconst_null
     224: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     227: goto          239
     230: aload_0
     231: iload         14
     233: invokestatic  #222                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     236: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     239: iinc          13, 1
     242: goto          201
     245: iload         9
     247: ifeq          254
     250: aload_0
     251: invokevirtual #117                // Method writeIndent:()V
     254: iload         8
     256: istore        7
     258: goto          398
     261: iload         5
     263: ifeq          341
     266: iload         9
     268: bipush        32
     270: if_icmpeq     398
     273: iload         7
     275: iconst_1
     276: iadd
     277: iload         8
     279: if_icmpne     304
     282: aload_0
     283: getfield      #7                  // Field column:I
     286: aload_0
     287: getfield      #6                  // Field bestWidth:I
     290: if_icmple     304
     293: iload_2
     294: ifeq          304
     297: aload_0
     298: invokevirtual #117                // Method writeIndent:()V
     301: goto          334
     304: iload         8
     306: iload         7
     308: isub
     309: istore        10
     311: aload_0
     312: dup
     313: getfield      #7                  // Field column:I
     316: iload         10
     318: iadd
     319: putfield      #7                  // Field column:I
     322: aload_0
     323: getfield      #24                 // Field stream:Ljava/io/Writer;
     326: aload_1
     327: iload         7
     329: iload         10
     331: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     334: iload         8
     336: istore        7
     338: goto          398
     341: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     344: iload         9
     346: ldc           #250                // String \u0000
     348: invokevirtual #224                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
     351: ifeq          398
     354: iload         8
     356: iload         7
     358: isub
     359: istore        10
     361: aload_0
     362: dup
     363: getfield      #7                  // Field column:I
     366: iload         10
     368: iadd
     369: putfield      #7                  // Field column:I
     372: aload_0
     373: getfield      #24                 // Field stream:Ljava/io/Writer;
     376: aload_1
     377: iload         7
     379: iload         10
     381: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     384: iload         9
     386: ifne          394
     389: aload_0
     390: aconst_null
     391: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     394: iload         8
     396: istore        7
     398: iload         9
     400: ifeq          427
     403: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     406: iload         9
     408: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     411: istore        6
     413: iload         9
     415: bipush        32
     417: if_icmpne     424
     420: iconst_1
     421: goto          425
     424: iconst_0
     425: istore        5
     427: iinc          8, 1
     430: goto          79
     433: return

  void writeLiteral(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #249                // Method determineBlockHints:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: new           #99                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #251                // String |
      16: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_2
      20: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: iconst_1
      27: iconst_0
      28: iconst_0
      29: invokevirtual #116                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      32: aload_2
      33: invokevirtual #133                // Method java/lang/String.length:()I
      36: ifle          59
      39: aload_2
      40: aload_2
      41: invokevirtual #133                // Method java/lang/String.length:()I
      44: iconst_1
      45: isub
      46: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      49: bipush        43
      51: if_icmpne     59
      54: aload_0
      55: iconst_1
      56: putfield      #20                 // Field openEnded:Z
      59: aload_0
      60: aconst_null
      61: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
      64: iconst_1
      65: istore_3
      66: iconst_0
      67: istore        4
      69: iconst_0
      70: istore        5
      72: iload         5
      74: aload_1
      75: invokevirtual #133                // Method java/lang/String.length:()I
      78: if_icmpgt     271
      81: iconst_0
      82: istore        6
      84: iload         5
      86: aload_1
      87: invokevirtual #133                // Method java/lang/String.length:()I
      90: if_icmpge     101
      93: aload_1
      94: iload         5
      96: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      99: istore        6
     101: iload_3
     102: ifeq          206
     105: iload         6
     107: ifeq          121
     110: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     113: iload         6
     115: invokevirtual #221                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     118: ifeq          251
     121: aload_1
     122: iload         4
     124: iload         5
     126: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
     129: astore        7
     131: aload         7
     133: invokevirtual #48                 // Method java/lang/String.toCharArray:()[C
     136: astore        8
     138: aload         8
     140: arraylength
     141: istore        9
     143: iconst_0
     144: istore        10
     146: iload         10
     148: iload         9
     150: if_icmpge     190
     153: aload         8
     155: iload         10
     157: caload
     158: istore        11
     160: iload         11
     162: bipush        10
     164: if_icmpne     175
     167: aload_0
     168: aconst_null
     169: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     172: goto          184
     175: aload_0
     176: iload         11
     178: invokestatic  #222                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     181: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     184: iinc          10, 1
     187: goto          146
     190: iload         6
     192: ifeq          199
     195: aload_0
     196: invokevirtual #117                // Method writeIndent:()V
     199: iload         5
     201: istore        4
     203: goto          251
     206: iload         6
     208: ifeq          222
     211: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     214: iload         6
     216: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     219: ifeq          251
     222: aload_0
     223: getfield      #24                 // Field stream:Ljava/io/Writer;
     226: aload_1
     227: iload         4
     229: iload         5
     231: iload         4
     233: isub
     234: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     237: iload         6
     239: ifne          247
     242: aload_0
     243: aconst_null
     244: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     247: iload         5
     249: istore        4
     251: iload         6
     253: ifeq          265
     256: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     259: iload         6
     261: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     264: istore_3
     265: iinc          5, 1
     268: goto          72
     271: return

  void writePlain(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #81                 // Field rootContext:Z
       4: ifeq          12
       7: aload_0
       8: iconst_1
       9: putfield      #20                 // Field openEnded:Z
      12: aload_1
      13: invokevirtual #133                // Method java/lang/String.length:()I
      16: ifne          20
      19: return
      20: aload_0
      21: getfield      #34                 // Field whitespace:Z
      24: ifne          47
      27: aload_0
      28: dup
      29: getfield      #7                  // Field column:I
      32: iconst_1
      33: iadd
      34: putfield      #7                  // Field column:I
      37: aload_0
      38: getfield      #24                 // Field stream:Ljava/io/Writer;
      41: getstatic     #213                // Field SPACE:[C
      44: invokevirtual #214                // Method java/io/Writer.write:([C)V
      47: aload_0
      48: iconst_0
      49: putfield      #34                 // Field whitespace:Z
      52: aload_0
      53: iconst_0
      54: putfield      #35                 // Field indention:Z
      57: iconst_0
      58: istore_3
      59: iconst_0
      60: istore        4
      62: iconst_0
      63: istore        5
      65: iconst_0
      66: istore        6
      68: iload         6
      70: aload_1
      71: invokevirtual #133                // Method java/lang/String.length:()I
      74: if_icmpgt     389
      77: iconst_0
      78: istore        7
      80: iload         6
      82: aload_1
      83: invokevirtual #133                // Method java/lang/String.length:()I
      86: if_icmpge     97
      89: aload_1
      90: iload         6
      92: invokevirtual #171                // Method java/lang/String.charAt:(I)C
      95: istore        7
      97: iload_3
      98: ifeq          186
     101: iload         7
     103: bipush        32
     105: if_icmpeq     355
     108: iload         5
     110: iconst_1
     111: iadd
     112: iload         6
     114: if_icmpne     149
     117: aload_0
     118: getfield      #7                  // Field column:I
     121: aload_0
     122: getfield      #6                  // Field bestWidth:I
     125: if_icmple     149
     128: iload_2
     129: ifeq          149
     132: aload_0
     133: invokevirtual #117                // Method writeIndent:()V
     136: aload_0
     137: iconst_0
     138: putfield      #34                 // Field whitespace:Z
     141: aload_0
     142: iconst_0
     143: putfield      #35                 // Field indention:Z
     146: goto          179
     149: iload         6
     151: iload         5
     153: isub
     154: istore        8
     156: aload_0
     157: dup
     158: getfield      #7                  // Field column:I
     161: iload         8
     163: iadd
     164: putfield      #7                  // Field column:I
     167: aload_0
     168: getfield      #24                 // Field stream:Ljava/io/Writer;
     171: aload_1
     172: iload         5
     174: iload         8
     176: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     179: iload         6
     181: istore        5
     183: goto          355
     186: iload         4
     188: ifeq          308
     191: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     194: iload         7
     196: invokevirtual #221                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     199: ifeq          355
     202: aload_1
     203: iload         5
     205: invokevirtual #171                // Method java/lang/String.charAt:(I)C
     208: bipush        10
     210: if_icmpne     218
     213: aload_0
     214: aconst_null
     215: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     218: aload_1
     219: iload         5
     221: iload         6
     223: invokevirtual #179                // Method java/lang/String.substring:(II)Ljava/lang/String;
     226: astore        8
     228: aload         8
     230: invokevirtual #48                 // Method java/lang/String.toCharArray:()[C
     233: astore        9
     235: aload         9
     237: arraylength
     238: istore        10
     240: iconst_0
     241: istore        11
     243: iload         11
     245: iload         10
     247: if_icmpge     287
     250: aload         9
     252: iload         11
     254: caload
     255: istore        12
     257: iload         12
     259: bipush        10
     261: if_icmpne     272
     264: aload_0
     265: aconst_null
     266: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     269: goto          281
     272: aload_0
     273: iload         12
     275: invokestatic  #222                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     278: invokespecial #216                // Method writeLineBreak:(Ljava/lang/String;)V
     281: iinc          11, 1
     284: goto          243
     287: aload_0
     288: invokevirtual #117                // Method writeIndent:()V
     291: aload_0
     292: iconst_0
     293: putfield      #34                 // Field whitespace:Z
     296: aload_0
     297: iconst_0
     298: putfield      #35                 // Field indention:Z
     301: iload         6
     303: istore        5
     305: goto          355
     308: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     311: iload         7
     313: ldc           #250                // String \u0000
     315: invokevirtual #224                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
     318: ifeq          355
     321: iload         6
     323: iload         5
     325: isub
     326: istore        8
     328: aload_0
     329: dup
     330: getfield      #7                  // Field column:I
     333: iload         8
     335: iadd
     336: putfield      #7                  // Field column:I
     339: aload_0
     340: getfield      #24                 // Field stream:Ljava/io/Writer;
     343: aload_1
     344: iload         5
     346: iload         8
     348: invokevirtual #220                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     351: iload         6
     353: istore        5
     355: iload         7
     357: ifeq          383
     360: iload         7
     362: bipush        32
     364: if_icmpne     371
     367: iconst_1
     368: goto          372
     371: iconst_0
     372: istore_3
     373: getstatic     #203                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     376: iload         7
     378: invokevirtual #199                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     381: istore        4
     383: iinc          6, 1
     386: goto          68
     389: return

  static org.yaml.snakeyaml.events.Event access$100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #22                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: areturn

  static org.yaml.snakeyaml.emitter.EmitterState access$202(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.emitter.EmitterState);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #21                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
       6: areturn

  static boolean access$400(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #20                 // Field openEnded:Z
       4: ireturn

  static java.lang.String access$500(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.DumperOptions$Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method prepareVersion:(Lorg/yaml/snakeyaml/DumperOptions$Version;)Ljava/lang/String;
       5: areturn

  static java.util.Map access$602(org.yaml.snakeyaml.emitter.Emitter, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #18                 // Field tagPrefixes:Ljava/util/Map;
       6: areturn

  static java.util.Map access$700();
    Code:
       0: getstatic     #17                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
       3: areturn

  static java.util.Map access$600(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #18                 // Field tagPrefixes:Ljava/util/Map;
       4: areturn

  static java.lang.String access$800(org.yaml.snakeyaml.emitter.Emitter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method prepareTagHandle:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.lang.String access$900(org.yaml.snakeyaml.emitter.Emitter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method prepareTagPrefix:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.lang.Boolean access$1000(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #14                 // Field canonical:Ljava/lang/Boolean;
       4: areturn

  static boolean access$1100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method checkEmptyDocument:()Z
       4: ireturn

  static org.yaml.snakeyaml.util.ArrayStack access$1500(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
       4: areturn

  static void access$1600(org.yaml.snakeyaml.emitter.Emitter, boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #11                 // Method expectNode:(ZZZ)V
       7: return

  static java.lang.Integer access$1802(org.yaml.snakeyaml.emitter.Emitter, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #10                 // Field indent:Ljava/lang/Integer;
       6: areturn

  static org.yaml.snakeyaml.util.ArrayStack access$1900(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #9                  // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
       4: areturn

  static int access$2010(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field flowLevel:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #8                  // Field flowLevel:I
      11: ireturn

  static int access$2100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #7                  // Field column:I
       4: ireturn

  static int access$2200(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bestWidth:I
       4: ireturn

  static boolean access$2300(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field splitLines:Z
       4: ireturn

  static java.lang.Boolean access$2400(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prettyFlow:Ljava/lang/Boolean;
       4: areturn

  static boolean access$2700(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method checkSimpleKey:()Z
       4: ireturn

  static int access$3200(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field indicatorIndent:I
       4: ireturn

  static void access$3300(org.yaml.snakeyaml.emitter.Emitter, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method writeWhitespace:(I)V
       5: return

  static {};
    Code:
       0: new           #252                // class java/util/HashMap
       3: dup
       4: invokespecial #253                // Method java/util/HashMap."<init>":()V
       7: putstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
      10: iconst_1
      11: newarray       char
      13: dup
      14: iconst_0
      15: bipush        32
      17: castore
      18: putstatic     #213                // Field SPACE:[C
      21: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
      24: iconst_0
      25: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      28: ldc           #234                // String 0
      30: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
      39: bipush        7
      41: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      44: ldc           #255                // String a
      46: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
      55: bipush        8
      57: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      60: ldc_w         #256                // String b
      63: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
      72: bipush        9
      74: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      77: ldc_w         #257                // String t
      80: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
      89: bipush        10
      91: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      94: ldc_w         #258                // String n
      97: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     106: bipush        11
     108: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     111: ldc_w         #259                // String v
     114: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     123: bipush        12
     125: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     128: ldc_w         #260                // String f
     131: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     136: pop
     137: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     140: bipush        13
     142: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     145: ldc_w         #261                // String r
     148: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     157: bipush        27
     159: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     162: ldc_w         #262                // String e
     165: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     174: bipush        34
     176: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     179: ldc           #226                // String \"
     181: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     186: pop
     187: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     190: bipush        92
     192: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     195: ldc           #232                // String \\
     197: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     202: pop
     203: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     206: sipush        133
     209: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     212: ldc_w         #263                // String N
     215: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     220: pop
     221: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     224: sipush        160
     227: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     230: ldc_w         #264                // String _
     233: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     238: pop
     239: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     242: sipush        8232
     245: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     248: ldc_w         #265                // String L
     251: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     256: pop
     257: getstatic     #230                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     260: sipush        8233
     263: invokestatic  #227                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     266: ldc_w         #266                // String P
     269: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     274: pop
     275: new           #53                 // class java/util/LinkedHashMap
     278: dup
     279: invokespecial #54                 // Method java/util/LinkedHashMap."<init>":()V
     282: putstatic     #17                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
     285: getstatic     #17                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
     288: ldc           #144                // String !
     290: ldc           #144                // String !
     292: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     297: pop
     298: getstatic     #17                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
     301: ldc_w         #268                // String tag:yaml.org,2002:
     304: ldc_w         #269                // String !!
     307: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     312: pop
     313: ldc_w         #270                // String ^![-_\\w]*!$
     316: invokestatic  #271                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     319: putstatic     #174                // Field HANDLE_FORMAT:Ljava/util/regex/Pattern;
     322: ldc_w         #272                // String ^[-_\\w]*$
     325: invokestatic  #271                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     328: putstatic     #191                // Field ANCHOR_FORMAT:Ljava/util/regex/Pattern;
     331: return
}
