Compiled from "Node.java"
public abstract class org.yaml.snakeyaml.nodes.Node {
  private org.yaml.snakeyaml.nodes.Tag tag;

  private org.yaml.snakeyaml.error.Mark startMark;

  protected org.yaml.snakeyaml.error.Mark endMark;

  private java.lang.Class<? extends java.lang.Object> type;

  private boolean twoStepsConstruction;

  private java.lang.String anchor;

  protected boolean resolved;

  protected java.lang.Boolean useClassConstructor;

  public org.yaml.snakeyaml.nodes.Node(org.yaml.snakeyaml.nodes.Tag, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.error.Mark);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field startMark:Lorg/yaml/snakeyaml/error/Mark;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field endMark:Lorg/yaml/snakeyaml/error/Mark;
      19: aload_0
      20: ldc           #5                  // class java/lang/Object
      22: putfield      #6                  // Field type:Ljava/lang/Class;
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field twoStepsConstruction:Z
      30: aload_0
      31: iconst_1
      32: putfield      #8                  // Field resolved:Z
      35: aload_0
      36: aconst_null
      37: putfield      #9                  // Field useClassConstructor:Ljava/lang/Boolean;
      40: return

  public org.yaml.snakeyaml.nodes.Tag getTag();
    Code:
       0: aload_0
       1: getfield      #10                 // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
       4: areturn

  public org.yaml.snakeyaml.error.Mark getEndMark();
    Code:
       0: aload_0
       1: getfield      #4                  // Field endMark:Lorg/yaml/snakeyaml/error/Mark;
       4: areturn

  public abstract org.yaml.snakeyaml.nodes.NodeId getNodeId();

  public org.yaml.snakeyaml.error.Mark getStartMark();
    Code:
       0: aload_0
       1: getfield      #3                  // Field startMark:Lorg/yaml/snakeyaml/error/Mark;
       4: areturn

  public void setTag(org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #11                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #12                 // String tag in a Node is required.
      10: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #10                 // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
      19: return

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Class<? extends java.lang.Object> getType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field type:Ljava/lang/Class;
       4: areturn

  public void setType(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field type:Ljava/lang/Class;
       5: invokevirtual #15                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifne          16
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field type:Ljava/lang/Class;
      16: return

  public void setTwoStepsConstruction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field twoStepsConstruction:Z
       5: return

  public boolean isTwoStepsConstruction();
    Code:
       0: aload_0
       1: getfield      #7                  // Field twoStepsConstruction:Z
       4: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public boolean useClassConstructor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field useClassConstructor:Ljava/lang/Boolean;
       4: ifnonnull     69
       7: aload_0
       8: getfield      #10                 // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
      11: invokevirtual #17                 // Method org/yaml/snakeyaml/nodes/Tag.isSecondary:()Z
      14: ifne          51
      17: aload_0
      18: getfield      #8                  // Field resolved:Z
      21: ifeq          51
      24: ldc           #5                  // class java/lang/Object
      26: aload_0
      27: getfield      #6                  // Field type:Ljava/lang/Class;
      30: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifne          51
      36: aload_0
      37: getfield      #10                 // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
      40: getstatic     #18                 // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      43: invokevirtual #19                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      46: ifne          51
      49: iconst_1
      50: ireturn
      51: aload_0
      52: getfield      #10                 // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
      55: aload_0
      56: invokevirtual #20                 // Method getType:()Ljava/lang/Class;
      59: invokevirtual #21                 // Method org/yaml/snakeyaml/nodes/Tag.isCompatible:(Ljava/lang/Class;)Z
      62: ifeq          67
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #9                  // Field useClassConstructor:Ljava/lang/Boolean;
      73: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      76: ireturn

  public void setUseClassConstructor(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field useClassConstructor:Ljava/lang/Boolean;
       5: return

  public boolean isResolved();
    Code:
       0: aload_0
       1: getfield      #8                  // Field resolved:Z
       4: ireturn

  public java.lang.String getAnchor();
    Code:
       0: aload_0
       1: getfield      #23                 // Field anchor:Ljava/lang/String;
       4: areturn

  public void setAnchor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field anchor:Ljava/lang/String;
       5: return
}
