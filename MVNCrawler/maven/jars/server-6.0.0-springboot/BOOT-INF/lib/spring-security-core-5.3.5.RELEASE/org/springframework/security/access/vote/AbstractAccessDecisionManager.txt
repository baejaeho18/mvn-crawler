Compiled from "AbstractAccessDecisionManager.java"
public abstract class org.springframework.security.access.vote.AbstractAccessDecisionManager implements org.springframework.security.access.AccessDecisionManager,org.springframework.beans.factory.InitializingBean,org.springframework.context.MessageSourceAware {
  protected final org.apache.commons.logging.Log logger;

  private java.util.List<org.springframework.security.access.AccessDecisionVoter<?>> decisionVoters;

  protected org.springframework.context.support.MessageSourceAccessor messages;

  private boolean allowIfAllAbstainDecisions;

  protected org.springframework.security.access.vote.AbstractAccessDecisionManager(java.util.List<org.springframework.security.access.AccessDecisionVoter<?>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method org/springframework/security/core/SpringSecurityMessageSource.getAccessor:()Lorg/springframework/context/support/MessageSourceAccessor;
      19: putfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field allowIfAllAbstainDecisions:Z
      27: aload_1
      28: ldc           #8                  // String A list of AccessDecisionVoters is required
      30: invokestatic  #9                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      33: aload_0
      34: aload_1
      35: putfield      #10                 // Field decisionVoters:Ljava/util/List;
      38: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #10                 // Field decisionVoters:Ljava/util/List;
       4: ldc           #8                  // String A list of AccessDecisionVoters is required
       6: invokestatic  #9                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      13: ldc           #11                 // String A message source must be set
      15: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: return

  protected final void checkAllowIfAllAbstainDecisions();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isAllowIfAllAbstainDecisions:()Z
       4: ifne          26
       7: new           #14                 // class org/springframework/security/access/AccessDeniedException
      10: dup
      11: aload_0
      12: getfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      15: ldc           #15                 // String AbstractAccessDecisionManager.accessDenied
      17: ldc           #16                 // String Access is denied
      19: invokevirtual #17                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      22: invokespecial #18                 // Method org/springframework/security/access/AccessDeniedException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: return

  public java.util.List<org.springframework.security.access.AccessDecisionVoter<?>> getDecisionVoters();
    Code:
       0: aload_0
       1: getfield      #10                 // Field decisionVoters:Ljava/util/List;
       4: areturn

  public boolean isAllowIfAllAbstainDecisions();
    Code:
       0: aload_0
       1: getfield      #7                  // Field allowIfAllAbstainDecisions:Z
       4: ireturn

  public void setAllowIfAllAbstainDecisions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field allowIfAllAbstainDecisions:Z
       5: return

  public void setMessageSource(org.springframework.context.MessageSource);
    Code:
       0: aload_0
       1: new           #19                 // class org/springframework/context/support/MessageSourceAccessor
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method org/springframework/context/support/MessageSourceAccessor."<init>":(Lorg/springframework/context/MessageSource;)V
       9: putfield      #6                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      12: return

  public boolean supports(org.springframework.security.access.ConfigAttribute);
    Code:
       0: aload_0
       1: getfield      #10                 // Field decisionVoters:Ljava/util/List;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          44
      19: aload_2
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #24                 // class org/springframework/security/access/AccessDecisionVoter
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #25,  2           // InterfaceMethod org/springframework/security/access/AccessDecisionVoter.supports:(Lorg/springframework/security/access/ConfigAttribute;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          10
      44: iconst_0
      45: ireturn

  public boolean supports(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field decisionVoters:Ljava/util/List;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          44
      19: aload_2
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #24                 // class org/springframework/security/access/AccessDecisionVoter
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #26,  2           // InterfaceMethod org/springframework/security/access/AccessDecisionVoter.supports:(Ljava/lang/Class;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: goto          10
      44: iconst_1
      45: ireturn
}
