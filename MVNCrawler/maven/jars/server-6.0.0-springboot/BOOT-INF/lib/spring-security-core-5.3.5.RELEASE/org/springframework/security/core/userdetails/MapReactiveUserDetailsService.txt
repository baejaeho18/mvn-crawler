Compiled from "MapReactiveUserDetailsService.java"
public class org.springframework.security.core.userdetails.MapReactiveUserDetailsService implements org.springframework.security.core.userdetails.ReactiveUserDetailsService,org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService {
  private final java.util.Map<java.lang.String, org.springframework.security.core.userdetails.UserDetails> users;

  public org.springframework.security.core.userdetails.MapReactiveUserDetailsService(java.util.Map<java.lang.String, org.springframework.security.core.userdetails.UserDetails>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field users:Ljava/util/Map;
       9: return

  public org.springframework.security.core.userdetails.MapReactiveUserDetailsService(org.springframework.security.core.userdetails.UserDetails...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #4                  // Method "<init>":(Ljava/util/Collection;)V
       8: return

  public org.springframework.security.core.userdetails.MapReactiveUserDetailsService(java.util.Collection<org.springframework.security.core.userdetails.UserDetails>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String users cannot be null or empty
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      10: aload_0
      11: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      14: dup
      15: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      18: putfield      #2                  // Field users:Ljava/util/Map;
      21: aload_1
      22: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          71
      37: aload_2
      38: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #12                 // class org/springframework/security/core/userdetails/UserDetails
      46: astore_3
      47: aload_0
      48: getfield      #2                  // Field users:Ljava/util/Map;
      51: aload_0
      52: aload_3
      53: invokeinterface #13,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
      58: invokespecial #14                 // Method getKey:(Ljava/lang/String;)Ljava/lang/String;
      61: aload_3
      62: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: goto          28
      71: return

  public reactor.core.publisher.Mono<org.springframework.security.core.userdetails.UserDetails> findByUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getKey:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field users:Ljava/util/Map;
      10: aload_2
      11: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #12                 // class org/springframework/security/core/userdetails/UserDetails
      19: astore_3
      20: aload_3
      21: ifnonnull     30
      24: invokestatic  #17                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      27: goto          40
      30: aload_3
      31: invokestatic  #18                 // Method org/springframework/security/core/userdetails/User.withUserDetails:(Lorg/springframework/security/core/userdetails/UserDetails;)Lorg/springframework/security/core/userdetails/User$UserBuilder;
      34: invokevirtual #19                 // Method org/springframework/security/core/userdetails/User$UserBuilder.build:()Lorg/springframework/security/core/userdetails/UserDetails;
      37: invokestatic  #20                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      40: areturn

  public reactor.core.publisher.Mono<org.springframework.security.core.userdetails.UserDetails> updatePassword(org.springframework.security.core.userdetails.UserDetails, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       4: aload_2
       5: invokedynamic #21,  0             // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      10: invokevirtual #22                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      13: aload_0
      14: aload_1
      15: invokedynamic #23,  0             // InvokeDynamic #1:accept:(Lorg/springframework/security/core/userdetails/MapReactiveUserDetailsService;Lorg/springframework/security/core/userdetails/UserDetails;)Ljava/util/function/Consumer;
      20: invokevirtual #24                 // Method reactor/core/publisher/Mono.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      23: areturn

  private java.lang.String getKey(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: areturn

  private void lambda$updatePassword$1(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
       7: invokespecial #14                 // Method getKey:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: getfield      #2                  // Field users:Ljava/util/Map;
      15: aload_3
      16: aload_2
      17: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return

  private static org.springframework.security.core.userdetails.UserDetails lambda$updatePassword$0(java.lang.String, org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method org/springframework/security/core/userdetails/User.withUserDetails:(Lorg/springframework/security/core/userdetails/UserDetails;)Lorg/springframework/security/core/userdetails/User$UserBuilder;
       4: aload_0
       5: invokevirtual #26                 // Method org/springframework/security/core/userdetails/User$UserBuilder.password:(Ljava/lang/String;)Lorg/springframework/security/core/userdetails/User$UserBuilder;
       8: invokevirtual #19                 // Method org/springframework/security/core/userdetails/User$UserBuilder.build:()Lorg/springframework/security/core/userdetails/UserDetails;
      11: areturn
}
