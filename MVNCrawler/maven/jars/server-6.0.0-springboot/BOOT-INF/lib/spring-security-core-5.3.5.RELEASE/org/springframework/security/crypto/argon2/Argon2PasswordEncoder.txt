Compiled from "Argon2PasswordEncoder.java"
public class org.springframework.security.crypto.argon2.Argon2PasswordEncoder implements org.springframework.security.crypto.password.PasswordEncoder {
  private static final int DEFAULT_SALT_LENGTH;

  private static final int DEFAULT_HASH_LENGTH;

  private static final int DEFAULT_PARALLELISM;

  private static final int DEFAULT_MEMORY;

  private static final int DEFAULT_ITERATIONS;

  private final org.apache.commons.logging.Log logger;

  private final int hashLength;

  private final int parallelism;

  private final int memory;

  private final int iterations;

  private final org.springframework.security.crypto.keygen.BytesKeyGenerator saltGenerator;

  public org.springframework.security.crypto.argon2.Argon2PasswordEncoder(int, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iload_2
      17: putfield      #5                  // Field hashLength:I
      20: aload_0
      21: iload_3
      22: putfield      #6                  // Field parallelism:I
      25: aload_0
      26: iload         4
      28: putfield      #7                  // Field memory:I
      31: aload_0
      32: iload         5
      34: putfield      #8                  // Field iterations:I
      37: aload_0
      38: iload_1
      39: invokestatic  #9                  // Method org/springframework/security/crypto/keygen/KeyGenerators.secureRandom:(I)Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
      42: putfield      #10                 // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
      45: return

  public org.springframework.security.crypto.argon2.Argon2PasswordEncoder();
    Code:
       0: aload_0
       1: bipush        16
       3: bipush        32
       5: iconst_1
       6: sipush        4096
       9: iconst_3
      10: invokespecial #12                 // Method "<init>":(IIIII)V
      13: return

  public java.lang.String encode(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #10                 // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       4: invokeinterface #13,  1           // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.generateKey:()[B
       9: astore_2
      10: aload_0
      11: getfield      #5                  // Field hashLength:I
      14: newarray       byte
      16: astore_3
      17: new           #14                 // class org/bouncycastle/crypto/params/Argon2Parameters$Builder
      20: dup
      21: iconst_2
      22: invokespecial #16                 // Method org/bouncycastle/crypto/params/Argon2Parameters$Builder."<init>":(I)V
      25: aload_2
      26: invokevirtual #17                 // Method org/bouncycastle/crypto/params/Argon2Parameters$Builder.withSalt:([B)Lorg/bouncycastle/crypto/params/Argon2Parameters$Builder;
      29: aload_0
      30: getfield      #6                  // Field parallelism:I
      33: invokevirtual #18                 // Method org/bouncycastle/crypto/params/Argon2Parameters$Builder.withParallelism:(I)Lorg/bouncycastle/crypto/params/Argon2Parameters$Builder;
      36: aload_0
      37: getfield      #7                  // Field memory:I
      40: invokevirtual #19                 // Method org/bouncycastle/crypto/params/Argon2Parameters$Builder.withMemoryAsKB:(I)Lorg/bouncycastle/crypto/params/Argon2Parameters$Builder;
      43: aload_0
      44: getfield      #8                  // Field iterations:I
      47: invokevirtual #20                 // Method org/bouncycastle/crypto/params/Argon2Parameters$Builder.withIterations:(I)Lorg/bouncycastle/crypto/params/Argon2Parameters$Builder;
      50: invokevirtual #21                 // Method org/bouncycastle/crypto/params/Argon2Parameters$Builder.build:()Lorg/bouncycastle/crypto/params/Argon2Parameters;
      53: astore        4
      55: new           #22                 // class org/bouncycastle/crypto/generators/Argon2BytesGenerator
      58: dup
      59: invokespecial #23                 // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator."<init>":()V
      62: astore        5
      64: aload         5
      66: aload         4
      68: invokevirtual #24                 // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator.init:(Lorg/bouncycastle/crypto/params/Argon2Parameters;)V
      71: aload         5
      73: aload_1
      74: invokeinterface #25,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      79: invokevirtual #26                 // Method java/lang/String.toCharArray:()[C
      82: aload_3
      83: invokevirtual #27                 // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator.generateBytes:([C[B)I
      86: pop
      87: aload_3
      88: aload         4
      90: invokestatic  #28                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils.encode:([BLorg/bouncycastle/crypto/params/Argon2Parameters;)Ljava/lang/String;
      93: areturn

  public boolean matches(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       8: ldc           #29                 // String password hash is null
      10: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      15: iconst_0
      16: ireturn
      17: aload_2
      18: invokestatic  #31                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils.decode:(Ljava/lang/String;)Lorg/springframework/security/crypto/argon2/Argon2EncodingUtils$Argon2Hash;
      21: astore_3
      22: goto          42
      25: astore        4
      27: aload_0
      28: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      31: ldc           #33                 // String Malformed password hash
      33: aload         4
      35: invokeinterface #34,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: iconst_0
      41: ireturn
      42: aload_3
      43: invokevirtual #35                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils$Argon2Hash.getHash:()[B
      46: arraylength
      47: newarray       byte
      49: astore        4
      51: new           #22                 // class org/bouncycastle/crypto/generators/Argon2BytesGenerator
      54: dup
      55: invokespecial #23                 // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator."<init>":()V
      58: astore        5
      60: aload         5
      62: aload_3
      63: invokevirtual #36                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils$Argon2Hash.getParameters:()Lorg/bouncycastle/crypto/params/Argon2Parameters;
      66: invokevirtual #24                 // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator.init:(Lorg/bouncycastle/crypto/params/Argon2Parameters;)V
      69: aload         5
      71: aload_1
      72: invokeinterface #25,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      77: invokevirtual #26                 // Method java/lang/String.toCharArray:()[C
      80: aload         4
      82: invokevirtual #27                 // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator.generateBytes:([C[B)I
      85: pop
      86: aload_3
      87: invokevirtual #35                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils$Argon2Hash.getHash:()[B
      90: aload         4
      92: invokestatic  #37                 // Method constantTimeArrayEquals:([B[B)Z
      95: ireturn
    Exception table:
       from    to  target type
          17    22    25   Class java/lang/IllegalArgumentException

  public boolean upgradeEncoding(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #38                 // Method java/lang/String.length:()I
       8: ifne          24
      11: aload_0
      12: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: ldc           #29                 // String password hash is null
      17: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      22: iconst_0
      23: ireturn
      24: aload_1
      25: invokestatic  #31                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils.decode:(Ljava/lang/String;)Lorg/springframework/security/crypto/argon2/Argon2EncodingUtils$Argon2Hash;
      28: invokevirtual #36                 // Method org/springframework/security/crypto/argon2/Argon2EncodingUtils$Argon2Hash.getParameters:()Lorg/bouncycastle/crypto/params/Argon2Parameters;
      31: astore_2
      32: aload_2
      33: invokevirtual #39                 // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
      36: aload_0
      37: getfield      #7                  // Field memory:I
      40: if_icmplt     54
      43: aload_2
      44: invokevirtual #40                 // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      47: aload_0
      48: getfield      #8                  // Field iterations:I
      51: if_icmpge     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  private static boolean constantTimeArrayEquals(byte[], byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: aload_1
       3: arraylength
       4: if_icmpeq     9
       7: iconst_0
       8: ireturn
       9: iconst_0
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: arraylength
      16: if_icmpge     35
      19: iload_2
      20: aload_0
      21: iload_3
      22: baload
      23: aload_1
      24: iload_3
      25: baload
      26: ixor
      27: ior
      28: istore_2
      29: iinc          3, 1
      32: goto          13
      35: iload_2
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
}
