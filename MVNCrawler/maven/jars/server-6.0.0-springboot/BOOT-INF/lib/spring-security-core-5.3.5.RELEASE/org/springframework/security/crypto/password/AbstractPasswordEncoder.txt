Compiled from "AbstractPasswordEncoder.java"
public abstract class org.springframework.security.crypto.password.AbstractPasswordEncoder implements org.springframework.security.crypto.password.PasswordEncoder {
  private final org.springframework.security.crypto.keygen.BytesKeyGenerator saltGenerator;

  protected org.springframework.security.crypto.password.AbstractPasswordEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/springframework/security/crypto/keygen/KeyGenerators.secureRandom:()Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       8: putfield      #3                  // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
      11: return

  public java.lang.String encode(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #3                  // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       4: invokeinterface #4,  1            // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.generateKey:()[B
       9: astore_2
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #5                  // Method encodeAndConcatenate:(Ljava/lang/CharSequence;[B)[B
      16: astore_3
      17: aload_3
      18: invokestatic  #6                  // Method org/springframework/security/crypto/codec/Hex.encode:([B)[C
      21: invokestatic  #7                  // Method java/lang/String.valueOf:([C)Ljava/lang/String;
      24: areturn

  public boolean matches(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #8                  // Method org/springframework/security/crypto/codec/Hex.decode:(Ljava/lang/CharSequence;)[B
       4: astore_3
       5: aload_3
       6: iconst_0
       7: aload_0
       8: getfield      #3                  // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
      11: invokeinterface #9,  1            // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.getKeyLength:()I
      16: invokestatic  #10                 // Method org/springframework/security/crypto/util/EncodingUtils.subArray:([BII)[B
      19: astore        4
      21: aload_3
      22: aload_0
      23: aload_1
      24: aload         4
      26: invokevirtual #5                  // Method encodeAndConcatenate:(Ljava/lang/CharSequence;[B)[B
      29: invokestatic  #11                 // Method matches:([B[B)Z
      32: ireturn

  protected abstract byte[] encode(java.lang.CharSequence, byte[]);

  protected byte[] encodeAndConcatenate(java.lang.CharSequence, byte[]);
    Code:
       0: iconst_2
       1: anewarray     #12                 // class "[B"
       4: dup
       5: iconst_0
       6: aload_2
       7: aastore
       8: dup
       9: iconst_1
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #13                 // Method encode:(Ljava/lang/CharSequence;[B)[B
      16: aastore
      17: invokestatic  #14                 // Method org/springframework/security/crypto/util/EncodingUtils.concatenate:([[B)[B
      20: areturn

  protected static boolean matches(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method java/security/MessageDigest.isEqual:([B[B)Z
       5: ireturn
}
