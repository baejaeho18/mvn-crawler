Compiled from "ConsensusBased.java"
public class org.springframework.security.access.vote.ConsensusBased extends org.springframework.security.access.vote.AbstractAccessDecisionManager {
  private boolean allowIfEqualGrantedDeniedDecisions;

  public org.springframework.security.access.vote.ConsensusBased(java.util.List<org.springframework.security.access.AccessDecisionVoter<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/security/access/vote/AbstractAccessDecisionManager."<init>":(Ljava/util/List;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
      10: return

  public void decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection<org.springframework.security.access.ConfigAttribute>) throws org.springframework.security.access.AccessDeniedException;
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: aload_0
       7: invokevirtual #3                  // Method getDecisionVoters:()Ljava/util/List;
      10: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore        6
      17: aload         6
      19: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          147
      27: aload         6
      29: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #7                  // class org/springframework/security/access/AccessDecisionVoter
      37: astore        7
      39: aload         7
      41: aload_1
      42: aload_2
      43: aload_3
      44: invokeinterface #8,  4            // InterfaceMethod org/springframework/security/access/AccessDecisionVoter.vote:(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)I
      49: istore        8
      51: aload_0
      52: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      55: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      60: ifeq          102
      63: aload_0
      64: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      67: new           #11                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #13                 // String Voter:
      76: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload         7
      81: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: ldc           #16                 // String , returned:
      86: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: iload         8
      91: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     102: iload         8
     104: lookupswitch  { // 2
                    -1: 138
                     1: 132
               default: 144
          }
     132: iinc          4, 1
     135: goto          144
     138: iinc          5, 1
     141: goto          144
     144: goto          17
     147: iload         4
     149: iload         5
     151: if_icmple     155
     154: return
     155: iload         5
     157: iload         4
     159: if_icmple     181
     162: new           #20                 // class org/springframework/security/access/AccessDeniedException
     165: dup
     166: aload_0
     167: getfield      #21                 // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
     170: ldc           #22                 // String AbstractAccessDecisionManager.accessDenied
     172: ldc           #23                 // String Access is denied
     174: invokevirtual #24                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     177: invokespecial #25                 // Method org/springframework/security/access/AccessDeniedException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: iload         4
     183: iload         5
     185: if_icmpne     220
     188: iload         4
     190: ifeq          220
     193: aload_0
     194: getfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
     197: ifeq          201
     200: return
     201: new           #20                 // class org/springframework/security/access/AccessDeniedException
     204: dup
     205: aload_0
     206: getfield      #21                 // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
     209: ldc           #22                 // String AbstractAccessDecisionManager.accessDenied
     211: ldc           #23                 // String Access is denied
     213: invokevirtual #24                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     216: invokespecial #25                 // Method org/springframework/security/access/AccessDeniedException."<init>":(Ljava/lang/String;)V
     219: athrow
     220: aload_0
     221: invokevirtual #26                 // Method checkAllowIfAllAbstainDecisions:()V
     224: return

  public boolean isAllowIfEqualGrantedDeniedDecisions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
       4: ireturn

  public void setAllowIfEqualGrantedDeniedDecisions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
       5: return
}
