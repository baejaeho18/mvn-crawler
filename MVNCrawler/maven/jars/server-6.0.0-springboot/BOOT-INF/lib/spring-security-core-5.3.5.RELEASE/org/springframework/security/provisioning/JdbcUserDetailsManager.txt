Compiled from "JdbcUserDetailsManager.java"
public class org.springframework.security.provisioning.JdbcUserDetailsManager extends org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl implements org.springframework.security.provisioning.UserDetailsManager,org.springframework.security.provisioning.GroupManager {
  public static final java.lang.String DEF_CREATE_USER_SQL;

  public static final java.lang.String DEF_DELETE_USER_SQL;

  public static final java.lang.String DEF_UPDATE_USER_SQL;

  public static final java.lang.String DEF_INSERT_AUTHORITY_SQL;

  public static final java.lang.String DEF_DELETE_USER_AUTHORITIES_SQL;

  public static final java.lang.String DEF_USER_EXISTS_SQL;

  public static final java.lang.String DEF_CHANGE_PASSWORD_SQL;

  public static final java.lang.String DEF_FIND_GROUPS_SQL;

  public static final java.lang.String DEF_FIND_USERS_IN_GROUP_SQL;

  public static final java.lang.String DEF_INSERT_GROUP_SQL;

  public static final java.lang.String DEF_FIND_GROUP_ID_SQL;

  public static final java.lang.String DEF_INSERT_GROUP_AUTHORITY_SQL;

  public static final java.lang.String DEF_DELETE_GROUP_SQL;

  public static final java.lang.String DEF_DELETE_GROUP_AUTHORITIES_SQL;

  public static final java.lang.String DEF_DELETE_GROUP_MEMBERS_SQL;

  public static final java.lang.String DEF_RENAME_GROUP_SQL;

  public static final java.lang.String DEF_INSERT_GROUP_MEMBER_SQL;

  public static final java.lang.String DEF_DELETE_GROUP_MEMBER_SQL;

  public static final java.lang.String DEF_GROUP_AUTHORITIES_QUERY_SQL;

  public static final java.lang.String DEF_DELETE_GROUP_AUTHORITY_SQL;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String createUserSql;

  private java.lang.String deleteUserSql;

  private java.lang.String updateUserSql;

  private java.lang.String createAuthoritySql;

  private java.lang.String deleteUserAuthoritiesSql;

  private java.lang.String userExistsSql;

  private java.lang.String changePasswordSql;

  private java.lang.String findAllGroupsSql;

  private java.lang.String findUsersInGroupSql;

  private java.lang.String insertGroupSql;

  private java.lang.String findGroupIdSql;

  private java.lang.String insertGroupAuthoritySql;

  private java.lang.String deleteGroupSql;

  private java.lang.String deleteGroupAuthoritiesSql;

  private java.lang.String deleteGroupMembersSql;

  private java.lang.String renameGroupSql;

  private java.lang.String insertGroupMemberSql;

  private java.lang.String deleteGroupMemberSql;

  private java.lang.String groupAuthoritiesSql;

  private java.lang.String deleteGroupAuthoritySql;

  private org.springframework.security.authentication.AuthenticationManager authenticationManager;

  private org.springframework.security.core.userdetails.UserCache userCache;

  public org.springframework.security.provisioning.JdbcUserDetailsManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/core/userdetails/jdbc/JdbcDaoImpl."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #6                  // String insert into users (username, password, enabled) values (?,?,?)
      18: putfield      #7                  // Field createUserSql:Ljava/lang/String;
      21: aload_0
      22: ldc           #8                  // String delete from users where username = ?
      24: putfield      #9                  // Field deleteUserSql:Ljava/lang/String;
      27: aload_0
      28: ldc           #10                 // String update users set password = ?, enabled = ? where username = ?
      30: putfield      #11                 // Field updateUserSql:Ljava/lang/String;
      33: aload_0
      34: ldc           #12                 // String insert into authorities (username, authority) values (?,?)
      36: putfield      #13                 // Field createAuthoritySql:Ljava/lang/String;
      39: aload_0
      40: ldc           #14                 // String delete from authorities where username = ?
      42: putfield      #15                 // Field deleteUserAuthoritiesSql:Ljava/lang/String;
      45: aload_0
      46: ldc           #16                 // String select username from users where username = ?
      48: putfield      #17                 // Field userExistsSql:Ljava/lang/String;
      51: aload_0
      52: ldc           #18                 // String update users set password = ? where username = ?
      54: putfield      #19                 // Field changePasswordSql:Ljava/lang/String;
      57: aload_0
      58: ldc           #20                 // String select group_name from groups
      60: putfield      #21                 // Field findAllGroupsSql:Ljava/lang/String;
      63: aload_0
      64: ldc           #22                 // String select username from group_members gm, groups g where gm.group_id = g.id and g.group_name = ?
      66: putfield      #23                 // Field findUsersInGroupSql:Ljava/lang/String;
      69: aload_0
      70: ldc           #24                 // String insert into groups (group_name) values (?)
      72: putfield      #25                 // Field insertGroupSql:Ljava/lang/String;
      75: aload_0
      76: ldc           #26                 // String select id from groups where group_name = ?
      78: putfield      #27                 // Field findGroupIdSql:Ljava/lang/String;
      81: aload_0
      82: ldc           #28                 // String insert into group_authorities (group_id, authority) values (?,?)
      84: putfield      #29                 // Field insertGroupAuthoritySql:Ljava/lang/String;
      87: aload_0
      88: ldc           #30                 // String delete from groups where id = ?
      90: putfield      #31                 // Field deleteGroupSql:Ljava/lang/String;
      93: aload_0
      94: ldc           #32                 // String delete from group_authorities where group_id = ?
      96: putfield      #33                 // Field deleteGroupAuthoritiesSql:Ljava/lang/String;
      99: aload_0
     100: ldc           #34                 // String delete from group_members where group_id = ?
     102: putfield      #35                 // Field deleteGroupMembersSql:Ljava/lang/String;
     105: aload_0
     106: ldc           #36                 // String update groups set group_name = ? where group_name = ?
     108: putfield      #37                 // Field renameGroupSql:Ljava/lang/String;
     111: aload_0
     112: ldc           #38                 // String insert into group_members (group_id, username) values (?,?)
     114: putfield      #39                 // Field insertGroupMemberSql:Ljava/lang/String;
     117: aload_0
     118: ldc           #40                 // String delete from group_members where group_id = ? and username = ?
     120: putfield      #41                 // Field deleteGroupMemberSql:Ljava/lang/String;
     123: aload_0
     124: ldc           #42                 // String select g.id, g.group_name, ga.authority from groups g, group_authorities ga where g.group_name = ? and g.id = ga.group_id
     126: putfield      #43                 // Field groupAuthoritiesSql:Ljava/lang/String;
     129: aload_0
     130: ldc           #44                 // String delete from group_authorities where group_id = ? and authority = ?
     132: putfield      #45                 // Field deleteGroupAuthoritySql:Ljava/lang/String;
     135: aload_0
     136: new           #46                 // class org/springframework/security/core/userdetails/cache/NullUserCache
     139: dup
     140: invokespecial #47                 // Method org/springframework/security/core/userdetails/cache/NullUserCache."<init>":()V
     143: putfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
     146: return

  public org.springframework.security.provisioning.JdbcUserDetailsManager(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/core/userdetails/jdbc/JdbcDaoImpl."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #6                  // String insert into users (username, password, enabled) values (?,?,?)
      18: putfield      #7                  // Field createUserSql:Ljava/lang/String;
      21: aload_0
      22: ldc           #8                  // String delete from users where username = ?
      24: putfield      #9                  // Field deleteUserSql:Ljava/lang/String;
      27: aload_0
      28: ldc           #10                 // String update users set password = ?, enabled = ? where username = ?
      30: putfield      #11                 // Field updateUserSql:Ljava/lang/String;
      33: aload_0
      34: ldc           #12                 // String insert into authorities (username, authority) values (?,?)
      36: putfield      #13                 // Field createAuthoritySql:Ljava/lang/String;
      39: aload_0
      40: ldc           #14                 // String delete from authorities where username = ?
      42: putfield      #15                 // Field deleteUserAuthoritiesSql:Ljava/lang/String;
      45: aload_0
      46: ldc           #16                 // String select username from users where username = ?
      48: putfield      #17                 // Field userExistsSql:Ljava/lang/String;
      51: aload_0
      52: ldc           #18                 // String update users set password = ? where username = ?
      54: putfield      #19                 // Field changePasswordSql:Ljava/lang/String;
      57: aload_0
      58: ldc           #20                 // String select group_name from groups
      60: putfield      #21                 // Field findAllGroupsSql:Ljava/lang/String;
      63: aload_0
      64: ldc           #22                 // String select username from group_members gm, groups g where gm.group_id = g.id and g.group_name = ?
      66: putfield      #23                 // Field findUsersInGroupSql:Ljava/lang/String;
      69: aload_0
      70: ldc           #24                 // String insert into groups (group_name) values (?)
      72: putfield      #25                 // Field insertGroupSql:Ljava/lang/String;
      75: aload_0
      76: ldc           #26                 // String select id from groups where group_name = ?
      78: putfield      #27                 // Field findGroupIdSql:Ljava/lang/String;
      81: aload_0
      82: ldc           #28                 // String insert into group_authorities (group_id, authority) values (?,?)
      84: putfield      #29                 // Field insertGroupAuthoritySql:Ljava/lang/String;
      87: aload_0
      88: ldc           #30                 // String delete from groups where id = ?
      90: putfield      #31                 // Field deleteGroupSql:Ljava/lang/String;
      93: aload_0
      94: ldc           #32                 // String delete from group_authorities where group_id = ?
      96: putfield      #33                 // Field deleteGroupAuthoritiesSql:Ljava/lang/String;
      99: aload_0
     100: ldc           #34                 // String delete from group_members where group_id = ?
     102: putfield      #35                 // Field deleteGroupMembersSql:Ljava/lang/String;
     105: aload_0
     106: ldc           #36                 // String update groups set group_name = ? where group_name = ?
     108: putfield      #37                 // Field renameGroupSql:Ljava/lang/String;
     111: aload_0
     112: ldc           #38                 // String insert into group_members (group_id, username) values (?,?)
     114: putfield      #39                 // Field insertGroupMemberSql:Ljava/lang/String;
     117: aload_0
     118: ldc           #40                 // String delete from group_members where group_id = ? and username = ?
     120: putfield      #41                 // Field deleteGroupMemberSql:Ljava/lang/String;
     123: aload_0
     124: ldc           #42                 // String select g.id, g.group_name, ga.authority from groups g, group_authorities ga where g.group_name = ? and g.id = ga.group_id
     126: putfield      #43                 // Field groupAuthoritiesSql:Ljava/lang/String;
     129: aload_0
     130: ldc           #44                 // String delete from group_authorities where group_id = ? and authority = ?
     132: putfield      #45                 // Field deleteGroupAuthoritySql:Ljava/lang/String;
     135: aload_0
     136: new           #46                 // class org/springframework/security/core/userdetails/cache/NullUserCache
     139: dup
     140: invokespecial #47                 // Method org/springframework/security/core/userdetails/cache/NullUserCache."<init>":()V
     143: putfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
     146: aload_0
     147: aload_1
     148: invokevirtual #49                 // Method setDataSource:(Ljavax/sql/DataSource;)V
     151: return

  protected void initDao() throws org.springframework.context.ApplicationContextException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field authenticationManager:Lorg/springframework/security/authentication/AuthenticationManager;
       4: ifnonnull     18
       7: aload_0
       8: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: ldc           #51                 // String No authentication manager set. Reauthentication of users when changing passwords will not be performed.
      13: invokeinterface #52,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #53                 // Method org/springframework/security/core/userdetails/jdbc/JdbcDaoImpl.initDao:()V
      22: return

  protected java.util.List<org.springframework.security.core.userdetails.UserDetails> loadUsersByUsername(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: invokevirtual #55                 // Method getUsersByUsernameQuery:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #56                 // class java/lang/String
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokedynamic #57,  0             // InvokeDynamic #0:mapRow:()Lorg/springframework/jdbc/core/RowMapper;
      21: invokevirtual #58                 // Method org/springframework/jdbc/core/JdbcTemplate.query:(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      24: areturn

  public void createUser(org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #59                 // Method validateUserDetails:(Lorg/springframework/security/core/userdetails/UserDetails;)V
       5: aload_0
       6: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       9: aload_0
      10: getfield      #7                  // Field createUserSql:Ljava/lang/String;
      13: aload_1
      14: invokedynamic #60,  0             // InvokeDynamic #1:setValues:(Lorg/springframework/security/core/userdetails/UserDetails;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      19: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      22: pop
      23: aload_0
      24: invokevirtual #62                 // Method getEnableAuthorities:()Z
      27: ifeq          35
      30: aload_0
      31: aload_1
      32: invokespecial #63                 // Method insertUserAuthorities:(Lorg/springframework/security/core/userdetails/UserDetails;)V
      35: return

  public void updateUser(org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #59                 // Method validateUserDetails:(Lorg/springframework/security/core/userdetails/UserDetails;)V
       5: aload_0
       6: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       9: aload_0
      10: getfield      #11                 // Field updateUserSql:Ljava/lang/String;
      13: aload_1
      14: invokedynamic #64,  0             // InvokeDynamic #2:setValues:(Lorg/springframework/security/core/userdetails/UserDetails;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      19: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      22: pop
      23: aload_0
      24: invokevirtual #62                 // Method getEnableAuthorities:()Z
      27: ifeq          45
      30: aload_0
      31: aload_1
      32: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
      37: invokespecial #66                 // Method deleteUserAuthorities:(Ljava/lang/String;)V
      40: aload_0
      41: aload_1
      42: invokespecial #63                 // Method insertUserAuthorities:(Lorg/springframework/security/core/userdetails/UserDetails;)V
      45: aload_0
      46: getfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
      49: aload_1
      50: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
      55: invokeinterface #67,  2           // InterfaceMethod org/springframework/security/core/userdetails/UserCache.removeUserFromCache:(Ljava/lang/String;)V
      60: return

  private void insertUserAuthorities(org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_1
       1: invokeinterface #68,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getAuthorities:()Ljava/util/Collection;
       6: invokeinterface #69,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          68
      21: aload_2
      22: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #72                 // class org/springframework/security/core/GrantedAuthority
      30: astore_3
      31: aload_0
      32: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      35: aload_0
      36: getfield      #13                 // Field createAuthoritySql:Ljava/lang/String;
      39: iconst_2
      40: anewarray     #73                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_1
      46: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_3
      55: invokeinterface #74,  1           // InterfaceMethod org/springframework/security/core/GrantedAuthority.getAuthority:()Ljava/lang/String;
      60: aastore
      61: invokevirtual #75                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      64: pop
      65: goto          12
      68: return

  public void deleteUser(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getEnableAuthorities:()Z
       4: ifeq          12
       7: aload_0
       8: aload_1
       9: invokespecial #66                 // Method deleteUserAuthorities:(Ljava/lang/String;)V
      12: aload_0
      13: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      16: aload_0
      17: getfield      #9                  // Field deleteUserSql:Ljava/lang/String;
      20: iconst_1
      21: anewarray     #73                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_1
      27: aastore
      28: invokevirtual #75                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      31: pop
      32: aload_0
      33: getfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
      36: aload_1
      37: invokeinterface #67,  2           // InterfaceMethod org/springframework/security/core/userdetails/UserCache.removeUserFromCache:(Ljava/lang/String;)V
      42: return

  private void deleteUserAuthorities(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #15                 // Field deleteUserAuthoritiesSql:Ljava/lang/String;
       8: iconst_1
       9: anewarray     #73                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokevirtual #75                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      19: pop
      20: return

  public void changePassword(java.lang.String, java.lang.String) throws org.springframework.security.core.AuthenticationException;
    Code:
       0: invokestatic  #76                 // Method org/springframework/security/core/context/SecurityContextHolder.getContext:()Lorg/springframework/security/core/context/SecurityContext;
       3: invokeinterface #77,  1           // InterfaceMethod org/springframework/security/core/context/SecurityContext.getAuthentication:()Lorg/springframework/security/core/Authentication;
       8: astore_3
       9: aload_3
      10: ifnonnull     23
      13: new           #78                 // class org/springframework/security/access/AccessDeniedException
      16: dup
      17: ldc           #79                 // String Can\'t change password as no Authentication object found in context for current user.
      19: invokespecial #80                 // Method org/springframework/security/access/AccessDeniedException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_3
      24: invokeinterface #81,  1           // InterfaceMethod org/springframework/security/core/Authentication.getName:()Ljava/lang/String;
      29: astore        4
      31: aload_0
      32: getfield      #50                 // Field authenticationManager:Lorg/springframework/security/authentication/AuthenticationManager;
      35: ifnull        95
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: new           #82                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #84                 // String Reauthenticating user \'
      51: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload         4
      56: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #86                 // String \' for password change request.
      61: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: aload_0
      73: getfield      #50                 // Field authenticationManager:Lorg/springframework/security/authentication/AuthenticationManager;
      76: new           #89                 // class org/springframework/security/authentication/UsernamePasswordAuthenticationToken
      79: dup
      80: aload         4
      82: aload_1
      83: invokespecial #90                 // Method org/springframework/security/authentication/UsernamePasswordAuthenticationToken."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      86: invokeinterface #91,  2           // InterfaceMethod org/springframework/security/authentication/AuthenticationManager.authenticate:(Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/core/Authentication;
      91: pop
      92: goto          106
      95: aload_0
      96: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      99: ldc           #92                 // String No authentication manager set. Password won\'t be re-checked.
     101: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     106: aload_0
     107: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     110: new           #82                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #93                 // String Changing password for user \'
     119: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         4
     124: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #94                 // String \'
     129: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     140: aload_0
     141: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
     144: aload_0
     145: getfield      #19                 // Field changePasswordSql:Ljava/lang/String;
     148: iconst_2
     149: anewarray     #73                 // class java/lang/Object
     152: dup
     153: iconst_0
     154: aload_2
     155: aastore
     156: dup
     157: iconst_1
     158: aload         4
     160: aastore
     161: invokevirtual #75                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
     164: pop
     165: invokestatic  #76                 // Method org/springframework/security/core/context/SecurityContextHolder.getContext:()Lorg/springframework/security/core/context/SecurityContext;
     168: aload_0
     169: aload_3
     170: aload_2
     171: invokevirtual #95                 // Method createNewAuthentication:(Lorg/springframework/security/core/Authentication;Ljava/lang/String;)Lorg/springframework/security/core/Authentication;
     174: invokeinterface #96,  2           // InterfaceMethod org/springframework/security/core/context/SecurityContext.setAuthentication:(Lorg/springframework/security/core/Authentication;)V
     179: aload_0
     180: getfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
     183: aload         4
     185: invokeinterface #67,  2           // InterfaceMethod org/springframework/security/core/userdetails/UserCache.removeUserFromCache:(Ljava/lang/String;)V
     190: return

  protected org.springframework.security.core.Authentication createNewAuthentication(org.springframework.security.core.Authentication, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #81,  1           // InterfaceMethod org/springframework/security/core/Authentication.getName:()Ljava/lang/String;
       7: invokevirtual #97                 // Method loadUserByUsername:(Ljava/lang/String;)Lorg/springframework/security/core/userdetails/UserDetails;
      10: astore_3
      11: new           #89                 // class org/springframework/security/authentication/UsernamePasswordAuthenticationToken
      14: dup
      15: aload_3
      16: aconst_null
      17: aload_3
      18: invokeinterface #68,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getAuthorities:()Ljava/util/Collection;
      23: invokespecial #98                 // Method org/springframework/security/authentication/UsernamePasswordAuthenticationToken."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)V
      26: astore        4
      28: aload         4
      30: aload_1
      31: invokeinterface #99,  1           // InterfaceMethod org/springframework/security/core/Authentication.getDetails:()Ljava/lang/Object;
      36: invokevirtual #100                // Method org/springframework/security/authentication/UsernamePasswordAuthenticationToken.setDetails:(Ljava/lang/Object;)V
      39: aload         4
      41: areturn

  public boolean userExists(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #17                 // Field userExistsSql:Ljava/lang/String;
       8: iconst_1
       9: anewarray     #56                 // class java/lang/String
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: ldc           #56                 // class java/lang/String
      18: invokevirtual #101                // Method org/springframework/jdbc/core/JdbcTemplate.queryForList:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;
      21: astore_2
      22: aload_2
      23: invokeinterface #102,  1          // InterfaceMethod java/util/List.size:()I
      28: iconst_1
      29: if_icmple     65
      32: new           #103                // class org/springframework/dao/IncorrectResultSizeDataAccessException
      35: dup
      36: new           #82                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #104                // String More than one user found with name \'
      45: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #94                 // String \'
      54: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: iconst_1
      61: invokespecial #105                // Method org/springframework/dao/IncorrectResultSizeDataAccessException."<init>":(Ljava/lang/String;I)V
      64: athrow
      65: aload_2
      66: invokeinterface #102,  1          // InterfaceMethod java/util/List.size:()I
      71: iconst_1
      72: if_icmpne     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  public java.util.List<java.lang.String> findAllGroups();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #21                 // Field findAllGroupsSql:Ljava/lang/String;
       8: ldc           #56                 // class java/lang/String
      10: invokevirtual #106                // Method org/springframework/jdbc/core/JdbcTemplate.queryForList:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
      13: areturn

  public java.util.List<java.lang.String> findUsersInGroup(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #107                // String groupName should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      10: aload_0
      11: getfield      #23                 // Field findUsersInGroupSql:Ljava/lang/String;
      14: iconst_1
      15: anewarray     #56                 // class java/lang/String
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: ldc           #56                 // class java/lang/String
      24: invokevirtual #101                // Method org/springframework/jdbc/core/JdbcTemplate.queryForList:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;
      27: areturn

  public void createGroup(java.lang.String, java.util.List<org.springframework.security.core.GrantedAuthority>);
    Code:
       0: aload_1
       1: ldc           #107                // String groupName should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #109                // String authorities cannot be null
       9: invokestatic  #110                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #82                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #111                // String Creating new group \'
      25: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #112                // String \' with authorities
      34: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokestatic  #113                // Method org/springframework/security/core/authority/AuthorityUtils.authorityListToSet:(Ljava/util/Collection;)Ljava/util/Set;
      41: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_0
      53: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      56: aload_0
      57: getfield      #25                 // Field insertGroupSql:Ljava/lang/String;
      60: iconst_1
      61: anewarray     #73                 // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload_1
      67: aastore
      68: invokevirtual #75                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      71: pop
      72: aload_0
      73: aload_1
      74: invokespecial #115                // Method findGroupId:(Ljava/lang/String;)I
      77: istore_3
      78: aload_2
      79: invokeinterface #116,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      84: astore        4
      86: aload         4
      88: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          140
      96: aload         4
      98: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #72                 // class org/springframework/security/core/GrantedAuthority
     106: astore        5
     108: aload         5
     110: invokeinterface #74,  1           // InterfaceMethod org/springframework/security/core/GrantedAuthority.getAuthority:()Ljava/lang/String;
     115: astore        6
     117: aload_0
     118: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
     121: aload_0
     122: getfield      #29                 // Field insertGroupAuthoritySql:Ljava/lang/String;
     125: iload_3
     126: aload         6
     128: invokedynamic #117,  0            // InvokeDynamic #3:setValues:(ILjava/lang/String;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
     133: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
     136: pop
     137: goto          86
     140: return

  public void deleteGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #118                // String Deleting group \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #94                 // String \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      33: aload_1
      34: ldc           #107                // String groupName should have text
      36: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      39: aload_0
      40: aload_1
      41: invokespecial #115                // Method findGroupId:(Ljava/lang/String;)I
      44: istore_2
      45: iload_2
      46: invokedynamic #119,  0            // InvokeDynamic #4:setValues:(I)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      51: astore_3
      52: aload_0
      53: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      56: aload_0
      57: getfield      #35                 // Field deleteGroupMembersSql:Ljava/lang/String;
      60: aload_3
      61: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      64: pop
      65: aload_0
      66: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      69: aload_0
      70: getfield      #33                 // Field deleteGroupAuthoritiesSql:Ljava/lang/String;
      73: aload_3
      74: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      77: pop
      78: aload_0
      79: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      82: aload_0
      83: getfield      #31                 // Field deleteGroupSql:Ljava/lang/String;
      86: aload_3
      87: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      90: pop
      91: return

  public void renameGroup(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #120                // String Changing group name from \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #121                // String \' to \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #94                 // String \'
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      42: aload_1
      43: ldc           #122                // String oldName should have text
      45: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      48: aload_2
      49: ldc           #123                // String newName should have text
      51: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      58: aload_0
      59: getfield      #37                 // Field renameGroupSql:Ljava/lang/String;
      62: iconst_2
      63: anewarray     #73                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_2
      69: aastore
      70: dup
      71: iconst_1
      72: aload_1
      73: aastore
      74: invokevirtual #75                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      77: pop
      78: return

  public void addUserToGroup(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #124                // String Adding user \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #125                // String \' to group \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #94                 // String \'
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      42: aload_1
      43: ldc           #126                // String username should have text
      45: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      48: aload_2
      49: ldc           #107                // String groupName should have text
      51: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: aload_2
      56: invokespecial #115                // Method findGroupId:(Ljava/lang/String;)I
      59: istore_3
      60: aload_0
      61: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      64: aload_0
      65: getfield      #39                 // Field insertGroupMemberSql:Ljava/lang/String;
      68: iload_3
      69: aload_1
      70: invokedynamic #127,  0            // InvokeDynamic #5:setValues:(ILjava/lang/String;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      75: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      78: pop
      79: aload_0
      80: getfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
      83: aload_1
      84: invokeinterface #67,  2           // InterfaceMethod org/springframework/security/core/userdetails/UserCache.removeUserFromCache:(Ljava/lang/String;)V
      89: return

  public void removeUserFromGroup(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #128                // String Removing user \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #125                // String \' to group \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #94                 // String \'
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      42: aload_1
      43: ldc           #126                // String username should have text
      45: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      48: aload_2
      49: ldc           #107                // String groupName should have text
      51: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: aload_2
      56: invokespecial #115                // Method findGroupId:(Ljava/lang/String;)I
      59: istore_3
      60: aload_0
      61: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      64: aload_0
      65: getfield      #41                 // Field deleteGroupMemberSql:Ljava/lang/String;
      68: iload_3
      69: aload_1
      70: invokedynamic #129,  0            // InvokeDynamic #6:setValues:(ILjava/lang/String;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      75: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      78: pop
      79: aload_0
      80: getfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
      83: aload_1
      84: invokeinterface #67,  2           // InterfaceMethod org/springframework/security/core/userdetails/UserCache.removeUserFromCache:(Ljava/lang/String;)V
      89: return

  public java.util.List<org.springframework.security.core.GrantedAuthority> findGroupAuthorities(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #130                // String Loading authorities for group \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #94                 // String \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      33: aload_1
      34: ldc           #107                // String groupName should have text
      36: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      39: aload_0
      40: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      43: aload_0
      44: getfield      #43                 // Field groupAuthoritiesSql:Ljava/lang/String;
      47: iconst_1
      48: anewarray     #56                 // class java/lang/String
      51: dup
      52: iconst_0
      53: aload_1
      54: aastore
      55: aload_0
      56: invokedynamic #131,  0            // InvokeDynamic #7:mapRow:(Lorg/springframework/security/provisioning/JdbcUserDetailsManager;)Lorg/springframework/jdbc/core/RowMapper;
      61: invokevirtual #58                 // Method org/springframework/jdbc/core/JdbcTemplate.query:(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      64: areturn

  public void removeGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #132                // String Removing authority \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #133                // String \' from group \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #94                 // String \'
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      42: aload_1
      43: ldc           #107                // String groupName should have text
      45: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      48: aload_2
      49: ldc           #134                // String authority cannot be null
      51: invokestatic  #110                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      54: aload_0
      55: aload_1
      56: invokespecial #115                // Method findGroupId:(Ljava/lang/String;)I
      59: istore_3
      60: aload_0
      61: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      64: aload_0
      65: getfield      #45                 // Field deleteGroupAuthoritySql:Ljava/lang/String;
      68: iload_3
      69: aload_2
      70: invokedynamic #135,  0            // InvokeDynamic #8:setValues:(ILorg/springframework/security/core/GrantedAuthority;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      75: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      78: pop
      79: return

  public void addGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: new           #82                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #136                // String Adding authority \'
      13: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #125                // String \' to group \'
      22: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #94                 // String \'
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #88,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      42: aload_1
      43: ldc           #107                // String groupName should have text
      45: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      48: aload_2
      49: ldc           #134                // String authority cannot be null
      51: invokestatic  #110                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      54: aload_0
      55: aload_1
      56: invokespecial #115                // Method findGroupId:(Ljava/lang/String;)I
      59: istore_3
      60: aload_0
      61: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      64: aload_0
      65: getfield      #29                 // Field insertGroupAuthoritySql:Ljava/lang/String;
      68: iload_3
      69: aload_2
      70: invokedynamic #137,  0            // InvokeDynamic #9:setValues:(ILorg/springframework/security/core/GrantedAuthority;)Lorg/springframework/jdbc/core/PreparedStatementSetter;
      75: invokevirtual #61                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I
      78: pop
      79: return

  private int findGroupId(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #27                 // Field findGroupIdSql:Ljava/lang/String;
       8: ldc           #138                // class java/lang/Integer
      10: iconst_1
      11: anewarray     #73                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_1
      17: aastore
      18: invokevirtual #139                // Method org/springframework/jdbc/core/JdbcTemplate.queryForObject:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #138                // class java/lang/Integer
      24: invokevirtual #140                // Method java/lang/Integer.intValue:()I
      27: ireturn

  public void setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field authenticationManager:Lorg/springframework/security/authentication/AuthenticationManager;
       5: return

  public void setCreateUserSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #141                // String createUserSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field createUserSql:Ljava/lang/String;
      11: return

  public void setDeleteUserSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #142                // String deleteUserSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field deleteUserSql:Ljava/lang/String;
      11: return

  public void setUpdateUserSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #143                // String updateUserSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #11                 // Field updateUserSql:Ljava/lang/String;
      11: return

  public void setCreateAuthoritySql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #144                // String createAuthoritySql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field createAuthoritySql:Ljava/lang/String;
      11: return

  public void setDeleteUserAuthoritiesSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #145                // String deleteUserAuthoritiesSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #15                 // Field deleteUserAuthoritiesSql:Ljava/lang/String;
      11: return

  public void setUserExistsSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #146                // String userExistsSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #17                 // Field userExistsSql:Ljava/lang/String;
      11: return

  public void setChangePasswordSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #147                // String changePasswordSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #19                 // Field changePasswordSql:Ljava/lang/String;
      11: return

  public void setFindAllGroupsSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #148                // String findAllGroupsSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #21                 // Field findAllGroupsSql:Ljava/lang/String;
      11: return

  public void setFindUsersInGroupSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #149                // String findUsersInGroupSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field findUsersInGroupSql:Ljava/lang/String;
      11: return

  public void setInsertGroupSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #150                // String insertGroupSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #25                 // Field insertGroupSql:Ljava/lang/String;
      11: return

  public void setFindGroupIdSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #151                // String findGroupIdSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #27                 // Field findGroupIdSql:Ljava/lang/String;
      11: return

  public void setInsertGroupAuthoritySql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #152                // String insertGroupAuthoritySql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #29                 // Field insertGroupAuthoritySql:Ljava/lang/String;
      11: return

  public void setDeleteGroupSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #153                // String deleteGroupSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #31                 // Field deleteGroupSql:Ljava/lang/String;
      11: return

  public void setDeleteGroupAuthoritiesSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #154                // String deleteGroupAuthoritiesSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #33                 // Field deleteGroupAuthoritiesSql:Ljava/lang/String;
      11: return

  public void setDeleteGroupMembersSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #155                // String deleteGroupMembersSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #35                 // Field deleteGroupMembersSql:Ljava/lang/String;
      11: return

  public void setRenameGroupSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #156                // String renameGroupSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #37                 // Field renameGroupSql:Ljava/lang/String;
      11: return

  public void setInsertGroupMemberSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #157                // String insertGroupMemberSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #39                 // Field insertGroupMemberSql:Ljava/lang/String;
      11: return

  public void setDeleteGroupMemberSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #158                // String deleteGroupMemberSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #41                 // Field deleteGroupMemberSql:Ljava/lang/String;
      11: return

  public void setGroupAuthoritiesSql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #159                // String groupAuthoritiesSql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #43                 // Field groupAuthoritiesSql:Ljava/lang/String;
      11: return

  public void setDeleteGroupAuthoritySql(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #160                // String deleteGroupAuthoritySql should have text
       3: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #45                 // Field deleteGroupAuthoritySql:Ljava/lang/String;
      11: return

  public void setUserCache(org.springframework.security.core.userdetails.UserCache);
    Code:
       0: aload_1
       1: ldc           #161                // String userCache cannot be null
       3: invokestatic  #110                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #48                 // Field userCache:Lorg/springframework/security/core/userdetails/UserCache;
      11: return

  private void validateUserDetails(org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_1
       1: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
       6: ldc           #162                // String Username may not be empty or null
       8: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: invokeinterface #68,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getAuthorities:()Ljava/util/Collection;
      18: invokespecial #163                // Method validateAuthorities:(Ljava/util/Collection;)V
      21: return

  private void validateAuthorities(java.util.Collection<? extends org.springframework.security.core.GrantedAuthority>);
    Code:
       0: aload_1
       1: ldc           #164                // String Authorities list must not be null
       3: invokestatic  #110                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #69,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          52
      22: aload_2
      23: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #72                 // class org/springframework/security/core/GrantedAuthority
      31: astore_3
      32: aload_3
      33: ldc           #165                // String Authorities list contains a null entry
      35: invokestatic  #110                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      38: aload_3
      39: invokeinterface #74,  1           // InterfaceMethod org/springframework/security/core/GrantedAuthority.getAuthority:()Ljava/lang/String;
      44: ldc           #166                // String getAuthority() method must return a non-empty string
      46: invokestatic  #108                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      49: goto          13
      52: return

  private static void lambda$addGroupAuthority$9(int, org.springframework.security.core.GrantedAuthority, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: iconst_1
       2: iload_0
       3: invokeinterface #167,  3          // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
       8: aload_2
       9: iconst_2
      10: aload_1
      11: invokeinterface #74,  1           // InterfaceMethod org/springframework/security/core/GrantedAuthority.getAuthority:()Ljava/lang/String;
      16: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      21: return

  private static void lambda$removeGroupAuthority$8(int, org.springframework.security.core.GrantedAuthority, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: iconst_1
       2: iload_0
       3: invokeinterface #167,  3          // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
       8: aload_2
       9: iconst_2
      10: aload_1
      11: invokeinterface #74,  1           // InterfaceMethod org/springframework/security/core/GrantedAuthority.getAuthority:()Ljava/lang/String;
      16: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      21: return

  private org.springframework.security.core.GrantedAuthority lambda$findGroupAuthorities$7(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: new           #82                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #169                // Method getRolePrefix:()Ljava/lang/String;
      11: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: iconst_3
      16: invokeinterface #170,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      21: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: new           #171                // class org/springframework/security/core/authority/SimpleGrantedAuthority
      31: dup
      32: aload_3
      33: invokespecial #172                // Method org/springframework/security/core/authority/SimpleGrantedAuthority."<init>":(Ljava/lang/String;)V
      36: areturn

  private static void lambda$removeUserFromGroup$6(int, java.lang.String, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: iconst_1
       2: iload_0
       3: invokeinterface #167,  3          // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
       8: aload_2
       9: iconst_2
      10: aload_1
      11: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      16: return

  private static void lambda$addUserToGroup$5(int, java.lang.String, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: iconst_1
       2: iload_0
       3: invokeinterface #167,  3          // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
       8: aload_2
       9: iconst_2
      10: aload_1
      11: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      16: return

  private static void lambda$deleteGroup$4(int, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: iload_0
       3: invokeinterface #167,  3          // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
       8: return

  private static void lambda$createGroup$3(int, java.lang.String, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: iconst_1
       2: iload_0
       3: invokeinterface #167,  3          // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
       8: aload_2
       9: iconst_2
      10: aload_1
      11: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      16: return

  private static void lambda$updateUser$2(org.springframework.security.core.userdetails.UserDetails, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: aload_0
       3: invokeinterface #173,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getPassword:()Ljava/lang/String;
       8: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      13: aload_1
      14: iconst_2
      15: aload_0
      16: invokeinterface #174,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isEnabled:()Z
      21: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      26: aload_1
      27: invokeinterface #176,  1          // InterfaceMethod java/sql/PreparedStatement.getParameterMetaData:()Ljava/sql/ParameterMetaData;
      32: invokeinterface #177,  1          // InterfaceMethod java/sql/ParameterMetaData.getParameterCount:()I
      37: istore_2
      38: iload_2
      39: iconst_3
      40: if_icmpne     59
      43: aload_1
      44: iconst_3
      45: aload_0
      46: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
      51: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      56: goto          136
      59: aload_1
      60: iconst_3
      61: aload_0
      62: invokeinterface #178,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isAccountNonLocked:()Z
      67: ifne          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      80: aload_1
      81: iconst_4
      82: aload_0
      83: invokeinterface #179,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isAccountNonExpired:()Z
      88: ifne          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
     101: aload_1
     102: iconst_5
     103: aload_0
     104: invokeinterface #180,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isCredentialsNonExpired:()Z
     109: ifne          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
     122: aload_1
     123: bipush        6
     125: aload_0
     126: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
     131: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     136: return

  private static void lambda$createUser$1(org.springframework.security.core.userdetails.UserDetails, java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: aload_0
       3: invokeinterface #65,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
       8: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      13: aload_1
      14: iconst_2
      15: aload_0
      16: invokeinterface #173,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getPassword:()Ljava/lang/String;
      21: invokeinterface #168,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      26: aload_1
      27: iconst_3
      28: aload_0
      29: invokeinterface #174,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isEnabled:()Z
      34: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      39: aload_1
      40: invokeinterface #176,  1          // InterfaceMethod java/sql/PreparedStatement.getParameterMetaData:()Ljava/sql/ParameterMetaData;
      45: invokeinterface #177,  1          // InterfaceMethod java/sql/ParameterMetaData.getParameterCount:()I
      50: istore_2
      51: iload_2
      52: iconst_3
      53: if_icmple     120
      56: aload_1
      57: iconst_4
      58: aload_0
      59: invokeinterface #178,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isAccountNonLocked:()Z
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      77: aload_1
      78: iconst_5
      79: aload_0
      80: invokeinterface #179,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isAccountNonExpired:()Z
      85: ifne          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      98: aload_1
      99: bipush        6
     101: aload_0
     102: invokeinterface #180,  1          // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isCredentialsNonExpired:()Z
     107: ifne          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: invokeinterface #175,  3          // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
     120: return

  private static org.springframework.security.core.userdetails.UserDetails lambda$loadUsersByUsername$0(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokeinterface #170,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: iconst_2
      10: invokeinterface #170,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      15: astore_3
      16: aload_0
      17: iconst_3
      18: invokeinterface #181,  2          // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
      23: istore        4
      25: iconst_0
      26: istore        5
      28: iconst_0
      29: istore        6
      31: iconst_0
      32: istore        7
      34: aload_0
      35: invokeinterface #182,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
      40: invokeinterface #183,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      45: iconst_3
      46: if_icmple     77
      49: aload_0
      50: iconst_4
      51: invokeinterface #181,  2          // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
      56: istore        5
      58: aload_0
      59: iconst_5
      60: invokeinterface #181,  2          // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
      65: istore        6
      67: aload_0
      68: bipush        6
      70: invokeinterface #181,  2          // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
      75: istore        7
      77: new           #184                // class org/springframework/security/core/userdetails/User
      80: dup
      81: aload_2
      82: aload_3
      83: iload         4
      85: iload         6
      87: ifne          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: iload         7
      97: ifne          104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: iload         5
     107: ifne          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: getstatic     #185                // Field org/springframework/security/core/authority/AuthorityUtils.NO_AUTHORITIES:Ljava/util/List;
     118: invokespecial #186                // Method org/springframework/security/core/userdetails/User."<init>":(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/util/Collection;)V
     121: areturn
}
