Compiled from "BouncyCastleAesGcmBytesEncryptor.java"
public class org.springframework.security.crypto.encrypt.BouncyCastleAesGcmBytesEncryptor extends org.springframework.security.crypto.encrypt.BouncyCastleAesBytesEncryptor {
  public org.springframework.security.crypto.encrypt.BouncyCastleAesGcmBytesEncryptor(java.lang.String, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/security/crypto/encrypt/BouncyCastleAesBytesEncryptor."<init>":(Ljava/lang/String;Ljava/lang/CharSequence;)V
       6: return

  public org.springframework.security.crypto.encrypt.BouncyCastleAesGcmBytesEncryptor(java.lang.String, java.lang.CharSequence, org.springframework.security.crypto.keygen.BytesKeyGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method org/springframework/security/crypto/encrypt/BouncyCastleAesBytesEncryptor."<init>":(Ljava/lang/String;Ljava/lang/CharSequence;Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;)V
       7: return

  public byte[] encrypt(byte[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field ivGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       4: invokeinterface #4,  1            // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.generateKey:()[B
       9: astore_2
      10: new           #5                  // class org/bouncycastle/crypto/modes/GCMBlockCipher
      13: dup
      14: new           #6                  // class org/bouncycastle/crypto/engines/AESFastEngine
      17: dup
      18: invokespecial #7                  // Method org/bouncycastle/crypto/engines/AESFastEngine."<init>":()V
      21: invokespecial #8                  // Method org/bouncycastle/crypto/modes/GCMBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
      24: astore_3
      25: aload_3
      26: iconst_1
      27: new           #9                  // class org/bouncycastle/crypto/params/AEADParameters
      30: dup
      31: aload_0
      32: getfield      #10                 // Field secretKey:Lorg/bouncycastle/crypto/params/KeyParameter;
      35: sipush        128
      38: aload_2
      39: aconst_null
      40: invokespecial #11                 // Method org/bouncycastle/crypto/params/AEADParameters."<init>":(Lorg/bouncycastle/crypto/params/KeyParameter;I[B[B)V
      43: invokevirtual #12                 // Method org/bouncycastle/crypto/modes/GCMBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      46: aload_0
      47: aload_3
      48: aload_1
      49: invokespecial #13                 // Method process:(Lorg/bouncycastle/crypto/modes/AEADBlockCipher;[B)[B
      52: astore        4
      54: aload_2
      55: ifnull        77
      58: iconst_2
      59: anewarray     #14                 // class "[B"
      62: dup
      63: iconst_0
      64: aload_2
      65: aastore
      66: dup
      67: iconst_1
      68: aload         4
      70: aastore
      71: invokestatic  #15                 // Method org/springframework/security/crypto/util/EncodingUtils.concatenate:([[B)[B
      74: goto          79
      77: aload         4
      79: areturn

  public byte[] decrypt(byte[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: getfield      #3                  // Field ivGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       6: invokeinterface #16,  1           // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.getKeyLength:()I
      11: invokestatic  #17                 // Method org/springframework/security/crypto/util/EncodingUtils.subArray:([BII)[B
      14: astore_2
      15: aload_1
      16: aload_0
      17: getfield      #3                  // Field ivGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
      20: invokeinterface #16,  1           // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.getKeyLength:()I
      25: aload_1
      26: arraylength
      27: invokestatic  #17                 // Method org/springframework/security/crypto/util/EncodingUtils.subArray:([BII)[B
      30: astore_1
      31: new           #5                  // class org/bouncycastle/crypto/modes/GCMBlockCipher
      34: dup
      35: new           #6                  // class org/bouncycastle/crypto/engines/AESFastEngine
      38: dup
      39: invokespecial #7                  // Method org/bouncycastle/crypto/engines/AESFastEngine."<init>":()V
      42: invokespecial #8                  // Method org/bouncycastle/crypto/modes/GCMBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
      45: astore_3
      46: aload_3
      47: iconst_0
      48: new           #9                  // class org/bouncycastle/crypto/params/AEADParameters
      51: dup
      52: aload_0
      53: getfield      #10                 // Field secretKey:Lorg/bouncycastle/crypto/params/KeyParameter;
      56: sipush        128
      59: aload_2
      60: aconst_null
      61: invokespecial #11                 // Method org/bouncycastle/crypto/params/AEADParameters."<init>":(Lorg/bouncycastle/crypto/params/KeyParameter;I[B[B)V
      64: invokevirtual #12                 // Method org/bouncycastle/crypto/modes/GCMBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      67: aload_0
      68: aload_3
      69: aload_1
      70: invokespecial #13                 // Method process:(Lorg/bouncycastle/crypto/modes/AEADBlockCipher;[B)[B
      73: areturn

  private byte[] process(org.bouncycastle.crypto.modes.AEADBlockCipher, byte[]);
    Code:
       0: aload_1
       1: aload_2
       2: arraylength
       3: invokeinterface #18,  2           // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getOutputSize:(I)I
       8: newarray       byte
      10: astore_3
      11: aload_1
      12: aload_2
      13: iconst_0
      14: aload_2
      15: arraylength
      16: aload_3
      17: iconst_0
      18: invokeinterface #19,  6           // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.processBytes:([BII[BI)I
      23: istore        4
      25: iload         4
      27: aload_1
      28: aload_3
      29: iload         4
      31: invokeinterface #20,  3           // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.doFinal:([BI)I
      36: iadd
      37: istore        4
      39: goto          56
      42: astore        5
      44: new           #22                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #23                 // String unable to encrypt/decrypt
      50: aload         5
      52: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: iload         4
      58: aload_3
      59: arraylength
      60: if_icmpne     65
      63: aload_3
      64: areturn
      65: iload         4
      67: newarray       byte
      69: astore        5
      71: aload_3
      72: iconst_0
      73: aload         5
      75: iconst_0
      76: iload         4
      78: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      81: aload         5
      83: areturn
    Exception table:
       from    to  target type
          25    39    42   Class org/bouncycastle/crypto/InvalidCipherTextException
}
