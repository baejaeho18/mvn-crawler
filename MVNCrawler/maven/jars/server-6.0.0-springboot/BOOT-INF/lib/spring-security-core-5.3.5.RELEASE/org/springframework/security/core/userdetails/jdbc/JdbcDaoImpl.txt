Compiled from "JdbcDaoImpl.java"
public class org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl extends org.springframework.jdbc.core.support.JdbcDaoSupport implements org.springframework.security.core.userdetails.UserDetailsService,org.springframework.context.MessageSourceAware {
  public static final java.lang.String DEF_USERS_BY_USERNAME_QUERY;

  public static final java.lang.String DEF_AUTHORITIES_BY_USERNAME_QUERY;

  public static final java.lang.String DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY;

  protected org.springframework.context.support.MessageSourceAccessor messages;

  private java.lang.String authoritiesByUsernameQuery;

  private java.lang.String groupAuthoritiesByUsernameQuery;

  private java.lang.String usersByUsernameQuery;

  private java.lang.String rolePrefix;

  private boolean usernameBasedPrimaryKey;

  private boolean enableAuthorities;

  private boolean enableGroups;

  public org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jdbc/core/support/JdbcDaoSupport."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/springframework/security/core/SpringSecurityMessageSource.getAccessor:()Lorg/springframework/context/support/MessageSourceAccessor;
       8: putfield      #3                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      11: aload_0
      12: ldc           #4                  // String
      14: putfield      #5                  // Field rolePrefix:Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: putfield      #6                  // Field usernameBasedPrimaryKey:Z
      22: aload_0
      23: iconst_1
      24: putfield      #7                  // Field enableAuthorities:Z
      27: aload_0
      28: ldc           #9                  // String select username,password,enabled from users where username = ?
      30: putfield      #10                 // Field usersByUsernameQuery:Ljava/lang/String;
      33: aload_0
      34: ldc           #11                 // String select username,authority from authorities where username = ?
      36: putfield      #12                 // Field authoritiesByUsernameQuery:Ljava/lang/String;
      39: aload_0
      40: ldc           #13                 // String select g.id, g.group_name, ga.authority from groups g, group_members gm, group_authorities ga where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id
      42: putfield      #14                 // Field groupAuthoritiesByUsernameQuery:Ljava/lang/String;
      45: return

  protected org.springframework.context.support.MessageSourceAccessor getMessages();
    Code:
       0: aload_0
       1: getfield      #3                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
       4: areturn

  protected void addCustomAuthorities(java.lang.String, java.util.List<org.springframework.security.core.GrantedAuthority>);
    Code:
       0: return

  public java.lang.String getUsersByUsernameQuery();
    Code:
       0: aload_0
       1: getfield      #10                 // Field usersByUsernameQuery:Ljava/lang/String;
       4: areturn

  protected void initDao() throws org.springframework.context.ApplicationContextException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field enableAuthorities:Z
       4: ifne          14
       7: aload_0
       8: getfield      #15                 // Field enableGroups:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #16                 // String Use of either authorities or groups must be enabled
      21: invokestatic  #17                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      24: return

  public org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String) throws org.springframework.security.core.userdetails.UsernameNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method loadUsersByUsername:(Ljava/lang/String;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      12: ifne          75
      15: aload_0
      16: getfield      #20                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #21                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #23                 // String Query returned no results for user \'
      28: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #25                 // String \'
      37: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      48: new           #28                 // class org/springframework/security/core/userdetails/UsernameNotFoundException
      51: dup
      52: aload_0
      53: getfield      #3                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      56: ldc           #29                 // String JdbcDaoImpl.notFound
      58: iconst_1
      59: anewarray     #30                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_1
      65: aastore
      66: ldc           #31                 // String Username {0} not found
      68: invokevirtual #32                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      71: invokespecial #33                 // Method org/springframework/security/core/userdetails/UsernameNotFoundException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_2
      76: iconst_0
      77: invokeinterface #34,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      82: checkcast     #35                 // class org/springframework/security/core/userdetails/UserDetails
      85: astore_3
      86: new           #36                 // class java/util/HashSet
      89: dup
      90: invokespecial #37                 // Method java/util/HashSet."<init>":()V
      93: astore        4
      95: aload_0
      96: getfield      #7                  // Field enableAuthorities:Z
      99: ifeq          120
     102: aload         4
     104: aload_0
     105: aload_3
     106: invokeinterface #38,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
     111: invokevirtual #39                 // Method loadUserAuthorities:(Ljava/lang/String;)Ljava/util/List;
     114: invokeinterface #40,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     119: pop
     120: aload_0
     121: getfield      #15                 // Field enableGroups:Z
     124: ifeq          145
     127: aload         4
     129: aload_0
     130: aload_3
     131: invokeinterface #38,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
     136: invokevirtual #41                 // Method loadGroupAuthorities:(Ljava/lang/String;)Ljava/util/List;
     139: invokeinterface #40,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     144: pop
     145: new           #42                 // class java/util/ArrayList
     148: dup
     149: aload         4
     151: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     154: astore        5
     156: aload_0
     157: aload_3
     158: invokeinterface #38,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
     163: aload         5
     165: invokevirtual #44                 // Method addCustomAuthorities:(Ljava/lang/String;Ljava/util/List;)V
     168: aload         5
     170: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
     175: ifne          238
     178: aload_0
     179: getfield      #20                 // Field logger:Lorg/apache/commons/logging/Log;
     182: new           #21                 // class java/lang/StringBuilder
     185: dup
     186: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #45                 // String User \'
     191: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_1
     195: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #46                 // String \' has no authorities and will be treated as \'not found\'
     200: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     211: new           #28                 // class org/springframework/security/core/userdetails/UsernameNotFoundException
     214: dup
     215: aload_0
     216: getfield      #3                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
     219: ldc           #47                 // String JdbcDaoImpl.noAuthority
     221: iconst_1
     222: anewarray     #30                 // class java/lang/Object
     225: dup
     226: iconst_0
     227: aload_1
     228: aastore
     229: ldc           #48                 // String User {0} has no GrantedAuthority
     231: invokevirtual #32                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
     234: invokespecial #33                 // Method org/springframework/security/core/userdetails/UsernameNotFoundException."<init>":(Ljava/lang/String;)V
     237: athrow
     238: aload_0
     239: aload_1
     240: aload_3
     241: aload         5
     243: invokevirtual #49                 // Method createUserDetails:(Ljava/lang/String;Lorg/springframework/security/core/userdetails/UserDetails;Ljava/util/List;)Lorg/springframework/security/core/userdetails/UserDetails;
     246: areturn

  protected java.util.List<org.springframework.security.core.userdetails.UserDetails> loadUsersByUsername(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #10                 // Field usersByUsernameQuery:Ljava/lang/String;
       8: iconst_1
       9: anewarray     #51                 // class java/lang/String
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokedynamic #52,  0             // InvokeDynamic #0:mapRow:()Lorg/springframework/jdbc/core/RowMapper;
      21: invokevirtual #53                 // Method org/springframework/jdbc/core/JdbcTemplate.query:(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      24: areturn

  protected java.util.List<org.springframework.security.core.GrantedAuthority> loadUserAuthorities(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #12                 // Field authoritiesByUsernameQuery:Ljava/lang/String;
       8: iconst_1
       9: anewarray     #51                 // class java/lang/String
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: aload_0
      17: invokedynamic #54,  0             // InvokeDynamic #1:mapRow:(Lorg/springframework/security/core/userdetails/jdbc/JdbcDaoImpl;)Lorg/springframework/jdbc/core/RowMapper;
      22: invokevirtual #53                 // Method org/springframework/jdbc/core/JdbcTemplate.query:(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      25: areturn

  protected java.util.List<org.springframework.security.core.GrantedAuthority> loadGroupAuthorities(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: aload_0
       5: getfield      #14                 // Field groupAuthoritiesByUsernameQuery:Ljava/lang/String;
       8: iconst_1
       9: anewarray     #51                 // class java/lang/String
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: aload_0
      17: invokedynamic #55,  0             // InvokeDynamic #2:mapRow:(Lorg/springframework/security/core/userdetails/jdbc/JdbcDaoImpl;)Lorg/springframework/jdbc/core/RowMapper;
      22: invokevirtual #53                 // Method org/springframework/jdbc/core/JdbcTemplate.query:(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      25: areturn

  protected org.springframework.security.core.userdetails.UserDetails createUserDetails(java.lang.String, org.springframework.security.core.userdetails.UserDetails, java.util.List<org.springframework.security.core.GrantedAuthority>);
    Code:
       0: aload_2
       1: invokeinterface #38,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getUsername:()Ljava/lang/String;
       6: astore        4
       8: aload_0
       9: getfield      #6                  // Field usernameBasedPrimaryKey:Z
      12: ifne          18
      15: aload_1
      16: astore        4
      18: new           #56                 // class org/springframework/security/core/userdetails/User
      21: dup
      22: aload         4
      24: aload_2
      25: invokeinterface #57,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getPassword:()Ljava/lang/String;
      30: aload_2
      31: invokeinterface #58,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isEnabled:()Z
      36: aload_2
      37: invokeinterface #59,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isAccountNonExpired:()Z
      42: aload_2
      43: invokeinterface #60,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isCredentialsNonExpired:()Z
      48: aload_2
      49: invokeinterface #61,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.isAccountNonLocked:()Z
      54: aload_3
      55: invokespecial #62                 // Method org/springframework/security/core/userdetails/User."<init>":(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/util/Collection;)V
      58: areturn

  public void setAuthoritiesByUsernameQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field authoritiesByUsernameQuery:Ljava/lang/String;
       5: return

  protected java.lang.String getAuthoritiesByUsernameQuery();
    Code:
       0: aload_0
       1: getfield      #12                 // Field authoritiesByUsernameQuery:Ljava/lang/String;
       4: areturn

  public void setGroupAuthoritiesByUsernameQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field groupAuthoritiesByUsernameQuery:Ljava/lang/String;
       5: return

  public void setRolePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field rolePrefix:Ljava/lang/String;
       5: return

  protected java.lang.String getRolePrefix();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rolePrefix:Ljava/lang/String;
       4: areturn

  public void setUsernameBasedPrimaryKey(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field usernameBasedPrimaryKey:Z
       5: return

  protected boolean isUsernameBasedPrimaryKey();
    Code:
       0: aload_0
       1: getfield      #6                  // Field usernameBasedPrimaryKey:Z
       4: ireturn

  public void setUsersByUsernameQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field usersByUsernameQuery:Ljava/lang/String;
       5: return

  protected boolean getEnableAuthorities();
    Code:
       0: aload_0
       1: getfield      #7                  // Field enableAuthorities:Z
       4: ireturn

  public void setEnableAuthorities(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field enableAuthorities:Z
       5: return

  protected boolean getEnableGroups();
    Code:
       0: aload_0
       1: getfield      #15                 // Field enableGroups:Z
       4: ireturn

  public void setEnableGroups(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field enableGroups:Z
       5: return

  public void setMessageSource(org.springframework.context.MessageSource);
    Code:
       0: aload_1
       1: ldc           #63                 // String messageSource cannot be null
       3: invokestatic  #64                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #65                 // class org/springframework/context/support/MessageSourceAccessor
      10: dup
      11: aload_1
      12: invokespecial #66                 // Method org/springframework/context/support/MessageSourceAccessor."<init>":(Lorg/springframework/context/MessageSource;)V
      15: putfield      #3                  // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
      18: return

  private org.springframework.security.core.GrantedAuthority lambda$loadGroupAuthorities$2(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #67                 // Method getRolePrefix:()Ljava/lang/String;
      11: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: iconst_3
      16: invokeinterface #68,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      21: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: new           #69                 // class org/springframework/security/core/authority/SimpleGrantedAuthority
      31: dup
      32: aload_3
      33: invokespecial #70                 // Method org/springframework/security/core/authority/SimpleGrantedAuthority."<init>":(Ljava/lang/String;)V
      36: areturn

  private org.springframework.security.core.GrantedAuthority lambda$loadUserAuthorities$1(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #5                  // Field rolePrefix:Ljava/lang/String;
      11: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: iconst_2
      16: invokeinterface #68,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      21: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: new           #69                 // class org/springframework/security/core/authority/SimpleGrantedAuthority
      31: dup
      32: aload_3
      33: invokespecial #70                 // Method org/springframework/security/core/authority/SimpleGrantedAuthority."<init>":(Ljava/lang/String;)V
      36: areturn

  private static org.springframework.security.core.userdetails.UserDetails lambda$loadUsersByUsername$0(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokeinterface #68,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: iconst_2
      10: invokeinterface #68,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      15: astore_3
      16: aload_0
      17: iconst_3
      18: invokeinterface #71,  2           // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
      23: istore        4
      25: new           #56                 // class org/springframework/security/core/userdetails/User
      28: dup
      29: aload_2
      30: aload_3
      31: iload         4
      33: iconst_1
      34: iconst_1
      35: iconst_1
      36: getstatic     #72                 // Field org/springframework/security/core/authority/AuthorityUtils.NO_AUTHORITIES:Ljava/util/List;
      39: invokespecial #62                 // Method org/springframework/security/core/userdetails/User."<init>":(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/util/Collection;)V
      42: areturn
}
