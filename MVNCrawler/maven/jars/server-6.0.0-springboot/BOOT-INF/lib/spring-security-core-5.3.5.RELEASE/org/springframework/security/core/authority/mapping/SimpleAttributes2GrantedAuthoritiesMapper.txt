Compiled from "SimpleAttributes2GrantedAuthoritiesMapper.java"
public class org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper implements org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper,org.springframework.beans.factory.InitializingBean {
  private java.lang.String attributePrefix;

  private boolean convertAttributeToUpperCase;

  private boolean convertAttributeToLowerCase;

  private boolean addPrefixIfAlreadyExisting;

  public org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String ROLE_
       7: putfield      #3                  // Field attributePrefix:Ljava/lang/String;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field convertAttributeToUpperCase:Z
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field convertAttributeToLowerCase:Z
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field addPrefixIfAlreadyExisting:Z
      25: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method isConvertAttributeToUpperCase:()Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #8                  // Method isConvertAttributeToLowerCase:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #9                  // String Either convertAttributeToUpperCase or convertAttributeToLowerCase can be set to true, but not both
      21: invokestatic  #10                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      24: return

  public java.util.List<org.springframework.security.core.GrantedAuthority> getGrantedAuthorities(java.util.Collection<java.lang.String>);
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.size:()I
      10: invokespecial #13                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          57
      30: aload_3
      31: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #17                 // class java/lang/String
      39: astore        4
      41: aload_2
      42: aload_0
      43: aload         4
      45: invokespecial #18                 // Method getGrantedAuthority:(Ljava/lang/String;)Lorg/springframework/security/core/GrantedAuthority;
      48: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          21
      57: aload_2
      58: areturn

  private org.springframework.security.core.GrantedAuthority getGrantedAuthority(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method isConvertAttributeToLowerCase:()Z
       4: ifeq          18
       7: aload_1
       8: invokestatic  #20                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      11: invokevirtual #21                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      14: astore_1
      15: goto          33
      18: aload_0
      19: invokespecial #7                  // Method isConvertAttributeToUpperCase:()Z
      22: ifeq          33
      25: aload_1
      26: invokestatic  #20                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      29: invokevirtual #22                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      32: astore_1
      33: aload_0
      34: invokespecial #23                 // Method isAddPrefixIfAlreadyExisting:()Z
      37: ifne          51
      40: aload_1
      41: aload_0
      42: invokespecial #24                 // Method getAttributePrefix:()Ljava/lang/String;
      45: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      48: ifne          80
      51: new           #26                 // class org/springframework/security/core/authority/SimpleGrantedAuthority
      54: dup
      55: new           #27                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      62: aload_0
      63: invokespecial #24                 // Method getAttributePrefix:()Ljava/lang/String;
      66: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #31                 // Method org/springframework/security/core/authority/SimpleGrantedAuthority."<init>":(Ljava/lang/String;)V
      79: areturn
      80: new           #26                 // class org/springframework/security/core/authority/SimpleGrantedAuthority
      83: dup
      84: aload_1
      85: invokespecial #31                 // Method org/springframework/security/core/authority/SimpleGrantedAuthority."<init>":(Ljava/lang/String;)V
      88: areturn

  private boolean isConvertAttributeToLowerCase();
    Code:
       0: aload_0
       1: getfield      #5                  // Field convertAttributeToLowerCase:Z
       4: ireturn

  public void setConvertAttributeToLowerCase(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field convertAttributeToLowerCase:Z
       5: return

  private boolean isConvertAttributeToUpperCase();
    Code:
       0: aload_0
       1: getfield      #4                  // Field convertAttributeToUpperCase:Z
       4: ireturn

  public void setConvertAttributeToUpperCase(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field convertAttributeToUpperCase:Z
       5: return

  private java.lang.String getAttributePrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributePrefix:Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #32                 // String
       9: goto          16
      12: aload_0
      13: getfield      #3                  // Field attributePrefix:Ljava/lang/String;
      16: areturn

  public void setAttributePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field attributePrefix:Ljava/lang/String;
       5: return

  private boolean isAddPrefixIfAlreadyExisting();
    Code:
       0: aload_0
       1: getfield      #6                  // Field addPrefixIfAlreadyExisting:Z
       4: ireturn

  public void setAddPrefixIfAlreadyExisting(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field addPrefixIfAlreadyExisting:Z
       5: return

  public java.util.Collection getGrantedAuthorities(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method getGrantedAuthorities:(Ljava/util/Collection;)Ljava/util/List;
       5: areturn
}
