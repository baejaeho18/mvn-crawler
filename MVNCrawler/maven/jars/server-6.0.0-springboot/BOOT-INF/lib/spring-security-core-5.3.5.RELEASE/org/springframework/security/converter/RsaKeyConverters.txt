Compiled from "RsaKeyConverters.java"
public class org.springframework.security.converter.RsaKeyConverters {
  private static final java.lang.String DASHES;

  private static final java.lang.String PKCS8_PEM_HEADER;

  private static final java.lang.String PKCS8_PEM_FOOTER;

  private static final java.lang.String X509_PEM_HEADER;

  private static final java.lang.String X509_PEM_FOOTER;

  public org.springframework.security.converter.RsaKeyConverters();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.springframework.core.convert.converter.Converter<java.io.InputStream, java.security.interfaces.RSAPrivateKey> pkcs8();
    Code:
       0: invokestatic  #3                  // Method rsaFactory:()Ljava/security/KeyFactory;
       3: astore_0
       4: aload_0
       5: invokedynamic #4,  0              // InvokeDynamic #0:convert:(Ljava/security/KeyFactory;)Lorg/springframework/core/convert/converter/Converter;
      10: areturn

  public static org.springframework.core.convert.converter.Converter<java.io.InputStream, java.security.interfaces.RSAPublicKey> x509();
    Code:
       0: invokestatic  #3                  // Method rsaFactory:()Ljava/security/KeyFactory;
       3: astore_0
       4: aload_0
       5: invokedynamic #5,  0              // InvokeDynamic #1:convert:(Ljava/security/KeyFactory;)Lorg/springframework/core/convert/converter/Converter;
      10: areturn

  private static java.util.List<java.lang.String> readAllLines(java.io.InputStream);
    Code:
       0: new           #6                  // class java/io/BufferedReader
       3: dup
       4: new           #7                  // class java/io/InputStreamReader
       7: dup
       8: aload_0
       9: invokespecial #8                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      12: invokespecial #9                  // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      15: astore_1
      16: aload_1
      17: invokevirtual #10                 // Method java/io/BufferedReader.lines:()Ljava/util/stream/Stream;
      20: invokestatic  #11                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #13                 // class java/util/List
      31: areturn

  private static java.security.KeyFactory rsaFactory();
    Code:
       0: ldc           #14                 // String RSA
       2: invokestatic  #15                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
       5: areturn
       6: astore_0
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: aload_0
      12: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      15: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/security/NoSuchAlgorithmException

  private static boolean isNotPkcs8Wrapper(java.lang.String);
    Code:
       0: ldc           #19                 // String -----BEGIN PRIVATE KEY-----
       2: aload_0
       3: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          22
       9: ldc           #21                 // String -----END PRIVATE KEY-----
      11: aload_0
      12: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static boolean isNotX509Wrapper(java.lang.String);
    Code:
       0: ldc           #22                 // String -----BEGIN PUBLIC KEY-----
       2: aload_0
       3: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          22
       9: ldc           #23                 // String -----END PUBLIC KEY-----
      11: aload_0
      12: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static java.security.interfaces.RSAPublicKey lambda$x509$1(java.security.KeyFactory, java.io.InputStream);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method readAllLines:(Ljava/io/InputStream;)Ljava/util/List;
       4: astore_2
       5: aload_2
       6: invokeinterface #25,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          36
      14: aload_2
      15: iconst_0
      16: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #27                 // class java/lang/String
      24: ldc           #22                 // String -----BEGIN PUBLIC KEY-----
      26: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #29                 // String Key is not in PEM-encoded X.509 format, please check that the header begins with ----------BEGIN PUBLIC KEY----------
      39: invokestatic  #30                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      42: new           #31                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      49: astore_3
      50: aload_2
      51: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          98
      68: aload         4
      70: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #27                 // class java/lang/String
      78: astore        5
      80: aload         5
      82: invokestatic  #36                 // Method isNotX509Wrapper:(Ljava/lang/String;)Z
      85: ifeq          95
      88: aload_3
      89: aload         5
      91: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: goto          58
      98: invokestatic  #38                 // Method java/util/Base64.getDecoder:()Ljava/util/Base64$Decoder;
     101: aload_3
     102: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokevirtual #40                 // Method java/util/Base64$Decoder.decode:(Ljava/lang/String;)[B
     108: astore        4
     110: aload_0
     111: new           #41                 // class java/security/spec/X509EncodedKeySpec
     114: dup
     115: aload         4
     117: invokespecial #42                 // Method java/security/spec/X509EncodedKeySpec."<init>":([B)V
     120: invokevirtual #43                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     123: checkcast     #44                 // class java/security/interfaces/RSAPublicKey
     126: areturn
     127: astore        5
     129: new           #46                 // class java/lang/IllegalArgumentException
     132: dup
     133: aload         5
     135: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     138: athrow
    Exception table:
       from    to  target type
         110   126   127   Class java/lang/Exception

  private static java.security.interfaces.RSAPrivateKey lambda$pkcs8$0(java.security.KeyFactory, java.io.InputStream);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method readAllLines:(Ljava/io/InputStream;)Ljava/util/List;
       4: astore_2
       5: aload_2
       6: invokeinterface #25,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          36
      14: aload_2
      15: iconst_0
      16: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #27                 // class java/lang/String
      24: ldc           #19                 // String -----BEGIN PRIVATE KEY-----
      26: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #48                 // String Key is not in PEM-encoded PKCS#8 format, please check that the header begins with ----------BEGIN PRIVATE KEY----------
      39: invokestatic  #30                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      42: new           #31                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      49: astore_3
      50: aload_2
      51: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          98
      68: aload         4
      70: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #27                 // class java/lang/String
      78: astore        5
      80: aload         5
      82: invokestatic  #49                 // Method isNotPkcs8Wrapper:(Ljava/lang/String;)Z
      85: ifeq          95
      88: aload_3
      89: aload         5
      91: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: goto          58
      98: invokestatic  #38                 // Method java/util/Base64.getDecoder:()Ljava/util/Base64$Decoder;
     101: aload_3
     102: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokevirtual #40                 // Method java/util/Base64$Decoder.decode:(Ljava/lang/String;)[B
     108: astore        4
     110: aload_0
     111: new           #50                 // class java/security/spec/PKCS8EncodedKeySpec
     114: dup
     115: aload         4
     117: invokespecial #51                 // Method java/security/spec/PKCS8EncodedKeySpec."<init>":([B)V
     120: invokevirtual #52                 // Method java/security/KeyFactory.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;
     123: checkcast     #53                 // class java/security/interfaces/RSAPrivateKey
     126: areturn
     127: astore        5
     129: new           #46                 // class java/lang/IllegalArgumentException
     132: dup
     133: aload         5
     135: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     138: athrow
    Exception table:
       from    to  target type
         110   126   127   Class java/lang/Exception
}
