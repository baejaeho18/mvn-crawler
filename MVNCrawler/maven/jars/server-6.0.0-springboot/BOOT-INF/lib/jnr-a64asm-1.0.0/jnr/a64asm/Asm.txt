Compiled from "Asm.java"
public final class jnr.a64asm.Asm {
  public static final jnr.a64asm.CPU_A64 Aarch_64;

  public static final jnr.a64asm.Register no_reg;

  public static final jnr.a64asm.Register x0;

  public static final jnr.a64asm.Register x1;

  public static final jnr.a64asm.Register x2;

  public static final jnr.a64asm.Register x3;

  public static final jnr.a64asm.Register x4;

  public static final jnr.a64asm.Register x5;

  public static final jnr.a64asm.Register x6;

  public static final jnr.a64asm.Register x7;

  public static final jnr.a64asm.Register fp;

  public static final jnr.a64asm.Register lr;

  public static final jnr.a64asm.Register sp;

  public static final jnr.a64asm.Register w0;

  public static final jnr.a64asm.Register w1;

  public static final jnr.a64asm.Register w2;

  public static final jnr.a64asm.Register w3;

  public static final jnr.a64asm.Register w4;

  public static final jnr.a64asm.Register w5;

  public static final jnr.a64asm.Register w6;

  public static final jnr.a64asm.Register w7;

  public static final jnr.a64asm.Register w8;

  public static final jnr.a64asm.Register w9;

  public static final jnr.a64asm.Register w10;

  public static final jnr.a64asm.Register w11;

  public static final jnr.a64asm.Register w12;

  public static final jnr.a64asm.Register w13;

  public static final jnr.a64asm.Register w14;

  public static final jnr.a64asm.Register w15;

  private jnr.a64asm.Asm();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  static final jnr.a64asm.Mem _ptr_build(jnr.a64asm.Label, long, int);
    Code:
       0: new           #4                  // class jnr/a64asm/Mem
       3: dup
       4: aload_0
       5: lload_1
       6: iload_3
       7: invokespecial #5                  // Method jnr/a64asm/Mem."<init>":(Ljnr/a64asm/Label;JI)V
      10: areturn

  static final jnr.a64asm.Mem _ptr_build(jnr.a64asm.Label, jnr.a64asm.Register, int, long, int);
    Code:
       0: new           #4                  // class jnr/a64asm/Mem
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: lload_3
       8: iload         5
      10: invokespecial #6                  // Method jnr/a64asm/Mem."<init>":(Ljnr/a64asm/Label;Ljnr/a64asm/Register;IJI)V
      13: areturn

  static final jnr.a64asm.Mem _ptr_build_abs(long, long, int);
    Code:
       0: new           #4                  // class jnr/a64asm/Mem
       3: dup
       4: lload_0
       5: lload_2
       6: iload         4
       8: invokespecial #7                  // Method jnr/a64asm/Mem."<init>":(JJI)V
      11: areturn

  static final jnr.a64asm.Mem _ptr_build_abs(long, jnr.a64asm.Register, int, long, int);
    Code:
       0: new           #4                  // class jnr/a64asm/Mem
       3: dup
       4: lload_0
       5: aload_2
       6: iload_3
       7: lload         4
       9: iload         6
      11: invokespecial #8                  // Method jnr/a64asm/Mem."<init>":(JLjnr/a64asm/Register;IJI)V
      14: areturn

  static final jnr.a64asm.Mem _ptr_build(jnr.a64asm.Register, long, int);
    Code:
       0: new           #4                  // class jnr/a64asm/Mem
       3: dup
       4: aload_0
       5: lload_1
       6: iload_3
       7: invokespecial #9                  // Method jnr/a64asm/Mem."<init>":(Ljnr/a64asm/Register;JI)V
      10: areturn

  static final jnr.a64asm.Mem _ptr_build(jnr.a64asm.Register, jnr.a64asm.Register, int, long, int);
    Code:
       0: new           #4                  // class jnr/a64asm/Mem
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: lload_3
       8: iload         5
      10: invokespecial #10                 // Method jnr/a64asm/Mem."<init>":(Ljnr/a64asm/Register;Ljnr/a64asm/Register;IJI)V
      13: areturn

  public static final jnr.a64asm.Mem ptr(jnr.a64asm.Label, long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_0
       3: invokestatic  #11                 // Method _ptr_build:(Ljnr/a64asm/Label;JI)Ljnr/a64asm/Mem;
       6: areturn

  public static final jnr.a64asm.Mem ptr(jnr.a64asm.Label);
    Code:
       0: aload_0
       1: lconst_0
       2: iconst_0
       3: invokestatic  #11                 // Method _ptr_build:(Ljnr/a64asm/Label;JI)Ljnr/a64asm/Mem;
       6: areturn

  public static final jnr.a64asm.Mem word_ptr(jnr.a64asm.Label, long);
    Code:
       0: aload_0
       1: lload_1
       2: bipush        32
       4: invokestatic  #11                 // Method _ptr_build:(Ljnr/a64asm/Label;JI)Ljnr/a64asm/Mem;
       7: areturn

  public static final jnr.a64asm.Mem word_ptr(jnr.a64asm.Label);
    Code:
       0: aload_0
       1: lconst_0
       2: bipush        32
       4: invokestatic  #11                 // Method _ptr_build:(Ljnr/a64asm/Label;JI)Ljnr/a64asm/Mem;
       7: areturn

  public static final jnr.a64asm.Mem dword_ptr(jnr.a64asm.Label, long);
    Code:
       0: aload_0
       1: lload_1
       2: bipush        64
       4: invokestatic  #11                 // Method _ptr_build:(Ljnr/a64asm/Label;JI)Ljnr/a64asm/Mem;
       7: areturn

  public static final jnr.a64asm.Mem dword_ptr(jnr.a64asm.Label);
    Code:
       0: aload_0
       1: lconst_0
       2: bipush        64
       4: invokestatic  #11                 // Method _ptr_build:(Ljnr/a64asm/Label;JI)Ljnr/a64asm/Mem;
       7: areturn

  public static final jnr.a64asm.Mem ptr(jnr.a64asm.Label, jnr.a64asm.Register, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: iconst_0
       5: invokestatic  #12                 // Method _ptr_build:(Ljnr/a64asm/Label;Ljnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
       8: areturn

  public static final jnr.a64asm.Mem word_ptr(jnr.a64asm.Label, jnr.a64asm.Register, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: bipush        32
       6: invokestatic  #12                 // Method _ptr_build:(Ljnr/a64asm/Label;Ljnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
       9: areturn

  public static final jnr.a64asm.Mem dword_ptr(jnr.a64asm.Label, jnr.a64asm.Register, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: bipush        64
       6: invokestatic  #12                 // Method _ptr_build:(Ljnr/a64asm/Label;Ljnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
       9: areturn

  public static final jnr.a64asm.Mem word_ptr_abs(long, jnr.a64asm.Register, int, long);
    Code:
       0: lload_0
       1: aload_2
       2: iload_3
       3: lload         4
       5: bipush        32
       7: invokestatic  #13                 // Method _ptr_build_abs:(JLjnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
      10: areturn

  public static final jnr.a64asm.Mem dword_ptr_abs(long, jnr.a64asm.Register, int, long);
    Code:
       0: lload_0
       1: aload_2
       2: iload_3
       3: lload         4
       5: bipush        64
       7: invokestatic  #13                 // Method _ptr_build_abs:(JLjnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
      10: areturn

  public static final jnr.a64asm.Mem ptr(jnr.a64asm.Register, long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_0
       3: invokestatic  #14                 // Method _ptr_build:(Ljnr/a64asm/Register;JI)Ljnr/a64asm/Mem;
       6: areturn

  public static final jnr.a64asm.Mem word_ptr(jnr.a64asm.Register, long);
    Code:
       0: aload_0
       1: lload_1
       2: bipush        32
       4: invokestatic  #14                 // Method _ptr_build:(Ljnr/a64asm/Register;JI)Ljnr/a64asm/Mem;
       7: areturn

  public static final jnr.a64asm.Mem dword_ptr(jnr.a64asm.Register, long);
    Code:
       0: aload_0
       1: lload_1
       2: bipush        64
       4: invokestatic  #14                 // Method _ptr_build:(Ljnr/a64asm/Register;JI)Ljnr/a64asm/Mem;
       7: areturn

  public static final jnr.a64asm.Mem ptr(jnr.a64asm.Register, jnr.a64asm.Register, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: iconst_0
       5: invokestatic  #15                 // Method _ptr_build:(Ljnr/a64asm/Register;Ljnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
       8: areturn

  public static final jnr.a64asm.Mem word_ptr(jnr.a64asm.Register, jnr.a64asm.Register, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: bipush        32
       6: invokestatic  #15                 // Method _ptr_build:(Ljnr/a64asm/Register;Ljnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
       9: areturn

  public static final jnr.a64asm.Mem dword_ptr(jnr.a64asm.Register, jnr.a64asm.Register, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: bipush        64
       6: invokestatic  #15                 // Method _ptr_build:(Ljnr/a64asm/Register;Ljnr/a64asm/Register;IJI)Ljnr/a64asm/Mem;
       9: areturn

  public static final jnr.a64asm.Immediate imm(long);
    Code:
       0: lload_0
       1: invokestatic  #16                 // Method jnr/a64asm/Immediate.imm:(J)Ljnr/a64asm/Immediate;
       4: areturn

  public static final jnr.a64asm.Immediate uimm(long);
    Code:
       0: lload_0
       1: invokestatic  #16                 // Method jnr/a64asm/Immediate.imm:(J)Ljnr/a64asm/Immediate;
       4: areturn

  static {};
    Code:
       0: getstatic     #17                 // Field jnr/a64asm/CPU_A64.A64:Ljnr/a64asm/CPU_A64;
       3: putstatic     #18                 // Field Aarch_64:Ljnr/a64asm/CPU_A64;
       6: new           #19                 // class jnr/a64asm/Register
       9: dup
      10: sipush        255
      13: iconst_0
      14: invokespecial #20                 // Method jnr/a64asm/Register."<init>":(II)V
      17: putstatic     #21                 // Field no_reg:Ljnr/a64asm/Register;
      20: iconst_0
      21: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      24: putstatic     #23                 // Field x0:Ljnr/a64asm/Register;
      27: iconst_1
      28: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      31: putstatic     #24                 // Field x1:Ljnr/a64asm/Register;
      34: iconst_2
      35: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      38: putstatic     #25                 // Field x2:Ljnr/a64asm/Register;
      41: iconst_3
      42: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      45: putstatic     #26                 // Field x3:Ljnr/a64asm/Register;
      48: iconst_4
      49: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      52: putstatic     #27                 // Field x4:Ljnr/a64asm/Register;
      55: iconst_5
      56: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      59: putstatic     #28                 // Field x5:Ljnr/a64asm/Register;
      62: bipush        6
      64: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      67: putstatic     #29                 // Field x6:Ljnr/a64asm/Register;
      70: bipush        7
      72: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      75: putstatic     #30                 // Field x7:Ljnr/a64asm/Register;
      78: bipush        29
      80: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      83: putstatic     #31                 // Field fp:Ljnr/a64asm/Register;
      86: bipush        30
      88: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      91: putstatic     #32                 // Field lr:Ljnr/a64asm/Register;
      94: bipush        31
      96: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
      99: putstatic     #33                 // Field sp:Ljnr/a64asm/Register;
     102: bipush        32
     104: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     107: putstatic     #34                 // Field w0:Ljnr/a64asm/Register;
     110: bipush        33
     112: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     115: putstatic     #35                 // Field w1:Ljnr/a64asm/Register;
     118: bipush        34
     120: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     123: putstatic     #36                 // Field w2:Ljnr/a64asm/Register;
     126: bipush        35
     128: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     131: putstatic     #37                 // Field w3:Ljnr/a64asm/Register;
     134: bipush        36
     136: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     139: putstatic     #38                 // Field w4:Ljnr/a64asm/Register;
     142: bipush        37
     144: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     147: putstatic     #39                 // Field w5:Ljnr/a64asm/Register;
     150: bipush        38
     152: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     155: putstatic     #40                 // Field w6:Ljnr/a64asm/Register;
     158: bipush        39
     160: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     163: putstatic     #41                 // Field w7:Ljnr/a64asm/Register;
     166: bipush        40
     168: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     171: putstatic     #42                 // Field w8:Ljnr/a64asm/Register;
     174: bipush        41
     176: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     179: putstatic     #43                 // Field w9:Ljnr/a64asm/Register;
     182: bipush        42
     184: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     187: putstatic     #44                 // Field w10:Ljnr/a64asm/Register;
     190: bipush        43
     192: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     195: putstatic     #45                 // Field w11:Ljnr/a64asm/Register;
     198: bipush        44
     200: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     203: putstatic     #46                 // Field w12:Ljnr/a64asm/Register;
     206: bipush        45
     208: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     211: putstatic     #47                 // Field w13:Ljnr/a64asm/Register;
     214: bipush        46
     216: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     219: putstatic     #48                 // Field w14:Ljnr/a64asm/Register;
     222: bipush        47
     224: invokestatic  #22                 // Method jnr/a64asm/Register.gpr:(I)Ljnr/a64asm/Register;
     227: putstatic     #49                 // Field w15:Ljnr/a64asm/Register;
     230: return
}
