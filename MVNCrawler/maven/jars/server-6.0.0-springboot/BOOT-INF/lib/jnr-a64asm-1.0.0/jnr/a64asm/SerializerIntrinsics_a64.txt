Compiled from "SerializerIntrinsics_a64.java"
public abstract class jnr.a64asm.SerializerIntrinsics_a64 extends jnr.a64asm.SerializerCore {
  public jnr.a64asm.SerializerIntrinsics_a64();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jnr/a64asm/SerializerCore."<init>":()V
       4: return

  public final void adc(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field jnr/a64asm/INST_CODE.INST_ADC_ADDSUB_CARRY:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void adcs(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field jnr/a64asm/INST_CODE.INST_ADCS_ADDSUB_CARRY:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void add(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #5                  // Field jnr/a64asm/INST_CODE.INST_ADD_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void add(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field jnr/a64asm/INST_CODE.INST_ADD_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void add(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field jnr/a64asm/INST_CODE.INST_ADD_EXT_ADDSUB_EXT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void adds(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #9                  // Field jnr/a64asm/INST_CODE.INST_ADDS_ADDSUB_EXT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void adds(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field jnr/a64asm/INST_CODE.INST_ADDS_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void adds(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field jnr/a64asm/INST_CODE.INST_ADDS_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void adr(jnr.a64asm.Register, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field jnr/a64asm/INST_CODE.INST_ADR_PCRELADDR:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void adrp(jnr.a64asm.Register, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field jnr/a64asm/INST_CODE.INST_ADRP_PCRELADDR:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void and(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field jnr/a64asm/INST_CODE.INST_AND_LOG_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void and(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #16                 // Field jnr/a64asm/INST_CODE.INST_AND_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ands(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #17                 // Field jnr/a64asm/INST_CODE.INST_ANDS_LOG_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ands(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field jnr/a64asm/INST_CODE.INST_ANDS_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void asr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field jnr/a64asm/INST_CODE.INST_ASR_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void asr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #20                 // Field jnr/a64asm/INST_CODE.INST_ASR_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void asrv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #21                 // Field jnr/a64asm/INST_CODE.INST_ASRV_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void b(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #22                 // Field jnr/a64asm/INST_CODE.INST_B_BRANCH_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bcc(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field jnr/a64asm/INST_CODE.INST_BCC_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bcs(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field jnr/a64asm/INST_CODE.INST_BCS_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void beq(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #26                 // Field jnr/a64asm/INST_CODE.INST_BEQ_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bfi(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field jnr/a64asm/INST_CODE.INST_BFI_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void bfm(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field jnr/a64asm/INST_CODE.INST_BFM_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void bfxil(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field jnr/a64asm/INST_CODE.INST_BFXIL_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void bge(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field jnr/a64asm/INST_CODE.INST_BGE_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bgt(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field jnr/a64asm/INST_CODE.INST_BGT_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bhi(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #32                 // Field jnr/a64asm/INST_CODE.INST_BHI_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bhs(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #33                 // Field jnr/a64asm/INST_CODE.INST_BHS_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bic(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #34                 // Field jnr/a64asm/INST_CODE.INST_BIC_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void bics(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #35                 // Field jnr/a64asm/INST_CODE.INST_BICS_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void bl(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #36                 // Field jnr/a64asm/INST_CODE.INST_BL_BRANCH_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void ble(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #37                 // Field jnr/a64asm/INST_CODE.INST_BLE_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void blo(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #38                 // Field jnr/a64asm/INST_CODE.INST_BLO_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void blr(jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field jnr/a64asm/INST_CODE.INST_BLR_BRANCH_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bls(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #40                 // Field jnr/a64asm/INST_CODE.INST_BLS_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void blt(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #41                 // Field jnr/a64asm/INST_CODE.INST_BLT_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bmi(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #42                 // Field jnr/a64asm/INST_CODE.INST_BMI_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bne(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field jnr/a64asm/INST_CODE.INST_BNE_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bpl(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #44                 // Field jnr/a64asm/INST_CODE.INST_BPL_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void br(jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #45                 // Field jnr/a64asm/INST_CODE.INST_BR_BRANCH_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void brk(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #46                 // Field jnr/a64asm/INST_CODE.INST_BRK_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bvc(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #47                 // Field jnr/a64asm/INST_CODE.INST_BVC_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void bvs(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #48                 // Field jnr/a64asm/INST_CODE.INST_BVS_CONDBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void cbnz(jnr.a64asm.Register, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #49                 // Field jnr/a64asm/INST_CODE.INST_CBNZ_COMPBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void cbz(jnr.a64asm.Register, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #50                 // Field jnr/a64asm/INST_CODE.INST_CBZ_COMPBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ccmn(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #51                 // Field jnr/a64asm/INST_CODE.INST_CCMN_CONDCMP_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ccmn(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #52                 // Field jnr/a64asm/INST_CODE.INST_CCMN_CONDCMP_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ccmp(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #53                 // Field jnr/a64asm/INST_CODE.INST_CCMP_CONDCMP_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ccmp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #54                 // Field jnr/a64asm/INST_CODE.INST_CCMP_CONDCMP_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void cinc(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #55                 // Field jnr/a64asm/INST_CODE.INST_CINC_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cinv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #56                 // Field jnr/a64asm/INST_CODE.INST_CINV_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void clrex(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #57                 // Field jnr/a64asm/INST_CODE.INST_CLREX_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void cls(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #58                 // Field jnr/a64asm/INST_CODE.INST_CLS_DP_1SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void clz(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #59                 // Field jnr/a64asm/INST_CODE.INST_CLZ_DP_1SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void cmn(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #60                 // Field jnr/a64asm/INST_CODE.INST_CMN_ADDSUB_EXT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cmn(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #61                 // Field jnr/a64asm/INST_CODE.INST_CMN_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cmn(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #62                 // Field jnr/a64asm/INST_CODE.INST_CMN_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cmp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #63                 // Field jnr/a64asm/INST_CODE.INST_CMP_ADDSUB_EXT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cmp(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #64                 // Field jnr/a64asm/INST_CODE.INST_CMP_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cmp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #65                 // Field jnr/a64asm/INST_CODE.INST_CMP_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void cneg(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #66                 // Field jnr/a64asm/INST_CODE.INST_CNEG_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void csel(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #67                 // Field jnr/a64asm/INST_CODE.INST_CSEL_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void cset(jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #68                 // Field jnr/a64asm/INST_CODE.INST_CSET_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void csetm(jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #69                 // Field jnr/a64asm/INST_CODE.INST_CSETM_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void csinc(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #70                 // Field jnr/a64asm/INST_CODE.INST_CSINC_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void csinv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #71                 // Field jnr/a64asm/INST_CODE.INST_CSINV_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void csneg(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Conditions);
    Code:
       0: aload_0
       1: getstatic     #72                 // Field jnr/a64asm/INST_CODE.INST_CSNEG_CONDSEL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void dc(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #73                 // Field jnr/a64asm/INST_CODE.INST_DC_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void dcps1(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #74                 // Field jnr/a64asm/INST_CODE.INST_DCPS1_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void dcps2(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #75                 // Field jnr/a64asm/INST_CODE.INST_DCPS2_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void dcps3(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #76                 // Field jnr/a64asm/INST_CODE.INST_DCPS3_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void dmb(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #77                 // Field jnr/a64asm/INST_CODE.INST_DMB_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void drps();
    Code:
       0: aload_0
       1: getstatic     #78                 // Field jnr/a64asm/INST_CODE.INST_DRPS_BRANCH_REG:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void dsb(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #80                 // Field jnr/a64asm/INST_CODE.INST_DSB_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void eon(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #81                 // Field jnr/a64asm/INST_CODE.INST_EON_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void eor(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #82                 // Field jnr/a64asm/INST_CODE.INST_EOR_LOG_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void eor(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #83                 // Field jnr/a64asm/INST_CODE.INST_EOR_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void eret();
    Code:
       0: aload_0
       1: getstatic     #84                 // Field jnr/a64asm/INST_CODE.INST_ERET_BRANCH_REG:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void extr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #85                 // Field jnr/a64asm/INST_CODE.INST_EXTR_EXTRACT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void hint(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #86                 // Field jnr/a64asm/INST_CODE.INST_HINT_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void hlt(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #87                 // Field jnr/a64asm/INST_CODE.INST_HLT_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void hvc(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #88                 // Field jnr/a64asm/INST_CODE.INST_HVC_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void ic(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #89                 // Field jnr/a64asm/INST_CODE.INST_IC_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void isb(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #90                 // Field jnr/a64asm/INST_CODE.INST_ISB_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void ldar(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #91                 // Field jnr/a64asm/INST_CODE.INST_LDAR_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldarb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #92                 // Field jnr/a64asm/INST_CODE.INST_LDARB_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldarh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #93                 // Field jnr/a64asm/INST_CODE.INST_LDARH_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldaxp(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #94                 // Field jnr/a64asm/INST_CODE.INST_LDAXP_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldaxr(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #95                 // Field jnr/a64asm/INST_CODE.INST_LDAXR_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldaxrb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #96                 // Field jnr/a64asm/INST_CODE.INST_LDAXRB_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldaxrh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #97                 // Field jnr/a64asm/INST_CODE.INST_LDAXRH_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldnp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #98                 // Field jnr/a64asm/INST_CODE.INST_LDNP_LDSTNAPAIR_OFFS:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ldp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Post_index);
    Code:
       0: aload_0
       1: getstatic     #99                 // Field jnr/a64asm/INST_CODE.INST_LDP_POST_INDEXED_IDST_IMM9:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #100                // Field jnr/a64asm/INST_CODE.INST_LDP_PRE_INDEXED_IDST_IMM9:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #101                // Field jnr/a64asm/INST_CODE.INST_LDP_LDSTPAIR_OFF_LDST_POS:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldpsw(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Mem, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #102                // Field jnr/a64asm/INST_CODE.INST_LDPSW_POST_INDEXED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ldpsw(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #103                // Field jnr/a64asm/INST_CODE.INST_LDPSW_PRE_INDEXED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldpsw(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #104                // Field jnr/a64asm/INST_CODE.INST_LDPSW_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldr(jnr.a64asm.Register, jnr.a64asm.Post_index);
    Code:
       0: aload_0
       1: getstatic     #105                // Field jnr/a64asm/INST_CODE.INST_LDR_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldr(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #106                // Field jnr/a64asm/INST_CODE.INST_LDR_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldr(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #107                // Field jnr/a64asm/INST_CODE.INST_LDR_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldr(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #108                // Field jnr/a64asm/INST_CODE.INST_LDR_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldr(jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #109                // Field jnr/a64asm/INST_CODE.INST_LDR_LOADLIT:Ljnr/a64asm/INST_CODE;
       4: aload_2
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void ldrb(jnr.a64asm.Register, jnr.a64asm.Mem, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #110                // Field jnr/a64asm/INST_CODE.INST_LDRB_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldrb(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #111                // Field jnr/a64asm/INST_CODE.INST_LDRB_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrb(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #112                // Field jnr/a64asm/INST_CODE.INST_LDRB_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #113                // Field jnr/a64asm/INST_CODE.INST_LDRB_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrh(jnr.a64asm.Register, jnr.a64asm.Mem, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #114                // Field jnr/a64asm/INST_CODE.INST_LDRH_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldrh(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #115                // Field jnr/a64asm/INST_CODE.INST_LDRH_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrh(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #116                // Field jnr/a64asm/INST_CODE.INST_LDRH_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #117                // Field jnr/a64asm/INST_CODE.INST_LDRH_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsb(jnr.a64asm.Register, jnr.a64asm.Mem, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #118                // Field jnr/a64asm/INST_CODE.INST_LDRSB_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldrsb(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #119                // Field jnr/a64asm/INST_CODE.INST_LDRSB_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsb(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #120                // Field jnr/a64asm/INST_CODE.INST_LDRSB_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #121                // Field jnr/a64asm/INST_CODE.INST_LDRSB_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsh(jnr.a64asm.Register, jnr.a64asm.Mem, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #122                // Field jnr/a64asm/INST_CODE.INST_LDRSH_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldrsh(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #123                // Field jnr/a64asm/INST_CODE.INST_LDRSH_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsh(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #124                // Field jnr/a64asm/INST_CODE.INST_LDRSH_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #125                // Field jnr/a64asm/INST_CODE.INST_LDRSH_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsw(jnr.a64asm.Register, jnr.a64asm.Mem, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #126                // Field jnr/a64asm/INST_CODE.INST_LDRSW_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ldrsw(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #127                // Field jnr/a64asm/INST_CODE.INST_LDRSW_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsw(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #128                // Field jnr/a64asm/INST_CODE.INST_LDRSW_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsw(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #129                // Field jnr/a64asm/INST_CODE.INST_LDRSW_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldrsw(jnr.a64asm.Register, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #130                // Field jnr/a64asm/INST_CODE.INST_LDRSW_LOADLIT:Ljnr/a64asm/INST_CODE;
       4: aload_2
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void ldtr(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #131                // Field jnr/a64asm/INST_CODE.INST_LDTR_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldtrb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #132                // Field jnr/a64asm/INST_CODE.INST_LDTRB_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldtrh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #133                // Field jnr/a64asm/INST_CODE.INST_LDTRH_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldtrsb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #134                // Field jnr/a64asm/INST_CODE.INST_LDTRSB_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldtrsh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #135                // Field jnr/a64asm/INST_CODE.INST_LDTRSH_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldtrsw(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #136                // Field jnr/a64asm/INST_CODE.INST_LDTRSW_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldur(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #137                // Field jnr/a64asm/INST_CODE.INST_LDUR_LDST_UNSCALED_X:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldurb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #138                // Field jnr/a64asm/INST_CODE.INST_LDURB_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldurh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #139                // Field jnr/a64asm/INST_CODE.INST_LDURH_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldursb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #140                // Field jnr/a64asm/INST_CODE.INST_LDURSB_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldursh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #141                // Field jnr/a64asm/INST_CODE.INST_LDURSH_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldursw(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #142                // Field jnr/a64asm/INST_CODE.INST_LDURSW_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldxp(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #143                // Field jnr/a64asm/INST_CODE.INST_LDXP_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldxr(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #144                // Field jnr/a64asm/INST_CODE.INST_LDXR_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldxrb(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #145                // Field jnr/a64asm/INST_CODE.INST_LDXRB_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ldxrh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #146                // Field jnr/a64asm/INST_CODE.INST_LDXRH_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void lsl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #147                // Field jnr/a64asm/INST_CODE.INST_LSL_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void lsl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #148                // Field jnr/a64asm/INST_CODE.INST_LSL_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void lslv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #149                // Field jnr/a64asm/INST_CODE.INST_LSLV_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void lsr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #150                // Field jnr/a64asm/INST_CODE.INST_LSR_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void lsr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #151                // Field jnr/a64asm/INST_CODE.INST_LSR_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void lsrv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #152                // Field jnr/a64asm/INST_CODE.INST_LSRV_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void madd(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #153                // Field jnr/a64asm/INST_CODE.INST_MADD_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void mneg(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #154                // Field jnr/a64asm/INST_CODE.INST_MNEG_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void mov(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_1
       1: invokevirtual #155                // Method jnr/a64asm/Register.code:()I
       4: bipush        31
       6: if_icmpge     30
       9: aload_2
      10: invokevirtual #155                // Method jnr/a64asm/Register.code:()I
      13: bipush        31
      15: if_icmpge     30
      18: aload_0
      19: getstatic     #156                // Field jnr/a64asm/INST_CODE.INST_MOV_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
      22: aload_1
      23: aload_2
      24: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      27: goto          39
      30: aload_0
      31: getstatic     #157                // Field jnr/a64asm/INST_CODE.INST_MOV_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
      34: aload_1
      35: aload_2
      36: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      39: return

  public final void mov(jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #157                // Field jnr/a64asm/INST_CODE.INST_MOV_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void mov(jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_1
       1: invokevirtual #155                // Method jnr/a64asm/Register.code:()I
       4: bipush        31
       6: if_icmpge     21
       9: aload_0
      10: getstatic     #158                // Field jnr/a64asm/INST_CODE.INST_MOV_MOVEWIDE_X:Ljnr/a64asm/INST_CODE;
      13: aload_1
      14: aload_2
      15: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      18: goto          30
      21: aload_0
      22: getstatic     #159                // Field jnr/a64asm/INST_CODE.INST_MOV_LOG_IMM:Ljnr/a64asm/INST_CODE;
      25: aload_1
      26: aload_2
      27: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      30: return

  public final void movk(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #160                // Field jnr/a64asm/INST_CODE.INST_MOVK_MOVEWIDE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void movn(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #161                // Field jnr/a64asm/INST_CODE.INST_MOVN_MOVEWIDE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void movz(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #162                // Field jnr/a64asm/INST_CODE.INST_MOVZ_MOVEWIDE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void mrs(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #163                // Field jnr/a64asm/INST_CODE.INST_MRS_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void msr(jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #164                // Field jnr/a64asm/INST_CODE.INST_MSR_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void msr(jnr.a64asm.SysRegister, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #165                // Field jnr/a64asm/INST_CODE.INST_MSR_IC_SYSTEM_X:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void msub(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #166                // Field jnr/a64asm/INST_CODE.INST_MSUB_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void mul(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #167                // Field jnr/a64asm/INST_CODE.INST_MUL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void mvn(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #168                // Field jnr/a64asm/INST_CODE.INST_MVN_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void neg(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #169                // Field jnr/a64asm/INST_CODE.INST_NEG_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void negs(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #170                // Field jnr/a64asm/INST_CODE.INST_NEGS_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ngc(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #171                // Field jnr/a64asm/INST_CODE.INST_NGC_ADDSUB_CARRY:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ngcs(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #172                // Field jnr/a64asm/INST_CODE.INST_NGCS_ADDSUB_CARRY:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void nop();
    Code:
       0: aload_0
       1: getstatic     #173                // Field jnr/a64asm/INST_CODE.INST_NOP_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void orn(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #174                // Field jnr/a64asm/INST_CODE.INST_ORN_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void orr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #175                // Field jnr/a64asm/INST_CODE.INST_ORR_LOG_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void orr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #176                // Field jnr/a64asm/INST_CODE.INST_ORR_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void prfm(jnr.a64asm.PRFOP_ENUM, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #177                // Field jnr/a64asm/INST_CODE.INST_PRFM_LDST_POS__IMMEDIATE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void prfm(jnr.a64asm.PRFOP_ENUM, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #178                // Field jnr/a64asm/INST_CODE.INST_PRFM_LOADLIT__LITERAL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void prfm(jnr.a64asm.PRFOP_ENUM, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #179                // Field jnr/a64asm/INST_CODE.INST_PRFM_LDST_REGOFF__REGISTER:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void prfum(jnr.a64asm.PRFOP_ENUM, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #180                // Field jnr/a64asm/INST_CODE.INST_PRFUM_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void rbit(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #181                // Field jnr/a64asm/INST_CODE.INST_RBIT_DP_1SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ret(jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #182                // Field jnr/a64asm/INST_CODE.INST_RET_BRANCH_REG:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void rev(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #183                // Field jnr/a64asm/INST_CODE.INST_REV_DP_1SRC_X:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void rev16(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #184                // Field jnr/a64asm/INST_CODE.INST_REV16_DP_1SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void rev32(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #185                // Field jnr/a64asm/INST_CODE.INST_REV32_DP_1SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void ror(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #186                // Field jnr/a64asm/INST_CODE.INST_ROR_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ror(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #187                // Field jnr/a64asm/INST_CODE.INST_ROR_EXTRACT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void rorv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #188                // Field jnr/a64asm/INST_CODE.INST_RORV_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void sbc(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #189                // Field jnr/a64asm/INST_CODE.INST_SBC_ADDSUB_CARRY:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void sbcs(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #190                // Field jnr/a64asm/INST_CODE.INST_SBCS_ADDSUB_CARRY:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void sbfiz(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #191                // Field jnr/a64asm/INST_CODE.INST_SBFIZ_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void sbfm(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #192                // Field jnr/a64asm/INST_CODE.INST_SBFM_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void sbfx(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #193                // Field jnr/a64asm/INST_CODE.INST_SBFX_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void sdiv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #194                // Field jnr/a64asm/INST_CODE.INST_SDIV_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void sev();
    Code:
       0: aload_0
       1: getstatic     #195                // Field jnr/a64asm/INST_CODE.INST_SEV_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void sevl();
    Code:
       0: aload_0
       1: getstatic     #196                // Field jnr/a64asm/INST_CODE.INST_SEVL_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void smaddl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #197                // Field jnr/a64asm/INST_CODE.INST_SMADDL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void smc(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #198                // Field jnr/a64asm/INST_CODE.INST_SMC_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void smnegl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #199                // Field jnr/a64asm/INST_CODE.INST_SMNEGL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void smsubl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #200                // Field jnr/a64asm/INST_CODE.INST_SMSUBL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void smulh(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #201                // Field jnr/a64asm/INST_CODE.INST_SMULH_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void smull(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #202                // Field jnr/a64asm/INST_CODE.INST_SMULL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stlr(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #203                // Field jnr/a64asm/INST_CODE.INST_STLR_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void stlrb(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #204                // Field jnr/a64asm/INST_CODE.INST_STLRB_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stlrh(jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #205                // Field jnr/a64asm/INST_CODE.INST_STLRH_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void stlxp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #206                // Field jnr/a64asm/INST_CODE.INST_STLXP_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void stlxr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #207                // Field jnr/a64asm/INST_CODE.INST_STLXR_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stlxrb(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #208                // Field jnr/a64asm/INST_CODE.INST_STLXRB_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stlxrh(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #209                // Field jnr/a64asm/INST_CODE.INST_STLXRH_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stnp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Mem);
    Code:
       0: aload_0
       1: getstatic     #210                // Field jnr/a64asm/INST_CODE.INST_STNP_LDSTNAPAIR_OFFS:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Post_index);
    Code:
       0: aload_0
       1: getstatic     #211                // Field jnr/a64asm/INST_CODE.INST_STP_LDSTPAIR_INDEXED_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #212                // Field jnr/a64asm/INST_CODE.INST_STP_LDSTPAIR_INDEXED_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #213                // Field jnr/a64asm/INST_CODE.INST_STP_LDSTPAIR_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void str(jnr.a64asm.Register, jnr.a64asm.Post_index);
    Code:
       0: aload_0
       1: getstatic     #214                // Field jnr/a64asm/INST_CODE.INST_STR_LDST_IMM9_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void str(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #215                // Field jnr/a64asm/INST_CODE.INST_STR_LDST_IMM9_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void str(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #216                // Field jnr/a64asm/INST_CODE.INST_STR_LDST_POS:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void str(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #217                // Field jnr/a64asm/INST_CODE.INST_STR_LDST_REGOFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void strb(jnr.a64asm.Register, jnr.a64asm.Post_index);
    Code:
       0: aload_0
       1: getstatic     #218                // Field jnr/a64asm/INST_CODE.INST_STRB_LDST_IMM9_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void strb(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #219                // Field jnr/a64asm/INST_CODE.INST_STRB_LDST_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void strb(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #220                // Field jnr/a64asm/INST_CODE.INST_STRB_LDST_OFFSET:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void strb(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #221                // Field jnr/a64asm/INST_CODE.INST_STRB_LDST_REGOFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void strh(jnr.a64asm.Register, jnr.a64asm.Post_index);
    Code:
       0: aload_0
       1: getstatic     #222                // Field jnr/a64asm/INST_CODE.INST_STRH_LDST_IMM_POST:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void strh(jnr.a64asm.Register, jnr.a64asm.Pre_index);
    Code:
       0: aload_0
       1: getstatic     #223                // Field jnr/a64asm/INST_CODE.INST_STRH_LDST_IMM_PRE:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void strh(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #224                // Field jnr/a64asm/INST_CODE.INST_STRH_LDST_IMM_OFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void strh(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #225                // Field jnr/a64asm/INST_CODE.INST_STRH_LDST_REGOFF:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void sttr(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #226                // Field jnr/a64asm/INST_CODE.INST_STTR_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void sttrb(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #227                // Field jnr/a64asm/INST_CODE.INST_STTRB_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void sttrh(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #228                // Field jnr/a64asm/INST_CODE.INST_STTRH_LDST_UNPRIV:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void stur(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #229                // Field jnr/a64asm/INST_CODE.INST_STUR_LDST_UNSCALED_X:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void sturb(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #230                // Field jnr/a64asm/INST_CODE.INST_STURB_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void sturh(jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #231                // Field jnr/a64asm/INST_CODE.INST_STURH_LDST_UNSCALED:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void stxp(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #232                // Field jnr/a64asm/INST_CODE.INST_STXP_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #233                // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      14: return

  public final void stxr(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #234                // Field jnr/a64asm/INST_CODE.INST_STXR_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stxrb(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #235                // Field jnr/a64asm/INST_CODE.INST_STXRB_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void stxrh(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Offset);
    Code:
       0: aload_0
       1: getstatic     #236                // Field jnr/a64asm/INST_CODE.INST_STXRH_LDSTEXCL:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void sub(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #237                // Field jnr/a64asm/INST_CODE.INST_SUB_ADDSUB_EXT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void sub(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #238                // Field jnr/a64asm/INST_CODE.INST_SUB_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void sub(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #239                // Field jnr/a64asm/INST_CODE.INST_SUB_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void subs(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Ext);
    Code:
       0: aload_0
       1: getstatic     #240                // Field jnr/a64asm/INST_CODE.INST_SUBS_ADDSUB_EXT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void subs(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #241                // Field jnr/a64asm/INST_CODE.INST_SUBS_ADDSUB_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void subs(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #242                // Field jnr/a64asm/INST_CODE.INST_SUBS_ADDSUB_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void svc(jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #243                // Field jnr/a64asm/INST_CODE.INST_SVC_EXCEPTION:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: invokevirtual #23                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;)V
       8: return

  public final void sxtb(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #244                // Field jnr/a64asm/INST_CODE.INST_SXTB_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void sxth(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #245                // Field jnr/a64asm/INST_CODE.INST_SXTH_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void sxtw(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #246                // Field jnr/a64asm/INST_CODE.INST_SXTW_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void tbnz(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #247                // Field jnr/a64asm/INST_CODE.INST_TBNZ_TESTBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void tbz(jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Label);
    Code:
       0: aload_0
       1: getstatic     #248                // Field jnr/a64asm/INST_CODE.INST_TBZ_TESTBRANCH:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void tst(jnr.a64asm.Register, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #249                // Field jnr/a64asm/INST_CODE.INST_TST_LOG_IMM:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void tst(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Shift);
    Code:
       0: aload_0
       1: getstatic     #250                // Field jnr/a64asm/INST_CODE.INST_TST_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void ubfiz(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #251                // Field jnr/a64asm/INST_CODE.INST_UBFIZ_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ubfm(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #252                // Field jnr/a64asm/INST_CODE.INST_UBFM_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void ubfx(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Immediate, jnr.a64asm.Immediate);
    Code:
       0: aload_0
       1: getstatic     #253                // Field jnr/a64asm/INST_CODE.INST_UBFX_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void udiv(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #254                // Field jnr/a64asm/INST_CODE.INST_UDIV_DP_2SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void umaddl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #255                // Field jnr/a64asm/INST_CODE.INST_UMADDL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void umnegl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #256                // Field jnr/a64asm/INST_CODE.INST_UMNEGL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void umsubl(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #257                // Field jnr/a64asm/INST_CODE.INST_UMSUBL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      12: return

  public final void umulh(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #258                // Field jnr/a64asm/INST_CODE.INST_UMULH_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void umull(jnr.a64asm.Register, jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #259                // Field jnr/a64asm/INST_CODE.INST_UMULL_DP_3SRC:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #3                  // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      10: return

  public final void uxtb(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #260                // Field jnr/a64asm/INST_CODE.INST_UXTB_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void uxth(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #261                // Field jnr/a64asm/INST_CODE.INST_UXTH_BITFIELD:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void uxtw(jnr.a64asm.Register, jnr.a64asm.Register);
    Code:
       0: aload_0
       1: getstatic     #262                // Field jnr/a64asm/INST_CODE.INST_UXTW_LOG_SHIFT:Ljnr/a64asm/INST_CODE;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method emitA64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
       9: return

  public final void wfe();
    Code:
       0: aload_0
       1: getstatic     #263                // Field jnr/a64asm/INST_CODE.INST_WFE_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void wfi();
    Code:
       0: aload_0
       1: getstatic     #264                // Field jnr/a64asm/INST_CODE.INST_WFI_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return

  public final void yield();
    Code:
       0: aload_0
       1: getstatic     #265                // Field jnr/a64asm/INST_CODE.INST_YIELD_IC_SYSTEM:Ljnr/a64asm/INST_CODE;
       4: invokevirtual #79                 // Method emitA64:(Ljnr/a64asm/INST_CODE;)V
       7: return
}
