Compiled from "SerializerCore.java"
public abstract class jnr.a64asm.SerializerCore {
  static final jnr.a64asm.Operand _none;

  public jnr.a64asm.SerializerCore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  abstract void _emita64(jnr.a64asm.INST_CODE, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand);

  void emitA64(jnr.a64asm.INST_CODE);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
       5: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
       8: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      11: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      14: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      17: invokevirtual #3                  // Method _emita64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      20: return

  void emitA64(jnr.a64asm.INST_CODE, jnr.a64asm.Operand);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
       6: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
       9: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      12: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      15: invokevirtual #3                  // Method _emita64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      18: return

  void emitA64(jnr.a64asm.INST_CODE, jnr.a64asm.Operand, jnr.a64asm.Operand);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
       7: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      10: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      13: invokevirtual #3                  // Method _emita64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      16: return

  void emitA64(jnr.a64asm.INST_CODE, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
       9: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      12: invokevirtual #3                  // Method _emita64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      15: return

  void emitA64(jnr.a64asm.INST_CODE, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: getstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      11: invokevirtual #3                  // Method _emita64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      14: return

  void emitA64(jnr.a64asm.INST_CODE, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand, jnr.a64asm.Operand);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokevirtual #3                  // Method _emita64:(Ljnr/a64asm/INST_CODE;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;Ljnr/a64asm/Operand;)V
      13: return

  abstract boolean is64();

  static {};
    Code:
       0: new           #4                  // class jnr/a64asm/SerializerCore$1
       3: dup
       4: iconst_0
       5: iconst_0
       6: invokespecial #6                  // Method jnr/a64asm/SerializerCore$1."<init>":(II)V
       9: putstatic     #2                  // Field _none:Ljnr/a64asm/Operand;
      12: return
}
