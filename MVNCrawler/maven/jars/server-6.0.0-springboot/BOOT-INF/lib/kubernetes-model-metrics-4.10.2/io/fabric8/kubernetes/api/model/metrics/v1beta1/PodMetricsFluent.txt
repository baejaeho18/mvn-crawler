Compiled from "PodMetricsFluent.java"
public interface io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent<A extends io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToContainers(int, io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics);

  public abstract A setToContainers(int, io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics);

  public abstract A addToContainers(io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics...);

  public abstract A addAllToContainers(java.util.Collection<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics>);

  public abstract A removeFromContainers(io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics...);

  public abstract A removeAllFromContainers(java.util.Collection<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics>);

  public abstract A removeMatchingFromContainers(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetricsBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics> getContainers();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics> buildContainers();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics buildContainer(int);

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics buildFirstContainer();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics buildLastContainer();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics buildMatchingContainer(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetricsBuilder>);

  public abstract java.lang.Boolean hasMatchingContainer(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetricsBuilder>);

  public abstract A withContainers(java.util.List<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics>);

  public abstract A withContainers(io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics...);

  public abstract java.lang.Boolean hasContainers();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> addNewContainer();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> addNewContainerLike(io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics);

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> setNewContainerLike(int, io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetrics);

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> editContainer(int);

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> editFirstContainer();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> editLastContainer();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$ContainersNested<A> editMatchingContainer(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.metrics.v1beta1.ContainerMetricsBuilder>);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.kubernetes.api.model.metrics.v1beta1.PodMetricsFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.String getTimestamp();

  public abstract A withTimestamp(java.lang.String);

  public abstract java.lang.Boolean hasTimestamp();

  public abstract A withNewTimestamp(java.lang.String);

  public abstract A withNewTimestamp(java.lang.StringBuilder);

  public abstract A withNewTimestamp(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.Duration getWindow();

  public abstract A withWindow(io.fabric8.kubernetes.api.model.Duration);

  public abstract java.lang.Boolean hasWindow();
}
