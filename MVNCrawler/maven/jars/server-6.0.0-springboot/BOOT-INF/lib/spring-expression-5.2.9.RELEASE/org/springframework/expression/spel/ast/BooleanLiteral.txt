Compiled from "BooleanLiteral.java"
public class org.springframework.expression.spel.ast.BooleanLiteral extends org.springframework.expression.spel.ast.Literal {
  private final org.springframework.expression.spel.support.BooleanTypedValue value;

  public org.springframework.expression.spel.ast.BooleanLiteral(java.lang.String, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #1                  // Method org/springframework/expression/spel/ast/Literal."<init>":(Ljava/lang/String;II)V
       7: aload_0
       8: iload         4
      10: invokestatic  #2                  // Method org/springframework/expression/spel/support/BooleanTypedValue.forValue:(Z)Lorg/springframework/expression/spel/support/BooleanTypedValue;
      13: putfield      #3                  // Field value:Lorg/springframework/expression/spel/support/BooleanTypedValue;
      16: aload_0
      17: ldc           #4                  // String Z
      19: putfield      #5                  // Field exitTypeDescriptor:Ljava/lang/String;
      22: return

  public org.springframework.expression.spel.support.BooleanTypedValue getLiteralValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:Lorg/springframework/expression/spel/support/BooleanTypedValue;
       4: areturn

  public boolean isCompilable();
    Code:
       0: iconst_1
       1: ireturn

  public void generateCode(org.springframework.asm.MethodVisitor, org.springframework.expression.spel.CodeFlow);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:Lorg/springframework/expression/spel/support/BooleanTypedValue;
       4: getstatic     #6                  // Field org/springframework/expression/spel/support/BooleanTypedValue.TRUE:Lorg/springframework/expression/spel/support/BooleanTypedValue;
       7: if_acmpne     21
      10: aload_1
      11: iconst_1
      12: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #8                  // Method org/springframework/asm/MethodVisitor.visitLdcInsn:(Ljava/lang/Object;)V
      18: goto          29
      21: aload_1
      22: iconst_0
      23: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokevirtual #8                  // Method org/springframework/asm/MethodVisitor.visitLdcInsn:(Ljava/lang/Object;)V
      29: aload_2
      30: aload_0
      31: getfield      #5                  // Field exitTypeDescriptor:Ljava/lang/String;
      34: invokevirtual #9                  // Method org/springframework/expression/spel/CodeFlow.pushDescriptor:(Ljava/lang/String;)V
      37: return

  public org.springframework.expression.TypedValue getLiteralValue();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getLiteralValue:()Lorg/springframework/expression/spel/support/BooleanTypedValue;
       4: areturn
}
