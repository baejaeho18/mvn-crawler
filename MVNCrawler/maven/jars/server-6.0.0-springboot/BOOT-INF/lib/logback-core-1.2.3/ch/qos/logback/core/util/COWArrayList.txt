Compiled from "COWArrayList.java"
public class ch.qos.logback.core.util.COWArrayList<E> implements java.util.List<E> {
  java.util.concurrent.atomic.AtomicBoolean fresh;

  java.util.concurrent.CopyOnWriteArrayList<E> underlyingList;

  E[] ourCopy;

  final E[] modelArray;

  public ch.qos.logback.core.util.COWArrayList(E[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field fresh:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      20: dup
      21: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      24: putfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field modelArray:[Ljava/lang/Object;
      32: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #9                  // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #10                 // Method java/util/concurrent/CopyOnWriteArrayList.isEmpty:()Z
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #11                 // Method java/util/concurrent/CopyOnWriteArrayList.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #12                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: areturn

  private void refreshCopyIfNecessary();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method isFresh:()Z
       4: ifne          11
       7: aload_0
       8: invokespecial #14                 // Method refreshCopy:()V
      11: return

  private boolean isFresh();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fresh:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  private void refreshCopy();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       5: aload_0
       6: getfield      #8                  // Field modelArray:[Ljava/lang/Object;
       9: invokevirtual #16                 // Method java/util/concurrent/CopyOnWriteArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      12: putfield      #17                 // Field ourCopy:[Ljava/lang/Object;
      15: aload_0
      16: getfield      #4                  // Field fresh:Ljava/util/concurrent/atomic/AtomicBoolean;
      19: iconst_1
      20: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      23: return

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method refreshCopyIfNecessary:()V
       4: aload_0
       5: getfield      #17                 // Field ourCopy:[Ljava/lang/Object;
       8: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method refreshCopyIfNecessary:()V
       4: aload_0
       5: getfield      #17                 // Field ourCopy:[Ljava/lang/Object;
       8: checkcast     #20                 // class "[Ljava/lang/Object;"
      11: areturn

  public E[] asTypedArray();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method refreshCopyIfNecessary:()V
       4: aload_0
       5: getfield      #17                 // Field ourCopy:[Ljava/lang/Object;
       8: areturn

  private void markAsStale();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fresh:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public void addIfAbsent(E);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #21                 // Method java/util/concurrent/CopyOnWriteArrayList.addIfAbsent:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: return

  public boolean add(E);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #23                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: istore_2
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: iload_2
      14: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #24                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: istore_2
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: iload_2
      14: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #25                 // Method java/util/concurrent/CopyOnWriteArrayList.containsAll:(Ljava/util/Collection;)Z
       8: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #26                 // Method java/util/concurrent/CopyOnWriteArrayList.addAll:(Ljava/util/Collection;)Z
       8: istore_2
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: iload_2
      14: ireturn

  public boolean addAll(int, java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: iload_1
       5: aload_2
       6: invokevirtual #27                 // Method java/util/concurrent/CopyOnWriteArrayList.addAll:(ILjava/util/Collection;)Z
       9: istore_3
      10: aload_0
      11: invokespecial #22                 // Method markAsStale:()V
      14: iload_3
      15: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #28                 // Method java/util/concurrent/CopyOnWriteArrayList.removeAll:(Ljava/util/Collection;)Z
       8: istore_2
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: iload_2
      14: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #29                 // Method java/util/concurrent/CopyOnWriteArrayList.retainAll:(Ljava/util/Collection;)Z
       8: istore_2
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: iload_2
      14: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #30                 // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
       7: aload_0
       8: invokespecial #22                 // Method markAsStale:()V
      11: return

  public E get(int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method refreshCopyIfNecessary:()V
       4: aload_0
       5: getfield      #17                 // Field ourCopy:[Ljava/lang/Object;
       8: iload_1
       9: aaload
      10: areturn

  public E set(int, E);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: iload_1
       5: aload_2
       6: invokevirtual #31                 // Method java/util/concurrent/CopyOnWriteArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
       9: astore_3
      10: aload_0
      11: invokespecial #22                 // Method markAsStale:()V
      14: aload_3
      15: areturn

  public void add(int, E);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: iload_1
       5: aload_2
       6: invokevirtual #32                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(ILjava/lang/Object;)V
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: return

  public E remove(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: iload_1
       5: invokevirtual #33                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(I)Ljava/lang/Object;
       8: astore_2
       9: aload_0
      10: invokespecial #22                 // Method markAsStale:()V
      13: aload_2
      14: areturn

  public int indexOf(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #34                 // Method java/util/concurrent/CopyOnWriteArrayList.indexOf:(Ljava/lang/Object;)I
       8: ireturn

  public int lastIndexOf(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #35                 // Method java/util/concurrent/CopyOnWriteArrayList.lastIndexOf:(Ljava/lang/Object;)I
       8: ireturn

  public java.util.ListIterator<E> listIterator();
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #36                 // Method java/util/concurrent/CopyOnWriteArrayList.listIterator:()Ljava/util/ListIterator;
       7: areturn

  public java.util.ListIterator<E> listIterator(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: iload_1
       5: invokevirtual #37                 // Method java/util/concurrent/CopyOnWriteArrayList.listIterator:(I)Ljava/util/ListIterator;
       8: areturn

  public java.util.List<E> subList(int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field underlyingList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: iload_1
       5: iload_2
       6: invokevirtual #38                 // Method java/util/concurrent/CopyOnWriteArrayList.subList:(II)Ljava/util/List;
       9: areturn
}
