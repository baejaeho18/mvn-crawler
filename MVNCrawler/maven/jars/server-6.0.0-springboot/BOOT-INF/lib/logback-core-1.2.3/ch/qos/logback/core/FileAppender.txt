Compiled from "FileAppender.java"
public class ch.qos.logback.core.FileAppender<E> extends ch.qos.logback.core.OutputStreamAppender<E> {
  public static final long DEFAULT_BUFFER_SIZE;

  protected static java.lang.String COLLISION_WITH_EARLIER_APPENDER_URL;

  protected boolean append;

  protected java.lang.String fileName;

  private boolean prudent;

  private ch.qos.logback.core.util.FileSize bufferSize;

  public ch.qos.logback.core.FileAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/OutputStreamAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field append:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field prudent:Z
      19: aload_0
      20: new           #5                  // class ch/qos/logback/core/util/FileSize
      23: dup
      24: ldc2_w        #6                  // long 8192l
      27: invokespecial #8                  // Method ch/qos/logback/core/util/FileSize."<init>":(J)V
      30: putfield      #9                  // Field bufferSize:Lch/qos/logback/core/util/FileSize;
      33: return

  public void setFile(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field fileName:Ljava/lang/String;
       9: goto          20
      12: aload_0
      13: aload_1
      14: invokevirtual #10                 // Method java/lang/String.trim:()Ljava/lang/String;
      17: putfield      #3                  // Field fileName:Ljava/lang/String;
      20: return

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field append:Z
       4: ireturn

  public final java.lang.String rawFileProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #11                 // Method getFile:()Ljava/lang/String;
       6: ifnull        171
       9: aload_0
      10: new           #12                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #14                 // String File property is set to [
      19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #3                  // Field fileName:Ljava/lang/String;
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #16                 // String ]
      31: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #18                 // Method addInfo:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #4                  // Field prudent:Z
      44: ifeq          65
      47: aload_0
      48: invokevirtual #19                 // Method isAppend:()Z
      51: ifne          65
      54: aload_0
      55: iconst_1
      56: invokevirtual #20                 // Method setAppend:(Z)V
      59: aload_0
      60: ldc           #21                 // String Setting \"Append\" property to true on account of \"Prudent\" mode
      62: invokevirtual #22                 // Method addWarn:(Ljava/lang/String;)V
      65: aload_0
      66: invokevirtual #23                 // Method checkForFileCollisionInPreviousFileAppenders:()Z
      69: ifeq          109
      72: aload_0
      73: ldc           #24                 // String Collisions detected with FileAppender/RollingAppender instances defined earlier. Aborting.
      75: invokevirtual #25                 // Method addError:(Ljava/lang/String;)V
      78: aload_0
      79: new           #12                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #26                 // String For more information, please visit
      88: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: getstatic     #27                 // Field COLLISION_WITH_EARLIER_APPENDER_URL:Ljava/lang/String;
      94: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokevirtual #25                 // Method addError:(Ljava/lang/String;)V
     103: iinc          1, 1
     106: goto          205
     109: aload_0
     110: aload_0
     111: invokevirtual #11                 // Method getFile:()Ljava/lang/String;
     114: invokevirtual #28                 // Method openFile:(Ljava/lang/String;)V
     117: goto          205
     120: astore_2
     121: iinc          1, 1
     124: aload_0
     125: new           #12                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #30                 // String openFile(
     134: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: getfield      #3                  // Field fileName:Ljava/lang/String;
     141: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #31                 // String ,
     146: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_0
     150: getfield      #2                  // Field append:Z
     153: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     156: ldc           #33                 // String ) call failed.
     158: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: aload_2
     165: invokevirtual #34                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     168: goto          205
     171: iinc          1, 1
     174: aload_0
     175: new           #12                 // class java/lang/StringBuilder
     178: dup
     179: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     182: ldc           #35                 // String \"File\" property not set for appender named [
     184: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: aload_0
     188: getfield      #36                 // Field name:Ljava/lang/String;
     191: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #37                 // String ].
     196: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: invokevirtual #25                 // Method addError:(Ljava/lang/String;)V
     205: iload_1
     206: ifne          213
     209: aload_0
     210: invokespecial #38                 // Method ch/qos/logback/core/OutputStreamAppender.start:()V
     213: return
    Exception table:
       from    to  target type
         109   117   120   Class java/io/IOException

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method ch/qos/logback/core/OutputStreamAppender.stop:()V
       4: aload_0
       5: getfield      #40                 // Field context:Lch/qos/logback/core/Context;
       8: invokestatic  #41                 // Method ch/qos/logback/core/util/ContextUtil.getFilenameCollisionMap:(Lch/qos/logback/core/Context;)Ljava/util/Map;
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_0
      17: invokevirtual #42                 // Method getName:()Ljava/lang/String;
      20: ifnonnull     24
      23: return
      24: aload_1
      25: aload_0
      26: invokevirtual #42                 // Method getName:()Ljava/lang/String;
      29: invokeinterface #43,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  protected boolean checkForFileCollisionInPreviousFileAppenders();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #3                  // Field fileName:Ljava/lang/String;
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #40                 // Field context:Lch/qos/logback/core/Context;
      15: ldc           #44                 // String FA_FILENAME_COLLISION_MAP
      17: invokeinterface #45,  2           // InterfaceMethod ch/qos/logback/core/Context.getObject:(Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #46                 // class java/util/Map
      25: astore_2
      26: aload_2
      27: ifnonnull     32
      30: iload_1
      31: ireturn
      32: aload_2
      33: invokeinterface #47,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          112
      53: aload_3
      54: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #51                 // class java/util/Map$Entry
      62: astore        4
      64: aload_0
      65: getfield      #3                  // Field fileName:Ljava/lang/String;
      68: aload         4
      70: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifeq          109
      81: aload_0
      82: ldc           #54                 // String File
      84: aload         4
      86: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      91: checkcast     #55                 // class java/lang/String
      94: aload         4
      96: invokeinterface #56,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     101: checkcast     #55                 // class java/lang/String
     104: invokevirtual #57                 // Method addErrorForCollision:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     107: iconst_1
     108: istore_1
     109: goto          44
     112: aload_0
     113: getfield      #36                 // Field name:Ljava/lang/String;
     116: ifnull        134
     119: aload_2
     120: aload_0
     121: invokevirtual #42                 // Method getName:()Ljava/lang/String;
     124: aload_0
     125: getfield      #3                  // Field fileName:Ljava/lang/String;
     128: invokeinterface #58,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: iload_1
     135: ireturn

  protected void addErrorForCollision(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #12                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #59                 // String \'
      10: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #60                 // String \' option has the same value \"
      19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_2
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #61                 // String \" as that given for appender [
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_3
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #62                 // String ] defined earlier.
      37: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #25                 // Method addError:(Ljava/lang/String;)V
      46: return

  public void openFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #64                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: new           #65                 // class java/io/File
      10: dup
      11: aload_1
      12: invokespecial #66                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      15: astore_2
      16: aload_2
      17: invokestatic  #67                 // Method ch/qos/logback/core/util/FileUtil.createMissingParentDirectories:(Ljava/io/File;)Z
      20: istore_3
      21: iload_3
      22: ifne          56
      25: aload_0
      26: new           #12                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #68                 // String Failed to create parent directories for [
      35: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #69                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      42: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #16                 // String ]
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #25                 // Method addError:(Ljava/lang/String;)V
      56: new           #70                 // class ch/qos/logback/core/recovery/ResilientFileOutputStream
      59: dup
      60: aload_2
      61: aload_0
      62: getfield      #2                  // Field append:Z
      65: aload_0
      66: getfield      #9                  // Field bufferSize:Lch/qos/logback/core/util/FileSize;
      69: invokevirtual #71                 // Method ch/qos/logback/core/util/FileSize.getSize:()J
      72: invokespecial #72                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream."<init>":(Ljava/io/File;ZJ)V
      75: astore        4
      77: aload         4
      79: aload_0
      80: getfield      #40                 // Field context:Lch/qos/logback/core/Context;
      83: invokevirtual #73                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.setContext:(Lch/qos/logback/core/Context;)V
      86: aload_0
      87: aload         4
      89: invokevirtual #74                 // Method setOutputStream:(Ljava/io/OutputStream;)V
      92: aload_0
      93: getfield      #63                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      96: invokevirtual #75                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      99: goto          114
     102: astore        5
     104: aload_0
     105: getfield      #63                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     108: invokevirtual #75                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     111: aload         5
     113: athrow
     114: return
    Exception table:
       from    to  target type
           7    92   102   any
         102   104   102   any

  public boolean isPrudent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field prudent:Z
       4: ireturn

  public void setPrudent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field prudent:Z
       5: return

  public void setAppend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field append:Z
       5: return

  public void setBufferSize(ch.qos.logback.core.util.FileSize);
    Code:
       0: aload_0
       1: new           #12                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #76                 // String Setting bufferSize to [
      10: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #77                 // Method ch/qos/logback/core/util/FileSize.toString:()Ljava/lang/String;
      17: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #16                 // String ]
      22: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokevirtual #18                 // Method addInfo:(Ljava/lang/String;)V
      31: aload_0
      32: aload_1
      33: putfield      #9                  // Field bufferSize:Lch/qos/logback/core/util/FileSize;
      36: return

  private void safeWrite(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method getOutputStream:()Ljava/io/OutputStream;
       4: checkcast     #70                 // class ch/qos/logback/core/recovery/ResilientFileOutputStream
       7: astore_2
       8: aload_2
       9: invokevirtual #79                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      12: astore_3
      13: aload_3
      14: ifnonnull     18
      17: return
      18: invokestatic  #80                 // Method java/lang/Thread.interrupted:()Z
      21: istore        4
      23: aconst_null
      24: astore        5
      26: aload_3
      27: invokevirtual #81                 // Method java/nio/channels/FileChannel.lock:()Ljava/nio/channels/FileLock;
      30: astore        5
      32: aload_3
      33: invokevirtual #82                 // Method java/nio/channels/FileChannel.position:()J
      36: lstore        6
      38: aload_3
      39: invokevirtual #83                 // Method java/nio/channels/FileChannel.size:()J
      42: lstore        8
      44: lload         8
      46: lload         6
      48: lcmp
      49: ifeq          59
      52: aload_3
      53: lload         8
      55: invokevirtual #84                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      58: pop
      59: aload_0
      60: aload_1
      61: invokespecial #85                 // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      64: aload         5
      66: ifnull        82
      69: aload         5
      71: invokevirtual #86                 // Method java/nio/channels/FileLock.isValid:()Z
      74: ifeq          82
      77: aload         5
      79: invokevirtual #87                 // Method java/nio/channels/FileLock.release:()V
      82: iload         4
      84: ifeq          170
      87: invokestatic  #88                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      90: invokevirtual #89                 // Method java/lang/Thread.interrupt:()V
      93: goto          170
      96: astore        6
      98: aload_2
      99: aload         6
     101: invokevirtual #90                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.postIOFailure:(Ljava/io/IOException;)V
     104: aload         5
     106: ifnull        122
     109: aload         5
     111: invokevirtual #86                 // Method java/nio/channels/FileLock.isValid:()Z
     114: ifeq          122
     117: aload         5
     119: invokevirtual #87                 // Method java/nio/channels/FileLock.release:()V
     122: iload         4
     124: ifeq          170
     127: invokestatic  #88                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     130: invokevirtual #89                 // Method java/lang/Thread.interrupt:()V
     133: goto          170
     136: astore        10
     138: aload         5
     140: ifnull        156
     143: aload         5
     145: invokevirtual #86                 // Method java/nio/channels/FileLock.isValid:()Z
     148: ifeq          156
     151: aload         5
     153: invokevirtual #87                 // Method java/nio/channels/FileLock.release:()V
     156: iload         4
     158: ifeq          167
     161: invokestatic  #88                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     164: invokevirtual #89                 // Method java/lang/Thread.interrupt:()V
     167: aload         10
     169: athrow
     170: return
    Exception table:
       from    to  target type
          26    64    96   Class java/io/IOException
          26    64   136   any
          96   104   136   any
         136   138   136   any

  protected void writeOut(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field prudent:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #91                 // Method safeWrite:(Ljava/lang/Object;)V
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokespecial #85                 // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      20: return

  static {};
    Code:
       0: ldc           #92                 // String http://logback.qos.ch/codes.html#earlier_fa_collision
       2: putstatic     #27                 // Field COLLISION_WITH_EARLIER_APPENDER_URL:Ljava/lang/String;
       5: return
}
