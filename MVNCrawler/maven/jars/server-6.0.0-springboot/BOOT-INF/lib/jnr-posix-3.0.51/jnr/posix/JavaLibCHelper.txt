Compiled from "JavaLibCHelper.java"
public class jnr.posix.JavaLibCHelper {
  public static final int STDIN;

  public static final int STDOUT;

  public static final int STDERR;

  private static final java.lang.ThreadLocal<java.lang.Integer> errno;

  private final jnr.posix.POSIXHandler handler;

  private final java.util.Map<java.lang.String, java.lang.String> env;

  java.lang.ThreadLocal<java.lang.Integer> pwIndex;

  public jnr.posix.JavaLibCHelper(jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class jnr/posix/JavaLibCHelper$1
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method jnr/posix/JavaLibCHelper$1."<init>":(Ljnr/posix/JavaLibCHelper;)V
      13: putfield      #4                  // Field pwIndex:Ljava/lang/ThreadLocal;
      16: aload_0
      17: new           #5                  // class java/util/HashMap
      20: dup
      21: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      24: putfield      #7                  // Field env:Ljava/util/Map;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
      32: return

  public static java.io.FileDescriptor getDescriptorFromChannel(java.nio.channels.Channel);
    Code:
       0: invokestatic  #9                  // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$000:()Ljava/lang/reflect/Method;
       3: ifnull        35
       6: invokestatic  #10                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$100:()Ljava/lang/Class;
       9: aload_0
      10: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      13: ifeq          35
      16: invokestatic  #9                  // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$000:()Ljava/lang/reflect/Method;
      19: aload_0
      20: iconst_0
      21: anewarray     #12                 // class java/lang/Object
      24: invokevirtual #13                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #14                 // class java/io/FileDescriptor
      30: areturn
      31: astore_1
      32: goto          116
      35: invokestatic  #16                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$200:()Ljava/lang/reflect/Field;
      38: ifnull        66
      41: invokestatic  #17                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$300:()Ljava/lang/Class;
      44: aload_0
      45: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      48: ifeq          66
      51: invokestatic  #16                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$200:()Ljava/lang/reflect/Field;
      54: aload_0
      55: invokevirtual #18                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #14                 // class java/io/FileDescriptor
      61: areturn
      62: astore_1
      63: goto          116
      66: invokestatic  #19                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$400:()Ljava/lang/reflect/Field;
      69: ifnull        116
      72: new           #14                 // class java/io/FileDescriptor
      75: dup
      76: invokespecial #20                 // Method java/io/FileDescriptor."<init>":()V
      79: astore_1
      80: aload_0
      81: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      84: ldc           #22                 // String getFD
      86: iconst_0
      87: anewarray     #23                 // class java/lang/Class
      90: invokevirtual #24                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      93: astore_2
      94: invokestatic  #19                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$400:()Ljava/lang/reflect/Field;
      97: aload_1
      98: aload_2
      99: aload_0
     100: iconst_0
     101: anewarray     #12                 // class java/lang/Object
     104: invokevirtual #13                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     107: checkcast     #25                 // class java/lang/Integer
     110: invokevirtual #26                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
     113: aload_1
     114: areturn
     115: astore_2
     116: new           #14                 // class java/io/FileDescriptor
     119: dup
     120: invokespecial #20                 // Method java/io/FileDescriptor."<init>":()V
     123: areturn
    Exception table:
       from    to  target type
          16    30    31   Class java/lang/Exception
          51    61    62   Class java/lang/Exception
          80   114   115   Class java/lang/Exception

  static int errno();
    Code:
       0: getstatic     #27                 // Field errno:Ljava/lang/ThreadLocal;
       3: invokevirtual #28                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #25                 // class java/lang/Integer
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      18: goto          22
      21: iconst_0
      22: ireturn

  static void errno(int);
    Code:
       0: getstatic     #27                 // Field errno:Ljava/lang/ThreadLocal;
       3: iload_0
       4: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #31                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      10: return

  static void errno(jnr.constants.platform.Errno);
    Code:
       0: getstatic     #27                 // Field errno:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #32                 // Method jnr/constants/platform/Errno.intValue:()I
       7: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokevirtual #31                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      13: return

  public int chmod(java.lang.String, int);
    Code:
       0: new           #33                 // class jnr/posix/JavaSecuredFile
       3: dup
       4: aload_1
       5: invokespecial #34                 // Method jnr/posix/JavaSecuredFile."<init>":(Ljava/lang/String;)V
       8: iload_2
       9: invokestatic  #35                 // Method java/lang/Integer.toOctalString:(I)Ljava/lang/String;
      12: invokestatic  #36                 // Method jnr/posix/util/Chmod.chmod:(Ljava/io/File;Ljava/lang/String;)I
      15: ireturn

  public int chown(java.lang.String, int, int);
    Code:
       0: new           #37                 // class jnr/posix/JavaLibCHelper$PosixExec
       3: dup
       4: aload_0
       5: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
       8: invokespecial #38                 // Method jnr/posix/JavaLibCHelper$PosixExec."<init>":(Ljnr/posix/POSIXHandler;)V
      11: astore        4
      13: iconst_m1
      14: istore        5
      16: iconst_m1
      17: istore        6
      19: iload_2
      20: iconst_m1
      21: if_icmpeq     66
      24: aload         4
      26: iconst_3
      27: anewarray     #39                 // class java/lang/String
      30: dup
      31: iconst_0
      32: ldc           #40                 // String chown
      34: aastore
      35: dup
      36: iconst_1
      37: new           #41                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #43                 // String
      46: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_2
      50: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: aastore
      57: dup
      58: iconst_2
      59: aload_1
      60: aastore
      61: invokevirtual #47                 // Method jnr/posix/JavaLibCHelper$PosixExec.runAndWait:([Ljava/lang/String;)I
      64: istore        5
      66: iload_3
      67: iconst_m1
      68: if_icmpeq     113
      71: aload         4
      73: iconst_3
      74: anewarray     #39                 // class java/lang/String
      77: dup
      78: iconst_0
      79: ldc           #48                 // String chgrp
      81: aastore
      82: dup
      83: iconst_1
      84: new           #41                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #43                 // String
      93: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: iload_2
      97: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aastore
     104: dup
     105: iconst_2
     106: aload_1
     107: aastore
     108: invokevirtual #47                 // Method jnr/posix/JavaLibCHelper$PosixExec.runAndWait:([Ljava/lang/String;)I
     111: istore        6
     113: goto          129
     116: astore        7
     118: invokestatic  #50                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     121: invokevirtual #51                 // Method java/lang/Thread.interrupt:()V
     124: goto          129
     127: astore        7
     129: iload         5
     131: iconst_m1
     132: if_icmpeq     145
     135: iload         6
     137: iconst_m1
     138: if_icmpeq     145
     141: iconst_0
     142: goto          146
     145: iconst_1
     146: ireturn
    Exception table:
       from    to  target type
          19   113   116   Class java/lang/InterruptedException
          19   113   127   Class java/lang/Exception

  public static java.lang.CharSequence crypt(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method jnr/posix/util/JavaCrypt.crypt:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: areturn

  public static byte[] crypt(byte[], byte[]);
    Code:
       0: new           #39                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokespecial #53                 // Method java/lang/String."<init>":([B)V
       8: new           #39                 // class java/lang/String
      11: dup
      12: aload_1
      13: invokespecial #53                 // Method java/lang/String."<init>":([B)V
      16: invokestatic  #52                 // Method jnr/posix/util/JavaCrypt.crypt:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
      19: invokeinterface #54,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      24: invokevirtual #55                 // Method java/lang/String.getBytes:()[B
      27: areturn

  public int getfd(java.io.FileDescriptor);
    Code:
       0: aload_1
       1: invokestatic  #56                 // Method getfdFromDescriptor:(Ljava/io/FileDescriptor;)I
       4: ireturn

  public static int getfdFromDescriptor(java.io.FileDescriptor);
    Code:
       0: aload_0
       1: ifnull        10
       4: invokestatic  #19                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$400:()Ljava/lang/reflect/Field;
       7: ifnonnull     12
      10: iconst_m1
      11: ireturn
      12: invokestatic  #19                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$400:()Ljava/lang/reflect/Field;
      15: aload_0
      16: invokevirtual #57                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
      19: ireturn
      20: astore_1
      21: goto          29
      24: astore_1
      25: goto          29
      28: astore_1
      29: iconst_m1
      30: ireturn
    Exception table:
       from    to  target type
          12    19    20   Class java/lang/SecurityException
          12    19    24   Class java/lang/IllegalArgumentException
          12    19    28   Class java/lang/IllegalAccessException

  public static jnr.posix.HANDLE gethandle(java.io.FileDescriptor);
    Code:
       0: aload_0
       1: ifnull        10
       4: invokestatic  #61                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$500:()Ljava/lang/reflect/Field;
       7: ifnonnull     17
      10: ldc2_w        #62                 // long -1l
      13: invokestatic  #64                 // Method jnr/posix/HANDLE.valueOf:(J)Ljnr/posix/HANDLE;
      16: areturn
      17: invokestatic  #61                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$500:()Ljava/lang/reflect/Field;
      20: aload_0
      21: invokevirtual #65                 // Method java/lang/reflect/Field.getLong:(Ljava/lang/Object;)J
      24: invokestatic  #66                 // Method gethandle:(J)Ljnr/posix/HANDLE;
      27: areturn
      28: astore_1
      29: goto          37
      32: astore_1
      33: goto          37
      36: astore_1
      37: ldc2_w        #62                 // long -1l
      40: invokestatic  #64                 // Method jnr/posix/HANDLE.valueOf:(J)Ljnr/posix/HANDLE;
      43: areturn
    Exception table:
       from    to  target type
          17    27    28   Class java/lang/SecurityException
          17    27    32   Class java/lang/IllegalArgumentException
          17    27    36   Class java/lang/IllegalAccessException

  public static jnr.posix.HANDLE gethandle(long);
    Code:
       0: lload_0
       1: invokestatic  #64                 // Method jnr/posix/HANDLE.valueOf:(J)Ljnr/posix/HANDLE;
       4: areturn

  public java.lang.String getlogin();
    Code:
       0: ldc           #67                 // String user.name
       2: invokestatic  #68                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String gethostname();
    Code:
       0: ldc           #69                 // String HOSTNAME
       2: invokestatic  #70                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_1
       6: aload_1
       7: ifnonnull     16
      10: ldc           #71                 // String COMPUTERNAME
      12: invokestatic  #70                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: areturn

  public int getpid();
    Code:
       0: aload_0
       1: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokeinterface #72,  1           // InterfaceMethod jnr/posix/POSIXHandler.getPID:()I
       9: ireturn

  public jnr.posix.Passwd getpwent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pwIndex:Ljava/lang/ThreadLocal;
       4: invokevirtual #28                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #25                 // class java/lang/Integer
      10: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      13: ifne          30
      16: new           #73                 // class jnr/posix/JavaPasswd
      19: dup
      20: aload_0
      21: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
      24: invokespecial #74                 // Method jnr/posix/JavaPasswd."<init>":(Ljnr/posix/POSIXHandler;)V
      27: goto          31
      30: aconst_null
      31: astore_1
      32: aload_0
      33: getfield      #4                  // Field pwIndex:Ljava/lang/ThreadLocal;
      36: aload_0
      37: getfield      #4                  // Field pwIndex:Ljava/lang/ThreadLocal;
      40: invokevirtual #28                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      43: checkcast     #25                 // class java/lang/Integer
      46: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      49: iconst_1
      50: iadd
      51: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: invokevirtual #31                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      57: aload_1
      58: areturn

  public int setpwent();
    Code:
       0: iconst_0
       1: ireturn

  public int endpwent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pwIndex:Ljava/lang/ThreadLocal;
       4: iconst_0
       5: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #31                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      11: iconst_0
      12: ireturn

  public jnr.posix.Passwd getpwuid(int);
    Code:
       0: iload_1
       1: getstatic     #75                 // Field jnr/posix/JavaPOSIX$LoginInfo.UID:I
       4: if_icmpne     21
       7: new           #73                 // class jnr/posix/JavaPasswd
      10: dup
      11: aload_0
      12: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
      15: invokespecial #74                 // Method jnr/posix/JavaPasswd."<init>":(Ljnr/posix/POSIXHandler;)V
      18: goto          22
      21: aconst_null
      22: areturn

  public int isatty(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpeq     14
       5: iload_1
       6: ifeq          14
       9: iload_1
      10: iconst_2
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public int link(java.lang.String, java.lang.String);
    Code:
       0: new           #37                 // class jnr/posix/JavaLibCHelper$PosixExec
       3: dup
       4: aload_0
       5: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
       8: invokespecial #38                 // Method jnr/posix/JavaLibCHelper$PosixExec."<init>":(Ljnr/posix/POSIXHandler;)V
      11: iconst_3
      12: anewarray     #39                 // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #77                 // String ln
      19: aastore
      20: dup
      21: iconst_1
      22: aload_1
      23: aastore
      24: dup
      25: iconst_2
      26: aload_2
      27: aastore
      28: invokevirtual #47                 // Method jnr/posix/JavaLibCHelper$PosixExec.runAndWait:([Ljava/lang/String;)I
      31: ireturn
      32: astore_3
      33: invokestatic  #50                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      36: invokevirtual #51                 // Method java/lang/Thread.interrupt:()V
      39: goto          43
      42: astore_3
      43: getstatic     #78                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
      46: invokestatic  #79                 // Method errno:(Ljnr/constants/platform/Errno;)V
      49: iconst_m1
      50: ireturn
    Exception table:
       from    to  target type
           0    31    32   Class java/lang/InterruptedException
           0    31    42   Class java/lang/Exception

  public int lstat(java.lang.String, jnr.posix.FileStat);
    Code:
       0: new           #33                 // class jnr/posix/JavaSecuredFile
       3: dup
       4: aload_1
       5: invokespecial #34                 // Method jnr/posix/JavaSecuredFile."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_3
      10: invokevirtual #80                 // Method java/io/File.exists:()Z
      13: ifne          24
      16: getstatic     #81                 // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
      19: invokestatic  #79                 // Method errno:(Ljnr/constants/platform/Errno;)V
      22: iconst_m1
      23: ireturn
      24: aload_2
      25: checkcast     #82                 // class jnr/posix/JavaFileStat
      28: astore        4
      30: aload         4
      32: aload_1
      33: invokevirtual #83                 // Method jnr/posix/JavaFileStat.setup:(Ljava/lang/String;)V
      36: iconst_0
      37: ireturn

  public int mkdir(java.lang.String, int);
    Code:
       0: new           #33                 // class jnr/posix/JavaSecuredFile
       3: dup
       4: aload_1
       5: invokespecial #34                 // Method jnr/posix/JavaSecuredFile."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_3
      10: invokevirtual #84                 // Method java/io/File.mkdir:()Z
      13: ifne          18
      16: iconst_m1
      17: ireturn
      18: aload_0
      19: aload_1
      20: iload_2
      21: invokevirtual #85                 // Method chmod:(Ljava/lang/String;I)I
      24: pop
      25: iconst_0
      26: ireturn

  public int rmdir(java.lang.String);
    Code:
       0: new           #33                 // class jnr/posix/JavaSecuredFile
       3: dup
       4: aload_1
       5: invokespecial #34                 // Method jnr/posix/JavaSecuredFile."<init>":(Ljava/lang/String;)V
       8: invokevirtual #86                 // Method jnr/posix/JavaSecuredFile.delete:()Z
      11: ifeq          18
      14: iconst_0
      15: goto          19
      18: iconst_m1
      19: ireturn

  public static int chdir(java.lang.String);
    Code:
       0: ldc           #87                 // String user.dir
       2: aload_0
       3: invokestatic  #88                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: pop
       7: iconst_0
       8: ireturn

  public int stat(java.lang.String, jnr.posix.FileStat);
    Code:
       0: aload_2
       1: checkcast     #82                 // class jnr/posix/JavaFileStat
       4: astore_3
       5: new           #33                 // class jnr/posix/JavaSecuredFile
       8: dup
       9: aload_1
      10: invokespecial #34                 // Method jnr/posix/JavaSecuredFile."<init>":(Ljava/lang/String;)V
      13: astore        4
      15: aload         4
      17: invokevirtual #80                 // Method java/io/File.exists:()Z
      20: ifne          25
      23: iconst_m1
      24: ireturn
      25: aload_3
      26: aload         4
      28: invokevirtual #89                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      31: invokevirtual #83                 // Method jnr/posix/JavaFileStat.setup:(Ljava/lang/String;)V
      34: goto          39
      37: astore        4
      39: iconst_0
      40: ireturn
    Exception table:
       from    to  target type
           5    24    37   Class java/io/IOException
          25    34    37   Class java/io/IOException

  public int symlink(java.lang.String, java.lang.String);
    Code:
       0: new           #37                 // class jnr/posix/JavaLibCHelper$PosixExec
       3: dup
       4: aload_0
       5: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
       8: invokespecial #38                 // Method jnr/posix/JavaLibCHelper$PosixExec."<init>":(Ljnr/posix/POSIXHandler;)V
      11: iconst_4
      12: anewarray     #39                 // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #77                 // String ln
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #91                 // String -s
      24: aastore
      25: dup
      26: iconst_2
      27: aload_1
      28: aastore
      29: dup
      30: iconst_3
      31: aload_2
      32: aastore
      33: invokevirtual #47                 // Method jnr/posix/JavaLibCHelper$PosixExec.runAndWait:([Ljava/lang/String;)I
      36: ireturn
      37: astore_3
      38: invokestatic  #50                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      41: invokevirtual #51                 // Method java/lang/Thread.interrupt:()V
      44: goto          48
      47: astore_3
      48: getstatic     #92                 // Field jnr/constants/platform/Errno.EEXIST:Ljnr/constants/platform/Errno;
      51: invokestatic  #79                 // Method errno:(Ljnr/constants/platform/Errno;)V
      54: iconst_m1
      55: ireturn
    Exception table:
       from    to  target type
           0    36    37   Class java/lang/InterruptedException
           0    36    47   Class java/lang/Exception

  public int readlink(java.lang.String, java.nio.ByteBuffer, int) throws java.io.IOException;
    Code:
       0: new           #93                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #94                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore        4
       9: new           #37                 // class jnr/posix/JavaLibCHelper$PosixExec
      12: dup
      13: aload_0
      14: getfield      #8                  // Field handler:Ljnr/posix/POSIXHandler;
      17: invokespecial #38                 // Method jnr/posix/JavaLibCHelper$PosixExec."<init>":(Ljnr/posix/POSIXHandler;)V
      20: aload         4
      22: iconst_2
      23: anewarray     #39                 // class java/lang/String
      26: dup
      27: iconst_0
      28: ldc           #95                 // String readlink
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: aastore
      35: invokevirtual #96                 // Method jnr/posix/JavaLibCHelper$PosixExec.runAndWait:(Ljava/io/OutputStream;[Ljava/lang/String;)I
      38: pop
      39: aload         4
      41: invokevirtual #97                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      44: astore        5
      46: aload         5
      48: arraylength
      49: iload_3
      50: if_icmpgt     59
      53: aload         5
      55: arraylength
      56: ifne          61
      59: iconst_m1
      60: ireturn
      61: aload_2
      62: aload         5
      64: iconst_0
      65: aload         5
      67: arraylength
      68: iconst_1
      69: isub
      70: invokevirtual #98                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      73: pop
      74: aload_2
      75: invokevirtual #99                 // Method java/nio/ByteBuffer.position:()I
      78: ireturn
      79: astore        4
      81: invokestatic  #50                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      84: invokevirtual #51                 // Method java/lang/Thread.interrupt:()V
      87: getstatic     #81                 // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
      90: invokestatic  #79                 // Method errno:(Ljnr/constants/platform/Errno;)V
      93: iconst_m1
      94: ireturn
    Exception table:
       from    to  target type
           0    60    79   Class java/lang/InterruptedException
          61    78    79   Class java/lang/InterruptedException

  public java.util.Map<java.lang.String, java.lang.String> getEnv();
    Code:
       0: aload_0
       1: getfield      #7                  // Field env:Ljava/util/Map;
       4: areturn

  public static java.io.FileDescriptor toFileDescriptor(int);
    Code:
       0: new           #14                 // class java/io/FileDescriptor
       3: dup
       4: invokespecial #20                 // Method java/io/FileDescriptor."<init>":()V
       7: astore_1
       8: invokestatic  #19                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$400:()Ljava/lang/reflect/Field;
      11: aload_1
      12: iload_0
      13: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokevirtual #26                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      19: goto          32
      22: astore_2
      23: new           #100                // class java/lang/RuntimeException
      26: dup
      27: aload_2
      28: invokespecial #101                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: aload_1
      33: areturn
    Exception table:
       from    to  target type
           8    19    22   Class java/lang/IllegalAccessException

  public static java.io.FileDescriptor toFileDescriptor(jnr.posix.HANDLE);
    Code:
       0: new           #14                 // class java/io/FileDescriptor
       3: dup
       4: invokespecial #20                 // Method java/io/FileDescriptor."<init>":()V
       7: astore_1
       8: invokestatic  #61                 // Method jnr/posix/JavaLibCHelper$ReflectiveAccess.access$500:()Ljava/lang/reflect/Field;
      11: aload_1
      12: aload_0
      13: invokevirtual #102                // Method jnr/posix/HANDLE.toPointer:()Ljnr/ffi/Pointer;
      16: invokevirtual #103                // Method jnr/ffi/Pointer.address:()J
      19: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      22: invokevirtual #26                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      25: goto          38
      28: astore_2
      29: new           #100                // class java/lang/RuntimeException
      32: dup
      33: aload_2
      34: invokespecial #101                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: aload_1
      39: areturn
    Exception table:
       from    to  target type
           8    25    28   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: new           #105                // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #106                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #27                 // Field errno:Ljava/lang/ThreadLocal;
      10: return
}
