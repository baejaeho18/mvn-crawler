Compiled from "Java5ProcessMaker.java"
public class jnr.posix.util.Java5ProcessMaker implements jnr.posix.util.ProcessMaker {
  private final java.lang.ProcessBuilder builder;

  private final jnr.posix.POSIXHandler handler;

  public jnr.posix.util.Java5ProcessMaker(jnr.posix.POSIXHandler, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       9: aload_0
      10: new           #3                  // class java/lang/ProcessBuilder
      13: dup
      14: aload_2
      15: invokespecial #4                  // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      18: putfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
      21: return

  public jnr.posix.util.Java5ProcessMaker(jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       9: aload_0
      10: new           #3                  // class java/lang/ProcessBuilder
      13: dup
      14: iconst_0
      15: anewarray     #6                  // class java/lang/String
      18: invokespecial #4                  // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      21: putfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
      24: return

  public java.util.List<java.lang.String> command();
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: invokevirtual #7                  // Method java/lang/ProcessBuilder.command:()Ljava/util/List;
       7: areturn

  public jnr.posix.util.ProcessMaker command(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: aload_1
       5: invokevirtual #8                  // Method java/lang/ProcessBuilder.command:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
       8: pop
       9: aload_0
      10: areturn

  public jnr.posix.util.ProcessMaker command(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/ProcessBuilder.command:([Ljava/lang/String;)Ljava/lang/ProcessBuilder;
       8: pop
       9: aload_0
      10: areturn

  public java.io.File directory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: invokevirtual #10                 // Method java/lang/ProcessBuilder.directory:()Ljava/io/File;
       7: areturn

  public jnr.posix.util.ProcessMaker directory(java.io.File);
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: aload_1
       5: invokevirtual #11                 // Method java/lang/ProcessBuilder.directory:(Ljava/io/File;)Ljava/lang/ProcessBuilder;
       8: pop
       9: aload_0
      10: areturn

  public java.util.Map<java.lang.String, java.lang.String> environment();
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: invokevirtual #12                 // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
       7: areturn

  public jnr.posix.util.ProcessMaker environment(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: aload_1
       5: invokestatic  #13                 // Method envIntoProcessBuilder:(Ljava/lang/ProcessBuilder;[Ljava/lang/String;)V
       8: aload_0
       9: areturn

  public jnr.posix.util.ProcessMaker inheritIO();
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #14                 // String inheritIO
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public jnr.posix.util.ProcessMaker$Redirect redirectError();
    Code:
       0: getstatic     #16                 // Field jnr/posix/util/ProcessMaker$Redirect.PIPE:Ljnr/posix/util/ProcessMaker$Redirect;
       3: areturn

  public jnr.posix.util.ProcessMaker redirectError(java.io.File);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #17                 // String redirectError
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public jnr.posix.util.ProcessMaker redirectError(jnr.posix.util.ProcessMaker$Redirect);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #17                 // String redirectError
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public boolean redirectErrorStream();
    Code:
       0: iconst_0
       1: ireturn

  public jnr.posix.util.ProcessMaker redirectErrorStream(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #18                 // String redirectErrorStream
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public jnr.posix.util.ProcessMaker$Redirect redirectInput();
    Code:
       0: getstatic     #16                 // Field jnr/posix/util/ProcessMaker$Redirect.PIPE:Ljnr/posix/util/ProcessMaker$Redirect;
       3: areturn

  public jnr.posix.util.ProcessMaker redirectInput(java.io.File);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #19                 // String redirectInput
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public jnr.posix.util.ProcessMaker redirectInput(jnr.posix.util.ProcessMaker$Redirect);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #19                 // String redirectInput
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public jnr.posix.util.ProcessMaker$Redirect redirectOutput();
    Code:
       0: getstatic     #16                 // Field jnr/posix/util/ProcessMaker$Redirect.PIPE:Ljnr/posix/util/ProcessMaker$Redirect;
       3: areturn

  public jnr.posix.util.ProcessMaker redirectOutput(java.io.File);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #20                 // String redirectOutput
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public jnr.posix.util.ProcessMaker redirectOutput(jnr.posix.util.ProcessMaker$Redirect);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #20                 // String redirectOutput
       6: invokeinterface #15,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aload_0
      12: areturn

  public java.lang.Process start() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Ljava/lang/ProcessBuilder;
       4: invokevirtual #21                 // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
       7: areturn

  private static void envIntoProcessBuilder(java.lang.ProcessBuilder, java.lang.String[]);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #12                 // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_1
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     103
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload         5
      36: iconst_0
      37: invokevirtual #23                 // Method java/lang/String.indexOf:(I)I
      40: iconst_m1
      41: if_icmpeq     55
      44: aload         5
      46: ldc           #24                 // String \u0000.*
      48: ldc           #25                 // String
      50: invokevirtual #26                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      53: astore        5
      55: aload         5
      57: bipush        61
      59: invokevirtual #23                 // Method java/lang/String.indexOf:(I)I
      62: istore        6
      64: iload         6
      66: iconst_m1
      67: if_icmpeq     97
      70: aload_0
      71: invokevirtual #12                 // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
      74: aload         5
      76: iconst_0
      77: iload         6
      79: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      82: aload         5
      84: iload         6
      86: iconst_1
      87: iadd
      88: invokevirtual #28                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      91: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: iinc          4, 1
     100: goto          22
     103: return
}
