Compiled from "SimpleFunctionMapper.java"
public class jnr.posix.SimpleFunctionMapper implements jnr.ffi.mapper.FunctionMapper {
  private final java.util.Map<java.lang.String, java.lang.String> functionNameMap;

  private jnr.posix.SimpleFunctionMapper(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: aload_1
      10: invokespecial #4                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      13: invokestatic  #5                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      16: putfield      #6                  // Field functionNameMap:Ljava/util/Map;
      19: return

  public java.lang.String mapFunctionName(java.lang.String, jnr.ffi.mapper.FunctionMapper$Context);
    Code:
       0: aload_0
       1: getfield      #6                  // Field functionNameMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class java/lang/String
      13: astore_3
      14: aload_3
      15: ifnull        22
      18: aload_3
      19: goto          23
      22: aload_1
      23: areturn

  jnr.posix.SimpleFunctionMapper(java.util.Map, jnr.posix.SimpleFunctionMapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/util/Map;)V
       5: return
}
