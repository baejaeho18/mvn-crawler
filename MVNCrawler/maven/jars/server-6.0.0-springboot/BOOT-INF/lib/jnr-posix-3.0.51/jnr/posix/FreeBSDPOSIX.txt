Compiled from "FreeBSDPOSIX.java"
final class jnr.posix.FreeBSDPOSIX extends jnr.posix.BaseNativePOSIX {
  private final int freebsdVersion;

  public static final jnr.posix.BaseNativePOSIX$PointerConverter PASSWD;

  jnr.posix.FreeBSDPOSIX(jnr.posix.LibCProvider, jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method jnr/posix/BaseNativePOSIX."<init>":(Ljnr/posix/LibCProvider;Ljnr/posix/POSIXHandler;)V
       6: iconst_0
       7: istore_3
       8: invokestatic  #2                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      11: ldc           #3                  // String /bin/freebsd-version -u
      13: invokevirtual #4                  // Method java/lang/Runtime.exec:(Ljava/lang/String;)Ljava/lang/Process;
      16: astore        4
      18: new           #5                  // class java/io/BufferedReader
      21: dup
      22: new           #6                  // class java/io/InputStreamReader
      25: dup
      26: aload         4
      28: invokevirtual #7                  // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
      31: invokespecial #8                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      34: invokespecial #9                  // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      37: invokevirtual #10                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      40: astore        5
      42: aload         4
      44: invokevirtual #11                 // Method java/lang/Process.waitFor:()I
      47: ifne          85
      50: aload         5
      52: ifnull        85
      55: invokestatic  #12                 // Method java/text/NumberFormat.getIntegerInstance:()Ljava/text/NumberFormat;
      58: astore        6
      60: aload         6
      62: iconst_0
      63: invokevirtual #13                 // Method java/text/NumberFormat.setGroupingUsed:(Z)V
      66: aload         6
      68: aload         5
      70: new           #14                 // class java/text/ParsePosition
      73: dup
      74: iconst_0
      75: invokespecial #15                 // Method java/text/ParsePosition."<init>":(I)V
      78: invokevirtual #16                 // Method java/text/NumberFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
      81: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      84: istore_3
      85: goto          90
      88: astore        4
      90: aload_0
      91: iload_3
      92: putfield      #19                 // Field freebsdVersion:I
      95: return
    Exception table:
       from    to  target type
           8    85    88   Class java/lang/Exception

  public jnr.posix.FileStat allocateStat();
    Code:
       0: aload_0
       1: getfield      #19                 // Field freebsdVersion:I
       4: bipush        12
       6: if_icmplt     18
       9: new           #20                 // class jnr/posix/FreeBSDFileStat12
      12: dup
      13: aload_0
      14: invokespecial #21                 // Method jnr/posix/FreeBSDFileStat12."<init>":(Ljnr/posix/NativePOSIX;)V
      17: areturn
      18: new           #22                 // class jnr/posix/FreeBSDFileStat
      21: dup
      22: aload_0
      23: invokespecial #23                 // Method jnr/posix/FreeBSDFileStat."<init>":(Ljnr/posix/NativePOSIX;)V
      26: areturn

  public jnr.posix.MsgHdr allocateMsgHdr();
    Code:
       0: aload_0
       1: getfield      #24                 // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #25                 // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #26,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public jnr.posix.SocketMacros socketMacros();
    Code:
       0: aload_0
       1: getfield      #24                 // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #25                 // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #26,  2           // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public long sysconf(jnr.constants.platform.Sysconf);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method libc:()Ljnr/posix/LibC;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod jnr/posix/LibC.sysconf:(Ljnr/constants/platform/Sysconf;)J
      10: lreturn

  public jnr.posix.Times times();
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method jnr/posix/NativeTimes.times:(Ljnr/posix/BaseNativePOSIX;)Ljnr/posix/NativeTimes;
       4: areturn

  public jnr.ffi.Pointer allocatePosixSpawnFileActions();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #31                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  public jnr.ffi.Pointer allocatePosixSpawnattr();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #31                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  static {};
    Code:
       0: new           #32                 // class jnr/posix/FreeBSDPOSIX$1
       3: dup
       4: invokespecial #33                 // Method jnr/posix/FreeBSDPOSIX$1."<init>":()V
       7: putstatic     #34                 // Field PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      10: return
}
