Compiled from "HANDLE.java"
final class jnr.posix.HANDLE$1 implements jnr.ffi.mapper.DataConverter<jnr.posix.HANDLE, jnr.ffi.Pointer> {
  jnr.posix.HANDLE$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public jnr.ffi.Pointer toNative(jnr.posix.HANDLE, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokestatic  #2                  // Method jnr/posix/HANDLE.access$000:(Ljnr/posix/HANDLE;)Ljnr/ffi/Pointer;
       8: goto          12
      11: aconst_null
      12: areturn

  public jnr.posix.HANDLE fromNative(jnr.ffi.Pointer, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_1
       1: ifnull        15
       4: new           #3                  // class jnr/posix/HANDLE
       7: dup
       8: aload_1
       9: invokespecial #4                  // Method jnr/posix/HANDLE."<init>":(Ljnr/ffi/Pointer;)V
      12: goto          16
      15: aconst_null
      16: areturn

  public java.lang.Class<jnr.ffi.Pointer> nativeType();
    Code:
       0: ldc           #5                  // class jnr/ffi/Pointer
       2: areturn

  public java.lang.Object toNative(java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class jnr/posix/HANDLE
       5: aload_2
       6: invokevirtual #6                  // Method toNative:(Ljnr/posix/HANDLE;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/Pointer;
       9: areturn

  public java.lang.Object fromNative(java.lang.Object, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class jnr/ffi/Pointer
       5: aload_2
       6: invokevirtual #7                  // Method fromNative:(Ljnr/ffi/Pointer;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/posix/HANDLE;
       9: areturn
}
