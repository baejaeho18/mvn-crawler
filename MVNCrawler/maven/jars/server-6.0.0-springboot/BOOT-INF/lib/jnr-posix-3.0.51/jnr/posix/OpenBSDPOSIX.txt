Compiled from "OpenBSDPOSIX.java"
final class jnr.posix.OpenBSDPOSIX extends jnr.posix.BaseNativePOSIX {
  public static final jnr.posix.BaseNativePOSIX$PointerConverter PASSWD;

  jnr.posix.OpenBSDPOSIX(jnr.posix.LibCProvider, jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method jnr/posix/BaseNativePOSIX."<init>":(Ljnr/posix/LibCProvider;Ljnr/posix/POSIXHandler;)V
       6: return

  public jnr.posix.FileStat allocateStat();
    Code:
       0: new           #2                  // class jnr/posix/OpenBSDFileStat
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method jnr/posix/OpenBSDFileStat."<init>":(Ljnr/posix/NativePOSIX;)V
       8: areturn

  public jnr.posix.MsgHdr allocateMsgHdr();
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #5                  // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #6,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public jnr.posix.SocketMacros socketMacros();
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #5                  // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #6,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public long sysconf(jnr.constants.platform.Sysconf);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method libc:()Ljnr/posix/LibC;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod jnr/posix/LibC.sysconf:(Ljnr/constants/platform/Sysconf;)J
      10: lreturn

  public jnr.posix.Times times();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method jnr/posix/NativeTimes.times:(Ljnr/posix/BaseNativePOSIX;)Ljnr/posix/NativeTimes;
       4: areturn

  public int utimes(java.lang.String, long[], long[]);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_2
       4: ifnull        42
       7: aload_3
       8: ifnull        42
      11: aload_0
      12: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
      15: ldc           #11                 // class jnr/posix/OpenBSDTimeval
      17: iconst_2
      18: invokestatic  #12                 // Method jnr/ffi/Struct.arrayOf:(Ljnr/ffi/Runtime;Ljava/lang/Class;I)[Ljnr/ffi/Struct;
      21: checkcast     #13                 // class "[Ljnr/posix/Timeval;"
      24: astore        4
      26: aload         4
      28: iconst_0
      29: aaload
      30: aload_2
      31: invokevirtual #14                 // Method jnr/posix/Timeval.setTime:([J)V
      34: aload         4
      36: iconst_1
      37: aaload
      38: aload_3
      39: invokevirtual #14                 // Method jnr/posix/Timeval.setTime:([J)V
      42: aload_0
      43: invokevirtual #7                  // Method libc:()Ljnr/posix/LibC;
      46: aload_1
      47: aload         4
      49: invokeinterface #15,  3           // InterfaceMethod jnr/posix/LibC.utimes:(Ljava/lang/CharSequence;[Ljnr/posix/Timeval;)I
      54: ireturn

  public jnr.ffi.Pointer allocatePosixSpawnFileActions();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #16                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  public jnr.ffi.Pointer allocatePosixSpawnattr();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #16                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  static {};
    Code:
       0: new           #17                 // class jnr/posix/OpenBSDPOSIX$1
       3: dup
       4: invokespecial #18                 // Method jnr/posix/OpenBSDPOSIX$1."<init>":()V
       7: putstatic     #19                 // Field PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      10: return
}
