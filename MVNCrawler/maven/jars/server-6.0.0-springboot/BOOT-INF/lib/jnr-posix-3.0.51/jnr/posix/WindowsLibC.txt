Compiled from "WindowsLibC.java"
public interface jnr.posix.WindowsLibC extends jnr.posix.LibC {
  public static final int STD_INPUT_HANDLE;

  public static final int STD_OUTPUT_HANDLE;

  public static final int STD_ERROR_HANDLE;

  public static final int NORMAL_PRIORITY_CLASS;

  public static final int CREATE_UNICODE_ENVIRONMENT;

  public static final int INFINITE;

  public static final int FILE_TYPE_DISK;

  public static final int FILE_TYPE_CHAR;

  public static final int FILE_TYPE_PIPE;

  public static final int FILE_TYPE_REMOTE;

  public static final int FILE_TYPE_UNKNOWN;

  public static final int PROCESS_QUERY_INFORMATION;

  public abstract int _open_osfhandle(jnr.posix.HANDLE, int);

  public abstract jnr.posix.HANDLE _get_osfhandle(int);

  public abstract int _close(int);

  public abstract int _getpid();

  public abstract int _stat64(java.lang.CharSequence, jnr.posix.FileStat);

  public abstract int _umask(int);

  public abstract int _wmkdir(jnr.posix.WString);

  public abstract boolean RemoveDirectoryW(jnr.posix.WString);

  public abstract int _wchmod(jnr.posix.WString, int);

  public abstract int _wchdir(jnr.posix.WString);

  public abstract int _wstat64(jnr.posix.WString, jnr.posix.FileStat);

  public abstract int _wstat64(byte[], jnr.posix.FileStat);

  public abstract int _pipe(int[], int, int);

  public abstract boolean CreateProcessW(byte[], java.nio.ByteBuffer, jnr.posix.WindowsSecurityAttributes, jnr.posix.WindowsSecurityAttributes, int, int, jnr.ffi.Pointer, byte[], jnr.posix.WindowsStartupInfo, jnr.posix.WindowsProcessInformation);

  public abstract jnr.posix.HANDLE OpenProcess(int, int, int);

  public abstract int FileTimeToSystemTime(jnr.posix.FileTime, jnr.posix.windows.SystemTime);

  public abstract int GetFileAttributesW(jnr.posix.WString);

  public abstract int GetFileAttributesExW(jnr.posix.WString, int, jnr.posix.windows.WindowsFileInformation);

  public abstract int GetFileAttributesExW(byte[], int, jnr.posix.windows.WindowsFileInformation);

  public abstract int SetFileAttributesW(jnr.posix.WString, int);

  public abstract int GetFileInformationByHandle(jnr.posix.HANDLE, jnr.posix.windows.WindowsByHandleFileInformation);

  public abstract int FindClose(jnr.posix.HANDLE);

  public abstract jnr.posix.HANDLE FindFirstFileW(jnr.posix.WString, jnr.posix.windows.WindowsFindData);

  public abstract jnr.posix.HANDLE FindFirstFileW(byte[], jnr.posix.windows.WindowsFindData);

  public abstract boolean GetExitCodeProcess(jnr.posix.HANDLE, jnr.ffi.Pointer);

  public abstract boolean GetExitCodeProcess(jnr.posix.HANDLE, jnr.ffi.byref.IntByReference);

  public abstract int GetFileType(jnr.posix.HANDLE);

  public abstract int GetFileSize(jnr.posix.HANDLE, jnr.ffi.byref.IntByReference);

  public abstract jnr.posix.HANDLE GetStdHandle(int);

  public abstract boolean CreateHardLinkW(jnr.posix.WString, jnr.posix.WString, jnr.posix.WString);

  public abstract jnr.posix.HANDLE CreateFileW(byte[], int, int, jnr.ffi.Pointer, int, int, int);

  public abstract boolean SetEnvironmentVariableW(jnr.posix.WString, jnr.posix.WString);

  public abstract boolean GetComputerNameW(java.nio.ByteBuffer, jnr.ffi.byref.IntByReference);

  public abstract boolean SetFileTime(jnr.posix.HANDLE, jnr.posix.FileTime, jnr.posix.FileTime, jnr.posix.FileTime);

  public abstract boolean CloseHandle(jnr.posix.HANDLE);

  public abstract int WaitForSingleObject(jnr.posix.HANDLE, int);

  public abstract jnr.ffi.Variable<java.lang.Long> _environ();
}
