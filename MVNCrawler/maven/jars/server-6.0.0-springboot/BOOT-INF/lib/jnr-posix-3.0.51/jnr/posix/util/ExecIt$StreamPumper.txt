Compiled from "ExecIt.java"
class jnr.posix.util.ExecIt$StreamPumper extends java.lang.Thread {
  private java.io.InputStream in;

  private java.io.OutputStream out;

  private boolean onlyIfAvailable;

  private volatile boolean quit;

  private final java.lang.Object waitLock;

  jnr.posix.util.ExecIt$StreamPumper(java.io.InputStream, java.io.OutputStream, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #4                  // Field waitLock:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field in:Ljava/io/InputStream;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field out:Ljava/io/OutputStream;
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field onlyIfAvailable:Z
      30: return

  public void run();
    Code:
       0: sipush        1024
       3: newarray       byte
       5: astore_1
       6: iconst_0
       7: istore_3
       8: aload_0
       9: getfield      #8                  // Field quit:Z
      12: ifne          103
      15: aload_0
      16: getfield      #7                  // Field onlyIfAvailable:Z
      19: ifeq          73
      22: iload_3
      23: ifne          73
      26: aload_0
      27: getfield      #5                  // Field in:Ljava/io/InputStream;
      30: invokevirtual #9                  // Method java/io/InputStream.available:()I
      33: ifne          71
      36: aload_0
      37: getfield      #4                  // Field waitLock:Ljava/lang/Object;
      40: dup
      41: astore        4
      43: monitorenter
      44: aload_0
      45: getfield      #4                  // Field waitLock:Ljava/lang/Object;
      48: ldc2_w        #10                 // long 10l
      51: invokevirtual #12                 // Method java/lang/Object.wait:(J)V
      54: aload         4
      56: monitorexit
      57: goto          68
      60: astore        5
      62: aload         4
      64: monitorexit
      65: aload         5
      67: athrow
      68: goto          8
      71: iconst_1
      72: istore_3
      73: aload_0
      74: getfield      #5                  // Field in:Ljava/io/InputStream;
      77: aload_1
      78: invokevirtual #13                 // Method java/io/InputStream.read:([B)I
      81: dup
      82: istore_2
      83: iconst_m1
      84: if_icmpne     90
      87: goto          103
      90: aload_0
      91: getfield      #6                  // Field out:Ljava/io/OutputStream;
      94: aload_1
      95: iconst_0
      96: iload_2
      97: invokevirtual #14                 // Method java/io/OutputStream.write:([BII)V
     100: goto          8
     103: aload_0
     104: getfield      #7                  // Field onlyIfAvailable:Z
     107: ifeq          173
     110: aload_0
     111: getfield      #6                  // Field out:Ljava/io/OutputStream;
     114: invokevirtual #15                 // Method java/io/OutputStream.close:()V
     117: goto          173
     120: astore        4
     122: goto          173
     125: astore        4
     127: aload_0
     128: getfield      #7                  // Field onlyIfAvailable:Z
     131: ifeq          173
     134: aload_0
     135: getfield      #6                  // Field out:Ljava/io/OutputStream;
     138: invokevirtual #15                 // Method java/io/OutputStream.close:()V
     141: goto          173
     144: astore        4
     146: goto          173
     149: astore        6
     151: aload_0
     152: getfield      #7                  // Field onlyIfAvailable:Z
     155: ifeq          170
     158: aload_0
     159: getfield      #6                  // Field out:Ljava/io/OutputStream;
     162: invokevirtual #15                 // Method java/io/OutputStream.close:()V
     165: goto          170
     168: astore        7
     170: aload         6
     172: athrow
     173: return
    Exception table:
       from    to  target type
          44    57    60   any
          60    65    60   any
         110   117   120   Class java/io/IOException
           8   103   125   Class java/lang/Exception
         134   141   144   Class java/io/IOException
           8   103   149   any
         125   127   149   any
         158   165   168   Class java/io/IOException
         149   151   149   any

  public void quit();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field quit:Z
       5: aload_0
       6: getfield      #4                  // Field waitLock:Ljava/lang/Object;
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: getfield      #4                  // Field waitLock:Ljava/lang/Object;
      16: invokevirtual #18                 // Method java/lang/Object.notify:()V
      19: aload_1
      20: monitorexit
      21: goto          29
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
      29: return
    Exception table:
       from    to  target type
          12    21    24   any
          24    27    24   any
}
