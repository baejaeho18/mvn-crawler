Compiled from "POSIXTypeMapper.java"
final class jnr.posix.POSIXTypeMapper implements jnr.ffi.mapper.TypeMapper {
  public static final jnr.ffi.mapper.TypeMapper INSTANCE;

  private jnr.posix.POSIXTypeMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public jnr.ffi.mapper.FromNativeConverter getFromNativeConverter(java.lang.Class);
    Code:
       0: ldc           #2                  // class jnr/posix/Passwd
       2: aload_1
       3: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          100
       9: getstatic     #4                  // Field jnr/posix/util/Platform.IS_MAC:Z
      12: ifeq          19
      15: getstatic     #5                  // Field jnr/posix/MacOSPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      18: areturn
      19: getstatic     #6                  // Field jnr/posix/util/Platform.IS_LINUX:Z
      22: ifeq          29
      25: getstatic     #7                  // Field jnr/posix/LinuxPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      28: areturn
      29: getstatic     #8                  // Field jnr/posix/util/Platform.IS_SOLARIS:Z
      32: ifeq          39
      35: getstatic     #9                  // Field jnr/posix/SolarisPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      38: areturn
      39: getstatic     #10                 // Field jnr/posix/util/Platform.IS_FREEBSD:Z
      42: ifeq          49
      45: getstatic     #11                 // Field jnr/posix/FreeBSDPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      48: areturn
      49: getstatic     #12                 // Field jnr/posix/util/Platform.IS_DRAGONFLY:Z
      52: ifeq          59
      55: getstatic     #13                 // Field jnr/posix/DragonFlyPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      58: areturn
      59: getstatic     #14                 // Field jnr/posix/util/Platform.IS_OPENBSD:Z
      62: ifeq          69
      65: getstatic     #15                 // Field jnr/posix/OpenBSDPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      68: areturn
      69: getstatic     #16                 // Field jnr/posix/util/Platform.IS_WINDOWS:Z
      72: ifeq          79
      75: getstatic     #17                 // Field jnr/posix/WindowsPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      78: areturn
      79: invokestatic  #18                 // Method jnr/ffi/Platform.getNativePlatform:()Ljnr/ffi/Platform;
      82: invokevirtual #19                 // Method jnr/ffi/Platform.getOS:()Ljnr/ffi/Platform$OS;
      85: getstatic     #20                 // Field jnr/ffi/Platform$OS.AIX:Ljnr/ffi/Platform$OS;
      88: invokevirtual #21                 // Method jnr/ffi/Platform$OS.equals:(Ljava/lang/Object;)Z
      91: ifeq          98
      94: getstatic     #22                 // Field jnr/posix/AixPOSIX.PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      97: areturn
      98: aconst_null
      99: areturn
     100: ldc           #23                 // class jnr/posix/Group
     102: aload_1
     103: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     106: ifeq          113
     109: getstatic     #24                 // Field jnr/posix/BaseNativePOSIX.GROUP:Ljnr/posix/BaseNativePOSIX$PointerConverter;
     112: areturn
     113: ldc           #25                 // class jnr/posix/HANDLE
     115: aload_1
     116: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     119: ifeq          126
     122: getstatic     #26                 // Field jnr/posix/HANDLE.Converter:Ljnr/ffi/mapper/DataConverter;
     125: areturn
     126: aconst_null
     127: areturn

  public jnr.ffi.mapper.ToNativeConverter getToNativeConverter(java.lang.Class);
    Code:
       0: ldc           #27                 // class jnr/posix/FileStat
       2: aload_1
       3: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          13
       9: getstatic     #28                 // Field jnr/posix/BaseNativePOSIX.FileStatConverter:Ljnr/ffi/mapper/ToNativeConverter;
      12: areturn
      13: ldc           #29                 // class jnr/posix/NativeTimes
      15: aload_1
      16: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifeq          26
      22: getstatic     #30                 // Field jnr/posix/BaseNativePOSIX.TimesConverter:Ljnr/ffi/mapper/ToNativeConverter;
      25: areturn
      26: ldc           #31                 // class jnr/constants/Constant
      28: aload_1
      29: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          39
      35: getstatic     #32                 // Field jnr/posix/BaseNativePOSIX.ConstantConverter:Ljnr/ffi/mapper/ToNativeConverter;
      38: areturn
      39: ldc           #33                 // class jnr/posix/WString
      41: aload_1
      42: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      45: ifeq          52
      48: getstatic     #34                 // Field jnr/posix/WString.Converter:Ljnr/ffi/mapper/ToNativeConverter;
      51: areturn
      52: ldc           #25                 // class jnr/posix/HANDLE
      54: aload_1
      55: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      58: ifeq          65
      61: getstatic     #26                 // Field jnr/posix/HANDLE.Converter:Ljnr/ffi/mapper/DataConverter;
      64: areturn
      65: ldc           #35                 // class jnr/posix/MsgHdr
      67: aload_1
      68: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      71: ifeq          78
      74: getstatic     #36                 // Field jnr/posix/BaseNativePOSIX.MsgHdrConverter:Ljnr/ffi/mapper/ToNativeConverter;
      77: areturn
      78: aconst_null
      79: areturn

  public final jnr.ffi.mapper.ToNativeConverter getToNativeConverter(java.lang.Class, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method getToNativeConverter:(Ljava/lang/Class;)Ljnr/ffi/mapper/ToNativeConverter;
       5: areturn

  public final jnr.ffi.mapper.FromNativeConverter getFromNativeConverter(java.lang.Class, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getFromNativeConverter:(Ljava/lang/Class;)Ljnr/ffi/mapper/FromNativeConverter;
       5: areturn

  static {};
    Code:
       0: new           #39                 // class jnr/posix/POSIXTypeMapper
       3: dup
       4: invokespecial #40                 // Method "<init>":()V
       7: putstatic     #41                 // Field INSTANCE:Ljnr/ffi/mapper/TypeMapper;
      10: return
}
