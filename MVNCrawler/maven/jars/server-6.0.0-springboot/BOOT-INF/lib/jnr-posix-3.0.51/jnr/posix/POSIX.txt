Compiled from "POSIX.java"
public interface jnr.posix.POSIX {
  public abstract java.lang.CharSequence crypt(java.lang.CharSequence, java.lang.CharSequence);

  public abstract byte[] crypt(byte[], byte[]);

  public abstract jnr.posix.FileStat allocateStat();

  public abstract int chmod(java.lang.String, int);

  public abstract int fchmod(int, int);

  public abstract int chown(java.lang.String, int, int);

  public abstract int fchown(int, int, int);

  public abstract int exec(java.lang.String, java.lang.String...);

  public abstract int exec(java.lang.String, java.lang.String[], java.lang.String[]);

  public abstract int execv(java.lang.String, java.lang.String[]);

  public abstract int execve(java.lang.String, java.lang.String[], java.lang.String[]);

  public abstract int fork();

  public abstract jnr.posix.FileStat fstat(java.io.FileDescriptor);

  public abstract jnr.posix.FileStat fstat(int);

  public abstract int fstat(java.io.FileDescriptor, jnr.posix.FileStat);

  public abstract int fstat(int, jnr.posix.FileStat);

  public abstract jnr.ffi.Pointer environ();

  public abstract java.lang.String getenv(java.lang.String);

  public abstract int getegid();

  public abstract int geteuid();

  public abstract int seteuid(int);

  public abstract int getgid();

  public abstract int getdtablesize();

  public abstract java.lang.String getlogin();

  public abstract int getpgid();

  public abstract int getpgid(int);

  public abstract int getpgrp();

  public abstract int getpid();

  public abstract int getppid();

  public abstract int getpriority(int, int);

  public abstract jnr.posix.Passwd getpwent();

  public abstract jnr.posix.Passwd getpwuid(int);

  public abstract jnr.posix.Passwd getpwnam(java.lang.String);

  public abstract jnr.posix.Group getgrgid(int);

  public abstract jnr.posix.Group getgrnam(java.lang.String);

  public abstract jnr.posix.Group getgrent();

  public abstract int endgrent();

  public abstract int setgrent();

  public abstract int endpwent();

  public abstract int setpwent();

  public abstract int getuid();

  public abstract int getrlimit(int, jnr.posix.RLimit);

  public abstract int getrlimit(int, jnr.ffi.Pointer);

  public abstract jnr.posix.RLimit getrlimit(int);

  public abstract int setrlimit(int, jnr.posix.RLimit);

  public abstract int setrlimit(int, jnr.ffi.Pointer);

  public abstract int setrlimit(int, long, long);

  public abstract boolean isatty(java.io.FileDescriptor);

  public abstract int isatty(int);

  public abstract int kill(int, int);

  public abstract int kill(long, int);

  public abstract jnr.posix.SignalHandler signal(jnr.constants.platform.Signal, jnr.posix.SignalHandler);

  public abstract int raise(int);

  public abstract int lchmod(java.lang.String, int);

  public abstract int lchown(java.lang.String, int, int);

  public abstract int link(java.lang.String, java.lang.String);

  public abstract jnr.posix.FileStat lstat(java.lang.String);

  public abstract int lstat(java.lang.String, jnr.posix.FileStat);

  public abstract int mkdir(java.lang.String, int);

  public abstract java.lang.String readlink(java.lang.String) throws java.io.IOException;

  public abstract int readlink(java.lang.CharSequence, byte[], int);

  public abstract int readlink(java.lang.CharSequence, java.nio.ByteBuffer, int);

  public abstract int readlink(java.lang.CharSequence, jnr.ffi.Pointer, int);

  public abstract int rmdir(java.lang.String);

  public abstract int setenv(java.lang.String, java.lang.String, int);

  public abstract int setsid();

  public abstract int setgid(int);

  public abstract int setegid(int);

  public abstract int setpgid(int, int);

  public abstract int setpgrp(int, int);

  public abstract int setpriority(int, int, int);

  public abstract int setuid(int);

  public abstract jnr.posix.FileStat stat(java.lang.String);

  public abstract int stat(java.lang.String, jnr.posix.FileStat);

  public abstract int symlink(java.lang.String, java.lang.String);

  public abstract int umask(int);

  public abstract int unsetenv(java.lang.String);

  public abstract int utimes(java.lang.String, long[], long[]);

  public abstract int utimes(java.lang.String, jnr.ffi.Pointer);

  public abstract int futimes(int, long[], long[]);

  public abstract int lutimes(java.lang.String, long[], long[]);

  public abstract int utimensat(int, java.lang.String, long[], long[], int);

  public abstract int utimensat(int, java.lang.String, jnr.ffi.Pointer, int);

  public abstract int futimens(int, long[], long[]);

  public abstract int futimens(int, jnr.ffi.Pointer);

  public abstract int waitpid(int, int[], int);

  public abstract int waitpid(long, int[], int);

  public abstract int wait(int[]);

  public abstract int errno();

  public abstract void errno(int);

  public abstract java.lang.String strerror(int);

  public abstract int chdir(java.lang.String);

  public abstract boolean isNative();

  public abstract jnr.posix.LibC libc();

  public abstract jnr.posix.util.ProcessMaker newProcessMaker(java.lang.String...);

  public abstract jnr.posix.util.ProcessMaker newProcessMaker();

  public abstract long sysconf(jnr.constants.platform.Sysconf);

  public abstract jnr.posix.Times times();

  public abstract long posix_spawnp(java.lang.String, java.util.Collection<? extends jnr.posix.SpawnFileAction>, java.util.Collection<? extends java.lang.CharSequence>, java.util.Collection<? extends java.lang.CharSequence>);

  public abstract long posix_spawnp(java.lang.String, java.util.Collection<? extends jnr.posix.SpawnFileAction>, java.util.Collection<? extends jnr.posix.SpawnAttribute>, java.util.Collection<? extends java.lang.CharSequence>, java.util.Collection<? extends java.lang.CharSequence>);

  public abstract int flock(int, int);

  public abstract int dup(int);

  public abstract int dup2(int, int);

  public abstract int fcntlInt(int, jnr.constants.platform.Fcntl, int);

  public abstract int fcntl(int, jnr.constants.platform.Fcntl);

  public abstract int access(java.lang.CharSequence, int);

  public abstract int close(int);

  public abstract int unlink(java.lang.CharSequence);

  public abstract int open(java.lang.CharSequence, int, int);

  public abstract long read(int, byte[], long);

  public abstract long write(int, byte[], long);

  public abstract long read(int, java.nio.ByteBuffer, long);

  public abstract long write(int, java.nio.ByteBuffer, long);

  public abstract long pread(int, byte[], long, long);

  public abstract long pwrite(int, byte[], long, long);

  public abstract long pread(int, java.nio.ByteBuffer, long, long);

  public abstract long pwrite(int, java.nio.ByteBuffer, long, long);

  public abstract int read(int, byte[], int);

  public abstract int write(int, byte[], int);

  public abstract int read(int, java.nio.ByteBuffer, int);

  public abstract int write(int, java.nio.ByteBuffer, int);

  public abstract int pread(int, byte[], int, int);

  public abstract int pwrite(int, byte[], int, int);

  public abstract int pread(int, java.nio.ByteBuffer, int, int);

  public abstract int pwrite(int, java.nio.ByteBuffer, int, int);

  public abstract int lseek(int, long, int);

  public abstract long lseekLong(int, long, int);

  public abstract int pipe(int[]);

  public abstract int truncate(java.lang.CharSequence, long);

  public abstract int ftruncate(int, long);

  public abstract int rename(java.lang.CharSequence, java.lang.CharSequence);

  public abstract java.lang.String getcwd();

  public abstract java.lang.String gethostname();

  public abstract int socketpair(int, int, int, int[]);

  public abstract int sendmsg(int, jnr.posix.MsgHdr, int);

  public abstract int recvmsg(int, jnr.posix.MsgHdr, int);

  public abstract jnr.posix.MsgHdr allocateMsgHdr();

  public abstract int fcntl(int, jnr.constants.platform.Fcntl, int...);

  public abstract int fsync(int);

  public abstract int fdatasync(int);

  public abstract int mkfifo(java.lang.String, int);

  public abstract int daemon(int, int);

  public abstract long[] getgroups();

  public abstract int getgroups(int, int[]);

  public abstract java.lang.String nl_langinfo(int);

  public abstract java.lang.String setlocale(int, java.lang.String);

  public abstract jnr.posix.Timeval allocateTimeval();

  public abstract int gettimeofday(jnr.posix.Timeval);
}
