Compiled from "SolarisPOSIX.java"
final class jnr.posix.SolarisPOSIX extends jnr.posix.BaseNativePOSIX {
  public static final int LOCK_SH;

  public static final int LOCK_EX;

  public static final int LOCK_NB;

  public static final int LOCK_UN;

  public static final int SEEK_SET;

  private static final jnr.posix.SolarisPOSIX$Layout FLOCK_LAYOUT;

  public static final jnr.posix.BaseNativePOSIX$PointerConverter PASSWD;

  jnr.posix.SolarisPOSIX(jnr.posix.LibCProvider, jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method jnr/posix/BaseNativePOSIX."<init>":(Ljnr/posix/LibCProvider;Ljnr/posix/POSIXHandler;)V
       6: return

  public jnr.posix.FileStat allocateStat();
    Code:
       0: getstatic     #2                  // Field jnr/posix/util/Platform.IS_32_BIT:Z
       3: ifeq          17
       6: new           #3                  // class jnr/posix/SolarisFileStat32
       9: dup
      10: aload_0
      11: invokespecial #4                  // Method jnr/posix/SolarisFileStat32."<init>":(Ljnr/posix/NativePOSIX;)V
      14: goto          25
      17: new           #5                  // class jnr/posix/SolarisFileStat64
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method jnr/posix/SolarisFileStat64."<init>":(Ljnr/posix/NativePOSIX;)V
      25: areturn

  public jnr.posix.MsgHdr allocateMsgHdr();
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #8                  // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public jnr.posix.SocketMacros socketMacros();
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #8                  // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public long sysconf(jnr.constants.platform.Sysconf);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method libc:()Ljnr/posix/LibC;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod jnr/posix/LibC.sysconf:(Ljnr/constants/platform/Sysconf;)J
      10: lreturn

  public jnr.posix.Times times();
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method jnr/posix/NativeTimes.times:(Ljnr/posix/BaseNativePOSIX;)Ljnr/posix/NativeTimes;
       4: areturn

  public int flock(int, int);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: invokevirtual #14                 // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       7: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
      10: invokevirtual #16                 // Method jnr/posix/SolarisPOSIX$Layout.size:()I
      13: iconst_1
      14: invokeinterface #17,  3           // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateTemporary:(IZ)Ljnr/ffi/Pointer;
      19: astore_3
      20: iload_2
      21: bipush        -5
      23: iand
      24: lookupswitch  { // 3
                     1: 60
                     2: 81
                     8: 102
               default: 123
          }
      60: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
      63: getfield      #19                 // Field jnr/posix/SolarisPOSIX$Layout.l_type:Ljnr/ffi/StructLayout$int16_t;
      66: aload_3
      67: getstatic     #20                 // Field jnr/constants/platform/Fcntl.F_RDLCK:Ljnr/constants/platform/Fcntl;
      70: invokevirtual #21                 // Method jnr/constants/platform/Fcntl.intValue:()I
      73: i2s
      74: i2l
      75: invokevirtual #22                 // Method jnr/ffi/StructLayout$int16_t.set:(Ljnr/ffi/Pointer;J)V
      78: goto          135
      81: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
      84: getfield      #19                 // Field jnr/posix/SolarisPOSIX$Layout.l_type:Ljnr/ffi/StructLayout$int16_t;
      87: aload_3
      88: getstatic     #23                 // Field jnr/constants/platform/Fcntl.F_WRLCK:Ljnr/constants/platform/Fcntl;
      91: invokevirtual #21                 // Method jnr/constants/platform/Fcntl.intValue:()I
      94: i2s
      95: i2l
      96: invokevirtual #22                 // Method jnr/ffi/StructLayout$int16_t.set:(Ljnr/ffi/Pointer;J)V
      99: goto          135
     102: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
     105: getfield      #19                 // Field jnr/posix/SolarisPOSIX$Layout.l_type:Ljnr/ffi/StructLayout$int16_t;
     108: aload_3
     109: getstatic     #24                 // Field jnr/constants/platform/Fcntl.F_UNLCK:Ljnr/constants/platform/Fcntl;
     112: invokevirtual #21                 // Method jnr/constants/platform/Fcntl.intValue:()I
     115: i2s
     116: i2l
     117: invokevirtual #22                 // Method jnr/ffi/StructLayout$int16_t.set:(Ljnr/ffi/Pointer;J)V
     120: goto          135
     123: aload_0
     124: getstatic     #25                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
     127: invokevirtual #26                 // Method jnr/constants/platform/Errno.intValue:()I
     130: invokevirtual #27                 // Method errno:(I)V
     133: iconst_m1
     134: ireturn
     135: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
     138: getfield      #28                 // Field jnr/posix/SolarisPOSIX$Layout.l_whence:Ljnr/ffi/StructLayout$int16_t;
     141: aload_3
     142: lconst_0
     143: invokevirtual #22                 // Method jnr/ffi/StructLayout$int16_t.set:(Ljnr/ffi/Pointer;J)V
     146: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
     149: getfield      #29                 // Field jnr/posix/SolarisPOSIX$Layout.l_start:Ljnr/ffi/StructLayout$off_t;
     152: aload_3
     153: lconst_0
     154: invokevirtual #30                 // Method jnr/ffi/StructLayout$off_t.set:(Ljnr/ffi/Pointer;J)V
     157: getstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
     160: getfield      #31                 // Field jnr/posix/SolarisPOSIX$Layout.l_len:Ljnr/ffi/StructLayout$off_t;
     163: aload_3
     164: lconst_0
     165: invokevirtual #30                 // Method jnr/ffi/StructLayout$off_t.set:(Ljnr/ffi/Pointer;J)V
     168: aload_0
     169: invokevirtual #10                 // Method libc:()Ljnr/posix/LibC;
     172: iload_1
     173: iload_2
     174: iconst_4
     175: iand
     176: ifeq          188
     179: getstatic     #32                 // Field jnr/constants/platform/Fcntl.F_SETLK:Ljnr/constants/platform/Fcntl;
     182: invokevirtual #21                 // Method jnr/constants/platform/Fcntl.intValue:()I
     185: goto          194
     188: getstatic     #33                 // Field jnr/constants/platform/Fcntl.F_SETLKW:Ljnr/constants/platform/Fcntl;
     191: invokevirtual #21                 // Method jnr/constants/platform/Fcntl.intValue:()I
     194: aload_3
     195: invokeinterface #34,  4           // InterfaceMethod jnr/posix/LibC.fcntl:(IILjnr/ffi/Pointer;)I
     200: ireturn

  public jnr.ffi.Pointer allocatePosixSpawnFileActions();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #35                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  public jnr.ffi.Pointer allocatePosixSpawnattr();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #35                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  static {};
    Code:
       0: new           #36                 // class jnr/posix/SolarisPOSIX$Layout
       3: dup
       4: invokestatic  #37                 // Method jnr/ffi/Runtime.getSystemRuntime:()Ljnr/ffi/Runtime;
       7: invokespecial #38                 // Method jnr/posix/SolarisPOSIX$Layout."<init>":(Ljnr/ffi/Runtime;)V
      10: putstatic     #15                 // Field FLOCK_LAYOUT:Ljnr/posix/SolarisPOSIX$Layout;
      13: new           #39                 // class jnr/posix/SolarisPOSIX$1
      16: dup
      17: invokespecial #40                 // Method jnr/posix/SolarisPOSIX$1."<init>":()V
      20: putstatic     #41                 // Field PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      23: return
}
