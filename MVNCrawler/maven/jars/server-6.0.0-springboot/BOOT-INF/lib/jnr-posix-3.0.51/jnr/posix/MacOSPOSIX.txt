Compiled from "MacOSPOSIX.java"
final class jnr.posix.MacOSPOSIX extends jnr.posix.BaseNativePOSIX {
  private final jnr.posix.NSGetEnviron environ;

  public static final jnr.posix.BaseNativePOSIX$PointerConverter PASSWD;

  jnr.posix.MacOSPOSIX(jnr.posix.LibCProvider, jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method jnr/posix/BaseNativePOSIX."<init>":(Ljnr/posix/LibCProvider;Ljnr/posix/POSIXHandler;)V
       6: ldc           #2                  // class jnr/posix/NSGetEnviron
       8: invokestatic  #3                  // Method jnr/ffi/LibraryLoader.create:(Ljava/lang/Class;)Ljnr/ffi/LibraryLoader;
      11: astore_3
      12: aload_3
      13: ldc           #4                  // String libSystem.B.dylib
      15: invokevirtual #5                  // Method jnr/ffi/LibraryLoader.library:(Ljava/lang/String;)Ljnr/ffi/LibraryLoader;
      18: pop
      19: aload_0
      20: aload_3
      21: invokevirtual #6                  // Method jnr/ffi/LibraryLoader.load:()Ljava/lang/Object;
      24: checkcast     #2                  // class jnr/posix/NSGetEnviron
      27: putfield      #7                  // Field environ:Ljnr/posix/NSGetEnviron;
      30: return

  public jnr.posix.FileStat allocateStat();
    Code:
       0: new           #8                  // class jnr/posix/MacOSFileStat
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method jnr/posix/MacOSFileStat."<init>":(Ljnr/posix/MacOSPOSIX;)V
       8: areturn

  public jnr.posix.MsgHdr allocateMsgHdr();
    Code:
       0: new           #10                 // class jnr/posix/MacOSMsgHdr
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method jnr/posix/MacOSMsgHdr."<init>":(Ljnr/posix/NativePOSIX;)V
       8: areturn

  public jnr.ffi.Pointer allocatePosixSpawnFileActions();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #13                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  public jnr.ffi.Pointer allocatePosixSpawnattr();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: bipush        8
       6: invokestatic  #13                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
       9: areturn

  public jnr.posix.SocketMacros socketMacros();
    Code:
       0: getstatic     #14                 // Field jnr/posix/MacOSSocketMacros.INSTANCE:Ljnr/posix/SocketMacros;
       3: areturn

  public long sysconf(jnr.constants.platform.Sysconf);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method libc:()Ljnr/posix/LibC;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod jnr/posix/LibC.sysconf:(Ljnr/constants/platform/Sysconf;)J
      10: lreturn

  public jnr.posix.Times times();
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method jnr/posix/NativeTimes.times:(Ljnr/posix/BaseNativePOSIX;)Ljnr/posix/NativeTimes;
       4: areturn

  public jnr.ffi.Pointer environ();
    Code:
       0: aload_0
       1: getfield      #7                  // Field environ:Ljnr/posix/NSGetEnviron;
       4: invokeinterface #18,  1           // InterfaceMethod jnr/posix/NSGetEnviron._NSGetEnviron:()Ljnr/ffi/Pointer;
       9: lconst_0
      10: invokevirtual #19                 // Method jnr/ffi/Pointer.getPointer:(J)Ljnr/ffi/Pointer;
      13: areturn

  static {};
    Code:
       0: new           #20                 // class jnr/posix/MacOSPOSIX$1
       3: dup
       4: invokespecial #21                 // Method jnr/posix/MacOSPOSIX$1."<init>":()V
       7: putstatic     #22                 // Field PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
      10: return
}
