Compiled from "WindowsPOSIX.java"
public final class jnr.posix.WindowsPOSIX extends jnr.posix.BaseNativePOSIX {
  private static final int FILE_TYPE_CHAR;

  private static final java.util.Map<java.lang.Integer, jnr.constants.platform.Errno> errorToErrnoMapper;

  private final jnr.posix.FileStat checkFdStat;

  private static final int GENERIC_ALL;

  private static final int GENERIC_READ;

  private static final int GENERIC_WRITE;

  private static final int GENERIC_EXECUTE;

  private static final int FILE_SHARE_DELETE;

  private static final int FILE_SHARE_READ;

  private static final int FILE_SHARE_WRITE;

  private static final int CREATE_ALWAYS;

  private static final int CREATE_NEW;

  private static final int OPEN_ALWAYS;

  private static final int OPEN_EXISTING;

  private static final int TRUNCATE_EXISTING;

  public static final int FILE_FLAG_BACKUP_SEMANTICS;

  static final int FILE_ATTRIBUTE_READONLY;

  static final int INVALID_FILE_ATTRIBUTES;

  private static final int STARTF_USESTDHANDLES;

  public static final jnr.posix.BaseNativePOSIX$PointerConverter PASSWD;

  jnr.posix.WindowsPOSIX(jnr.posix.LibCProvider, jnr.posix.POSIXHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method jnr/posix/BaseNativePOSIX."<init>":(Ljnr/posix/LibCProvider;Ljnr/posix/POSIXHandler;)V
       6: aload_0
       7: new           #2                  // class jnr/posix/WindowsFileStat
      10: dup
      11: aload_0
      12: invokespecial #3                  // Method jnr/posix/WindowsFileStat."<init>":(Ljnr/posix/NativePOSIX;)V
      15: putfield      #4                  // Field checkFdStat:Ljnr/posix/FileStat;
      18: return

  public jnr.posix.FileStat allocateStat();
    Code:
       0: new           #5                  // class jnr/posix/WindowsRawFileStat
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       9: invokespecial #7                  // Method jnr/posix/WindowsRawFileStat."<init>":(Ljnr/posix/POSIX;Ljnr/posix/POSIXHandler;)V
      12: areturn

  public jnr.posix.MsgHdr allocateMsgHdr();
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #8                  // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public jnr.posix.SocketMacros socketMacros();
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: invokestatic  #8                  // Method jnr/posix/util/MethodName.getCallerMethodName:()Ljava/lang/String;
       7: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn

  public int kill(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #10                 // String kill
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int kill(long, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #10                 // String kill
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int chmod(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       4: aload_1
       5: invokestatic  #12                 // Method jnr/posix/WString.path:(Ljava/lang/String;)Ljnr/posix/WString;
       8: iload_2
       9: invokeinterface #13,  3           // InterfaceMethod jnr/posix/WindowsLibC._wchmod:(Ljnr/posix/WString;I)I
      14: ireturn

  public int chdir(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       4: aload_1
       5: invokestatic  #12                 // Method jnr/posix/WString.path:(Ljava/lang/String;)Ljnr/posix/WString;
       8: invokeinterface #14,  2           // InterfaceMethod jnr/posix/WindowsLibC._wchdir:(Ljnr/posix/WString;)I
      13: ireturn

  public int chown(java.lang.String, int, int);
    Code:
       0: iconst_0
       1: ireturn

  public int exec(java.lang.String, java.lang.String[]);
    Code:
       0: aload_2
       1: arraylength
       2: iconst_1
       3: if_icmpne     18
       6: aload_0
       7: iconst_1
       8: aload_2
       9: iconst_0
      10: aaload
      11: aconst_null
      12: aload_1
      13: aconst_null
      14: invokevirtual #15                 // Method spawn:(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
      17: ireturn
      18: aload_0
      19: iconst_1
      20: aconst_null
      21: aload_2
      22: aload_1
      23: aconst_null
      24: invokevirtual #16                 // Method aspawn:(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
      27: ireturn

  public java.lang.CharSequence crypt(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #17                 // Method jnr/posix/JavaLibCHelper.crypt:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: areturn

  public byte[] crypt(byte[], byte[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #18                 // Method jnr/posix/JavaLibCHelper.crypt:([B[B)[B
       5: areturn

  public int exec(java.lang.String, java.lang.String[], java.lang.String[]);
    Code:
       0: aload_2
       1: arraylength
       2: iconst_1
       3: if_icmpne     18
       6: aload_0
       7: iconst_1
       8: aload_2
       9: iconst_0
      10: aaload
      11: aconst_null
      12: aload_1
      13: aload_3
      14: invokevirtual #15                 // Method spawn:(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
      17: ireturn
      18: aload_0
      19: iconst_1
      20: aconst_null
      21: aload_2
      22: aload_1
      23: aload_3
      24: invokevirtual #16                 // Method aspawn:(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
      27: ireturn

  public int execv(java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #19                 // String egid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getegid();
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #19                 // String egid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int setegid(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #20                 // String setegid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int geteuid();
    Code:
       0: iconst_0
       1: ireturn

  public int seteuid(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #21                 // String seteuid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getuid();
    Code:
       0: iconst_0
       1: ireturn

  public int setuid(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #22                 // String setuid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getgid();
    Code:
       0: iconst_0
       1: ireturn

  public int setgid(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #23                 // String setgid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getpgid(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #24                 // String getpgid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getpgid();
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #24                 // String getpgid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int setpgid(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #25                 // String setpgid
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getpriority(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #26                 // String getpriority
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int setpriority(int, int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #27                 // String setpriority
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int getpid();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       4: invokeinterface #28,  1           // InterfaceMethod jnr/posix/WindowsLibC._getpid:()I
       9: ireturn

  public int getppid();
    Code:
       0: iconst_0
       1: ireturn

  public int lchmod(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #29                 // String lchmod
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int lchown(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #30                 // String lchown
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public java.lang.String gethostname();
    Code:
       0: bipush        64
       2: invokestatic  #31                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore_1
       6: new           #32                 // class jnr/ffi/byref/IntByReference
       9: dup
      10: aload_1
      11: invokevirtual #33                 // Method java/nio/ByteBuffer.capacity:()I
      14: iconst_1
      15: isub
      16: invokespecial #34                 // Method jnr/ffi/byref/IntByReference."<init>":(I)V
      19: astore_2
      20: aload_0
      21: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      24: aload_1
      25: aload_2
      26: invokeinterface #35,  3           // InterfaceMethod jnr/posix/WindowsLibC.GetComputerNameW:(Ljava/nio/ByteBuffer;Ljnr/ffi/byref/IntByReference;)Z
      31: ifne          42
      34: aload_0
      35: getfield      #36                 // Field helper:Ljnr/posix/JavaLibCHelper;
      38: invokevirtual #37                 // Method jnr/posix/JavaLibCHelper.gethostname:()Ljava/lang/String;
      41: areturn
      42: aload_1
      43: aload_2
      44: invokevirtual #38                 // Method jnr/ffi/byref/IntByReference.intValue:()I
      47: iconst_2
      48: imul
      49: invokevirtual #39                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      52: pop
      53: ldc           #40                 // String UTF-16LE
      55: invokestatic  #41                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      58: aload_1
      59: invokevirtual #42                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      62: invokevirtual #43                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
      65: areturn

  public jnr.posix.FileStat fstat(int);
    Code:
       0: new           #2                  // class jnr/posix/WindowsFileStat
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method jnr/posix/WindowsFileStat."<init>":(Ljnr/posix/NativePOSIX;)V
       8: astore_2
       9: aload_0
      10: iload_1
      11: aload_2
      12: invokevirtual #44                 // Method fstat:(ILjnr/posix/FileStat;)I
      15: ifge          56
      18: aload_0
      19: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      22: aload_0
      23: invokevirtual #45                 // Method errno:()I
      26: i2l
      27: invokestatic  #46                 // Method jnr/constants/platform/Errno.valueOf:(J)Ljnr/constants/platform/Errno;
      30: ldc           #47                 // String fstat
      32: new           #48                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #50                 // String
      41: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_1
      45: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      56: aload_2
      57: areturn

  public int fstat(java.io.FileDescriptor, jnr.posix.FileStat);
    Code:
       0: new           #55                 // class jnr/posix/windows/WindowsByHandleFileInformation
       3: dup
       4: aload_0
       5: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
       8: invokespecial #57                 // Method jnr/posix/windows/WindowsByHandleFileInformation."<init>":(Ljnr/ffi/Runtime;)V
      11: astore_3
      12: aload_0
      13: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      16: aload_1
      17: invokestatic  #58                 // Method jnr/posix/JavaLibCHelper.gethandle:(Ljava/io/FileDescriptor;)Ljnr/posix/HANDLE;
      20: aload_3
      21: invokeinterface #59,  3           // InterfaceMethod jnr/posix/WindowsLibC.GetFileInformationByHandle:(Ljnr/posix/HANDLE;Ljnr/posix/windows/WindowsByHandleFileInformation;)I
      26: ifne          31
      29: iconst_m1
      30: ireturn
      31: aload_2
      32: checkcast     #5                  // class jnr/posix/WindowsRawFileStat
      35: aload_3
      36: invokevirtual #60                 // Method jnr/posix/WindowsRawFileStat.setup:(Ljnr/posix/windows/CommonFileInformation;)V
      39: iconst_0
      40: ireturn

  public jnr.posix.FileStat lstat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method stat:(Ljava/lang/String;)Ljnr/posix/FileStat;
       5: areturn

  public int lstat(java.lang.String, jnr.posix.FileStat);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #62                 // Method stat:(Ljava/lang/String;Ljnr/posix/FileStat;)I
       6: ireturn

  public int stat(java.lang.String, jnr.posix.FileStat);
    Code:
       0: new           #63                 // class jnr/posix/windows/WindowsFileInformation
       3: dup
       4: aload_0
       5: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
       8: invokespecial #64                 // Method jnr/posix/windows/WindowsFileInformation."<init>":(Ljnr/ffi/Runtime;)V
      11: astore_3
      12: aload_1
      13: iconst_1
      14: invokestatic  #65                 // Method jnr/posix/WString.path:(Ljava/lang/String;Z)[B
      17: astore        4
      19: aload_0
      20: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      23: aload         4
      25: iconst_0
      26: aload_3
      27: invokeinterface #66,  4           // InterfaceMethod jnr/posix/WindowsLibC.GetFileAttributesExW:([BILjnr/posix/windows/WindowsFileInformation;)I
      32: ifeq          47
      35: aload_2
      36: checkcast     #5                  // class jnr/posix/WindowsRawFileStat
      39: aload_1
      40: aload_3
      41: invokevirtual #67                 // Method jnr/posix/WindowsRawFileStat.setup:(Ljava/lang/String;Ljnr/posix/windows/CommonFileInformation;)V
      44: goto          95
      47: aload_0
      48: invokevirtual #45                 // Method errno:()I
      51: istore        5
      53: iload         5
      55: getstatic     #68                 // Field jnr/constants/platform/windows/LastError.ERROR_FILE_NOT_FOUND:Ljnr/constants/platform/windows/LastError;
      58: invokevirtual #69                 // Method jnr/constants/platform/windows/LastError.intValue:()I
      61: if_icmpeq     86
      64: iload         5
      66: getstatic     #70                 // Field jnr/constants/platform/windows/LastError.ERROR_PATH_NOT_FOUND:Ljnr/constants/platform/windows/LastError;
      69: invokevirtual #69                 // Method jnr/constants/platform/windows/LastError.intValue:()I
      72: if_icmpeq     86
      75: iload         5
      77: getstatic     #71                 // Field jnr/constants/platform/windows/LastError.ERROR_BAD_NETPATH:Ljnr/constants/platform/windows/LastError;
      80: invokevirtual #69                 // Method jnr/constants/platform/windows/LastError.intValue:()I
      83: if_icmpne     88
      86: iconst_m1
      87: ireturn
      88: aload_0
      89: aload_1
      90: aload_2
      91: invokevirtual #72                 // Method findFirstFile:(Ljava/lang/String;Ljnr/posix/FileStat;)I
      94: ireturn
      95: iconst_0
      96: ireturn

  public int findFirstFile(java.lang.String, jnr.posix.FileStat);
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #65                 // Method jnr/posix/WString.path:(Ljava/lang/String;Z)[B
       5: astore_3
       6: new           #73                 // class jnr/posix/windows/WindowsFindData
       9: dup
      10: aload_0
      11: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
      14: invokespecial #74                 // Method jnr/posix/windows/WindowsFindData."<init>":(Ljnr/ffi/Runtime;)V
      17: astore        4
      19: aload_0
      20: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      23: aload_3
      24: aload         4
      26: invokeinterface #75,  3           // InterfaceMethod jnr/posix/WindowsLibC.FindFirstFileW:([BLjnr/posix/windows/WindowsFindData;)Ljnr/posix/HANDLE;
      31: astore        5
      33: aload         5
      35: invokevirtual #76                 // Method jnr/posix/HANDLE.isValid:()Z
      38: ifne          43
      41: iconst_m1
      42: ireturn
      43: aload_0
      44: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      47: aload         5
      49: invokeinterface #77,  2           // InterfaceMethod jnr/posix/WindowsLibC.FindClose:(Ljnr/posix/HANDLE;)I
      54: pop
      55: aload_2
      56: checkcast     #5                  // class jnr/posix/WindowsRawFileStat
      59: aload_1
      60: aload         4
      62: invokevirtual #67                 // Method jnr/posix/WindowsRawFileStat.setup:(Ljava/lang/String;Ljnr/posix/windows/CommonFileInformation;)V
      65: iconst_0
      66: ireturn

  public java.lang.String readlink(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #78                 // String readlink
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: aconst_null
      12: areturn

  public jnr.ffi.Pointer environ();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
       4: invokevirtual #79                 // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       7: aload_0
       8: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      11: invokeinterface #80,  1           // InterfaceMethod jnr/posix/WindowsLibC._environ:()Ljnr/ffi/Variable;
      16: invokeinterface #81,  1           // InterfaceMethod jnr/ffi/Variable.get:()Ljava/lang/Object;
      21: checkcast     #82                 // class java/lang/Long
      24: invokevirtual #83                 // Method java/lang/Long.longValue:()J
      27: invokeinterface #84,  3           // InterfaceMethod jnr/ffi/provider/MemoryManager.newPointer:(J)Ljnr/ffi/Pointer;
      32: areturn

  public int setenv(java.lang.String, java.lang.String, int);
    Code:
       0: aload_1
       1: ldc           #85                 // String =
       3: invokevirtual #86                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          26
       9: aload_0
      10: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      13: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
      16: ldc           #88                 // String setenv
      18: aload_1
      19: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      30: new           #89                 // class jnr/posix/WString
      33: dup
      34: aload_1
      35: invokespecial #90                 // Method jnr/posix/WString."<init>":(Ljava/lang/String;)V
      38: new           #89                 // class jnr/posix/WString
      41: dup
      42: aload_2
      43: invokespecial #90                 // Method jnr/posix/WString."<init>":(Ljava/lang/String;)V
      46: invokeinterface #91,  3           // InterfaceMethod jnr/posix/WindowsLibC.SetEnvironmentVariableW:(Ljnr/posix/WString;Ljnr/posix/WString;)Z
      51: ifne          71
      54: aload_0
      55: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      58: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
      61: ldc           #88                 // String setenv
      63: aload_1
      64: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      69: iconst_m1
      70: ireturn
      71: iconst_0
      72: ireturn

  public int umask(int);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       4: iload_1
       5: invokeinterface #92,  2           // InterfaceMethod jnr/posix/WindowsLibC._umask:(I)I
      10: ireturn

  public int unsetenv(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       4: new           #89                 // class jnr/posix/WString
       7: dup
       8: aload_1
       9: invokespecial #90                 // Method jnr/posix/WString."<init>":(Ljava/lang/String;)V
      12: aconst_null
      13: invokeinterface #91,  3           // InterfaceMethod jnr/posix/WindowsLibC.SetEnvironmentVariableW:(Ljnr/posix/WString;Ljnr/posix/WString;)Z
      18: ifne          38
      21: aload_0
      22: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      25: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
      28: ldc           #93                 // String unsetenv
      30: aload_1
      31: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      36: iconst_m1
      37: ireturn
      38: iconst_0
      39: ireturn

  public int utimes(java.lang.String, long[], long[]);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #94                 // Method timevalToFileTime:([J)Ljnr/posix/FileTime;
       5: astore        4
       7: aload_0
       8: aload_3
       9: invokespecial #94                 // Method timevalToFileTime:([J)Ljnr/posix/FileTime;
      12: astore        5
      14: aload_0
      15: aload_1
      16: aload         4
      18: aload         5
      20: invokespecial #95                 // Method setFileTime:(Ljava/lang/String;Ljnr/posix/FileTime;Ljnr/posix/FileTime;)I
      23: ireturn

  public int utimensat(int, java.lang.String, long[], long[], int);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #96                 // Method timespecToFileTime:([J)Ljnr/posix/FileTime;
       5: astore        6
       7: aload_0
       8: aload         4
      10: invokespecial #96                 // Method timespecToFileTime:([J)Ljnr/posix/FileTime;
      13: astore        7
      15: aload_0
      16: aload_2
      17: aload         6
      19: aload         7
      21: invokespecial #95                 // Method setFileTime:(Ljava/lang/String;Ljnr/posix/FileTime;Ljnr/posix/FileTime;)I
      24: ireturn

  private jnr.posix.FileTime timevalToFileTime(long[]);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokespecial #97                 // Method currentFileTime:()Ljnr/posix/FileTime;
       8: areturn
       9: aload_1
      10: iconst_0
      11: laload
      12: ldc2_w        #98                 // long 10000000l
      15: lmul
      16: aload_1
      17: iconst_1
      18: laload
      19: ldc2_w        #100                // long 10l
      22: lmul
      23: ladd
      24: lstore_2
      25: aload_0
      26: lload_2
      27: invokespecial #102                // Method unixTimeToFileTime:(J)Ljnr/posix/FileTime;
      30: areturn

  private jnr.posix.FileTime timespecToFileTime(long[]);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokespecial #97                 // Method currentFileTime:()Ljnr/posix/FileTime;
       8: areturn
       9: aload_1
      10: iconst_0
      11: laload
      12: ldc2_w        #98                 // long 10000000l
      15: lmul
      16: aload_1
      17: iconst_1
      18: laload
      19: ldc2_w        #103                // long 100l
      22: ldiv
      23: ladd
      24: lstore_2
      25: aload_0
      26: lload_2
      27: invokespecial #102                // Method unixTimeToFileTime:(J)Ljnr/posix/FileTime;
      30: areturn

  private int setFileTime(java.lang.String, jnr.posix.FileTime, jnr.posix.FileTime);
    Code:
       0: aload_1
       1: invokestatic  #105                // Method jnr/posix/util/WindowsHelpers.toWPath:(Ljava/lang/String;)[B
       4: astore        4
       6: aload_0
       7: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      10: aload         4
      12: ldc           #107                // int 1073741824
      14: iconst_3
      15: aconst_null
      16: iconst_3
      17: ldc           #108                // int 33554432
      19: iconst_0
      20: invokeinterface #109,  8          // InterfaceMethod jnr/posix/WindowsLibC.CreateFileW:([BIILjnr/ffi/Pointer;III)Ljnr/posix/HANDLE;
      25: astore        5
      27: aload         5
      29: invokevirtual #76                 // Method jnr/posix/HANDLE.isValid:()Z
      32: ifne          37
      35: iconst_m1
      36: ireturn
      37: aload_0
      38: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      41: aload         5
      43: aconst_null
      44: aload_2
      45: aload_3
      46: invokeinterface #110,  5          // InterfaceMethod jnr/posix/WindowsLibC.SetFileTime:(Ljnr/posix/HANDLE;Ljnr/posix/FileTime;Ljnr/posix/FileTime;Ljnr/posix/FileTime;)Z
      51: istore        6
      53: aload_0
      54: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      57: aload         5
      59: invokeinterface #111,  2          // InterfaceMethod jnr/posix/WindowsLibC.CloseHandle:(Ljnr/posix/HANDLE;)Z
      64: pop
      65: iload         6
      67: ifeq          74
      70: iconst_0
      71: goto          75
      74: iconst_m1
      75: ireturn

  private jnr.posix.FileTime unixTimeToFileTime(long);
    Code:
       0: ldc2_w        #112                // long 116444736000000000l
       3: lload_1
       4: ladd
       5: lstore_3
       6: new           #114                // class jnr/posix/FileTime
       9: dup
      10: aload_0
      11: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
      14: invokespecial #115                // Method jnr/posix/FileTime."<init>":(Ljnr/ffi/Runtime;)V
      17: astore        5
      19: aload         5
      21: getfield      #116                // Field jnr/posix/FileTime.dwLowDateTime:Ljnr/ffi/Struct$Unsigned32;
      24: lload_3
      25: ldc2_w        #117                // long 4294967295l
      28: land
      29: invokevirtual #119                // Method jnr/ffi/Struct$Unsigned32.set:(J)V
      32: aload         5
      34: getfield      #120                // Field jnr/posix/FileTime.dwHighDateTime:Ljnr/ffi/Struct$Unsigned32;
      37: lload_3
      38: bipush        32
      40: lshr
      41: ldc2_w        #117                // long 4294967295l
      44: land
      45: invokevirtual #119                // Method jnr/ffi/Struct$Unsigned32.set:(J)V
      48: aload         5
      50: areturn

  private jnr.posix.FileTime nullFileTime();
    Code:
       0: new           #114                // class jnr/posix/FileTime
       3: dup
       4: aload_0
       5: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
       8: invokespecial #115                // Method jnr/posix/FileTime."<init>":(Ljnr/ffi/Runtime;)V
      11: astore_1
      12: aload_1
      13: getfield      #116                // Field jnr/posix/FileTime.dwLowDateTime:Ljnr/ffi/Struct$Unsigned32;
      16: lconst_0
      17: invokevirtual #119                // Method jnr/ffi/Struct$Unsigned32.set:(J)V
      20: aload_1
      21: getfield      #120                // Field jnr/posix/FileTime.dwHighDateTime:Ljnr/ffi/Struct$Unsigned32;
      24: lconst_0
      25: invokevirtual #119                // Method jnr/ffi/Struct$Unsigned32.set:(J)V
      28: aload_1
      29: areturn

  private jnr.posix.FileTime currentFileTime();
    Code:
       0: aload_0
       1: invokestatic  #121                // Method java/lang/System.currentTimeMillis:()J
       4: ldc2_w        #122                // long 10000l
       7: lmul
       8: invokespecial #102                // Method unixTimeToFileTime:(J)Ljnr/posix/FileTime;
      11: areturn

  public int wait(int[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #124                // String wait
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public int waitpid(int, int[], int);
    Code:
       0: iload_1
       1: ifgt          15
       4: aload_0
       5: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       8: ldc           #125                // String waitpid
      10: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      15: aload_0
      16: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      19: sipush        1024
      22: iconst_0
      23: iload_1
      24: invokeinterface #127,  4          // InterfaceMethod jnr/posix/WindowsLibC.OpenProcess:(III)Ljnr/posix/HANDLE;
      29: astore        4
      31: aload         4
      33: ifnonnull     38
      36: iconst_m1
      37: ireturn
      38: iload_3
      39: getstatic     #128                // Field jnr/constants/platform/WaitFlags.WNOHANG:Ljnr/constants/platform/WaitFlags;
      42: invokevirtual #129                // Method jnr/constants/platform/WaitFlags.intValue:()I
      45: iand
      46: ifeq          62
      49: aload_0
      50: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      53: aload         4
      55: iconst_m1
      56: invokeinterface #130,  3          // InterfaceMethod jnr/posix/WindowsLibC.WaitForSingleObject:(Ljnr/posix/HANDLE;I)I
      61: pop
      62: new           #32                 // class jnr/ffi/byref/IntByReference
      65: dup
      66: invokespecial #131                // Method jnr/ffi/byref/IntByReference."<init>":()V
      69: astore        5
      71: aload_0
      72: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      75: aload         4
      77: aload         5
      79: invokeinterface #132,  3          // InterfaceMethod jnr/posix/WindowsLibC.GetExitCodeProcess:(Ljnr/posix/HANDLE;Ljnr/ffi/byref/IntByReference;)Z
      84: pop
      85: aload_0
      86: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      89: aload         4
      91: invokeinterface #111,  2          // InterfaceMethod jnr/posix/WindowsLibC.CloseHandle:(Ljnr/posix/HANDLE;)Z
      96: pop
      97: aload         5
      99: invokevirtual #133                // Method jnr/ffi/byref/IntByReference.getValue:()Ljava/lang/Number;
     102: checkcast     #134                // class java/lang/Integer
     105: invokevirtual #135                // Method java/lang/Integer.intValue:()I
     108: istore        6
     110: iload         6
     112: sipush        259
     115: if_icmpne     120
     118: iconst_0
     119: ireturn
     120: aload_2
     121: iconst_0
     122: iload         6
     124: iastore
     125: iload_1
     126: ireturn

  public int waitpid(long, int[], int);
    Code:
       0: lload_1
       1: ldc2_w        #136                // long 2147483647l
       4: lcmp
       5: ifle          18
       8: new           #138                // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #125                // String waitpid
      14: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: lload_1
      20: l2i
      21: aload_3
      22: iload         4
      24: invokevirtual #140                // Method waitpid:(I[II)I
      27: ireturn

  public java.lang.String getlogin();
    Code:
       0: aload_0
       1: getfield      #36                 // Field helper:Ljnr/posix/JavaLibCHelper;
       4: invokevirtual #141                // Method jnr/posix/JavaLibCHelper.getlogin:()Ljava/lang/String;
       7: areturn

  public int endgrent();
    Code:
       0: iconst_0
       1: ireturn

  public int endpwent();
    Code:
       0: aload_0
       1: getfield      #36                 // Field helper:Ljnr/posix/JavaLibCHelper;
       4: invokevirtual #142                // Method jnr/posix/JavaLibCHelper.endpwent:()I
       7: ireturn

  public jnr.posix.Group getgrent();
    Code:
       0: aconst_null
       1: areturn

  public jnr.posix.Passwd getpwent();
    Code:
       0: aconst_null
       1: areturn

  public jnr.posix.Group getgrgid(int);
    Code:
       0: aconst_null
       1: areturn

  public jnr.posix.Passwd getpwnam(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public jnr.posix.Group getgrnam(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public int setgrent();
    Code:
       0: iconst_0
       1: ireturn

  public int setpwent();
    Code:
       0: aload_0
       1: getfield      #36                 // Field helper:Ljnr/posix/JavaLibCHelper;
       4: invokevirtual #143                // Method jnr/posix/JavaLibCHelper.setpwent:()I
       7: ireturn

  public jnr.posix.Passwd getpwuid(int);
    Code:
       0: aconst_null
       1: areturn

  public boolean isatty(java.io.FileDescriptor);
    Code:
       0: aload_1
       1: invokestatic  #58                 // Method jnr/posix/JavaLibCHelper.gethandle:(Ljava/io/FileDescriptor;)Ljnr/posix/HANDLE;
       4: astore_2
       5: aload_0
       6: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       9: aload_2
      10: invokeinterface #144,  2          // InterfaceMethod jnr/posix/WindowsLibC.GetFileType:(Ljnr/posix/HANDLE;)I
      15: istore_3
      16: iload_3
      17: iconst_2
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public int isatty(int);
    Code:
       0: iload_1
       1: i2l
       2: invokestatic  #145                // Method jnr/posix/JavaLibCHelper.gethandle:(J)Ljnr/posix/HANDLE;
       5: astore_2
       6: aload_0
       7: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      10: aload_2
      11: invokeinterface #144,  2          // InterfaceMethod jnr/posix/WindowsLibC.GetFileType:(Ljnr/posix/HANDLE;)I
      16: istore_3
      17: iload_3
      18: iconst_2
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public int mkdir(java.lang.String, int);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method jnr/posix/WString.path:(Ljava/lang/String;)Ljnr/posix/WString;
       4: astore_3
       5: iconst_m1
       6: istore        4
       8: aload_0
       9: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      12: aload_3
      13: invokeinterface #146,  2          // InterfaceMethod jnr/posix/WindowsLibC._wmkdir:(Ljnr/posix/WString;)I
      18: ifne          34
      21: aload_0
      22: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      25: aload_3
      26: iload_2
      27: invokeinterface #13,  3           // InterfaceMethod jnr/posix/WindowsLibC._wchmod:(Ljnr/posix/WString;I)I
      32: istore        4
      34: iload         4
      36: ifge          63
      39: aload_0
      40: invokevirtual #45                 // Method errno:()I
      43: istore        5
      45: aload_0
      46: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      49: iload         5
      51: i2l
      52: invokestatic  #46                 // Method jnr/constants/platform/Errno.valueOf:(J)Ljnr/constants/platform/Errno;
      55: ldc           #147                // String mkdir
      57: aload_1
      58: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      63: iload         4
      65: ireturn

  public int rmdir(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method jnr/posix/WString.path:(Ljava/lang/String;)Ljnr/posix/WString;
       4: astore_2
       5: aload_0
       6: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       9: aload_2
      10: invokeinterface #148,  2          // InterfaceMethod jnr/posix/WindowsLibC.GetFileAttributesW:(Ljnr/posix/WString;)I
      15: istore_3
      16: iload_3
      17: iconst_m1
      18: if_icmpeq     31
      21: iload_3
      22: iconst_1
      23: iand
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore        4
      34: iload         4
      36: ifeq          54
      39: aload_0
      40: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      43: aload_2
      44: iload_3
      45: bipush        -2
      47: iand
      48: invokeinterface #149,  3          // InterfaceMethod jnr/posix/WindowsLibC.SetFileAttributesW:(Ljnr/posix/WString;I)I
      53: pop
      54: aload_0
      55: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      58: aload_2
      59: invokeinterface #150,  2          // InterfaceMethod jnr/posix/WindowsLibC.RemoveDirectoryW:(Ljnr/posix/WString;)Z
      64: ifne          111
      67: aload_0
      68: invokevirtual #45                 // Method errno:()I
      71: istore        5
      73: iload         4
      75: ifeq          92
      78: aload_0
      79: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      82: aload_2
      83: iload_3
      84: iconst_1
      85: iand
      86: invokeinterface #149,  3          // InterfaceMethod jnr/posix/WindowsLibC.SetFileAttributesW:(Ljnr/posix/WString;I)I
      91: pop
      92: aload_0
      93: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      96: iload         5
      98: invokestatic  #151                // Method mapErrorToErrno:(I)Ljnr/constants/platform/Errno;
     101: ldc           #152                // String rmdir
     103: aload_1
     104: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
     109: iconst_m1
     110: ireturn
     111: iconst_0
     112: ireturn

  public int link(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
       4: aload_2
       5: invokestatic  #12                 // Method jnr/posix/WString.path:(Ljava/lang/String;)Ljnr/posix/WString;
       8: aload_1
       9: invokestatic  #12                 // Method jnr/posix/WString.path:(Ljava/lang/String;)Ljnr/posix/WString;
      12: aconst_null
      13: invokeinterface #153,  4          // InterfaceMethod jnr/posix/WindowsLibC.CreateHardLinkW:(Ljnr/posix/WString;Ljnr/posix/WString;Ljnr/posix/WString;)Z
      18: istore_3
      19: iload_3
      20: ifne          71
      23: aload_0
      24: invokevirtual #45                 // Method errno:()I
      27: istore        4
      29: aload_0
      30: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      33: iload         4
      35: invokestatic  #151                // Method mapErrorToErrno:(I)Ljnr/constants/platform/Errno;
      38: ldc           #154                // String link
      40: new           #48                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #155                // String  or
      53: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_2
      57: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      68: iload         4
      70: ireturn
      71: iconst_0
      72: ireturn

  public int aspawn(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[]);
    Code:
       0: aload_3
       1: arraylength
       2: ifne          7
       5: iconst_m1
       6: ireturn
       7: aload_0
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokestatic  #156                // Method jnr/posix/util/WindowsHelpers.processCommandArgs:(Ljnr/posix/POSIX;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      15: astore        6
      17: aload_0
      18: aload_0
      19: ldc           #157                // String aspawn
      21: aload         6
      23: iconst_0
      24: aaload
      25: aload         6
      27: iconst_1
      28: aaload
      29: aconst_null
      30: aconst_null
      31: aconst_null
      32: aconst_null
      33: aload         5
      35: invokespecial #158                // Method createProcess:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljnr/posix/WindowsSecurityAttributes;Ljnr/posix/HANDLE;Ljnr/posix/HANDLE;Ljnr/posix/HANDLE;[Ljava/lang/String;)Ljnr/posix/WindowsChildRecord;
      38: iload_1
      39: invokespecial #159                // Method childResult:(Ljnr/posix/WindowsChildRecord;Z)I
      42: ireturn
      43: astore        6
      45: iconst_m1
      46: ireturn
    Exception table:
       from    to  target type
           0     6    43   Class java/lang/Exception
           7    42    43   Class java/lang/Exception

  public int pipe(int[]);
    Code:
       0: aload_0
       1: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
       4: checkcast     #126                // class jnr/posix/WindowsLibC
       7: aload_1
       8: sipush        512
      11: iconst_0
      12: invokeinterface #162,  4          // InterfaceMethod jnr/posix/WindowsLibC._pipe:([III)I
      17: ireturn

  public int truncate(java.lang.CharSequence, long);
    Code:
       0: aload_0
       1: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
       4: aload_1
       5: getstatic     #163                // Field jnr/constants/platform/OpenFlags.O_WRONLY:Ljnr/constants/platform/OpenFlags;
       8: invokevirtual #164                // Method jnr/constants/platform/OpenFlags.intValue:()I
      11: iconst_0
      12: invokeinterface #165,  4          // InterfaceMethod jnr/posix/LibC.open:(Ljava/lang/CharSequence;II)I
      17: istore        4
      19: iload         4
      21: iconst_m1
      22: if_icmpne     27
      25: iconst_m1
      26: ireturn
      27: aload_0
      28: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
      31: iload         4
      33: lload_2
      34: invokeinterface #166,  4          // InterfaceMethod jnr/posix/LibC.ftruncate:(IJ)I
      39: iconst_m1
      40: if_icmpne     45
      43: iconst_m1
      44: ireturn
      45: aload_0
      46: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
      49: iload         4
      51: invokeinterface #167,  2          // InterfaceMethod jnr/posix/LibC.close:(I)I
      56: iconst_m1
      57: if_icmpne     62
      60: iconst_m1
      61: ireturn
      62: iconst_0
      63: ireturn

  public int fcntlInt(int, jnr.constants.platform.Fcntl, int);
    Code:
       0: getstatic     #168                // Field jnr/posix/WindowsPOSIX$2.$SwitchMap$jnr$constants$platform$Fcntl:[I
       3: aload_2
       4: invokevirtual #169                // Method jnr/constants/platform/Fcntl.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 49
                     3: 62
               default: 80
          }
      36: aload_0
      37: iload_1
      38: invokespecial #170                // Method checkFd:(I)I
      41: iconst_m1
      42: if_icmpne     47
      45: iconst_m1
      46: ireturn
      47: iconst_0
      48: ireturn
      49: aload_0
      50: iload_1
      51: invokespecial #170                // Method checkFd:(I)I
      54: iconst_m1
      55: if_icmpne     60
      58: iconst_m1
      59: ireturn
      60: iconst_0
      61: ireturn
      62: aload_0
      63: iload_1
      64: invokespecial #170                // Method checkFd:(I)I
      67: iconst_m1
      68: if_icmpne     73
      71: iconst_m1
      72: ireturn
      73: getstatic     #171                // Field jnr/constants/platform/OpenFlags.O_RDWR:Ljnr/constants/platform/OpenFlags;
      76: invokevirtual #164                // Method jnr/constants/platform/OpenFlags.intValue:()I
      79: ireturn
      80: aload_0
      81: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      84: ldc           #172                // String fcntl
      86: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      91: iconst_m1
      92: ireturn

  private jnr.posix.WindowsLibC wlibc();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
       4: checkcast     #126                // class jnr/posix/WindowsLibC
       7: areturn

  public int spawn(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_m1
       5: ireturn
       6: aload_0
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokestatic  #173                // Method jnr/posix/util/WindowsHelpers.processCommandLine:(Ljnr/posix/POSIX;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      14: astore        6
      16: aload_0
      17: aload_0
      18: ldc           #174                // String spawn
      20: aload         6
      22: iconst_0
      23: aaload
      24: aload         6
      26: iconst_1
      27: aaload
      28: aconst_null
      29: aconst_null
      30: aconst_null
      31: aconst_null
      32: aload         5
      34: invokespecial #158                // Method createProcess:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljnr/posix/WindowsSecurityAttributes;Ljnr/posix/HANDLE;Ljnr/posix/HANDLE;Ljnr/posix/HANDLE;[Ljava/lang/String;)Ljnr/posix/WindowsChildRecord;
      37: iload_1
      38: invokespecial #159                // Method childResult:(Ljnr/posix/WindowsChildRecord;Z)I
      41: ireturn

  private int childResult(jnr.posix.WindowsChildRecord, boolean);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_m1
       5: ireturn
       6: iload_2
       7: ifeq          78
      10: new           #32                 // class jnr/ffi/byref/IntByReference
      13: dup
      14: invokespecial #131                // Method jnr/ffi/byref/IntByReference."<init>":()V
      17: astore_3
      18: aload_0
      19: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
      22: checkcast     #126                // class jnr/posix/WindowsLibC
      25: astore        4
      27: aload_1
      28: invokevirtual #175                // Method jnr/posix/WindowsChildRecord.getProcess:()Ljnr/posix/HANDLE;
      31: astore        5
      33: aload         4
      35: aload         5
      37: iconst_m1
      38: invokeinterface #130,  3          // InterfaceMethod jnr/posix/WindowsLibC.WaitForSingleObject:(Ljnr/posix/HANDLE;I)I
      43: pop
      44: aload         4
      46: aload         5
      48: aload_3
      49: invokeinterface #132,  3          // InterfaceMethod jnr/posix/WindowsLibC.GetExitCodeProcess:(Ljnr/posix/HANDLE;Ljnr/ffi/byref/IntByReference;)Z
      54: pop
      55: aload         4
      57: aload         5
      59: invokeinterface #111,  2          // InterfaceMethod jnr/posix/WindowsLibC.CloseHandle:(Ljnr/posix/HANDLE;)Z
      64: pop
      65: aload_3
      66: invokevirtual #133                // Method jnr/ffi/byref/IntByReference.getValue:()Ljava/lang/Number;
      69: checkcast     #134                // class java/lang/Integer
      72: invokevirtual #135                // Method java/lang/Integer.intValue:()I
      75: invokestatic  #176                // Method java/lang/System.exit:(I)V
      78: aload_1
      79: invokevirtual #177                // Method jnr/posix/WindowsChildRecord.getPid:()I
      82: ireturn

  private static jnr.constants.platform.Errno mapErrorToErrno(int);
    Code:
       0: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
       3: iload_0
       4: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokeinterface #180,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #181                // class jnr/constants/platform/Errno
      15: astore_1
      16: aload_1
      17: ifnonnull     24
      20: getstatic     #182                // Field jnr/constants/platform/Errno.__UNKNOWN_CONSTANT__:Ljnr/constants/platform/Errno;
      23: astore_1
      24: aload_1
      25: areturn

  private jnr.posix.WindowsChildRecord createProcess(java.lang.String, java.lang.String, java.lang.String, jnr.posix.WindowsSecurityAttributes, jnr.posix.HANDLE, jnr.posix.HANDLE, jnr.posix.HANDLE, java.lang.String[]);
    Code:
       0: aload_2
       1: ifnonnull     25
       4: aload_3
       5: ifnonnull     25
       8: aload_0
       9: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
      12: getstatic     #183                // Field jnr/constants/platform/Errno.EFAULT:Ljnr/constants/platform/Errno;
      15: aload_1
      16: ldc           #184                // String no command or program specified
      18: invokeinterface #54,  4           // InterfaceMethod jnr/posix/POSIXHandler.error:(Ljnr/constants/platform/Errno;Ljava/lang/String;Ljava/lang/String;)V
      23: aconst_null
      24: areturn
      25: aload         4
      27: ifnonnull     43
      30: new           #185                // class jnr/posix/WindowsSecurityAttributes
      33: dup
      34: aload_0
      35: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
      38: invokespecial #186                // Method jnr/posix/WindowsSecurityAttributes."<init>":(Ljnr/ffi/Runtime;)V
      41: astore        4
      43: new           #187                // class jnr/posix/WindowsStartupInfo
      46: dup
      47: aload_0
      48: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
      51: invokespecial #188                // Method jnr/posix/WindowsStartupInfo."<init>":(Ljnr/ffi/Runtime;)V
      54: astore        9
      56: aload         9
      58: sipush        256
      61: invokevirtual #189                // Method jnr/posix/WindowsStartupInfo.setFlags:(I)V
      64: aload         9
      66: aload         5
      68: ifnull        76
      71: aload         5
      73: goto          87
      76: aload_0
      77: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
      80: bipush        -10
      82: invokeinterface #190,  2          // InterfaceMethod jnr/posix/WindowsLibC.GetStdHandle:(I)Ljnr/posix/HANDLE;
      87: invokevirtual #191                // Method jnr/posix/WindowsStartupInfo.setStandardInput:(Ljnr/posix/HANDLE;)V
      90: aload         9
      92: aload         6
      94: ifnull        102
      97: aload         6
      99: goto          113
     102: aload_0
     103: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
     106: bipush        -11
     108: invokeinterface #190,  2          // InterfaceMethod jnr/posix/WindowsLibC.GetStdHandle:(I)Ljnr/posix/HANDLE;
     113: invokevirtual #192                // Method jnr/posix/WindowsStartupInfo.setStandardOutput:(Ljnr/posix/HANDLE;)V
     116: aload         9
     118: aload         7
     120: ifnull        128
     123: aload         5
     125: goto          139
     128: aload_0
     129: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
     132: bipush        -12
     134: invokeinterface #190,  2          // InterfaceMethod jnr/posix/WindowsLibC.GetStdHandle:(I)Ljnr/posix/HANDLE;
     139: invokevirtual #193                // Method jnr/posix/WindowsStartupInfo.setStandardError:(Ljnr/posix/HANDLE;)V
     142: sipush        1056
     145: istore        10
     147: new           #194                // class jnr/posix/WindowsProcessInformation
     150: dup
     151: aload_0
     152: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
     155: invokespecial #195                // Method jnr/posix/WindowsProcessInformation."<init>":(Ljnr/ffi/Runtime;)V
     158: astore        11
     160: aconst_null
     161: astore        12
     163: aload_3
     164: invokestatic  #196                // Method jnr/posix/util/WindowsHelpers.toWString:(Ljava/lang/String;)[B
     167: astore        13
     169: new           #48                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     176: aload_0
     177: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
     180: invokeinterface #197,  1          // InterfaceMethod jnr/posix/POSIXHandler.getCurrentWorkingDirectory:()Ljava/io/File;
     185: invokevirtual #198                // Method java/io/File.toString:()Ljava/lang/String;
     188: invokestatic  #199                // Method jnr/posix/util/WindowsHelpers.escapePath:(Ljava/lang/String;)Ljava/lang/String;
     191: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #200                // String \\
     196: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: invokestatic  #196                // Method jnr/posix/util/WindowsHelpers.toWString:(Ljava/lang/String;)[B
     205: astore        14
     207: aload_2
     208: invokestatic  #196                // Method jnr/posix/util/WindowsHelpers.toWString:(Ljava/lang/String;)[B
     211: invokestatic  #201                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     214: astore        15
     216: aload_0
     217: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
     220: aload         13
     222: aload         15
     224: aload         4
     226: aload         4
     228: aload         4
     230: invokevirtual #202                // Method jnr/posix/WindowsSecurityAttributes.getInheritHandle:()Z
     233: ifeq          240
     236: iconst_1
     237: goto          241
     240: iconst_0
     241: iload         10
     243: aload         12
     245: aload         14
     247: aload         9
     249: aload         11
     251: invokeinterface #203,  11         // InterfaceMethod jnr/posix/WindowsLibC.CreateProcessW:([BLjava/nio/ByteBuffer;Ljnr/posix/WindowsSecurityAttributes;Ljnr/posix/WindowsSecurityAttributes;IILjnr/ffi/Pointer;[BLjnr/posix/WindowsStartupInfo;Ljnr/posix/WindowsProcessInformation;)Z
     256: istore        16
     258: iload         16
     260: ifne          265
     263: aconst_null
     264: areturn
     265: aload_0
     266: invokespecial #11                 // Method wlibc:()Ljnr/posix/WindowsLibC;
     269: aload         11
     271: invokevirtual #204                // Method jnr/posix/WindowsProcessInformation.getThread:()Ljnr/posix/HANDLE;
     274: invokeinterface #111,  2          // InterfaceMethod jnr/posix/WindowsLibC.CloseHandle:(Ljnr/posix/HANDLE;)Z
     279: pop
     280: new           #205                // class jnr/posix/WindowsChildRecord
     283: dup
     284: aload         11
     286: invokevirtual #206                // Method jnr/posix/WindowsProcessInformation.getProcess:()Ljnr/posix/HANDLE;
     289: aload         11
     291: invokevirtual #207                // Method jnr/posix/WindowsProcessInformation.getPid:()I
     294: invokespecial #208                // Method jnr/posix/WindowsChildRecord."<init>":(Ljnr/posix/HANDLE;I)V
     297: areturn

  private int checkFd(int);
    Code:
       0: aload_0
       1: invokevirtual #161                // Method libc:()Ljnr/posix/LibC;
       4: iload_1
       5: aload_0
       6: getfield      #4                  // Field checkFdStat:Ljnr/posix/FileStat;
       9: invokeinterface #209,  3          // InterfaceMethod jnr/posix/LibC.fstat:(ILjnr/posix/FileStat;)I
      14: ireturn

  public int mkfifo(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Ljnr/posix/POSIXHandler;
       4: ldc           #210                // String mkfifo
       6: invokeinterface #9,  2            // InterfaceMethod jnr/posix/POSIXHandler.unimplementedError:(Ljava/lang/String;)V
      11: iconst_m1
      12: ireturn

  public jnr.posix.Timeval allocateTimeval();
    Code:
       0: new           #211                // class jnr/posix/DefaultNativeTimeval
       3: dup
       4: aload_0
       5: invokevirtual #56                 // Method getRuntime:()Ljnr/ffi/Runtime;
       8: invokespecial #212                // Method jnr/posix/DefaultNativeTimeval."<init>":(Ljnr/ffi/Runtime;)V
      11: areturn

  public int gettimeofday(jnr.posix.Timeval);
    Code:
       0: invokestatic  #121                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: aload_1
       5: lload_2
       6: ldc2_w        #213                // long 1000l
       9: ldiv
      10: invokevirtual #215                // Method jnr/posix/Timeval.sec:(J)V
      13: aload_1
      14: lload_2
      15: ldc2_w        #213                // long 1000l
      18: lrem
      19: ldc2_w        #213                // long 1000l
      22: lmul
      23: invokevirtual #216                // Method jnr/posix/Timeval.usec:(J)V
      26: iconst_0
      27: ireturn

  static {};
    Code:
       0: new           #217                // class java/util/HashMap
       3: dup
       4: invokespecial #218                // Method java/util/HashMap."<init>":()V
       7: putstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
      10: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
      13: getstatic     #219                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_FUNCTION:Ljnr/constants/platform/windows/LastError;
      16: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
      19: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
      25: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
      34: getstatic     #68                 // Field jnr/constants/platform/windows/LastError.ERROR_FILE_NOT_FOUND:Ljnr/constants/platform/windows/LastError;
      37: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
      40: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
      46: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
      55: getstatic     #70                 // Field jnr/constants/platform/windows/LastError.ERROR_PATH_NOT_FOUND:Ljnr/constants/platform/windows/LastError;
      58: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
      61: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
      67: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
      76: getstatic     #223                // Field jnr/constants/platform/windows/LastError.ERROR_TOO_MANY_OPEN_FILES:Ljnr/constants/platform/windows/LastError;
      79: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
      82: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      85: getstatic     #224                // Field jnr/constants/platform/Errno.EMFILE:Ljnr/constants/platform/Errno;
      88: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
      97: getstatic     #225                // Field jnr/constants/platform/windows/LastError.ERROR_ACCESS_DENIED:Ljnr/constants/platform/windows/LastError;
     100: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     103: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     106: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     109: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     118: getstatic     #227                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_HANDLE:Ljnr/constants/platform/windows/LastError;
     121: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     124: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: getstatic     #228                // Field jnr/constants/platform/Errno.EBADF:Ljnr/constants/platform/Errno;
     130: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     139: getstatic     #229                // Field jnr/constants/platform/windows/LastError.ERROR_ARENA_TRASHED:Ljnr/constants/platform/windows/LastError;
     142: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     145: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     148: getstatic     #230                // Field jnr/constants/platform/Errno.ENOMEM:Ljnr/constants/platform/Errno;
     151: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     160: getstatic     #231                // Field jnr/constants/platform/windows/LastError.ERROR_NOT_ENOUGH_MEMORY:Ljnr/constants/platform/windows/LastError;
     163: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     166: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     169: getstatic     #230                // Field jnr/constants/platform/Errno.ENOMEM:Ljnr/constants/platform/Errno;
     172: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     177: pop
     178: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     181: getstatic     #232                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_BLOCK:Ljnr/constants/platform/windows/LastError;
     184: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     187: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     190: getstatic     #230                // Field jnr/constants/platform/Errno.ENOMEM:Ljnr/constants/platform/Errno;
     193: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     198: pop
     199: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     202: getstatic     #233                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_ENVIRONMENT:Ljnr/constants/platform/windows/LastError;
     205: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     208: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     211: getstatic     #234                // Field jnr/constants/platform/Errno.E2BIG:Ljnr/constants/platform/Errno;
     214: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     219: pop
     220: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     223: getstatic     #235                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_FORMAT:Ljnr/constants/platform/windows/LastError;
     226: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     229: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     232: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
     235: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     240: pop
     241: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     244: getstatic     #237                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_ACCESS:Ljnr/constants/platform/windows/LastError;
     247: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     250: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     253: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
     256: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     261: pop
     262: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     265: getstatic     #238                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_DATA:Ljnr/constants/platform/windows/LastError;
     268: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     271: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     274: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
     277: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     282: pop
     283: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     286: getstatic     #239                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_DRIVE:Ljnr/constants/platform/windows/LastError;
     289: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     292: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     295: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
     298: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     303: pop
     304: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     307: getstatic     #240                // Field jnr/constants/platform/windows/LastError.ERROR_CURRENT_DIRECTORY:Ljnr/constants/platform/windows/LastError;
     310: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     313: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     316: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     319: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     324: pop
     325: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     328: getstatic     #241                // Field jnr/constants/platform/windows/LastError.ERROR_NOT_SAME_DEVICE:Ljnr/constants/platform/windows/LastError;
     331: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     334: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     337: getstatic     #242                // Field jnr/constants/platform/Errno.EXDEV:Ljnr/constants/platform/Errno;
     340: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     345: pop
     346: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     349: getstatic     #243                // Field jnr/constants/platform/windows/LastError.ERROR_NO_MORE_FILES:Ljnr/constants/platform/windows/LastError;
     352: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     355: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     358: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
     361: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     366: pop
     367: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     370: getstatic     #244                // Field jnr/constants/platform/windows/LastError.ERROR_WRITE_PROTECT:Ljnr/constants/platform/windows/LastError;
     373: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     376: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     379: getstatic     #245                // Field jnr/constants/platform/Errno.EROFS:Ljnr/constants/platform/Errno;
     382: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     387: pop
     388: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     391: getstatic     #246                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_UNIT:Ljnr/constants/platform/windows/LastError;
     394: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     397: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     400: getstatic     #247                // Field jnr/constants/platform/Errno.ENODEV:Ljnr/constants/platform/Errno;
     403: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     408: pop
     409: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     412: getstatic     #248                // Field jnr/constants/platform/windows/LastError.ERROR_NOT_READY:Ljnr/constants/platform/windows/LastError;
     415: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     418: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     421: getstatic     #249                // Field jnr/constants/platform/Errno.ENXIO:Ljnr/constants/platform/Errno;
     424: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     429: pop
     430: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     433: getstatic     #250                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_COMMAND:Ljnr/constants/platform/windows/LastError;
     436: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     439: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     442: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     445: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     450: pop
     451: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     454: getstatic     #251                // Field jnr/constants/platform/windows/LastError.ERROR_CRC:Ljnr/constants/platform/windows/LastError;
     457: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     460: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     463: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     466: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     471: pop
     472: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     475: getstatic     #252                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_LENGTH:Ljnr/constants/platform/windows/LastError;
     478: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     481: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     484: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     487: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     492: pop
     493: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     496: getstatic     #253                // Field jnr/constants/platform/windows/LastError.ERROR_SEEK:Ljnr/constants/platform/windows/LastError;
     499: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     502: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     505: getstatic     #254                // Field jnr/constants/platform/Errno.EIO:Ljnr/constants/platform/Errno;
     508: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     513: pop
     514: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     517: getstatic     #255                // Field jnr/constants/platform/windows/LastError.ERROR_NOT_DOS_DISK:Ljnr/constants/platform/windows/LastError;
     520: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     523: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     526: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     529: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     534: pop
     535: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     538: getstatic     #256                // Field jnr/constants/platform/windows/LastError.ERROR_SECTOR_NOT_FOUND:Ljnr/constants/platform/windows/LastError;
     541: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     544: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     547: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     550: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     555: pop
     556: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     559: getstatic     #257                // Field jnr/constants/platform/windows/LastError.ERROR_OUT_OF_PAPER:Ljnr/constants/platform/windows/LastError;
     562: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     565: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     568: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     571: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     576: pop
     577: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     580: getstatic     #258                // Field jnr/constants/platform/windows/LastError.ERROR_WRITE_FAULT:Ljnr/constants/platform/windows/LastError;
     583: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     586: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     589: getstatic     #254                // Field jnr/constants/platform/Errno.EIO:Ljnr/constants/platform/Errno;
     592: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     597: pop
     598: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     601: getstatic     #259                // Field jnr/constants/platform/windows/LastError.ERROR_READ_FAULT:Ljnr/constants/platform/windows/LastError;
     604: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     607: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     610: getstatic     #254                // Field jnr/constants/platform/Errno.EIO:Ljnr/constants/platform/Errno;
     613: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     618: pop
     619: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     622: getstatic     #260                // Field jnr/constants/platform/windows/LastError.ERROR_GEN_FAILURE:Ljnr/constants/platform/windows/LastError;
     625: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     628: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     631: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     634: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     639: pop
     640: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     643: getstatic     #261                // Field jnr/constants/platform/windows/LastError.ERROR_LOCK_VIOLATION:Ljnr/constants/platform/windows/LastError;
     646: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     649: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     652: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     655: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     660: pop
     661: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     664: getstatic     #262                // Field jnr/constants/platform/windows/LastError.ERROR_SHARING_VIOLATION:Ljnr/constants/platform/windows/LastError;
     667: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     670: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     673: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     676: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     681: pop
     682: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     685: getstatic     #263                // Field jnr/constants/platform/windows/LastError.ERROR_WRONG_DISK:Ljnr/constants/platform/windows/LastError;
     688: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     691: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     694: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     697: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     702: pop
     703: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     706: getstatic     #264                // Field jnr/constants/platform/windows/LastError.ERROR_SHARING_BUFFER_EXCEEDED:Ljnr/constants/platform/windows/LastError;
     709: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     712: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     715: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     718: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     723: pop
     724: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     727: getstatic     #71                 // Field jnr/constants/platform/windows/LastError.ERROR_BAD_NETPATH:Ljnr/constants/platform/windows/LastError;
     730: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     733: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     736: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
     739: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     744: pop
     745: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     748: getstatic     #265                // Field jnr/constants/platform/windows/LastError.ERROR_NETWORK_ACCESS_DENIED:Ljnr/constants/platform/windows/LastError;
     751: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     754: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     757: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     760: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     765: pop
     766: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     769: getstatic     #266                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_NET_NAME:Ljnr/constants/platform/windows/LastError;
     772: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     775: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     778: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
     781: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     786: pop
     787: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     790: getstatic     #267                // Field jnr/constants/platform/windows/LastError.ERROR_FILE_EXISTS:Ljnr/constants/platform/windows/LastError;
     793: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     796: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     799: getstatic     #268                // Field jnr/constants/platform/Errno.EEXIST:Ljnr/constants/platform/Errno;
     802: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     807: pop
     808: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     811: getstatic     #269                // Field jnr/constants/platform/windows/LastError.ERROR_CANNOT_MAKE:Ljnr/constants/platform/windows/LastError;
     814: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     817: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     820: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     823: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     828: pop
     829: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     832: getstatic     #270                // Field jnr/constants/platform/windows/LastError.ERROR_FAIL_I24:Ljnr/constants/platform/windows/LastError;
     835: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     838: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     841: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     844: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     849: pop
     850: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     853: getstatic     #271                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_PARAMETER:Ljnr/constants/platform/windows/LastError;
     856: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     859: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     862: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
     865: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     870: pop
     871: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     874: getstatic     #272                // Field jnr/constants/platform/windows/LastError.ERROR_NO_PROC_SLOTS:Ljnr/constants/platform/windows/LastError;
     877: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     880: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     883: getstatic     #273                // Field jnr/constants/platform/Errno.EAGAIN:Ljnr/constants/platform/Errno;
     886: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     891: pop
     892: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     895: getstatic     #274                // Field jnr/constants/platform/windows/LastError.ERROR_DRIVE_LOCKED:Ljnr/constants/platform/windows/LastError;
     898: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     901: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     904: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
     907: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     912: pop
     913: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     916: getstatic     #275                // Field jnr/constants/platform/windows/LastError.ERROR_BROKEN_PIPE:Ljnr/constants/platform/windows/LastError;
     919: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     922: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     925: getstatic     #276                // Field jnr/constants/platform/Errno.EPIPE:Ljnr/constants/platform/Errno;
     928: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     933: pop
     934: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     937: getstatic     #277                // Field jnr/constants/platform/windows/LastError.ERROR_DISK_FULL:Ljnr/constants/platform/windows/LastError;
     940: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     943: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     946: getstatic     #278                // Field jnr/constants/platform/Errno.ENOSPC:Ljnr/constants/platform/Errno;
     949: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     954: pop
     955: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     958: getstatic     #279                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_TARGET_HANDLE:Ljnr/constants/platform/windows/LastError;
     961: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     964: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     967: getstatic     #228                // Field jnr/constants/platform/Errno.EBADF:Ljnr/constants/platform/Errno;
     970: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     975: pop
     976: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
     979: getstatic     #227                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_HANDLE:Ljnr/constants/platform/windows/LastError;
     982: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
     985: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     988: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
     991: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     996: pop
     997: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1000: getstatic     #280                // Field jnr/constants/platform/windows/LastError.ERROR_WAIT_NO_CHILDREN:Ljnr/constants/platform/windows/LastError;
    1003: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1006: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1009: getstatic     #281                // Field jnr/constants/platform/Errno.ECHILD:Ljnr/constants/platform/Errno;
    1012: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1017: pop
    1018: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1021: getstatic     #282                // Field jnr/constants/platform/windows/LastError.ERROR_CHILD_NOT_COMPLETE:Ljnr/constants/platform/windows/LastError;
    1024: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1027: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1030: getstatic     #281                // Field jnr/constants/platform/Errno.ECHILD:Ljnr/constants/platform/Errno;
    1033: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1038: pop
    1039: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1042: getstatic     #283                // Field jnr/constants/platform/windows/LastError.ERROR_DIRECT_ACCESS_HANDLE:Ljnr/constants/platform/windows/LastError;
    1045: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1048: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1051: getstatic     #228                // Field jnr/constants/platform/Errno.EBADF:Ljnr/constants/platform/Errno;
    1054: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1059: pop
    1060: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1063: getstatic     #284                // Field jnr/constants/platform/windows/LastError.ERROR_NEGATIVE_SEEK:Ljnr/constants/platform/windows/LastError;
    1066: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1069: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1072: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
    1075: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1080: pop
    1081: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1084: getstatic     #285                // Field jnr/constants/platform/windows/LastError.ERROR_SEEK_ON_DEVICE:Ljnr/constants/platform/windows/LastError;
    1087: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1090: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1093: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
    1096: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1101: pop
    1102: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1105: getstatic     #286                // Field jnr/constants/platform/windows/LastError.ERROR_DIR_NOT_EMPTY:Ljnr/constants/platform/windows/LastError;
    1108: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1111: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1114: getstatic     #287                // Field jnr/constants/platform/Errno.ENOTEMPTY:Ljnr/constants/platform/Errno;
    1117: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1122: pop
    1123: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1126: getstatic     #288                // Field jnr/constants/platform/windows/LastError.ERROR_DIRECTORY:Ljnr/constants/platform/windows/LastError;
    1129: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1132: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1135: getstatic     #289                // Field jnr/constants/platform/Errno.ENOTDIR:Ljnr/constants/platform/Errno;
    1138: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1143: pop
    1144: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1147: getstatic     #290                // Field jnr/constants/platform/windows/LastError.ERROR_NOT_LOCKED:Ljnr/constants/platform/windows/LastError;
    1150: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1153: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1156: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
    1159: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1164: pop
    1165: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1168: getstatic     #291                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_PATHNAME:Ljnr/constants/platform/windows/LastError;
    1171: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1174: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1177: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
    1180: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1185: pop
    1186: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1189: getstatic     #292                // Field jnr/constants/platform/windows/LastError.ERROR_MAX_THRDS_REACHED:Ljnr/constants/platform/windows/LastError;
    1192: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1195: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1198: getstatic     #273                // Field jnr/constants/platform/Errno.EAGAIN:Ljnr/constants/platform/Errno;
    1201: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1206: pop
    1207: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1210: getstatic     #293                // Field jnr/constants/platform/windows/LastError.ERROR_LOCK_FAILED:Ljnr/constants/platform/windows/LastError;
    1213: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1216: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1219: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
    1222: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1227: pop
    1228: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1231: getstatic     #294                // Field jnr/constants/platform/windows/LastError.ERROR_ALREADY_EXISTS:Ljnr/constants/platform/windows/LastError;
    1234: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1237: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1240: getstatic     #268                // Field jnr/constants/platform/Errno.EEXIST:Ljnr/constants/platform/Errno;
    1243: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1248: pop
    1249: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1252: getstatic     #295                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_STARTING_CODESEG:Ljnr/constants/platform/windows/LastError;
    1255: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1258: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1261: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1264: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1269: pop
    1270: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1273: getstatic     #296                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_STACKSEG:Ljnr/constants/platform/windows/LastError;
    1276: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1279: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1282: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1285: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1290: pop
    1291: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1294: getstatic     #297                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_MODULETYPE:Ljnr/constants/platform/windows/LastError;
    1297: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1300: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1303: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1306: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1311: pop
    1312: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1315: getstatic     #298                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_EXE_SIGNATURE:Ljnr/constants/platform/windows/LastError;
    1318: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1321: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1324: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1327: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1332: pop
    1333: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1336: getstatic     #299                // Field jnr/constants/platform/windows/LastError.ERROR_EXE_MARKED_INVALID:Ljnr/constants/platform/windows/LastError;
    1339: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1342: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1345: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1348: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1353: pop
    1354: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1357: getstatic     #300                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_EXE_FORMAT:Ljnr/constants/platform/windows/LastError;
    1360: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1363: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1366: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1369: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1374: pop
    1375: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1378: getstatic     #301                // Field jnr/constants/platform/windows/LastError.ERROR_ITERATED_DATA_EXCEEDS_64k:Ljnr/constants/platform/windows/LastError;
    1381: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1384: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1387: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1390: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1395: pop
    1396: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1399: getstatic     #302                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_MINALLOCSIZE:Ljnr/constants/platform/windows/LastError;
    1402: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1405: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1408: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1411: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1416: pop
    1417: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1420: getstatic     #303                // Field jnr/constants/platform/windows/LastError.ERROR_DYNLINK_FROM_INVALID_RING:Ljnr/constants/platform/windows/LastError;
    1423: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1426: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1429: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1432: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1437: pop
    1438: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1441: getstatic     #304                // Field jnr/constants/platform/windows/LastError.ERROR_IOPL_NOT_ENABLED:Ljnr/constants/platform/windows/LastError;
    1444: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1447: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1450: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1453: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1458: pop
    1459: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1462: getstatic     #305                // Field jnr/constants/platform/windows/LastError.ERROR_INVALID_SEGDPL:Ljnr/constants/platform/windows/LastError;
    1465: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1468: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1471: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1474: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1479: pop
    1480: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1483: getstatic     #306                // Field jnr/constants/platform/windows/LastError.ERROR_AUTODATASEG_EXCEEDS_64k:Ljnr/constants/platform/windows/LastError;
    1486: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1489: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1492: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1495: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1500: pop
    1501: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1504: getstatic     #307                // Field jnr/constants/platform/windows/LastError.ERROR_RING2SEG_MUST_BE_MOVABLE:Ljnr/constants/platform/windows/LastError;
    1507: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1510: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1513: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1516: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1521: pop
    1522: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1525: getstatic     #308                // Field jnr/constants/platform/windows/LastError.ERROR_RELOC_CHAIN_XEEDS_SEGLIM:Ljnr/constants/platform/windows/LastError;
    1528: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1531: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1534: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1537: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1542: pop
    1543: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1546: getstatic     #309                // Field jnr/constants/platform/windows/LastError.ERROR_INFLOOP_IN_RELOC_CHAIN:Ljnr/constants/platform/windows/LastError;
    1549: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1552: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1555: getstatic     #236                // Field jnr/constants/platform/Errno.ENOEXEC:Ljnr/constants/platform/Errno;
    1558: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1563: pop
    1564: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1567: getstatic     #310                // Field jnr/constants/platform/windows/LastError.ERROR_FILENAME_EXCED_RANGE:Ljnr/constants/platform/windows/LastError;
    1570: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1573: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1576: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
    1579: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1584: pop
    1585: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1588: getstatic     #311                // Field jnr/constants/platform/windows/LastError.ERROR_NESTING_NOT_ALLOWED:Ljnr/constants/platform/windows/LastError;
    1591: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1594: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1597: getstatic     #273                // Field jnr/constants/platform/Errno.EAGAIN:Ljnr/constants/platform/Errno;
    1600: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1605: pop
    1606: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1609: sipush        229
    1612: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1615: getstatic     #276                // Field jnr/constants/platform/Errno.EPIPE:Ljnr/constants/platform/Errno;
    1618: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1623: pop
    1624: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1627: getstatic     #312                // Field jnr/constants/platform/windows/LastError.ERROR_BAD_PIPE:Ljnr/constants/platform/windows/LastError;
    1630: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1633: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1636: getstatic     #276                // Field jnr/constants/platform/Errno.EPIPE:Ljnr/constants/platform/Errno;
    1639: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1644: pop
    1645: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1648: getstatic     #313                // Field jnr/constants/platform/windows/LastError.ERROR_PIPE_BUSY:Ljnr/constants/platform/windows/LastError;
    1651: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1654: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1657: getstatic     #273                // Field jnr/constants/platform/Errno.EAGAIN:Ljnr/constants/platform/Errno;
    1660: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1665: pop
    1666: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1669: getstatic     #314                // Field jnr/constants/platform/windows/LastError.ERROR_NO_DATA:Ljnr/constants/platform/windows/LastError;
    1672: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1675: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1678: getstatic     #276                // Field jnr/constants/platform/Errno.EPIPE:Ljnr/constants/platform/Errno;
    1681: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1686: pop
    1687: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1690: getstatic     #315                // Field jnr/constants/platform/windows/LastError.ERROR_PIPE_NOT_CONNECTED:Ljnr/constants/platform/windows/LastError;
    1693: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1696: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1699: getstatic     #276                // Field jnr/constants/platform/Errno.EPIPE:Ljnr/constants/platform/Errno;
    1702: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1707: pop
    1708: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1711: getstatic     #316                // Field jnr/constants/platform/windows/LastError.ERROR_OPERATION_ABORTED:Ljnr/constants/platform/windows/LastError;
    1714: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1717: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1720: getstatic     #317                // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
    1723: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1728: pop
    1729: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1732: getstatic     #318                // Field jnr/constants/platform/windows/LastError.ERROR_NOT_ENOUGH_QUOTA:Ljnr/constants/platform/windows/LastError;
    1735: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1738: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1741: getstatic     #230                // Field jnr/constants/platform/Errno.ENOMEM:Ljnr/constants/platform/Errno;
    1744: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1749: pop
    1750: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1753: getstatic     #319                // Field jnr/constants/platform/windows/LastError.ERROR_MOD_NOT_FOUND:Ljnr/constants/platform/windows/LastError;
    1756: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1759: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1762: getstatic     #222                // Field jnr/constants/platform/Errno.ENOENT:Ljnr/constants/platform/Errno;
    1765: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1770: pop
    1771: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1774: getstatic     #320                // Field jnr/constants/platform/windows/LastError.WSAENAMETOOLONG:Ljnr/constants/platform/windows/LastError;
    1777: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1780: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1783: getstatic     #321                // Field jnr/constants/platform/Errno.ENAMETOOLONG:Ljnr/constants/platform/Errno;
    1786: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1791: pop
    1792: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1795: getstatic     #322                // Field jnr/constants/platform/windows/LastError.WSAENOTEMPTY:Ljnr/constants/platform/windows/LastError;
    1798: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1801: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1804: getstatic     #287                // Field jnr/constants/platform/Errno.ENOTEMPTY:Ljnr/constants/platform/Errno;
    1807: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1812: pop
    1813: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1816: getstatic     #323                // Field jnr/constants/platform/windows/LastError.WSAEINTR:Ljnr/constants/platform/windows/LastError;
    1819: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1822: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1825: getstatic     #317                // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
    1828: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1833: pop
    1834: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1837: getstatic     #324                // Field jnr/constants/platform/windows/LastError.WSAEBADF:Ljnr/constants/platform/windows/LastError;
    1840: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1843: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1846: getstatic     #228                // Field jnr/constants/platform/Errno.EBADF:Ljnr/constants/platform/Errno;
    1849: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1854: pop
    1855: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1858: getstatic     #325                // Field jnr/constants/platform/windows/LastError.WSAEACCES:Ljnr/constants/platform/windows/LastError;
    1861: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1864: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1867: getstatic     #226                // Field jnr/constants/platform/Errno.EACCES:Ljnr/constants/platform/Errno;
    1870: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1875: pop
    1876: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1879: getstatic     #326                // Field jnr/constants/platform/windows/LastError.WSAEFAULT:Ljnr/constants/platform/windows/LastError;
    1882: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1885: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1888: getstatic     #183                // Field jnr/constants/platform/Errno.EFAULT:Ljnr/constants/platform/Errno;
    1891: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1896: pop
    1897: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1900: getstatic     #327                // Field jnr/constants/platform/windows/LastError.WSAEINVAL:Ljnr/constants/platform/windows/LastError;
    1903: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1906: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1909: getstatic     #87                 // Field jnr/constants/platform/Errno.EINVAL:Ljnr/constants/platform/Errno;
    1912: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1917: pop
    1918: getstatic     #178                // Field errorToErrnoMapper:Ljava/util/Map;
    1921: getstatic     #328                // Field jnr/constants/platform/windows/LastError.WSAEMFILE:Ljnr/constants/platform/windows/LastError;
    1924: invokevirtual #220                // Method jnr/constants/platform/windows/LastError.value:()I
    1927: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1930: getstatic     #224                // Field jnr/constants/platform/Errno.EMFILE:Ljnr/constants/platform/Errno;
    1933: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1938: pop
    1939: new           #329                // class jnr/posix/WindowsPOSIX$1
    1942: dup
    1943: invokespecial #330                // Method jnr/posix/WindowsPOSIX$1."<init>":()V
    1946: putstatic     #331                // Field PASSWD:Ljnr/posix/BaseNativePOSIX$PointerConverter;
    1949: return
}
