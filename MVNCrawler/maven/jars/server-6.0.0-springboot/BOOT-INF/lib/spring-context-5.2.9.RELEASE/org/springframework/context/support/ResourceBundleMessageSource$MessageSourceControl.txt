Compiled from "ResourceBundleMessageSource.java"
class org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl extends java.util.ResourceBundle$Control {
  final org.springframework.context.support.ResourceBundleMessageSource this$0;

  private org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl(org.springframework.context.support.ResourceBundleMessageSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
       5: aload_0
       6: invokespecial #3                  // Method java/util/ResourceBundle$Control."<init>":()V
       9: return

  public java.util.ResourceBundle newBundle(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, boolean) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.io.IOException;
    Code:
       0: aload_3
       1: ldc           #4                  // String java.properties
       3: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          308
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #6                  // Method toBundleName:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
      15: astore        6
      17: aload_0
      18: aload         6
      20: ldc           #7                  // String properties
      22: invokevirtual #8                  // Method toResourceName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: astore        7
      27: aload         4
      29: astore        8
      31: iload         5
      33: istore        9
      35: iload         9
      37: aload         8
      39: aload         7
      41: invokedynamic #9,  0              // InvokeDynamic #0:run:(ZLjava/lang/ClassLoader;Ljava/lang/String;)Ljava/security/PrivilegedExceptionAction;
      46: invokestatic  #10                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      49: checkcast     #11                 // class java/io/InputStream
      52: astore        10
      54: goto          68
      57: astore        11
      59: aload         11
      61: invokevirtual #13                 // Method java/security/PrivilegedActionException.getException:()Ljava/lang/Exception;
      64: checkcast     #14                 // class java/io/IOException
      67: athrow
      68: aload         10
      70: ifnull        306
      73: aload_0
      74: getfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
      77: invokevirtual #15                 // Method org/springframework/context/support/ResourceBundleMessageSource.getDefaultEncoding:()Ljava/lang/String;
      80: astore        11
      82: aload         11
      84: ifnull        201
      87: new           #16                 // class java/io/InputStreamReader
      90: dup
      91: aload         10
      93: aload         11
      95: invokespecial #17                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      98: astore        12
     100: aconst_null
     101: astore        13
     103: aload_0
     104: getfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
     107: aload         12
     109: invokevirtual #18                 // Method org/springframework/context/support/ResourceBundleMessageSource.loadBundle:(Ljava/io/Reader;)Ljava/util/ResourceBundle;
     112: astore        14
     114: aload         12
     116: ifnull        149
     119: aload         13
     121: ifnull        144
     124: aload         12
     126: invokevirtual #19                 // Method java/io/InputStreamReader.close:()V
     129: goto          149
     132: astore        15
     134: aload         13
     136: aload         15
     138: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     141: goto          149
     144: aload         12
     146: invokevirtual #19                 // Method java/io/InputStreamReader.close:()V
     149: aload         14
     151: areturn
     152: astore        14
     154: aload         14
     156: astore        13
     158: aload         14
     160: athrow
     161: astore        16
     163: aload         12
     165: ifnull        198
     168: aload         13
     170: ifnull        193
     173: aload         12
     175: invokevirtual #19                 // Method java/io/InputStreamReader.close:()V
     178: goto          198
     181: astore        17
     183: aload         13
     185: aload         17
     187: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     190: goto          198
     193: aload         12
     195: invokevirtual #19                 // Method java/io/InputStreamReader.close:()V
     198: aload         16
     200: athrow
     201: aload         10
     203: astore        12
     205: aconst_null
     206: astore        13
     208: aload_0
     209: getfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
     212: aload         12
     214: invokevirtual #22                 // Method org/springframework/context/support/ResourceBundleMessageSource.loadBundle:(Ljava/io/InputStream;)Ljava/util/ResourceBundle;
     217: astore        14
     219: aload         12
     221: ifnull        254
     224: aload         13
     226: ifnull        249
     229: aload         12
     231: invokevirtual #23                 // Method java/io/InputStream.close:()V
     234: goto          254
     237: astore        15
     239: aload         13
     241: aload         15
     243: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     246: goto          254
     249: aload         12
     251: invokevirtual #23                 // Method java/io/InputStream.close:()V
     254: aload         14
     256: areturn
     257: astore        14
     259: aload         14
     261: astore        13
     263: aload         14
     265: athrow
     266: astore        18
     268: aload         12
     270: ifnull        303
     273: aload         13
     275: ifnull        298
     278: aload         12
     280: invokevirtual #23                 // Method java/io/InputStream.close:()V
     283: goto          303
     286: astore        19
     288: aload         13
     290: aload         19
     292: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     295: goto          303
     298: aload         12
     300: invokevirtual #23                 // Method java/io/InputStream.close:()V
     303: aload         18
     305: athrow
     306: aconst_null
     307: areturn
     308: aload_0
     309: aload_1
     310: aload_2
     311: aload_3
     312: aload         4
     314: iload         5
     316: invokespecial #24                 // Method java/util/ResourceBundle$Control.newBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/util/ResourceBundle;
     319: areturn
    Exception table:
       from    to  target type
          35    54    57   Class java/security/PrivilegedActionException
         124   129   132   Class java/lang/Throwable
         103   114   152   Class java/lang/Throwable
         103   114   161   any
         173   178   181   Class java/lang/Throwable
         152   163   161   any
         229   234   237   Class java/lang/Throwable
         208   219   257   Class java/lang/Throwable
         208   219   266   any
         278   283   286   Class java/lang/Throwable
         257   268   266   any

  public java.util.Locale getFallbackLocale(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
       4: invokevirtual #25                 // Method org/springframework/context/support/ResourceBundleMessageSource.getDefaultLocale:()Ljava/util/Locale;
       7: astore_3
       8: aload_3
       9: ifnull        24
      12: aload_3
      13: aload_2
      14: invokevirtual #26                 // Method java/util/Locale.equals:(Ljava/lang/Object;)Z
      17: ifne          24
      20: aload_3
      21: goto          25
      24: aconst_null
      25: areturn

  public long getTimeToLive(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
       4: invokevirtual #27                 // Method org/springframework/context/support/ResourceBundleMessageSource.getCacheMillis:()J
       7: lstore_3
       8: lload_3
       9: lconst_0
      10: lcmp
      11: iflt          18
      14: lload_3
      15: goto          24
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #28                 // Method java/util/ResourceBundle$Control.getTimeToLive:(Ljava/lang/String;Ljava/util/Locale;)J
      24: lreturn

  public boolean needsReload(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, java.util.ResourceBundle, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: lload         6
      10: invokespecial #29                 // Method java/util/ResourceBundle$Control.needsReload:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle;J)Z
      13: ifeq          33
      16: aload_0
      17: getfield      #2                  // Field this$0:Lorg/springframework/context/support/ResourceBundleMessageSource;
      20: invokestatic  #30                 // Method org/springframework/context/support/ResourceBundleMessageSource.access$100:(Lorg/springframework/context/support/ResourceBundleMessageSource;)Ljava/util/Map;
      23: aload         5
      25: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: iconst_1
      32: ireturn
      33: iconst_0
      34: ireturn

  private static java.io.InputStream lambda$newBundle$0(boolean, java.lang.ClassLoader, java.lang.String) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore_3
       2: iload_0
       3: ifeq          45
       6: aload_1
       7: aload_2
       8: invokevirtual #32                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      11: astore        4
      13: aload         4
      15: ifnull        42
      18: aload         4
      20: invokevirtual #33                 // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      23: astore        5
      25: aload         5
      27: ifnull        42
      30: aload         5
      32: iconst_0
      33: invokevirtual #34                 // Method java/net/URLConnection.setUseCaches:(Z)V
      36: aload         5
      38: invokevirtual #35                 // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
      41: astore_3
      42: goto          51
      45: aload_1
      46: aload_2
      47: invokevirtual #36                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      50: astore_3
      51: aload_3
      52: areturn

  org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl(org.springframework.context.support.ResourceBundleMessageSource, org.springframework.context.support.ResourceBundleMessageSource$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/context/support/ResourceBundleMessageSource;)V
       5: return
}
