Compiled from "MBeanServerFactoryBean.java"
public class org.springframework.jmx.support.MBeanServerFactoryBean implements org.springframework.beans.factory.FactoryBean<javax.management.MBeanServer>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  protected final org.apache.commons.logging.Log logger;

  private boolean locateExistingServerIfPossible;

  private java.lang.String agentId;

  private java.lang.String defaultDomain;

  private boolean registerWithFactory;

  private javax.management.MBeanServer server;

  private boolean newlyRegistered;

  public org.springframework.jmx.support.MBeanServerFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field locateExistingServerIfPossible:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field registerWithFactory:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field newlyRegistered:Z
      30: return

  public void setLocateExistingServerIfPossible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field locateExistingServerIfPossible:Z
       5: return

  public void setAgentId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field agentId:Ljava/lang/String;
       5: return

  public void setDefaultDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field defaultDomain:Ljava/lang/String;
       5: return

  public void setRegisterWithFactory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field registerWithFactory:Z
       5: return

  public void afterPropertiesSet() throws org.springframework.jmx.MBeanServerNotFoundException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field locateExistingServerIfPossible:Z
       4: ifne          14
       7: aload_0
       8: getfield      #8                  // Field agentId:Ljava/lang/String;
      11: ifnull        50
      14: aload_0
      15: aload_0
      16: aload_0
      17: getfield      #8                  // Field agentId:Ljava/lang/String;
      20: invokevirtual #10                 // Method locateMBeanServer:(Ljava/lang/String;)Ljavax/management/MBeanServer;
      23: putfield      #11                 // Field server:Ljavax/management/MBeanServer;
      26: goto          50
      29: astore_1
      30: aload_0
      31: getfield      #8                  // Field agentId:Ljava/lang/String;
      34: ifnull        39
      37: aload_1
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      43: ldc           #13                 // String No existing MBeanServer found - creating new one
      45: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      50: aload_0
      51: getfield      #11                 // Field server:Ljavax/management/MBeanServer;
      54: ifnonnull     81
      57: aload_0
      58: aload_0
      59: aload_0
      60: getfield      #9                  // Field defaultDomain:Ljava/lang/String;
      63: aload_0
      64: getfield      #6                  // Field registerWithFactory:Z
      67: invokevirtual #15                 // Method createMBeanServer:(Ljava/lang/String;Z)Ljavax/management/MBeanServer;
      70: putfield      #11                 // Field server:Ljavax/management/MBeanServer;
      73: aload_0
      74: aload_0
      75: getfield      #6                  // Field registerWithFactory:Z
      78: putfield      #7                  // Field newlyRegistered:Z
      81: return
    Exception table:
       from    to  target type
          14    26    29   Class org/springframework/jmx/MBeanServerNotFoundException

  protected javax.management.MBeanServer locateMBeanServer(java.lang.String) throws org.springframework.jmx.MBeanServerNotFoundException;
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method org/springframework/jmx/support/JmxUtils.locateMBeanServer:(Ljava/lang/String;)Ljavax/management/MBeanServer;
       4: areturn

  protected javax.management.MBeanServer createMBeanServer(java.lang.String, boolean);
    Code:
       0: iload_2
       1: ifeq          9
       4: aload_1
       5: invokestatic  #17                 // Method javax/management/MBeanServerFactory.createMBeanServer:(Ljava/lang/String;)Ljavax/management/MBeanServer;
       8: areturn
       9: aload_1
      10: invokestatic  #18                 // Method javax/management/MBeanServerFactory.newMBeanServer:(Ljava/lang/String;)Ljavax/management/MBeanServer;
      13: areturn

  public javax.management.MBeanServer getObject();
    Code:
       0: aload_0
       1: getfield      #11                 // Field server:Ljavax/management/MBeanServer;
       4: areturn

  public java.lang.Class<? extends javax.management.MBeanServer> getObjectType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field server:Ljavax/management/MBeanServer;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field server:Ljavax/management/MBeanServer;
      11: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #19                 // class javax/management/MBeanServer
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field newlyRegistered:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field server:Ljavax/management/MBeanServer;
      11: invokestatic  #20                 // Method javax/management/MBeanServerFactory.releaseMBeanServer:(Ljavax/management/MBeanServer;)V
      14: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getObject:()Ljavax/management/MBeanServer;
       4: areturn
}
