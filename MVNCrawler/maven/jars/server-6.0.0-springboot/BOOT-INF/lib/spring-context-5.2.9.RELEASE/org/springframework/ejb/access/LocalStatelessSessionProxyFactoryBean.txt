Compiled from "LocalStatelessSessionProxyFactoryBean.java"
public class org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean extends org.springframework.ejb.access.LocalSlsbInvokerInterceptor implements org.springframework.beans.factory.FactoryBean<java.lang.Object>, org.springframework.beans.factory.BeanClassLoaderAware {
  private java.lang.Class<?> businessInterface;

  private java.lang.ClassLoader beanClassLoader;

  private java.lang.Object proxy;

  public org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/ejb/access/LocalSlsbInvokerInterceptor."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
       8: putfield      #3                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      11: return

  public void setBusinessInterface(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field businessInterface:Ljava/lang/Class;
       5: return

  public java.lang.Class<?> getBusinessInterface();
    Code:
       0: aload_0
       1: getfield      #4                  // Field businessInterface:Ljava/lang/Class;
       4: areturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  public void afterPropertiesSet() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/ejb/access/LocalSlsbInvokerInterceptor.afterPropertiesSet:()V
       4: aload_0
       5: getfield      #4                  // Field businessInterface:Ljava/lang/Class;
       8: ifnonnull     21
      11: new           #6                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #7                  // String businessInterface is required
      17: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: new           #9                  // class org/springframework/aop/framework/ProxyFactory
      25: dup
      26: aload_0
      27: getfield      #4                  // Field businessInterface:Ljava/lang/Class;
      30: aload_0
      31: invokespecial #10                 // Method org/springframework/aop/framework/ProxyFactory."<init>":(Ljava/lang/Class;Lorg/aopalliance/intercept/Interceptor;)V
      34: aload_0
      35: getfield      #3                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      38: invokevirtual #11                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
      41: putfield      #12                 // Field proxy:Ljava/lang/Object;
      44: return

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #12                 // Field proxy:Ljava/lang/Object;
       4: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field businessInterface:Ljava/lang/Class;
       4: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn
}
