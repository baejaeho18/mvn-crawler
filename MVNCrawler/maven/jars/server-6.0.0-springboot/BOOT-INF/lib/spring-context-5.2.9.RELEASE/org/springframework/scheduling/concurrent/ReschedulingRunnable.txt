Compiled from "ReschedulingRunnable.java"
class org.springframework.scheduling.concurrent.ReschedulingRunnable extends org.springframework.scheduling.support.DelegatingErrorHandlingRunnable implements java.util.concurrent.ScheduledFuture<java.lang.Object> {
  private final org.springframework.scheduling.Trigger trigger;

  private final org.springframework.scheduling.support.SimpleTriggerContext triggerContext;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private java.util.concurrent.ScheduledFuture<?> currentFuture;

  private java.util.Date scheduledExecutionTime;

  private final java.lang.Object triggerContextMonitor;

  public org.springframework.scheduling.concurrent.ReschedulingRunnable(java.lang.Runnable, org.springframework.scheduling.Trigger, java.util.concurrent.ScheduledExecutorService, org.springframework.util.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokespecial #1                  // Method org/springframework/scheduling/support/DelegatingErrorHandlingRunnable."<init>":(Ljava/lang/Runnable;Lorg/springframework/util/ErrorHandler;)V
       7: aload_0
       8: new           #2                  // class org/springframework/scheduling/support/SimpleTriggerContext
      11: dup
      12: invokespecial #3                  // Method org/springframework/scheduling/support/SimpleTriggerContext."<init>":()V
      15: putfield      #4                  // Field triggerContext:Lorg/springframework/scheduling/support/SimpleTriggerContext;
      18: aload_0
      19: new           #5                  // class java/lang/Object
      22: dup
      23: invokespecial #6                  // Method java/lang/Object."<init>":()V
      26: putfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
      29: aload_0
      30: aload_2
      31: putfield      #8                  // Field trigger:Lorg/springframework/scheduling/Trigger;
      34: aload_0
      35: aload_3
      36: putfield      #9                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      39: return

  public java.util.concurrent.ScheduledFuture<?> schedule();
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field trigger:Lorg/springframework/scheduling/Trigger;
      12: aload_0
      13: getfield      #4                  // Field triggerContext:Lorg/springframework/scheduling/support/SimpleTriggerContext;
      16: invokeinterface #10,  2           // InterfaceMethod org/springframework/scheduling/Trigger.nextExecutionTime:(Lorg/springframework/scheduling/TriggerContext;)Ljava/util/Date;
      21: putfield      #11                 // Field scheduledExecutionTime:Ljava/util/Date;
      24: aload_0
      25: getfield      #11                 // Field scheduledExecutionTime:Ljava/util/Date;
      28: ifnonnull     35
      31: aconst_null
      32: aload_1
      33: monitorexit
      34: areturn
      35: aload_0
      36: getfield      #11                 // Field scheduledExecutionTime:Ljava/util/Date;
      39: invokevirtual #12                 // Method java/util/Date.getTime:()J
      42: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
      45: lsub
      46: lstore_2
      47: aload_0
      48: aload_0
      49: getfield      #9                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      52: aload_0
      53: lload_2
      54: getstatic     #14                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      57: invokeinterface #15,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      62: putfield      #16                 // Field currentFuture:Ljava/util/concurrent/ScheduledFuture;
      65: aload_0
      66: aload_1
      67: monitorexit
      68: areturn
      69: astore        4
      71: aload_1
      72: monitorexit
      73: aload         4
      75: athrow
    Exception table:
       from    to  target type
           7    34    69   any
          35    68    69   any
          69    73    69   any

  private java.util.concurrent.ScheduledFuture<?> obtainCurrentFuture();
    Code:
       0: aload_0
       1: getfield      #16                 // Field currentFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #17                 // String No scheduled future
      14: invokestatic  #18                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #16                 // Field currentFuture:Ljava/util/concurrent/ScheduledFuture;
      21: areturn

  public void run();
    Code:
       0: new           #19                 // class java/util/Date
       3: dup
       4: invokespecial #20                 // Method java/util/Date."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #21                 // Method org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.run:()V
      12: new           #19                 // class java/util/Date
      15: dup
      16: invokespecial #20                 // Method java/util/Date."<init>":()V
      19: astore_2
      20: aload_0
      21: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
      24: dup
      25: astore_3
      26: monitorenter
      27: aload_0
      28: getfield      #11                 // Field scheduledExecutionTime:Ljava/util/Date;
      31: ifnull        38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ldc           #22                 // String No scheduled execution
      41: invokestatic  #18                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      44: aload_0
      45: getfield      #4                  // Field triggerContext:Lorg/springframework/scheduling/support/SimpleTriggerContext;
      48: aload_0
      49: getfield      #11                 // Field scheduledExecutionTime:Ljava/util/Date;
      52: aload_1
      53: aload_2
      54: invokevirtual #23                 // Method org/springframework/scheduling/support/SimpleTriggerContext.update:(Ljava/util/Date;Ljava/util/Date;Ljava/util/Date;)V
      57: aload_0
      58: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      61: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isCancelled:()Z
      66: ifne          74
      69: aload_0
      70: invokevirtual #26                 // Method schedule:()Ljava/util/concurrent/ScheduledFuture;
      73: pop
      74: aload_3
      75: monitorexit
      76: goto          86
      79: astore        4
      81: aload_3
      82: monitorexit
      83: aload         4
      85: athrow
      86: return
    Exception table:
       from    to  target type
          27    76    79   any
          79    83    79   any

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      11: iload_1
      12: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: aload_2
      18: monitorexit
      19: ireturn
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
    Exception table:
       from    to  target type
           7    19    20   any
          20    23    20   any

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      11: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isCancelled:()Z
      16: aload_1
      17: monitorexit
      18: ireturn
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    22    19   any

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      11: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isDone:()Z
      16: aload_1
      17: monitorexit
      18: ireturn
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    22    19   any

  public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      11: astore_1
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: aload_1
      23: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.get:()Ljava/lang/Object;
      28: areturn
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore        5
       7: monitorenter
       8: aload_0
       9: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      12: astore        4
      14: aload         5
      16: monitorexit
      17: goto          28
      20: astore        6
      22: aload         5
      24: monitorexit
      25: aload         6
      27: athrow
      28: aload         4
      30: lload_1
      31: aload_3
      32: invokeinterface #30,  4           // InterfaceMethod java/util/concurrent/ScheduledFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      37: areturn
    Exception table:
       from    to  target type
           8    17    20   any
          20    25    20   any

  public long getDelay(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #7                  // Field triggerContextMonitor:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: invokespecial #24                 // Method obtainCurrentFuture:()Ljava/util/concurrent/ScheduledFuture;
      11: astore_2
      12: aload_3
      13: monitorexit
      14: goto          24
      17: astore        4
      19: aload_3
      20: monitorexit
      21: aload         4
      23: athrow
      24: aload_2
      25: aload_1
      26: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      31: lreturn
    Exception table:
       from    to  target type
           7    14    17   any
          17    21    17   any

  public int compareTo(java.util.concurrent.Delayed);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getstatic     #14                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #32                 // Method getDelay:(Ljava/util/concurrent/TimeUnit;)J
      14: aload_1
      15: getstatic     #14                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/Delayed.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      23: lsub
      24: lstore_2
      25: lload_2
      26: lconst_0
      27: lcmp
      28: ifne          35
      31: iconst_0
      32: goto          46
      35: lload_2
      36: lconst_0
      37: lcmp
      38: ifge          45
      41: iconst_m1
      42: goto          46
      45: iconst_1
      46: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class java/util/concurrent/Delayed
       5: invokevirtual #35                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
       8: ireturn
}
