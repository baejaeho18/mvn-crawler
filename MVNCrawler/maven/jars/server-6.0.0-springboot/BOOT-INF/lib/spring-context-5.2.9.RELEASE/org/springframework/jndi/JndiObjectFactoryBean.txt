Compiled from "JndiObjectFactoryBean.java"
public class org.springframework.jndi.JndiObjectFactoryBean extends org.springframework.jndi.JndiObjectLocator implements org.springframework.beans.factory.FactoryBean<java.lang.Object>, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.BeanClassLoaderAware {
  private java.lang.Class<?>[] proxyInterfaces;

  private boolean lookupOnStartup;

  private boolean cache;

  private boolean exposeAccessContext;

  private java.lang.Object defaultObject;

  private org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory;

  private java.lang.ClassLoader beanClassLoader;

  private java.lang.Object jndiObject;

  public org.springframework.jndi.JndiObjectFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/springframework/jndi/JndiObjectLocator."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #5                  // Field lookupOnStartup:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field cache:Z
      14: aload_0
      15: iconst_0
      16: putfield      #1                  // Field exposeAccessContext:Z
      19: aload_0
      20: invokestatic  #7                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      23: putfield      #2                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      26: return

  public void setProxyInterface(java.lang.Class<?>);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #8                  // class java/lang/Class
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: putfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
      12: return

  public void setProxyInterfaces(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
       5: return

  public void setLookupOnStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field lookupOnStartup:Z
       5: return

  public void setCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field cache:Z
       5: return

  public void setExposeAccessContext(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field exposeAccessContext:Z
       5: return

  public void setDefaultObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field defaultObject:Ljava/lang/Object;
       5: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/springframework/beans/factory/config/ConfigurableBeanFactory
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: checkcast     #10                 // class org/springframework/beans/factory/config/ConfigurableBeanFactory
      12: putfield      #11                 // Field beanFactory:Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;
      15: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  public void afterPropertiesSet() throws java.lang.IllegalArgumentException, javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/springframework/jndi/JndiObjectLocator.afterPropertiesSet:()V
       4: aload_0
       5: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
       8: ifnonnull     32
      11: aload_0
      12: getfield      #5                  // Field lookupOnStartup:Z
      15: ifeq          32
      18: aload_0
      19: getfield      #4                  // Field cache:Z
      22: ifeq          32
      25: aload_0
      26: getfield      #1                  // Field exposeAccessContext:Z
      29: ifeq          60
      32: aload_0
      33: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
      36: ifnull        49
      39: new           #13                 // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #14                 // String \'defaultObject\' is not supported in combination with \'proxyInterface\'
      45: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_0
      51: invokestatic  #16                 // Method org/springframework/jndi/JndiObjectFactoryBean$JndiObjectProxyFactory.access$000:(Lorg/springframework/jndi/JndiObjectFactoryBean;)Ljava/lang/Object;
      54: putfield      #17                 // Field jndiObject:Ljava/lang/Object;
      57: goto          214
      60: aload_0
      61: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
      64: ifnull        206
      67: aload_0
      68: invokevirtual #18                 // Method getExpectedType:()Ljava/lang/Class;
      71: ifnull        206
      74: aload_0
      75: invokevirtual #18                 // Method getExpectedType:()Ljava/lang/Class;
      78: aload_0
      79: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
      82: invokevirtual #19                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      85: ifne          206
      88: aload_0
      89: getfield      #11                 // Field beanFactory:Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;
      92: ifnull        107
      95: aload_0
      96: getfield      #11                 // Field beanFactory:Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;
      99: invokeinterface #20,  1           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableBeanFactory.getTypeConverter:()Lorg/springframework/beans/TypeConverter;
     104: goto          114
     107: new           #21                 // class org/springframework/beans/SimpleTypeConverter
     110: dup
     111: invokespecial #22                 // Method org/springframework/beans/SimpleTypeConverter."<init>":()V
     114: astore_1
     115: aload_0
     116: aload_1
     117: aload_0
     118: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
     121: aload_0
     122: invokevirtual #18                 // Method getExpectedType:()Ljava/lang/Class;
     125: invokeinterface #23,  3           // InterfaceMethod org/springframework/beans/TypeConverter.convertIfNecessary:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     130: putfield      #9                  // Field defaultObject:Ljava/lang/Object;
     133: goto          206
     136: astore_2
     137: new           #13                 // class java/lang/IllegalArgumentException
     140: dup
     141: new           #25                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     148: ldc           #27                 // String Default object [
     150: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_0
     154: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
     157: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     160: ldc           #30                 // String ] of type [
     162: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
     169: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     172: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
     175: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: ldc           #33                 // String ] is not of expected type [
     180: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: aload_0
     184: invokevirtual #18                 // Method getExpectedType:()Ljava/lang/Class;
     187: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
     190: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: ldc           #34                 // String ] and cannot be converted either
     195: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: aload_2
     202: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     205: athrow
     206: aload_0
     207: aload_0
     208: invokevirtual #37                 // Method lookupWithFallback:()Ljava/lang/Object;
     211: putfield      #17                 // Field jndiObject:Ljava/lang/Object;
     214: return
    Exception table:
       from    to  target type
         115   133   136   Class org/springframework/beans/TypeMismatchException

  protected java.lang.Object lookupWithFallback() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       4: invokestatic  #38                 // Method org/springframework/util/ClassUtils.overrideThreadContextClassLoader:(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;
       7: astore_1
       8: aload_0
       9: invokevirtual #39                 // Method lookup:()Ljava/lang/Object;
      12: astore_2
      13: aload_1
      14: ifnull        24
      17: invokestatic  #40                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      20: aload_1
      21: invokevirtual #41                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      24: aload_2
      25: areturn
      26: astore_2
      27: aload_2
      28: athrow
      29: astore_2
      30: aload_0
      31: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
      34: ifnull        122
      37: aload_0
      38: getfield      #44                 // Field logger:Lorg/apache/commons/logging/Log;
      41: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      46: ifeq          64
      49: aload_0
      50: getfield      #44                 // Field logger:Lorg/apache/commons/logging/Log;
      53: ldc           #46                 // String JNDI lookup failed - returning specified default object instead
      55: aload_2
      56: invokeinterface #47,  3           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      61: goto          104
      64: aload_0
      65: getfield      #44                 // Field logger:Lorg/apache/commons/logging/Log;
      68: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      73: ifeq          104
      76: aload_0
      77: getfield      #44                 // Field logger:Lorg/apache/commons/logging/Log;
      80: new           #25                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #49                 // String JNDI lookup failed - returning specified default object instead:
      89: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_2
      93: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     104: aload_0
     105: getfield      #9                  // Field defaultObject:Ljava/lang/Object;
     108: astore_3
     109: aload_1
     110: ifnull        120
     113: invokestatic  #40                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     116: aload_1
     117: invokevirtual #41                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
     120: aload_3
     121: areturn
     122: aload_2
     123: athrow
     124: astore        4
     126: aload_1
     127: ifnull        137
     130: invokestatic  #40                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     133: aload_1
     134: invokevirtual #41                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
     137: aload         4
     139: athrow
    Exception table:
       from    to  target type
           8    13    26   Class org/springframework/jndi/TypeMismatchNamingException
           8    13    29   Class javax/naming/NamingException
           8    13   124   any
          26   109   124   any
         122   126   124   any

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #17                 // Field jndiObject:Ljava/lang/Object;
       4: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
       4: ifnull        41
       7: aload_0
       8: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
      11: arraylength
      12: iconst_1
      13: if_icmpne     23
      16: aload_0
      17: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
      20: iconst_0
      21: aaload
      22: areturn
      23: aload_0
      24: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
      27: arraylength
      28: iconst_1
      29: if_icmple     41
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
      37: invokevirtual #51                 // Method createCompositeInterface:([Ljava/lang/Class;)Ljava/lang/Class;
      40: areturn
      41: aload_0
      42: getfield      #17                 // Field jndiObject:Ljava/lang/Object;
      45: ifnull        56
      48: aload_0
      49: getfield      #17                 // Field jndiObject:Ljava/lang/Object;
      52: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: areturn
      56: aload_0
      57: invokevirtual #18                 // Method getExpectedType:()Ljava/lang/Class;
      60: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  protected java.lang.Class<?> createCompositeInterface(java.lang.Class<?>[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: invokestatic  #52                 // Method org/springframework/util/ClassUtils.createCompositeInterface:([Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: areturn

  static boolean access$100(org.springframework.jndi.JndiObjectFactoryBean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lookupOnStartup:Z
       4: ireturn

  static boolean access$200(org.springframework.jndi.JndiObjectFactoryBean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Z
       4: ireturn

  static java.lang.Class[] access$300(org.springframework.jndi.JndiObjectFactoryBean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxyInterfaces:[Ljava/lang/Class;
       4: areturn

  static java.lang.ClassLoader access$400(org.springframework.jndi.JndiObjectFactoryBean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       4: areturn

  static boolean access$500(org.springframework.jndi.JndiObjectFactoryBean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field exposeAccessContext:Z
       4: ireturn
}
