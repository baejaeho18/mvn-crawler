Compiled from "WebhookClientConfigFluent.java"
public interface io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent<A extends io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getCaBundle();

  public abstract A withCaBundle(java.lang.String);

  public abstract java.lang.Boolean hasCaBundle();

  public abstract A withNewCaBundle(java.lang.String);

  public abstract A withNewCaBundle(java.lang.StringBuilder);

  public abstract A withNewCaBundle(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.ServiceReference getService();

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.ServiceReference buildService();

  public abstract A withService(io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.ServiceReference);

  public abstract java.lang.Boolean hasService();

  public abstract A withNewService(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer);

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent$ServiceNested<A> withNewService();

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent$ServiceNested<A> withNewServiceLike(io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.ServiceReference);

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent$ServiceNested<A> editService();

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent$ServiceNested<A> editOrNewService();

  public abstract io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.WebhookClientConfigFluent$ServiceNested<A> editOrNewServiceLike(io.fabric8.kubernetes.api.model.admissionregistration.v1beta1.ServiceReference);

  public abstract java.lang.String getUrl();

  public abstract A withUrl(java.lang.String);

  public abstract java.lang.Boolean hasUrl();

  public abstract A withNewUrl(java.lang.String);

  public abstract A withNewUrl(java.lang.StringBuilder);

  public abstract A withNewUrl(java.lang.StringBuffer);
}
