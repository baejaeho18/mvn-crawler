Compiled from "Transmitter.java"
public final class okhttp3.internal.connection.Transmitter {
  private final okhttp3.OkHttpClient client;

  private final okhttp3.internal.connection.RealConnectionPool connectionPool;

  private final okhttp3.Call call;

  private final okhttp3.EventListener eventListener;

  private final okio.AsyncTimeout timeout;

  private java.lang.Object callStackTrace;

  private okhttp3.Request request;

  private okhttp3.internal.connection.ExchangeFinder exchangeFinder;

  public okhttp3.internal.connection.RealConnection connection;

  private okhttp3.internal.connection.Exchange exchange;

  private boolean exchangeRequestDone;

  private boolean exchangeResponseDone;

  private boolean canceled;

  private boolean timeoutEarlyExit;

  private boolean noMoreExchanges;

  static final boolean $assertionsDisabled;

  public okhttp3.internal.connection.Transmitter(okhttp3.OkHttpClient, okhttp3.Call);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class okhttp3/internal/connection/Transmitter$1
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method okhttp3/internal/connection/Transmitter$1."<init>":(Lokhttp3/internal/connection/Transmitter;)V
      13: putfield      #4                  // Field timeout:Lokio/AsyncTimeout;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      21: aload_0
      22: getstatic     #6                  // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
      25: aload_1
      26: invokevirtual #7                  // Method okhttp3/OkHttpClient.connectionPool:()Lokhttp3/ConnectionPool;
      29: invokevirtual #8                  // Method okhttp3/internal/Internal.realConnectionPool:(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;
      32: putfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
      35: aload_0
      36: aload_2
      37: putfield      #10                 // Field call:Lokhttp3/Call;
      40: aload_0
      41: aload_1
      42: invokevirtual #11                 // Method okhttp3/OkHttpClient.eventListenerFactory:()Lokhttp3/EventListener$Factory;
      45: aload_2
      46: invokeinterface #12,  2           // InterfaceMethod okhttp3/EventListener$Factory.create:(Lokhttp3/Call;)Lokhttp3/EventListener;
      51: putfield      #13                 // Field eventListener:Lokhttp3/EventListener;
      54: aload_0
      55: getfield      #4                  // Field timeout:Lokio/AsyncTimeout;
      58: aload_1
      59: invokevirtual #14                 // Method okhttp3/OkHttpClient.callTimeoutMillis:()I
      62: i2l
      63: getstatic     #15                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      66: invokevirtual #16                 // Method okio/AsyncTimeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      69: pop
      70: return

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field timeout:Lokio/AsyncTimeout;
       4: areturn

  public void timeoutEnter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field timeout:Lokio/AsyncTimeout;
       4: invokevirtual #17                 // Method okio/AsyncTimeout.enter:()V
       7: return

  public void timeoutEarlyExit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field timeoutEarlyExit:Z
       4: ifeq          15
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: iconst_1
      17: putfield      #18                 // Field timeoutEarlyExit:Z
      20: aload_0
      21: getfield      #4                  // Field timeout:Lokio/AsyncTimeout;
      24: invokevirtual #21                 // Method okio/AsyncTimeout.exit:()Z
      27: pop
      28: return

  private java.io.IOException timeoutExit(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #18                 // Field timeoutEarlyExit:Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field timeout:Lokio/AsyncTimeout;
      13: invokevirtual #21                 // Method okio/AsyncTimeout.exit:()Z
      16: ifne          21
      19: aload_1
      20: areturn
      21: new           #22                 // class java/io/InterruptedIOException
      24: dup
      25: ldc           #23                 // String timeout
      27: invokespecial #24                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      30: astore_2
      31: aload_1
      32: ifnull        41
      35: aload_2
      36: aload_1
      37: invokevirtual #25                 // Method java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      40: pop
      41: aload_2
      42: areturn

  public void callStart();
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
       4: ldc           #27                 // String response.body().close()
       6: invokevirtual #28                 // Method okhttp3/internal/platform/Platform.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;
       9: putfield      #29                 // Field callStackTrace:Ljava/lang/Object;
      12: aload_0
      13: getfield      #13                 // Field eventListener:Lokhttp3/EventListener;
      16: aload_0
      17: getfield      #10                 // Field call:Lokhttp3/Call;
      20: invokevirtual #30                 // Method okhttp3/EventListener.callStart:(Lokhttp3/Call;)V
      23: return

  public void prepareToConnect(okhttp3.Request);
    Code:
       0: aload_0
       1: getfield      #31                 // Field request:Lokhttp3/Request;
       4: ifnull        69
       7: aload_0
       8: getfield      #31                 // Field request:Lokhttp3/Request;
      11: invokevirtual #32                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      14: aload_1
      15: invokevirtual #32                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      18: invokestatic  #33                 // Method okhttp3/internal/Util.sameConnection:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z
      21: ifeq          35
      24: aload_0
      25: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      28: invokevirtual #35                 // Method okhttp3/internal/connection/ExchangeFinder.hasRouteToTry:()Z
      31: ifeq          35
      34: return
      35: aload_0
      36: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      39: ifnull        50
      42: new           #19                 // class java/lang/IllegalStateException
      45: dup
      46: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      49: athrow
      50: aload_0
      51: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      54: ifnull        69
      57: aload_0
      58: aconst_null
      59: iconst_1
      60: invokespecial #37                 // Method maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;
      63: pop
      64: aload_0
      65: aconst_null
      66: putfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      69: aload_0
      70: aload_1
      71: putfield      #31                 // Field request:Lokhttp3/Request;
      74: aload_0
      75: new           #38                 // class okhttp3/internal/connection/ExchangeFinder
      78: dup
      79: aload_0
      80: aload_0
      81: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
      84: aload_0
      85: aload_1
      86: invokevirtual #32                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      89: invokespecial #39                 // Method createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;
      92: aload_0
      93: getfield      #10                 // Field call:Lokhttp3/Call;
      96: aload_0
      97: getfield      #13                 // Field eventListener:Lokhttp3/EventListener;
     100: invokespecial #40                 // Method okhttp3/internal/connection/ExchangeFinder."<init>":(Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;)V
     103: putfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
     106: return

  private okhttp3.Address createAddress(okhttp3.HttpUrl);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aconst_null
       5: astore        4
       7: aload_1
       8: invokevirtual #41                 // Method okhttp3/HttpUrl.isHttps:()Z
      11: ifeq          39
      14: aload_0
      15: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      18: invokevirtual #42                 // Method okhttp3/OkHttpClient.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      26: invokevirtual #43                 // Method okhttp3/OkHttpClient.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;
      29: astore_3
      30: aload_0
      31: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      34: invokevirtual #44                 // Method okhttp3/OkHttpClient.certificatePinner:()Lokhttp3/CertificatePinner;
      37: astore        4
      39: new           #45                 // class okhttp3/Address
      42: dup
      43: aload_1
      44: invokevirtual #46                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      47: aload_1
      48: invokevirtual #47                 // Method okhttp3/HttpUrl.port:()I
      51: aload_0
      52: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      55: invokevirtual #48                 // Method okhttp3/OkHttpClient.dns:()Lokhttp3/Dns;
      58: aload_0
      59: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      62: invokevirtual #49                 // Method okhttp3/OkHttpClient.socketFactory:()Ljavax/net/SocketFactory;
      65: aload_2
      66: aload_3
      67: aload         4
      69: aload_0
      70: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      73: invokevirtual #50                 // Method okhttp3/OkHttpClient.proxyAuthenticator:()Lokhttp3/Authenticator;
      76: aload_0
      77: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      80: invokevirtual #51                 // Method okhttp3/OkHttpClient.proxy:()Ljava/net/Proxy;
      83: aload_0
      84: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      87: invokevirtual #52                 // Method okhttp3/OkHttpClient.protocols:()Ljava/util/List;
      90: aload_0
      91: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      94: invokevirtual #53                 // Method okhttp3/OkHttpClient.connectionSpecs:()Ljava/util/List;
      97: aload_0
      98: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
     101: invokevirtual #54                 // Method okhttp3/OkHttpClient.proxySelector:()Ljava/net/ProxySelector;
     104: invokespecial #55                 // Method okhttp3/Address."<init>":(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V
     107: areturn

  okhttp3.internal.connection.Exchange newExchange(okhttp3.Interceptor$Chain, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #56                 // Field noMoreExchanges:Z
      11: ifeq          24
      14: new           #19                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #57                 // String released
      20: invokespecial #58                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      28: ifnull        41
      31: new           #19                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #59                 // String cannot make a new request because the previous response is still open: please call response.close()
      37: invokespecial #58                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_3
      42: monitorexit
      43: goto          53
      46: astore        4
      48: aload_3
      49: monitorexit
      50: aload         4
      52: athrow
      53: aload_0
      54: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      57: aload_0
      58: getfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      61: aload_1
      62: iload_2
      63: invokevirtual #60                 // Method okhttp3/internal/connection/ExchangeFinder.find:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/ExchangeCodec;
      66: astore_3
      67: new           #61                 // class okhttp3/internal/connection/Exchange
      70: dup
      71: aload_0
      72: aload_0
      73: getfield      #10                 // Field call:Lokhttp3/Call;
      76: aload_0
      77: getfield      #13                 // Field eventListener:Lokhttp3/EventListener;
      80: aload_0
      81: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      84: aload_3
      85: invokespecial #62                 // Method okhttp3/internal/connection/Exchange."<init>":(Lokhttp3/internal/connection/Transmitter;Lokhttp3/Call;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V
      88: astore        4
      90: aload_0
      91: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
      94: dup
      95: astore        5
      97: monitorenter
      98: aload_0
      99: aload         4
     101: putfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
     104: aload_0
     105: iconst_0
     106: putfield      #63                 // Field exchangeRequestDone:Z
     109: aload_0
     110: iconst_0
     111: putfield      #64                 // Field exchangeResponseDone:Z
     114: aload         4
     116: aload         5
     118: monitorexit
     119: areturn
     120: astore        6
     122: aload         5
     124: monitorexit
     125: aload         6
     127: athrow
    Exception table:
       from    to  target type
           7    43    46   any
          46    50    46   any
          98   119   120   any
         120   125   120   any

  void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection);
    Code:
       0: getstatic     #65                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
      10: invokestatic  #66                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #67                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #68                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      28: ifnull        39
      31: new           #19                 // class java/lang/IllegalStateException
      34: dup
      35: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      38: athrow
      39: aload_0
      40: aload_1
      41: putfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      44: aload_1
      45: getfield      #70                 // Field okhttp3/internal/connection/RealConnection.transmitters:Ljava/util/List;
      48: new           #71                 // class okhttp3/internal/connection/Transmitter$TransmitterReference
      51: dup
      52: aload_0
      53: aload_0
      54: getfield      #29                 // Field callStackTrace:Ljava/lang/Object;
      57: invokespecial #72                 // Method okhttp3/internal/connection/Transmitter$TransmitterReference."<init>":(Lokhttp3/internal/connection/Transmitter;Ljava/lang/Object;)V
      60: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: return

  java.net.Socket releaseConnectionNoEvents();
    Code:
       0: getstatic     #65                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
      10: invokestatic  #66                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #67                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #68                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: iconst_m1
      25: istore_1
      26: iconst_0
      27: istore_2
      28: aload_0
      29: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      32: getfield      #70                 // Field okhttp3/internal/connection/RealConnection.transmitters:Ljava/util/List;
      35: invokeinterface #74,  1           // InterfaceMethod java/util/List.size:()I
      40: istore_3
      41: iload_2
      42: iload_3
      43: if_icmpge     84
      46: aload_0
      47: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      50: getfield      #70                 // Field okhttp3/internal/connection/RealConnection.transmitters:Ljava/util/List;
      53: iload_2
      54: invokeinterface #75,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      59: checkcast     #76                 // class java/lang/ref/Reference
      62: astore        4
      64: aload         4
      66: invokevirtual #77                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      69: aload_0
      70: if_acmpne     78
      73: iload_2
      74: istore_1
      75: goto          84
      78: iinc          2, 1
      81: goto          41
      84: iload_1
      85: iconst_m1
      86: if_icmpne     97
      89: new           #19                 // class java/lang/IllegalStateException
      92: dup
      93: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      96: athrow
      97: aload_0
      98: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
     101: astore_2
     102: aload_2
     103: getfield      #70                 // Field okhttp3/internal/connection/RealConnection.transmitters:Ljava/util/List;
     106: iload_1
     107: invokeinterface #78,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     112: pop
     113: aload_0
     114: aconst_null
     115: putfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
     118: aload_2
     119: getfield      #70                 // Field okhttp3/internal/connection/RealConnection.transmitters:Ljava/util/List;
     122: invokeinterface #79,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     127: ifeq          153
     130: aload_2
     131: invokestatic  #80                 // Method java/lang/System.nanoTime:()J
     134: putfield      #81                 // Field okhttp3/internal/connection/RealConnection.idleAtNanos:J
     137: aload_0
     138: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
     141: aload_2
     142: invokevirtual #82                 // Method okhttp3/internal/connection/RealConnectionPool.connectionBecameIdle:(Lokhttp3/internal/connection/RealConnection;)Z
     145: ifeq          153
     148: aload_2
     149: invokevirtual #83                 // Method okhttp3/internal/connection/RealConnection.socket:()Ljava/net/Socket;
     152: areturn
     153: aconst_null
     154: areturn

  public void exchangeDoneDueToException();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #56                 // Field noMoreExchanges:Z
      11: ifeq          22
      14: new           #19                 // class java/lang/IllegalStateException
      17: dup
      18: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      21: athrow
      22: aload_0
      23: aconst_null
      24: putfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           7    29    32   any
          32    35    32   any

  java.io.IOException exchangeMessageDone(okhttp3.internal.connection.Exchange, boolean, boolean, java.io.IOException);
    Code:
       0: iconst_0
       1: istore        5
       3: aload_0
       4: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       7: dup
       8: astore        6
      10: monitorenter
      11: aload_1
      12: aload_0
      13: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      16: if_acmpeq     25
      19: aload         4
      21: aload         6
      23: monitorexit
      24: areturn
      25: iconst_0
      26: istore        7
      28: iload_2
      29: ifeq          47
      32: aload_0
      33: getfield      #63                 // Field exchangeRequestDone:Z
      36: ifne          42
      39: iconst_1
      40: istore        7
      42: aload_0
      43: iconst_1
      44: putfield      #63                 // Field exchangeRequestDone:Z
      47: iload_3
      48: ifeq          66
      51: aload_0
      52: getfield      #64                 // Field exchangeResponseDone:Z
      55: ifne          61
      58: iconst_1
      59: istore        7
      61: aload_0
      62: iconst_1
      63: putfield      #64                 // Field exchangeResponseDone:Z
      66: aload_0
      67: getfield      #63                 // Field exchangeRequestDone:Z
      70: ifeq          109
      73: aload_0
      74: getfield      #64                 // Field exchangeResponseDone:Z
      77: ifeq          109
      80: iload         7
      82: ifeq          109
      85: iconst_1
      86: istore        5
      88: aload_0
      89: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      92: invokevirtual #84                 // Method okhttp3/internal/connection/Exchange.connection:()Lokhttp3/internal/connection/RealConnection;
      95: dup
      96: getfield      #85                 // Field okhttp3/internal/connection/RealConnection.successCount:I
      99: iconst_1
     100: iadd
     101: putfield      #85                 // Field okhttp3/internal/connection/RealConnection.successCount:I
     104: aload_0
     105: aconst_null
     106: putfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
     109: aload         6
     111: monitorexit
     112: goto          123
     115: astore        8
     117: aload         6
     119: monitorexit
     120: aload         8
     122: athrow
     123: iload         5
     125: ifeq          137
     128: aload_0
     129: aload         4
     131: iconst_0
     132: invokespecial #37                 // Method maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;
     135: astore        4
     137: aload         4
     139: areturn
    Exception table:
       from    to  target type
          11    24   115   any
          25   112   115   any
         115   120   115   any

  public java.io.IOException noMoreExchanges(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #56                 // Field noMoreExchanges:Z
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: aload_0
      23: aload_1
      24: iconst_0
      25: invokespecial #37                 // Method maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;
      28: areturn
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  private java.io.IOException maybeReleaseConnection(java.io.IOException, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore        6
       7: monitorenter
       8: iload_2
       9: ifeq          29
      12: aload_0
      13: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      16: ifnull        29
      19: new           #19                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #86                 // String cannot release connection while it is in use
      25: invokespecial #58                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      33: astore        4
      35: aload_0
      36: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      39: ifnull        67
      42: aload_0
      43: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      46: ifnonnull     67
      49: iload_2
      50: ifne          60
      53: aload_0
      54: getfield      #56                 // Field noMoreExchanges:Z
      57: ifeq          67
      60: aload_0
      61: invokevirtual #87                 // Method releaseConnectionNoEvents:()Ljava/net/Socket;
      64: goto          68
      67: aconst_null
      68: astore_3
      69: aload_0
      70: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      73: ifnull        79
      76: aconst_null
      77: astore        4
      79: aload_0
      80: getfield      #56                 // Field noMoreExchanges:Z
      83: ifeq          97
      86: aload_0
      87: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      90: ifnonnull     97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: istore        5
     100: aload         6
     102: monitorexit
     103: goto          114
     106: astore        7
     108: aload         6
     110: monitorexit
     111: aload         7
     113: athrow
     114: aload_3
     115: invokestatic  #88                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     118: aload         4
     120: ifnull        136
     123: aload_0
     124: getfield      #13                 // Field eventListener:Lokhttp3/EventListener;
     127: aload_0
     128: getfield      #10                 // Field call:Lokhttp3/Call;
     131: aload         4
     133: invokevirtual #89                 // Method okhttp3/EventListener.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V
     136: iload         5
     138: ifeq          189
     141: aload_1
     142: ifnull        149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: istore        6
     152: aload_0
     153: aload_1
     154: invokespecial #90                 // Method timeoutExit:(Ljava/io/IOException;)Ljava/io/IOException;
     157: astore_1
     158: iload         6
     160: ifeq          178
     163: aload_0
     164: getfield      #13                 // Field eventListener:Lokhttp3/EventListener;
     167: aload_0
     168: getfield      #10                 // Field call:Lokhttp3/Call;
     171: aload_1
     172: invokevirtual #91                 // Method okhttp3/EventListener.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
     175: goto          189
     178: aload_0
     179: getfield      #13                 // Field eventListener:Lokhttp3/EventListener;
     182: aload_0
     183: getfield      #10                 // Field call:Lokhttp3/Call;
     186: invokevirtual #92                 // Method okhttp3/EventListener.callEnd:(Lokhttp3/Call;)V
     189: aload_1
     190: areturn
    Exception table:
       from    to  target type
           8   103   106   any
         106   111   106   any

  public boolean canRetry();
    Code:
       0: aload_0
       1: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
       4: invokevirtual #93                 // Method okhttp3/internal/connection/ExchangeFinder.hasStreamFailure:()Z
       7: ifeq          24
      10: aload_0
      11: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      14: invokevirtual #35                 // Method okhttp3/internal/connection/ExchangeFinder.hasRouteToTry:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean hasExchange();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: monitorexit
      21: ireturn
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
    Exception table:
       from    to  target type
           7    21    22   any
          22    25    22   any

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #94                 // Field canceled:Z
      12: aload_0
      13: getfield      #36                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      16: astore_1
      17: aload_0
      18: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      21: ifnull        44
      24: aload_0
      25: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      28: invokevirtual #95                 // Method okhttp3/internal/connection/ExchangeFinder.connectingConnection:()Lokhttp3/internal/connection/RealConnection;
      31: ifnull        44
      34: aload_0
      35: getfield      #34                 // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
      38: invokevirtual #95                 // Method okhttp3/internal/connection/ExchangeFinder.connectingConnection:()Lokhttp3/internal/connection/RealConnection;
      41: goto          48
      44: aload_0
      45: getfield      #69                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      48: astore_2
      49: aload_3
      50: monitorexit
      51: goto          61
      54: astore        4
      56: aload_3
      57: monitorexit
      58: aload         4
      60: athrow
      61: aload_1
      62: ifnull        72
      65: aload_1
      66: invokevirtual #96                 // Method okhttp3/internal/connection/Exchange.cancel:()V
      69: goto          80
      72: aload_2
      73: ifnull        80
      76: aload_2
      77: invokevirtual #97                 // Method okhttp3/internal/connection/RealConnection.cancel:()V
      80: return
    Exception table:
       from    to  target type
           7    51    54   any
          54    58    54   any

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #94                 // Field canceled:Z
      11: aload_1
      12: monitorexit
      13: ireturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  static {};
    Code:
       0: ldc           #98                 // class okhttp3/internal/connection/Transmitter
       2: invokevirtual #99                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #65                 // Field $assertionsDisabled:Z
      16: return
}
