Compiled from "Http1ExchangeCodec.java"
public final class okhttp3.internal.http1.Http1ExchangeCodec implements okhttp3.internal.http.ExchangeCodec {
  private static final int STATE_IDLE;

  private static final int STATE_OPEN_REQUEST_BODY;

  private static final int STATE_WRITING_REQUEST_BODY;

  private static final int STATE_READ_RESPONSE_HEADERS;

  private static final int STATE_OPEN_RESPONSE_BODY;

  private static final int STATE_READING_RESPONSE_BODY;

  private static final int STATE_CLOSED;

  private static final int HEADER_LIMIT;

  private final okhttp3.OkHttpClient client;

  private final okhttp3.internal.connection.RealConnection realConnection;

  private final okio.BufferedSource source;

  private final okio.BufferedSink sink;

  private int state;

  private long headerLimit;

  private okhttp3.Headers trailers;

  public okhttp3.internal.http1.Http1ExchangeCodec(okhttp3.OkHttpClient, okhttp3.internal.connection.RealConnection, okio.BufferedSource, okio.BufferedSink);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field state:I
       9: aload_0
      10: ldc2_w        #12                 // long 262144l
      13: putfield      #14                 // Field headerLimit:J
      16: aload_0
      17: aload_1
      18: putfield      #2                  // Field client:Lokhttp3/OkHttpClient;
      21: aload_0
      22: aload_2
      23: putfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
      26: aload_0
      27: aload_3
      28: putfield      #6                  // Field source:Lokio/BufferedSource;
      31: aload_0
      32: aload         4
      34: putfield      #9                  // Field sink:Lokio/BufferedSink;
      37: return

  public okhttp3.internal.connection.RealConnection connection();
    Code:
       0: aload_0
       1: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
       4: areturn

  public okio.Sink createRequestBody(okhttp3.Request, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
       4: ifnull        27
       7: aload_1
       8: invokevirtual #15                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      11: invokevirtual #16                 // Method okhttp3/RequestBody.isDuplex:()Z
      14: ifeq          27
      17: new           #17                 // class java/net/ProtocolException
      20: dup
      21: ldc           #18                 // String Duplex connections are not supported for HTTP/1
      23: invokespecial #19                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: ldc           #20                 // String chunked
      29: aload_1
      30: ldc           #21                 // String Transfer-Encoding
      32: invokevirtual #22                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      38: ifeq          46
      41: aload_0
      42: invokespecial #24                 // Method newChunkedSink:()Lokio/Sink;
      45: areturn
      46: lload_2
      47: ldc2_w        #25                 // long -1l
      50: lcmp
      51: ifeq          59
      54: aload_0
      55: invokespecial #27                 // Method newKnownLengthSink:()Lokio/Sink;
      58: areturn
      59: new           #28                 // class java/lang/IllegalStateException
      62: dup
      63: ldc           #29                 // String Cannot stream a request body without chunked encoding or a known content length!
      65: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: athrow

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
       4: ifnull        14
       7: aload_0
       8: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
      11: invokevirtual #31                 // Method okhttp3/internal/connection/RealConnection.cancel:()V
      14: return

  public void writeRequestHeaders(okhttp3.Request) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
       5: invokevirtual #32                 // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
       8: invokevirtual #33                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
      11: invokevirtual #34                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      14: invokestatic  #35                 // Method okhttp3/internal/http/RequestLine.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;
      17: astore_2
      18: aload_0
      19: aload_1
      20: invokevirtual #36                 // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      23: aload_2
      24: invokevirtual #37                 // Method writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V
      27: return

  public long reportedContentLength(okhttp3.Response);
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method okhttp3/internal/http/HttpHeaders.hasBody:(Lokhttp3/Response;)Z
       4: ifne          9
       7: lconst_0
       8: lreturn
       9: ldc           #20                 // String chunked
      11: aload_1
      12: ldc           #21                 // String Transfer-Encoding
      14: invokevirtual #39                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          27
      23: ldc2_w        #25                 // long -1l
      26: lreturn
      27: aload_1
      28: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.contentLength:(Lokhttp3/Response;)J
      31: lreturn

  public okio.Source openResponseBodySource(okhttp3.Response);
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method okhttp3/internal/http/HttpHeaders.hasBody:(Lokhttp3/Response;)Z
       4: ifne          13
       7: aload_0
       8: lconst_0
       9: invokespecial #41                 // Method newFixedLengthSource:(J)Lokio/Source;
      12: areturn
      13: ldc           #20                 // String chunked
      15: aload_1
      16: ldc           #21                 // String Transfer-Encoding
      18: invokevirtual #39                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      24: ifeq          39
      27: aload_0
      28: aload_1
      29: invokevirtual #42                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      32: invokevirtual #43                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      35: invokespecial #44                 // Method newChunkedSource:(Lokhttp3/HttpUrl;)Lokio/Source;
      38: areturn
      39: aload_1
      40: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.contentLength:(Lokhttp3/Response;)J
      43: lstore_2
      44: lload_2
      45: ldc2_w        #25                 // long -1l
      48: lcmp
      49: ifeq          58
      52: aload_0
      53: lload_2
      54: invokespecial #41                 // Method newFixedLengthSource:(J)Lokio/Source;
      57: areturn
      58: aload_0
      59: invokespecial #45                 // Method newUnknownLengthSource:()Lokio/Source;
      62: areturn

  public okhttp3.Headers trailers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: bipush        6
       6: if_icmpeq     19
       9: new           #28                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #46                 // String too early; can\'t read the trailers yet
      15: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #4                  // Field trailers:Lokhttp3/Headers;
      23: ifnull        33
      26: aload_0
      27: getfield      #4                  // Field trailers:Lokhttp3/Headers;
      30: goto          36
      33: getstatic     #47                 // Field okhttp3/internal/Util.EMPTY_HEADERS:Lokhttp3/Headers;
      36: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void flushRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field sink:Lokio/BufferedSink;
       4: invokeinterface #48,  1           // InterfaceMethod okio/BufferedSink.flush:()V
       9: return

  public void finishRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field sink:Lokio/BufferedSink;
       4: invokeinterface #48,  1           // InterfaceMethod okio/BufferedSink.flush:()V
       9: return

  public void writeRequest(okhttp3.Headers, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: ifeq          37
       7: new           #28                 // class java/lang/IllegalStateException
      10: dup
      11: new           #49                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #51                 // String state:
      20: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #7                  // Field state:I
      27: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #9                  // Field sink:Lokio/BufferedSink;
      41: aload_2
      42: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      47: ldc           #56                 // String \r\n
      49: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      54: pop
      55: iconst_0
      56: istore_3
      57: aload_1
      58: invokevirtual #57                 // Method okhttp3/Headers.size:()I
      61: istore        4
      63: iload_3
      64: iload         4
      66: if_icmpge     114
      69: aload_0
      70: getfield      #9                  // Field sink:Lokio/BufferedSink;
      73: aload_1
      74: iload_3
      75: invokevirtual #58                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      78: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      83: ldc           #59                 // String :
      85: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      90: aload_1
      91: iload_3
      92: invokevirtual #60                 // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      95: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     100: ldc           #56                 // String \r\n
     102: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     107: pop
     108: iinc          3, 1
     111: goto          63
     114: aload_0
     115: getfield      #9                  // Field sink:Lokio/BufferedSink;
     118: ldc           #56                 // String \r\n
     120: invokeinterface #55,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     125: pop
     126: aload_0
     127: iconst_1
     128: putfield      #7                  // Field state:I
     131: return

  public okhttp3.Response$Builder readResponseHeaders(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: iconst_1
       5: if_icmpeq     46
       8: aload_0
       9: getfield      #7                  // Field state:I
      12: iconst_3
      13: if_icmpeq     46
      16: new           #28                 // class java/lang/IllegalStateException
      19: dup
      20: new           #49                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #51                 // String state:
      29: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #7                  // Field state:I
      36: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: invokespecial #61                 // Method readHeaderLine:()Ljava/lang/String;
      50: invokestatic  #62                 // Method okhttp3/internal/http/StatusLine.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
      53: astore_2
      54: new           #63                 // class okhttp3/Response$Builder
      57: dup
      58: invokespecial #64                 // Method okhttp3/Response$Builder."<init>":()V
      61: aload_2
      62: getfield      #65                 // Field okhttp3/internal/http/StatusLine.protocol:Lokhttp3/Protocol;
      65: invokevirtual #66                 // Method okhttp3/Response$Builder.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
      68: aload_2
      69: getfield      #67                 // Field okhttp3/internal/http/StatusLine.code:I
      72: invokevirtual #68                 // Method okhttp3/Response$Builder.code:(I)Lokhttp3/Response$Builder;
      75: aload_2
      76: getfield      #69                 // Field okhttp3/internal/http/StatusLine.message:Ljava/lang/String;
      79: invokevirtual #70                 // Method okhttp3/Response$Builder.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;
      82: aload_0
      83: invokespecial #3                  // Method readHeaders:()Lokhttp3/Headers;
      86: invokevirtual #71                 // Method okhttp3/Response$Builder.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;
      89: astore_3
      90: iload_1
      91: ifeq          105
      94: aload_2
      95: getfield      #67                 // Field okhttp3/internal/http/StatusLine.code:I
      98: bipush        100
     100: if_icmpne     105
     103: aconst_null
     104: areturn
     105: aload_2
     106: getfield      #67                 // Field okhttp3/internal/http/StatusLine.code:I
     109: bipush        100
     111: if_icmpne     121
     114: aload_0
     115: iconst_3
     116: putfield      #7                  // Field state:I
     119: aload_3
     120: areturn
     121: aload_0
     122: iconst_4
     123: putfield      #7                  // Field state:I
     126: aload_3
     127: areturn
     128: astore_2
     129: ldc           #73                 // String unknown
     131: astore_3
     132: aload_0
     133: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
     136: ifnull        156
     139: aload_0
     140: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
     143: invokevirtual #32                 // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
     146: invokevirtual #74                 // Method okhttp3/Route.address:()Lokhttp3/Address;
     149: invokevirtual #75                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     152: invokevirtual #76                 // Method okhttp3/HttpUrl.redact:()Ljava/lang/String;
     155: astore_3
     156: new           #77                 // class java/io/IOException
     159: dup
     160: new           #49                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     167: ldc           #78                 // String unexpected end of stream on
     169: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_3
     173: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: aload_2
     180: invokespecial #79                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     183: athrow
    Exception table:
       from    to  target type
          46   104   128   Class java/io/EOFException
         105   120   128   Class java/io/EOFException
         121   127   128   Class java/io/EOFException

  private java.lang.String readHeaderLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field source:Lokio/BufferedSource;
       4: aload_0
       5: getfield      #14                 // Field headerLimit:J
       8: invokeinterface #80,  3           // InterfaceMethod okio/BufferedSource.readUtf8LineStrict:(J)Ljava/lang/String;
      13: astore_1
      14: aload_0
      15: dup
      16: getfield      #14                 // Field headerLimit:J
      19: aload_1
      20: invokevirtual #81                 // Method java/lang/String.length:()I
      23: i2l
      24: lsub
      25: putfield      #14                 // Field headerLimit:J
      28: aload_1
      29: areturn

  private okhttp3.Headers readHeaders() throws java.io.IOException;
    Code:
       0: new           #82                 // class okhttp3/Headers$Builder
       3: dup
       4: invokespecial #83                 // Method okhttp3/Headers$Builder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #61                 // Method readHeaderLine:()Ljava/lang/String;
      12: dup
      13: astore_2
      14: invokevirtual #81                 // Method java/lang/String.length:()I
      17: ifeq          31
      20: getstatic     #84                 // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
      23: aload_1
      24: aload_2
      25: invokevirtual #85                 // Method okhttp3/internal/Internal.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;)V
      28: goto          8
      31: aload_1
      32: invokevirtual #86                 // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
      35: areturn

  private okio.Sink newChunkedSink();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: iconst_1
       5: if_icmpeq     38
       8: new           #28                 // class java/lang/IllegalStateException
      11: dup
      12: new           #49                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #51                 // String state:
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field state:I
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_2
      40: putfield      #7                  // Field state:I
      43: new           #87                 // class okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSink
      46: dup
      47: aload_0
      48: invokespecial #88                 // Method okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSink."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;)V
      51: areturn

  private okio.Sink newKnownLengthSink();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: iconst_1
       5: if_icmpeq     38
       8: new           #28                 // class java/lang/IllegalStateException
      11: dup
      12: new           #49                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #51                 // String state:
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field state:I
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_2
      40: putfield      #7                  // Field state:I
      43: new           #89                 // class okhttp3/internal/http1/Http1ExchangeCodec$KnownLengthSink
      46: dup
      47: aload_0
      48: aconst_null
      49: invokespecial #90                 // Method okhttp3/internal/http1/Http1ExchangeCodec$KnownLengthSink."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/internal/http1/Http1ExchangeCodec$1;)V
      52: areturn

  private okio.Source newFixedLengthSource(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: iconst_4
       5: if_icmpeq     38
       8: new           #28                 // class java/lang/IllegalStateException
      11: dup
      12: new           #49                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #51                 // String state:
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field state:I
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_5
      40: putfield      #7                  // Field state:I
      43: new           #91                 // class okhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource
      46: dup
      47: aload_0
      48: lload_1
      49: invokespecial #92                 // Method okhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;J)V
      52: areturn

  private okio.Source newChunkedSource(okhttp3.HttpUrl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: iconst_4
       5: if_icmpeq     38
       8: new           #28                 // class java/lang/IllegalStateException
      11: dup
      12: new           #49                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #51                 // String state:
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field state:I
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_5
      40: putfield      #7                  // Field state:I
      43: new           #93                 // class okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSource
      46: dup
      47: aload_0
      48: aload_1
      49: invokespecial #94                 // Method okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSource."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/HttpUrl;)V
      52: areturn

  private okio.Source newUnknownLengthSource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: iconst_4
       5: if_icmpeq     38
       8: new           #28                 // class java/lang/IllegalStateException
      11: dup
      12: new           #49                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #51                 // String state:
      21: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field state:I
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_5
      40: putfield      #7                  // Field state:I
      43: aload_0
      44: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
      47: invokevirtual #95                 // Method okhttp3/internal/connection/RealConnection.noNewExchanges:()V
      50: new           #96                 // class okhttp3/internal/http1/Http1ExchangeCodec$UnknownLengthSource
      53: dup
      54: aload_0
      55: aconst_null
      56: invokespecial #97                 // Method okhttp3/internal/http1/Http1ExchangeCodec$UnknownLengthSource."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/internal/http1/Http1ExchangeCodec$1;)V
      59: areturn

  private void detachTimeout(okio.ForwardingTimeout);
    Code:
       0: aload_1
       1: invokevirtual #98                 // Method okio/ForwardingTimeout.delegate:()Lokio/Timeout;
       4: astore_2
       5: aload_1
       6: getstatic     #99                 // Field okio/Timeout.NONE:Lokio/Timeout;
       9: invokevirtual #100                // Method okio/ForwardingTimeout.setDelegate:(Lokio/Timeout;)Lokio/ForwardingTimeout;
      12: pop
      13: aload_2
      14: invokevirtual #101                // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
      17: pop
      18: aload_2
      19: invokevirtual #102                // Method okio/Timeout.clearTimeout:()Lokio/Timeout;
      22: pop
      23: return

  public void skipConnectBody(okhttp3.Response) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.contentLength:(Lokhttp3/Response;)J
       4: lstore_2
       5: lload_2
       6: ldc2_w        #25                 // long -1l
       9: lcmp
      10: ifne          14
      13: return
      14: aload_0
      15: lload_2
      16: invokespecial #41                 // Method newFixedLengthSource:(J)Lokio/Source;
      19: astore        4
      21: aload         4
      23: ldc           #104                // int 2147483647
      25: getstatic     #105                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      28: invokestatic  #106                // Method okhttp3/internal/Util.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
      31: pop
      32: aload         4
      34: invokeinterface #107,  1          // InterfaceMethod okio/Source.close:()V
      39: return

  static okio.BufferedSink access$200(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sink:Lokio/BufferedSink;
       4: areturn

  static void access$300(okhttp3.internal.http1.Http1ExchangeCodec, okio.ForwardingTimeout);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method detachTimeout:(Lokio/ForwardingTimeout;)V
       5: return

  static int access$402(okhttp3.internal.http1.Http1ExchangeCodec, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field state:I
       6: ireturn

  static okio.BufferedSource access$500(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #6                  // Field source:Lokio/BufferedSource;
       4: areturn

  static okhttp3.internal.connection.RealConnection access$600(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #5                  // Field realConnection:Lokhttp3/internal/connection/RealConnection;
       4: areturn

  static int access$400(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: ireturn

  static okhttp3.Headers access$802(okhttp3.internal.http1.Http1ExchangeCodec, okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field trailers:Lokhttp3/Headers;
       6: areturn

  static okhttp3.Headers access$900(okhttp3.internal.http1.Http1ExchangeCodec) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method readHeaders:()Lokhttp3/Headers;
       4: areturn

  static okhttp3.OkHttpClient access$1000(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lokhttp3/OkHttpClient;
       4: areturn

  static okhttp3.Headers access$800(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #4                  // Field trailers:Lokhttp3/Headers;
       4: areturn
}
