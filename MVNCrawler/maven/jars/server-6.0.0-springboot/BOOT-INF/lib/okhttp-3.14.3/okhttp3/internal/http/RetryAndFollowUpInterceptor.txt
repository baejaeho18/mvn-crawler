Compiled from "RetryAndFollowUpInterceptor.java"
public final class okhttp3.internal.http.RetryAndFollowUpInterceptor implements okhttp3.Interceptor {
  private static final int MAX_FOLLOW_UPS;

  private final okhttp3.OkHttpClient client;

  public okhttp3.internal.http.RetryAndFollowUpInterceptor(okhttp3.OkHttpClient);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field client:Lokhttp3/OkHttpClient;
       9: return

  public okhttp3.Response intercept(okhttp3.Interceptor$Chain) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod okhttp3/Interceptor$Chain.request:()Lokhttp3/Request;
       6: astore_2
       7: aload_1
       8: checkcast     #6                  // class okhttp3/internal/http/RealInterceptorChain
      11: astore_3
      12: aload_3
      13: invokevirtual #7                  // Method okhttp3/internal/http/RealInterceptorChain.transmitter:()Lokhttp3/internal/connection/Transmitter;
      16: astore        4
      18: iconst_0
      19: istore        5
      21: aconst_null
      22: astore        6
      24: aload         4
      26: aload_2
      27: invokevirtual #8                  // Method okhttp3/internal/connection/Transmitter.prepareToConnect:(Lokhttp3/Request;)V
      30: aload         4
      32: invokevirtual #9                  // Method okhttp3/internal/connection/Transmitter.isCanceled:()Z
      35: ifeq          48
      38: new           #10                 // class java/io/IOException
      41: dup
      42: ldc           #11                 // String Canceled
      44: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iconst_0
      49: istore        8
      51: aload_3
      52: aload_2
      53: aload         4
      55: aconst_null
      56: invokevirtual #13                 // Method okhttp3/internal/http/RealInterceptorChain.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;
      59: astore        7
      61: iconst_1
      62: istore        8
      64: iload         8
      66: ifne          176
      69: aload         4
      71: invokevirtual #14                 // Method okhttp3/internal/connection/Transmitter.exchangeDoneDueToException:()V
      74: goto          176
      77: astore        9
      79: aload_0
      80: aload         9
      82: invokevirtual #16                 // Method okhttp3/internal/connection/RouteException.getLastConnectException:()Ljava/io/IOException;
      85: aload         4
      87: iconst_0
      88: aload_2
      89: invokespecial #17                 // Method recover:(Ljava/io/IOException;Lokhttp3/internal/connection/Transmitter;ZLokhttp3/Request;)Z
      92: ifne          101
      95: aload         9
      97: invokevirtual #18                 // Method okhttp3/internal/connection/RouteException.getFirstConnectException:()Ljava/io/IOException;
     100: athrow
     101: iload         8
     103: ifne          24
     106: aload         4
     108: invokevirtual #14                 // Method okhttp3/internal/connection/Transmitter.exchangeDoneDueToException:()V
     111: goto          24
     114: astore        9
     116: aload         9
     118: instanceof    #19                 // class okhttp3/internal/http2/ConnectionShutdownException
     121: ifne          128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: istore        10
     131: aload_0
     132: aload         9
     134: aload         4
     136: iload         10
     138: aload_2
     139: invokespecial #17                 // Method recover:(Ljava/io/IOException;Lokhttp3/internal/connection/Transmitter;ZLokhttp3/Request;)Z
     142: ifne          148
     145: aload         9
     147: athrow
     148: iload         8
     150: ifne          24
     153: aload         4
     155: invokevirtual #14                 // Method okhttp3/internal/connection/Transmitter.exchangeDoneDueToException:()V
     158: goto          24
     161: astore        11
     163: iload         8
     165: ifne          173
     168: aload         4
     170: invokevirtual #14                 // Method okhttp3/internal/connection/Transmitter.exchangeDoneDueToException:()V
     173: aload         11
     175: athrow
     176: aload         6
     178: ifnull        206
     181: aload         7
     183: invokevirtual #20                 // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     186: aload         6
     188: invokevirtual #20                 // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     191: aconst_null
     192: invokevirtual #21                 // Method okhttp3/Response$Builder.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;
     195: invokevirtual #22                 // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     198: invokevirtual #23                 // Method okhttp3/Response$Builder.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;
     201: invokevirtual #22                 // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     204: astore        7
     206: getstatic     #24                 // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
     209: aload         7
     211: invokevirtual #25                 // Method okhttp3/internal/Internal.exchange:(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
     214: astore        9
     216: aload         9
     218: ifnull        232
     221: aload         9
     223: invokevirtual #26                 // Method okhttp3/internal/connection/Exchange.connection:()Lokhttp3/internal/connection/RealConnection;
     226: invokevirtual #27                 // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
     229: goto          233
     232: aconst_null
     233: astore        10
     235: aload_0
     236: aload         7
     238: aload         10
     240: invokespecial #28                 // Method followUpRequest:(Lokhttp3/Response;Lokhttp3/Route;)Lokhttp3/Request;
     243: astore        11
     245: aload         11
     247: ifnonnull     271
     250: aload         9
     252: ifnull        268
     255: aload         9
     257: invokevirtual #29                 // Method okhttp3/internal/connection/Exchange.isDuplex:()Z
     260: ifeq          268
     263: aload         4
     265: invokevirtual #30                 // Method okhttp3/internal/connection/Transmitter.timeoutEarlyExit:()V
     268: aload         7
     270: areturn
     271: aload         11
     273: invokevirtual #31                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     276: astore        12
     278: aload         12
     280: ifnull        294
     283: aload         12
     285: invokevirtual #32                 // Method okhttp3/RequestBody.isOneShot:()Z
     288: ifeq          294
     291: aload         7
     293: areturn
     294: aload         7
     296: invokevirtual #33                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     299: invokestatic  #34                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     302: aload         4
     304: invokevirtual #35                 // Method okhttp3/internal/connection/Transmitter.hasExchange:()Z
     307: ifeq          315
     310: aload         9
     312: invokevirtual #36                 // Method okhttp3/internal/connection/Exchange.detachWithViolence:()V
     315: iinc          5, 1
     318: iload         5
     320: bipush        20
     322: if_icmple     353
     325: new           #38                 // class java/net/ProtocolException
     328: dup
     329: new           #39                 // class java/lang/StringBuilder
     332: dup
     333: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     336: ldc           #41                 // String Too many follow-up requests:
     338: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: iload         5
     343: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     346: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     349: invokespecial #45                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     352: athrow
     353: aload         11
     355: astore_2
     356: aload         7
     358: astore        6
     360: goto          24
    Exception table:
       from    to  target type
          51    64    77   Class okhttp3/internal/connection/RouteException
          51    64   114   Class java/io/IOException
          51    64   161   any
          77   101   161   any
         114   148   161   any
         161   163   161   any

  private boolean recover(java.io.IOException, okhttp3.internal.connection.Transmitter, boolean, okhttp3.Request);
    Code:
       0: aload_0
       1: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
       4: invokevirtual #46                 // Method okhttp3/OkHttpClient.retryOnConnectionFailure:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: iload_3
      13: ifeq          28
      16: aload_0
      17: aload_1
      18: aload         4
      20: invokespecial #47                 // Method requestIsOneShot:(Ljava/io/IOException;Lokhttp3/Request;)Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: aload_1
      30: iload_3
      31: invokespecial #48                 // Method isRecoverable:(Ljava/io/IOException;Z)Z
      34: ifne          39
      37: iconst_0
      38: ireturn
      39: aload_2
      40: invokevirtual #49                 // Method okhttp3/internal/connection/Transmitter.canRetry:()Z
      43: ifne          48
      46: iconst_0
      47: ireturn
      48: iconst_1
      49: ireturn

  private boolean requestIsOneShot(java.io.IOException, okhttp3.Request);
    Code:
       0: aload_2
       1: invokevirtual #31                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
       4: astore_3
       5: aload_3
       6: ifnull        16
       9: aload_3
      10: invokevirtual #32                 // Method okhttp3/RequestBody.isOneShot:()Z
      13: ifne          23
      16: aload_1
      17: instanceof    #50                 // class java/io/FileNotFoundException
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private boolean isRecoverable(java.io.IOException, boolean);
    Code:
       0: aload_1
       1: instanceof    #38                 // class java/net/ProtocolException
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: instanceof    #51                 // class java/io/InterruptedIOException
      13: ifeq          33
      16: aload_1
      17: instanceof    #52                 // class java/net/SocketTimeoutException
      20: ifeq          31
      23: iload_2
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: aload_1
      34: instanceof    #53                 // class javax/net/ssl/SSLHandshakeException
      37: ifeq          52
      40: aload_1
      41: invokevirtual #54                 // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      44: instanceof    #55                 // class java/security/cert/CertificateException
      47: ifeq          52
      50: iconst_0
      51: ireturn
      52: aload_1
      53: instanceof    #56                 // class javax/net/ssl/SSLPeerUnverifiedException
      56: ifeq          61
      59: iconst_0
      60: ireturn
      61: iconst_1
      62: ireturn

  private okhttp3.Request followUpRequest(okhttp3.Response, okhttp3.Route) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #57                 // class java/lang/IllegalStateException
       7: dup
       8: invokespecial #58                 // Method java/lang/IllegalStateException."<init>":()V
      11: athrow
      12: aload_1
      13: invokevirtual #59                 // Method okhttp3/Response.code:()I
      16: istore_3
      17: aload_1
      18: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      21: invokevirtual #61                 // Method okhttp3/Request.method:()Ljava/lang/String;
      24: astore        4
      26: iload_3
      27: lookupswitch  { // 10
                   300: 209
                   301: 209
                   302: 209
                   303: 209
                   307: 187
                   308: 187
                   401: 172
                   407: 116
                   408: 429
                   503: 503
               default: 542
          }
     116: aload_2
     117: ifnull        127
     120: aload_2
     121: invokevirtual #62                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
     124: goto          134
     127: aload_0
     128: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     131: invokevirtual #63                 // Method okhttp3/OkHttpClient.proxy:()Ljava/net/Proxy;
     134: astore        5
     136: aload         5
     138: invokevirtual #64                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
     141: getstatic     #65                 // Field java/net/Proxy$Type.HTTP:Ljava/net/Proxy$Type;
     144: if_acmpeq     157
     147: new           #38                 // class java/net/ProtocolException
     150: dup
     151: ldc           #66                 // String Received HTTP_PROXY_AUTH (407) code while not using proxy
     153: invokespecial #45                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: aload_0
     158: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     161: invokevirtual #67                 // Method okhttp3/OkHttpClient.proxyAuthenticator:()Lokhttp3/Authenticator;
     164: aload_2
     165: aload_1
     166: invokeinterface #68,  3           // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     171: areturn
     172: aload_0
     173: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     176: invokevirtual #69                 // Method okhttp3/OkHttpClient.authenticator:()Lokhttp3/Authenticator;
     179: aload_2
     180: aload_1
     181: invokeinterface #68,  3           // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     186: areturn
     187: aload         4
     189: ldc           #70                 // String GET
     191: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     194: ifne          209
     197: aload         4
     199: ldc           #72                 // String HEAD
     201: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     204: ifne          209
     207: aconst_null
     208: areturn
     209: aload_0
     210: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     213: invokevirtual #73                 // Method okhttp3/OkHttpClient.followRedirects:()Z
     216: ifne          221
     219: aconst_null
     220: areturn
     221: aload_1
     222: ldc           #74                 // String Location
     224: invokevirtual #75                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
     227: astore        6
     229: aload         6
     231: ifnonnull     236
     234: aconst_null
     235: areturn
     236: aload_1
     237: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     240: invokevirtual #76                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     243: aload         6
     245: invokevirtual #77                 // Method okhttp3/HttpUrl.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;
     248: astore        7
     250: aload         7
     252: ifnonnull     257
     255: aconst_null
     256: areturn
     257: aload         7
     259: invokevirtual #78                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
     262: aload_1
     263: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     266: invokevirtual #76                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     269: invokevirtual #78                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
     272: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     275: istore        8
     277: iload         8
     279: ifne          294
     282: aload_0
     283: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     286: invokevirtual #79                 // Method okhttp3/OkHttpClient.followSslRedirects:()Z
     289: ifne          294
     292: aconst_null
     293: areturn
     294: aload_1
     295: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     298: invokevirtual #80                 // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
     301: astore        9
     303: aload         4
     305: invokestatic  #81                 // Method okhttp3/internal/http/HttpMethod.permitsRequestBody:(Ljava/lang/String;)Z
     308: ifeq          395
     311: aload         4
     313: invokestatic  #82                 // Method okhttp3/internal/http/HttpMethod.redirectsWithBody:(Ljava/lang/String;)Z
     316: istore        10
     318: aload         4
     320: invokestatic  #83                 // Method okhttp3/internal/http/HttpMethod.redirectsToGet:(Ljava/lang/String;)Z
     323: ifeq          338
     326: aload         9
     328: ldc           #70                 // String GET
     330: aconst_null
     331: invokevirtual #84                 // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
     334: pop
     335: goto          366
     338: iload         10
     340: ifeq          353
     343: aload_1
     344: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     347: invokevirtual #31                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     350: goto          354
     353: aconst_null
     354: astore        11
     356: aload         9
     358: aload         4
     360: aload         11
     362: invokevirtual #84                 // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
     365: pop
     366: iload         10
     368: ifne          395
     371: aload         9
     373: ldc           #85                 // String Transfer-Encoding
     375: invokevirtual #86                 // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     378: pop
     379: aload         9
     381: ldc           #87                 // String Content-Length
     383: invokevirtual #86                 // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     386: pop
     387: aload         9
     389: ldc           #88                 // String Content-Type
     391: invokevirtual #86                 // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     394: pop
     395: aload_1
     396: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     399: invokevirtual #76                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     402: aload         7
     404: invokestatic  #89                 // Method okhttp3/internal/Util.sameConnection:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z
     407: ifne          418
     410: aload         9
     412: ldc           #90                 // String Authorization
     414: invokevirtual #86                 // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     417: pop
     418: aload         9
     420: aload         7
     422: invokevirtual #91                 // Method okhttp3/Request$Builder.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
     425: invokevirtual #92                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
     428: areturn
     429: aload_0
     430: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     433: invokevirtual #46                 // Method okhttp3/OkHttpClient.retryOnConnectionFailure:()Z
     436: ifne          441
     439: aconst_null
     440: areturn
     441: aload_1
     442: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     445: invokevirtual #31                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     448: astore        10
     450: aload         10
     452: ifnull        465
     455: aload         10
     457: invokevirtual #32                 // Method okhttp3/RequestBody.isOneShot:()Z
     460: ifeq          465
     463: aconst_null
     464: areturn
     465: aload_1
     466: invokevirtual #93                 // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     469: ifnull        487
     472: aload_1
     473: invokevirtual #93                 // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     476: invokevirtual #59                 // Method okhttp3/Response.code:()I
     479: sipush        408
     482: if_icmpne     487
     485: aconst_null
     486: areturn
     487: aload_0
     488: aload_1
     489: iconst_0
     490: invokespecial #94                 // Method retryAfter:(Lokhttp3/Response;I)I
     493: ifle          498
     496: aconst_null
     497: areturn
     498: aload_1
     499: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     502: areturn
     503: aload_1
     504: invokevirtual #93                 // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     507: ifnull        525
     510: aload_1
     511: invokevirtual #93                 // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     514: invokevirtual #59                 // Method okhttp3/Response.code:()I
     517: sipush        503
     520: if_icmpne     525
     523: aconst_null
     524: areturn
     525: aload_0
     526: aload_1
     527: ldc           #96                 // int 2147483647
     529: invokespecial #94                 // Method retryAfter:(Lokhttp3/Response;I)I
     532: ifne          540
     535: aload_1
     536: invokevirtual #60                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     539: areturn
     540: aconst_null
     541: areturn
     542: aconst_null
     543: areturn

  private int retryAfter(okhttp3.Response, int);
    Code:
       0: aload_1
       1: ldc           #97                 // String Retry-After
       3: invokevirtual #75                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: iload_2
      12: ireturn
      13: aload_3
      14: ldc           #98                 // String \\d+
      16: invokevirtual #99                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      19: ifeq          30
      22: aload_3
      23: invokestatic  #100                // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      26: invokevirtual #101                // Method java/lang/Integer.intValue:()I
      29: ireturn
      30: ldc           #96                 // int 2147483647
      32: ireturn
}
