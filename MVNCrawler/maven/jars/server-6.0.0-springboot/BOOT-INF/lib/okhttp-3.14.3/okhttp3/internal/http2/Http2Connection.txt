Compiled from "Http2Connection.java"
public final class okhttp3.internal.http2.Http2Connection implements java.io.Closeable {
  static final int OKHTTP_CLIENT_WINDOW_SIZE;

  private static final java.util.concurrent.ExecutorService listenerExecutor;

  final boolean client;

  final okhttp3.internal.http2.Http2Connection$Listener listener;

  final java.util.Map<java.lang.Integer, okhttp3.internal.http2.Http2Stream> streams;

  final java.lang.String connectionName;

  int lastGoodStreamId;

  int nextStreamId;

  boolean shutdown;

  private final java.util.concurrent.ScheduledExecutorService writerExecutor;

  private final java.util.concurrent.ExecutorService pushExecutor;

  final okhttp3.internal.http2.PushObserver pushObserver;

  private boolean awaitingPong;

  long unacknowledgedBytesRead;

  long bytesLeftInWriteWindow;

  okhttp3.internal.http2.Settings okHttpSettings;

  final okhttp3.internal.http2.Settings peerSettings;

  final java.net.Socket socket;

  final okhttp3.internal.http2.Http2Writer writer;

  final okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable;

  final java.util.Set<java.lang.Integer> currentPushRequests;

  static final boolean $assertionsDisabled;

  okhttp3.internal.http2.Http2Connection(okhttp3.internal.http2.Http2Connection$Builder);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #9                  // Field streams:Ljava/util/Map;
      15: aload_0
      16: lconst_0
      17: putfield      #10                 // Field unacknowledgedBytesRead:J
      20: aload_0
      21: new           #1                  // class okhttp3/internal/http2/Settings
      24: dup
      25: invokespecial #11                 // Method okhttp3/internal/http2/Settings."<init>":()V
      28: putfield      #12                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      31: aload_0
      32: new           #1                  // class okhttp3/internal/http2/Settings
      35: dup
      36: invokespecial #11                 // Method okhttp3/internal/http2/Settings."<init>":()V
      39: putfield      #13                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
      42: aload_0
      43: new           #14                 // class java/util/LinkedHashSet
      46: dup
      47: invokespecial #15                 // Method java/util/LinkedHashSet."<init>":()V
      50: putfield      #16                 // Field currentPushRequests:Ljava/util/Set;
      53: aload_0
      54: aload_1
      55: getfield      #17                 // Field okhttp3/internal/http2/Http2Connection$Builder.pushObserver:Lokhttp3/internal/http2/PushObserver;
      58: putfield      #18                 // Field pushObserver:Lokhttp3/internal/http2/PushObserver;
      61: aload_0
      62: aload_1
      63: getfield      #19                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
      66: putfield      #20                 // Field client:Z
      69: aload_0
      70: aload_1
      71: getfield      #21                 // Field okhttp3/internal/http2/Http2Connection$Builder.listener:Lokhttp3/internal/http2/Http2Connection$Listener;
      74: putfield      #22                 // Field listener:Lokhttp3/internal/http2/Http2Connection$Listener;
      77: aload_0
      78: aload_1
      79: getfield      #19                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_2
      90: putfield      #23                 // Field nextStreamId:I
      93: aload_1
      94: getfield      #19                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
      97: ifeq          110
     100: aload_0
     101: dup
     102: getfield      #23                 // Field nextStreamId:I
     105: iconst_2
     106: iadd
     107: putfield      #23                 // Field nextStreamId:I
     110: aload_1
     111: getfield      #19                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
     114: ifeq          129
     117: aload_0
     118: getfield      #12                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
     121: bipush        7
     123: ldc           #25                 // int 16777216
     125: invokevirtual #26                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     128: pop
     129: aload_0
     130: aload_1
     131: getfield      #27                 // Field okhttp3/internal/http2/Http2Connection$Builder.connectionName:Ljava/lang/String;
     134: putfield      #28                 // Field connectionName:Ljava/lang/String;
     137: aload_0
     138: new           #29                 // class java/util/concurrent/ScheduledThreadPoolExecutor
     141: dup
     142: iconst_1
     143: ldc           #30                 // String OkHttp %s Writer
     145: iconst_1
     146: anewarray     #31                 // class java/lang/Object
     149: dup
     150: iconst_0
     151: aload_0
     152: getfield      #28                 // Field connectionName:Ljava/lang/String;
     155: aastore
     156: invokestatic  #32                 // Method okhttp3/internal/Util.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     159: iconst_0
     160: invokestatic  #33                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
     163: invokespecial #34                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
     166: putfield      #3                  // Field writerExecutor:Ljava/util/concurrent/ScheduledExecutorService;
     169: aload_1
     170: getfield      #35                 // Field okhttp3/internal/http2/Http2Connection$Builder.pingIntervalMillis:I
     173: ifeq          210
     176: aload_0
     177: getfield      #3                  // Field writerExecutor:Ljava/util/concurrent/ScheduledExecutorService;
     180: new           #36                 // class okhttp3/internal/http2/Http2Connection$PingRunnable
     183: dup
     184: aload_0
     185: iconst_0
     186: iconst_0
     187: iconst_0
     188: invokespecial #37                 // Method okhttp3/internal/http2/Http2Connection$PingRunnable."<init>":(Lokhttp3/internal/http2/Http2Connection;ZII)V
     191: aload_1
     192: getfield      #35                 // Field okhttp3/internal/http2/Http2Connection$Builder.pingIntervalMillis:I
     195: i2l
     196: aload_1
     197: getfield      #35                 // Field okhttp3/internal/http2/Http2Connection$Builder.pingIntervalMillis:I
     200: i2l
     201: getstatic     #38                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     204: invokeinterface #39,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     209: pop
     210: aload_0
     211: new           #40                 // class java/util/concurrent/ThreadPoolExecutor
     214: dup
     215: iconst_0
     216: iconst_1
     217: ldc2_w        #41                 // long 60l
     220: getstatic     #43                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     223: new           #44                 // class java/util/concurrent/LinkedBlockingQueue
     226: dup
     227: invokespecial #45                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
     230: ldc           #46                 // String OkHttp %s Push Observer
     232: iconst_1
     233: anewarray     #31                 // class java/lang/Object
     236: dup
     237: iconst_0
     238: aload_0
     239: getfield      #28                 // Field connectionName:Ljava/lang/String;
     242: aastore
     243: invokestatic  #32                 // Method okhttp3/internal/Util.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     246: iconst_1
     247: invokestatic  #33                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
     250: invokespecial #47                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
     253: putfield      #48                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
     256: aload_0
     257: getfield      #13                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
     260: bipush        7
     262: ldc           #49                 // int 65535
     264: invokevirtual #26                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     267: pop
     268: aload_0
     269: getfield      #13                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
     272: iconst_5
     273: sipush        16384
     276: invokevirtual #26                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     279: pop
     280: aload_0
     281: aload_0
     282: getfield      #13                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
     285: invokevirtual #51                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     288: i2l
     289: putfield      #52                 // Field bytesLeftInWriteWindow:J
     292: aload_0
     293: aload_1
     294: getfield      #53                 // Field okhttp3/internal/http2/Http2Connection$Builder.socket:Ljava/net/Socket;
     297: putfield      #54                 // Field socket:Ljava/net/Socket;
     300: aload_0
     301: new           #55                 // class okhttp3/internal/http2/Http2Writer
     304: dup
     305: aload_1
     306: getfield      #56                 // Field okhttp3/internal/http2/Http2Connection$Builder.sink:Lokio/BufferedSink;
     309: aload_0
     310: getfield      #20                 // Field client:Z
     313: invokespecial #57                 // Method okhttp3/internal/http2/Http2Writer."<init>":(Lokio/BufferedSink;Z)V
     316: putfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     319: aload_0
     320: new           #59                 // class okhttp3/internal/http2/Http2Connection$ReaderRunnable
     323: dup
     324: aload_0
     325: new           #60                 // class okhttp3/internal/http2/Http2Reader
     328: dup
     329: aload_1
     330: getfield      #61                 // Field okhttp3/internal/http2/Http2Connection$Builder.source:Lokio/BufferedSource;
     333: aload_0
     334: getfield      #20                 // Field client:Z
     337: invokespecial #62                 // Method okhttp3/internal/http2/Http2Reader."<init>":(Lokio/BufferedSource;Z)V
     340: invokespecial #63                 // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable."<init>":(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V
     343: putfield      #64                 // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
     346: return

  public synchronized int openStreamCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field streams:Ljava/util/Map;
       4: invokeinterface #65,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  synchronized okhttp3.internal.http2.Http2Stream getStream(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field streams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #67,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #68                 // class okhttp3/internal/http2/Http2Stream
      16: areturn

  synchronized okhttp3.internal.http2.Http2Stream removeStream(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field streams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #69,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #68                 // class okhttp3/internal/http2/Http2Stream
      16: astore_2
      17: aload_0
      18: invokevirtual #70                 // Method java/lang/Object.notifyAll:()V
      21: aload_2
      22: areturn

  public synchronized int maxConcurrentStreams();
    Code:
       0: aload_0
       1: getfield      #13                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
       4: ldc           #72                 // int 2147483647
       6: invokevirtual #73                 // Method okhttp3/internal/http2/Settings.getMaxConcurrentStreams:(I)I
       9: ireturn

  synchronized void updateConnectionFlowControl(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field unacknowledgedBytesRead:J
       5: lload_1
       6: ladd
       7: putfield      #10                 // Field unacknowledgedBytesRead:J
      10: aload_0
      11: getfield      #10                 // Field unacknowledgedBytesRead:J
      14: aload_0
      15: getfield      #12                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      18: invokevirtual #51                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      21: iconst_2
      22: idiv
      23: i2l
      24: lcmp
      25: iflt          42
      28: aload_0
      29: iconst_0
      30: aload_0
      31: getfield      #10                 // Field unacknowledgedBytesRead:J
      34: invokevirtual #74                 // Method writeWindowUpdateLater:(IJ)V
      37: aload_0
      38: lconst_0
      39: putfield      #10                 // Field unacknowledgedBytesRead:J
      42: return

  public okhttp3.internal.http2.Http2Stream pushStream(int, java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field client:Z
       4: ifeq          17
       7: new           #75                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #76                 // String Client cannot push requests.
      13: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: aload_2
      20: iload_3
      21: invokespecial #78                 // Method newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
      24: areturn

  public okhttp3.internal.http2.Http2Stream newStream(java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: iload_2
       4: invokespecial #78                 // Method newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
       7: areturn

  private okhttp3.internal.http2.Http2Stream newStream(int, java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_0
      15: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      18: dup
      19: astore        9
      21: monitorenter
      22: aload_0
      23: dup
      24: astore        10
      26: monitorenter
      27: aload_0
      28: getfield      #23                 // Field nextStreamId:I
      31: ldc           #79                 // int 1073741823
      33: if_icmple     43
      36: aload_0
      37: getstatic     #80                 // Field okhttp3/internal/http2/ErrorCode.REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
      40: invokevirtual #81                 // Method shutdown:(Lokhttp3/internal/http2/ErrorCode;)V
      43: aload_0
      44: getfield      #82                 // Field shutdown:Z
      47: ifeq          58
      50: new           #83                 // class okhttp3/internal/http2/ConnectionShutdownException
      53: dup
      54: invokespecial #84                 // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      57: athrow
      58: aload_0
      59: getfield      #23                 // Field nextStreamId:I
      62: istore        8
      64: aload_0
      65: dup
      66: getfield      #23                 // Field nextStreamId:I
      69: iconst_2
      70: iadd
      71: putfield      #23                 // Field nextStreamId:I
      74: new           #68                 // class okhttp3/internal/http2/Http2Stream
      77: dup
      78: iload         8
      80: aload_0
      81: iload         4
      83: iload         5
      85: aconst_null
      86: invokespecial #85                 // Method okhttp3/internal/http2/Http2Stream."<init>":(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V
      89: astore        7
      91: iload_3
      92: ifeq          114
      95: aload_0
      96: getfield      #52                 // Field bytesLeftInWriteWindow:J
      99: lconst_0
     100: lcmp
     101: ifeq          114
     104: aload         7
     106: getfield      #86                 // Field okhttp3/internal/http2/Http2Stream.bytesLeftInWriteWindow:J
     109: lconst_0
     110: lcmp
     111: ifne          118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: istore        6
     121: aload         7
     123: invokevirtual #87                 // Method okhttp3/internal/http2/Http2Stream.isOpen:()Z
     126: ifeq          146
     129: aload_0
     130: getfield      #9                  // Field streams:Ljava/util/Map;
     133: iload         8
     135: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     138: aload         7
     140: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: aload         10
     148: monitorexit
     149: goto          160
     152: astore        11
     154: aload         10
     156: monitorexit
     157: aload         11
     159: athrow
     160: iload_1
     161: ifne          179
     164: aload_0
     165: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     168: iload         4
     170: iload         8
     172: aload_2
     173: invokevirtual #89                 // Method okhttp3/internal/http2/Http2Writer.headers:(ZILjava/util/List;)V
     176: goto          207
     179: aload_0
     180: getfield      #20                 // Field client:Z
     183: ifeq          196
     186: new           #90                 // class java/lang/IllegalArgumentException
     189: dup
     190: ldc           #91                 // String client streams shouldn\'t have associated stream IDs
     192: invokespecial #92                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     195: athrow
     196: aload_0
     197: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     200: iload_1
     201: iload         8
     203: aload_2
     204: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Writer.pushPromise:(IILjava/util/List;)V
     207: aload         9
     209: monitorexit
     210: goto          221
     213: astore        12
     215: aload         9
     217: monitorexit
     218: aload         12
     220: athrow
     221: iload         6
     223: ifeq          233
     226: aload_0
     227: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     230: invokevirtual #94                 // Method okhttp3/internal/http2/Http2Writer.flush:()V
     233: aload         7
     235: areturn
    Exception table:
       from    to  target type
          27   149   152   any
         152   157   152   any
          22   210   213   any
         213   218   213   any

  void writeHeaders(int, boolean, java.util.List<okhttp3.internal.http2.Header>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: iload_2
       5: iload_1
       6: aload_3
       7: invokevirtual #89                 // Method okhttp3/internal/http2/Http2Writer.headers:(ZILjava/util/List;)V
      10: return

  public void writeData(int, boolean, okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lconst_0
       3: lcmp
       4: ifne          19
       7: aload_0
       8: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: iload_2
      12: iload_1
      13: aload_3
      14: iconst_0
      15: invokevirtual #95                 // Method okhttp3/internal/http2/Http2Writer.data:(ZILokio/Buffer;I)V
      18: return
      19: lload         4
      21: lconst_0
      22: lcmp
      23: ifle          182
      26: aload_0
      27: dup
      28: astore        7
      30: monitorenter
      31: aload_0
      32: getfield      #52                 // Field bytesLeftInWriteWindow:J
      35: lconst_0
      36: lcmp
      37: ifgt          73
      40: aload_0
      41: getfield      #9                  // Field streams:Ljava/util/Map;
      44: iload_1
      45: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokeinterface #96,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      53: ifne          66
      56: new           #97                 // class java/io/IOException
      59: dup
      60: ldc           #98                 // String stream closed
      62: invokespecial #99                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: invokevirtual #100                // Method java/lang/Object.wait:()V
      70: goto          31
      73: goto          92
      76: astore        8
      78: invokestatic  #102                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      81: invokevirtual #103                // Method java/lang/Thread.interrupt:()V
      84: new           #104                // class java/io/InterruptedIOException
      87: dup
      88: invokespecial #105                // Method java/io/InterruptedIOException."<init>":()V
      91: athrow
      92: lload         4
      94: aload_0
      95: getfield      #52                 // Field bytesLeftInWriteWindow:J
      98: invokestatic  #106                // Method java/lang/Math.min:(JJ)J
     101: l2i
     102: istore        6
     104: iload         6
     106: aload_0
     107: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     110: invokevirtual #107                // Method okhttp3/internal/http2/Http2Writer.maxDataLength:()I
     113: invokestatic  #108                // Method java/lang/Math.min:(II)I
     116: istore        6
     118: aload_0
     119: dup
     120: getfield      #52                 // Field bytesLeftInWriteWindow:J
     123: iload         6
     125: i2l
     126: lsub
     127: putfield      #52                 // Field bytesLeftInWriteWindow:J
     130: aload         7
     132: monitorexit
     133: goto          144
     136: astore        9
     138: aload         7
     140: monitorexit
     141: aload         9
     143: athrow
     144: lload         4
     146: iload         6
     148: i2l
     149: lsub
     150: lstore        4
     152: aload_0
     153: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     156: iload_2
     157: ifeq          171
     160: lload         4
     162: lconst_0
     163: lcmp
     164: ifne          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: iload_1
     173: aload_3
     174: iload         6
     176: invokevirtual #95                 // Method okhttp3/internal/http2/Http2Writer.data:(ZILokio/Buffer;I)V
     179: goto          19
     182: return
    Exception table:
       from    to  target type
          31    73    76   Class java/lang/InterruptedException
          31   133   136   any
         136   141   136   any

  void writeSynResetLater(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writerExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: new           #109                // class okhttp3/internal/http2/Http2Connection$1
       7: dup
       8: aload_0
       9: ldc           #110                // String OkHttp %s stream %d
      11: iconst_2
      12: anewarray     #31                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #28                 // Field connectionName:Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_1
      24: iload_1
      25: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: iload_1
      30: aload_2
      31: invokespecial #111                // Method okhttp3/internal/http2/Http2Connection$1."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V
      34: invokeinterface #112,  2          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      39: goto          43
      42: astore_3
      43: return
    Exception table:
       from    to  target type
           0    39    42   Class java/util/concurrent/RejectedExecutionException

  void writeSynReset(int, okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: iload_1
       5: aload_2
       6: invokevirtual #114                // Method okhttp3/internal/http2/Http2Writer.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V
       9: return

  void writeWindowUpdateLater(int, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writerExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: new           #115                // class okhttp3/internal/http2/Http2Connection$2
       7: dup
       8: aload_0
       9: ldc           #116                // String OkHttp Window Update %s stream %d
      11: iconst_2
      12: anewarray     #31                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #28                 // Field connectionName:Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_1
      24: iload_1
      25: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: iload_1
      30: lload_2
      31: invokespecial #117                // Method okhttp3/internal/http2/Http2Connection$2."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;IJ)V
      34: invokeinterface #112,  2          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      39: goto          44
      42: astore        4
      44: return
    Exception table:
       from    to  target type
           0    39    42   Class java/util/concurrent/RejectedExecutionException

  void writePing(boolean, int, int);
    Code:
       0: iload_1
       1: ifne          45
       4: aload_0
       5: dup
       6: astore        5
       8: monitorenter
       9: aload_0
      10: getfield      #2                  // Field awaitingPong:Z
      13: istore        4
      15: aload_0
      16: iconst_1
      17: putfield      #2                  // Field awaitingPong:Z
      20: aload         5
      22: monitorexit
      23: goto          34
      26: astore        6
      28: aload         5
      30: monitorexit
      31: aload         6
      33: athrow
      34: iload         4
      36: ifeq          45
      39: aload_0
      40: aconst_null
      41: invokespecial #5                  // Method failConnection:(Ljava/io/IOException;)V
      44: return
      45: aload_0
      46: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      49: iload_1
      50: iload_2
      51: iload_3
      52: invokevirtual #118                // Method okhttp3/internal/http2/Http2Writer.ping:(ZII)V
      55: goto          66
      58: astore        4
      60: aload_0
      61: aload         4
      63: invokespecial #5                  // Method failConnection:(Ljava/io/IOException;)V
      66: return
    Exception table:
       from    to  target type
           9    23    26   any
          26    31    26   any
          45    55    58   Class java/io/IOException

  void writePingAndAwaitPong() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: iconst_0
       2: ldc           #119                // int 1330343787
       4: ldc           #120                // int -257978967
       6: invokevirtual #121                // Method writePing:(ZII)V
       9: aload_0
      10: invokevirtual #122                // Method awaitPong:()V
      13: return

  synchronized void awaitPong() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field awaitingPong:Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #100                // Method java/lang/Object.wait:()V
      11: goto          0
      14: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: invokevirtual #94                 // Method okhttp3/internal/http2/Http2Writer.flush:()V
       7: return

  public void shutdown(okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: astore        4
      11: monitorenter
      12: aload_0
      13: getfield      #82                 // Field shutdown:Z
      16: ifeq          25
      19: aload         4
      21: monitorexit
      22: aload_2
      23: monitorexit
      24: return
      25: aload_0
      26: iconst_1
      27: putfield      #82                 // Field shutdown:Z
      30: aload_0
      31: getfield      #123                // Field lastGoodStreamId:I
      34: istore_3
      35: aload         4
      37: monitorexit
      38: goto          49
      41: astore        5
      43: aload         4
      45: monitorexit
      46: aload         5
      48: athrow
      49: aload_0
      50: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      53: iload_3
      54: aload_1
      55: getstatic     #124                // Field okhttp3/internal/Util.EMPTY_BYTE_ARRAY:[B
      58: invokevirtual #125                // Method okhttp3/internal/http2/Http2Writer.goAway:(ILokhttp3/internal/http2/ErrorCode;[B)V
      61: aload_2
      62: monitorexit
      63: goto          73
      66: astore        6
      68: aload_2
      69: monitorexit
      70: aload         6
      72: athrow
      73: return
    Exception table:
       from    to  target type
          12    22    41   any
          25    38    41   any
          41    46    41   any
           7    24    66   any
          25    63    66   any
          66    70    66   any

  public void close();
    Code:
       0: aload_0
       1: getstatic     #126                // Field okhttp3/internal/http2/ErrorCode.NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
       4: getstatic     #127                // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
       7: aconst_null
       8: invokevirtual #128                // Method close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
      11: return

  void close(okhttp3.internal.http2.ErrorCode, okhttp3.internal.http2.ErrorCode, java.io.IOException);
    Code:
       0: getstatic     #129                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #130                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #131                // class java/lang/AssertionError
      16: dup
      17: invokespecial #132                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: invokevirtual #81                 // Method shutdown:(Lokhttp3/internal/http2/ErrorCode;)V
      26: goto          31
      29: astore        4
      31: aconst_null
      32: astore        4
      34: aload_0
      35: dup
      36: astore        5
      38: monitorenter
      39: aload_0
      40: getfield      #9                  // Field streams:Ljava/util/Map;
      43: invokeinterface #133,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      48: ifne          91
      51: aload_0
      52: getfield      #9                  // Field streams:Ljava/util/Map;
      55: invokeinterface #134,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      60: aload_0
      61: getfield      #9                  // Field streams:Ljava/util/Map;
      64: invokeinterface #65,  1           // InterfaceMethod java/util/Map.size:()I
      69: anewarray     #68                 // class okhttp3/internal/http2/Http2Stream
      72: invokeinterface #135,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      77: checkcast     #136                // class "[Lokhttp3/internal/http2/Http2Stream;"
      80: astore        4
      82: aload_0
      83: getfield      #9                  // Field streams:Ljava/util/Map;
      86: invokeinterface #137,  1          // InterfaceMethod java/util/Map.clear:()V
      91: aload         5
      93: monitorexit
      94: goto          105
      97: astore        6
      99: aload         5
     101: monitorexit
     102: aload         6
     104: athrow
     105: aload         4
     107: ifnull        154
     110: aload         4
     112: astore        5
     114: aload         5
     116: arraylength
     117: istore        6
     119: iconst_0
     120: istore        7
     122: iload         7
     124: iload         6
     126: if_icmpge     154
     129: aload         5
     131: iload         7
     133: aaload
     134: astore        8
     136: aload         8
     138: aload_2
     139: aload_3
     140: invokevirtual #138                // Method okhttp3/internal/http2/Http2Stream.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
     143: goto          148
     146: astore        9
     148: iinc          7, 1
     151: goto          122
     154: aload_0
     155: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     158: invokevirtual #139                // Method okhttp3/internal/http2/Http2Writer.close:()V
     161: goto          166
     164: astore        5
     166: aload_0
     167: getfield      #54                 // Field socket:Ljava/net/Socket;
     170: invokevirtual #140                // Method java/net/Socket.close:()V
     173: goto          178
     176: astore        5
     178: aload_0
     179: getfield      #3                  // Field writerExecutor:Ljava/util/concurrent/ScheduledExecutorService;
     182: invokeinterface #141,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
     187: aload_0
     188: getfield      #48                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
     191: invokeinterface #142,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
     196: return
    Exception table:
       from    to  target type
          21    26    29   Class java/io/IOException
          39    94    97   any
          97   102    97   any
         136   143   146   Class java/io/IOException
         154   161   164   Class java/io/IOException
         166   173   176   Class java/io/IOException

  private void failConnection(java.io.IOException);
    Code:
       0: aload_0
       1: getstatic     #143                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
       4: getstatic     #143                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
       7: aload_1
       8: invokevirtual #128                // Method close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
      11: return

  public void start() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #144                // Method start:(Z)V
       5: return

  void start(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          49
       4: aload_0
       5: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       8: invokevirtual #145                // Method okhttp3/internal/http2/Http2Writer.connectionPreface:()V
      11: aload_0
      12: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      15: aload_0
      16: getfield      #12                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      19: invokevirtual #146                // Method okhttp3/internal/http2/Http2Writer.settings:(Lokhttp3/internal/http2/Settings;)V
      22: aload_0
      23: getfield      #12                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      26: invokevirtual #51                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      29: istore_2
      30: iload_2
      31: ldc           #49                 // int 65535
      33: if_icmpeq     49
      36: aload_0
      37: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      40: iconst_0
      41: iload_2
      42: ldc           #49                 // int 65535
      44: isub
      45: i2l
      46: invokevirtual #147                // Method okhttp3/internal/http2/Http2Writer.windowUpdate:(IJ)V
      49: new           #148                // class java/lang/Thread
      52: dup
      53: aload_0
      54: getfield      #64                 // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
      57: invokespecial #149                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      60: invokevirtual #150                // Method java/lang/Thread.start:()V
      63: return

  public void setSettings(okhttp3.internal.http2.Settings) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #82                 // Field shutdown:Z
      15: ifeq          26
      18: new           #83                 // class okhttp3/internal/http2/ConnectionShutdownException
      21: dup
      22: invokespecial #84                 // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #12                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      30: aload_1
      31: invokevirtual #151                // Method okhttp3/internal/http2/Settings.merge:(Lokhttp3/internal/http2/Settings;)V
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        4
      41: aload_3
      42: monitorexit
      43: aload         4
      45: athrow
      46: aload_0
      47: getfield      #58                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      50: aload_1
      51: invokevirtual #146                // Method okhttp3/internal/http2/Http2Writer.settings:(Lokhttp3/internal/http2/Settings;)V
      54: aload_2
      55: monitorexit
      56: goto          66
      59: astore        5
      61: aload_2
      62: monitorexit
      63: aload         5
      65: athrow
      66: return
    Exception table:
       from    to  target type
          11    36    39   any
          39    43    39   any
           7    56    59   any
          59    63    59   any

  public synchronized boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #82                 // Field shutdown:Z
       4: ireturn

  boolean pushedStream(int);
    Code:
       0: iload_1
       1: ifeq          14
       4: iload_1
       5: iconst_1
       6: iand
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void pushRequestLater(int, java.util.List<okhttp3.internal.http2.Header>);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #16                 // Field currentPushRequests:Ljava/util/Set;
       8: iload_1
       9: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokeinterface #152,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          31
      20: aload_0
      21: iload_1
      22: getstatic     #143                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      25: invokevirtual #153                // Method writeSynResetLater:(ILokhttp3/internal/http2/ErrorCode;)V
      28: aload_3
      29: monitorexit
      30: return
      31: aload_0
      32: getfield      #16                 // Field currentPushRequests:Ljava/util/Set;
      35: iload_1
      36: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #154,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        4
      52: aload_3
      53: monitorexit
      54: aload         4
      56: athrow
      57: aload_0
      58: new           #155                // class okhttp3/internal/http2/Http2Connection$3
      61: dup
      62: aload_0
      63: ldc           #156                // String OkHttp %s Push Request[%s]
      65: iconst_2
      66: anewarray     #31                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_0
      72: getfield      #28                 // Field connectionName:Ljava/lang/String;
      75: aastore
      76: dup
      77: iconst_1
      78: iload_1
      79: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: aastore
      83: iload_1
      84: aload_2
      85: invokespecial #157                // Method okhttp3/internal/http2/Http2Connection$3."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V
      88: invokespecial #158                // Method pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V
      91: goto          95
      94: astore_3
      95: return
    Exception table:
       from    to  target type
           4    30    50   any
          31    47    50   any
          50    54    50   any
          57    91    94   Class java/util/concurrent/RejectedExecutionException

  void pushHeadersLater(int, java.util.List<okhttp3.internal.http2.Header>, boolean);
    Code:
       0: aload_0
       1: new           #159                // class okhttp3/internal/http2/Http2Connection$4
       4: dup
       5: aload_0
       6: ldc           #160                // String OkHttp %s Push Headers[%s]
       8: iconst_2
       9: anewarray     #31                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #28                 // Field connectionName:Ljava/lang/String;
      18: aastore
      19: dup
      20: iconst_1
      21: iload_1
      22: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: iload_1
      27: aload_2
      28: iload_3
      29: invokespecial #161                // Method okhttp3/internal/http2/Http2Connection$4."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V
      32: invokespecial #158                // Method pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V
      35: goto          40
      38: astore        4
      40: return
    Exception table:
       from    to  target type
           0    35    38   Class java/util/concurrent/RejectedExecutionException

  void pushDataLater(int, okio.BufferedSource, int, boolean) throws java.io.IOException;
    Code:
       0: new           #162                // class okio/Buffer
       3: dup
       4: invokespecial #163                // Method okio/Buffer."<init>":()V
       7: astore        5
       9: aload_2
      10: iload_3
      11: i2l
      12: invokeinterface #164,  3          // InterfaceMethod okio/BufferedSource.require:(J)V
      17: aload_2
      18: aload         5
      20: iload_3
      21: i2l
      22: invokeinterface #165,  4          // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
      27: pop2
      28: aload         5
      30: invokevirtual #166                // Method okio/Buffer.size:()J
      33: iload_3
      34: i2l
      35: lcmp
      36: ifeq          74
      39: new           #97                 // class java/io/IOException
      42: dup
      43: new           #167                // class java/lang/StringBuilder
      46: dup
      47: invokespecial #168                // Method java/lang/StringBuilder."<init>":()V
      50: aload         5
      52: invokevirtual #166                // Method okio/Buffer.size:()J
      55: invokevirtual #169                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: ldc           #170                // String  !=
      60: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: iload_3
      64: invokevirtual #172                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: invokevirtual #173                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #99                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: new           #174                // class okhttp3/internal/http2/Http2Connection$5
      78: dup
      79: aload_0
      80: ldc           #175                // String OkHttp %s Push Data[%s]
      82: iconst_2
      83: anewarray     #31                 // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload_0
      89: getfield      #28                 // Field connectionName:Ljava/lang/String;
      92: aastore
      93: dup
      94: iconst_1
      95: iload_1
      96: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: aastore
     100: iload_1
     101: aload         5
     103: iload_3
     104: iload         4
     106: invokespecial #176                // Method okhttp3/internal/http2/Http2Connection$5."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/Buffer;IZ)V
     109: invokespecial #158                // Method pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V
     112: return

  void pushResetLater(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_0
       1: new           #177                // class okhttp3/internal/http2/Http2Connection$6
       4: dup
       5: aload_0
       6: ldc           #178                // String OkHttp %s Push Reset[%s]
       8: iconst_2
       9: anewarray     #31                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #28                 // Field connectionName:Ljava/lang/String;
      18: aastore
      19: dup
      20: iconst_1
      21: iload_1
      22: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: iload_1
      27: aload_2
      28: invokespecial #179                // Method okhttp3/internal/http2/Http2Connection$6."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V
      31: invokespecial #158                // Method pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V
      34: return

  private synchronized void pushExecutorExecute(okhttp3.internal.NamedRunnable);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method isShutdown:()Z
       4: ifne          17
       7: aload_0
       8: getfield      #48                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
      11: aload_1
      12: invokeinterface #181,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      17: return

  static void access$000(okhttp3.internal.http2.Http2Connection, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method failConnection:(Ljava/io/IOException;)V
       5: return

  static java.util.concurrent.ExecutorService access$100();
    Code:
       0: getstatic     #4                  // Field listenerExecutor:Ljava/util/concurrent/ExecutorService;
       3: areturn

  static java.util.concurrent.ScheduledExecutorService access$200(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writerExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static boolean access$302(okhttp3.internal.http2.Http2Connection, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field awaitingPong:Z
       6: ireturn

  static {};
    Code:
       0: ldc           #24                 // class okhttp3/internal/http2/Http2Connection
       2: invokevirtual #182                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #129                // Field $assertionsDisabled:Z
      16: new           #40                 // class java/util/concurrent/ThreadPoolExecutor
      19: dup
      20: iconst_0
      21: ldc           #72                 // int 2147483647
      23: ldc2_w        #41                 // long 60l
      26: getstatic     #43                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      29: new           #183                // class java/util/concurrent/SynchronousQueue
      32: dup
      33: invokespecial #184                // Method java/util/concurrent/SynchronousQueue."<init>":()V
      36: ldc           #185                // String OkHttp Http2Connection
      38: iconst_1
      39: invokestatic  #33                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
      42: invokespecial #47                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      45: putstatic     #4                  // Field listenerExecutor:Ljava/util/concurrent/ExecutorService;
      48: return
}
