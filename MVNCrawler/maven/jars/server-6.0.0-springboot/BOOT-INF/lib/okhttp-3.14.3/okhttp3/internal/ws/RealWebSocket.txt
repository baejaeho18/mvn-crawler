Compiled from "RealWebSocket.java"
public final class okhttp3.internal.ws.RealWebSocket implements okhttp3.WebSocket,okhttp3.internal.ws.WebSocketReader$FrameCallback {
  private static final java.util.List<okhttp3.Protocol> ONLY_HTTP1;

  private static final long MAX_QUEUE_SIZE;

  private static final long CANCEL_AFTER_CLOSE_MILLIS;

  private final okhttp3.Request originalRequest;

  final okhttp3.WebSocketListener listener;

  private final java.util.Random random;

  private final long pingIntervalMillis;

  private final java.lang.String key;

  private okhttp3.Call call;

  private final java.lang.Runnable writerRunnable;

  private okhttp3.internal.ws.WebSocketReader reader;

  private okhttp3.internal.ws.WebSocketWriter writer;

  private java.util.concurrent.ScheduledExecutorService executor;

  private okhttp3.internal.ws.RealWebSocket$Streams streams;

  private final java.util.ArrayDeque<okio.ByteString> pongQueue;

  private final java.util.ArrayDeque<java.lang.Object> messageAndCloseQueue;

  private long queueSize;

  private boolean enqueuedClose;

  private java.util.concurrent.ScheduledFuture<?> cancelFuture;

  private int receivedCloseCode;

  private java.lang.String receivedCloseReason;

  private boolean failed;

  private int sentPingCount;

  private int receivedPingCount;

  private int receivedPongCount;

  private boolean awaitingPong;

  static final boolean $assertionsDisabled;

  public okhttp3.internal.ws.RealWebSocket(okhttp3.Request, okhttp3.WebSocketListener, java.util.Random, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #5                  // Field pongQueue:Ljava/util/ArrayDeque;
      15: aload_0
      16: new           #3                  // class java/util/ArrayDeque
      19: dup
      20: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      23: putfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      26: aload_0
      27: iconst_m1
      28: putfield      #7                  // Field receivedCloseCode:I
      31: ldc           #8                  // String GET
      33: aload_1
      34: invokevirtual #9                  // Method okhttp3/Request.method:()Ljava/lang/String;
      37: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          73
      43: new           #11                 // class java/lang/IllegalArgumentException
      46: dup
      47: new           #12                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #14                 // String Request must be GET:
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #9                  // Method okhttp3/Request.method:()Ljava/lang/String;
      63: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: aload_1
      75: putfield      #18                 // Field originalRequest:Lokhttp3/Request;
      78: aload_0
      79: aload_2
      80: putfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
      83: aload_0
      84: aload_3
      85: putfield      #20                 // Field random:Ljava/util/Random;
      88: aload_0
      89: lload         4
      91: putfield      #21                 // Field pingIntervalMillis:J
      94: bipush        16
      96: newarray       byte
      98: astore        6
     100: aload_3
     101: aload         6
     103: invokevirtual #22                 // Method java/util/Random.nextBytes:([B)V
     106: aload_0
     107: aload         6
     109: invokestatic  #23                 // Method okio/ByteString.of:([B)Lokio/ByteString;
     112: invokevirtual #24                 // Method okio/ByteString.base64:()Ljava/lang/String;
     115: putfield      #25                 // Field key:Ljava/lang/String;
     118: aload_0
     119: aload_0
     120: invokedynamic #26,  0             // InvokeDynamic #0:run:(Lokhttp3/internal/ws/RealWebSocket;)Ljava/lang/Runnable;
     125: putfield      #27                 // Field writerRunnable:Ljava/lang/Runnable;
     128: return

  public okhttp3.Request request();
    Code:
       0: aload_0
       1: getfield      #18                 // Field originalRequest:Lokhttp3/Request;
       4: areturn

  public synchronized long queueSize();
    Code:
       0: aload_0
       1: getfield      #28                 // Field queueSize:J
       4: lreturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #29                 // Field call:Lokhttp3/Call;
       4: invokeinterface #30,  1           // InterfaceMethod okhttp3/Call.cancel:()V
       9: return

  public void connect(okhttp3.OkHttpClient);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method okhttp3/OkHttpClient.newBuilder:()Lokhttp3/OkHttpClient$Builder;
       4: getstatic     #32                 // Field okhttp3/EventListener.NONE:Lokhttp3/EventListener;
       7: invokevirtual #33                 // Method okhttp3/OkHttpClient$Builder.eventListener:(Lokhttp3/EventListener;)Lokhttp3/OkHttpClient$Builder;
      10: getstatic     #34                 // Field ONLY_HTTP1:Ljava/util/List;
      13: invokevirtual #35                 // Method okhttp3/OkHttpClient$Builder.protocols:(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;
      16: invokevirtual #36                 // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      19: astore_1
      20: aload_0
      21: getfield      #18                 // Field originalRequest:Lokhttp3/Request;
      24: invokevirtual #37                 // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
      27: ldc           #38                 // String Upgrade
      29: ldc           #39                 // String websocket
      31: invokevirtual #40                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      34: ldc           #41                 // String Connection
      36: ldc           #38                 // String Upgrade
      38: invokevirtual #40                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      41: ldc           #42                 // String Sec-WebSocket-Key
      43: aload_0
      44: getfield      #25                 // Field key:Ljava/lang/String;
      47: invokevirtual #40                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      50: ldc           #43                 // String Sec-WebSocket-Version
      52: ldc           #44                 // String 13
      54: invokevirtual #40                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      57: invokevirtual #45                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      60: astore_2
      61: aload_0
      62: getstatic     #46                 // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
      65: aload_1
      66: aload_2
      67: invokevirtual #47                 // Method okhttp3/internal/Internal.newWebSocketCall:(Lokhttp3/OkHttpClient;Lokhttp3/Request;)Lokhttp3/Call;
      70: putfield      #29                 // Field call:Lokhttp3/Call;
      73: aload_0
      74: getfield      #29                 // Field call:Lokhttp3/Call;
      77: new           #48                 // class okhttp3/internal/ws/RealWebSocket$1
      80: dup
      81: aload_0
      82: aload_2
      83: invokespecial #49                 // Method okhttp3/internal/ws/RealWebSocket$1."<init>":(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/Request;)V
      86: invokeinterface #50,  2           // InterfaceMethod okhttp3/Call.enqueue:(Lokhttp3/Callback;)V
      91: return

  void checkUpgradeSuccess(okhttp3.Response, okhttp3.internal.connection.Exchange) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method okhttp3/Response.code:()I
       4: bipush        101
       6: if_icmpeq     56
       9: new           #52                 // class java/net/ProtocolException
      12: dup
      13: new           #12                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #53                 // String Expected HTTP 101 response but was \'
      22: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #51                 // Method okhttp3/Response.code:()I
      29: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #55                 // String
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #56                 // Method okhttp3/Response.message:()Ljava/lang/String;
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #57                 // String \'
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #58                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_1
      57: ldc           #41                 // String Connection
      59: invokevirtual #59                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
      62: astore_3
      63: ldc           #38                 // String Upgrade
      65: aload_3
      66: invokevirtual #60                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      69: ifne          104
      72: new           #52                 // class java/net/ProtocolException
      75: dup
      76: new           #12                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #61                 // String Expected \'Connection\' header value \'Upgrade\' but was \'
      85: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_3
      89: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #57                 // String \'
      94: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #58                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_1
     105: ldc           #38                 // String Upgrade
     107: invokevirtual #59                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
     110: astore        4
     112: ldc           #39                 // String websocket
     114: aload         4
     116: invokevirtual #60                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     119: ifne          155
     122: new           #52                 // class java/net/ProtocolException
     125: dup
     126: new           #12                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #62                 // String Expected \'Upgrade\' header value \'websocket\' but was \'
     135: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload         4
     140: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: ldc           #57                 // String \'
     145: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #58                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aload_1
     156: ldc           #63                 // String Sec-WebSocket-Accept
     158: invokevirtual #59                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
     161: astore        5
     163: new           #12                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     170: aload_0
     171: getfield      #25                 // Field key:Ljava/lang/String;
     174: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc           #64                 // String 258EAFA5-E914-47DA-95CA-C5AB0DC85B11
     179: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokestatic  #65                 // Method okio/ByteString.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;
     188: invokevirtual #66                 // Method okio/ByteString.sha1:()Lokio/ByteString;
     191: invokevirtual #24                 // Method okio/ByteString.base64:()Ljava/lang/String;
     194: astore        6
     196: aload         6
     198: aload         5
     200: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     203: ifne          249
     206: new           #52                 // class java/net/ProtocolException
     209: dup
     210: new           #12                 // class java/lang/StringBuilder
     213: dup
     214: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     217: ldc           #67                 // String Expected \'Sec-WebSocket-Accept\' header value \'
     219: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: aload         6
     224: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #68                 // String \' but was \'
     229: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload         5
     234: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #57                 // String \'
     239: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokespecial #58                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     248: athrow
     249: aload_2
     250: ifnonnull     263
     253: new           #52                 // class java/net/ProtocolException
     256: dup
     257: ldc           #69                 // String Web Socket exchange missing: bad interceptor?
     259: invokespecial #58                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     262: athrow
     263: return

  public void initReaderAndWriter(java.lang.String, okhttp3.internal.ws.RealWebSocket$Streams) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: aload_2
       6: putfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
       9: aload_0
      10: new           #71                 // class okhttp3/internal/ws/WebSocketWriter
      13: dup
      14: aload_2
      15: getfield      #72                 // Field okhttp3/internal/ws/RealWebSocket$Streams.client:Z
      18: aload_2
      19: getfield      #73                 // Field okhttp3/internal/ws/RealWebSocket$Streams.sink:Lokio/BufferedSink;
      22: aload_0
      23: getfield      #20                 // Field random:Ljava/util/Random;
      26: invokespecial #74                 // Method okhttp3/internal/ws/WebSocketWriter."<init>":(ZLokio/BufferedSink;Ljava/util/Random;)V
      29: putfield      #75                 // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      32: aload_0
      33: new           #76                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      36: dup
      37: iconst_1
      38: aload_1
      39: iconst_0
      40: invokestatic  #77                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
      43: invokespecial #78                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      46: putfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      49: aload_0
      50: getfield      #21                 // Field pingIntervalMillis:J
      53: lconst_0
      54: lcmp
      55: ifeq          87
      58: aload_0
      59: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      62: new           #80                 // class okhttp3/internal/ws/RealWebSocket$PingRunnable
      65: dup
      66: aload_0
      67: invokespecial #81                 // Method okhttp3/internal/ws/RealWebSocket$PingRunnable."<init>":(Lokhttp3/internal/ws/RealWebSocket;)V
      70: aload_0
      71: getfield      #21                 // Field pingIntervalMillis:J
      74: aload_0
      75: getfield      #21                 // Field pingIntervalMillis:J
      78: getstatic     #82                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      81: invokeinterface #83,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      86: pop
      87: aload_0
      88: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      91: invokevirtual #84                 // Method java/util/ArrayDeque.isEmpty:()Z
      94: ifne          101
      97: aload_0
      98: invokespecial #85                 // Method runWriter:()V
     101: aload_3
     102: monitorexit
     103: goto          113
     106: astore        4
     108: aload_3
     109: monitorexit
     110: aload         4
     112: athrow
     113: aload_0
     114: new           #86                 // class okhttp3/internal/ws/WebSocketReader
     117: dup
     118: aload_2
     119: getfield      #72                 // Field okhttp3/internal/ws/RealWebSocket$Streams.client:Z
     122: aload_2
     123: getfield      #87                 // Field okhttp3/internal/ws/RealWebSocket$Streams.source:Lokio/BufferedSource;
     126: aload_0
     127: invokespecial #88                 // Method okhttp3/internal/ws/WebSocketReader."<init>":(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V
     130: putfield      #89                 // Field reader:Lokhttp3/internal/ws/WebSocketReader;
     133: return
    Exception table:
       from    to  target type
           4   103   106   any
         106   110   106   any

  public void loopReader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field receivedCloseCode:I
       4: iconst_m1
       5: if_icmpne     18
       8: aload_0
       9: getfield      #89                 // Field reader:Lokhttp3/internal/ws/WebSocketReader;
      12: invokevirtual #90                 // Method okhttp3/internal/ws/WebSocketReader.processNextFrame:()V
      15: goto          0
      18: return

  boolean processNextFrame() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field reader:Lokhttp3/internal/ws/WebSocketReader;
       4: invokevirtual #90                 // Method okhttp3/internal/ws/WebSocketReader.processNextFrame:()V
       7: aload_0
       8: getfield      #7                  // Field receivedCloseCode:I
      11: iconst_m1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: astore_1
      22: aload_0
      23: aload_1
      24: aconst_null
      25: invokevirtual #92                 // Method failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V
      28: iconst_0
      29: ireturn
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/Exception

  void awaitTermination(int, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: iload_1
       5: i2l
       6: aload_2
       7: invokeinterface #93,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      12: pop
      13: return

  void tearDown() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        18
       7: aload_0
       8: getfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
      11: iconst_0
      12: invokeinterface #95,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: aload_0
      19: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      22: invokeinterface #96,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      27: aload_0
      28: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      31: ldc2_w        #97                 // long 10l
      34: getstatic     #99                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      37: invokeinterface #93,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      42: pop
      43: return

  synchronized int sentPingCount();
    Code:
       0: aload_0
       1: getfield      #100                // Field sentPingCount:I
       4: ireturn

  synchronized int receivedPingCount();
    Code:
       0: aload_0
       1: getfield      #101                // Field receivedPingCount:I
       4: ireturn

  synchronized int receivedPongCount();
    Code:
       0: aload_0
       1: getfield      #102                // Field receivedPongCount:I
       4: ireturn

  public void onReadMessage(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
       4: aload_0
       5: aload_1
       6: invokevirtual #103                // Method okhttp3/WebSocketListener.onMessage:(Lokhttp3/WebSocket;Ljava/lang/String;)V
       9: return

  public void onReadMessage(okio.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
       4: aload_0
       5: aload_1
       6: invokevirtual #104                // Method okhttp3/WebSocketListener.onMessage:(Lokhttp3/WebSocket;Lokio/ByteString;)V
       9: return

  public synchronized void onReadPing(okio.ByteString);
    Code:
       0: aload_0
       1: getfield      #105                // Field failed:Z
       4: ifne          24
       7: aload_0
       8: getfield      #106                // Field enqueuedClose:Z
      11: ifeq          25
      14: aload_0
      15: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      18: invokevirtual #84                 // Method java/util/ArrayDeque.isEmpty:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #5                  // Field pongQueue:Ljava/util/ArrayDeque;
      29: aload_1
      30: invokevirtual #107                // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: invokespecial #85                 // Method runWriter:()V
      38: aload_0
      39: dup
      40: getfield      #101                // Field receivedPingCount:I
      43: iconst_1
      44: iadd
      45: putfield      #101                // Field receivedPingCount:I
      48: return

  public synchronized void onReadPong(okio.ByteString);
    Code:
       0: aload_0
       1: dup
       2: getfield      #102                // Field receivedPongCount:I
       5: iconst_1
       6: iadd
       7: putfield      #102                // Field receivedPongCount:I
      10: aload_0
      11: iconst_0
      12: putfield      #108                // Field awaitingPong:Z
      15: return

  public void onReadClose(int, java.lang.String);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpne     13
       5: new           #11                 // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #109                // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: aconst_null
      14: astore_3
      15: aload_0
      16: dup
      17: astore        4
      19: monitorenter
      20: aload_0
      21: getfield      #7                  // Field receivedCloseCode:I
      24: iconst_m1
      25: if_icmpeq     38
      28: new           #110                // class java/lang/IllegalStateException
      31: dup
      32: ldc           #111                // String already closed
      34: invokespecial #112                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iload_1
      40: putfield      #7                  // Field receivedCloseCode:I
      43: aload_0
      44: aload_2
      45: putfield      #113                // Field receivedCloseReason:Ljava/lang/String;
      48: aload_0
      49: getfield      #106                // Field enqueuedClose:Z
      52: ifeq          102
      55: aload_0
      56: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      59: invokevirtual #84                 // Method java/util/ArrayDeque.isEmpty:()Z
      62: ifeq          102
      65: aload_0
      66: getfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
      69: astore_3
      70: aload_0
      71: aconst_null
      72: putfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
      75: aload_0
      76: getfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
      79: ifnull        93
      82: aload_0
      83: getfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
      86: iconst_0
      87: invokeinterface #95,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      92: pop
      93: aload_0
      94: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      97: invokeinterface #96,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
     102: aload         4
     104: monitorexit
     105: goto          116
     108: astore        5
     110: aload         4
     112: monitorexit
     113: aload         5
     115: athrow
     116: aload_0
     117: getfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
     120: aload_0
     121: iload_1
     122: aload_2
     123: invokevirtual #114                // Method okhttp3/WebSocketListener.onClosing:(Lokhttp3/WebSocket;ILjava/lang/String;)V
     126: aload_3
     127: ifnull        140
     130: aload_0
     131: getfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
     134: aload_0
     135: iload_1
     136: aload_2
     137: invokevirtual #115                // Method okhttp3/WebSocketListener.onClosed:(Lokhttp3/WebSocket;ILjava/lang/String;)V
     140: aload_3
     141: invokestatic  #116                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     144: goto          156
     147: astore        6
     149: aload_3
     150: invokestatic  #116                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     153: aload         6
     155: athrow
     156: return
    Exception table:
       from    to  target type
          20   105   108   any
         108   113   108   any
         116   140   147   any
         147   149   147   any

  public boolean send(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #117                // class java/lang/NullPointerException
       7: dup
       8: ldc           #118                // String text == null
      10: invokespecial #119                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokestatic  #65                 // Method okio/ByteString.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;
      19: iconst_1
      20: invokespecial #120                // Method send:(Lokio/ByteString;I)Z
      23: ireturn

  public boolean send(okio.ByteString);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #117                // class java/lang/NullPointerException
       7: dup
       8: ldc           #121                // String bytes == null
      10: invokespecial #119                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: iconst_2
      17: invokespecial #120                // Method send:(Lokio/ByteString;I)Z
      20: ireturn

  private synchronized boolean send(okio.ByteString, int);
    Code:
       0: aload_0
       1: getfield      #105                // Field failed:Z
       4: ifne          14
       7: aload_0
       8: getfield      #106                // Field enqueuedClose:Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #28                 // Field queueSize:J
      20: aload_1
      21: invokevirtual #122                // Method okio/ByteString.size:()I
      24: i2l
      25: ladd
      26: ldc2_w        #124                // long 16777216l
      29: lcmp
      30: ifle          44
      33: aload_0
      34: sipush        1001
      37: aconst_null
      38: invokevirtual #126                // Method close:(ILjava/lang/String;)Z
      41: pop
      42: iconst_0
      43: ireturn
      44: aload_0
      45: dup
      46: getfield      #28                 // Field queueSize:J
      49: aload_1
      50: invokevirtual #122                // Method okio/ByteString.size:()I
      53: i2l
      54: ladd
      55: putfield      #28                 // Field queueSize:J
      58: aload_0
      59: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      62: new           #127                // class okhttp3/internal/ws/RealWebSocket$Message
      65: dup
      66: iload_2
      67: aload_1
      68: invokespecial #128                // Method okhttp3/internal/ws/RealWebSocket$Message."<init>":(ILokio/ByteString;)V
      71: invokevirtual #107                // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: invokespecial #85                 // Method runWriter:()V
      79: iconst_1
      80: ireturn

  synchronized boolean pong(okio.ByteString);
    Code:
       0: aload_0
       1: getfield      #105                // Field failed:Z
       4: ifne          24
       7: aload_0
       8: getfield      #106                // Field enqueuedClose:Z
      11: ifeq          26
      14: aload_0
      15: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      18: invokevirtual #84                 // Method java/util/ArrayDeque.isEmpty:()Z
      21: ifeq          26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #5                  // Field pongQueue:Ljava/util/ArrayDeque;
      30: aload_1
      31: invokevirtual #107                // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: invokespecial #85                 // Method runWriter:()V
      39: iconst_1
      40: ireturn

  public boolean close(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: ldc2_w        #129                // long 60000l
       6: invokevirtual #131                // Method close:(ILjava/lang/String;J)Z
       9: ireturn

  synchronized boolean close(int, java.lang.String, long);
    Code:
       0: iload_1
       1: invokestatic  #132                // Method okhttp3/internal/ws/WebSocketProtocol.validateCloseCode:(I)V
       4: aconst_null
       5: astore        5
       7: aload_2
       8: ifnull        57
      11: aload_2
      12: invokestatic  #65                 // Method okio/ByteString.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;
      15: astore        5
      17: aload         5
      19: invokevirtual #122                // Method okio/ByteString.size:()I
      22: i2l
      23: ldc2_w        #133                // long 123l
      26: lcmp
      27: ifle          57
      30: new           #11                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #12                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #135                // String reason.size() > 123:
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #105                // Field failed:Z
      61: ifne          71
      64: aload_0
      65: getfield      #106                // Field enqueuedClose:Z
      68: ifeq          73
      71: iconst_0
      72: ireturn
      73: aload_0
      74: iconst_1
      75: putfield      #106                // Field enqueuedClose:Z
      78: aload_0
      79: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      82: new           #136                // class okhttp3/internal/ws/RealWebSocket$Close
      85: dup
      86: iload_1
      87: aload         5
      89: lload_3
      90: invokespecial #137                // Method okhttp3/internal/ws/RealWebSocket$Close."<init>":(ILokio/ByteString;J)V
      93: invokevirtual #107                // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_0
      98: invokespecial #85                 // Method runWriter:()V
     101: iconst_1
     102: ireturn

  private void runWriter();
    Code:
       0: getstatic     #138                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #139                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #140                // class java/lang/AssertionError
      16: dup
      17: invokespecial #141                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      25: ifnull        41
      28: aload_0
      29: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      32: aload_0
      33: getfield      #27                 // Field writerRunnable:Ljava/lang/Runnable;
      36: invokeinterface #142,  2          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      41: return

  boolean writeOneFrame() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: iconst_m1
       3: istore        4
       5: aconst_null
       6: astore        5
       8: aconst_null
       9: astore        6
      11: aload_0
      12: dup
      13: astore        7
      15: monitorenter
      16: aload_0
      17: getfield      #105                // Field failed:Z
      20: ifeq          28
      23: iconst_0
      24: aload         7
      26: monitorexit
      27: ireturn
      28: aload_0
      29: getfield      #75                 // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      32: astore_1
      33: aload_0
      34: getfield      #5                  // Field pongQueue:Ljava/util/ArrayDeque;
      37: invokevirtual #143                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      40: checkcast     #144                // class okio/ByteString
      43: astore_2
      44: aload_2
      45: ifnonnull     147
      48: aload_0
      49: getfield      #6                  // Field messageAndCloseQueue:Ljava/util/ArrayDeque;
      52: invokevirtual #143                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      55: astore_3
      56: aload_3
      57: instanceof    #136                // class okhttp3/internal/ws/RealWebSocket$Close
      60: ifeq          138
      63: aload_0
      64: getfield      #7                  // Field receivedCloseCode:I
      67: istore        4
      69: aload_0
      70: getfield      #113                // Field receivedCloseReason:Ljava/lang/String;
      73: astore        5
      75: iload         4
      77: iconst_m1
      78: if_icmpeq     104
      81: aload_0
      82: getfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
      85: astore        6
      87: aload_0
      88: aconst_null
      89: putfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
      92: aload_0
      93: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      96: invokeinterface #96,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
     101: goto          147
     104: aload_0
     105: aload_0
     106: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
     109: new           #145                // class okhttp3/internal/ws/RealWebSocket$CancelRunnable
     112: dup
     113: aload_0
     114: invokespecial #146                // Method okhttp3/internal/ws/RealWebSocket$CancelRunnable."<init>":(Lokhttp3/internal/ws/RealWebSocket;)V
     117: aload_3
     118: checkcast     #136                // class okhttp3/internal/ws/RealWebSocket$Close
     121: getfield      #147                // Field okhttp3/internal/ws/RealWebSocket$Close.cancelAfterCloseMillis:J
     124: getstatic     #82                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     127: invokeinterface #148,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     132: putfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
     135: goto          147
     138: aload_3
     139: ifnonnull     147
     142: iconst_0
     143: aload         7
     145: monitorexit
     146: ireturn
     147: aload         7
     149: monitorexit
     150: goto          161
     153: astore        8
     155: aload         7
     157: monitorexit
     158: aload         8
     160: athrow
     161: aload_2
     162: ifnull        173
     165: aload_1
     166: aload_2
     167: invokevirtual #149                // Method okhttp3/internal/ws/WebSocketWriter.writePong:(Lokio/ByteString;)V
     170: goto          320
     173: aload_3
     174: instanceof    #127                // class okhttp3/internal/ws/RealWebSocket$Message
     177: ifeq          265
     180: aload_3
     181: checkcast     #127                // class okhttp3/internal/ws/RealWebSocket$Message
     184: getfield      #150                // Field okhttp3/internal/ws/RealWebSocket$Message.data:Lokio/ByteString;
     187: astore        7
     189: aload_1
     190: aload_3
     191: checkcast     #127                // class okhttp3/internal/ws/RealWebSocket$Message
     194: getfield      #151                // Field okhttp3/internal/ws/RealWebSocket$Message.formatOpcode:I
     197: aload         7
     199: invokevirtual #122                // Method okio/ByteString.size:()I
     202: i2l
     203: invokevirtual #152                // Method okhttp3/internal/ws/WebSocketWriter.newMessageSink:(IJ)Lokio/Sink;
     206: invokestatic  #153                // Method okio/Okio.buffer:(Lokio/Sink;)Lokio/BufferedSink;
     209: astore        8
     211: aload         8
     213: aload         7
     215: invokeinterface #154,  2          // InterfaceMethod okio/BufferedSink.write:(Lokio/ByteString;)Lokio/BufferedSink;
     220: pop
     221: aload         8
     223: invokeinterface #155,  1          // InterfaceMethod okio/BufferedSink.close:()V
     228: aload_0
     229: dup
     230: astore        9
     232: monitorenter
     233: aload_0
     234: dup
     235: getfield      #28                 // Field queueSize:J
     238: aload         7
     240: invokevirtual #122                // Method okio/ByteString.size:()I
     243: i2l
     244: lsub
     245: putfield      #28                 // Field queueSize:J
     248: aload         9
     250: monitorexit
     251: goto          262
     254: astore        10
     256: aload         9
     258: monitorexit
     259: aload         10
     261: athrow
     262: goto          320
     265: aload_3
     266: instanceof    #136                // class okhttp3/internal/ws/RealWebSocket$Close
     269: ifeq          312
     272: aload_3
     273: checkcast     #136                // class okhttp3/internal/ws/RealWebSocket$Close
     276: astore        7
     278: aload_1
     279: aload         7
     281: getfield      #156                // Field okhttp3/internal/ws/RealWebSocket$Close.code:I
     284: aload         7
     286: getfield      #157                // Field okhttp3/internal/ws/RealWebSocket$Close.reason:Lokio/ByteString;
     289: invokevirtual #158                // Method okhttp3/internal/ws/WebSocketWriter.writeClose:(ILokio/ByteString;)V
     292: aload         6
     294: ifnull        309
     297: aload_0
     298: getfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
     301: aload_0
     302: iload         4
     304: aload         5
     306: invokevirtual #115                // Method okhttp3/WebSocketListener.onClosed:(Lokhttp3/WebSocket;ILjava/lang/String;)V
     309: goto          320
     312: new           #140                // class java/lang/AssertionError
     315: dup
     316: invokespecial #141                // Method java/lang/AssertionError."<init>":()V
     319: athrow
     320: iconst_1
     321: istore        7
     323: aload         6
     325: invokestatic  #116                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     328: iload         7
     330: ireturn
     331: astore        11
     333: aload         6
     335: invokestatic  #116                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     338: aload         11
     340: athrow
    Exception table:
       from    to  target type
          16    27   153   any
          28   146   153   any
         147   150   153   any
         153   158   153   any
         233   251   254   any
         254   259   254   any
         161   323   331   any
         331   333   331   any

  void writePingFrame();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #105                // Field failed:Z
       8: ifeq          14
      11: aload_3
      12: monitorexit
      13: return
      14: aload_0
      15: getfield      #75                 // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      18: astore_1
      19: aload_0
      20: getfield      #108                // Field awaitingPong:Z
      23: ifeq          33
      26: aload_0
      27: getfield      #100                // Field sentPingCount:I
      30: goto          34
      33: iconst_m1
      34: istore_2
      35: aload_0
      36: dup
      37: getfield      #100                // Field sentPingCount:I
      40: iconst_1
      41: iadd
      42: putfield      #100                // Field sentPingCount:I
      45: aload_0
      46: iconst_1
      47: putfield      #108                // Field awaitingPong:Z
      50: aload_3
      51: monitorexit
      52: goto          62
      55: astore        4
      57: aload_3
      58: monitorexit
      59: aload         4
      61: athrow
      62: iload_2
      63: iconst_m1
      64: if_icmpeq     118
      67: aload_0
      68: new           #159                // class java/net/SocketTimeoutException
      71: dup
      72: new           #12                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #160                // String sent ping but didn\'t receive pong within
      81: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #21                 // Field pingIntervalMillis:J
      88: invokevirtual #161                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      91: ldc           #162                // String ms (after
      93: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: iload_2
      97: iconst_1
      98: isub
      99: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: ldc           #163                // String  successful ping/pongs)
     104: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #164                // Method java/net/SocketTimeoutException."<init>":(Ljava/lang/String;)V
     113: aconst_null
     114: invokevirtual #92                 // Method failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V
     117: return
     118: aload_1
     119: getstatic     #165                // Field okio/ByteString.EMPTY:Lokio/ByteString;
     122: invokevirtual #166                // Method okhttp3/internal/ws/WebSocketWriter.writePing:(Lokio/ByteString;)V
     125: goto          135
     128: astore_3
     129: aload_0
     130: aload_3
     131: aconst_null
     132: invokevirtual #92                 // Method failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V
     135: return
    Exception table:
       from    to  target type
           4    13    55   any
          14    52    55   any
          55    59    55   any
         118   125   128   Class java/io/IOException

  public void failWebSocket(java.lang.Exception, okhttp3.Response);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #105                // Field failed:Z
       9: ifeq          16
      12: aload         4
      14: monitorexit
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #105                // Field failed:Z
      21: aload_0
      22: getfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
      25: astore_3
      26: aload_0
      27: aconst_null
      28: putfield      #70                 // Field streams:Lokhttp3/internal/ws/RealWebSocket$Streams;
      31: aload_0
      32: getfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
      35: ifnull        49
      38: aload_0
      39: getfield      #94                 // Field cancelFuture:Ljava/util/concurrent/ScheduledFuture;
      42: iconst_0
      43: invokeinterface #95,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      48: pop
      49: aload_0
      50: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      53: ifnull        65
      56: aload_0
      57: getfield      #79                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      60: invokeinterface #96,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      65: aload         4
      67: monitorexit
      68: goto          79
      71: astore        5
      73: aload         4
      75: monitorexit
      76: aload         5
      78: athrow
      79: aload_0
      80: getfield      #19                 // Field listener:Lokhttp3/WebSocketListener;
      83: aload_0
      84: aload_1
      85: aload_2
      86: invokevirtual #168                // Method okhttp3/WebSocketListener.onFailure:(Lokhttp3/WebSocket;Ljava/lang/Throwable;Lokhttp3/Response;)V
      89: aload_3
      90: invokestatic  #116                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      93: goto          105
      96: astore        6
      98: aload_3
      99: invokestatic  #116                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     102: aload         6
     104: athrow
     105: return
    Exception table:
       from    to  target type
           5    15    71   any
          16    68    71   any
          71    76    71   any
          79    89    96   any
          96    98    96   any

  private void lambda$new$0();
    Code:
       0: aload_0
       1: invokevirtual #169                // Method writeOneFrame:()Z
       4: ifeq          10
       7: goto          0
      10: goto          20
      13: astore_1
      14: aload_0
      15: aload_1
      16: aconst_null
      17: invokevirtual #92                 // Method failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V
      20: return
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException

  static {};
    Code:
       0: ldc           #123                // class okhttp3/internal/ws/RealWebSocket
       2: invokevirtual #170                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #138                // Field $assertionsDisabled:Z
      16: getstatic     #171                // Field okhttp3/Protocol.HTTP_1_1:Lokhttp3/Protocol;
      19: invokestatic  #172                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      22: putstatic     #34                 // Field ONLY_HTTP1:Ljava/util/List;
      25: return
}
