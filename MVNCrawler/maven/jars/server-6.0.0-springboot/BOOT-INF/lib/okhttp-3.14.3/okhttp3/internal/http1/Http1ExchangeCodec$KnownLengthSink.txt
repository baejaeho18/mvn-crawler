Compiled from "Http1ExchangeCodec.java"
final class okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink implements okio.Sink {
  private final okio.ForwardingTimeout timeout;

  private boolean closed;

  final okhttp3.internal.http1.Http1ExchangeCodec this$0;

  private okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lokhttp3/internal/http1/Http1ExchangeCodec;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #5                  // class okio/ForwardingTimeout
      13: dup
      14: aload_0
      15: getfield      #3                  // Field this$0:Lokhttp3/internal/http1/Http1ExchangeCodec;
      18: invokestatic  #6                  // Method okhttp3/internal/http1/Http1ExchangeCodec.access$200:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;
      21: invokeinterface #7,  1            // InterfaceMethod okio/BufferedSink.timeout:()Lokio/Timeout;
      26: invokespecial #8                  // Method okio/ForwardingTimeout."<init>":(Lokio/Timeout;)V
      29: putfield      #9                  // Field timeout:Lokio/ForwardingTimeout;
      32: return

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #9                  // Field timeout:Lokio/ForwardingTimeout;
       4: areturn

  public void write(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field closed:Z
       4: ifeq          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #12                 // String closed
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokevirtual #14                 // Method okio/Buffer.size:()J
      21: lconst_0
      22: lload_2
      23: invokestatic  #15                 // Method okhttp3/internal/Util.checkOffsetAndCount:(JJJ)V
      26: aload_0
      27: getfield      #3                  // Field this$0:Lokhttp3/internal/http1/Http1ExchangeCodec;
      30: invokestatic  #6                  // Method okhttp3/internal/http1/Http1ExchangeCodec.access$200:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;
      33: aload_1
      34: lload_2
      35: invokeinterface #16,  4           // InterfaceMethod okio/BufferedSink.write:(Lokio/Buffer;J)V
      40: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field this$0:Lokhttp3/internal/http1/Http1ExchangeCodec;
      12: invokestatic  #6                  // Method okhttp3/internal/http1/Http1ExchangeCodec.access$200:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;
      15: invokeinterface #17,  1           // InterfaceMethod okio/BufferedSink.flush:()V
      20: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #10                 // Field closed:Z
      13: aload_0
      14: getfield      #3                  // Field this$0:Lokhttp3/internal/http1/Http1ExchangeCodec;
      17: aload_0
      18: getfield      #9                  // Field timeout:Lokio/ForwardingTimeout;
      21: invokestatic  #18                 // Method okhttp3/internal/http1/Http1ExchangeCodec.access$300:(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokio/ForwardingTimeout;)V
      24: aload_0
      25: getfield      #3                  // Field this$0:Lokhttp3/internal/http1/Http1ExchangeCodec;
      28: iconst_3
      29: invokestatic  #19                 // Method okhttp3/internal/http1/Http1ExchangeCodec.access$402:(Lokhttp3/internal/http1/Http1ExchangeCodec;I)I
      32: pop
      33: return

  okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec, okhttp3.internal.http1.Http1ExchangeCodec$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;)V
       5: return
}
