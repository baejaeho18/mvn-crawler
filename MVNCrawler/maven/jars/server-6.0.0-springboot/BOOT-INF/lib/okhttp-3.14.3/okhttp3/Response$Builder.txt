Compiled from "Response.java"
public class okhttp3.Response$Builder {
  okhttp3.Request request;

  okhttp3.Protocol protocol;

  int code;

  java.lang.String message;

  okhttp3.Handshake handshake;

  okhttp3.Headers$Builder headers;

  okhttp3.ResponseBody body;

  okhttp3.Response networkResponse;

  okhttp3.Response cacheResponse;

  okhttp3.Response priorResponse;

  long sentRequestAtMillis;

  long receivedResponseAtMillis;

  okhttp3.internal.connection.Exchange exchange;

  public okhttp3.Response$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field code:I
       9: aload_0
      10: new           #3                  // class okhttp3/Headers$Builder
      13: dup
      14: invokespecial #4                  // Method okhttp3/Headers$Builder."<init>":()V
      17: putfield      #5                  // Field headers:Lokhttp3/Headers$Builder;
      20: return

  okhttp3.Response$Builder(okhttp3.Response);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field code:I
       9: aload_0
      10: aload_1
      11: getfield      #6                  // Field okhttp3/Response.request:Lokhttp3/Request;
      14: putfield      #7                  // Field request:Lokhttp3/Request;
      17: aload_0
      18: aload_1
      19: getfield      #8                  // Field okhttp3/Response.protocol:Lokhttp3/Protocol;
      22: putfield      #9                  // Field protocol:Lokhttp3/Protocol;
      25: aload_0
      26: aload_1
      27: getfield      #10                 // Field okhttp3/Response.code:I
      30: putfield      #2                  // Field code:I
      33: aload_0
      34: aload_1
      35: getfield      #11                 // Field okhttp3/Response.message:Ljava/lang/String;
      38: putfield      #12                 // Field message:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: getfield      #13                 // Field okhttp3/Response.handshake:Lokhttp3/Handshake;
      46: putfield      #14                 // Field handshake:Lokhttp3/Handshake;
      49: aload_0
      50: aload_1
      51: getfield      #15                 // Field okhttp3/Response.headers:Lokhttp3/Headers;
      54: invokevirtual #16                 // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
      57: putfield      #5                  // Field headers:Lokhttp3/Headers$Builder;
      60: aload_0
      61: aload_1
      62: getfield      #17                 // Field okhttp3/Response.body:Lokhttp3/ResponseBody;
      65: putfield      #18                 // Field body:Lokhttp3/ResponseBody;
      68: aload_0
      69: aload_1
      70: getfield      #19                 // Field okhttp3/Response.networkResponse:Lokhttp3/Response;
      73: putfield      #20                 // Field networkResponse:Lokhttp3/Response;
      76: aload_0
      77: aload_1
      78: getfield      #21                 // Field okhttp3/Response.cacheResponse:Lokhttp3/Response;
      81: putfield      #22                 // Field cacheResponse:Lokhttp3/Response;
      84: aload_0
      85: aload_1
      86: getfield      #23                 // Field okhttp3/Response.priorResponse:Lokhttp3/Response;
      89: putfield      #24                 // Field priorResponse:Lokhttp3/Response;
      92: aload_0
      93: aload_1
      94: getfield      #25                 // Field okhttp3/Response.sentRequestAtMillis:J
      97: putfield      #26                 // Field sentRequestAtMillis:J
     100: aload_0
     101: aload_1
     102: getfield      #27                 // Field okhttp3/Response.receivedResponseAtMillis:J
     105: putfield      #28                 // Field receivedResponseAtMillis:J
     108: aload_0
     109: aload_1
     110: getfield      #29                 // Field okhttp3/Response.exchange:Lokhttp3/internal/connection/Exchange;
     113: putfield      #30                 // Field exchange:Lokhttp3/internal/connection/Exchange;
     116: return

  public okhttp3.Response$Builder request(okhttp3.Request);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field request:Lokhttp3/Request;
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder protocol(okhttp3.Protocol);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field protocol:Lokhttp3/Protocol;
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder code(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field code:I
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder message(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field message:Ljava/lang/String;
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder handshake(okhttp3.Handshake);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field handshake:Lokhttp3/Handshake;
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lokhttp3/Headers$Builder;
       4: aload_1
       5: aload_2
       6: invokevirtual #31                 // Method okhttp3/Headers$Builder.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
       9: pop
      10: aload_0
      11: areturn

  public okhttp3.Response$Builder addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lokhttp3/Headers$Builder;
       4: aload_1
       5: aload_2
       6: invokevirtual #32                 // Method okhttp3/Headers$Builder.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
       9: pop
      10: aload_0
      11: areturn

  public okhttp3.Response$Builder removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lokhttp3/Headers$Builder;
       4: aload_1
       5: invokevirtual #33                 // Method okhttp3/Headers$Builder.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;
       8: pop
       9: aload_0
      10: areturn

  public okhttp3.Response$Builder headers(okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
       5: putfield      #5                  // Field headers:Lokhttp3/Headers$Builder;
       8: aload_0
       9: areturn

  public okhttp3.Response$Builder body(okhttp3.ResponseBody);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field body:Lokhttp3/ResponseBody;
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder networkResponse(okhttp3.Response);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: ldc           #34                 // String networkResponse
       7: aload_1
       8: invokespecial #35                 // Method checkSupportResponse:(Ljava/lang/String;Lokhttp3/Response;)V
      11: aload_0
      12: aload_1
      13: putfield      #20                 // Field networkResponse:Lokhttp3/Response;
      16: aload_0
      17: areturn

  public okhttp3.Response$Builder cacheResponse(okhttp3.Response);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: ldc           #36                 // String cacheResponse
       7: aload_1
       8: invokespecial #35                 // Method checkSupportResponse:(Ljava/lang/String;Lokhttp3/Response;)V
      11: aload_0
      12: aload_1
      13: putfield      #22                 // Field cacheResponse:Lokhttp3/Response;
      16: aload_0
      17: areturn

  private void checkSupportResponse(java.lang.String, okhttp3.Response);
    Code:
       0: aload_2
       1: getfield      #17                 // Field okhttp3/Response.body:Lokhttp3/ResponseBody;
       4: ifnull        34
       7: new           #37                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #38                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_1
      19: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #41                 // String .body != null
      24: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_2
      35: getfield      #19                 // Field okhttp3/Response.networkResponse:Lokhttp3/Response;
      38: ifnull        68
      41: new           #37                 // class java/lang/IllegalArgumentException
      44: dup
      45: new           #38                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_1
      53: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #44                 // String .networkResponse != null
      58: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_2
      69: getfield      #21                 // Field okhttp3/Response.cacheResponse:Lokhttp3/Response;
      72: ifnull        102
      75: new           #37                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #38                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      86: aload_1
      87: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #45                 // String .cacheResponse != null
      92: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_2
     103: getfield      #23                 // Field okhttp3/Response.priorResponse:Lokhttp3/Response;
     106: ifnull        136
     109: new           #37                 // class java/lang/IllegalArgumentException
     112: dup
     113: new           #38                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     120: aload_1
     121: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #46                 // String .priorResponse != null
     126: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: return

  public okhttp3.Response$Builder priorResponse(okhttp3.Response);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_0
       5: aload_1
       6: invokespecial #47                 // Method checkPriorResponse:(Lokhttp3/Response;)V
       9: aload_0
      10: aload_1
      11: putfield      #24                 // Field priorResponse:Lokhttp3/Response;
      14: aload_0
      15: areturn

  private void checkPriorResponse(okhttp3.Response);
    Code:
       0: aload_1
       1: getfield      #17                 // Field okhttp3/Response.body:Lokhttp3/ResponseBody;
       4: ifnull        17
       7: new           #37                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #48                 // String priorResponse.body != null
      13: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public okhttp3.Response$Builder sentRequestAtMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #26                 // Field sentRequestAtMillis:J
       5: aload_0
       6: areturn

  public okhttp3.Response$Builder receivedResponseAtMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #28                 // Field receivedResponseAtMillis:J
       5: aload_0
       6: areturn

  void initExchange(okhttp3.internal.connection.Exchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field exchange:Lokhttp3/internal/connection/Exchange;
       5: return

  public okhttp3.Response build();
    Code:
       0: aload_0
       1: getfield      #7                  // Field request:Lokhttp3/Request;
       4: ifnonnull     17
       7: new           #49                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #50                 // String request == null
      13: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #9                  // Field protocol:Lokhttp3/Protocol;
      21: ifnonnull     34
      24: new           #49                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #52                 // String protocol == null
      30: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field code:I
      38: ifge          71
      41: new           #49                 // class java/lang/IllegalStateException
      44: dup
      45: new           #38                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #53                 // String code < 0:
      54: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #2                  // Field code:I
      61: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #12                 // Field message:Ljava/lang/String;
      75: ifnonnull     88
      78: new           #49                 // class java/lang/IllegalStateException
      81: dup
      82: ldc           #55                 // String message == null
      84: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: new           #56                 // class okhttp3/Response
      91: dup
      92: aload_0
      93: invokespecial #57                 // Method okhttp3/Response."<init>":(Lokhttp3/Response$Builder;)V
      96: areturn
}
