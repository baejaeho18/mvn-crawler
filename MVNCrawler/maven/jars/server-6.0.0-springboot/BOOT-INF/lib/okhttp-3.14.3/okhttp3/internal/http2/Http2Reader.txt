Compiled from "Http2Reader.java"
final class okhttp3.internal.http2.Http2Reader implements java.io.Closeable {
  static final java.util.logging.Logger logger;

  private final okio.BufferedSource source;

  private final okhttp3.internal.http2.Http2Reader$ContinuationSource continuation;

  private final boolean client;

  final okhttp3.internal.http2.Hpack$Reader hpackReader;

  okhttp3.internal.http2.Http2Reader(okio.BufferedSource, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field source:Lokio/BufferedSource;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field client:Z
      14: aload_0
      15: new           #5                  // class okhttp3/internal/http2/Http2Reader$ContinuationSource
      18: dup
      19: aload_0
      20: getfield      #3                  // Field source:Lokio/BufferedSource;
      23: invokespecial #6                  // Method okhttp3/internal/http2/Http2Reader$ContinuationSource."<init>":(Lokio/BufferedSource;)V
      26: putfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
      29: aload_0
      30: new           #8                  // class okhttp3/internal/http2/Hpack$Reader
      33: dup
      34: sipush        4096
      37: aload_0
      38: getfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
      41: invokespecial #9                  // Method okhttp3/internal/http2/Hpack$Reader."<init>":(ILokio/Source;)V
      44: putfield      #10                 // Field hpackReader:Lokhttp3/internal/http2/Hpack$Reader;
      47: return

  public void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field client:Z
       4: ifeq          26
       7: aload_0
       8: iconst_1
       9: aload_1
      10: invokevirtual #11                 // Method nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z
      13: ifne          104
      16: ldc           #12                 // String Required SETTINGS preface not received
      18: iconst_0
      19: anewarray     #13                 // class java/lang/Object
      22: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      25: athrow
      26: aload_0
      27: getfield      #3                  // Field source:Lokio/BufferedSource;
      30: getstatic     #15                 // Field okhttp3/internal/http2/Http2.CONNECTION_PREFACE:Lokio/ByteString;
      33: invokevirtual #16                 // Method okio/ByteString.size:()I
      36: i2l
      37: invokeinterface #17,  3           // InterfaceMethod okio/BufferedSource.readByteString:(J)Lokio/ByteString;
      42: astore_2
      43: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
      46: getstatic     #19                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      49: invokevirtual #20                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      52: ifeq          77
      55: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
      58: ldc           #21                 // String << CONNECTION %s
      60: iconst_1
      61: anewarray     #13                 // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload_2
      67: invokevirtual #22                 // Method okio/ByteString.hex:()Ljava/lang/String;
      70: aastore
      71: invokestatic  #23                 // Method okhttp3/internal/Util.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: invokevirtual #24                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      77: getstatic     #15                 // Field okhttp3/internal/http2/Http2.CONNECTION_PREFACE:Lokio/ByteString;
      80: aload_2
      81: invokevirtual #25                 // Method okio/ByteString.equals:(Ljava/lang/Object;)Z
      84: ifne          104
      87: ldc           #26                 // String Expected a connection header but was %s
      89: iconst_1
      90: anewarray     #13                 // class java/lang/Object
      93: dup
      94: iconst_0
      95: aload_2
      96: invokevirtual #27                 // Method okio/ByteString.utf8:()Ljava/lang/String;
      99: aastore
     100: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
     103: athrow
     104: return

  public boolean nextFrame(boolean, okhttp3.internal.http2.Http2Reader$Handler) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field source:Lokio/BufferedSource;
       4: ldc2_w        #28                 // long 9l
       7: invokeinterface #30,  3           // InterfaceMethod okio/BufferedSource.require:(J)V
      12: goto          18
      15: astore_3
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #3                  // Field source:Lokio/BufferedSource;
      22: invokestatic  #32                 // Method readMedium:(Lokio/BufferedSource;)I
      25: istore_3
      26: iload_3
      27: iflt          37
      30: iload_3
      31: sipush        16384
      34: if_icmple     54
      37: ldc           #33                 // String FRAME_SIZE_ERROR: %s
      39: iconst_1
      40: anewarray     #13                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: iload_3
      46: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: aastore
      50: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      53: athrow
      54: aload_0
      55: getfield      #3                  // Field source:Lokio/BufferedSource;
      58: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      63: sipush        255
      66: iand
      67: i2b
      68: istore        4
      70: iload_1
      71: ifeq          98
      74: iload         4
      76: iconst_4
      77: if_icmpeq     98
      80: ldc           #36                 // String Expected a SETTINGS frame but was %s
      82: iconst_1
      83: anewarray     #13                 // class java/lang/Object
      86: dup
      87: iconst_0
      88: iload         4
      90: invokestatic  #37                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      93: aastore
      94: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      97: athrow
      98: aload_0
      99: getfield      #3                  // Field source:Lokio/BufferedSource;
     102: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
     107: sipush        255
     110: iand
     111: i2b
     112: istore        5
     114: aload_0
     115: getfield      #3                  // Field source:Lokio/BufferedSource;
     118: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
     123: ldc           #39                 // int 2147483647
     125: iand
     126: istore        6
     128: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
     131: getstatic     #19                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     134: invokevirtual #20                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     137: ifeq          157
     140: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
     143: iconst_1
     144: iload         6
     146: iload_3
     147: iload         4
     149: iload         5
     151: invokestatic  #40                 // Method okhttp3/internal/http2/Http2.frameLog:(ZIIBB)Ljava/lang/String;
     154: invokevirtual #24                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
     157: iload         4
     159: tableswitch   { // 0 to 8
                     0: 208
                     1: 221
                     2: 234
                     3: 247
                     4: 260
                     5: 273
                     6: 286
                     7: 299
                     8: 312
               default: 325
          }
     208: aload_0
     209: aload_2
     210: iload_3
     211: iload         5
     213: iload         6
     215: invokespecial #41                 // Method readData:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     218: goto          336
     221: aload_0
     222: aload_2
     223: iload_3
     224: iload         5
     226: iload         6
     228: invokespecial #42                 // Method readHeaders:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     231: goto          336
     234: aload_0
     235: aload_2
     236: iload_3
     237: iload         5
     239: iload         6
     241: invokespecial #43                 // Method readPriority:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     244: goto          336
     247: aload_0
     248: aload_2
     249: iload_3
     250: iload         5
     252: iload         6
     254: invokespecial #44                 // Method readRstStream:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     257: goto          336
     260: aload_0
     261: aload_2
     262: iload_3
     263: iload         5
     265: iload         6
     267: invokespecial #45                 // Method readSettings:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     270: goto          336
     273: aload_0
     274: aload_2
     275: iload_3
     276: iload         5
     278: iload         6
     280: invokespecial #46                 // Method readPushPromise:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     283: goto          336
     286: aload_0
     287: aload_2
     288: iload_3
     289: iload         5
     291: iload         6
     293: invokespecial #47                 // Method readPing:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     296: goto          336
     299: aload_0
     300: aload_2
     301: iload_3
     302: iload         5
     304: iload         6
     306: invokespecial #48                 // Method readGoAway:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     309: goto          336
     312: aload_0
     313: aload_2
     314: iload_3
     315: iload         5
     317: iload         6
     319: invokespecial #49                 // Method readWindowUpdate:(Lokhttp3/internal/http2/Http2Reader$Handler;IBI)V
     322: goto          336
     325: aload_0
     326: getfield      #3                  // Field source:Lokio/BufferedSource;
     329: iload_3
     330: i2l
     331: invokeinterface #50,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
     336: iconst_1
     337: ireturn
    Exception table:
       from    to  target type
           0    12    15   Class java/io/EOFException

  private void readHeaders(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifne          15
       5: ldc           #51                 // String PROTOCOL_ERROR: TYPE_HEADERS streamId == 0
       7: iconst_0
       8: anewarray     #13                 // class java/lang/Object
      11: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      14: athrow
      15: iload_3
      16: iconst_1
      17: iand
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore        5
      28: iload_3
      29: bipush        8
      31: iand
      32: ifeq          52
      35: aload_0
      36: getfield      #3                  // Field source:Lokio/BufferedSource;
      39: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      44: sipush        255
      47: iand
      48: i2s
      49: goto          53
      52: iconst_0
      53: istore        6
      55: iload_3
      56: bipush        32
      58: iand
      59: ifeq          72
      62: aload_0
      63: aload_1
      64: iload         4
      66: invokespecial #52                 // Method readPriority:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V
      69: iinc          2, -5
      72: iload_2
      73: iload_3
      74: iload         6
      76: invokestatic  #53                 // Method lengthWithoutPadding:(IBS)I
      79: istore_2
      80: aload_0
      81: iload_2
      82: iload         6
      84: iload_3
      85: iload         4
      87: invokespecial #54                 // Method readHeaderBlock:(ISBI)Ljava/util/List;
      90: astore        7
      92: aload_1
      93: iload         5
      95: iload         4
      97: iconst_m1
      98: aload         7
     100: invokeinterface #55,  5           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.headers:(ZIILjava/util/List;)V
     105: return

  private java.util.List<okhttp3.internal.http2.Header> readHeaderBlock(int, short, byte, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
       4: aload_0
       5: getfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
       8: iload_1
       9: dup_x1
      10: putfield      #56                 // Field okhttp3/internal/http2/Http2Reader$ContinuationSource.left:I
      13: putfield      #57                 // Field okhttp3/internal/http2/Http2Reader$ContinuationSource.length:I
      16: aload_0
      17: getfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
      20: iload_2
      21: putfield      #58                 // Field okhttp3/internal/http2/Http2Reader$ContinuationSource.padding:S
      24: aload_0
      25: getfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
      28: iload_3
      29: putfield      #59                 // Field okhttp3/internal/http2/Http2Reader$ContinuationSource.flags:B
      32: aload_0
      33: getfield      #7                  // Field continuation:Lokhttp3/internal/http2/Http2Reader$ContinuationSource;
      36: iload         4
      38: putfield      #60                 // Field okhttp3/internal/http2/Http2Reader$ContinuationSource.streamId:I
      41: aload_0
      42: getfield      #10                 // Field hpackReader:Lokhttp3/internal/http2/Hpack$Reader;
      45: invokevirtual #61                 // Method okhttp3/internal/http2/Hpack$Reader.readHeaders:()V
      48: aload_0
      49: getfield      #10                 // Field hpackReader:Lokhttp3/internal/http2/Hpack$Reader;
      52: invokevirtual #62                 // Method okhttp3/internal/http2/Hpack$Reader.getAndResetHeaderList:()Ljava/util/List;
      55: areturn

  private void readData(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifne          15
       5: ldc           #63                 // String PROTOCOL_ERROR: TYPE_DATA streamId == 0
       7: iconst_0
       8: anewarray     #13                 // class java/lang/Object
      11: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      14: athrow
      15: iload_3
      16: iconst_1
      17: iand
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore        5
      28: iload_3
      29: bipush        32
      31: iand
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore        6
      42: iload         6
      44: ifeq          57
      47: ldc           #64                 // String PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA
      49: iconst_0
      50: anewarray     #13                 // class java/lang/Object
      53: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      56: athrow
      57: iload_3
      58: bipush        8
      60: iand
      61: ifeq          81
      64: aload_0
      65: getfield      #3                  // Field source:Lokio/BufferedSource;
      68: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      73: sipush        255
      76: iand
      77: i2s
      78: goto          82
      81: iconst_0
      82: istore        7
      84: iload_2
      85: iload_3
      86: iload         7
      88: invokestatic  #53                 // Method lengthWithoutPadding:(IBS)I
      91: istore_2
      92: aload_1
      93: iload         5
      95: iload         4
      97: aload_0
      98: getfield      #3                  // Field source:Lokio/BufferedSource;
     101: iload_2
     102: invokeinterface #65,  5           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.data:(ZILokio/BufferedSource;I)V
     107: aload_0
     108: getfield      #3                  // Field source:Lokio/BufferedSource;
     111: iload         7
     113: i2l
     114: invokeinterface #50,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
     119: return

  private void readPriority(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iconst_5
       2: if_icmpeq     22
       5: ldc           #66                 // String TYPE_PRIORITY length: %d != 5
       7: iconst_1
       8: anewarray     #13                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: iload_2
      14: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aastore
      18: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      21: athrow
      22: iload         4
      24: ifne          37
      27: ldc           #67                 // String TYPE_PRIORITY streamId == 0
      29: iconst_0
      30: anewarray     #13                 // class java/lang/Object
      33: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      36: athrow
      37: aload_0
      38: aload_1
      39: iload         4
      41: invokespecial #52                 // Method readPriority:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V
      44: return

  private void readPriority(okhttp3.internal.http2.Http2Reader$Handler, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field source:Lokio/BufferedSource;
       4: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
       9: istore_3
      10: iload_3
      11: ldc           #68                 // int -2147483648
      13: iand
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore        4
      24: iload_3
      25: ldc           #39                 // int 2147483647
      27: iand
      28: istore        5
      30: aload_0
      31: getfield      #3                  // Field source:Lokio/BufferedSource;
      34: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      39: sipush        255
      42: iand
      43: iconst_1
      44: iadd
      45: istore        6
      47: aload_1
      48: iload_2
      49: iload         5
      51: iload         6
      53: iload         4
      55: invokeinterface #69,  5           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.priority:(IIIZ)V
      60: return

  private void readRstStream(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iconst_4
       2: if_icmpeq     22
       5: ldc           #70                 // String TYPE_RST_STREAM length: %d != 4
       7: iconst_1
       8: anewarray     #13                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: iload_2
      14: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aastore
      18: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      21: athrow
      22: iload         4
      24: ifne          37
      27: ldc           #71                 // String TYPE_RST_STREAM streamId == 0
      29: iconst_0
      30: anewarray     #13                 // class java/lang/Object
      33: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      36: athrow
      37: aload_0
      38: getfield      #3                  // Field source:Lokio/BufferedSource;
      41: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      46: istore        5
      48: iload         5
      50: invokestatic  #72                 // Method okhttp3/internal/http2/ErrorCode.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;
      53: astore        6
      55: aload         6
      57: ifnonnull     78
      60: ldc           #73                 // String TYPE_RST_STREAM unexpected error code: %d
      62: iconst_1
      63: anewarray     #13                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: iload         5
      70: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: aastore
      74: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      77: athrow
      78: aload_1
      79: iload         4
      81: aload         6
      83: invokeinterface #74,  3           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V
      88: return

  private void readSettings(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifeq          15
       5: ldc           #75                 // String TYPE_SETTINGS streamId != 0
       7: iconst_0
       8: anewarray     #13                 // class java/lang/Object
      11: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      14: athrow
      15: iload_3
      16: iconst_1
      17: iand
      18: ifeq          42
      21: iload_2
      22: ifeq          35
      25: ldc           #76                 // String FRAME_SIZE_ERROR ack frame should be empty!
      27: iconst_0
      28: anewarray     #13                 // class java/lang/Object
      31: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      34: athrow
      35: aload_1
      36: invokeinterface #77,  1           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.ackSettings:()V
      41: return
      42: iload_2
      43: bipush        6
      45: irem
      46: ifeq          66
      49: ldc           #78                 // String TYPE_SETTINGS length %% 6 != 0: %s
      51: iconst_1
      52: anewarray     #13                 // class java/lang/Object
      55: dup
      56: iconst_0
      57: iload_2
      58: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      65: athrow
      66: new           #79                 // class okhttp3/internal/http2/Settings
      69: dup
      70: invokespecial #80                 // Method okhttp3/internal/http2/Settings."<init>":()V
      73: astore        5
      75: iconst_0
      76: istore        6
      78: iload         6
      80: iload_2
      81: if_icmpge     249
      84: aload_0
      85: getfield      #3                  // Field source:Lokio/BufferedSource;
      88: invokeinterface #81,  1           // InterfaceMethod okio/BufferedSource.readShort:()S
      93: ldc           #82                 // int 65535
      95: iand
      96: istore        7
      98: aload_0
      99: getfield      #3                  // Field source:Lokio/BufferedSource;
     102: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
     107: istore        8
     109: iload         7
     111: tableswitch   { // 1 to 6
                     1: 148
                     2: 151
                     3: 172
                     4: 178
                     5: 197
                     6: 230
               default: 233
          }
     148: goto          233
     151: iload         8
     153: ifeq          233
     156: iload         8
     158: iconst_1
     159: if_icmpeq     233
     162: ldc           #83                 // String PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1
     164: iconst_0
     165: anewarray     #13                 // class java/lang/Object
     168: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
     171: athrow
     172: iconst_4
     173: istore        7
     175: goto          233
     178: bipush        7
     180: istore        7
     182: iload         8
     184: ifge          233
     187: ldc           #84                 // String PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1
     189: iconst_0
     190: anewarray     #13                 // class java/lang/Object
     193: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
     196: athrow
     197: iload         8
     199: sipush        16384
     202: if_icmplt     212
     205: iload         8
     207: ldc           #85                 // int 16777215
     209: if_icmple     233
     212: ldc           #86                 // String PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s
     214: iconst_1
     215: anewarray     #13                 // class java/lang/Object
     218: dup
     219: iconst_0
     220: iload         8
     222: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     225: aastore
     226: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
     229: athrow
     230: goto          233
     233: aload         5
     235: iload         7
     237: iload         8
     239: invokevirtual #87                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     242: pop
     243: iinc          6, 6
     246: goto          78
     249: aload_1
     250: iconst_0
     251: aload         5
     253: invokeinterface #88,  3           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.settings:(ZLokhttp3/internal/http2/Settings;)V
     258: return

  private void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifne          15
       5: ldc           #89                 // String PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0
       7: iconst_0
       8: anewarray     #13                 // class java/lang/Object
      11: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      14: athrow
      15: iload_3
      16: bipush        8
      18: iand
      19: ifeq          39
      22: aload_0
      23: getfield      #3                  // Field source:Lokio/BufferedSource;
      26: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      31: sipush        255
      34: iand
      35: i2s
      36: goto          40
      39: iconst_0
      40: istore        5
      42: aload_0
      43: getfield      #3                  // Field source:Lokio/BufferedSource;
      46: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      51: ldc           #39                 // int 2147483647
      53: iand
      54: istore        6
      56: iinc          2, -4
      59: iload_2
      60: iload_3
      61: iload         5
      63: invokestatic  #53                 // Method lengthWithoutPadding:(IBS)I
      66: istore_2
      67: aload_0
      68: iload_2
      69: iload         5
      71: iload_3
      72: iload         4
      74: invokespecial #54                 // Method readHeaderBlock:(ISBI)Ljava/util/List;
      77: astore        7
      79: aload_1
      80: iload         4
      82: iload         6
      84: aload         7
      86: invokeinterface #90,  4           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.pushPromise:(IILjava/util/List;)V
      91: return

  private void readPing(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: bipush        8
       3: if_icmpeq     23
       6: ldc           #91                 // String TYPE_PING length != 8: %s
       8: iconst_1
       9: anewarray     #13                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: iload_2
      15: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aastore
      19: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      22: athrow
      23: iload         4
      25: ifeq          38
      28: ldc           #92                 // String TYPE_PING streamId != 0
      30: iconst_0
      31: anewarray     #13                 // class java/lang/Object
      34: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      37: athrow
      38: aload_0
      39: getfield      #3                  // Field source:Lokio/BufferedSource;
      42: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      47: istore        5
      49: aload_0
      50: getfield      #3                  // Field source:Lokio/BufferedSource;
      53: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      58: istore        6
      60: iload_3
      61: iconst_1
      62: iand
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore        7
      73: aload_1
      74: iload         7
      76: iload         5
      78: iload         6
      80: invokeinterface #93,  4           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.ping:(ZII)V
      85: return

  private void readGoAway(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: bipush        8
       3: if_icmpge     23
       6: ldc           #94                 // String TYPE_GOAWAY length < 8: %s
       8: iconst_1
       9: anewarray     #13                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: iload_2
      15: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aastore
      19: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      22: athrow
      23: iload         4
      25: ifeq          38
      28: ldc           #95                 // String TYPE_GOAWAY streamId != 0
      30: iconst_0
      31: anewarray     #13                 // class java/lang/Object
      34: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      37: athrow
      38: aload_0
      39: getfield      #3                  // Field source:Lokio/BufferedSource;
      42: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      47: istore        5
      49: aload_0
      50: getfield      #3                  // Field source:Lokio/BufferedSource;
      53: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      58: istore        6
      60: iload_2
      61: bipush        8
      63: isub
      64: istore        7
      66: iload         6
      68: invokestatic  #72                 // Method okhttp3/internal/http2/ErrorCode.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;
      71: astore        8
      73: aload         8
      75: ifnonnull     96
      78: ldc           #96                 // String TYPE_GOAWAY unexpected error code: %d
      80: iconst_1
      81: anewarray     #13                 // class java/lang/Object
      84: dup
      85: iconst_0
      86: iload         6
      88: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: aastore
      92: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      95: athrow
      96: getstatic     #97                 // Field okio/ByteString.EMPTY:Lokio/ByteString;
      99: astore        9
     101: iload         7
     103: ifle          120
     106: aload_0
     107: getfield      #3                  // Field source:Lokio/BufferedSource;
     110: iload         7
     112: i2l
     113: invokeinterface #17,  3           // InterfaceMethod okio/BufferedSource.readByteString:(J)Lokio/ByteString;
     118: astore        9
     120: aload_1
     121: iload         5
     123: aload         8
     125: aload         9
     127: invokeinterface #98,  4           // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V
     132: return

  private void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler, int, byte, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iconst_4
       2: if_icmpeq     22
       5: ldc           #99                 // String TYPE_WINDOW_UPDATE length !=4: %s
       7: iconst_1
       8: anewarray     #13                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: iload_2
      14: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aastore
      18: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      21: athrow
      22: aload_0
      23: getfield      #3                  // Field source:Lokio/BufferedSource;
      26: invokeinterface #38,  1           // InterfaceMethod okio/BufferedSource.readInt:()I
      31: i2l
      32: ldc2_w        #100                // long 2147483647l
      35: land
      36: lstore        5
      38: lload         5
      40: lconst_0
      41: lcmp
      42: ifne          63
      45: ldc           #102                // String windowSizeIncrement was 0
      47: iconst_1
      48: anewarray     #13                 // class java/lang/Object
      51: dup
      52: iconst_0
      53: lload         5
      55: invokestatic  #103                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      58: aastore
      59: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      62: athrow
      63: aload_1
      64: iload         4
      66: lload         5
      68: invokeinterface #104,  4          // InterfaceMethod okhttp3/internal/http2/Http2Reader$Handler.windowUpdate:(IJ)V
      73: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field source:Lokio/BufferedSource;
       4: invokeinterface #105,  1          // InterfaceMethod okio/BufferedSource.close:()V
       9: return

  static int readMedium(okio.BufferedSource) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
       6: sipush        255
       9: iand
      10: bipush        16
      12: ishl
      13: aload_0
      14: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      19: sipush        255
      22: iand
      23: bipush        8
      25: ishl
      26: ior
      27: aload_0
      28: invokeinterface #35,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      33: sipush        255
      36: iand
      37: ior
      38: ireturn

  static int lengthWithoutPadding(int, byte, short) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        8
       3: iand
       4: ifeq          10
       7: iinc          0, -1
      10: iload_2
      11: iload_0
      12: if_icmple     39
      15: ldc           #106                // String PROTOCOL_ERROR padding %s > remaining length %s
      17: iconst_2
      18: anewarray     #13                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: iload_2
      24: invokestatic  #107                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      27: aastore
      28: dup
      29: iconst_1
      30: iload_0
      31: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokestatic  #14                 // Method okhttp3/internal/http2/Http2.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;
      38: athrow
      39: iload_0
      40: iload_2
      41: isub
      42: i2s
      43: ireturn

  static {};
    Code:
       0: ldc           #1                  // class okhttp3/internal/http2/Http2
       2: invokevirtual #108                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #109                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #18                 // Field logger:Ljava/util/logging/Logger;
      11: return
}
