Compiled from "Relay.java"
final class okhttp3.internal.cache2.Relay {
  private static final int SOURCE_UPSTREAM;

  private static final int SOURCE_FILE;

  static final okio.ByteString PREFIX_CLEAN;

  static final okio.ByteString PREFIX_DIRTY;

  private static final long FILE_HEADER_SIZE;

  java.io.RandomAccessFile file;

  java.lang.Thread upstreamReader;

  okio.Source upstream;

  final okio.Buffer upstreamBuffer;

  long upstreamPos;

  boolean complete;

  private final okio.ByteString metadata;

  final okio.Buffer buffer;

  final long bufferMaxSize;

  int sourceCount;

  private okhttp3.internal.cache2.Relay(java.io.RandomAccessFile, okio.Source, long, okio.ByteString, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class okio/Buffer
       8: dup
       9: invokespecial #3                  // Method okio/Buffer."<init>":()V
      12: putfield      #4                  // Field upstreamBuffer:Lokio/Buffer;
      15: aload_0
      16: new           #2                  // class okio/Buffer
      19: dup
      20: invokespecial #3                  // Method okio/Buffer."<init>":()V
      23: putfield      #5                  // Field buffer:Lokio/Buffer;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field file:Ljava/io/RandomAccessFile;
      31: aload_0
      32: aload_2
      33: putfield      #7                  // Field upstream:Lokio/Source;
      36: aload_0
      37: aload_2
      38: ifnonnull     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: putfield      #8                  // Field complete:Z
      49: aload_0
      50: lload_3
      51: putfield      #9                  // Field upstreamPos:J
      54: aload_0
      55: aload         5
      57: putfield      #10                 // Field metadata:Lokio/ByteString;
      60: aload_0
      61: lload         6
      63: putfield      #11                 // Field bufferMaxSize:J
      66: return

  public static okhttp3.internal.cache2.Relay edit(java.io.File, okio.Source, okio.ByteString, long) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/RandomAccessFile
       3: dup
       4: aload_0
       5: ldc           #13                 // String rw
       7: invokespecial #14                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      10: astore        5
      12: new           #15                 // class okhttp3/internal/cache2/Relay
      15: dup
      16: aload         5
      18: aload_1
      19: lconst_0
      20: aload_2
      21: lload_3
      22: invokespecial #16                 // Method "<init>":(Ljava/io/RandomAccessFile;Lokio/Source;JLokio/ByteString;J)V
      25: astore        6
      27: aload         5
      29: lconst_0
      30: invokevirtual #17                 // Method java/io/RandomAccessFile.setLength:(J)V
      33: aload         6
      35: getstatic     #18                 // Field PREFIX_DIRTY:Lokio/ByteString;
      38: ldc2_w        #19                 // long -1l
      41: ldc2_w        #19                 // long -1l
      44: invokespecial #21                 // Method writeHeader:(Lokio/ByteString;JJ)V
      47: aload         6
      49: areturn

  public static okhttp3.internal.cache2.Relay read(java.io.File) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/RandomAccessFile
       3: dup
       4: aload_0
       5: ldc           #13                 // String rw
       7: invokespecial #14                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      10: astore_1
      11: new           #22                 // class okhttp3/internal/cache2/FileOperator
      14: dup
      15: aload_1
      16: invokevirtual #23                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      19: invokespecial #24                 // Method okhttp3/internal/cache2/FileOperator."<init>":(Ljava/nio/channels/FileChannel;)V
      22: astore_2
      23: new           #2                  // class okio/Buffer
      26: dup
      27: invokespecial #3                  // Method okio/Buffer."<init>":()V
      30: astore_3
      31: aload_2
      32: lconst_0
      33: aload_3
      34: ldc2_w        #25                 // long 32l
      37: invokevirtual #27                 // Method okhttp3/internal/cache2/FileOperator.read:(JLokio/Buffer;J)V
      40: aload_3
      41: getstatic     #28                 // Field PREFIX_CLEAN:Lokio/ByteString;
      44: invokevirtual #29                 // Method okio/ByteString.size:()I
      47: i2l
      48: invokevirtual #30                 // Method okio/Buffer.readByteString:(J)Lokio/ByteString;
      51: astore        4
      53: aload         4
      55: getstatic     #28                 // Field PREFIX_CLEAN:Lokio/ByteString;
      58: invokevirtual #31                 // Method okio/ByteString.equals:(Ljava/lang/Object;)Z
      61: ifne          74
      64: new           #32                 // class java/io/IOException
      67: dup
      68: ldc           #33                 // String unreadable cache file
      70: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_3
      75: invokevirtual #35                 // Method okio/Buffer.readLong:()J
      78: lstore        5
      80: aload_3
      81: invokevirtual #35                 // Method okio/Buffer.readLong:()J
      84: lstore        7
      86: new           #2                  // class okio/Buffer
      89: dup
      90: invokespecial #3                  // Method okio/Buffer."<init>":()V
      93: astore        9
      95: aload_2
      96: ldc2_w        #25                 // long 32l
      99: lload         5
     101: ladd
     102: aload         9
     104: lload         7
     106: invokevirtual #27                 // Method okhttp3/internal/cache2/FileOperator.read:(JLokio/Buffer;J)V
     109: aload         9
     111: invokevirtual #36                 // Method okio/Buffer.readByteString:()Lokio/ByteString;
     114: astore        10
     116: new           #15                 // class okhttp3/internal/cache2/Relay
     119: dup
     120: aload_1
     121: aconst_null
     122: lload         5
     124: aload         10
     126: lconst_0
     127: invokespecial #16                 // Method "<init>":(Ljava/io/RandomAccessFile;Lokio/Source;JLokio/ByteString;J)V
     130: areturn

  private void writeHeader(okio.ByteString, long, long) throws java.io.IOException;
    Code:
       0: new           #2                  // class okio/Buffer
       3: dup
       4: invokespecial #3                  // Method okio/Buffer."<init>":()V
       7: astore        6
       9: aload         6
      11: aload_1
      12: invokevirtual #37                 // Method okio/Buffer.write:(Lokio/ByteString;)Lokio/Buffer;
      15: pop
      16: aload         6
      18: lload_2
      19: invokevirtual #38                 // Method okio/Buffer.writeLong:(J)Lokio/Buffer;
      22: pop
      23: aload         6
      25: lload         4
      27: invokevirtual #38                 // Method okio/Buffer.writeLong:(J)Lokio/Buffer;
      30: pop
      31: aload         6
      33: invokevirtual #39                 // Method okio/Buffer.size:()J
      36: ldc2_w        #25                 // long 32l
      39: lcmp
      40: ifeq          51
      43: new           #40                 // class java/lang/IllegalArgumentException
      46: dup
      47: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      50: athrow
      51: new           #22                 // class okhttp3/internal/cache2/FileOperator
      54: dup
      55: aload_0
      56: getfield      #6                  // Field file:Ljava/io/RandomAccessFile;
      59: invokevirtual #23                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      62: invokespecial #24                 // Method okhttp3/internal/cache2/FileOperator."<init>":(Ljava/nio/channels/FileChannel;)V
      65: astore        7
      67: aload         7
      69: lconst_0
      70: aload         6
      72: ldc2_w        #25                 // long 32l
      75: invokevirtual #42                 // Method okhttp3/internal/cache2/FileOperator.write:(JLokio/Buffer;J)V
      78: return

  private void writeMetadata(long) throws java.io.IOException;
    Code:
       0: new           #2                  // class okio/Buffer
       3: dup
       4: invokespecial #3                  // Method okio/Buffer."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #10                 // Field metadata:Lokio/ByteString;
      13: invokevirtual #37                 // Method okio/Buffer.write:(Lokio/ByteString;)Lokio/Buffer;
      16: pop
      17: new           #22                 // class okhttp3/internal/cache2/FileOperator
      20: dup
      21: aload_0
      22: getfield      #6                  // Field file:Ljava/io/RandomAccessFile;
      25: invokevirtual #23                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      28: invokespecial #24                 // Method okhttp3/internal/cache2/FileOperator."<init>":(Ljava/nio/channels/FileChannel;)V
      31: astore        4
      33: aload         4
      35: ldc2_w        #25                 // long 32l
      38: lload_1
      39: ladd
      40: aload_3
      41: aload_0
      42: getfield      #10                 // Field metadata:Lokio/ByteString;
      45: invokevirtual #29                 // Method okio/ByteString.size:()I
      48: i2l
      49: invokevirtual #42                 // Method okhttp3/internal/cache2/FileOperator.write:(JLokio/Buffer;J)V
      52: return

  void commit(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #43                 // Method writeMetadata:(J)V
       5: aload_0
       6: getfield      #6                  // Field file:Ljava/io/RandomAccessFile;
       9: invokevirtual #23                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      12: iconst_0
      13: invokevirtual #44                 // Method java/nio/channels/FileChannel.force:(Z)V
      16: aload_0
      17: getstatic     #28                 // Field PREFIX_CLEAN:Lokio/ByteString;
      20: lload_1
      21: aload_0
      22: getfield      #10                 // Field metadata:Lokio/ByteString;
      25: invokevirtual #29                 // Method okio/ByteString.size:()I
      28: i2l
      29: invokespecial #21                 // Method writeHeader:(Lokio/ByteString;JJ)V
      32: aload_0
      33: getfield      #6                  // Field file:Ljava/io/RandomAccessFile;
      36: invokevirtual #23                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      39: iconst_0
      40: invokevirtual #44                 // Method java/nio/channels/FileChannel.force:(Z)V
      43: aload_0
      44: dup
      45: astore_3
      46: monitorenter
      47: aload_0
      48: iconst_1
      49: putfield      #8                  // Field complete:Z
      52: aload_3
      53: monitorexit
      54: goto          64
      57: astore        4
      59: aload_3
      60: monitorexit
      61: aload         4
      63: athrow
      64: aload_0
      65: getfield      #7                  // Field upstream:Lokio/Source;
      68: invokestatic  #45                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      71: aload_0
      72: aconst_null
      73: putfield      #7                  // Field upstream:Lokio/Source;
      76: return
    Exception table:
       from    to  target type
          47    54    57   any
          57    61    57   any

  boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field file:Ljava/io/RandomAccessFile;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public okio.ByteString metadata();
    Code:
       0: aload_0
       1: getfield      #10                 // Field metadata:Lokio/ByteString;
       4: areturn

  public okio.Source newSource();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #6                  // Field file:Ljava/io/RandomAccessFile;
       8: ifnonnull     15
      11: aconst_null
      12: aload_1
      13: monitorexit
      14: areturn
      15: aload_0
      16: dup
      17: getfield      #46                 // Field sourceCount:I
      20: iconst_1
      21: iadd
      22: putfield      #46                 // Field sourceCount:I
      25: aload_1
      26: monitorexit
      27: goto          35
      30: astore_2
      31: aload_1
      32: monitorexit
      33: aload_2
      34: athrow
      35: new           #47                 // class okhttp3/internal/cache2/Relay$RelaySource
      38: dup
      39: aload_0
      40: invokespecial #48                 // Method okhttp3/internal/cache2/Relay$RelaySource."<init>":(Lokhttp3/internal/cache2/Relay;)V
      43: areturn
    Exception table:
       from    to  target type
           4    14    30   any
          15    27    30   any
          30    33    30   any

  static {};
    Code:
       0: ldc           #49                 // String OkHttp cache v1\n
       2: invokestatic  #50                 // Method okio/ByteString.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;
       5: putstatic     #28                 // Field PREFIX_CLEAN:Lokio/ByteString;
       8: ldc           #51                 // String OkHttp DIRTY :(\n
      10: invokestatic  #50                 // Method okio/ByteString.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;
      13: putstatic     #18                 // Field PREFIX_DIRTY:Lokio/ByteString;
      16: return
}
