Compiled from "Http2Stream.java"
final class okhttp3.internal.http2.Http2Stream$FramingSource implements okio.Source {
  private final okio.Buffer receiveBuffer;

  private final okio.Buffer readBuffer;

  private final long maxByteCount;

  private okhttp3.Headers trailers;

  boolean closed;

  boolean finished;

  static final boolean $assertionsDisabled;

  final okhttp3.internal.http2.Http2Stream this$0;

  okhttp3.internal.http2.Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #6                  // class okio/Buffer
      13: dup
      14: invokespecial #7                  // Method okio/Buffer."<init>":()V
      17: putfield      #3                  // Field receiveBuffer:Lokio/Buffer;
      20: aload_0
      21: new           #6                  // class okio/Buffer
      24: dup
      25: invokespecial #7                  // Method okio/Buffer."<init>":()V
      28: putfield      #2                  // Field readBuffer:Lokio/Buffer;
      31: aload_0
      32: lload_2
      33: putfield      #8                  // Field maxByteCount:J
      36: return

  public long read(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #9                  // class java/lang/IllegalArgumentException
       9: dup
      10: new           #10                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #12                 // String byteCount < 0:
      19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_2
      23: invokevirtual #14                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: ldc2_w        #17                 // long -1l
      36: lstore        4
      38: aconst_null
      39: astore        6
      41: aload_0
      42: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      45: dup
      46: astore        7
      48: monitorenter
      49: aload_0
      50: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      53: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      56: invokevirtual #20                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
      59: aload_0
      60: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      63: getfield      #21                 // Field okhttp3/internal/http2/Http2Stream.errorCode:Lokhttp3/internal/http2/ErrorCode;
      66: ifnull        105
      69: aload_0
      70: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      73: getfield      #22                 // Field okhttp3/internal/http2/Http2Stream.errorException:Ljava/io/IOException;
      76: ifnull        89
      79: aload_0
      80: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      83: getfield      #22                 // Field okhttp3/internal/http2/Http2Stream.errorException:Ljava/io/IOException;
      86: goto          103
      89: new           #23                 // class okhttp3/internal/http2/StreamResetException
      92: dup
      93: aload_0
      94: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      97: getfield      #21                 // Field okhttp3/internal/http2/Http2Stream.errorCode:Lokhttp3/internal/http2/ErrorCode;
     100: invokespecial #24                 // Method okhttp3/internal/http2/StreamResetException."<init>":(Lokhttp3/internal/http2/ErrorCode;)V
     103: astore        6
     105: aload_0
     106: getfield      #25                 // Field closed:Z
     109: ifeq          122
     112: new           #26                 // class java/io/IOException
     115: dup
     116: ldc           #27                 // String stream closed
     118: invokespecial #28                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: aload_0
     123: getfield      #2                  // Field readBuffer:Lokio/Buffer;
     126: invokevirtual #29                 // Method okio/Buffer.size:()J
     129: lconst_0
     130: lcmp
     131: ifle          236
     134: aload_0
     135: getfield      #2                  // Field readBuffer:Lokio/Buffer;
     138: aload_1
     139: lload_2
     140: aload_0
     141: getfield      #2                  // Field readBuffer:Lokio/Buffer;
     144: invokevirtual #29                 // Method okio/Buffer.size:()J
     147: invokestatic  #30                 // Method java/lang/Math.min:(JJ)J
     150: invokevirtual #31                 // Method okio/Buffer.read:(Lokio/Buffer;J)J
     153: lstore        4
     155: aload_0
     156: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     159: dup
     160: getfield      #32                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     163: lload         4
     165: ladd
     166: putfield      #32                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     169: aload         6
     171: ifnonnull     271
     174: aload_0
     175: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     178: getfield      #32                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     181: aload_0
     182: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     185: getfield      #33                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     188: getfield      #34                 // Field okhttp3/internal/http2/Http2Connection.okHttpSettings:Lokhttp3/internal/http2/Settings;
     191: invokevirtual #35                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     194: iconst_2
     195: idiv
     196: i2l
     197: lcmp
     198: iflt          271
     201: aload_0
     202: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     205: getfield      #33                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     208: aload_0
     209: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     212: getfield      #36                 // Field okhttp3/internal/http2/Http2Stream.id:I
     215: aload_0
     216: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     219: getfield      #32                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     222: invokevirtual #37                 // Method okhttp3/internal/http2/Http2Connection.writeWindowUpdateLater:(IJ)V
     225: aload_0
     226: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     229: lconst_0
     230: putfield      #32                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     233: goto          271
     236: aload_0
     237: getfield      #38                 // Field finished:Z
     240: ifne          271
     243: aload         6
     245: ifnonnull     271
     248: aload_0
     249: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     252: invokevirtual #39                 // Method okhttp3/internal/http2/Http2Stream.waitForIo:()V
     255: aload_0
     256: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     259: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     262: invokevirtual #40                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     265: aload         7
     267: monitorexit
     268: goto          33
     271: aload_0
     272: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     275: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     278: invokevirtual #40                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     281: goto          299
     284: astore        8
     286: aload_0
     287: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     290: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     293: invokevirtual #40                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     296: aload         8
     298: athrow
     299: aload         7
     301: monitorexit
     302: goto          313
     305: astore        9
     307: aload         7
     309: monitorexit
     310: aload         9
     312: athrow
     313: lload         4
     315: ldc2_w        #17                 // long -1l
     318: lcmp
     319: ifeq          331
     322: aload_0
     323: lload         4
     325: invokespecial #41                 // Method updateConnectionFlowControl:(J)V
     328: lload         4
     330: lreturn
     331: aload         6
     333: ifnull        339
     336: aload         6
     338: athrow
     339: ldc2_w        #17                 // long -1l
     342: lreturn
    Exception table:
       from    to  target type
          59   255   284   any
         284   286   284   any
          49   268   305   any
         271   302   305   any
         305   310   305   any

  private void updateConnectionFlowControl(long);
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: new           #44                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      28: getfield      #33                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
      31: lload_1
      32: invokevirtual #46                 // Method okhttp3/internal/http2/Http2Connection.updateConnectionFlowControl:(J)V
      35: return

  void receive(okio.BufferedSource, long) throws java.io.IOException;
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: new           #44                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: lload_2
      25: lconst_0
      26: lcmp
      27: ifle          263
      30: aload_0
      31: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      34: dup
      35: astore        6
      37: monitorenter
      38: aload_0
      39: getfield      #38                 // Field finished:Z
      42: istore        4
      44: lload_2
      45: aload_0
      46: getfield      #2                  // Field readBuffer:Lokio/Buffer;
      49: invokevirtual #29                 // Method okio/Buffer.size:()J
      52: ladd
      53: aload_0
      54: getfield      #8                  // Field maxByteCount:J
      57: lcmp
      58: ifle          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: istore        5
      68: aload         6
      70: monitorexit
      71: goto          82
      74: astore        7
      76: aload         6
      78: monitorexit
      79: aload         7
      81: athrow
      82: iload         5
      84: ifeq          105
      87: aload_1
      88: lload_2
      89: invokeinterface #47,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
      94: aload_0
      95: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      98: getstatic     #48                 // Field okhttp3/internal/http2/ErrorCode.FLOW_CONTROL_ERROR:Lokhttp3/internal/http2/ErrorCode;
     101: invokevirtual #49                 // Method okhttp3/internal/http2/Http2Stream.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V
     104: return
     105: iload         4
     107: ifeq          118
     110: aload_1
     111: lload_2
     112: invokeinterface #47,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
     117: return
     118: aload_1
     119: aload_0
     120: getfield      #3                  // Field receiveBuffer:Lokio/Buffer;
     123: lload_2
     124: invokeinterface #50,  4           // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
     129: lstore        6
     131: lload         6
     133: ldc2_w        #17                 // long -1l
     136: lcmp
     137: ifne          148
     140: new           #51                 // class java/io/EOFException
     143: dup
     144: invokespecial #52                 // Method java/io/EOFException."<init>":()V
     147: athrow
     148: lload_2
     149: lload         6
     151: lsub
     152: lstore_2
     153: lconst_0
     154: lstore        8
     156: aload_0
     157: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     160: dup
     161: astore        10
     163: monitorenter
     164: aload_0
     165: getfield      #25                 // Field closed:Z
     168: ifeq          190
     171: aload_0
     172: getfield      #3                  // Field receiveBuffer:Lokio/Buffer;
     175: invokevirtual #29                 // Method okio/Buffer.size:()J
     178: lstore        8
     180: aload_0
     181: getfield      #3                  // Field receiveBuffer:Lokio/Buffer;
     184: invokevirtual #53                 // Method okio/Buffer.clear:()V
     187: goto          233
     190: aload_0
     191: getfield      #2                  // Field readBuffer:Lokio/Buffer;
     194: invokevirtual #29                 // Method okio/Buffer.size:()J
     197: lconst_0
     198: lcmp
     199: ifne          206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: istore        11
     209: aload_0
     210: getfield      #2                  // Field readBuffer:Lokio/Buffer;
     213: aload_0
     214: getfield      #3                  // Field receiveBuffer:Lokio/Buffer;
     217: invokevirtual #54                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
     220: pop2
     221: iload         11
     223: ifeq          233
     226: aload_0
     227: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     230: invokevirtual #55                 // Method java/lang/Object.notifyAll:()V
     233: aload         10
     235: monitorexit
     236: goto          247
     239: astore        12
     241: aload         10
     243: monitorexit
     244: aload         12
     246: athrow
     247: lload         8
     249: lconst_0
     250: lcmp
     251: ifle          260
     254: aload_0
     255: lload         8
     257: invokespecial #41                 // Method updateConnectionFlowControl:(J)V
     260: goto          24
     263: return
    Exception table:
       from    to  target type
          38    71    74   any
          74    79    74   any
         164   236   239   any
         239   244   239   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #25                 // Field closed:Z
      12: aload_0
      13: getfield      #2                  // Field readBuffer:Lokio/Buffer;
      16: invokevirtual #29                 // Method okio/Buffer.size:()J
      19: lstore_1
      20: aload_0
      21: getfield      #2                  // Field readBuffer:Lokio/Buffer;
      24: invokevirtual #53                 // Method okio/Buffer.clear:()V
      27: aload_0
      28: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      31: invokevirtual #55                 // Method java/lang/Object.notifyAll:()V
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        4
      41: aload_3
      42: monitorexit
      43: aload         4
      45: athrow
      46: lload_1
      47: lconst_0
      48: lcmp
      49: ifle          57
      52: aload_0
      53: lload_1
      54: invokespecial #41                 // Method updateConnectionFlowControl:(J)V
      57: aload_0
      58: getfield      #4                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      61: invokevirtual #56                 // Method okhttp3/internal/http2/Http2Stream.cancelStreamIfNecessary:()V
      64: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    43    39   any

  static okio.Buffer access$000(okhttp3.internal.http2.Http2Stream$FramingSource);
    Code:
       0: aload_0
       1: getfield      #3                  // Field receiveBuffer:Lokio/Buffer;
       4: areturn

  static okio.Buffer access$100(okhttp3.internal.http2.Http2Stream$FramingSource);
    Code:
       0: aload_0
       1: getfield      #2                  // Field readBuffer:Lokio/Buffer;
       4: areturn

  static okhttp3.Headers access$200(okhttp3.internal.http2.Http2Stream$FramingSource);
    Code:
       0: aload_0
       1: getfield      #1                  // Field trailers:Lokhttp3/Headers;
       4: areturn

  static okhttp3.Headers access$202(okhttp3.internal.http2.Http2Stream$FramingSource, okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field trailers:Lokhttp3/Headers;
       6: areturn

  static {};
    Code:
       0: ldc           #57                 // class okhttp3/internal/http2/Http2Stream
       2: invokevirtual #58                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #42                 // Field $assertionsDisabled:Z
      16: return
}
