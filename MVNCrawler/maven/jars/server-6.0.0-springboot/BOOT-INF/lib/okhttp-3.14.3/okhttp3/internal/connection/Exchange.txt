Compiled from "Exchange.java"
public final class okhttp3.internal.connection.Exchange {
  final okhttp3.internal.connection.Transmitter transmitter;

  final okhttp3.Call call;

  final okhttp3.EventListener eventListener;

  final okhttp3.internal.connection.ExchangeFinder finder;

  final okhttp3.internal.http.ExchangeCodec codec;

  private boolean duplex;

  public okhttp3.internal.connection.Exchange(okhttp3.internal.connection.Transmitter, okhttp3.Call, okhttp3.EventListener, okhttp3.internal.connection.ExchangeFinder, okhttp3.internal.http.ExchangeCodec);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field call:Lokhttp3/Call;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field finder:Lokhttp3/internal/connection/ExchangeFinder;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      31: return

  public okhttp3.internal.connection.RealConnection connection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #7,  1            // InterfaceMethod okhttp3/internal/http/ExchangeCodec.connection:()Lokhttp3/internal/connection/RealConnection;
       9: areturn

  public boolean isDuplex();
    Code:
       0: aload_0
       1: getfield      #8                  // Field duplex:Z
       4: ireturn

  public void writeRequestHeaders(okhttp3.Request) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
       4: aload_0
       5: getfield      #3                  // Field call:Lokhttp3/Call;
       8: invokevirtual #9                  // Method okhttp3/EventListener.requestHeadersStart:(Lokhttp3/Call;)V
      11: aload_0
      12: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      15: aload_1
      16: invokeinterface #10,  2           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.writeRequestHeaders:(Lokhttp3/Request;)V
      21: aload_0
      22: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      25: aload_0
      26: getfield      #3                  // Field call:Lokhttp3/Call;
      29: aload_1
      30: invokevirtual #11                 // Method okhttp3/EventListener.requestHeadersEnd:(Lokhttp3/Call;Lokhttp3/Request;)V
      33: goto          56
      36: astore_2
      37: aload_0
      38: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      41: aload_0
      42: getfield      #3                  // Field call:Lokhttp3/Call;
      45: aload_2
      46: invokevirtual #13                 // Method okhttp3/EventListener.requestFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      49: aload_0
      50: aload_2
      51: invokevirtual #14                 // Method trackFailure:(Ljava/io/IOException;)V
      54: aload_2
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    33    36   Class java/io/IOException

  public okio.Sink createRequestBody(okhttp3.Request, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #8                  // Field duplex:Z
       5: aload_1
       6: invokevirtual #15                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
       9: invokevirtual #16                 // Method okhttp3/RequestBody.contentLength:()J
      12: lstore_3
      13: aload_0
      14: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      17: aload_0
      18: getfield      #3                  // Field call:Lokhttp3/Call;
      21: invokevirtual #17                 // Method okhttp3/EventListener.requestBodyStart:(Lokhttp3/Call;)V
      24: aload_0
      25: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      28: aload_1
      29: lload_3
      30: invokeinterface #18,  4           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;
      35: astore        5
      37: new           #19                 // class okhttp3/internal/connection/Exchange$RequestBodySink
      40: dup
      41: aload_0
      42: aload         5
      44: lload_3
      45: invokespecial #20                 // Method okhttp3/internal/connection/Exchange$RequestBodySink."<init>":(Lokhttp3/internal/connection/Exchange;Lokio/Sink;J)V
      48: areturn

  public void flushRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #21,  1           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.flushRequest:()V
       9: goto          32
      12: astore_1
      13: aload_0
      14: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      17: aload_0
      18: getfield      #3                  // Field call:Lokhttp3/Call;
      21: aload_1
      22: invokevirtual #13                 // Method okhttp3/EventListener.requestFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      25: aload_0
      26: aload_1
      27: invokevirtual #14                 // Method trackFailure:(Ljava/io/IOException;)V
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  public void finishRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #22,  1           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.finishRequest:()V
       9: goto          32
      12: astore_1
      13: aload_0
      14: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      17: aload_0
      18: getfield      #3                  // Field call:Lokhttp3/Call;
      21: aload_1
      22: invokevirtual #13                 // Method okhttp3/EventListener.requestFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      25: aload_0
      26: aload_1
      27: invokevirtual #14                 // Method trackFailure:(Ljava/io/IOException;)V
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  public void responseHeadersStart();
    Code:
       0: aload_0
       1: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
       4: aload_0
       5: getfield      #3                  // Field call:Lokhttp3/Call;
       8: invokevirtual #23                 // Method okhttp3/EventListener.responseHeadersStart:(Lokhttp3/Call;)V
      11: return

  public okhttp3.Response$Builder readResponseHeaders(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: iload_1
       5: invokeinterface #24,  2           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.readResponseHeaders:(Z)Lokhttp3/Response$Builder;
      10: astore_2
      11: aload_2
      12: ifnull        23
      15: getstatic     #25                 // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
      18: aload_2
      19: aload_0
      20: invokevirtual #26                 // Method okhttp3/internal/Internal.initExchange:(Lokhttp3/Response$Builder;Lokhttp3/internal/connection/Exchange;)V
      23: aload_2
      24: areturn
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      30: aload_0
      31: getfield      #3                  // Field call:Lokhttp3/Call;
      34: aload_2
      35: invokevirtual #27                 // Method okhttp3/EventListener.responseFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      38: aload_0
      39: aload_2
      40: invokevirtual #14                 // Method trackFailure:(Ljava/io/IOException;)V
      43: aload_2
      44: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/io/IOException

  public void responseHeadersEnd(okhttp3.Response);
    Code:
       0: aload_0
       1: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
       4: aload_0
       5: getfield      #3                  // Field call:Lokhttp3/Call;
       8: aload_1
       9: invokevirtual #28                 // Method okhttp3/EventListener.responseHeadersEnd:(Lokhttp3/Call;Lokhttp3/Response;)V
      12: return

  public okhttp3.ResponseBody openResponseBody(okhttp3.Response) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
       4: aload_0
       5: getfield      #3                  // Field call:Lokhttp3/Call;
       8: invokevirtual #29                 // Method okhttp3/EventListener.responseBodyStart:(Lokhttp3/Call;)V
      11: aload_1
      12: ldc           #30                 // String Content-Type
      14: invokevirtual #31                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_2
      18: aload_0
      19: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      22: aload_1
      23: invokeinterface #32,  2           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.reportedContentLength:(Lokhttp3/Response;)J
      28: lstore_3
      29: aload_0
      30: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      33: aload_1
      34: invokeinterface #33,  2           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.openResponseBodySource:(Lokhttp3/Response;)Lokio/Source;
      39: astore        5
      41: new           #34                 // class okhttp3/internal/connection/Exchange$ResponseBodySource
      44: dup
      45: aload_0
      46: aload         5
      48: lload_3
      49: invokespecial #35                 // Method okhttp3/internal/connection/Exchange$ResponseBodySource."<init>":(Lokhttp3/internal/connection/Exchange;Lokio/Source;J)V
      52: astore        6
      54: new           #36                 // class okhttp3/internal/http/RealResponseBody
      57: dup
      58: aload_2
      59: lload_3
      60: aload         6
      62: invokestatic  #37                 // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
      65: invokespecial #38                 // Method okhttp3/internal/http/RealResponseBody."<init>":(Ljava/lang/String;JLokio/BufferedSource;)V
      68: areturn
      69: astore_2
      70: aload_0
      71: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      74: aload_0
      75: getfield      #3                  // Field call:Lokhttp3/Call;
      78: aload_2
      79: invokevirtual #27                 // Method okhttp3/EventListener.responseFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      82: aload_0
      83: aload_2
      84: invokevirtual #14                 // Method trackFailure:(Ljava/io/IOException;)V
      87: aload_2
      88: athrow
    Exception table:
       from    to  target type
           0    68    69   Class java/io/IOException

  public okhttp3.Headers trailers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #39,  1           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.trailers:()Lokhttp3/Headers;
       9: areturn

  public void timeoutEarlyExit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: invokevirtual #40                 // Method okhttp3/internal/connection/Transmitter.timeoutEarlyExit:()V
       7: return

  public okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams() throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: invokevirtual #40                 // Method okhttp3/internal/connection/Transmitter.timeoutEarlyExit:()V
       7: aload_0
       8: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      11: invokeinterface #7,  1            // InterfaceMethod okhttp3/internal/http/ExchangeCodec.connection:()Lokhttp3/internal/connection/RealConnection;
      16: aload_0
      17: invokevirtual #41                 // Method okhttp3/internal/connection/RealConnection.newWebSocketStreams:(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/ws/RealWebSocket$Streams;
      20: areturn

  public void webSocketUpgradeFailed();
    Code:
       0: aload_0
       1: ldc2_w        #42                 // long -1l
       4: iconst_1
       5: iconst_1
       6: aconst_null
       7: invokevirtual #44                 // Method bodyComplete:(JZZLjava/io/IOException;)Ljava/io/IOException;
      10: pop
      11: return

  public void noNewExchangesOnConnection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #7,  1            // InterfaceMethod okhttp3/internal/http/ExchangeCodec.connection:()Lokhttp3/internal/connection/RealConnection;
       9: invokevirtual #45                 // Method okhttp3/internal/connection/RealConnection.noNewExchanges:()V
      12: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #46,  1           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.cancel:()V
       9: return

  public void detachWithViolence();
    Code:
       0: aload_0
       1: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
       4: invokeinterface #46,  1           // InterfaceMethod okhttp3/internal/http/ExchangeCodec.cancel:()V
       9: aload_0
      10: getfield      #2                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
      13: aload_0
      14: iconst_1
      15: iconst_1
      16: aconst_null
      17: invokevirtual #47                 // Method okhttp3/internal/connection/Transmitter.exchangeMessageDone:(Lokhttp3/internal/connection/Exchange;ZZLjava/io/IOException;)Ljava/io/IOException;
      20: pop
      21: return

  void trackFailure(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #5                  // Field finder:Lokhttp3/internal/connection/ExchangeFinder;
       4: invokevirtual #48                 // Method okhttp3/internal/connection/ExchangeFinder.trackFailure:()V
       7: aload_0
       8: getfield      #6                  // Field codec:Lokhttp3/internal/http/ExchangeCodec;
      11: invokeinterface #7,  1            // InterfaceMethod okhttp3/internal/http/ExchangeCodec.connection:()Lokhttp3/internal/connection/RealConnection;
      16: aload_1
      17: invokevirtual #49                 // Method okhttp3/internal/connection/RealConnection.trackFailure:(Ljava/io/IOException;)V
      20: return

  java.io.IOException bodyComplete(long, boolean, boolean, java.io.IOException);
    Code:
       0: aload         5
       2: ifnull        11
       5: aload_0
       6: aload         5
       8: invokevirtual #14                 // Method trackFailure:(Ljava/io/IOException;)V
      11: iload         4
      13: ifeq          49
      16: aload         5
      18: ifnull        37
      21: aload_0
      22: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      25: aload_0
      26: getfield      #3                  // Field call:Lokhttp3/Call;
      29: aload         5
      31: invokevirtual #13                 // Method okhttp3/EventListener.requestFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      34: goto          49
      37: aload_0
      38: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      41: aload_0
      42: getfield      #3                  // Field call:Lokhttp3/Call;
      45: lload_1
      46: invokevirtual #50                 // Method okhttp3/EventListener.requestBodyEnd:(Lokhttp3/Call;J)V
      49: iload_3
      50: ifeq          86
      53: aload         5
      55: ifnull        74
      58: aload_0
      59: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      62: aload_0
      63: getfield      #3                  // Field call:Lokhttp3/Call;
      66: aload         5
      68: invokevirtual #27                 // Method okhttp3/EventListener.responseFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
      71: goto          86
      74: aload_0
      75: getfield      #4                  // Field eventListener:Lokhttp3/EventListener;
      78: aload_0
      79: getfield      #3                  // Field call:Lokhttp3/Call;
      82: lload_1
      83: invokevirtual #51                 // Method okhttp3/EventListener.responseBodyEnd:(Lokhttp3/Call;J)V
      86: aload_0
      87: getfield      #2                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
      90: aload_0
      91: iload         4
      93: iload_3
      94: aload         5
      96: invokevirtual #47                 // Method okhttp3/internal/connection/Transmitter.exchangeMessageDone:(Lokhttp3/internal/connection/Exchange;ZZLjava/io/IOException;)Ljava/io/IOException;
      99: areturn

  public void noRequestBody();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: aload_0
       5: iconst_1
       6: iconst_0
       7: aconst_null
       8: invokevirtual #47                 // Method okhttp3/internal/connection/Transmitter.exchangeMessageDone:(Lokhttp3/internal/connection/Exchange;ZZLjava/io/IOException;)Ljava/io/IOException;
      11: pop
      12: return
}
