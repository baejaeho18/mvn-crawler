Compiled from "Hpack.java"
final class okhttp3.internal.http2.Hpack$Writer {
  private static final int SETTINGS_HEADER_TABLE_SIZE;

  private static final int SETTINGS_HEADER_TABLE_SIZE_LIMIT;

  private final okio.Buffer out;

  private final boolean useCompression;

  private int smallestHeaderTableSizeSetting;

  private boolean emitDynamicTableSizeUpdate;

  int headerTableSizeSetting;

  int maxDynamicTableByteCount;

  okhttp3.internal.http2.Header[] dynamicTable;

  int nextHeaderIndex;

  int headerCount;

  int dynamicTableByteCount;

  okhttp3.internal.http2.Hpack$Writer(okio.Buffer);
    Code:
       0: aload_0
       1: sipush        4096
       4: iconst_1
       5: aload_1
       6: invokespecial #3                  // Method "<init>":(IZLokio/Buffer;)V
       9: return

  okhttp3.internal.http2.Hpack$Writer(int, boolean, okio.Buffer);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #6                  // int 2147483647
       7: putfield      #7                  // Field smallestHeaderTableSizeSetting:I
      10: aload_0
      11: bipush        8
      13: anewarray     #8                  // class okhttp3/internal/http2/Header
      16: putfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      19: aload_0
      20: aload_0
      21: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      24: arraylength
      25: iconst_1
      26: isub
      27: putfield      #10                 // Field nextHeaderIndex:I
      30: aload_0
      31: iconst_0
      32: putfield      #11                 // Field headerCount:I
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field dynamicTableByteCount:I
      40: aload_0
      41: iload_1
      42: putfield      #13                 // Field headerTableSizeSetting:I
      45: aload_0
      46: iload_1
      47: putfield      #14                 // Field maxDynamicTableByteCount:I
      50: aload_0
      51: iload_2
      52: putfield      #15                 // Field useCompression:Z
      55: aload_0
      56: aload_3
      57: putfield      #16                 // Field out:Lokio/Buffer;
      60: return

  private void clearDynamicTable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
       4: aconst_null
       5: invokestatic  #17                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
       8: aload_0
       9: aload_0
      10: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      13: arraylength
      14: iconst_1
      15: isub
      16: putfield      #10                 // Field nextHeaderIndex:I
      19: aload_0
      20: iconst_0
      21: putfield      #11                 // Field headerCount:I
      24: aload_0
      25: iconst_0
      26: putfield      #12                 // Field dynamicTableByteCount:I
      29: return

  private int evictToRecoverBytes(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_1
       3: ifle          136
       6: aload_0
       7: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      10: arraylength
      11: iconst_1
      12: isub
      13: istore_3
      14: iload_3
      15: aload_0
      16: getfield      #10                 // Field nextHeaderIndex:I
      19: if_icmplt     75
      22: iload_1
      23: ifle          75
      26: iload_1
      27: aload_0
      28: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      31: iload_3
      32: aaload
      33: getfield      #18                 // Field okhttp3/internal/http2/Header.hpackSize:I
      36: isub
      37: istore_1
      38: aload_0
      39: dup
      40: getfield      #12                 // Field dynamicTableByteCount:I
      43: aload_0
      44: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      47: iload_3
      48: aaload
      49: getfield      #18                 // Field okhttp3/internal/http2/Header.hpackSize:I
      52: isub
      53: putfield      #12                 // Field dynamicTableByteCount:I
      56: aload_0
      57: dup
      58: getfield      #11                 // Field headerCount:I
      61: iconst_1
      62: isub
      63: putfield      #11                 // Field headerCount:I
      66: iinc          2, 1
      69: iinc          3, -1
      72: goto          14
      75: aload_0
      76: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      79: aload_0
      80: getfield      #10                 // Field nextHeaderIndex:I
      83: iconst_1
      84: iadd
      85: aload_0
      86: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      89: aload_0
      90: getfield      #10                 // Field nextHeaderIndex:I
      93: iconst_1
      94: iadd
      95: iload_2
      96: iadd
      97: aload_0
      98: getfield      #11                 // Field headerCount:I
     101: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     104: aload_0
     105: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
     108: aload_0
     109: getfield      #10                 // Field nextHeaderIndex:I
     112: iconst_1
     113: iadd
     114: aload_0
     115: getfield      #10                 // Field nextHeaderIndex:I
     118: iconst_1
     119: iadd
     120: iload_2
     121: iadd
     122: aconst_null
     123: invokestatic  #20                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     126: aload_0
     127: dup
     128: getfield      #10                 // Field nextHeaderIndex:I
     131: iload_2
     132: iadd
     133: putfield      #10                 // Field nextHeaderIndex:I
     136: iload_2
     137: ireturn

  private void insertIntoDynamicTable(okhttp3.internal.http2.Header);
    Code:
       0: aload_1
       1: getfield      #18                 // Field okhttp3/internal/http2/Header.hpackSize:I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #14                 // Field maxDynamicTableByteCount:I
      10: if_icmple     18
      13: aload_0
      14: invokespecial #21                 // Method clearDynamicTable:()V
      17: return
      18: aload_0
      19: getfield      #12                 // Field dynamicTableByteCount:I
      22: iload_2
      23: iadd
      24: aload_0
      25: getfield      #14                 // Field maxDynamicTableByteCount:I
      28: isub
      29: istore_3
      30: aload_0
      31: iload_3
      32: invokespecial #22                 // Method evictToRecoverBytes:(I)I
      35: pop
      36: aload_0
      37: getfield      #11                 // Field headerCount:I
      40: iconst_1
      41: iadd
      42: aload_0
      43: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      46: arraylength
      47: if_icmple     99
      50: aload_0
      51: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      54: arraylength
      55: iconst_2
      56: imul
      57: anewarray     #8                  // class okhttp3/internal/http2/Header
      60: astore        4
      62: aload_0
      63: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      66: iconst_0
      67: aload         4
      69: aload_0
      70: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      73: arraylength
      74: aload_0
      75: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      78: arraylength
      79: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload_0
      83: aload_0
      84: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      87: arraylength
      88: iconst_1
      89: isub
      90: putfield      #10                 // Field nextHeaderIndex:I
      93: aload_0
      94: aload         4
      96: putfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
      99: aload_0
     100: dup
     101: getfield      #10                 // Field nextHeaderIndex:I
     104: dup_x1
     105: iconst_1
     106: isub
     107: putfield      #10                 // Field nextHeaderIndex:I
     110: istore        4
     112: aload_0
     113: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
     116: iload         4
     118: aload_1
     119: aastore
     120: aload_0
     121: dup
     122: getfield      #11                 // Field headerCount:I
     125: iconst_1
     126: iadd
     127: putfield      #11                 // Field headerCount:I
     130: aload_0
     131: dup
     132: getfield      #12                 // Field dynamicTableByteCount:I
     135: iload_2
     136: iadd
     137: putfield      #12                 // Field dynamicTableByteCount:I
     140: return

  void writeHeaders(java.util.List<okhttp3.internal.http2.Header>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field emitDynamicTableSizeUpdate:Z
       4: ifeq          53
       7: aload_0
       8: getfield      #7                  // Field smallestHeaderTableSizeSetting:I
      11: aload_0
      12: getfield      #14                 // Field maxDynamicTableByteCount:I
      15: if_icmpge     30
      18: aload_0
      19: aload_0
      20: getfield      #7                  // Field smallestHeaderTableSizeSetting:I
      23: bipush        31
      25: bipush        32
      27: invokevirtual #24                 // Method writeInt:(III)V
      30: aload_0
      31: iconst_0
      32: putfield      #23                 // Field emitDynamicTableSizeUpdate:Z
      35: aload_0
      36: ldc           #6                  // int 2147483647
      38: putfield      #7                  // Field smallestHeaderTableSizeSetting:I
      41: aload_0
      42: aload_0
      43: getfield      #14                 // Field maxDynamicTableByteCount:I
      46: bipush        31
      48: bipush        32
      50: invokevirtual #24                 // Method writeInt:(III)V
      53: iconst_0
      54: istore_2
      55: aload_1
      56: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      61: istore_3
      62: iload_2
      63: iload_3
      64: if_icmpge     425
      67: aload_1
      68: iload_2
      69: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #8                  // class okhttp3/internal/http2/Header
      77: astore        4
      79: aload         4
      81: getfield      #27                 // Field okhttp3/internal/http2/Header.name:Lokio/ByteString;
      84: invokevirtual #28                 // Method okio/ByteString.toAsciiLowercase:()Lokio/ByteString;
      87: astore        5
      89: aload         4
      91: getfield      #29                 // Field okhttp3/internal/http2/Header.value:Lokio/ByteString;
      94: astore        6
      96: iconst_m1
      97: istore        7
      99: iconst_m1
     100: istore        8
     102: getstatic     #30                 // Field okhttp3/internal/http2/Hpack.NAME_TO_FIRST_INDEX:Ljava/util/Map;
     105: aload         5
     107: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #5                  // class java/lang/Integer
     115: astore        9
     117: aload         9
     119: ifnull        193
     122: aload         9
     124: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
     127: iconst_1
     128: iadd
     129: istore        8
     131: iload         8
     133: iconst_1
     134: if_icmple     193
     137: iload         8
     139: bipush        8
     141: if_icmpge     193
     144: getstatic     #33                 // Field okhttp3/internal/http2/Hpack.STATIC_HEADER_TABLE:[Lokhttp3/internal/http2/Header;
     147: iload         8
     149: iconst_1
     150: isub
     151: aaload
     152: getfield      #29                 // Field okhttp3/internal/http2/Header.value:Lokio/ByteString;
     155: aload         6
     157: invokestatic  #34                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     160: ifeq          170
     163: iload         8
     165: istore        7
     167: goto          193
     170: getstatic     #33                 // Field okhttp3/internal/http2/Hpack.STATIC_HEADER_TABLE:[Lokhttp3/internal/http2/Header;
     173: iload         8
     175: aaload
     176: getfield      #29                 // Field okhttp3/internal/http2/Header.value:Lokio/ByteString;
     179: aload         6
     181: invokestatic  #34                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     184: ifeq          193
     187: iload         8
     189: iconst_1
     190: iadd
     191: istore        7
     193: iload         7
     195: iconst_m1
     196: if_icmpne     300
     199: aload_0
     200: getfield      #10                 // Field nextHeaderIndex:I
     203: iconst_1
     204: iadd
     205: istore        10
     207: aload_0
     208: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
     211: arraylength
     212: istore        11
     214: iload         10
     216: iload         11
     218: if_icmpge     300
     221: aload_0
     222: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
     225: iload         10
     227: aaload
     228: getfield      #27                 // Field okhttp3/internal/http2/Header.name:Lokio/ByteString;
     231: aload         5
     233: invokestatic  #34                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     236: ifeq          294
     239: aload_0
     240: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/http2/Header;
     243: iload         10
     245: aaload
     246: getfield      #29                 // Field okhttp3/internal/http2/Header.value:Lokio/ByteString;
     249: aload         6
     251: invokestatic  #34                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     254: ifeq          274
     257: iload         10
     259: aload_0
     260: getfield      #10                 // Field nextHeaderIndex:I
     263: isub
     264: getstatic     #33                 // Field okhttp3/internal/http2/Hpack.STATIC_HEADER_TABLE:[Lokhttp3/internal/http2/Header;
     267: arraylength
     268: iadd
     269: istore        7
     271: goto          300
     274: iload         8
     276: iconst_m1
     277: if_icmpne     294
     280: iload         10
     282: aload_0
     283: getfield      #10                 // Field nextHeaderIndex:I
     286: isub
     287: getstatic     #33                 // Field okhttp3/internal/http2/Hpack.STATIC_HEADER_TABLE:[Lokhttp3/internal/http2/Header;
     290: arraylength
     291: iadd
     292: istore        8
     294: iinc          10, 1
     297: goto          214
     300: iload         7
     302: iconst_m1
     303: if_icmpeq     320
     306: aload_0
     307: iload         7
     309: bipush        127
     311: sipush        128
     314: invokevirtual #24                 // Method writeInt:(III)V
     317: goto          419
     320: iload         8
     322: iconst_m1
     323: if_icmpne     357
     326: aload_0
     327: getfield      #16                 // Field out:Lokio/Buffer;
     330: bipush        64
     332: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
     335: pop
     336: aload_0
     337: aload         5
     339: invokevirtual #36                 // Method writeByteString:(Lokio/ByteString;)V
     342: aload_0
     343: aload         6
     345: invokevirtual #36                 // Method writeByteString:(Lokio/ByteString;)V
     348: aload_0
     349: aload         4
     351: invokespecial #37                 // Method insertIntoDynamicTable:(Lokhttp3/internal/http2/Header;)V
     354: goto          419
     357: aload         5
     359: getstatic     #38                 // Field okhttp3/internal/http2/Header.PSEUDO_PREFIX:Lokio/ByteString;
     362: invokevirtual #39                 // Method okio/ByteString.startsWith:(Lokio/ByteString;)Z
     365: ifeq          397
     368: getstatic     #40                 // Field okhttp3/internal/http2/Header.TARGET_AUTHORITY:Lokio/ByteString;
     371: aload         5
     373: invokevirtual #41                 // Method okio/ByteString.equals:(Ljava/lang/Object;)Z
     376: ifne          397
     379: aload_0
     380: iload         8
     382: bipush        15
     384: iconst_0
     385: invokevirtual #24                 // Method writeInt:(III)V
     388: aload_0
     389: aload         6
     391: invokevirtual #36                 // Method writeByteString:(Lokio/ByteString;)V
     394: goto          419
     397: aload_0
     398: iload         8
     400: bipush        63
     402: bipush        64
     404: invokevirtual #24                 // Method writeInt:(III)V
     407: aload_0
     408: aload         6
     410: invokevirtual #36                 // Method writeByteString:(Lokio/ByteString;)V
     413: aload_0
     414: aload         4
     416: invokespecial #37                 // Method insertIntoDynamicTable:(Lokhttp3/internal/http2/Header;)V
     419: iinc          2, 1
     422: goto          62
     425: return

  void writeInt(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     17
       5: aload_0
       6: getfield      #16                 // Field out:Lokio/Buffer;
       9: iload_3
      10: iload_1
      11: ior
      12: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      15: pop
      16: return
      17: aload_0
      18: getfield      #16                 // Field out:Lokio/Buffer;
      21: iload_3
      22: iload_2
      23: ior
      24: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      27: pop
      28: iload_1
      29: iload_2
      30: isub
      31: istore_1
      32: iload_1
      33: sipush        128
      36: if_icmplt     67
      39: iload_1
      40: bipush        127
      42: iand
      43: istore        4
      45: aload_0
      46: getfield      #16                 // Field out:Lokio/Buffer;
      49: iload         4
      51: sipush        128
      54: ior
      55: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      58: pop
      59: iload_1
      60: bipush        7
      62: iushr
      63: istore_1
      64: goto          32
      67: aload_0
      68: getfield      #16                 // Field out:Lokio/Buffer;
      71: iload_1
      72: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      75: pop
      76: return

  void writeByteString(okio.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field useCompression:Z
       4: ifeq          67
       7: invokestatic  #42                 // Method okhttp3/internal/http2/Huffman.get:()Lokhttp3/internal/http2/Huffman;
      10: aload_1
      11: invokevirtual #43                 // Method okhttp3/internal/http2/Huffman.encodedLength:(Lokio/ByteString;)I
      14: aload_1
      15: invokevirtual #44                 // Method okio/ByteString.size:()I
      18: if_icmpge     67
      21: new           #45                 // class okio/Buffer
      24: dup
      25: invokespecial #46                 // Method okio/Buffer."<init>":()V
      28: astore_2
      29: invokestatic  #42                 // Method okhttp3/internal/http2/Huffman.get:()Lokhttp3/internal/http2/Huffman;
      32: aload_1
      33: aload_2
      34: invokevirtual #47                 // Method okhttp3/internal/http2/Huffman.encode:(Lokio/ByteString;Lokio/BufferedSink;)V
      37: aload_2
      38: invokevirtual #48                 // Method okio/Buffer.readByteString:()Lokio/ByteString;
      41: astore_3
      42: aload_0
      43: aload_3
      44: invokevirtual #44                 // Method okio/ByteString.size:()I
      47: bipush        127
      49: sipush        128
      52: invokevirtual #24                 // Method writeInt:(III)V
      55: aload_0
      56: getfield      #16                 // Field out:Lokio/Buffer;
      59: aload_3
      60: invokevirtual #49                 // Method okio/Buffer.write:(Lokio/ByteString;)Lokio/Buffer;
      63: pop
      64: goto          87
      67: aload_0
      68: aload_1
      69: invokevirtual #44                 // Method okio/ByteString.size:()I
      72: bipush        127
      74: iconst_0
      75: invokevirtual #24                 // Method writeInt:(III)V
      78: aload_0
      79: getfield      #16                 // Field out:Lokio/Buffer;
      82: aload_1
      83: invokevirtual #49                 // Method okio/Buffer.write:(Lokio/ByteString;)Lokio/Buffer;
      86: pop
      87: return

  void setHeaderTableSizeSetting(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field headerTableSizeSetting:I
       5: iload_1
       6: sipush        16384
       9: invokestatic  #50                 // Method java/lang/Math.min:(II)I
      12: istore_2
      13: aload_0
      14: getfield      #14                 // Field maxDynamicTableByteCount:I
      17: iload_2
      18: if_icmpne     22
      21: return
      22: iload_2
      23: aload_0
      24: getfield      #14                 // Field maxDynamicTableByteCount:I
      27: if_icmpge     42
      30: aload_0
      31: aload_0
      32: getfield      #7                  // Field smallestHeaderTableSizeSetting:I
      35: iload_2
      36: invokestatic  #50                 // Method java/lang/Math.min:(II)I
      39: putfield      #7                  // Field smallestHeaderTableSizeSetting:I
      42: aload_0
      43: iconst_1
      44: putfield      #23                 // Field emitDynamicTableSizeUpdate:Z
      47: aload_0
      48: iload_2
      49: putfield      #14                 // Field maxDynamicTableByteCount:I
      52: aload_0
      53: invokespecial #51                 // Method adjustDynamicTableByteCount:()V
      56: return

  private void adjustDynamicTableByteCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxDynamicTableByteCount:I
       4: aload_0
       5: getfield      #12                 // Field dynamicTableByteCount:I
       8: if_icmpge     39
      11: aload_0
      12: getfield      #14                 // Field maxDynamicTableByteCount:I
      15: ifne          25
      18: aload_0
      19: invokespecial #21                 // Method clearDynamicTable:()V
      22: goto          39
      25: aload_0
      26: aload_0
      27: getfield      #12                 // Field dynamicTableByteCount:I
      30: aload_0
      31: getfield      #14                 // Field maxDynamicTableByteCount:I
      34: isub
      35: invokespecial #22                 // Method evictToRecoverBytes:(I)I
      38: pop
      39: return
}
