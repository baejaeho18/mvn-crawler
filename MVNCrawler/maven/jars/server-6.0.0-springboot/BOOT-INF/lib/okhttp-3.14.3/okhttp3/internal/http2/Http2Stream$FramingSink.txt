Compiled from "Http2Stream.java"
final class okhttp3.internal.http2.Http2Stream$FramingSink implements okio.Sink {
  private static final long EMIT_BUFFER_SIZE;

  private final okio.Buffer sendBuffer;

  private okhttp3.Headers trailers;

  boolean closed;

  boolean finished;

  static final boolean $assertionsDisabled;

  final okhttp3.internal.http2.Http2Stream this$0;

  okhttp3.internal.http2.Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class okio/Buffer
      13: dup
      14: invokespecial #5                  // Method okio/Buffer."<init>":()V
      17: putfield      #6                  // Field sendBuffer:Lokio/Buffer;
      20: return

  public void write(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: invokestatic  #8                  // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: new           #9                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
      28: aload_1
      29: lload_2
      30: invokevirtual #11                 // Method okio/Buffer.write:(Lokio/Buffer;J)V
      33: aload_0
      34: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
      37: invokevirtual #12                 // Method okio/Buffer.size:()J
      40: ldc2_w        #14                 // long 16384l
      43: lcmp
      44: iflt          55
      47: aload_0
      48: iconst_0
      49: invokespecial #16                 // Method emitFrame:(Z)V
      52: goto          33
      55: return

  private void emitFrame(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      12: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      15: invokevirtual #18                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
      18: aload_0
      19: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      22: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.bytesLeftInWriteWindow:J
      25: lconst_0
      26: lcmp
      27: ifgt          64
      30: aload_0
      31: getfield      #20                 // Field finished:Z
      34: ifne          64
      37: aload_0
      38: getfield      #21                 // Field closed:Z
      41: ifne          64
      44: aload_0
      45: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      48: getfield      #22                 // Field okhttp3/internal/http2/Http2Stream.errorCode:Lokhttp3/internal/http2/ErrorCode;
      51: ifnonnull     64
      54: aload_0
      55: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      58: invokevirtual #23                 // Method okhttp3/internal/http2/Http2Stream.waitForIo:()V
      61: goto          18
      64: aload_0
      65: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      68: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      71: invokevirtual #24                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      74: goto          92
      77: astore        5
      79: aload_0
      80: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      83: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      86: invokevirtual #24                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      89: aload         5
      91: athrow
      92: aload_0
      93: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      96: invokevirtual #25                 // Method okhttp3/internal/http2/Http2Stream.checkOutNotClosed:()V
      99: aload_0
     100: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     103: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.bytesLeftInWriteWindow:J
     106: aload_0
     107: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
     110: invokevirtual #12                 // Method okio/Buffer.size:()J
     113: invokestatic  #26                 // Method java/lang/Math.min:(JJ)J
     116: lstore_2
     117: aload_0
     118: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     121: dup
     122: getfield      #19                 // Field okhttp3/internal/http2/Http2Stream.bytesLeftInWriteWindow:J
     125: lload_2
     126: lsub
     127: putfield      #19                 // Field okhttp3/internal/http2/Http2Stream.bytesLeftInWriteWindow:J
     130: aload         4
     132: monitorexit
     133: goto          144
     136: astore        6
     138: aload         4
     140: monitorexit
     141: aload         6
     143: athrow
     144: aload_0
     145: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     148: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     151: invokevirtual #18                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
     154: iload_1
     155: ifeq          174
     158: lload_2
     159: aload_0
     160: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
     163: invokevirtual #12                 // Method okio/Buffer.size:()J
     166: lcmp
     167: ifne          174
     170: iconst_1
     171: goto          175
     174: iconst_0
     175: istore        4
     177: aload_0
     178: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     181: getfield      #27                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     184: aload_0
     185: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     188: getfield      #28                 // Field okhttp3/internal/http2/Http2Stream.id:I
     191: iload         4
     193: aload_0
     194: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
     197: lload_2
     198: invokevirtual #29                 // Method okhttp3/internal/http2/Http2Connection.writeData:(IZLokio/Buffer;J)V
     201: aload_0
     202: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     205: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     208: invokevirtual #24                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     211: goto          229
     214: astore        7
     216: aload_0
     217: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     220: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     223: invokevirtual #24                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     226: aload         7
     228: athrow
     229: return
    Exception table:
       from    to  target type
          18    64    77   any
          77    79    77   any
           8   133   136   any
         136   141   136   any
         154   201   214   any
         214   216   214   any

  public void flush() throws java.io.IOException;
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: invokestatic  #8                  // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: new           #9                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      28: dup
      29: astore_1
      30: monitorenter
      31: aload_0
      32: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      35: invokevirtual #25                 // Method okhttp3/internal/http2/Http2Stream.checkOutNotClosed:()V
      38: aload_1
      39: monitorexit
      40: goto          48
      43: astore_2
      44: aload_1
      45: monitorexit
      46: aload_2
      47: athrow
      48: aload_0
      49: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
      52: invokevirtual #12                 // Method okio/Buffer.size:()J
      55: lconst_0
      56: lcmp
      57: ifle          78
      60: aload_0
      61: iconst_0
      62: invokespecial #16                 // Method emitFrame:(Z)V
      65: aload_0
      66: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      69: getfield      #27                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
      72: invokevirtual #30                 // Method okhttp3/internal/http2/Http2Connection.flush:()V
      75: goto          48
      78: return
    Exception table:
       from    to  target type
          31    40    43   any
          43    46    43   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: getfield      #17                 // Field okhttp3/internal/http2/Http2Stream.writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: invokestatic  #8                  // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: new           #9                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      28: dup
      29: astore_1
      30: monitorenter
      31: aload_0
      32: getfield      #21                 // Field closed:Z
      35: ifeq          41
      38: aload_1
      39: monitorexit
      40: return
      41: aload_1
      42: monitorexit
      43: goto          51
      46: astore_2
      47: aload_1
      48: monitorexit
      49: aload_2
      50: athrow
      51: aload_0
      52: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      55: getfield      #31                 // Field okhttp3/internal/http2/Http2Stream.sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      58: getfield      #20                 // Field finished:Z
      61: ifne          191
      64: aload_0
      65: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
      68: invokevirtual #12                 // Method okio/Buffer.size:()J
      71: lconst_0
      72: lcmp
      73: ifle          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: istore_1
      82: aload_0
      83: getfield      #1                  // Field trailers:Lokhttp3/Headers;
      86: ifnull        93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: istore_2
      95: iload_2
      96: ifeq          147
      99: aload_0
     100: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
     103: invokevirtual #12                 // Method okio/Buffer.size:()J
     106: lconst_0
     107: lcmp
     108: ifle          119
     111: aload_0
     112: iconst_0
     113: invokespecial #16                 // Method emitFrame:(Z)V
     116: goto          99
     119: aload_0
     120: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     123: getfield      #27                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     126: aload_0
     127: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     130: getfield      #28                 // Field okhttp3/internal/http2/Http2Stream.id:I
     133: iconst_1
     134: aload_0
     135: getfield      #1                  // Field trailers:Lokhttp3/Headers;
     138: invokestatic  #32                 // Method okhttp3/internal/Util.toHeaderBlock:(Lokhttp3/Headers;)Ljava/util/List;
     141: invokevirtual #33                 // Method okhttp3/internal/http2/Http2Connection.writeHeaders:(IZLjava/util/List;)V
     144: goto          191
     147: iload_1
     148: ifeq          171
     151: aload_0
     152: getfield      #6                  // Field sendBuffer:Lokio/Buffer;
     155: invokevirtual #12                 // Method okio/Buffer.size:()J
     158: lconst_0
     159: lcmp
     160: ifle          191
     163: aload_0
     164: iconst_1
     165: invokespecial #16                 // Method emitFrame:(Z)V
     168: goto          151
     171: aload_0
     172: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     175: getfield      #27                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     178: aload_0
     179: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     182: getfield      #28                 // Field okhttp3/internal/http2/Http2Stream.id:I
     185: iconst_1
     186: aconst_null
     187: lconst_0
     188: invokevirtual #29                 // Method okhttp3/internal/http2/Http2Connection.writeData:(IZLokio/Buffer;J)V
     191: aload_0
     192: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     195: dup
     196: astore_1
     197: monitorenter
     198: aload_0
     199: iconst_1
     200: putfield      #21                 // Field closed:Z
     203: aload_1
     204: monitorexit
     205: goto          213
     208: astore_3
     209: aload_1
     210: monitorexit
     211: aload_3
     212: athrow
     213: aload_0
     214: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     217: getfield      #27                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     220: invokevirtual #30                 // Method okhttp3/internal/http2/Http2Connection.flush:()V
     223: aload_0
     224: getfield      #2                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     227: invokevirtual #34                 // Method okhttp3/internal/http2/Http2Stream.cancelStreamIfNecessary:()V
     230: return
    Exception table:
       from    to  target type
          31    40    46   any
          41    43    46   any
          46    49    46   any
         198   205   208   any
         208   211   208   any

  static okhttp3.Headers access$302(okhttp3.internal.http2.Http2Stream$FramingSink, okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field trailers:Lokhttp3/Headers;
       6: areturn

  static {};
    Code:
       0: ldc           #35                 // class okhttp3/internal/http2/Http2Stream
       2: invokevirtual #36                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
