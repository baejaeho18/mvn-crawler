Compiled from "ErrorCode.java"
public final class okhttp3.internal.http2.ErrorCode extends java.lang.Enum<okhttp3.internal.http2.ErrorCode> {
  public static final okhttp3.internal.http2.ErrorCode NO_ERROR;

  public static final okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR;

  public static final okhttp3.internal.http2.ErrorCode INTERNAL_ERROR;

  public static final okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR;

  public static final okhttp3.internal.http2.ErrorCode REFUSED_STREAM;

  public static final okhttp3.internal.http2.ErrorCode CANCEL;

  public static final okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR;

  public static final okhttp3.internal.http2.ErrorCode CONNECT_ERROR;

  public static final okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM;

  public static final okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY;

  public static final okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED;

  public final int httpCode;

  private static final okhttp3.internal.http2.ErrorCode[] $VALUES;

  public static okhttp3.internal.http2.ErrorCode[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lokhttp3/internal/http2/ErrorCode;
       3: invokevirtual #2                  // Method "[Lokhttp3/internal/http2/ErrorCode;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lokhttp3/internal/http2/ErrorCode;"
       9: areturn

  public static okhttp3.internal.http2.ErrorCode valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class okhttp3/internal/http2/ErrorCode
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class okhttp3/internal/http2/ErrorCode
       9: areturn

  private okhttp3.internal.http2.ErrorCode(int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #7                  // Field httpCode:I
      11: return

  public static okhttp3.internal.http2.ErrorCode fromHttp2(int);
    Code:
       0: invokestatic  #8                  // Method values:()[Lokhttp3/internal/http2/ErrorCode;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     37
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: getfield      #7                  // Field httpCode:I
      24: iload_0
      25: if_icmpne     31
      28: aload         4
      30: areturn
      31: iinc          3, 1
      34: goto          9
      37: aconst_null
      38: areturn

  static {};
    Code:
       0: new           #4                  // class okhttp3/internal/http2/ErrorCode
       3: dup
       4: ldc           #9                  // String NO_ERROR
       6: iconst_0
       7: iconst_0
       8: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      11: putstatic     #11                 // Field NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
      14: new           #4                  // class okhttp3/internal/http2/ErrorCode
      17: dup
      18: ldc           #12                 // String PROTOCOL_ERROR
      20: iconst_1
      21: iconst_1
      22: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      25: putstatic     #13                 // Field PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      28: new           #4                  // class okhttp3/internal/http2/ErrorCode
      31: dup
      32: ldc           #14                 // String INTERNAL_ERROR
      34: iconst_2
      35: iconst_2
      36: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      39: putstatic     #15                 // Field INTERNAL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      42: new           #4                  // class okhttp3/internal/http2/ErrorCode
      45: dup
      46: ldc           #16                 // String FLOW_CONTROL_ERROR
      48: iconst_3
      49: iconst_3
      50: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      53: putstatic     #17                 // Field FLOW_CONTROL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      56: new           #4                  // class okhttp3/internal/http2/ErrorCode
      59: dup
      60: ldc           #18                 // String REFUSED_STREAM
      62: iconst_4
      63: bipush        7
      65: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      68: putstatic     #19                 // Field REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
      71: new           #4                  // class okhttp3/internal/http2/ErrorCode
      74: dup
      75: ldc           #20                 // String CANCEL
      77: iconst_5
      78: bipush        8
      80: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      83: putstatic     #21                 // Field CANCEL:Lokhttp3/internal/http2/ErrorCode;
      86: new           #4                  // class okhttp3/internal/http2/ErrorCode
      89: dup
      90: ldc           #22                 // String COMPRESSION_ERROR
      92: bipush        6
      94: bipush        9
      96: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      99: putstatic     #23                 // Field COMPRESSION_ERROR:Lokhttp3/internal/http2/ErrorCode;
     102: new           #4                  // class okhttp3/internal/http2/ErrorCode
     105: dup
     106: ldc           #24                 // String CONNECT_ERROR
     108: bipush        7
     110: bipush        10
     112: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
     115: putstatic     #25                 // Field CONNECT_ERROR:Lokhttp3/internal/http2/ErrorCode;
     118: new           #4                  // class okhttp3/internal/http2/ErrorCode
     121: dup
     122: ldc           #26                 // String ENHANCE_YOUR_CALM
     124: bipush        8
     126: bipush        11
     128: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
     131: putstatic     #27                 // Field ENHANCE_YOUR_CALM:Lokhttp3/internal/http2/ErrorCode;
     134: new           #4                  // class okhttp3/internal/http2/ErrorCode
     137: dup
     138: ldc           #28                 // String INADEQUATE_SECURITY
     140: bipush        9
     142: bipush        12
     144: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
     147: putstatic     #29                 // Field INADEQUATE_SECURITY:Lokhttp3/internal/http2/ErrorCode;
     150: new           #4                  // class okhttp3/internal/http2/ErrorCode
     153: dup
     154: ldc           #30                 // String HTTP_1_1_REQUIRED
     156: bipush        10
     158: bipush        13
     160: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
     163: putstatic     #31                 // Field HTTP_1_1_REQUIRED:Lokhttp3/internal/http2/ErrorCode;
     166: bipush        11
     168: anewarray     #4                  // class okhttp3/internal/http2/ErrorCode
     171: dup
     172: iconst_0
     173: getstatic     #11                 // Field NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
     176: aastore
     177: dup
     178: iconst_1
     179: getstatic     #13                 // Field PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
     182: aastore
     183: dup
     184: iconst_2
     185: getstatic     #15                 // Field INTERNAL_ERROR:Lokhttp3/internal/http2/ErrorCode;
     188: aastore
     189: dup
     190: iconst_3
     191: getstatic     #17                 // Field FLOW_CONTROL_ERROR:Lokhttp3/internal/http2/ErrorCode;
     194: aastore
     195: dup
     196: iconst_4
     197: getstatic     #19                 // Field REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
     200: aastore
     201: dup
     202: iconst_5
     203: getstatic     #21                 // Field CANCEL:Lokhttp3/internal/http2/ErrorCode;
     206: aastore
     207: dup
     208: bipush        6
     210: getstatic     #23                 // Field COMPRESSION_ERROR:Lokhttp3/internal/http2/ErrorCode;
     213: aastore
     214: dup
     215: bipush        7
     217: getstatic     #25                 // Field CONNECT_ERROR:Lokhttp3/internal/http2/ErrorCode;
     220: aastore
     221: dup
     222: bipush        8
     224: getstatic     #27                 // Field ENHANCE_YOUR_CALM:Lokhttp3/internal/http2/ErrorCode;
     227: aastore
     228: dup
     229: bipush        9
     231: getstatic     #29                 // Field INADEQUATE_SECURITY:Lokhttp3/internal/http2/ErrorCode;
     234: aastore
     235: dup
     236: bipush        10
     238: getstatic     #31                 // Field HTTP_1_1_REQUIRED:Lokhttp3/internal/http2/ErrorCode;
     241: aastore
     242: putstatic     #1                  // Field $VALUES:[Lokhttp3/internal/http2/ErrorCode;
     245: return
}
