Compiled from "RealCall.java"
final class okhttp3.RealCall implements okhttp3.Call {
  final okhttp3.OkHttpClient client;

  private okhttp3.internal.connection.Transmitter transmitter;

  final okhttp3.Request originalRequest;

  final boolean forWebSocket;

  private boolean executed;

  private okhttp3.RealCall(okhttp3.OkHttpClient, okhttp3.Request, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field client:Lokhttp3/OkHttpClient;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field originalRequest:Lokhttp3/Request;
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field forWebSocket:Z
      19: return

  static okhttp3.RealCall newRealCall(okhttp3.OkHttpClient, okhttp3.Request, boolean);
    Code:
       0: new           #6                  // class okhttp3/RealCall
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #7                  // Method "<init>":(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)V
      10: astore_3
      11: aload_3
      12: new           #8                  // class okhttp3/internal/connection/Transmitter
      15: dup
      16: aload_0
      17: aload_3
      18: invokespecial #9                  // Method okhttp3/internal/connection/Transmitter."<init>":(Lokhttp3/OkHttpClient;Lokhttp3/Call;)V
      21: putfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
      24: aload_3
      25: areturn

  public okhttp3.Request request();
    Code:
       0: aload_0
       1: getfield      #4                  // Field originalRequest:Lokhttp3/Request;
       4: areturn

  public okhttp3.Response execute() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #10                 // Field executed:Z
       8: ifeq          21
      11: new           #11                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #12                 // String Already Executed
      17: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iconst_1
      23: putfield      #10                 // Field executed:Z
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: aload_0
      37: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
      40: invokevirtual #14                 // Method okhttp3/internal/connection/Transmitter.timeoutEnter:()V
      43: aload_0
      44: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
      47: invokevirtual #15                 // Method okhttp3/internal/connection/Transmitter.callStart:()V
      50: aload_0
      51: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      54: invokevirtual #16                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      57: aload_0
      58: invokevirtual #17                 // Method okhttp3/Dispatcher.executed:(Lokhttp3/RealCall;)V
      61: aload_0
      62: invokevirtual #18                 // Method getResponseWithInterceptorChain:()Lokhttp3/Response;
      65: astore_1
      66: aload_0
      67: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      70: invokevirtual #16                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      73: aload_0
      74: invokevirtual #19                 // Method okhttp3/Dispatcher.finished:(Lokhttp3/RealCall;)V
      77: aload_1
      78: areturn
      79: astore_3
      80: aload_0
      81: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      84: invokevirtual #16                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      87: aload_0
      88: invokevirtual #19                 // Method okhttp3/Dispatcher.finished:(Lokhttp3/RealCall;)V
      91: aload_3
      92: athrow
    Exception table:
       from    to  target type
           4    28    31   any
          31    34    31   any
          50    66    79   any

  public void enqueue(okhttp3.Callback);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #10                 // Field executed:Z
       8: ifeq          21
      11: new           #11                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #12                 // String Already Executed
      17: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iconst_1
      23: putfield      #10                 // Field executed:Z
      26: aload_2
      27: monitorexit
      28: goto          36
      31: astore_3
      32: aload_2
      33: monitorexit
      34: aload_3
      35: athrow
      36: aload_0
      37: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
      40: invokevirtual #15                 // Method okhttp3/internal/connection/Transmitter.callStart:()V
      43: aload_0
      44: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      47: invokevirtual #16                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      50: new           #20                 // class okhttp3/RealCall$AsyncCall
      53: dup
      54: aload_0
      55: aload_1
      56: invokespecial #21                 // Method okhttp3/RealCall$AsyncCall."<init>":(Lokhttp3/RealCall;Lokhttp3/Callback;)V
      59: invokevirtual #22                 // Method okhttp3/Dispatcher.enqueue:(Lokhttp3/RealCall$AsyncCall;)V
      62: return
    Exception table:
       from    to  target type
           4    28    31   any
          31    34    31   any

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: invokevirtual #23                 // Method okhttp3/internal/connection/Transmitter.cancel:()V
       7: return

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: invokevirtual #24                 // Method okhttp3/internal/connection/Transmitter.timeout:()Lokio/Timeout;
       7: areturn

  public synchronized boolean isExecuted();
    Code:
       0: aload_0
       1: getfield      #10                 // Field executed:Z
       4: ireturn

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: invokevirtual #25                 // Method okhttp3/internal/connection/Transmitter.isCanceled:()Z
       7: ireturn

  public okhttp3.RealCall clone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
       4: aload_0
       5: getfield      #4                  // Field originalRequest:Lokhttp3/Request;
       8: aload_0
       9: getfield      #5                  // Field forWebSocket:Z
      12: invokestatic  #26                 // Method newRealCall:(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)Lokhttp3/RealCall;
      15: areturn

  java.lang.String toLoggableString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #29                 // Method isCanceled:()Z
      11: ifeq          19
      14: ldc           #30                 // String canceled
      16: goto          21
      19: ldc           #31                 // String
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field forWebSocket:Z
      28: ifeq          36
      31: ldc           #33                 // String web socket
      33: goto          38
      36: ldc           #34                 // String call
      38: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #35                 // String  to
      43: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #36                 // Method redactedUrl:()Ljava/lang/String;
      50: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  java.lang.String redactedUrl();
    Code:
       0: aload_0
       1: getfield      #4                  // Field originalRequest:Lokhttp3/Request;
       4: invokevirtual #38                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
       7: invokevirtual #39                 // Method okhttp3/HttpUrl.redact:()Ljava/lang/String;
      10: areturn

  okhttp3.Response getResponseWithInterceptorChain() throws java.io.IOException;
    Code:
       0: new           #40                 // class java/util/ArrayList
       3: dup
       4: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      13: invokevirtual #42                 // Method okhttp3/OkHttpClient.interceptors:()Ljava/util/List;
      16: invokeinterface #43,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_1
      23: new           #44                 // class okhttp3/internal/http/RetryAndFollowUpInterceptor
      26: dup
      27: aload_0
      28: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      31: invokespecial #45                 // Method okhttp3/internal/http/RetryAndFollowUpInterceptor."<init>":(Lokhttp3/OkHttpClient;)V
      34: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_1
      41: new           #47                 // class okhttp3/internal/http/BridgeInterceptor
      44: dup
      45: aload_0
      46: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      49: invokevirtual #48                 // Method okhttp3/OkHttpClient.cookieJar:()Lokhttp3/CookieJar;
      52: invokespecial #49                 // Method okhttp3/internal/http/BridgeInterceptor."<init>":(Lokhttp3/CookieJar;)V
      55: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload_1
      62: new           #50                 // class okhttp3/internal/cache/CacheInterceptor
      65: dup
      66: aload_0
      67: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      70: invokevirtual #51                 // Method okhttp3/OkHttpClient.internalCache:()Lokhttp3/internal/cache/InternalCache;
      73: invokespecial #52                 // Method okhttp3/internal/cache/CacheInterceptor."<init>":(Lokhttp3/internal/cache/InternalCache;)V
      76: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: aload_1
      83: new           #53                 // class okhttp3/internal/connection/ConnectInterceptor
      86: dup
      87: aload_0
      88: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
      91: invokespecial #54                 // Method okhttp3/internal/connection/ConnectInterceptor."<init>":(Lokhttp3/OkHttpClient;)V
      94: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: aload_0
     101: getfield      #5                  // Field forWebSocket:Z
     104: ifne          121
     107: aload_1
     108: aload_0
     109: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
     112: invokevirtual #55                 // Method okhttp3/OkHttpClient.networkInterceptors:()Ljava/util/List;
     115: invokeinterface #43,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     120: pop
     121: aload_1
     122: new           #56                 // class okhttp3/internal/http/CallServerInterceptor
     125: dup
     126: aload_0
     127: getfield      #5                  // Field forWebSocket:Z
     130: invokespecial #57                 // Method okhttp3/internal/http/CallServerInterceptor."<init>":(Z)V
     133: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     138: pop
     139: new           #58                 // class okhttp3/internal/http/RealInterceptorChain
     142: dup
     143: aload_1
     144: aload_0
     145: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
     148: aconst_null
     149: iconst_0
     150: aload_0
     151: getfield      #4                  // Field originalRequest:Lokhttp3/Request;
     154: aload_0
     155: aload_0
     156: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
     159: invokevirtual #59                 // Method okhttp3/OkHttpClient.connectTimeoutMillis:()I
     162: aload_0
     163: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
     166: invokevirtual #60                 // Method okhttp3/OkHttpClient.readTimeoutMillis:()I
     169: aload_0
     170: getfield      #3                  // Field client:Lokhttp3/OkHttpClient;
     173: invokevirtual #61                 // Method okhttp3/OkHttpClient.writeTimeoutMillis:()I
     176: invokespecial #62                 // Method okhttp3/internal/http/RealInterceptorChain."<init>":(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V
     179: astore_2
     180: iconst_0
     181: istore_3
     182: aload_2
     183: aload_0
     184: getfield      #4                  // Field originalRequest:Lokhttp3/Request;
     187: invokeinterface #63,  2           // InterfaceMethod okhttp3/Interceptor$Chain.proceed:(Lokhttp3/Request;)Lokhttp3/Response;
     192: astore        4
     194: aload_0
     195: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
     198: invokevirtual #25                 // Method okhttp3/internal/connection/Transmitter.isCanceled:()Z
     201: ifeq          219
     204: aload         4
     206: invokestatic  #64                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     209: new           #65                 // class java/io/IOException
     212: dup
     213: ldc           #66                 // String Canceled
     215: invokespecial #67                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     218: athrow
     219: aload         4
     221: astore        5
     223: iload_3
     224: ifne          236
     227: aload_0
     228: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
     231: aconst_null
     232: invokevirtual #68                 // Method okhttp3/internal/connection/Transmitter.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;
     235: pop
     236: aload         5
     238: areturn
     239: astore        4
     241: iconst_1
     242: istore_3
     243: aload_0
     244: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
     247: aload         4
     249: invokevirtual #68                 // Method okhttp3/internal/connection/Transmitter.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;
     252: athrow
     253: astore        6
     255: iload_3
     256: ifne          268
     259: aload_0
     260: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
     263: aconst_null
     264: invokevirtual #68                 // Method okhttp3/internal/connection/Transmitter.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;
     267: pop
     268: aload         6
     270: athrow
    Exception table:
       from    to  target type
         182   223   239   Class java/io/IOException
         182   223   253   any
         239   255   253   any

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method clone:()Lokhttp3/RealCall;
       4: areturn

  public okhttp3.Call clone();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method clone:()Lokhttp3/RealCall;
       4: areturn

  static okhttp3.internal.connection.Transmitter access$000(okhttp3.RealCall);
    Code:
       0: aload_0
       1: getfield      #1                  // Field transmitter:Lokhttp3/internal/connection/Transmitter;
       4: areturn
}
