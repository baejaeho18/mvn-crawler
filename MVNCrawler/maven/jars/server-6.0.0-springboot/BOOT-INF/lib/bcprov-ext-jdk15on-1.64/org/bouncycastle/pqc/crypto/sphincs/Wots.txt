class org.bouncycastle.pqc.crypto.sphincs.Wots {
  static final int WOTS_LOGW;

  static final int WOTS_W;

  static final int WOTS_L1;

  static final int WOTS_L;

  static final int WOTS_LOG_L;

  static final int WOTS_SIGBYTES;

  org.bouncycastle.pqc.crypto.sphincs.Wots();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: return

  static void expand_seed(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: sipush        2144
       5: invokestatic  #51                 // Method clear:([BII)V
       8: aload_0
       9: iload_1
      10: ldc2_w        #32                 // long 2144l
      13: aload_2
      14: iload_3
      15: invokestatic  #50                 // Method org/bouncycastle/pqc/crypto/sphincs/Seed.prg:([BIJ[BI)V
      18: return

  private static void clear(byte[], int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpeq     19
       7: aload_0
       8: iload_3
       9: iload_1
      10: iadd
      11: iconst_0
      12: bastore
      13: iinc          3, 1
      16: goto          2
      19: return

  static void gen_chain(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, byte[], int, byte[], int, int);
    Code:
       0: iconst_0
       1: istore        9
       3: iload         9
       5: bipush        32
       7: if_icmpge     29
      10: aload_1
      11: iload         9
      13: iload_2
      14: iadd
      15: aload_3
      16: iload         9
      18: iload         4
      20: iadd
      21: baload
      22: bastore
      23: iinc          9, 1
      26: goto          3
      29: iconst_0
      30: istore        8
      32: iload         8
      34: iload         7
      36: if_icmpge     71
      39: iload         8
      41: bipush        16
      43: if_icmpge     71
      46: aload_0
      47: aload_1
      48: iload_2
      49: aload_1
      50: iload_2
      51: aload         5
      53: iload         6
      55: iload         8
      57: bipush        32
      59: imul
      60: iadd
      61: invokevirtual #49                 // Method org/bouncycastle/pqc/crypto/sphincs/HashFunctions.hash_n_n_mask:([BI[BI[BI)I
      64: pop
      65: iinc          8, 1
      68: goto          32
      71: return

  void wots_pkgen(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, byte[], int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: aload         4
       4: iload         5
       6: invokestatic  #52                 // Method expand_seed:([BI[BI)V
       9: iconst_0
      10: istore        8
      12: iload         8
      14: bipush        67
      16: if_icmpge     51
      19: aload_1
      20: aload_2
      21: iload_3
      22: iload         8
      24: bipush        32
      26: imul
      27: iadd
      28: aload_2
      29: iload_3
      30: iload         8
      32: bipush        32
      34: imul
      35: iadd
      36: aload         6
      38: iload         7
      40: bipush        15
      42: invokestatic  #53                 // Method gen_chain:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BI[BII)V
      45: iinc          8, 1
      48: goto          12
      51: return

  void wots_sign(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, byte[], byte[], byte[]);
    Code:
       0: bipush        67
       2: newarray       int
       4: astore        7
       6: iconst_0
       7: istore        9
       9: iconst_0
      10: istore        8
      12: iload         8
      14: bipush        64
      16: if_icmpge     88
      19: aload         7
      21: iload         8
      23: aload         4
      25: iload         8
      27: iconst_2
      28: idiv
      29: baload
      30: bipush        15
      32: iand
      33: iastore
      34: aload         7
      36: iload         8
      38: iconst_1
      39: iadd
      40: aload         4
      42: iload         8
      44: iconst_2
      45: idiv
      46: baload
      47: sipush        255
      50: iand
      51: iconst_4
      52: iushr
      53: iastore
      54: iload         9
      56: bipush        15
      58: aload         7
      60: iload         8
      62: iaload
      63: isub
      64: iadd
      65: istore        9
      67: iload         9
      69: bipush        15
      71: aload         7
      73: iload         8
      75: iconst_1
      76: iadd
      77: iaload
      78: isub
      79: iadd
      80: istore        9
      82: iinc          8, 2
      85: goto          12
      88: iload         8
      90: bipush        67
      92: if_icmpge     117
      95: aload         7
      97: iload         8
      99: iload         9
     101: bipush        15
     103: iand
     104: iastore
     105: iload         9
     107: iconst_4
     108: iushr
     109: istore        9
     111: iinc          8, 1
     114: goto          88
     117: aload_2
     118: iload_3
     119: aload         5
     121: iconst_0
     122: invokestatic  #52                 // Method expand_seed:([BI[BI)V
     125: iconst_0
     126: istore        8
     128: iload         8
     130: bipush        67
     132: if_icmpge     169
     135: aload_1
     136: aload_2
     137: iload_3
     138: iload         8
     140: bipush        32
     142: imul
     143: iadd
     144: aload_2
     145: iload_3
     146: iload         8
     148: bipush        32
     150: imul
     151: iadd
     152: aload         6
     154: iconst_0
     155: aload         7
     157: iload         8
     159: iaload
     160: invokestatic  #53                 // Method gen_chain:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BI[BII)V
     163: iinc          8, 1
     166: goto          128
     169: return

  void wots_verify(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], byte[], int, byte[], byte[]);
    Code:
       0: bipush        67
       2: newarray       int
       4: astore        7
       6: iconst_0
       7: istore        9
       9: iconst_0
      10: istore        8
      12: iload         8
      14: bipush        64
      16: if_icmpge     88
      19: aload         7
      21: iload         8
      23: aload         5
      25: iload         8
      27: iconst_2
      28: idiv
      29: baload
      30: bipush        15
      32: iand
      33: iastore
      34: aload         7
      36: iload         8
      38: iconst_1
      39: iadd
      40: aload         5
      42: iload         8
      44: iconst_2
      45: idiv
      46: baload
      47: sipush        255
      50: iand
      51: iconst_4
      52: iushr
      53: iastore
      54: iload         9
      56: bipush        15
      58: aload         7
      60: iload         8
      62: iaload
      63: isub
      64: iadd
      65: istore        9
      67: iload         9
      69: bipush        15
      71: aload         7
      73: iload         8
      75: iconst_1
      76: iadd
      77: iaload
      78: isub
      79: iadd
      80: istore        9
      82: iinc          8, 2
      85: goto          12
      88: iload         8
      90: bipush        67
      92: if_icmpge     117
      95: aload         7
      97: iload         8
      99: iload         9
     101: bipush        15
     103: iand
     104: iastore
     105: iload         9
     107: iconst_4
     108: iushr
     109: istore        9
     111: iinc          8, 1
     114: goto          88
     117: iconst_0
     118: istore        8
     120: iload         8
     122: bipush        67
     124: if_icmpge     170
     127: aload_1
     128: aload_2
     129: iload         8
     131: bipush        32
     133: imul
     134: aload_3
     135: iload         4
     137: iload         8
     139: bipush        32
     141: imul
     142: iadd
     143: aload         6
     145: aload         7
     147: iload         8
     149: iaload
     150: bipush        32
     152: imul
     153: bipush        15
     155: aload         7
     157: iload         8
     159: iaload
     160: isub
     161: invokestatic  #53                 // Method gen_chain:(Lorg/bouncycastle/pqc/crypto/sphincs/HashFunctions;[BI[BI[BII)V
     164: iinc          8, 1
     167: goto          120
     170: return
}
