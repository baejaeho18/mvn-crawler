public class org.bouncycastle.crypto.kems.ECIESKeyEncapsulation implements org.bouncycastle.crypto.KeyEncapsulation {
  private static final java.math.BigInteger ONE;

  private org.bouncycastle.crypto.DerivationFunction kdf;

  private java.security.SecureRandom rnd;

  private org.bouncycastle.crypto.params.ECKeyParameters key;

  private boolean CofactorMode;

  private boolean OldCofactorMode;

  private boolean SingleHashMode;

  public org.bouncycastle.crypto.kems.ECIESKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #166                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #163                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
       9: aload_0
      10: aload_2
      11: putfield      #162                // Field rnd:Ljava/security/SecureRandom;
      14: aload_0
      15: iconst_0
      16: putfield      #158                // Field CofactorMode:Z
      19: aload_0
      20: iconst_0
      21: putfield      #159                // Field OldCofactorMode:Z
      24: aload_0
      25: iconst_0
      26: putfield      #160                // Field SingleHashMode:Z
      29: return

  public org.bouncycastle.crypto.kems.ECIESKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #166                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #163                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
       9: aload_0
      10: aload_2
      11: putfield      #162                // Field rnd:Ljava/security/SecureRandom;
      14: aload_0
      15: iload_3
      16: putfield      #158                // Field CofactorMode:Z
      19: iload_3
      20: ifeq          31
      23: aload_0
      24: iconst_0
      25: putfield      #159                // Field OldCofactorMode:Z
      28: goto          37
      31: aload_0
      32: iload         4
      34: putfield      #159                // Field OldCofactorMode:Z
      37: aload_0
      38: iload         5
      40: putfield      #160                // Field SingleHashMode:Z
      43: return

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: instanceof    #79                 // class org/bouncycastle/crypto/params/ECKeyParameters
       4: ifne          17
       7: new           #71                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #1                  // String EC key required
      13: invokespecial #165                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #79                 // class org/bouncycastle/crypto/params/ECKeyParameters
      22: putfield      #164                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      25: return

  public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #164                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
       4: instanceof    #81                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
       7: ifne          20
      10: new           #71                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #3                  // String Public key required for encryption
      16: invokespecial #165                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #164                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      24: checkcast     #81                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      27: astore        4
      29: aload         4
      31: invokevirtual #182                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      34: astore        5
      36: aload         5
      38: invokevirtual #178                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      41: astore        6
      43: aload         5
      45: invokevirtual #177                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      48: astore        7
      50: aload         5
      52: invokevirtual #176                // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      55: astore        8
      57: getstatic     #161                // Field ONE:Ljava/math/BigInteger;
      60: aload         7
      62: aload_0
      63: getfield      #162                // Field rnd:Ljava/security/SecureRandom;
      66: invokestatic  #196                // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      69: astore        9
      71: aload_0
      72: getfield      #159                // Field OldCofactorMode:Z
      75: ifeq          93
      78: aload         9
      80: aload         8
      82: invokevirtual #171                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      85: aload         7
      87: invokevirtual #169                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      90: goto          95
      93: aload         9
      95: astore        10
      97: aload_0
      98: invokevirtual #175                // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
     101: astore        11
     103: iconst_2
     104: anewarray     #87                 // class org/bouncycastle/math/ec/ECPoint
     107: dup
     108: iconst_0
     109: aload         11
     111: aload         5
     113: invokevirtual #179                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     116: aload         9
     118: invokeinterface #199,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     123: aastore
     124: dup
     125: iconst_1
     126: aload         4
     128: invokevirtual #183                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     131: aload         10
     133: invokevirtual #192                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     136: aastore
     137: astore        12
     139: aload         6
     141: aload         12
     143: invokevirtual #187                // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
     146: aload         12
     148: iconst_0
     149: aaload
     150: astore        13
     152: aload         12
     154: iconst_1
     155: aaload
     156: astore        14
     158: aload         13
     160: iconst_0
     161: invokevirtual #189                // Method org/bouncycastle/math/ec/ECPoint.getEncoded:(Z)[B
     164: astore        15
     166: aload         15
     168: iconst_0
     169: aload_1
     170: iload_2
     171: aload         15
     173: arraylength
     174: invokestatic  #167                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     177: aload         14
     179: invokevirtual #190                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     182: invokevirtual #188                // Method org/bouncycastle/math/ec/ECFieldElement.getEncoded:()[B
     185: astore        16
     187: aload_0
     188: iload_3
     189: aload         15
     191: aload         16
     193: invokevirtual #174                // Method deriveKey:(I[B[B)Lorg/bouncycastle/crypto/params/KeyParameter;
     196: areturn

  public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iload_2
       4: invokevirtual #172                // Method encrypt:([BII)Lorg/bouncycastle/crypto/CipherParameters;
       7: areturn

  public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int, int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #164                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
       4: instanceof    #80                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
       7: ifne          20
      10: new           #71                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #2                  // String Private key required for encryption
      16: invokespecial #165                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #164                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      24: checkcast     #80                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      27: astore        5
      29: aload         5
      31: invokevirtual #181                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      34: astore        6
      36: aload         6
      38: invokevirtual #178                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      41: astore        7
      43: aload         6
      45: invokevirtual #177                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      48: astore        8
      50: aload         6
      52: invokevirtual #176                // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      55: astore        9
      57: iload_3
      58: newarray       byte
      60: astore        10
      62: aload_1
      63: iload_2
      64: aload         10
      66: iconst_0
      67: iload_3
      68: invokestatic  #167                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload         7
      73: aload         10
      75: invokevirtual #186                // Method org/bouncycastle/math/ec/ECCurve.decodePoint:([B)Lorg/bouncycastle/math/ec/ECPoint;
      78: astore        11
      80: aload         11
      82: astore        12
      84: aload_0
      85: getfield      #158                // Field CofactorMode:Z
      88: ifne          98
      91: aload_0
      92: getfield      #159                // Field OldCofactorMode:Z
      95: ifeq          107
      98: aload         12
     100: aload         9
     102: invokevirtual #192                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     105: astore        12
     107: aload         5
     109: invokevirtual #180                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
     112: astore        13
     114: aload_0
     115: getfield      #158                // Field CofactorMode:Z
     118: ifeq          140
     121: aload         13
     123: aload         9
     125: aload         8
     127: invokevirtual #170                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     130: invokevirtual #171                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     133: aload         8
     135: invokevirtual #169                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     138: astore        13
     140: aload         12
     142: aload         13
     144: invokevirtual #192                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     147: invokevirtual #191                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     150: astore        14
     152: aload         14
     154: invokevirtual #190                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     157: invokevirtual #188                // Method org/bouncycastle/math/ec/ECFieldElement.getEncoded:()[B
     160: astore        15
     162: aload_0
     163: iload         4
     165: aload         10
     167: aload         15
     169: invokevirtual #174                // Method deriveKey:(I[B[B)Lorg/bouncycastle/crypto/params/KeyParameter;
     172: areturn

  public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: iload_2
       6: invokevirtual #173                // Method decrypt:([BIII)Lorg/bouncycastle/crypto/CipherParameters;
       9: areturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #88                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #193                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn

  protected org.bouncycastle.crypto.params.KeyParameter deriveKey(int, byte[], byte[]);
    Code:
       0: aload_3
       1: astore        4
       3: aload_0
       4: getfield      #160                // Field SingleHashMode:Z
       7: ifne          22
      10: aload_2
      11: aload_3
      12: invokestatic  #195                // Method org/bouncycastle/util/Arrays.concatenate:([B[B)[B
      15: astore        4
      17: aload_3
      18: iconst_0
      19: invokestatic  #194                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      22: aload_0
      23: getfield      #163                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
      26: new           #82                 // class org/bouncycastle/crypto/params/KDFParameters
      29: dup
      30: aload         4
      32: aconst_null
      33: invokespecial #184                // Method org/bouncycastle/crypto/params/KDFParameters."<init>":([B[B)V
      36: invokeinterface #198,  2          // InterfaceMethod org/bouncycastle/crypto/DerivationFunction.init:(Lorg/bouncycastle/crypto/DerivationParameters;)V
      41: iload_1
      42: newarray       byte
      44: astore        5
      46: aload_0
      47: getfield      #163                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
      50: aload         5
      52: iconst_0
      53: aload         5
      55: arraylength
      56: invokeinterface #197,  4          // InterfaceMethod org/bouncycastle/crypto/DerivationFunction.generateBytes:([BII)I
      61: pop
      62: new           #83                 // class org/bouncycastle/crypto/params/KeyParameter
      65: dup
      66: aload         5
      68: invokespecial #185                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      71: astore        6
      73: aload         4
      75: iconst_0
      76: invokestatic  #194                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      79: aload         6
      81: areturn
      82: astore        7
      84: aload         4
      86: iconst_0
      87: invokestatic  #194                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      90: aload         7
      92: athrow
    Exception table:
       from    to  target type
          22    73    82   any
          82    84    82   any

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #168                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #161                // Field ONE:Ljava/math/BigInteger;
       7: return
}
