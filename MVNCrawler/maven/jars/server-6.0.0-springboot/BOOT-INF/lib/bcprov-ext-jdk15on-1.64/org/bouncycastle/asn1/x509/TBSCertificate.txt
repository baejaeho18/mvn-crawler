public class org.bouncycastle.asn1.x509.TBSCertificate extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.ASN1Sequence seq;

  org.bouncycastle.asn1.ASN1Integer version;

  org.bouncycastle.asn1.ASN1Integer serialNumber;

  org.bouncycastle.asn1.x509.AlgorithmIdentifier signature;

  org.bouncycastle.asn1.x500.X500Name issuer;

  org.bouncycastle.asn1.x509.Time startDate;

  org.bouncycastle.asn1.x509.Time endDate;

  org.bouncycastle.asn1.x500.X500Name subject;

  org.bouncycastle.asn1.x509.SubjectPublicKeyInfo subjectPublicKeyInfo;

  org.bouncycastle.asn1.DERBitString issuerUniqueId;

  org.bouncycastle.asn1.DERBitString subjectUniqueId;

  org.bouncycastle.asn1.x509.Extensions extensions;

  public static org.bouncycastle.asn1.x509.TBSCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #176                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
       5: invokestatic  #184                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/TBSCertificate;
       8: areturn

  public static org.bouncycastle.asn1.x509.TBSCertificate getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #75                 // class org/bouncycastle/asn1/x509/TBSCertificate
       4: ifeq          12
       7: aload_0
       8: checkcast     #75                 // class org/bouncycastle/asn1/x509/TBSCertificate
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #75                 // class org/bouncycastle/asn1/x509/TBSCertificate
      19: dup
      20: aload_0
      21: invokestatic  #175                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #183                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  private org.bouncycastle.asn1.x509.TBSCertificate(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #172                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: iconst_0
       5: istore_2
       6: aload_0
       7: aload_1
       8: putfield      #151                // Field seq:Lorg/bouncycastle/asn1/ASN1Sequence;
      11: aload_1
      12: iconst_0
      13: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      16: instanceof    #69                 // class org/bouncycastle/asn1/ASN1TaggedObject
      19: ifeq          41
      22: aload_0
      23: aload_1
      24: iconst_0
      25: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      28: checkcast     #69                 // class org/bouncycastle/asn1/ASN1TaggedObject
      31: iconst_1
      32: invokestatic  #171                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Integer;
      35: putfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      38: goto          55
      41: iconst_m1
      42: istore_2
      43: aload_0
      44: new           #66                 // class org/bouncycastle/asn1/ASN1Integer
      47: dup
      48: lconst_0
      49: invokespecial #168                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      52: putfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      55: iconst_0
      56: istore_3
      57: iconst_0
      58: istore        4
      60: aload_0
      61: getfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      64: lconst_0
      65: invokestatic  #166                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      68: invokevirtual #169                // Method org/bouncycastle/asn1/ASN1Integer.hasValue:(Ljava/math/BigInteger;)Z
      71: ifeq          79
      74: iconst_1
      75: istore_3
      76: goto          125
      79: aload_0
      80: getfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      83: lconst_1
      84: invokestatic  #166                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      87: invokevirtual #169                // Method org/bouncycastle/asn1/ASN1Integer.hasValue:(Ljava/math/BigInteger;)Z
      90: ifeq          99
      93: iconst_1
      94: istore        4
      96: goto          125
      99: aload_0
     100: getfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
     103: ldc2_w        #61                 // long 2l
     106: invokestatic  #166                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     109: invokevirtual #169                // Method org/bouncycastle/asn1/ASN1Integer.hasValue:(Ljava/math/BigInteger;)Z
     112: ifne          125
     115: new           #63                 // class java/lang/IllegalArgumentException
     118: dup
     119: ldc           #4                  // String version number not recognised
     121: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload_0
     126: aload_1
     127: iload_2
     128: iconst_1
     129: iadd
     130: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     133: invokestatic  #170                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     136: putfield      #149                // Field serialNumber:Lorg/bouncycastle/asn1/ASN1Integer;
     139: aload_0
     140: aload_1
     141: iload_2
     142: iconst_2
     143: iadd
     144: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     147: invokestatic  #180                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
     150: putfield      #156                // Field signature:Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
     153: aload_0
     154: aload_1
     155: iload_2
     156: iconst_3
     157: iadd
     158: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     161: invokestatic  #179                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
     164: putfield      #154                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
     167: aload_1
     168: iload_2
     169: iconst_4
     170: iadd
     171: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     174: checkcast     #68                 // class org/bouncycastle/asn1/ASN1Sequence
     177: astore        5
     179: aload_0
     180: aload         5
     182: iconst_0
     183: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     186: invokestatic  #185                // Method org/bouncycastle/asn1/x509/Time.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Time;
     189: putfield      #160                // Field startDate:Lorg/bouncycastle/asn1/x509/Time;
     192: aload_0
     193: aload         5
     195: iconst_1
     196: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     199: invokestatic  #185                // Method org/bouncycastle/asn1/x509/Time.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Time;
     202: putfield      #159                // Field endDate:Lorg/bouncycastle/asn1/x509/Time;
     205: aload_0
     206: aload_1
     207: iload_2
     208: iconst_5
     209: iadd
     210: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     213: invokestatic  #179                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
     216: putfield      #155                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
     219: aload_0
     220: aload_1
     221: iload_2
     222: bipush        6
     224: iadd
     225: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     228: invokestatic  #182                // Method org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
     231: putfield      #158                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
     234: aload_1
     235: invokevirtual #173                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     238: iload_2
     239: bipush        6
     241: iadd
     242: isub
     243: iconst_1
     244: isub
     245: istore        6
     247: iload         6
     249: ifeq          266
     252: iload_3
     253: ifeq          266
     256: new           #63                 // class java/lang/IllegalArgumentException
     259: dup
     260: ldc           #2                  // String version 1 certificate contains extra data
     262: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     265: athrow
     266: iload         6
     268: ifle          414
     271: aload_1
     272: iload_2
     273: bipush        6
     275: iadd
     276: iload         6
     278: iadd
     279: invokevirtual #174                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     282: checkcast     #69                 // class org/bouncycastle/asn1/ASN1TaggedObject
     285: astore        7
     287: aload         7
     289: invokevirtual #177                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
     292: tableswitch   { // 1 to 3
                     1: 320
                     2: 333
                     3: 346
               default: 377
          }
     320: aload_0
     321: aload         7
     323: iconst_0
     324: invokestatic  #178                // Method org/bouncycastle/asn1/DERBitString.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/DERBitString;
     327: putfield      #152                // Field issuerUniqueId:Lorg/bouncycastle/asn1/DERBitString;
     330: goto          408
     333: aload_0
     334: aload         7
     336: iconst_0
     337: invokestatic  #178                // Method org/bouncycastle/asn1/DERBitString.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/DERBitString;
     340: putfield      #153                // Field subjectUniqueId:Lorg/bouncycastle/asn1/DERBitString;
     343: goto          408
     346: iload         4
     348: ifeq          361
     351: new           #63                 // class java/lang/IllegalArgumentException
     354: dup
     355: ldc           #3                  // String version 2 certificate cannot contain extensions
     357: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     360: athrow
     361: aload_0
     362: aload         7
     364: iconst_1
     365: invokestatic  #176                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
     368: invokestatic  #181                // Method org/bouncycastle/asn1/x509/Extensions.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Extensions;
     371: putfield      #157                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
     374: goto          408
     377: new           #63                 // class java/lang/IllegalArgumentException
     380: dup
     381: new           #64                 // class java/lang/StringBuilder
     384: dup
     385: invokespecial #162                // Method java/lang/StringBuilder."<init>":()V
     388: ldc           #1                  // String Unknown tag encountered in structure:
     390: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: aload         7
     395: invokevirtual #177                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
     398: invokevirtual #164                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     401: invokevirtual #163                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     404: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     407: athrow
     408: iinc          6, -1
     411: goto          266
     414: return

  public int getVersionNumber();
    Code:
       0: aload_0
       1: getfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
       4: invokevirtual #167                // Method org/bouncycastle/asn1/ASN1Integer.intValueExact:()I
       7: iconst_1
       8: iadd
       9: ireturn

  public org.bouncycastle.asn1.ASN1Integer getVersion();
    Code:
       0: aload_0
       1: getfield      #150                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  public org.bouncycastle.asn1.ASN1Integer getSerialNumber();
    Code:
       0: aload_0
       1: getfield      #149                // Field serialNumber:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature();
    Code:
       0: aload_0
       1: getfield      #156                // Field signature:Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
       4: areturn

  public org.bouncycastle.asn1.x500.X500Name getIssuer();
    Code:
       0: aload_0
       1: getfield      #154                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  public org.bouncycastle.asn1.x509.Time getStartDate();
    Code:
       0: aload_0
       1: getfield      #160                // Field startDate:Lorg/bouncycastle/asn1/x509/Time;
       4: areturn

  public org.bouncycastle.asn1.x509.Time getEndDate();
    Code:
       0: aload_0
       1: getfield      #159                // Field endDate:Lorg/bouncycastle/asn1/x509/Time;
       4: areturn

  public org.bouncycastle.asn1.x500.X500Name getSubject();
    Code:
       0: aload_0
       1: getfield      #155                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo();
    Code:
       0: aload_0
       1: getfield      #158                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
       4: areturn

  public org.bouncycastle.asn1.DERBitString getIssuerUniqueId();
    Code:
       0: aload_0
       1: getfield      #152                // Field issuerUniqueId:Lorg/bouncycastle/asn1/DERBitString;
       4: areturn

  public org.bouncycastle.asn1.DERBitString getSubjectUniqueId();
    Code:
       0: aload_0
       1: getfield      #153                // Field subjectUniqueId:Lorg/bouncycastle/asn1/DERBitString;
       4: areturn

  public org.bouncycastle.asn1.x509.Extensions getExtensions();
    Code:
       0: aload_0
       1: getfield      #157                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: aload_0
       1: getfield      #151                // Field seq:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: areturn
}
