public class org.bouncycastle.pqc.crypto.qteslarnd1.QTESLA {
  public org.bouncycastle.pqc.crypto.qteslarnd1.QTESLA();
    Code:
       0: aload_0
       1: invokespecial #275                // Method java/lang/Object."<init>":()V
       4: return

  private static void hashFunction(byte[], int, int[], byte[], int, int, int, int);
    Code:
       0: iload         5
       2: bipush        64
       4: iadd
       5: newarray       byte
       7: astore        10
       9: iconst_0
      10: istore        11
      12: iload         11
      14: iload         5
      16: if_icmpge     126
      19: iload         7
      21: iconst_2
      22: idiv
      23: aload_2
      24: iload         11
      26: iaload
      27: isub
      28: bipush        31
      30: ishr
      31: istore        8
      33: aload_2
      34: iload         11
      36: aload_2
      37: iload         11
      39: iaload
      40: iload         7
      42: isub
      43: iload         8
      45: iand
      46: aload_2
      47: iload         11
      49: iaload
      50: iload         8
      52: iconst_m1
      53: ixor
      54: iand
      55: ior
      56: iastore
      57: aload_2
      58: iload         11
      60: iaload
      61: iconst_1
      62: iload         6
      64: ishl
      65: iconst_1
      66: isub
      67: iand
      68: istore        9
      70: iconst_1
      71: iload         6
      73: iconst_1
      74: isub
      75: ishl
      76: iload         9
      78: isub
      79: bipush        31
      81: ishr
      82: istore        8
      84: iload         9
      86: iconst_1
      87: iload         6
      89: ishl
      90: isub
      91: iload         8
      93: iand
      94: iload         9
      96: iload         8
      98: iconst_m1
      99: ixor
     100: iand
     101: ior
     102: istore        9
     104: aload         10
     106: iload         11
     108: aload_2
     109: iload         11
     111: iaload
     112: iload         9
     114: isub
     115: iload         6
     117: ishr
     118: i2b
     119: bastore
     120: iinc          11, 1
     123: goto          12
     126: aload_3
     127: iload         4
     129: aload         10
     131: iload         5
     133: bipush        64
     135: invokestatic  #276                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     138: iload         7
     140: ldc           #8                  // int 4205569
     142: if_icmpne     160
     145: aload_0
     146: iload_1
     147: bipush        32
     149: aload         10
     151: iconst_0
     152: iload         5
     154: bipush        64
     156: iadd
     157: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     160: iload         7
     162: ldc           #9                  // int 4206593
     164: if_icmpeq     174
     167: iload         7
     169: ldc           #11                 // int 8404993
     171: if_icmpne     189
     174: aload_0
     175: iload_1
     176: bipush        32
     178: aload         10
     180: iconst_0
     181: iload         5
     183: bipush        64
     185: iadd
     186: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     189: return

  private static void hashFunction(byte[], int, long[], byte[], int, int, int, int, int);
    Code:
       0: iload         5
       2: iload         6
       4: imul
       5: bipush        64
       7: iadd
       8: newarray       byte
      10: astore        16
      12: iconst_0
      13: istore        17
      15: iload         17
      17: iload         6
      19: if_icmpge     159
      22: iload         5
      24: iload         17
      26: imul
      27: istore        9
      29: iconst_0
      30: istore        18
      32: iload         18
      34: iload         5
      36: if_icmpge     153
      39: aload_2
      40: iload         9
      42: laload
      43: lstore        14
      45: iload         8
      47: iconst_2
      48: idiv
      49: i2l
      50: lload         14
      52: lsub
      53: bipush        63
      55: lshr
      56: lstore        10
      58: lload         14
      60: iload         8
      62: i2l
      63: lsub
      64: lload         10
      66: land
      67: lload         14
      69: lload         10
      71: ldc2_w        #154                // long -1l
      74: lxor
      75: land
      76: lor
      77: lstore        14
      79: lload         14
      81: iconst_1
      82: iload         7
      84: ishl
      85: iconst_1
      86: isub
      87: i2l
      88: land
      89: lstore        12
      91: iconst_1
      92: iload         7
      94: iconst_1
      95: isub
      96: ishl
      97: i2l
      98: lload         12
     100: lsub
     101: bipush        63
     103: lshr
     104: lstore        10
     106: lload         12
     108: iconst_1
     109: iload         7
     111: ishl
     112: i2l
     113: lsub
     114: lload         10
     116: land
     117: lload         12
     119: lload         10
     121: ldc2_w        #154                // long -1l
     124: lxor
     125: land
     126: lor
     127: lstore        12
     129: aload         16
     131: iload         9
     133: iinc          9, 1
     136: lload         14
     138: lload         12
     140: lsub
     141: iload         7
     143: lshr
     144: l2i
     145: i2b
     146: bastore
     147: iinc          18, 1
     150: goto          32
     153: iinc          17, 1
     156: goto          15
     159: aload_3
     160: iload         4
     162: aload         16
     164: iload         5
     166: iload         6
     168: imul
     169: bipush        64
     171: invokestatic  #276                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     174: iload         8
     176: ldc           #13                 // int 485978113
     178: if_icmpne     199
     181: aload_0
     182: iload_1
     183: bipush        32
     185: aload         16
     187: iconst_0
     188: iload         5
     190: iload         6
     192: imul
     193: bipush        64
     195: iadd
     196: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     199: iload         8
     201: ldc           #15                 // int 1129725953
     203: if_icmpne     224
     206: aload_0
     207: iload_1
     208: bipush        32
     210: aload         16
     212: iconst_0
     213: iload         5
     215: iload         6
     217: imul
     218: bipush        64
     220: iadd
     221: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     224: return

  private static int absolute(int);
    Code:
       0: iload_0
       1: bipush        31
       3: ishr
       4: iload_0
       5: ixor
       6: iload_0
       7: bipush        31
       9: ishr
      10: isub
      11: ireturn

  private static long absolute(long);
    Code:
       0: lload_0
       1: bipush        63
       3: lshr
       4: lload_0
       5: lxor
       6: lload_0
       7: bipush        63
       9: lshr
      10: lsub
      11: lreturn

  private static boolean testRejection(int[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_1
       6: if_icmpge     30
       9: aload_0
      10: iload         4
      12: iaload
      13: invokestatic  #319                // Method absolute:(I)I
      16: iload_2
      17: iload_3
      18: isub
      19: if_icmple     24
      22: iconst_1
      23: ireturn
      24: iinc          4, 1
      27: goto          3
      30: iconst_0
      31: ireturn

  private static boolean testRejection(long[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_1
       6: if_icmpge     32
       9: aload_0
      10: iload         4
      12: laload
      13: invokestatic  #320                // Method absolute:(J)J
      16: iload_2
      17: iload_3
      18: isub
      19: i2l
      20: lcmp
      21: ifle          26
      24: iconst_1
      25: ireturn
      26: iinc          4, 1
      29: goto          3
      32: iconst_0
      33: ireturn

  private static boolean testZ(int[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_1
       6: if_icmpge     38
       9: aload_0
      10: iload         4
      12: iaload
      13: iload_2
      14: iload_3
      15: isub
      16: ineg
      17: if_icmplt     30
      20: aload_0
      21: iload         4
      23: iaload
      24: iload_2
      25: iload_3
      26: isub
      27: if_icmple     32
      30: iconst_1
      31: ireturn
      32: iinc          4, 1
      35: goto          3
      38: iconst_0
      39: ireturn

  private static boolean testZ(long[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_1
       6: if_icmpge     42
       9: aload_0
      10: iload         4
      12: laload
      13: iload_2
      14: iload_3
      15: isub
      16: ineg
      17: i2l
      18: lcmp
      19: iflt          34
      22: aload_0
      23: iload         4
      25: laload
      26: iload_2
      27: iload_3
      28: isub
      29: i2l
      30: lcmp
      31: ifle          36
      34: iconst_1
      35: ireturn
      36: iinc          4, 1
      39: goto          3
      42: iconst_0
      43: ireturn

  private static boolean testV(int[], int, int, int, int);
    Code:
       0: iconst_0
       1: istore        10
       3: iload         10
       5: iload_1
       6: if_icmpge     127
       9: iload_3
      10: iconst_2
      11: idiv
      12: aload_0
      13: iload         10
      15: iaload
      16: isub
      17: bipush        31
      19: ishr
      20: istore        5
      22: aload_0
      23: iload         10
      25: iaload
      26: iload_3
      27: isub
      28: iload         5
      30: iand
      31: aload_0
      32: iload         10
      34: iaload
      35: iload         5
      37: iconst_m1
      38: ixor
      39: iand
      40: ior
      41: istore        7
      43: iload         7
      45: invokestatic  #319                // Method absolute:(I)I
      48: iload_3
      49: iconst_2
      50: idiv
      51: iload         4
      53: isub
      54: isub
      55: iconst_m1
      56: ixor
      57: bipush        31
      59: iushr
      60: istore        8
      62: iload         7
      64: istore        6
      66: iload         7
      68: iconst_1
      69: iload_2
      70: iconst_1
      71: isub
      72: ishl
      73: iadd
      74: iconst_1
      75: isub
      76: iload_2
      77: ishr
      78: istore        7
      80: iload         6
      82: iload         7
      84: iload_2
      85: ishl
      86: isub
      87: istore        7
      89: iload         7
      91: invokestatic  #319                // Method absolute:(I)I
      94: iconst_1
      95: iload_2
      96: iconst_1
      97: isub
      98: ishl
      99: iload         4
     101: isub
     102: isub
     103: iconst_m1
     104: ixor
     105: bipush        31
     107: iushr
     108: istore        9
     110: iload         8
     112: iload         9
     114: ior
     115: iconst_1
     116: if_icmpne     121
     119: iconst_1
     120: ireturn
     121: iinc          10, 1
     124: goto          3
     127: iconst_0
     128: ireturn

  private static boolean testV(long[], int, int, int, int, int);
    Code:
       0: iconst_0
       1: istore        16
       3: iload         16
       5: iload_2
       6: if_icmpge     150
       9: iload         4
      11: iconst_2
      12: idiv
      13: i2l
      14: aload_0
      15: iload_1
      16: iload         16
      18: iadd
      19: laload
      20: lsub
      21: bipush        63
      23: lshr
      24: lstore        6
      26: aload_0
      27: iload_1
      28: iload         16
      30: iadd
      31: laload
      32: iload         4
      34: i2l
      35: lsub
      36: lload         6
      38: land
      39: aload_0
      40: iload_1
      41: iload         16
      43: iadd
      44: laload
      45: lload         6
      47: ldc2_w        #154                // long -1l
      50: lxor
      51: land
      52: lor
      53: lstore        10
      55: lload         10
      57: invokestatic  #320                // Method absolute:(J)J
      60: iload         4
      62: iconst_2
      63: idiv
      64: iload         5
      66: isub
      67: i2l
      68: lsub
      69: ldc2_w        #154                // long -1l
      72: lxor
      73: bipush        63
      75: lushr
      76: lstore        12
      78: lload         10
      80: lstore        8
      82: lload         10
      84: iconst_1
      85: iload_3
      86: iconst_1
      87: isub
      88: ishl
      89: i2l
      90: ladd
      91: lconst_1
      92: lsub
      93: iload_3
      94: lshr
      95: l2i
      96: i2l
      97: lstore        10
      99: lload         8
     101: lload         10
     103: iload_3
     104: lshl
     105: lsub
     106: lstore        10
     108: lload         10
     110: invokestatic  #320                // Method absolute:(J)J
     113: iconst_1
     114: iload_3
     115: iconst_1
     116: isub
     117: ishl
     118: iload         5
     120: isub
     121: i2l
     122: lsub
     123: ldc2_w        #154                // long -1l
     126: lxor
     127: bipush        63
     129: lushr
     130: lstore        14
     132: lload         12
     134: lload         14
     136: lor
     137: lconst_1
     138: lcmp
     139: ifne          144
     142: iconst_1
     143: ireturn
     144: iinc          16, 1
     147: goto          3
     150: iconst_0
     151: ireturn

  private static boolean checkPolynomial(int[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload_2
       4: istore        5
       6: iload_2
       7: newarray       int
       9: astore        8
      11: iconst_0
      12: istore        9
      14: iload         9
      16: iload_2
      17: if_icmpge     38
      20: aload         8
      22: iload         9
      24: aload_0
      25: iload         9
      27: iaload
      28: invokestatic  #319                // Method absolute:(I)I
      31: iastore
      32: iinc          9, 1
      35: goto          14
      38: iconst_0
      39: istore        9
      41: iload         9
      43: iload_3
      44: if_icmpge     162
      47: iconst_0
      48: istore        10
      50: iload         10
      52: iload         5
      54: iconst_1
      55: isub
      56: if_icmpge     141
      59: aload         8
      61: iload         10
      63: iconst_1
      64: iadd
      65: iaload
      66: aload         8
      68: iload         10
      70: iaload
      71: isub
      72: bipush        31
      74: ishr
      75: istore        7
      77: aload         8
      79: iload         10
      81: iconst_1
      82: iadd
      83: iaload
      84: iload         7
      86: iand
      87: aload         8
      89: iload         10
      91: iaload
      92: iload         7
      94: iconst_m1
      95: ixor
      96: iand
      97: ior
      98: istore        6
     100: aload         8
     102: iload         10
     104: iconst_1
     105: iadd
     106: aload         8
     108: iload         10
     110: iaload
     111: iload         7
     113: iand
     114: aload         8
     116: iload         10
     118: iconst_1
     119: iadd
     120: iaload
     121: iload         7
     123: iconst_m1
     124: ixor
     125: iand
     126: ior
     127: iastore
     128: aload         8
     130: iload         10
     132: iload         6
     134: iastore
     135: iinc          10, 1
     138: goto          50
     141: iload         4
     143: aload         8
     145: iload         5
     147: iconst_1
     148: isub
     149: iaload
     150: iadd
     151: istore        4
     153: iinc          5, -1
     156: iinc          9, 1
     159: goto          41
     162: iload         4
     164: iload_1
     165: if_icmple     170
     168: iconst_1
     169: ireturn
     170: iconst_0
     171: ireturn

  private static boolean checkPolynomial(long[], int, int, int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload_3
       4: istore        6
       6: iload_3
       7: newarray       short
       9: astore        9
      11: iconst_0
      12: istore        10
      14: iload         10
      16: iload_3
      17: if_icmpge     42
      20: aload         9
      22: iload         10
      24: aload_0
      25: iload_1
      26: iload         10
      28: iadd
      29: laload
      30: invokestatic  #320                // Method absolute:(J)J
      33: l2i
      34: i2s
      35: sastore
      36: iinc          10, 1
      39: goto          14
      42: iconst_0
      43: istore        10
      45: iload         10
      47: iload         4
      49: if_icmpge     170
      52: iconst_0
      53: istore        11
      55: iload         11
      57: iload         6
      59: iconst_1
      60: isub
      61: if_icmpge     149
      64: aload         9
      66: iload         11
      68: iconst_1
      69: iadd
      70: saload
      71: aload         9
      73: iload         11
      75: saload
      76: isub
      77: bipush        15
      79: ishr
      80: i2s
      81: istore        8
      83: aload         9
      85: iload         11
      87: iconst_1
      88: iadd
      89: saload
      90: iload         8
      92: iand
      93: aload         9
      95: iload         11
      97: saload
      98: iload         8
     100: iconst_m1
     101: ixor
     102: iand
     103: ior
     104: i2s
     105: istore        7
     107: aload         9
     109: iload         11
     111: iconst_1
     112: iadd
     113: aload         9
     115: iload         11
     117: saload
     118: iload         8
     120: iand
     121: aload         9
     123: iload         11
     125: iconst_1
     126: iadd
     127: saload
     128: iload         8
     130: iconst_m1
     131: ixor
     132: iand
     133: ior
     134: i2s
     135: sastore
     136: aload         9
     138: iload         11
     140: iload         7
     142: sastore
     143: iinc          11, 1
     146: goto          55
     149: iload         5
     151: aload         9
     153: iload         6
     155: iconst_1
     156: isub
     157: saload
     158: iadd
     159: istore        5
     161: iinc          6, -1
     164: iinc          10, 1
     167: goto          45
     170: iload         5
     172: iload_2
     173: if_icmple     178
     176: iconst_1
     177: ireturn
     178: iconst_0
     179: ireturn

  private static int generateKeyPair(byte[], byte[], java.security.SecureRandom, int, int, int, long, int, int, int, double, int[], int, int);
    Code:
       0: iconst_0
       1: istore        16
       3: bipush        32
       5: newarray       byte
       7: astore        17
       9: sipush        128
      12: newarray       byte
      14: astore        18
      16: iload_3
      17: newarray       int
      19: astore        19
      21: iload_3
      22: newarray       int
      24: astore        20
      26: iload_3
      27: newarray       int
      29: astore        21
      31: iload_3
      32: newarray       int
      34: astore        22
      36: aload_2
      37: aload         17
      39: invokevirtual #277                // Method java/security/SecureRandom.nextBytes:([B)V
      42: iload         5
      44: ldc           #8                  // int 4205569
      46: if_icmpne     63
      49: aload         18
      51: iconst_0
      52: sipush        128
      55: aload         17
      57: iconst_0
      58: bipush        32
      60: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
      63: iload         5
      65: ldc           #9                  // int 4206593
      67: if_icmpeq     77
      70: iload         5
      72: ldc           #11                 // int 8404993
      74: if_icmpne     91
      77: aload         18
      79: iconst_0
      80: sipush        128
      83: aload         17
      85: iconst_0
      86: bipush        32
      88: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
      91: iload         5
      93: ldc           #8                  // int 4205569
      95: if_icmpne     112
      98: aload         20
     100: iconst_0
     101: aload         18
     103: iconst_0
     104: iinc          16, 1
     107: iload         16
     109: invokestatic  #337                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerI:([II[BII)V
     112: iload         5
     114: ldc           #9                  // int 4206593
     116: if_icmpne     139
     119: aload         20
     121: iconst_0
     122: aload         18
     124: iconst_0
     125: iinc          16, 1
     128: iload         16
     130: iload_3
     131: dload         11
     133: getstatic     #273                // Field org/bouncycastle/pqc/crypto/qteslarnd1/Sample.EXPONENTIAL_DISTRIBUTION_III_SIZE:[[D
     136: invokestatic  #338                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIII:([II[BIIID[[D)V
     139: iload         5
     141: ldc           #11                 // int 8404993
     143: if_icmpne     166
     146: aload         20
     148: iconst_0
     149: aload         18
     151: iconst_0
     152: iinc          16, 1
     155: iload         16
     157: iload_3
     158: dload         11
     160: getstatic     #274                // Field org/bouncycastle/pqc/crypto/qteslarnd1/Sample.EXPONENTIAL_DISTRIBUTION_III_SPEED:[[D
     163: invokestatic  #338                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIII:([II[BIIID[[D)V
     166: aload         20
     168: iload         14
     170: iload_3
     171: iload         4
     173: invokestatic  #325                // Method checkPolynomial:([IIII)Z
     176: iconst_1
     177: if_icmpeq     91
     180: iload         5
     182: ldc           #8                  // int 4205569
     184: if_icmpne     202
     187: aload         19
     189: iconst_0
     190: aload         18
     192: bipush        32
     194: iinc          16, 1
     197: iload         16
     199: invokestatic  #337                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerI:([II[BII)V
     202: iload         5
     204: ldc           #9                  // int 4206593
     206: if_icmpne     230
     209: aload         19
     211: iconst_0
     212: aload         18
     214: bipush        32
     216: iinc          16, 1
     219: iload         16
     221: iload_3
     222: dload         11
     224: getstatic     #273                // Field org/bouncycastle/pqc/crypto/qteslarnd1/Sample.EXPONENTIAL_DISTRIBUTION_III_SIZE:[[D
     227: invokestatic  #338                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIII:([II[BIIID[[D)V
     230: iload         5
     232: ldc           #11                 // int 8404993
     234: if_icmpne     258
     237: aload         19
     239: iconst_0
     240: aload         18
     242: bipush        32
     244: iinc          16, 1
     247: iload         16
     249: iload_3
     250: dload         11
     252: getstatic     #274                // Field org/bouncycastle/pqc/crypto/qteslarnd1/Sample.EXPONENTIAL_DISTRIBUTION_III_SPEED:[[D
     255: invokestatic  #338                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIII:([II[BIIID[[D)V
     258: aload         19
     260: iload         15
     262: iload_3
     263: iload         4
     265: invokestatic  #325                // Method checkPolynomial:([IIII)Z
     268: iconst_1
     269: if_icmpeq     180
     272: aload         21
     274: aload         18
     276: bipush        64
     278: iload_3
     279: iload         5
     281: lload         6
     283: iload         8
     285: iload         9
     287: iload         10
     289: invokestatic  #304                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialUniform:([I[BIIIJIII)V
     292: aload         22
     294: aload         21
     296: aload         19
     298: iload_3
     299: iload         5
     301: lload         6
     303: aload         13
     305: invokestatic  #309                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialMultiplication:([I[I[IIIJ[I)V
     308: aload         22
     310: aload         22
     312: aload         20
     314: iload_3
     315: iload         5
     317: invokestatic  #306                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialAdditionCorrection:([I[I[III)V
     320: iload         5
     322: ldc           #8                  // int 4205569
     324: if_icmpne     354
     327: aload_1
     328: aload         19
     330: aload         20
     332: aload         18
     334: bipush        64
     336: invokestatic  #289                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePrivateKeyI:([B[I[I[BI)V
     339: aload_0
     340: aload         22
     342: aload         18
     344: bipush        64
     346: sipush        512
     349: bipush        23
     351: invokestatic  #288                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePublicKey:([B[I[BIII)V
     354: iload         5
     356: ldc           #9                  // int 4206593
     358: if_icmpne     388
     361: aload_1
     362: aload         19
     364: aload         20
     366: aload         18
     368: bipush        64
     370: invokestatic  #290                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePrivateKeyIIISize:([B[I[I[BI)V
     373: aload_0
     374: aload         22
     376: aload         18
     378: bipush        64
     380: sipush        1024
     383: bipush        23
     385: invokestatic  #288                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePublicKey:([B[I[BIII)V
     388: iload         5
     390: ldc           #11                 // int 8404993
     392: if_icmpne     417
     395: aload_1
     396: aload         19
     398: aload         20
     400: aload         18
     402: bipush        64
     404: invokestatic  #291                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePrivateKeyIIISpeed:([B[I[I[BI)V
     407: aload_0
     408: aload         22
     410: aload         18
     412: bipush        64
     414: invokestatic  #286                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePublicKeyIIISpeed:([B[I[BI)V
     417: iconst_0
     418: ireturn

  public static int generateKeyPairI(byte[], byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        512
       6: bipush        30
       8: ldc           #8                  // int 4205569
      10: ldc2_w        #158                // long 3098553343l
      13: bipush        23
      15: bipush        19
      17: ldc           #2                  // int 113307
      19: ldc2_w        #172                // double 27.0d
      22: getstatic     #268                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_I:[I
      25: sipush        1586
      28: sipush        1586
      31: invokestatic  #336                // Method generateKeyPair:([B[BLjava/security/SecureRandom;IIIJIIID[III)I
      34: ireturn

  public static int generateKeyPairIIISize(byte[], byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: bipush        48
       8: ldc           #9                  // int 4206593
      10: ldc2_w        #164                // long 4148178943l
      13: bipush        23
      15: bipush        38
      17: ldc           #6                  // int 1217638
      19: ldc2_w        #166                // double 9.0d
      22: getstatic     #269                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_III_SIZE:[I
      25: sipush        910
      28: sipush        910
      31: invokestatic  #336                // Method generateKeyPair:([B[BLjava/security/SecureRandom;IIIJIIID[III)I
      34: ireturn

  public static int generateKeyPairIIISpeed(byte[], byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: bipush        48
       8: ldc           #11                 // int 8404993
      10: ldc2_w        #162                // long 4034936831l
      13: bipush        24
      15: bipush        38
      17: ldc           #3                  // int 237839
      19: ldc2_w        #170                // double 12.0d
      22: getstatic     #270                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_III_SPEED:[I
      25: sipush        1147
      28: sipush        1233
      31: invokestatic  #336                // Method generateKeyPair:([B[BLjava/security/SecureRandom;IIIJIIID[III)I
      34: ireturn

  private static int generateKeyPair(byte[], byte[], java.security.SecureRandom, int, int, int, int, long, int, int, int, double, long[], int, int);
    Code:
       0: iconst_0
       1: istore        17
       3: bipush        32
       5: newarray       byte
       7: astore        20
       9: bipush        32
      11: iload         4
      13: iconst_3
      14: iadd
      15: imul
      16: newarray       byte
      18: astore        21
      20: iload_3
      21: newarray       long
      23: astore        22
      25: iload_3
      26: newarray       long
      28: astore        23
      30: iload_3
      31: iload         4
      33: imul
      34: newarray       long
      36: astore        24
      38: iload_3
      39: iload         4
      41: imul
      42: newarray       long
      44: astore        25
      46: iload_3
      47: iload         4
      49: imul
      50: newarray       long
      52: astore        26
      54: aload_2
      55: aload         20
      57: invokevirtual #277                // Method java/security/SecureRandom.nextBytes:([B)V
      60: iload         6
      62: ldc           #13                 // int 485978113
      64: if_icmpne     85
      67: aload         21
      69: iconst_0
      70: bipush        32
      72: iload         4
      74: iconst_3
      75: iadd
      76: imul
      77: aload         20
      79: iconst_0
      80: bipush        32
      82: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
      85: iload         6
      87: ldc           #15                 // int 1129725953
      89: if_icmpne     110
      92: aload         21
      94: iconst_0
      95: bipush        32
      97: iload         4
      99: iconst_3
     100: iadd
     101: imul
     102: aload         20
     104: iconst_0
     105: bipush        32
     107: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     110: iconst_0
     111: istore        27
     113: iload         27
     115: iload         4
     117: if_icmpge     200
     120: iload         6
     122: ldc           #13                 // int 485978113
     124: if_icmpne     148
     127: aload         24
     129: iload_3
     130: iload         27
     132: imul
     133: aload         21
     135: bipush        32
     137: iload         27
     139: imul
     140: iinc          17, 1
     143: iload         17
     145: invokestatic  #342                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIP:([JI[BII)V
     148: iload         6
     150: ldc           #15                 // int 1129725953
     152: if_icmpne     176
     155: aload         24
     157: iload_3
     158: iload         27
     160: imul
     161: aload         21
     163: bipush        32
     165: iload         27
     167: imul
     168: iinc          17, 1
     171: iload         17
     173: invokestatic  #341                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIIIP:([JI[BII)V
     176: aload         24
     178: iload_3
     179: iload         27
     181: imul
     182: iload         15
     184: iload_3
     185: iload         5
     187: invokestatic  #331                // Method checkPolynomial:([JIIII)Z
     190: iconst_1
     191: if_icmpeq     120
     194: iinc          27, 1
     197: goto          113
     200: iload         6
     202: ldc           #13                 // int 485978113
     204: if_icmpne     225
     207: aload         22
     209: iconst_0
     210: aload         21
     212: bipush        32
     214: iload         4
     216: imul
     217: iinc          17, 1
     220: iload         17
     222: invokestatic  #342                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIP:([JI[BII)V
     225: iload         6
     227: ldc           #15                 // int 1129725953
     229: if_icmpne     250
     232: aload         22
     234: iconst_0
     235: aload         21
     237: bipush        32
     239: iload         4
     241: imul
     242: iinc          17, 1
     245: iload         17
     247: invokestatic  #341                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.polynomialGaussSamplerIIIP:([JI[BII)V
     250: aload         22
     252: iconst_0
     253: iload         16
     255: iload_3
     256: iload         5
     258: invokestatic  #331                // Method checkPolynomial:([JIIII)Z
     261: iconst_1
     262: if_icmpeq     200
     265: aload         25
     267: aload         21
     269: bipush        32
     271: iload         4
     273: iconst_1
     274: iadd
     275: imul
     276: iload_3
     277: iload         4
     279: iload         6
     281: lload         7
     283: iload         9
     285: iload         10
     287: iload         11
     289: invokestatic  #317                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialUniform:([J[BIIIIJIII)V
     292: aload         23
     294: aload         22
     296: iload_3
     297: invokestatic  #318                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialNumberTheoreticTransform:([J[JI)V
     300: iconst_0
     301: istore        27
     303: iload         27
     305: iload         4
     307: if_icmpge     414
     310: aload         26
     312: iload_3
     313: iload         27
     315: imul
     316: aload         25
     318: iload_3
     319: iload         27
     321: imul
     322: aload         23
     324: iconst_0
     325: iload_3
     326: iload         6
     328: lload         7
     330: invokestatic  #316                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialMultiplication:([JI[JI[JIIIJ)V
     333: aload         26
     335: iload_3
     336: iload         27
     338: imul
     339: aload         26
     341: iload_3
     342: iload         27
     344: imul
     345: aload         24
     347: iload_3
     348: iload         27
     350: imul
     351: iload_3
     352: invokestatic  #314                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialAddition:([JI[JI[JII)V
     355: iconst_0
     356: istore        28
     358: iload         28
     360: iload_3
     361: if_icmpge     408
     364: iload         6
     366: i2l
     367: aload         26
     369: iload_3
     370: iload         27
     372: imul
     373: iload         28
     375: iadd
     376: laload
     377: lsub
     378: bipush        63
     380: lshr
     381: lstore        18
     383: aload         26
     385: iload_3
     386: iload         27
     388: imul
     389: iload         28
     391: iadd
     392: dup2
     393: laload
     394: iload         6
     396: i2l
     397: lload         18
     399: land
     400: lsub
     401: lastore
     402: iinc          28, 1
     405: goto          358
     408: iinc          27, 1
     411: goto          303
     414: aload_1
     415: aload         22
     417: aload         24
     419: aload         21
     421: bipush        32
     423: iload         4
     425: iconst_1
     426: iadd
     427: imul
     428: iload_3
     429: iload         4
     431: invokestatic  #296                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.packPrivateKey:([B[J[J[BIII)V
     434: iload         6
     436: ldc           #13                 // int 485978113
     438: if_icmpne     456
     441: aload_0
     442: aload         26
     444: aload         21
     446: bipush        32
     448: iload         4
     450: iconst_1
     451: iadd
     452: imul
     453: invokestatic  #295                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePublicKeyIP:([B[J[BI)V
     456: iload         6
     458: ldc           #15                 // int 1129725953
     460: if_icmpne     478
     463: aload_0
     464: aload         26
     466: aload         21
     468: bipush        32
     470: iload         4
     472: iconst_1
     473: iadd
     474: imul
     475: invokestatic  #294                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodePublicKeyIIIP:([B[J[BI)V
     478: iconst_0
     479: ireturn

  public static int generateKeyPairIP(byte[], byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: iconst_4
       7: bipush        25
       9: ldc           #13                 // int 485978113
      11: ldc2_w        #160                // long 3421990911l
      14: bipush        29
      16: bipush        108
      18: ldc           #12                 // int 472064468
      20: ldc2_w        #168                // double 10.0d
      23: getstatic     #272                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialProvablySecure.ZETA_I_P:[J
      26: sipush        554
      29: sipush        554
      32: invokestatic  #335                // Method generateKeyPair:([B[BLjava/security/SecureRandom;IIIIJIIID[JII)I
      35: ireturn

  public static int generateKeyPairIIIP(byte[], byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        2048
       6: iconst_5
       7: bipush        40
       9: ldc           #15                 // int 1129725953
      11: ldc2_w        #156                // long 861290495l
      14: bipush        31
      16: sipush        180
      19: ldc           #14                 // int 851423148
      21: ldc2_w        #168                // double 10.0d
      24: getstatic     #271                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialProvablySecure.ZETA_III_P:[J
      27: sipush        901
      30: sipush        901
      33: invokestatic  #335                // Method generateKeyPair:([B[BLjava/security/SecureRandom;IIIIJIIID[JII)I
      36: ireturn

  private static int signing(byte[], byte[], int, int, byte[], java.security.SecureRandom, int, int, int, long, int, int, int, int, int, int, int, int, int, int, int[]);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore        22
       6: bipush        32
       8: newarray       byte
      10: astore        23
      12: sipush        128
      15: newarray       byte
      17: astore        24
      19: bipush        64
      21: newarray       byte
      23: astore        25
      25: bipush        32
      27: newarray       byte
      29: astore        26
      31: iload         7
      33: newarray       int
      35: astore        27
      37: iload         7
      39: newarray       short
      41: astore        28
      43: iload         6
      45: newarray       short
      47: astore        29
      49: iload         6
      51: newarray       short
      53: astore        30
      55: iload         6
      57: newarray       int
      59: astore        31
      61: iload         6
      63: newarray       int
      65: astore        32
      67: iload         6
      69: newarray       int
      71: astore        33
      73: iload         6
      75: newarray       int
      77: astore        34
      79: iload         6
      81: newarray       int
      83: astore        35
      85: iload         6
      87: newarray       int
      89: astore        36
      91: iconst_0
      92: istore        37
      94: iload         8
      96: ldc           #8                  // int 4205569
      98: if_icmpne     112
     101: aload         25
     103: aload         29
     105: aload         30
     107: aload         4
     109: invokestatic  #297                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePrivateKeyI:([B[S[S[B)V
     112: iload         8
     114: ldc           #9                  // int 4206593
     116: if_icmpne     130
     119: aload         25
     121: aload         29
     123: aload         30
     125: aload         4
     127: invokestatic  #298                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePrivateKeyIIISize:([B[S[S[B)V
     130: iload         8
     132: ldc           #11                 // int 8404993
     134: if_icmpne     148
     137: aload         25
     139: aload         29
     141: aload         30
     143: aload         4
     145: invokestatic  #299                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePrivateKeyIIISpeed:([B[S[S[B)V
     148: aload         5
     150: aload         26
     152: invokevirtual #277                // Method java/security/SecureRandom.nextBytes:([B)V
     155: aload         26
     157: iconst_0
     158: aload         24
     160: bipush        32
     162: bipush        32
     164: invokestatic  #276                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     167: aload         25
     169: bipush        32
     171: aload         24
     173: iconst_0
     174: bipush        32
     176: invokestatic  #276                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     179: iload         8
     181: ldc           #8                  // int 4205569
     183: if_icmpne     212
     186: aload         24
     188: bipush        64
     190: bipush        64
     192: aload_1
     193: iconst_0
     194: iload_3
     195: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     198: aload         23
     200: iconst_0
     201: bipush        32
     203: aload         24
     205: iconst_0
     206: sipush        128
     209: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     212: iload         8
     214: ldc           #9                  // int 4206593
     216: if_icmpeq     226
     219: iload         8
     221: ldc           #11                 // int 8404993
     223: if_icmpne     252
     226: aload         24
     228: bipush        64
     230: bipush        64
     232: aload_1
     233: iconst_0
     234: iload_3
     235: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     238: aload         23
     240: iconst_0
     241: bipush        32
     243: aload         24
     245: iconst_0
     246: sipush        128
     249: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     252: aload         31
     254: aload         25
     256: iconst_0
     257: iload         6
     259: iload         8
     261: lload         9
     263: iload         11
     265: iload         17
     267: iload         18
     269: invokestatic  #304                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialUniform:([I[BIIIJIII)V
     272: aload         33
     274: aload         23
     276: iconst_0
     277: iinc          37, 1
     280: iload         37
     282: iload         6
     284: iload         8
     286: iload         12
     288: iload         13
     290: invokestatic  #339                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.sampleY:([I[BIIIIII)V
     293: aload         32
     295: aload         31
     297: aload         33
     299: iload         6
     301: iload         8
     303: lload         9
     305: aload         21
     307: invokestatic  #309                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialMultiplication:([I[I[IIIJ[I)V
     310: aload         22
     312: iconst_0
     313: aload         32
     315: aload         24
     317: bipush        64
     319: iload         6
     321: iload         14
     323: iload         8
     325: invokestatic  #321                // Method hashFunction:([BI[I[BIIII)V
     328: aload         27
     330: aload         28
     332: aload         22
     334: iconst_0
     335: iload         6
     337: iload         7
     339: invokestatic  #340                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.encodeC:([I[S[BIII)V
     342: aload         35
     344: aload         29
     346: aload         27
     348: aload         28
     350: iload         6
     352: iload         7
     354: invokestatic  #311                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.sparsePolynomialMultiplication16:([I[S[I[SII)V
     357: aload         34
     359: aload         33
     361: aload         35
     363: iload         6
     365: invokestatic  #305                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialAddition:([I[I[II)V
     368: aload         34
     370: iload         6
     372: iload         12
     374: iload         15
     376: invokestatic  #326                // Method testRejection:([IIII)Z
     379: iconst_1
     380: if_icmpne     386
     383: goto          272
     386: aload         36
     388: aload         30
     390: aload         27
     392: aload         28
     394: iload         6
     396: iload         7
     398: invokestatic  #311                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.sparsePolynomialMultiplication16:([I[S[I[SII)V
     401: aload         32
     403: aload         32
     405: aload         36
     407: iload         6
     409: iload         8
     411: invokestatic  #307                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialSubtractionCorrection:([I[I[III)V
     414: aload         32
     416: iload         6
     418: iload         14
     420: iload         8
     422: iload         16
     424: invokestatic  #328                // Method testV:([IIIII)Z
     427: iconst_1
     428: if_icmpne     434
     431: goto          272
     434: iload         8
     436: ldc           #8                  // int 4205569
     438: if_icmpne     455
     441: aload_0
     442: iconst_0
     443: aload         22
     445: iconst_0
     446: aload         34
     448: iload         6
     450: iload         14
     452: invokestatic  #282                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodeSignature:([BI[BI[III)V
     455: iload         8
     457: ldc           #9                  // int 4206593
     459: if_icmpne     476
     462: aload_0
     463: iconst_0
     464: aload         22
     466: iconst_0
     467: aload         34
     469: iload         6
     471: iload         14
     473: invokestatic  #282                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodeSignature:([BI[BI[III)V
     476: iload         8
     478: ldc           #11                 // int 8404993
     480: if_icmpne     493
     483: aload_0
     484: iconst_0
     485: aload         22
     487: iconst_0
     488: aload         34
     490: invokestatic  #281                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodeSignatureIIISpeed:([BI[BI[I)V
     493: iconst_0
     494: ireturn

  static int signingI(byte[], byte[], int, int, byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: sipush        512
      11: bipush        30
      13: ldc           #8                  // int 4205569
      15: ldc2_w        #158                // long 3098553343l
      18: bipush        23
      20: ldc           #4                  // int 1048575
      22: bipush        20
      24: bipush        21
      26: sipush        1586
      29: sipush        1586
      32: bipush        19
      34: ldc           #2                  // int 113307
      36: sipush        1021
      39: bipush        32
      41: getstatic     #268                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_I:[I
      44: invokestatic  #334                // Method signing:([B[BII[BLjava/security/SecureRandom;IIIJIIIIIIIIII[I)I
      47: ireturn

  static int signingIIISize(byte[], byte[], int, int, byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: sipush        1024
      11: bipush        48
      13: ldc           #9                  // int 4206593
      15: ldc2_w        #164                // long 4148178943l
      18: bipush        23
      20: ldc           #4                  // int 1048575
      22: bipush        20
      24: bipush        21
      26: sipush        910
      29: sipush        910
      32: bipush        38
      34: ldc           #6                  // int 1217638
      36: sipush        1021
      39: bipush        32
      41: getstatic     #269                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_III_SIZE:[I
      44: invokestatic  #334                // Method signing:([B[BII[BLjava/security/SecureRandom;IIIJIIIIIIIIII[I)I
      47: ireturn

  static int signingIIISpeed(byte[], byte[], int, int, byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: sipush        1024
      11: bipush        48
      13: ldc           #11                 // int 8404993
      15: ldc2_w        #162                // long 4034936831l
      18: bipush        24
      20: ldc           #7                  // int 2097151
      22: bipush        21
      24: bipush        22
      26: sipush        1233
      29: sipush        1147
      32: bipush        38
      34: ldc           #3                  // int 237839
      36: sipush        511
      39: bipush        32
      41: getstatic     #270                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_III_SPEED:[I
      44: invokestatic  #334                // Method signing:([B[BII[BLjava/security/SecureRandom;IIIJIIIIIIIIII[I)I
      47: ireturn

  private static int signing(byte[], byte[], int, int, byte[], java.security.SecureRandom, int, int, int, int, long, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore        23
       6: bipush        32
       8: newarray       byte
      10: astore        24
      12: sipush        128
      15: newarray       byte
      17: astore        25
      19: bipush        32
      21: newarray       byte
      23: astore        26
      25: iload         8
      27: newarray       int
      29: astore        27
      31: iload         8
      33: newarray       short
      35: astore        28
      37: iload         6
      39: iload         7
      41: imul
      42: newarray       long
      44: astore        29
      46: iload         6
      48: iload         7
      50: imul
      51: newarray       long
      53: astore        30
      55: iload         6
      57: newarray       long
      59: astore        31
      61: iload         6
      63: newarray       long
      65: astore        32
      67: iload         6
      69: newarray       long
      71: astore        33
      73: iload         6
      75: newarray       long
      77: astore        34
      79: iload         6
      81: iload         7
      83: imul
      84: newarray       long
      86: astore        35
      88: iconst_0
      89: istore        36
      91: iconst_0
      92: istore        37
      94: aload         5
      96: aload         26
      98: invokevirtual #277                // Method java/security/SecureRandom.nextBytes:([B)V
     101: aload         26
     103: iconst_0
     104: aload         25
     106: bipush        32
     108: bipush        32
     110: invokestatic  #276                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     113: aload         4
     115: iload         20
     117: bipush        32
     119: isub
     120: aload         25
     122: iconst_0
     123: bipush        32
     125: invokestatic  #276                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: iload         9
     130: ldc           #13                 // int 485978113
     132: if_icmpne     161
     135: aload         25
     137: bipush        64
     139: bipush        64
     141: aload_1
     142: iconst_0
     143: iload_3
     144: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     147: aload         24
     149: iconst_0
     150: bipush        32
     152: aload         25
     154: iconst_0
     155: sipush        128
     158: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     161: iload         9
     163: ldc           #15                 // int 1129725953
     165: if_icmpne     194
     168: aload         25
     170: bipush        64
     172: bipush        64
     174: aload_1
     175: iconst_0
     176: iload_3
     177: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     180: aload         24
     182: iconst_0
     183: bipush        32
     185: aload         25
     187: iconst_0
     188: sipush        128
     191: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     194: aload         29
     196: aload         4
     198: iload         20
     200: bipush        64
     202: isub
     203: iload         6
     205: iload         7
     207: iload         9
     209: lload         10
     211: iload         12
     213: iload         18
     215: iload         19
     217: invokestatic  #317                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialUniform:([J[BIIIIJIII)V
     220: aload         31
     222: aload         24
     224: iconst_0
     225: iinc          37, 1
     228: iload         37
     230: iload         6
     232: iload         9
     234: iload         13
     236: iload         14
     238: invokestatic  #343                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.sampleY:([J[BIIIIII)V
     241: aload         32
     243: aload         31
     245: iload         6
     247: invokestatic  #318                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialNumberTheoreticTransform:([J[JI)V
     250: iconst_0
     251: istore        38
     253: iload         38
     255: iload         7
     257: if_icmpge     292
     260: aload         30
     262: iload         6
     264: iload         38
     266: imul
     267: aload         29
     269: iload         6
     271: iload         38
     273: imul
     274: aload         32
     276: iconst_0
     277: iload         6
     279: iload         9
     281: lload         10
     283: invokestatic  #316                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialMultiplication:([JI[JI[JIIIJ)V
     286: iinc          38, 1
     289: goto          253
     292: aload         23
     294: iconst_0
     295: aload         30
     297: aload         25
     299: bipush        64
     301: iload         6
     303: iload         7
     305: iload         15
     307: iload         9
     309: invokestatic  #322                // Method hashFunction:([BI[J[BIIIII)V
     312: aload         27
     314: aload         28
     316: aload         23
     318: iconst_0
     319: iload         6
     321: iload         8
     323: invokestatic  #340                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.encodeC:([I[S[BIII)V
     326: aload         34
     328: iconst_0
     329: aload         4
     331: iconst_0
     332: aload         27
     334: aload         28
     336: iload         6
     338: iload         8
     340: invokestatic  #312                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.sparsePolynomialMultiplication8:([JI[BI[I[SII)V
     343: aload         33
     345: iconst_0
     346: aload         31
     348: iconst_0
     349: aload         34
     351: iconst_0
     352: iload         6
     354: invokestatic  #314                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialAddition:([JI[JI[JII)V
     357: aload         33
     359: iload         6
     361: iload         13
     363: iload         16
     365: invokestatic  #329                // Method testRejection:([JIII)Z
     368: iconst_1
     369: if_icmpne     375
     372: goto          220
     375: iconst_0
     376: istore        38
     378: iload         38
     380: iload         7
     382: if_icmpge     479
     385: aload         35
     387: iload         6
     389: iload         38
     391: imul
     392: aload         4
     394: iload         6
     396: iload         38
     398: iconst_1
     399: iadd
     400: imul
     401: aload         27
     403: aload         28
     405: iload         6
     407: iload         8
     409: invokestatic  #312                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.sparsePolynomialMultiplication8:([JI[BI[I[SII)V
     412: aload         30
     414: iload         6
     416: iload         38
     418: imul
     419: aload         30
     421: iload         6
     423: iload         38
     425: imul
     426: aload         35
     428: iload         6
     430: iload         38
     432: imul
     433: iload         6
     435: iload         9
     437: iload         21
     439: iload         22
     441: invokestatic  #315                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialSubtraction:([JI[JI[JIIIII)V
     444: aload         30
     446: iload         6
     448: iload         38
     450: imul
     451: iload         6
     453: iload         15
     455: iload         9
     457: iload         17
     459: invokestatic  #332                // Method testV:([JIIIII)Z
     462: istore        36
     464: iload         36
     466: iconst_1
     467: if_icmpne     473
     470: goto          479
     473: iinc          38, 1
     476: goto          378
     479: iload         36
     481: iconst_1
     482: if_icmpne     488
     485: goto          220
     488: iload         9
     490: ldc           #13                 // int 485978113
     492: if_icmpne     505
     495: aload_0
     496: iconst_0
     497: aload         23
     499: iconst_0
     500: aload         33
     502: invokestatic  #284                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodeSignatureIP:([BI[BI[J)V
     505: iload         9
     507: ldc           #15                 // int 1129725953
     509: if_icmpne     522
     512: aload_0
     513: iconst_0
     514: aload         23
     516: iconst_0
     517: aload         33
     519: invokestatic  #283                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.encodeSignatureIIIP:([BI[BI[J)V
     522: iconst_0
     523: ireturn

  public static int signingIP(byte[], byte[], int, int, byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: sipush        1024
      11: iconst_4
      12: bipush        25
      14: ldc           #13                 // int 485978113
      16: ldc2_w        #160                // long 3421990911l
      19: bipush        29
      21: ldc           #7                  // int 2097151
      23: bipush        21
      25: bipush        22
      27: sipush        554
      30: sipush        554
      33: bipush        108
      35: ldc           #12                 // int 472064468
      37: sipush        5184
      40: iconst_1
      41: bipush        29
      43: invokestatic  #333                // Method signing:([B[BII[BLjava/security/SecureRandom;IIIIJIIIIIIIIIII)I
      46: ireturn

  public static int signingIIIP(byte[], byte[], int, int, byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: sipush        2048
      11: iconst_5
      12: bipush        40
      14: ldc           #15                 // int 1129725953
      16: ldc2_w        #156                // long 861290495l
      19: bipush        31
      21: ldc           #10                 // int 8388607
      23: bipush        23
      25: bipush        24
      27: sipush        901
      30: sipush        901
      33: sipush        180
      36: ldc           #14                 // int 851423148
      38: sipush        12352
      41: bipush        15
      43: bipush        34
      45: invokestatic  #333                // Method signing:([B[BII[BLjava/security/SecureRandom;IIIIJIIIIIIIIIII)I
      48: ireturn

  private static int verifying(byte[], byte[], int, int, byte[], int, int, int, long, int, int, int, int, int, int, int, int, int, int, int[]);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore        21
       6: bipush        32
       8: newarray       byte
      10: astore        22
      12: bipush        32
      14: newarray       byte
      16: astore        23
      18: bipush        64
      20: newarray       byte
      22: astore        24
      24: iload         5
      26: newarray       int
      28: astore        25
      30: iload         6
      32: newarray       int
      34: astore        26
      36: iload         6
      38: newarray       short
      40: astore        27
      42: iload         5
      44: newarray       int
      46: astore        28
      48: iload         5
      50: newarray       int
      52: astore        29
      54: iload         5
      56: newarray       int
      58: astore        30
      60: iload         5
      62: newarray       int
      64: astore        31
      66: iload_3
      67: iload         15
      69: if_icmpge     74
      72: iconst_m1
      73: ireturn
      74: iload         7
      76: ldc           #8                  // int 4205569
      78: if_icmpeq     88
      81: iload         7
      83: ldc           #9                  // int 4206593
      85: if_icmpne     101
      88: aload         21
      90: aload         29
      92: aload_1
      93: iload_2
      94: iload         5
      96: iload         12
      98: invokestatic  #287                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodeSignature:([B[I[BIII)V
     101: iload         7
     103: ldc           #11                 // int 8404993
     105: if_icmpne     117
     108: aload         21
     110: aload         29
     112: aload_1
     113: iload_2
     114: invokestatic  #285                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodeSignatureIIISpeed:([B[I[BI)V
     117: aload         29
     119: iload         5
     121: iload         11
     123: iload         13
     125: invokestatic  #327                // Method testZ:([IIII)Z
     128: iconst_1
     129: if_icmpne     135
     132: bipush        -2
     134: ireturn
     135: iload         7
     137: ldc           #8                  // int 4205569
     139: if_icmpeq     149
     142: iload         7
     144: ldc           #9                  // int 4206593
     146: if_icmpne     163
     149: aload         25
     151: aload         23
     153: iconst_0
     154: aload         4
     156: iload         5
     158: iload         10
     160: invokestatic  #303                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePublicKey:([I[BI[BII)V
     163: iload         7
     165: ldc           #11                 // int 8404993
     167: if_icmpne     180
     170: aload         25
     172: aload         23
     174: iconst_0
     175: aload         4
     177: invokestatic  #301                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePublicKeyIIISpeed:([I[BI[B)V
     180: aload         31
     182: aload         23
     184: iconst_0
     185: iload         5
     187: iload         7
     189: lload         8
     191: iload         10
     193: iload         16
     195: iload         17
     197: invokestatic  #304                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialUniform:([I[BIIIJIII)V
     200: aload         26
     202: aload         27
     204: aload         21
     206: iconst_0
     207: iload         5
     209: iload         6
     211: invokestatic  #340                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.encodeC:([I[S[BIII)V
     214: aload         30
     216: aload         25
     218: aload         26
     220: aload         27
     222: iload         5
     224: iload         6
     226: invokestatic  #310                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.sparsePolynomialMultiplication32:([I[I[I[SII)V
     229: aload         28
     231: aload         31
     233: aload         29
     235: iload         5
     237: iload         7
     239: lload         8
     241: aload         20
     243: invokestatic  #309                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialMultiplication:([I[I[IIIJ[I)V
     246: aload         28
     248: aload         28
     250: aload         30
     252: iload         5
     254: iload         7
     256: lload         8
     258: iload         14
     260: invokestatic  #308                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialSubtractionMontgomery:([I[I[IIIJI)V
     263: iload         7
     265: ldc           #8                  // int 4205569
     267: if_icmpne     282
     270: aload         24
     272: iconst_0
     273: bipush        64
     275: aload_0
     276: iconst_0
     277: aload_0
     278: arraylength
     279: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     282: iload         7
     284: ldc           #9                  // int 4206593
     286: if_icmpeq     296
     289: iload         7
     291: ldc           #11                 // int 8404993
     293: if_icmpne     308
     296: aload         24
     298: iconst_0
     299: bipush        64
     301: aload_0
     302: iconst_0
     303: aload_0
     304: arraylength
     305: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     308: aload         22
     310: iconst_0
     311: aload         28
     313: aload         24
     315: iconst_0
     316: iload         5
     318: iload         12
     320: iload         7
     322: invokestatic  #321                // Method hashFunction:([BI[I[BIIII)V
     325: aload         21
     327: iconst_0
     328: aload         22
     330: iconst_0
     331: bipush        32
     333: invokestatic  #278                // Method org/bouncycastle/pqc/crypto/qteslarnd1/CommonFunction.memoryEqual:([BI[BII)Z
     336: ifne          342
     339: bipush        -3
     341: ireturn
     342: iconst_0
     343: ireturn

  static int verifyingI(byte[], byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: sipush        512
       9: bipush        30
      11: ldc           #8                  // int 4205569
      13: ldc2_w        #158                // long 3098553343l
      16: bipush        23
      18: ldc           #4                  // int 1048575
      20: bipush        21
      22: sipush        1586
      25: ldc           #5                  // int 1081347
      27: sipush        1376
      30: bipush        19
      32: ldc           #2                  // int 113307
      34: sipush        1021
      37: bipush        32
      39: getstatic     #268                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_I:[I
      42: invokestatic  #324                // Method verifying:([B[BII[BIIIJIIIIIIIIII[I)I
      45: ireturn

  static int verifyingIIISize(byte[], byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: sipush        1024
       9: bipush        48
      11: ldc           #9                  // int 4206593
      13: ldc2_w        #164                // long 4148178943l
      16: bipush        23
      18: ldc           #4                  // int 1048575
      20: bipush        21
      22: sipush        910
      25: ldc           #1                  // int 35843
      27: sipush        2720
      30: bipush        38
      32: ldc           #6                  // int 1217638
      34: sipush        1021
      37: bipush        32
      39: getstatic     #269                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_III_SIZE:[I
      42: invokestatic  #324                // Method verifying:([B[BII[BIIIJIIIIIIIIII[I)I
      45: ireturn

  static int verifyingIIISpeed(byte[], byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: sipush        1024
       9: bipush        48
      11: ldc           #11                 // int 8404993
      13: ldc2_w        #162                // long 4034936831l
      16: bipush        24
      18: ldc           #7                  // int 2097151
      20: bipush        22
      22: sipush        1233
      25: sipush        15873
      28: sipush        2848
      31: bipush        38
      33: ldc           #3                  // int 237839
      35: sipush        511
      38: bipush        32
      40: getstatic     #270                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialHeuristic.ZETA_III_SPEED:[I
      43: invokestatic  #324                // Method verifying:([B[BII[BIIIJIIIIIIIIII[I)I
      46: ireturn

  private static int verifying(byte[], byte[], int, int, byte[], int, int, int, int, long, int, int, int, int, int, int, int, int, int, long[]);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore        21
       6: bipush        32
       8: newarray       byte
      10: astore        22
      12: bipush        32
      14: newarray       byte
      16: astore        23
      18: bipush        64
      20: newarray       byte
      22: astore        24
      24: iload         5
      26: iload         6
      28: imul
      29: newarray       int
      31: astore        25
      33: iload         7
      35: newarray       int
      37: astore        26
      39: iload         7
      41: newarray       short
      43: astore        27
      45: iload         5
      47: iload         6
      49: imul
      50: newarray       long
      52: astore        28
      54: iload         5
      56: newarray       long
      58: astore        29
      60: iload         5
      62: newarray       long
      64: astore        30
      66: iload         5
      68: iload         6
      70: imul
      71: newarray       long
      73: astore        31
      75: iload         5
      77: iload         6
      79: imul
      80: newarray       long
      82: astore        32
      84: iload_3
      85: iload         15
      87: if_icmpge     92
      90: iconst_m1
      91: ireturn
      92: iload         8
      94: ldc           #13                 // int 485978113
      96: if_icmpne     108
      99: aload         21
     101: aload         29
     103: aload_1
     104: iload_2
     105: invokestatic  #293                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodeSignatureIP:([B[J[BI)V
     108: iload         8
     110: ldc           #15                 // int 1129725953
     112: if_icmpne     124
     115: aload         21
     117: aload         29
     119: aload_1
     120: iload_2
     121: invokestatic  #292                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodeSignatureIIIP:([B[J[BI)V
     124: aload         29
     126: iload         5
     128: iload         12
     130: iload         14
     132: invokestatic  #330                // Method testZ:([JIII)Z
     135: iconst_1
     136: if_icmpne     142
     139: bipush        -2
     141: ireturn
     142: iload         8
     144: ldc           #13                 // int 485978113
     146: if_icmpne     159
     149: aload         25
     151: aload         23
     153: iconst_0
     154: aload         4
     156: invokestatic  #302                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePublicKeyIP:([I[BI[B)V
     159: iload         8
     161: ldc           #15                 // int 1129725953
     163: if_icmpne     176
     166: aload         25
     168: aload         23
     170: iconst_0
     171: aload         4
     173: invokestatic  #300                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Pack.decodePublicKeyIIIP:([I[BI[B)V
     176: aload         32
     178: aload         23
     180: iconst_0
     181: iload         5
     183: iload         6
     185: iload         8
     187: lload         9
     189: iload         11
     191: iload         16
     193: iload         17
     195: invokestatic  #317                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialUniform:([J[BIIIIJIII)V
     198: aload         26
     200: aload         27
     202: aload         21
     204: iconst_0
     205: iload         5
     207: iload         7
     209: invokestatic  #340                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Sample.encodeC:([I[S[BIII)V
     212: aload         30
     214: aload         29
     216: iload         5
     218: invokestatic  #318                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialNumberTheoreticTransform:([J[JI)V
     221: iconst_0
     222: istore        33
     224: iload         33
     226: iload         6
     228: if_icmpge     326
     231: aload         28
     233: iload         5
     235: iload         33
     237: imul
     238: aload         32
     240: iload         5
     242: iload         33
     244: imul
     245: aload         30
     247: iconst_0
     248: iload         5
     250: iload         8
     252: lload         9
     254: invokestatic  #316                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialMultiplication:([JI[JI[JIIIJ)V
     257: aload         31
     259: iload         5
     261: iload         33
     263: imul
     264: aload         25
     266: iload         5
     268: iload         33
     270: imul
     271: aload         26
     273: aload         27
     275: iload         5
     277: iload         7
     279: iload         8
     281: iload         18
     283: iload         19
     285: invokestatic  #313                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.sparsePolynomialMultiplication32:([JI[II[I[SIIIII)V
     288: aload         28
     290: iload         5
     292: iload         33
     294: imul
     295: aload         28
     297: iload         5
     299: iload         33
     301: imul
     302: aload         31
     304: iload         5
     306: iload         33
     308: imul
     309: iload         5
     311: iload         8
     313: iload         18
     315: iload         19
     317: invokestatic  #315                // Method org/bouncycastle/pqc/crypto/qteslarnd1/Polynomial.polynomialSubtraction:([JI[JI[JIIIII)V
     320: iinc          33, 1
     323: goto          224
     326: iload         8
     328: ldc           #13                 // int 485978113
     330: if_icmpne     345
     333: aload         24
     335: iconst_0
     336: bipush        64
     338: aload_0
     339: iconst_0
     340: aload_0
     341: arraylength
     342: invokestatic  #279                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK128:([BII[BII)V
     345: iload         8
     347: ldc           #15                 // int 1129725953
     349: if_icmpne     364
     352: aload         24
     354: iconst_0
     355: bipush        64
     357: aload_0
     358: iconst_0
     359: aload_0
     360: arraylength
     361: invokestatic  #280                // Method org/bouncycastle/pqc/crypto/qteslarnd1/HashUtils.secureHashAlgorithmKECCAK256:([BII[BII)V
     364: aload         22
     366: iconst_0
     367: aload         28
     369: aload         24
     371: iconst_0
     372: iload         5
     374: iload         6
     376: iload         13
     378: iload         8
     380: invokestatic  #322                // Method hashFunction:([BI[J[BIIIII)V
     383: aload         21
     385: iconst_0
     386: aload         22
     388: iconst_0
     389: bipush        32
     391: invokestatic  #278                // Method org/bouncycastle/pqc/crypto/qteslarnd1/CommonFunction.memoryEqual:([BI[BII)Z
     394: ifne          400
     397: bipush        -3
     399: ireturn
     400: iconst_0
     401: ireturn

  static int verifyingPI(byte[], byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: sipush        1024
       9: iconst_4
      10: bipush        25
      12: ldc           #13                 // int 485978113
      14: ldc2_w        #160                // long 3421990911l
      17: bipush        29
      19: ldc           #7                  // int 2097151
      21: bipush        22
      23: sipush        554
      26: sipush        2848
      29: bipush        108
      31: ldc           #12                 // int 472064468
      33: iconst_1
      34: bipush        29
      36: getstatic     #272                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialProvablySecure.ZETA_I_P:[J
      39: invokestatic  #323                // Method verifying:([B[BII[BIIIIJIIIIIIIII[J)I
      42: ireturn

  static int verifyingPIII(byte[], byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: sipush        2048
       9: iconst_5
      10: bipush        40
      12: ldc           #15                 // int 1129725953
      14: ldc2_w        #156                // long 861290495l
      17: bipush        31
      19: ldc           #10                 // int 8388607
      21: bipush        24
      23: sipush        901
      26: sipush        6176
      29: sipush        180
      32: ldc           #14                 // int 851423148
      34: bipush        15
      36: bipush        34
      38: getstatic     #271                // Field org/bouncycastle/pqc/crypto/qteslarnd1/PolynomialProvablySecure.ZETA_III_P:[J
      41: invokestatic  #323                // Method verifying:([B[BII[BIIIIJIIIIIIIII[J)I
      44: ireturn
}
