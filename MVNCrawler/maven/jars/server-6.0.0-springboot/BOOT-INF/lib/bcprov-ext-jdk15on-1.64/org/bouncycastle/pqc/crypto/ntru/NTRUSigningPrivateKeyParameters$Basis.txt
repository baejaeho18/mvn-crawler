public class org.bouncycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis {
  public org.bouncycastle.pqc.math.ntru.polynomial.Polynomial f;

  public org.bouncycastle.pqc.math.ntru.polynomial.Polynomial fPrime;

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial h;

  org.bouncycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters params;

  protected org.bouncycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis(org.bouncycastle.pqc.math.ntru.polynomial.Polynomial, org.bouncycastle.pqc.math.ntru.polynomial.Polynomial, org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters);
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
       9: aload_0
      10: aload_2
      11: putfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      14: aload_0
      15: aload_3
      16: putfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      19: aload_0
      20: aload         4
      22: putfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
      25: return

  org.bouncycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis(java.io.InputStream, org.bouncycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object."<init>":()V
       4: aload_2
       5: getfield      #94                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.N:I
       8: istore        4
      10: aload_2
      11: getfield      #100                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.q:I
      14: istore        5
      16: aload_2
      17: getfield      #96                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.d1:I
      20: istore        6
      22: aload_2
      23: getfield      #97                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.d2:I
      26: istore        7
      28: aload_2
      29: getfield      #98                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.d3:I
      32: istore        8
      34: aload_2
      35: getfield      #101                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.sparse:Z
      38: istore        9
      40: aload_0
      41: aload_2
      42: putfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
      45: aload_2
      46: getfield      #99                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.polyType:I
      49: iconst_1
      50: if_icmpne     76
      53: aload_0
      54: aload_1
      55: iload         4
      57: iload         6
      59: iload         7
      61: iload         8
      63: iconst_1
      64: iadd
      65: iload         8
      67: invokestatic  #121                // Method org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.fromBinary:(Ljava/io/InputStream;IIIII)Lorg/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial;
      70: putfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      73: goto          114
      76: aload_1
      77: iload         4
      79: invokestatic  #118                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary3Tight:(Ljava/io/InputStream;I)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      82: astore        10
      84: aload_0
      85: iload         9
      87: ifeq          102
      90: new           #54                 // class org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial
      93: dup
      94: aload         10
      96: invokespecial #122                // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial."<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
      99: goto          111
     102: new           #50                 // class org/bouncycastle/pqc/math/ntru/polynomial/DenseTernaryPolynomial
     105: dup
     106: aload         10
     108: invokespecial #114                // Method org/bouncycastle/pqc/math/ntru/polynomial/DenseTernaryPolynomial."<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     111: putfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     114: aload_2
     115: getfield      #95                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.basisType:I
     118: ifne          175
     121: aload_1
     122: iload         4
     124: iload         5
     126: invokestatic  #119                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:(Ljava/io/InputStream;II)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     129: astore        10
     131: iconst_0
     132: istore        11
     134: iload         11
     136: aload         10
     138: getfield      #106                // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
     141: arraylength
     142: if_icmpge     166
     145: aload         10
     147: getfield      #106                // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
     150: iload         11
     152: dup2
     153: iaload
     154: iload         5
     156: iconst_2
     157: idiv
     158: isub
     159: iastore
     160: iinc          11, 1
     163: goto          134
     166: aload_0
     167: aload         10
     169: putfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     172: goto          216
     175: aload_2
     176: getfield      #99                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.polyType:I
     179: iconst_1
     180: if_icmpne     206
     183: aload_0
     184: aload_1
     185: iload         4
     187: iload         6
     189: iload         7
     191: iload         8
     193: iconst_1
     194: iadd
     195: iload         8
     197: invokestatic  #121                // Method org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.fromBinary:(Ljava/io/InputStream;IIIII)Lorg/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial;
     200: putfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     203: goto          216
     206: aload_0
     207: aload_1
     208: iload         4
     210: invokestatic  #118                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary3Tight:(Ljava/io/InputStream;I)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     213: putfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     216: iload_3
     217: ifeq          232
     220: aload_0
     221: aload_1
     222: iload         4
     224: iload         5
     226: invokestatic  #119                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:(Ljava/io/InputStream;II)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     229: putfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     232: return

  void encode(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
       4: getfield      #100                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.q:I
       7: istore_3
       8: aload_1
       9: aload_0
      10: aload_0
      11: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      14: invokespecial #113                // Method getEncoded:(Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;)[B
      17: invokevirtual #107                // Method java/io/OutputStream.write:([B)V
      20: aload_0
      21: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
      24: getfield      #95                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.basisType:I
      27: ifne          88
      30: aload_0
      31: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      34: invokeinterface #123,  1          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      39: astore        4
      41: iconst_0
      42: istore        5
      44: iload         5
      46: aload         4
      48: getfield      #106                // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
      51: arraylength
      52: if_icmpge     75
      55: aload         4
      57: getfield      #106                // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
      60: iload         5
      62: dup2
      63: iaload
      64: iload_3
      65: iconst_2
      66: idiv
      67: iadd
      68: iastore
      69: iinc          5, 1
      72: goto          44
      75: aload_1
      76: aload         4
      78: iload_3
      79: invokevirtual #116                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary:(I)[B
      82: invokevirtual #107                // Method java/io/OutputStream.write:([B)V
      85: goto          100
      88: aload_1
      89: aload_0
      90: aload_0
      91: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      94: invokespecial #113                // Method getEncoded:(Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;)[B
      97: invokevirtual #107                // Method java/io/OutputStream.write:([B)V
     100: iload_2
     101: ifeq          116
     104: aload_1
     105: aload_0
     106: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     109: iload_3
     110: invokevirtual #116                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary:(I)[B
     113: invokevirtual #107                // Method java/io/OutputStream.write:([B)V
     116: return

  private byte[] getEncoded(org.bouncycastle.pqc.math.ntru.polynomial.Polynomial);
    Code:
       0: aload_1
       1: instanceof    #53                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
       4: ifeq          15
       7: aload_1
       8: checkcast     #53                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
      11: invokevirtual #120                // Method org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.toBinary:()[B
      14: areturn
      15: aload_1
      16: invokeinterface #123,  1          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      21: invokevirtual #115                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary3Tight:()[B
      24: areturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_2
       2: bipush        31
       4: iload_2
       5: imul
       6: aload_0
       7: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      10: ifnonnull     17
      13: iconst_0
      14: goto          24
      17: aload_0
      18: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      21: invokevirtual #108                // Method java/lang/Object.hashCode:()I
      24: iadd
      25: istore_2
      26: bipush        31
      28: iload_2
      29: imul
      30: aload_0
      31: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      34: ifnonnull     41
      37: iconst_0
      38: goto          48
      41: aload_0
      42: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      45: invokevirtual #108                // Method java/lang/Object.hashCode:()I
      48: iadd
      49: istore_2
      50: bipush        31
      52: iload_2
      53: imul
      54: aload_0
      55: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      58: ifnonnull     65
      61: iconst_0
      62: goto          72
      65: aload_0
      66: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      69: invokevirtual #108                // Method java/lang/Object.hashCode:()I
      72: iadd
      73: istore_2
      74: bipush        31
      76: iload_2
      77: imul
      78: aload_0
      79: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
      82: ifnonnull     89
      85: iconst_0
      86: goto          96
      89: aload_0
      90: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
      93: invokevirtual #111                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.hashCode:()I
      96: iadd
      97: istore_2
      98: iload_2
      99: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #49                 // class org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #49                 // class org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis
      26: astore_2
      27: aload_0
      28: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      31: ifnonnull     43
      34: aload_2
      35: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      38: ifnull        59
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      47: aload_2
      48: getfield      #104                // Field f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      51: invokevirtual #110                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifne          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      63: ifnonnull     75
      66: aload_2
      67: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      70: ifnull        91
      73: iconst_0
      74: ireturn
      75: aload_0
      76: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      79: aload_2
      80: getfield      #105                // Field fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      83: invokevirtual #110                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      86: ifne          91
      89: iconst_0
      90: ireturn
      91: aload_0
      92: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      95: ifnonnull     107
      98: aload_2
      99: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     102: ifnull        123
     105: iconst_0
     106: ireturn
     107: aload_0
     108: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     111: aload_2
     112: getfield      #103                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     115: invokevirtual #117                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.equals:(Ljava/lang/Object;)Z
     118: ifne          123
     121: iconst_0
     122: ireturn
     123: aload_0
     124: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
     127: ifnonnull     139
     130: aload_2
     131: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
     134: ifnull        155
     137: iconst_0
     138: ireturn
     139: aload_0
     140: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
     143: aload_2
     144: getfield      #102                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;
     147: invokevirtual #112                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters.equals:(Ljava/lang/Object;)Z
     150: ifne          155
     153: iconst_0
     154: ireturn
     155: iconst_1
     156: ireturn
}
