public abstract class org.bouncycastle.crypto.digests.LongDigest implements org.bouncycastle.crypto.ExtendedDigest,org.bouncycastle.util.Memoable,org.bouncycastle.crypto.digests.EncodableDigest {
  private static final int BYTE_LENGTH;

  private byte[] xBuf;

  private int xBufOff;

  private long byteCount1;

  private long byteCount2;

  protected long H1;

  protected long H2;

  protected long H3;

  protected long H4;

  protected long H5;

  protected long H6;

  protected long H7;

  protected long H8;

  private long[] W;

  private int wOff;

  static final long[] K;

  protected org.bouncycastle.crypto.digests.LongDigest();
    Code:
       0: aload_0
       1: invokespecial #289                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        8
       7: newarray       byte
       9: putfield      #286                // Field xBuf:[B
      12: aload_0
      13: bipush        80
      15: newarray       long
      17: putfield      #288                // Field W:[J
      20: aload_0
      21: iconst_0
      22: putfield      #275                // Field xBufOff:I
      25: aload_0
      26: invokevirtual #293                // Method reset:()V
      29: return

  protected org.bouncycastle.crypto.digests.LongDigest(org.bouncycastle.crypto.digests.LongDigest);
    Code:
       0: aload_0
       1: invokespecial #289                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        8
       7: newarray       byte
       9: putfield      #286                // Field xBuf:[B
      12: aload_0
      13: bipush        80
      15: newarray       long
      17: putfield      #288                // Field W:[J
      20: aload_0
      21: aload_1
      22: invokevirtual #303                // Method copyIn:(Lorg/bouncycastle/crypto/digests/LongDigest;)V
      25: return

  protected void copyIn(org.bouncycastle.crypto.digests.LongDigest);
    Code:
       0: aload_1
       1: getfield      #286                // Field xBuf:[B
       4: iconst_0
       5: aload_0
       6: getfield      #286                // Field xBuf:[B
       9: iconst_0
      10: aload_1
      11: getfield      #286                // Field xBuf:[B
      14: arraylength
      15: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_0
      19: aload_1
      20: getfield      #275                // Field xBufOff:I
      23: putfield      #275                // Field xBufOff:I
      26: aload_0
      27: aload_1
      28: getfield      #284                // Field byteCount1:J
      31: putfield      #284                // Field byteCount1:J
      34: aload_0
      35: aload_1
      36: getfield      #285                // Field byteCount2:J
      39: putfield      #285                // Field byteCount2:J
      42: aload_0
      43: aload_1
      44: getfield      #276                // Field H1:J
      47: putfield      #276                // Field H1:J
      50: aload_0
      51: aload_1
      52: getfield      #277                // Field H2:J
      55: putfield      #277                // Field H2:J
      58: aload_0
      59: aload_1
      60: getfield      #278                // Field H3:J
      63: putfield      #278                // Field H3:J
      66: aload_0
      67: aload_1
      68: getfield      #279                // Field H4:J
      71: putfield      #279                // Field H4:J
      74: aload_0
      75: aload_1
      76: getfield      #280                // Field H5:J
      79: putfield      #280                // Field H5:J
      82: aload_0
      83: aload_1
      84: getfield      #281                // Field H6:J
      87: putfield      #281                // Field H6:J
      90: aload_0
      91: aload_1
      92: getfield      #282                // Field H7:J
      95: putfield      #282                // Field H7:J
      98: aload_0
      99: aload_1
     100: getfield      #283                // Field H8:J
     103: putfield      #283                // Field H8:J
     106: aload_1
     107: getfield      #288                // Field W:[J
     110: iconst_0
     111: aload_0
     112: getfield      #288                // Field W:[J
     115: iconst_0
     116: aload_1
     117: getfield      #288                // Field W:[J
     120: arraylength
     121: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     124: aload_0
     125: aload_1
     126: getfield      #274                // Field wOff:I
     129: putfield      #274                // Field wOff:I
     132: return

  protected void populateState(byte[]);
    Code:
       0: aload_0
       1: getfield      #286                // Field xBuf:[B
       4: iconst_0
       5: aload_1
       6: iconst_0
       7: aload_0
       8: getfield      #275                // Field xBufOff:I
      11: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_0
      15: getfield      #275                // Field xBufOff:I
      18: aload_1
      19: bipush        8
      21: invokestatic  #304                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      24: aload_0
      25: getfield      #284                // Field byteCount1:J
      28: aload_1
      29: bipush        12
      31: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      34: aload_0
      35: getfield      #285                // Field byteCount2:J
      38: aload_1
      39: bipush        20
      41: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      44: aload_0
      45: getfield      #276                // Field H1:J
      48: aload_1
      49: bipush        28
      51: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      54: aload_0
      55: getfield      #277                // Field H2:J
      58: aload_1
      59: bipush        36
      61: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      64: aload_0
      65: getfield      #278                // Field H3:J
      68: aload_1
      69: bipush        44
      71: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      74: aload_0
      75: getfield      #279                // Field H4:J
      78: aload_1
      79: bipush        52
      81: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      84: aload_0
      85: getfield      #280                // Field H5:J
      88: aload_1
      89: bipush        60
      91: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      94: aload_0
      95: getfield      #281                // Field H6:J
      98: aload_1
      99: bipush        68
     101: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     104: aload_0
     105: getfield      #282                // Field H7:J
     108: aload_1
     109: bipush        76
     111: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     114: aload_0
     115: getfield      #283                // Field H8:J
     118: aload_1
     119: bipush        84
     121: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     124: aload_0
     125: getfield      #274                // Field wOff:I
     128: aload_1
     129: bipush        92
     131: invokestatic  #304                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     134: iconst_0
     135: istore_2
     136: iload_2
     137: aload_0
     138: getfield      #274                // Field wOff:I
     141: if_icmpge     167
     144: aload_0
     145: getfield      #288                // Field W:[J
     148: iload_2
     149: laload
     150: aload_1
     151: bipush        96
     153: iload_2
     154: bipush        8
     156: imul
     157: iadd
     158: invokestatic  #305                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     161: iinc          2, 1
     164: goto          136
     167: return

  protected void restoreState(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        8
       4: invokestatic  #306                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
       7: putfield      #275                // Field xBufOff:I
      10: aload_1
      11: iconst_0
      12: aload_0
      13: getfield      #286                // Field xBuf:[B
      16: iconst_0
      17: aload_0
      18: getfield      #275                // Field xBufOff:I
      21: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: aload_1
      26: bipush        12
      28: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      31: putfield      #284                // Field byteCount1:J
      34: aload_0
      35: aload_1
      36: bipush        20
      38: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      41: putfield      #285                // Field byteCount2:J
      44: aload_0
      45: aload_1
      46: bipush        28
      48: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      51: putfield      #276                // Field H1:J
      54: aload_0
      55: aload_1
      56: bipush        36
      58: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      61: putfield      #277                // Field H2:J
      64: aload_0
      65: aload_1
      66: bipush        44
      68: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      71: putfield      #278                // Field H3:J
      74: aload_0
      75: aload_1
      76: bipush        52
      78: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      81: putfield      #279                // Field H4:J
      84: aload_0
      85: aload_1
      86: bipush        60
      88: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      91: putfield      #280                // Field H5:J
      94: aload_0
      95: aload_1
      96: bipush        68
      98: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
     101: putfield      #281                // Field H6:J
     104: aload_0
     105: aload_1
     106: bipush        76
     108: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
     111: putfield      #282                // Field H7:J
     114: aload_0
     115: aload_1
     116: bipush        84
     118: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
     121: putfield      #283                // Field H8:J
     124: aload_0
     125: aload_1
     126: bipush        92
     128: invokestatic  #306                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
     131: putfield      #274                // Field wOff:I
     134: iconst_0
     135: istore_2
     136: iload_2
     137: aload_0
     138: getfield      #274                // Field wOff:I
     141: if_icmpge     167
     144: aload_0
     145: getfield      #288                // Field W:[J
     148: iload_2
     149: aload_1
     150: bipush        96
     152: iload_2
     153: bipush        8
     155: imul
     156: iadd
     157: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
     160: lastore
     161: iinc          2, 1
     164: goto          136
     167: return

  protected int getEncodedStateSize();
    Code:
       0: bipush        96
       2: aload_0
       3: getfield      #274                // Field wOff:I
       6: bipush        8
       8: imul
       9: iadd
      10: ireturn

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #286                // Field xBuf:[B
       4: aload_0
       5: dup
       6: getfield      #275                // Field xBufOff:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #275                // Field xBufOff:I
      15: iload_1
      16: bastore
      17: aload_0
      18: getfield      #275                // Field xBufOff:I
      21: aload_0
      22: getfield      #286                // Field xBuf:[B
      25: arraylength
      26: if_icmpne     43
      29: aload_0
      30: aload_0
      31: getfield      #286                // Field xBuf:[B
      34: iconst_0
      35: invokevirtual #302                // Method processWord:([BI)V
      38: aload_0
      39: iconst_0
      40: putfield      #275                // Field xBufOff:I
      43: aload_0
      44: dup
      45: getfield      #284                // Field byteCount1:J
      48: lconst_1
      49: ladd
      50: putfield      #284                // Field byteCount1:J
      53: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #275                // Field xBufOff:I
       4: ifeq          27
       7: iload_3
       8: ifle          27
      11: aload_0
      12: aload_1
      13: iload_2
      14: baload
      15: invokevirtual #294                // Method update:(B)V
      18: iinc          2, 1
      21: iinc          3, -1
      24: goto          0
      27: iload_3
      28: aload_0
      29: getfield      #286                // Field xBuf:[B
      32: arraylength
      33: if_icmple     76
      36: aload_0
      37: aload_1
      38: iload_2
      39: invokevirtual #302                // Method processWord:([BI)V
      42: iload_2
      43: aload_0
      44: getfield      #286                // Field xBuf:[B
      47: arraylength
      48: iadd
      49: istore_2
      50: iload_3
      51: aload_0
      52: getfield      #286                // Field xBuf:[B
      55: arraylength
      56: isub
      57: istore_3
      58: aload_0
      59: dup
      60: getfield      #284                // Field byteCount1:J
      63: aload_0
      64: getfield      #286                // Field xBuf:[B
      67: arraylength
      68: i2l
      69: ladd
      70: putfield      #284                // Field byteCount1:J
      73: goto          27
      76: iload_3
      77: ifle          96
      80: aload_0
      81: aload_1
      82: iload_2
      83: baload
      84: invokevirtual #294                // Method update:(B)V
      87: iinc          2, 1
      90: iinc          3, -1
      93: goto          76
      96: return

  public void finish();
    Code:
       0: aload_0
       1: invokespecial #291                // Method adjustByteCounts:()V
       4: aload_0
       5: getfield      #284                // Field byteCount1:J
       8: iconst_3
       9: lshl
      10: lstore_1
      11: aload_0
      12: getfield      #285                // Field byteCount2:J
      15: lstore_3
      16: aload_0
      17: bipush        -128
      19: invokevirtual #294                // Method update:(B)V
      22: aload_0
      23: getfield      #275                // Field xBufOff:I
      26: ifeq          37
      29: aload_0
      30: iconst_0
      31: invokevirtual #294                // Method update:(B)V
      34: goto          22
      37: aload_0
      38: lload_1
      39: lload_3
      40: invokevirtual #299                // Method processLength:(JJ)V
      43: aload_0
      44: invokevirtual #292                // Method processBlock:()V
      47: return

  public void reset();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #284                // Field byteCount1:J
       5: aload_0
       6: lconst_0
       7: putfield      #285                // Field byteCount2:J
      10: aload_0
      11: iconst_0
      12: putfield      #275                // Field xBufOff:I
      15: iconst_0
      16: istore_1
      17: iload_1
      18: aload_0
      19: getfield      #286                // Field xBuf:[B
      22: arraylength
      23: if_icmpge     39
      26: aload_0
      27: getfield      #286                // Field xBuf:[B
      30: iload_1
      31: iconst_0
      32: bastore
      33: iinc          1, 1
      36: goto          17
      39: aload_0
      40: iconst_0
      41: putfield      #274                // Field wOff:I
      44: iconst_0
      45: istore_1
      46: iload_1
      47: aload_0
      48: getfield      #288                // Field W:[J
      51: arraylength
      52: if_icmpeq     68
      55: aload_0
      56: getfield      #288                // Field W:[J
      59: iload_1
      60: lconst_0
      61: lastore
      62: iinc          1, 1
      65: goto          46
      68: return

  public int getByteLength();
    Code:
       0: sipush        128
       3: ireturn

  protected void processWord(byte[], int);
    Code:
       0: aload_0
       1: getfield      #288                // Field W:[J
       4: aload_0
       5: getfield      #274                // Field wOff:I
       8: aload_1
       9: iload_2
      10: invokestatic  #307                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      13: lastore
      14: aload_0
      15: dup
      16: getfield      #274                // Field wOff:I
      19: iconst_1
      20: iadd
      21: dup_x1
      22: putfield      #274                // Field wOff:I
      25: bipush        16
      27: if_icmpne     34
      30: aload_0
      31: invokevirtual #292                // Method processBlock:()V
      34: return

  private void adjustByteCounts();
    Code:
       0: aload_0
       1: getfield      #284                // Field byteCount1:J
       4: ldc2_w        #161                // long 2305843009213693951l
       7: lcmp
       8: ifle          39
      11: aload_0
      12: dup
      13: getfield      #285                // Field byteCount2:J
      16: aload_0
      17: getfield      #284                // Field byteCount1:J
      20: bipush        61
      22: lushr
      23: ladd
      24: putfield      #285                // Field byteCount2:J
      27: aload_0
      28: dup
      29: getfield      #284                // Field byteCount1:J
      32: ldc2_w        #161                // long 2305843009213693951l
      35: land
      36: putfield      #284                // Field byteCount1:J
      39: return

  protected void processLength(long, long);
    Code:
       0: aload_0
       1: getfield      #274                // Field wOff:I
       4: bipush        14
       6: if_icmple     13
       9: aload_0
      10: invokevirtual #292                // Method processBlock:()V
      13: aload_0
      14: getfield      #288                // Field W:[J
      17: bipush        14
      19: lload_3
      20: lastore
      21: aload_0
      22: getfield      #288                // Field W:[J
      25: bipush        15
      27: lload_1
      28: lastore
      29: return

  protected void processBlock();
    Code:
       0: aload_0
       1: invokespecial #291                // Method adjustByteCounts:()V
       4: bipush        16
       6: istore_1
       7: iload_1
       8: bipush        79
      10: if_icmpgt     71
      13: aload_0
      14: getfield      #288                // Field W:[J
      17: iload_1
      18: aload_0
      19: aload_0
      20: getfield      #288                // Field W:[J
      23: iload_1
      24: iconst_2
      25: isub
      26: laload
      27: invokespecial #296                // Method Sigma1:(J)J
      30: aload_0
      31: getfield      #288                // Field W:[J
      34: iload_1
      35: bipush        7
      37: isub
      38: laload
      39: ladd
      40: aload_0
      41: aload_0
      42: getfield      #288                // Field W:[J
      45: iload_1
      46: bipush        15
      48: isub
      49: laload
      50: invokespecial #295                // Method Sigma0:(J)J
      53: ladd
      54: aload_0
      55: getfield      #288                // Field W:[J
      58: iload_1
      59: bipush        16
      61: isub
      62: laload
      63: ladd
      64: lastore
      65: iinc          1, 1
      68: goto          7
      71: aload_0
      72: getfield      #276                // Field H1:J
      75: lstore_1
      76: aload_0
      77: getfield      #277                // Field H2:J
      80: lstore_3
      81: aload_0
      82: getfield      #278                // Field H3:J
      85: lstore        5
      87: aload_0
      88: getfield      #279                // Field H4:J
      91: lstore        7
      93: aload_0
      94: getfield      #280                // Field H5:J
      97: lstore        9
      99: aload_0
     100: getfield      #281                // Field H6:J
     103: lstore        11
     105: aload_0
     106: getfield      #282                // Field H7:J
     109: lstore        13
     111: aload_0
     112: getfield      #283                // Field H8:J
     115: lstore        15
     117: iconst_0
     118: istore        17
     120: iconst_0
     121: istore        18
     123: iload         18
     125: bipush        10
     127: if_icmpge     658
     130: lload         15
     132: aload_0
     133: lload         9
     135: invokespecial #298                // Method Sum1:(J)J
     138: aload_0
     139: lload         9
     141: lload         11
     143: lload         13
     145: invokespecial #300                // Method Ch:(JJJ)J
     148: ladd
     149: getstatic     #287                // Field K:[J
     152: iload         17
     154: laload
     155: ladd
     156: aload_0
     157: getfield      #288                // Field W:[J
     160: iload         17
     162: iinc          17, 1
     165: laload
     166: ladd
     167: ladd
     168: lstore        15
     170: lload         7
     172: lload         15
     174: ladd
     175: lstore        7
     177: lload         15
     179: aload_0
     180: lload_1
     181: invokespecial #297                // Method Sum0:(J)J
     184: aload_0
     185: lload_1
     186: lload_3
     187: lload         5
     189: invokespecial #301                // Method Maj:(JJJ)J
     192: ladd
     193: ladd
     194: lstore        15
     196: lload         13
     198: aload_0
     199: lload         7
     201: invokespecial #298                // Method Sum1:(J)J
     204: aload_0
     205: lload         7
     207: lload         9
     209: lload         11
     211: invokespecial #300                // Method Ch:(JJJ)J
     214: ladd
     215: getstatic     #287                // Field K:[J
     218: iload         17
     220: laload
     221: ladd
     222: aload_0
     223: getfield      #288                // Field W:[J
     226: iload         17
     228: iinc          17, 1
     231: laload
     232: ladd
     233: ladd
     234: lstore        13
     236: lload         5
     238: lload         13
     240: ladd
     241: lstore        5
     243: lload         13
     245: aload_0
     246: lload         15
     248: invokespecial #297                // Method Sum0:(J)J
     251: aload_0
     252: lload         15
     254: lload_1
     255: lload_3
     256: invokespecial #301                // Method Maj:(JJJ)J
     259: ladd
     260: ladd
     261: lstore        13
     263: lload         11
     265: aload_0
     266: lload         5
     268: invokespecial #298                // Method Sum1:(J)J
     271: aload_0
     272: lload         5
     274: lload         7
     276: lload         9
     278: invokespecial #300                // Method Ch:(JJJ)J
     281: ladd
     282: getstatic     #287                // Field K:[J
     285: iload         17
     287: laload
     288: ladd
     289: aload_0
     290: getfield      #288                // Field W:[J
     293: iload         17
     295: iinc          17, 1
     298: laload
     299: ladd
     300: ladd
     301: lstore        11
     303: lload_3
     304: lload         11
     306: ladd
     307: lstore_3
     308: lload         11
     310: aload_0
     311: lload         13
     313: invokespecial #297                // Method Sum0:(J)J
     316: aload_0
     317: lload         13
     319: lload         15
     321: lload_1
     322: invokespecial #301                // Method Maj:(JJJ)J
     325: ladd
     326: ladd
     327: lstore        11
     329: lload         9
     331: aload_0
     332: lload_3
     333: invokespecial #298                // Method Sum1:(J)J
     336: aload_0
     337: lload_3
     338: lload         5
     340: lload         7
     342: invokespecial #300                // Method Ch:(JJJ)J
     345: ladd
     346: getstatic     #287                // Field K:[J
     349: iload         17
     351: laload
     352: ladd
     353: aload_0
     354: getfield      #288                // Field W:[J
     357: iload         17
     359: iinc          17, 1
     362: laload
     363: ladd
     364: ladd
     365: lstore        9
     367: lload_1
     368: lload         9
     370: ladd
     371: lstore_1
     372: lload         9
     374: aload_0
     375: lload         11
     377: invokespecial #297                // Method Sum0:(J)J
     380: aload_0
     381: lload         11
     383: lload         13
     385: lload         15
     387: invokespecial #301                // Method Maj:(JJJ)J
     390: ladd
     391: ladd
     392: lstore        9
     394: lload         7
     396: aload_0
     397: lload_1
     398: invokespecial #298                // Method Sum1:(J)J
     401: aload_0
     402: lload_1
     403: lload_3
     404: lload         5
     406: invokespecial #300                // Method Ch:(JJJ)J
     409: ladd
     410: getstatic     #287                // Field K:[J
     413: iload         17
     415: laload
     416: ladd
     417: aload_0
     418: getfield      #288                // Field W:[J
     421: iload         17
     423: iinc          17, 1
     426: laload
     427: ladd
     428: ladd
     429: lstore        7
     431: lload         15
     433: lload         7
     435: ladd
     436: lstore        15
     438: lload         7
     440: aload_0
     441: lload         9
     443: invokespecial #297                // Method Sum0:(J)J
     446: aload_0
     447: lload         9
     449: lload         11
     451: lload         13
     453: invokespecial #301                // Method Maj:(JJJ)J
     456: ladd
     457: ladd
     458: lstore        7
     460: lload         5
     462: aload_0
     463: lload         15
     465: invokespecial #298                // Method Sum1:(J)J
     468: aload_0
     469: lload         15
     471: lload_1
     472: lload_3
     473: invokespecial #300                // Method Ch:(JJJ)J
     476: ladd
     477: getstatic     #287                // Field K:[J
     480: iload         17
     482: laload
     483: ladd
     484: aload_0
     485: getfield      #288                // Field W:[J
     488: iload         17
     490: iinc          17, 1
     493: laload
     494: ladd
     495: ladd
     496: lstore        5
     498: lload         13
     500: lload         5
     502: ladd
     503: lstore        13
     505: lload         5
     507: aload_0
     508: lload         7
     510: invokespecial #297                // Method Sum0:(J)J
     513: aload_0
     514: lload         7
     516: lload         9
     518: lload         11
     520: invokespecial #301                // Method Maj:(JJJ)J
     523: ladd
     524: ladd
     525: lstore        5
     527: lload_3
     528: aload_0
     529: lload         13
     531: invokespecial #298                // Method Sum1:(J)J
     534: aload_0
     535: lload         13
     537: lload         15
     539: lload_1
     540: invokespecial #300                // Method Ch:(JJJ)J
     543: ladd
     544: getstatic     #287                // Field K:[J
     547: iload         17
     549: laload
     550: ladd
     551: aload_0
     552: getfield      #288                // Field W:[J
     555: iload         17
     557: iinc          17, 1
     560: laload
     561: ladd
     562: ladd
     563: lstore_3
     564: lload         11
     566: lload_3
     567: ladd
     568: lstore        11
     570: lload_3
     571: aload_0
     572: lload         5
     574: invokespecial #297                // Method Sum0:(J)J
     577: aload_0
     578: lload         5
     580: lload         7
     582: lload         9
     584: invokespecial #301                // Method Maj:(JJJ)J
     587: ladd
     588: ladd
     589: lstore_3
     590: lload_1
     591: aload_0
     592: lload         11
     594: invokespecial #298                // Method Sum1:(J)J
     597: aload_0
     598: lload         11
     600: lload         13
     602: lload         15
     604: invokespecial #300                // Method Ch:(JJJ)J
     607: ladd
     608: getstatic     #287                // Field K:[J
     611: iload         17
     613: laload
     614: ladd
     615: aload_0
     616: getfield      #288                // Field W:[J
     619: iload         17
     621: iinc          17, 1
     624: laload
     625: ladd
     626: ladd
     627: lstore_1
     628: lload         9
     630: lload_1
     631: ladd
     632: lstore        9
     634: lload_1
     635: aload_0
     636: lload_3
     637: invokespecial #297                // Method Sum0:(J)J
     640: aload_0
     641: lload_3
     642: lload         5
     644: lload         7
     646: invokespecial #301                // Method Maj:(JJJ)J
     649: ladd
     650: ladd
     651: lstore_1
     652: iinc          18, 1
     655: goto          123
     658: aload_0
     659: dup
     660: getfield      #276                // Field H1:J
     663: lload_1
     664: ladd
     665: putfield      #276                // Field H1:J
     668: aload_0
     669: dup
     670: getfield      #277                // Field H2:J
     673: lload_3
     674: ladd
     675: putfield      #277                // Field H2:J
     678: aload_0
     679: dup
     680: getfield      #278                // Field H3:J
     683: lload         5
     685: ladd
     686: putfield      #278                // Field H3:J
     689: aload_0
     690: dup
     691: getfield      #279                // Field H4:J
     694: lload         7
     696: ladd
     697: putfield      #279                // Field H4:J
     700: aload_0
     701: dup
     702: getfield      #280                // Field H5:J
     705: lload         9
     707: ladd
     708: putfield      #280                // Field H5:J
     711: aload_0
     712: dup
     713: getfield      #281                // Field H6:J
     716: lload         11
     718: ladd
     719: putfield      #281                // Field H6:J
     722: aload_0
     723: dup
     724: getfield      #282                // Field H7:J
     727: lload         13
     729: ladd
     730: putfield      #282                // Field H7:J
     733: aload_0
     734: dup
     735: getfield      #283                // Field H8:J
     738: lload         15
     740: ladd
     741: putfield      #283                // Field H8:J
     744: aload_0
     745: iconst_0
     746: putfield      #274                // Field wOff:I
     749: iconst_0
     750: istore        18
     752: iload         18
     754: bipush        16
     756: if_icmpge     773
     759: aload_0
     760: getfield      #288                // Field W:[J
     763: iload         18
     765: lconst_0
     766: lastore
     767: iinc          18, 1
     770: goto          752
     773: return

  private long Ch(long, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: land
       3: lload_1
       4: ldc2_w        #137                // long -1l
       7: lxor
       8: lload         5
      10: land
      11: lxor
      12: lreturn

  private long Maj(long, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: land
       3: lload_1
       4: lload         5
       6: land
       7: lxor
       8: lload_3
       9: lload         5
      11: land
      12: lxor
      13: lreturn

  private long Sum0(long);
    Code:
       0: lload_1
       1: bipush        36
       3: lshl
       4: lload_1
       5: bipush        28
       7: lushr
       8: lor
       9: lload_1
      10: bipush        30
      12: lshl
      13: lload_1
      14: bipush        34
      16: lushr
      17: lor
      18: lxor
      19: lload_1
      20: bipush        25
      22: lshl
      23: lload_1
      24: bipush        39
      26: lushr
      27: lor
      28: lxor
      29: lreturn

  private long Sum1(long);
    Code:
       0: lload_1
       1: bipush        50
       3: lshl
       4: lload_1
       5: bipush        14
       7: lushr
       8: lor
       9: lload_1
      10: bipush        46
      12: lshl
      13: lload_1
      14: bipush        18
      16: lushr
      17: lor
      18: lxor
      19: lload_1
      20: bipush        23
      22: lshl
      23: lload_1
      24: bipush        41
      26: lushr
      27: lor
      28: lxor
      29: lreturn

  private long Sigma0(long);
    Code:
       0: lload_1
       1: bipush        63
       3: lshl
       4: lload_1
       5: iconst_1
       6: lushr
       7: lor
       8: lload_1
       9: bipush        56
      11: lshl
      12: lload_1
      13: bipush        8
      15: lushr
      16: lor
      17: lxor
      18: lload_1
      19: bipush        7
      21: lushr
      22: lxor
      23: lreturn

  private long Sigma1(long);
    Code:
       0: lload_1
       1: bipush        45
       3: lshl
       4: lload_1
       5: bipush        19
       7: lushr
       8: lor
       9: lload_1
      10: iconst_3
      11: lshl
      12: lload_1
      13: bipush        61
      15: lushr
      16: lor
      17: lxor
      18: lload_1
      19: bipush        6
      21: lushr
      22: lxor
      23: lreturn

  static {};
    Code:
       0: bipush        80
       2: newarray       long
       4: dup
       5: iconst_0
       6: ldc2_w        #187                // long 4794697086780616226l
       9: lastore
      10: dup
      11: iconst_1
      12: ldc2_w        #219                // long 8158064640168781261l
      15: lastore
      16: dup
      17: iconst_2
      18: ldc2_w        #97                 // long -5349999486874862801l
      21: lastore
      22: dup
      23: iconst_3
      24: ldc2_w        #127                // long -1606136188198331460l
      27: lastore
      28: dup
      29: iconst_4
      30: ldc2_w        #183                // long 4131703408338449720l
      33: lastore
      34: dup
      35: iconst_5
      36: ldc2_w        #205                // long 6480981068601479193l
      39: lastore
      40: dup
      41: bipush        6
      43: ldc2_w        #77                 // long -7908458776815382629l
      46: lastore
      47: dup
      48: bipush        7
      50: ldc2_w        #93                 // long -6116909921290321640l
      53: lastore
      54: dup
      55: bipush        8
      57: ldc2_w        #123                // long -2880145864133508542l
      60: lastore
      61: dup
      62: bipush        9
      64: ldc2_w        #151                // long 1334009975649890238l
      67: lastore
      68: dup
      69: bipush        10
      71: ldc2_w        #165                // long 2608012711638119052l
      74: lastore
      75: dup
      76: bipush        11
      78: ldc2_w        #201                // long 6128411473006802146l
      81: lastore
      82: dup
      83: bipush        12
      85: ldc2_w        #221                // long 8268148722764581231l
      88: lastore
      89: dup
      90: bipush        13
      92: ldc2_w        #67                 // long -9160688886553864527l
      95: lastore
      96: dup
      97: bipush        14
      99: ldc2_w        #83                 // long -7215885187991268811l
     102: lastore
     103: dup
     104: bipush        15
     106: ldc2_w        #103                // long -4495734319001033068l
     109: lastore
     110: dup
     111: bipush        16
     113: ldc2_w        #125                // long -1973867731355612462l
     116: lastore
     117: dup
     118: bipush        17
     120: ldc2_w        #131                // long -1171420211273849373l
     123: lastore
     124: dup
     125: bipush        18
     127: ldc2_w        #145                // long 1135362057144423861l
     130: lastore
     131: dup
     132: bipush        19
     134: ldc2_w        #163                // long 2597628984639134821l
     137: lastore
     138: dup
     139: bipush        20
     141: ldc2_w        #173                // long 3308224258029322869l
     144: lastore
     145: dup
     146: bipush        21
     148: ldc2_w        #191                // long 5365058923640841347l
     151: lastore
     152: dup
     153: bipush        22
     155: ldc2_w        #209                // long 6679025012923562964l
     158: lastore
     159: dup
     160: bipush        23
     162: ldc2_w        #227                // long 8573033837759648693l
     165: lastore
     166: dup
     167: bipush        24
     169: ldc2_w        #81                 // long -7476448914759557205l
     172: lastore
     173: dup
     174: bipush        25
     176: ldc2_w        #91                 // long -6327057829258317296l
     179: lastore
     180: dup
     181: bipush        26
     183: ldc2_w        #95                 // long -5763719355590565569l
     186: lastore
     187: dup
     188: bipush        27
     190: ldc2_w        #101                // long -4658551843659510044l
     193: lastore
     194: dup
     195: bipush        28
     197: ldc2_w        #109                // long -4116276920077217854l
     200: lastore
     201: dup
     202: bipush        29
     204: ldc2_w        #119                // long -3051310485924567259l
     207: lastore
     208: dup
     209: bipush        30
     211: ldc2_w        #139                // long 489312712824947311l
     214: lastore
     215: dup
     216: bipush        31
     218: ldc2_w        #153                // long 1452737877330783856l
     221: lastore
     222: dup
     223: bipush        32
     225: ldc2_w        #169                // long 2861767655752347644l
     228: lastore
     229: dup
     230: bipush        33
     232: ldc2_w        #175                // long 3322285676063803686l
     235: lastore
     236: dup
     237: bipush        34
     239: ldc2_w        #195                // long 5560940570517711597l
     242: lastore
     243: dup
     244: bipush        35
     246: ldc2_w        #199                // long 5996557281743188959l
     249: lastore
     250: dup
     251: bipush        36
     253: ldc2_w        #213                // long 7280758554555802590l
     256: lastore
     257: dup
     258: bipush        37
     260: ldc2_w        #225                // long 8532644243296465576l
     263: lastore
     264: dup
     265: bipush        38
     267: ldc2_w        #69                 // long -9096487096722542874l
     270: lastore
     271: dup
     272: bipush        39
     274: ldc2_w        #79                 // long -7894198246740708037l
     277: lastore
     278: dup
     279: bipush        40
     281: ldc2_w        #85                 // long -6719396339535248540l
     284: lastore
     285: dup
     286: bipush        41
     288: ldc2_w        #89                 // long -6333637450476146687l
     291: lastore
     292: dup
     293: bipush        42
     295: ldc2_w        #105                // long -4446306890439682159l
     298: lastore
     299: dup
     300: bipush        43
     302: ldc2_w        #111                // long -4076793802049405392l
     305: lastore
     306: dup
     307: bipush        44
     309: ldc2_w        #117                // long -3345356375505022440l
     312: lastore
     313: dup
     314: bipush        45
     316: ldc2_w        #121                // long -2983346525034927856l
     319: lastore
     320: dup
     321: bipush        46
     323: ldc2_w        #133                // long -860691631967231958l
     326: lastore
     327: dup
     328: bipush        47
     330: ldc2_w        #147                // long 1182934255886127544l
     333: lastore
     334: dup
     335: bipush        48
     337: ldc2_w        #155                // long 1847814050463011016l
     340: lastore
     341: dup
     342: bipush        49
     344: ldc2_w        #159                // long 2177327727835720531l
     347: lastore
     348: dup
     349: bipush        50
     351: ldc2_w        #167                // long 2830643537854262169l
     354: lastore
     355: dup
     356: bipush        51
     358: ldc2_w        #179                // long 3796741975233480872l
     361: lastore
     362: dup
     363: bipush        52
     365: ldc2_w        #181                // long 4115178125766777443l
     368: lastore
     369: dup
     370: bipush        53
     372: ldc2_w        #197                // long 5681478168544905931l
     375: lastore
     376: dup
     377: bipush        54
     379: ldc2_w        #207                // long 6601373596472566643l
     382: lastore
     383: dup
     384: bipush        55
     386: ldc2_w        #215                // long 7507060721942968483l
     389: lastore
     390: dup
     391: bipush        56
     393: ldc2_w        #223                // long 8399075790359081724l
     396: lastore
     397: dup
     398: bipush        57
     400: ldc2_w        #229                // long 8693463985226723168l
     403: lastore
     404: dup
     405: bipush        58
     407: ldc2_w        #71                 // long -8878714635349349518l
     410: lastore
     411: dup
     412: bipush        59
     414: ldc2_w        #73                 // long -8302665154208450068l
     417: lastore
     418: dup
     419: bipush        60
     421: ldc2_w        #75                 // long -8016688836872298968l
     424: lastore
     425: dup
     426: bipush        61
     428: ldc2_w        #87                 // long -6606660893046293015l
     431: lastore
     432: dup
     433: bipush        62
     435: ldc2_w        #99                 // long -4685533653050689259l
     438: lastore
     439: dup
     440: bipush        63
     442: ldc2_w        #107                // long -4147400797238176981l
     445: lastore
     446: dup
     447: bipush        64
     449: ldc2_w        #113                // long -3880063495543823972l
     452: lastore
     453: dup
     454: bipush        65
     456: ldc2_w        #115                // long -3348786107499101689l
     459: lastore
     460: dup
     461: bipush        66
     463: ldc2_w        #129                // long -1523767162380948706l
     466: lastore
     467: dup
     468: bipush        67
     470: ldc2_w        #135                // long -757361751448694408l
     473: lastore
     474: dup
     475: bipush        68
     477: ldc2_w        #141                // long 500013540394364858l
     480: lastore
     481: dup
     482: bipush        69
     484: ldc2_w        #143                // long 748580250866718886l
     487: lastore
     488: dup
     489: bipush        70
     491: ldc2_w        #149                // long 1242879168328830382l
     494: lastore
     495: dup
     496: bipush        71
     498: ldc2_w        #157                // long 1977374033974150939l
     501: lastore
     502: dup
     503: bipush        72
     505: ldc2_w        #171                // long 2944078676154940804l
     508: lastore
     509: dup
     510: bipush        73
     512: ldc2_w        #177                // long 3659926193048069267l
     515: lastore
     516: dup
     517: bipush        74
     519: ldc2_w        #185                // long 4368137639120453308l
     522: lastore
     523: dup
     524: bipush        75
     526: ldc2_w        #189                // long 4836135668995329356l
     529: lastore
     530: dup
     531: bipush        76
     533: ldc2_w        #193                // long 5532061633213252278l
     536: lastore
     537: dup
     538: bipush        77
     540: ldc2_w        #203                // long 6448918945643986474l
     543: lastore
     544: dup
     545: bipush        78
     547: ldc2_w        #211                // long 6902733635092675308l
     550: lastore
     551: dup
     552: bipush        79
     554: ldc2_w        #217                // long 7801388544844847127l
     557: lastore
     558: putstatic     #287                // Field K:[J
     561: return
}
