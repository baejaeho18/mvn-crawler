public class org.bouncycastle.crypto.signers.Ed448phSigner implements org.bouncycastle.crypto.Signer {
  private final org.bouncycastle.crypto.Xof prehash;

  private final byte[] context;

  private boolean forSigning;

  private org.bouncycastle.crypto.params.Ed448PrivateKeyParameters privateKey;

  private org.bouncycastle.crypto.params.Ed448PublicKeyParameters publicKey;

  public org.bouncycastle.crypto.signers.Ed448phSigner(byte[]);
    Code:
       0: aload_0
       1: invokespecial #87                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #92                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.createPrehash:()Lorg/bouncycastle/crypto/Xof;
       8: putfield      #83                 // Field prehash:Lorg/bouncycastle/crypto/Xof;
      11: aload_0
      12: aload_1
      13: invokestatic  #94                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      16: putfield      #82                 // Field context:[B
      19: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field forSigning:Z
       5: iload_1
       6: ifeq          31
       9: aload_0
      10: aload_2
      11: checkcast     #49                 // class org/bouncycastle/crypto/params/Ed448PrivateKeyParameters
      14: putfield      #84                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed448PrivateKeyParameters;
      17: aload_0
      18: aload_0
      19: getfield      #84                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed448PrivateKeyParameters;
      22: invokevirtual #88                 // Method org/bouncycastle/crypto/params/Ed448PrivateKeyParameters.generatePublicKey:()Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      25: putfield      #85                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      28: goto          44
      31: aload_0
      32: aconst_null
      33: putfield      #84                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed448PrivateKeyParameters;
      36: aload_0
      37: aload_2
      38: checkcast     #50                 // class org/bouncycastle/crypto/params/Ed448PublicKeyParameters
      41: putfield      #85                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      44: aload_0
      45: invokevirtual #91                 // Method reset:()V
      48: return

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #83                 // Field prehash:Lorg/bouncycastle/crypto/Xof;
       4: iload_1
       5: invokeinterface #96,  2           // InterfaceMethod org/bouncycastle/crypto/Xof.update:(B)V
      10: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #83                 // Field prehash:Lorg/bouncycastle/crypto/Xof;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #98,  4           // InterfaceMethod org/bouncycastle/crypto/Xof.update:([BII)V
      12: return

  public byte[] generateSignature();
    Code:
       0: aload_0
       1: getfield      #81                 // Field forSigning:Z
       4: ifeq          15
       7: aconst_null
       8: aload_0
       9: getfield      #84                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed448PrivateKeyParameters;
      12: if_acmpne     25
      15: new           #45                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #1                  // String Ed448phSigner not initialised for signature generation.
      21: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: bipush        64
      27: newarray       byte
      29: astore_1
      30: bipush        64
      32: aload_0
      33: getfield      #83                 // Field prehash:Lorg/bouncycastle/crypto/Xof;
      36: aload_1
      37: iconst_0
      38: bipush        64
      40: invokeinterface #97,  4           // InterfaceMethod org/bouncycastle/crypto/Xof.doFinal:([BII)I
      45: if_icmpeq     58
      48: new           #45                 // class java/lang/IllegalStateException
      51: dup
      52: ldc           #3                  // String Prehash digest failed
      54: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: bipush        114
      60: newarray       byte
      62: astore_2
      63: aload_0
      64: getfield      #84                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed448PrivateKeyParameters;
      67: iconst_1
      68: aload_0
      69: getfield      #85                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      72: aload_0
      73: getfield      #82                 // Field context:[B
      76: aload_1
      77: iconst_0
      78: bipush        64
      80: aload_2
      81: iconst_0
      82: invokevirtual #89                 // Method org/bouncycastle/crypto/params/Ed448PrivateKeyParameters.sign:(ILorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;[B[BII[BI)V
      85: aload_2
      86: areturn

  public boolean verifySignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #81                 // Field forSigning:Z
       4: ifne          15
       7: aconst_null
       8: aload_0
       9: getfield      #85                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      12: if_acmpne     25
      15: new           #45                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #2                  // String Ed448phSigner not initialised for verification
      21: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: bipush        114
      27: aload_1
      28: arraylength
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getfield      #85                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      38: invokevirtual #90                 // Method org/bouncycastle/crypto/params/Ed448PublicKeyParameters.getEncoded:()[B
      41: astore_2
      42: aload_1
      43: iconst_0
      44: aload_2
      45: iconst_0
      46: aload_0
      47: getfield      #82                 // Field context:[B
      50: aload_0
      51: getfield      #83                 // Field prehash:Lorg/bouncycastle/crypto/Xof;
      54: invokestatic  #93                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.verifyPrehash:([BI[BI[BLorg/bouncycastle/crypto/Xof;)Z
      57: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #83                 // Field prehash:Lorg/bouncycastle/crypto/Xof;
       4: invokeinterface #95,  1           // InterfaceMethod org/bouncycastle/crypto/Xof.reset:()V
       9: return
}
