public class org.bouncycastle.crypto.modes.OCBBlockCipher implements org.bouncycastle.crypto.modes.AEADBlockCipher {
  private static final int BLOCK_SIZE;

  private org.bouncycastle.crypto.BlockCipher hashCipher;

  private org.bouncycastle.crypto.BlockCipher mainCipher;

  private boolean forEncryption;

  private int macSize;

  private byte[] initialAssociatedText;

  private java.util.Vector L;

  private byte[] L_Asterisk;

  private byte[] L_Dollar;

  private byte[] KtopInput;

  private byte[] Stretch;

  private byte[] OffsetMAIN_0;

  private byte[] hashBlock;

  private byte[] mainBlock;

  private int hashBlockPos;

  private int mainBlockPos;

  private long hashBlockCount;

  private long mainBlockCount;

  private byte[] OffsetHASH;

  private byte[] Sum;

  private byte[] OffsetMAIN;

  private byte[] Checksum;

  private byte[] macBlock;

  public org.bouncycastle.crypto.modes.OCBBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: invokespecial #257                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #241                // Field KtopInput:[B
       9: aload_0
      10: bipush        24
      12: newarray       byte
      14: putfield      #247                // Field Stretch:[B
      17: aload_0
      18: bipush        16
      20: newarray       byte
      22: putfield      #246                // Field OffsetMAIN_0:[B
      25: aload_0
      26: bipush        16
      28: newarray       byte
      30: putfield      #245                // Field OffsetMAIN:[B
      33: aload_1
      34: ifnonnull     47
      37: new           #140                // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #2                  // String \'hashCipher\' cannot be null
      43: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_1
      48: invokeinterface #295,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      53: bipush        16
      55: if_icmpeq     68
      58: new           #140                // class java/lang/IllegalArgumentException
      61: dup
      62: ldc           #3                  // String \'hashCipher\' must have a block size of 16
      64: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_2
      69: ifnonnull     82
      72: new           #140                // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #4                  // String \'mainCipher\' cannot be null
      78: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_2
      83: invokeinterface #295,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      88: bipush        16
      90: if_icmpeq     103
      93: new           #140                // class java/lang/IllegalArgumentException
      96: dup
      97: ldc           #5                  // String \'mainCipher\' must have a block size of 16
      99: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_1
     104: invokeinterface #298,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
     109: aload_2
     110: invokeinterface #298,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
     115: invokevirtual #258                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     118: ifne          131
     121: new           #140                // class java/lang/IllegalArgumentException
     124: dup
     125: ldc           #1                  // String \'hashCipher\' and \'mainCipher\' must be the same algorithm
     127: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     130: athrow
     131: aload_0
     132: aload_1
     133: putfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
     136: aload_0
     137: aload_2
     138: putfield      #255                // Field mainCipher:Lorg/bouncycastle/crypto/BlockCipher;
     141: return

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #255                // Field mainCipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: areturn

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #144                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #259                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #255                // Field mainCipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #298,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #262                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #6                  // String /OCB
      21: invokevirtual #262                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #260                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #239                // Field forEncryption:Z
       4: istore_3
       5: aload_0
       6: iload_1
       7: putfield      #239                // Field forEncryption:Z
      10: aload_0
      11: aconst_null
      12: putfield      #251                // Field macBlock:[B
      15: aload_2
      16: instanceof    #153                // class org/bouncycastle/crypto/params/AEADParameters
      19: ifeq          121
      22: aload_2
      23: checkcast     #153                // class org/bouncycastle/crypto/params/AEADParameters
      26: astore        6
      28: aload         6
      30: invokevirtual #287                // Method org/bouncycastle/crypto/params/AEADParameters.getNonce:()[B
      33: astore        5
      35: aload_0
      36: aload         6
      38: invokevirtual #286                // Method org/bouncycastle/crypto/params/AEADParameters.getAssociatedText:()[B
      41: putfield      #250                // Field initialAssociatedText:[B
      44: aload         6
      46: invokevirtual #285                // Method org/bouncycastle/crypto/params/AEADParameters.getMacSize:()I
      49: istore        7
      51: iload         7
      53: bipush        64
      55: if_icmplt     74
      58: iload         7
      60: sipush        128
      63: if_icmpgt     74
      66: iload         7
      68: bipush        8
      70: irem
      71: ifeq          102
      74: new           #140                // class java/lang/IllegalArgumentException
      77: dup
      78: new           #144                // class java/lang/StringBuilder
      81: dup
      82: invokespecial #259                // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #9                  // String Invalid value for MAC size:
      87: invokevirtual #262                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: iload         7
      92: invokevirtual #261                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: invokevirtual #260                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_0
     103: iload         7
     105: bipush        8
     107: idiv
     108: putfield      #235                // Field macSize:I
     111: aload         6
     113: invokevirtual #288                // Method org/bouncycastle/crypto/params/AEADParameters.getKey:()Lorg/bouncycastle/crypto/params/KeyParameter;
     116: astore        4
     118: goto          175
     121: aload_2
     122: instanceof    #155                // class org/bouncycastle/crypto/params/ParametersWithIV
     125: ifeq          165
     128: aload_2
     129: checkcast     #155                // class org/bouncycastle/crypto/params/ParametersWithIV
     132: astore        6
     134: aload         6
     136: invokevirtual #289                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
     139: astore        5
     141: aload_0
     142: aconst_null
     143: putfield      #250                // Field initialAssociatedText:[B
     146: aload_0
     147: bipush        16
     149: putfield      #235                // Field macSize:I
     152: aload         6
     154: invokevirtual #290                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     157: checkcast     #154                // class org/bouncycastle/crypto/params/KeyParameter
     160: astore        4
     162: goto          175
     165: new           #140                // class java/lang/IllegalArgumentException
     168: dup
     169: ldc           #13                 // String invalid parameters passed to OCB
     171: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: aload_0
     176: bipush        16
     178: newarray       byte
     180: putfield      #249                // Field hashBlock:[B
     183: aload_0
     184: iload_1
     185: ifeq          193
     188: bipush        16
     190: goto          200
     193: bipush        16
     195: aload_0
     196: getfield      #235                // Field macSize:I
     199: iadd
     200: newarray       byte
     202: putfield      #252                // Field mainBlock:[B
     205: aload         5
     207: ifnonnull     215
     210: iconst_0
     211: newarray       byte
     213: astore        5
     215: aload         5
     217: arraylength
     218: bipush        15
     220: if_icmple     233
     223: new           #140                // class java/lang/IllegalArgumentException
     226: dup
     227: ldc           #7                  // String IV must be no more than 15 bytes
     229: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     232: athrow
     233: aload         4
     235: ifnull        270
     238: aload_0
     239: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
     242: iconst_1
     243: aload         4
     245: invokeinterface #299,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     250: aload_0
     251: getfield      #255                // Field mainCipher:Lorg/bouncycastle/crypto/BlockCipher;
     254: iload_1
     255: aload         4
     257: invokeinterface #299,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     262: aload_0
     263: aconst_null
     264: putfield      #241                // Field KtopInput:[B
     267: goto          285
     270: iload_3
     271: iload_1
     272: if_icmpeq     285
     275: new           #140                // class java/lang/IllegalArgumentException
     278: dup
     279: ldc           #11                 // String cannot change encrypting state without providing key.
     281: invokespecial #256                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     284: athrow
     285: aload_0
     286: bipush        16
     288: newarray       byte
     290: putfield      #242                // Field L_Asterisk:[B
     293: aload_0
     294: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
     297: aload_0
     298: getfield      #242                // Field L_Asterisk:[B
     301: iconst_0
     302: aload_0
     303: getfield      #242                // Field L_Asterisk:[B
     306: iconst_0
     307: invokeinterface #297,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     312: pop
     313: aload_0
     314: aload_0
     315: getfield      #242                // Field L_Asterisk:[B
     318: invokestatic  #279                // Method OCB_double:([B)[B
     321: putfield      #243                // Field L_Dollar:[B
     324: aload_0
     325: new           #146                // class java/util/Vector
     328: dup
     329: invokespecial #265                // Method java/util/Vector."<init>":()V
     332: putfield      #253                // Field L:Ljava/util/Vector;
     335: aload_0
     336: getfield      #253                // Field L:Ljava/util/Vector;
     339: aload_0
     340: getfield      #243                // Field L_Dollar:[B
     343: invokestatic  #279                // Method OCB_double:([B)[B
     346: invokevirtual #268                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     349: aload_0
     350: aload         5
     352: invokevirtual #276                // Method processNonce:([B)I
     355: istore        6
     357: iload         6
     359: bipush        8
     361: irem
     362: istore        7
     364: iload         6
     366: bipush        8
     368: idiv
     369: istore        8
     371: iload         7
     373: ifne          395
     376: aload_0
     377: getfield      #247                // Field Stretch:[B
     380: iload         8
     382: aload_0
     383: getfield      #246                // Field OffsetMAIN_0:[B
     386: iconst_0
     387: bipush        16
     389: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     392: goto          462
     395: iconst_0
     396: istore        9
     398: iload         9
     400: bipush        16
     402: if_icmpge     462
     405: aload_0
     406: getfield      #247                // Field Stretch:[B
     409: iload         8
     411: baload
     412: sipush        255
     415: iand
     416: istore        10
     418: aload_0
     419: getfield      #247                // Field Stretch:[B
     422: iinc          8, 1
     425: iload         8
     427: baload
     428: sipush        255
     431: iand
     432: istore        11
     434: aload_0
     435: getfield      #246                // Field OffsetMAIN_0:[B
     438: iload         9
     440: iload         10
     442: iload         7
     444: ishl
     445: iload         11
     447: bipush        8
     449: iload         7
     451: isub
     452: iushr
     453: ior
     454: i2b
     455: bastore
     456: iinc          9, 1
     459: goto          398
     462: aload_0
     463: iconst_0
     464: putfield      #234                // Field hashBlockPos:I
     467: aload_0
     468: iconst_0
     469: putfield      #236                // Field mainBlockPos:I
     472: aload_0
     473: lconst_0
     474: putfield      #237                // Field hashBlockCount:J
     477: aload_0
     478: lconst_0
     479: putfield      #238                // Field mainBlockCount:J
     482: aload_0
     483: bipush        16
     485: newarray       byte
     487: putfield      #244                // Field OffsetHASH:[B
     490: aload_0
     491: bipush        16
     493: newarray       byte
     495: putfield      #248                // Field Sum:[B
     498: aload_0
     499: getfield      #246                // Field OffsetMAIN_0:[B
     502: iconst_0
     503: aload_0
     504: getfield      #245                // Field OffsetMAIN:[B
     507: iconst_0
     508: bipush        16
     510: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     513: aload_0
     514: bipush        16
     516: newarray       byte
     518: putfield      #240                // Field Checksum:[B
     521: aload_0
     522: getfield      #250                // Field initialAssociatedText:[B
     525: ifnull        542
     528: aload_0
     529: aload_0
     530: getfield      #250                // Field initialAssociatedText:[B
     533: iconst_0
     534: aload_0
     535: getfield      #250                // Field initialAssociatedText:[B
     538: arraylength
     539: invokevirtual #282                // Method processAADBytes:([BII)V
     542: return

  protected int processNonce(byte[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_2
       5: aload_1
       6: iconst_0
       7: aload_2
       8: aload_2
       9: arraylength
      10: aload_1
      11: arraylength
      12: isub
      13: aload_1
      14: arraylength
      15: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_2
      19: iconst_0
      20: aload_0
      21: getfield      #235                // Field macSize:I
      24: iconst_4
      25: ishl
      26: i2b
      27: bastore
      28: aload_2
      29: bipush        15
      31: aload_1
      32: arraylength
      33: isub
      34: dup2
      35: baload
      36: iconst_1
      37: ior
      38: i2b
      39: bastore
      40: aload_2
      41: bipush        15
      43: baload
      44: bipush        63
      46: iand
      47: istore_3
      48: aload_2
      49: bipush        15
      51: dup2
      52: baload
      53: sipush        192
      56: iand
      57: i2b
      58: bastore
      59: aload_0
      60: getfield      #241                // Field KtopInput:[B
      63: ifnull        77
      66: aload_2
      67: aload_0
      68: getfield      #241                // Field KtopInput:[B
      71: invokestatic  #293                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      74: ifne          159
      77: bipush        16
      79: newarray       byte
      81: astore        4
      83: aload_0
      84: aload_2
      85: putfield      #241                // Field KtopInput:[B
      88: aload_0
      89: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
      92: aload_0
      93: getfield      #241                // Field KtopInput:[B
      96: iconst_0
      97: aload         4
      99: iconst_0
     100: invokeinterface #297,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     105: pop
     106: aload         4
     108: iconst_0
     109: aload_0
     110: getfield      #247                // Field Stretch:[B
     113: iconst_0
     114: bipush        16
     116: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     119: iconst_0
     120: istore        5
     122: iload         5
     124: bipush        8
     126: if_icmpge     159
     129: aload_0
     130: getfield      #247                // Field Stretch:[B
     133: bipush        16
     135: iload         5
     137: iadd
     138: aload         4
     140: iload         5
     142: baload
     143: aload         4
     145: iload         5
     147: iconst_1
     148: iadd
     149: baload
     150: ixor
     151: i2b
     152: bastore
     153: iinc          5, 1
     156: goto          122
     159: iload_3
     160: ireturn

  public byte[] getMac();
    Code:
       0: aload_0
       1: getfield      #251                // Field macBlock:[B
       4: ifnonnull     14
       7: aload_0
       8: getfield      #235                // Field macSize:I
      11: newarray       byte
      13: areturn
      14: aload_0
      15: getfield      #251                // Field macBlock:[B
      18: invokestatic  #291                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      21: areturn

  public int getOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #236                // Field mainBlockPos:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #239                // Field forEncryption:Z
      11: ifeq          21
      14: iload_2
      15: aload_0
      16: getfield      #235                // Field macSize:I
      19: iadd
      20: ireturn
      21: iload_2
      22: aload_0
      23: getfield      #235                // Field macSize:I
      26: if_icmpge     33
      29: iconst_0
      30: goto          39
      33: iload_2
      34: aload_0
      35: getfield      #235                // Field macSize:I
      38: isub
      39: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #236                // Field mainBlockPos:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #239                // Field forEncryption:Z
      11: ifne          31
      14: iload_2
      15: aload_0
      16: getfield      #235                // Field macSize:I
      19: if_icmpge     24
      22: iconst_0
      23: ireturn
      24: iload_2
      25: aload_0
      26: getfield      #235                // Field macSize:I
      29: isub
      30: istore_2
      31: iload_2
      32: iload_2
      33: bipush        16
      35: irem
      36: isub
      37: ireturn

  public void processAADByte(byte);
    Code:
       0: aload_0
       1: getfield      #249                // Field hashBlock:[B
       4: aload_0
       5: getfield      #234                // Field hashBlockPos:I
       8: iload_1
       9: bastore
      10: aload_0
      11: dup
      12: getfield      #234                // Field hashBlockPos:I
      15: iconst_1
      16: iadd
      17: dup_x1
      18: putfield      #234                // Field hashBlockPos:I
      21: aload_0
      22: getfield      #249                // Field hashBlock:[B
      25: arraylength
      26: if_icmpne     33
      29: aload_0
      30: invokevirtual #272                // Method processHashBlock:()V
      33: return

  public void processAADBytes(byte[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     53
       9: aload_0
      10: getfield      #249                // Field hashBlock:[B
      13: aload_0
      14: getfield      #234                // Field hashBlockPos:I
      17: aload_1
      18: iload_2
      19: iload         4
      21: iadd
      22: baload
      23: bastore
      24: aload_0
      25: dup
      26: getfield      #234                // Field hashBlockPos:I
      29: iconst_1
      30: iadd
      31: dup_x1
      32: putfield      #234                // Field hashBlockPos:I
      35: aload_0
      36: getfield      #249                // Field hashBlock:[B
      39: arraylength
      40: if_icmpne     47
      43: aload_0
      44: invokevirtual #272                // Method processHashBlock:()V
      47: iinc          4, 1
      50: goto          3
      53: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #252                // Field mainBlock:[B
       4: aload_0
       5: getfield      #236                // Field mainBlockPos:I
       8: iload_1
       9: bastore
      10: aload_0
      11: dup
      12: getfield      #236                // Field mainBlockPos:I
      15: iconst_1
      16: iadd
      17: dup_x1
      18: putfield      #236                // Field mainBlockPos:I
      21: aload_0
      22: getfield      #252                // Field mainBlock:[B
      25: arraylength
      26: if_icmpne     38
      29: aload_0
      30: aload_2
      31: iload_3
      32: invokevirtual #281                // Method processMainBlock:([BI)V
      35: bipush        16
      37: ireturn
      38: iconst_0
      39: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: iload_3
       4: iadd
       5: if_icmpge     18
       8: new           #148                // class org/bouncycastle/crypto/DataLengthException
      11: dup
      12: ldc           #8                  // String Input buffer too short
      14: invokespecial #269                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iconst_0
      19: istore        6
      21: iconst_0
      22: istore        7
      24: iload         7
      26: iload_3
      27: if_icmpge     84
      30: aload_0
      31: getfield      #252                // Field mainBlock:[B
      34: aload_0
      35: getfield      #236                // Field mainBlockPos:I
      38: aload_1
      39: iload_2
      40: iload         7
      42: iadd
      43: baload
      44: bastore
      45: aload_0
      46: dup
      47: getfield      #236                // Field mainBlockPos:I
      50: iconst_1
      51: iadd
      52: dup_x1
      53: putfield      #236                // Field mainBlockPos:I
      56: aload_0
      57: getfield      #252                // Field mainBlock:[B
      60: arraylength
      61: if_icmpne     78
      64: aload_0
      65: aload         4
      67: iload         5
      69: iload         6
      71: iadd
      72: invokevirtual #281                // Method processMainBlock:([BI)V
      75: iinc          6, 16
      78: iinc          7, 1
      81: goto          24
      84: iload         6
      86: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #239                // Field forEncryption:Z
       6: ifne          67
       9: aload_0
      10: getfield      #236                // Field mainBlockPos:I
      13: aload_0
      14: getfield      #235                // Field macSize:I
      17: if_icmpge     30
      20: new           #149                // class org/bouncycastle/crypto/InvalidCipherTextException
      23: dup
      24: ldc           #12                 // String data too short
      26: invokespecial #270                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: dup
      32: getfield      #236                // Field mainBlockPos:I
      35: aload_0
      36: getfield      #235                // Field macSize:I
      39: isub
      40: putfield      #236                // Field mainBlockPos:I
      43: aload_0
      44: getfield      #235                // Field macSize:I
      47: newarray       byte
      49: astore_3
      50: aload_0
      51: getfield      #252                // Field mainBlock:[B
      54: aload_0
      55: getfield      #236                // Field mainBlockPos:I
      58: aload_3
      59: iconst_0
      60: aload_0
      61: getfield      #235                // Field macSize:I
      64: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      67: aload_0
      68: getfield      #234                // Field hashBlockPos:I
      71: ifle          93
      74: aload_0
      75: getfield      #249                // Field hashBlock:[B
      78: aload_0
      79: getfield      #234                // Field hashBlockPos:I
      82: invokestatic  #280                // Method OCB_extend:([BI)V
      85: aload_0
      86: aload_0
      87: getfield      #242                // Field L_Asterisk:[B
      90: invokevirtual #278                // Method updateHASH:([B)V
      93: aload_0
      94: getfield      #236                // Field mainBlockPos:I
      97: ifle          237
     100: aload_0
     101: getfield      #239                // Field forEncryption:Z
     104: ifeq          129
     107: aload_0
     108: getfield      #252                // Field mainBlock:[B
     111: aload_0
     112: getfield      #236                // Field mainBlockPos:I
     115: invokestatic  #280                // Method OCB_extend:([BI)V
     118: aload_0
     119: getfield      #240                // Field Checksum:[B
     122: aload_0
     123: getfield      #252                // Field mainBlock:[B
     126: invokestatic  #284                // Method xor:([B[B)V
     129: aload_0
     130: getfield      #245                // Field OffsetMAIN:[B
     133: aload_0
     134: getfield      #242                // Field L_Asterisk:[B
     137: invokestatic  #284                // Method xor:([B[B)V
     140: bipush        16
     142: newarray       byte
     144: astore        4
     146: aload_0
     147: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
     150: aload_0
     151: getfield      #245                // Field OffsetMAIN:[B
     154: iconst_0
     155: aload         4
     157: iconst_0
     158: invokeinterface #297,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     163: pop
     164: aload_0
     165: getfield      #252                // Field mainBlock:[B
     168: aload         4
     170: invokestatic  #284                // Method xor:([B[B)V
     173: aload_1
     174: arraylength
     175: iload_2
     176: aload_0
     177: getfield      #236                // Field mainBlockPos:I
     180: iadd
     181: if_icmpge     194
     184: new           #150                // class org/bouncycastle/crypto/OutputLengthException
     187: dup
     188: ldc           #10                 // String Output buffer too short
     190: invokespecial #271                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
     193: athrow
     194: aload_0
     195: getfield      #252                // Field mainBlock:[B
     198: iconst_0
     199: aload_1
     200: iload_2
     201: aload_0
     202: getfield      #236                // Field mainBlockPos:I
     205: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     208: aload_0
     209: getfield      #239                // Field forEncryption:Z
     212: ifne          237
     215: aload_0
     216: getfield      #252                // Field mainBlock:[B
     219: aload_0
     220: getfield      #236                // Field mainBlockPos:I
     223: invokestatic  #280                // Method OCB_extend:([BI)V
     226: aload_0
     227: getfield      #240                // Field Checksum:[B
     230: aload_0
     231: getfield      #252                // Field mainBlock:[B
     234: invokestatic  #284                // Method xor:([B[B)V
     237: aload_0
     238: getfield      #240                // Field Checksum:[B
     241: aload_0
     242: getfield      #245                // Field OffsetMAIN:[B
     245: invokestatic  #284                // Method xor:([B[B)V
     248: aload_0
     249: getfield      #240                // Field Checksum:[B
     252: aload_0
     253: getfield      #243                // Field L_Dollar:[B
     256: invokestatic  #284                // Method xor:([B[B)V
     259: aload_0
     260: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
     263: aload_0
     264: getfield      #240                // Field Checksum:[B
     267: iconst_0
     268: aload_0
     269: getfield      #240                // Field Checksum:[B
     272: iconst_0
     273: invokeinterface #297,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     278: pop
     279: aload_0
     280: getfield      #240                // Field Checksum:[B
     283: aload_0
     284: getfield      #248                // Field Sum:[B
     287: invokestatic  #284                // Method xor:([B[B)V
     290: aload_0
     291: aload_0
     292: getfield      #235                // Field macSize:I
     295: newarray       byte
     297: putfield      #251                // Field macBlock:[B
     300: aload_0
     301: getfield      #240                // Field Checksum:[B
     304: iconst_0
     305: aload_0
     306: getfield      #251                // Field macBlock:[B
     309: iconst_0
     310: aload_0
     311: getfield      #235                // Field macSize:I
     314: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     317: aload_0
     318: getfield      #236                // Field mainBlockPos:I
     321: istore        4
     323: aload_0
     324: getfield      #239                // Field forEncryption:Z
     327: ifeq          383
     330: aload_1
     331: arraylength
     332: iload_2
     333: iload         4
     335: iadd
     336: aload_0
     337: getfield      #235                // Field macSize:I
     340: iadd
     341: if_icmpge     354
     344: new           #150                // class org/bouncycastle/crypto/OutputLengthException
     347: dup
     348: ldc           #10                 // String Output buffer too short
     350: invokespecial #271                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
     353: athrow
     354: aload_0
     355: getfield      #251                // Field macBlock:[B
     358: iconst_0
     359: aload_1
     360: iload_2
     361: iload         4
     363: iadd
     364: aload_0
     365: getfield      #235                // Field macSize:I
     368: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     371: iload         4
     373: aload_0
     374: getfield      #235                // Field macSize:I
     377: iadd
     378: istore        4
     380: goto          404
     383: aload_0
     384: getfield      #251                // Field macBlock:[B
     387: aload_3
     388: invokestatic  #294                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
     391: ifne          404
     394: new           #149                // class org/bouncycastle/crypto/InvalidCipherTextException
     397: dup
     398: ldc           #14                 // String mac check in OCB failed
     400: invokespecial #270                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     403: athrow
     404: aload_0
     405: iconst_0
     406: invokevirtual #275                // Method reset:(Z)V
     409: iload         4
     411: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #275                // Method reset:(Z)V
       5: return

  protected void clear(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: iconst_0
       6: invokestatic  #292                // Method org/bouncycastle/util/Arrays.fill:([BB)V
       9: return

  protected byte[] getLSub(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #253                // Field L:Ljava/util/Vector;
       5: invokevirtual #264                // Method java/util/Vector.size:()I
       8: if_icmplt     37
      11: aload_0
      12: getfield      #253                // Field L:Ljava/util/Vector;
      15: aload_0
      16: getfield      #253                // Field L:Ljava/util/Vector;
      19: invokevirtual #266                // Method java/util/Vector.lastElement:()Ljava/lang/Object;
      22: checkcast     #139                // class "[B"
      25: checkcast     #139                // class "[B"
      28: invokestatic  #279                // Method OCB_double:([B)[B
      31: invokevirtual #268                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      34: goto          0
      37: aload_0
      38: getfield      #253                // Field L:Ljava/util/Vector;
      41: iload_1
      42: invokevirtual #267                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      45: checkcast     #139                // class "[B"
      48: checkcast     #139                // class "[B"
      51: areturn

  protected void processHashBlock();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: dup
       4: getfield      #237                // Field hashBlockCount:J
       7: lconst_1
       8: ladd
       9: dup2_x1
      10: putfield      #237                // Field hashBlockCount:J
      13: invokestatic  #274                // Method OCB_ntz:(J)I
      16: invokevirtual #273                // Method getLSub:(I)[B
      19: invokevirtual #278                // Method updateHASH:([B)V
      22: aload_0
      23: iconst_0
      24: putfield      #234                // Field hashBlockPos:I
      27: return

  protected void processMainBlock(byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: bipush        16
       5: iadd
       6: if_icmpge     19
       9: new           #150                // class org/bouncycastle/crypto/OutputLengthException
      12: dup
      13: ldc           #10                 // String Output buffer too short
      15: invokespecial #271                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #239                // Field forEncryption:Z
      23: ifeq          42
      26: aload_0
      27: getfield      #240                // Field Checksum:[B
      30: aload_0
      31: getfield      #252                // Field mainBlock:[B
      34: invokestatic  #284                // Method xor:([B[B)V
      37: aload_0
      38: iconst_0
      39: putfield      #236                // Field mainBlockPos:I
      42: aload_0
      43: getfield      #245                // Field OffsetMAIN:[B
      46: aload_0
      47: aload_0
      48: dup
      49: getfield      #238                // Field mainBlockCount:J
      52: lconst_1
      53: ladd
      54: dup2_x1
      55: putfield      #238                // Field mainBlockCount:J
      58: invokestatic  #274                // Method OCB_ntz:(J)I
      61: invokevirtual #273                // Method getLSub:(I)[B
      64: invokestatic  #284                // Method xor:([B[B)V
      67: aload_0
      68: getfield      #252                // Field mainBlock:[B
      71: aload_0
      72: getfield      #245                // Field OffsetMAIN:[B
      75: invokestatic  #284                // Method xor:([B[B)V
      78: aload_0
      79: getfield      #255                // Field mainCipher:Lorg/bouncycastle/crypto/BlockCipher;
      82: aload_0
      83: getfield      #252                // Field mainBlock:[B
      86: iconst_0
      87: aload_0
      88: getfield      #252                // Field mainBlock:[B
      91: iconst_0
      92: invokeinterface #297,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      97: pop
      98: aload_0
      99: getfield      #252                // Field mainBlock:[B
     102: aload_0
     103: getfield      #245                // Field OffsetMAIN:[B
     106: invokestatic  #284                // Method xor:([B[B)V
     109: aload_0
     110: getfield      #252                // Field mainBlock:[B
     113: iconst_0
     114: aload_1
     115: iload_2
     116: bipush        16
     118: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     121: aload_0
     122: getfield      #239                // Field forEncryption:Z
     125: ifne          165
     128: aload_0
     129: getfield      #240                // Field Checksum:[B
     132: aload_0
     133: getfield      #252                // Field mainBlock:[B
     136: invokestatic  #284                // Method xor:([B[B)V
     139: aload_0
     140: getfield      #252                // Field mainBlock:[B
     143: bipush        16
     145: aload_0
     146: getfield      #252                // Field mainBlock:[B
     149: iconst_0
     150: aload_0
     151: getfield      #235                // Field macSize:I
     154: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     157: aload_0
     158: aload_0
     159: getfield      #235                // Field macSize:I
     162: putfield      #236                // Field mainBlockPos:I
     165: return

  protected void reset(boolean);
    Code:
       0: aload_0
       1: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #296,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
       9: aload_0
      10: getfield      #255                // Field mainCipher:Lorg/bouncycastle/crypto/BlockCipher;
      13: invokeinterface #296,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      18: aload_0
      19: aload_0
      20: getfield      #249                // Field hashBlock:[B
      23: invokevirtual #277                // Method clear:([B)V
      26: aload_0
      27: aload_0
      28: getfield      #252                // Field mainBlock:[B
      31: invokevirtual #277                // Method clear:([B)V
      34: aload_0
      35: iconst_0
      36: putfield      #234                // Field hashBlockPos:I
      39: aload_0
      40: iconst_0
      41: putfield      #236                // Field mainBlockPos:I
      44: aload_0
      45: lconst_0
      46: putfield      #237                // Field hashBlockCount:J
      49: aload_0
      50: lconst_0
      51: putfield      #238                // Field mainBlockCount:J
      54: aload_0
      55: aload_0
      56: getfield      #244                // Field OffsetHASH:[B
      59: invokevirtual #277                // Method clear:([B)V
      62: aload_0
      63: aload_0
      64: getfield      #248                // Field Sum:[B
      67: invokevirtual #277                // Method clear:([B)V
      70: aload_0
      71: getfield      #246                // Field OffsetMAIN_0:[B
      74: iconst_0
      75: aload_0
      76: getfield      #245                // Field OffsetMAIN:[B
      79: iconst_0
      80: bipush        16
      82: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      85: aload_0
      86: aload_0
      87: getfield      #240                // Field Checksum:[B
      90: invokevirtual #277                // Method clear:([B)V
      93: iload_1
      94: ifeq          102
      97: aload_0
      98: aconst_null
      99: putfield      #251                // Field macBlock:[B
     102: aload_0
     103: getfield      #250                // Field initialAssociatedText:[B
     106: ifnull        123
     109: aload_0
     110: aload_0
     111: getfield      #250                // Field initialAssociatedText:[B
     114: iconst_0
     115: aload_0
     116: getfield      #250                // Field initialAssociatedText:[B
     119: arraylength
     120: invokevirtual #282                // Method processAADBytes:([BII)V
     123: return

  protected void updateHASH(byte[]);
    Code:
       0: aload_0
       1: getfield      #244                // Field OffsetHASH:[B
       4: aload_1
       5: invokestatic  #284                // Method xor:([B[B)V
       8: aload_0
       9: getfield      #249                // Field hashBlock:[B
      12: aload_0
      13: getfield      #244                // Field OffsetHASH:[B
      16: invokestatic  #284                // Method xor:([B[B)V
      19: aload_0
      20: getfield      #254                // Field hashCipher:Lorg/bouncycastle/crypto/BlockCipher;
      23: aload_0
      24: getfield      #249                // Field hashBlock:[B
      27: iconst_0
      28: aload_0
      29: getfield      #249                // Field hashBlock:[B
      32: iconst_0
      33: invokeinterface #297,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      38: pop
      39: aload_0
      40: getfield      #248                // Field Sum:[B
      43: aload_0
      44: getfield      #249                // Field hashBlock:[B
      47: invokestatic  #284                // Method xor:([B[B)V
      50: return

  protected static byte[] OCB_double(byte[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokestatic  #283                // Method shiftLeft:([B[B)I
      10: istore_2
      11: aload_1
      12: bipush        15
      14: dup2
      15: baload
      16: sipush        135
      19: iconst_1
      20: iload_2
      21: isub
      22: iconst_3
      23: ishl
      24: iushr
      25: ixor
      26: i2b
      27: bastore
      28: aload_1
      29: areturn

  protected static void OCB_extend(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        -128
       4: bastore
       5: iinc          1, 1
       8: iload_1
       9: bipush        16
      11: if_icmpge     21
      14: aload_0
      15: iload_1
      16: iconst_0
      17: bastore
      18: goto          5
      21: return

  protected static int OCB_ntz(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifne          9
       6: bipush        64
       8: ireturn
       9: iconst_0
      10: istore_2
      11: lload_0
      12: lconst_1
      13: land
      14: lconst_0
      15: lcmp
      16: ifne          29
      19: iinc          2, 1
      22: lload_0
      23: iconst_1
      24: lushr
      25: lstore_0
      26: goto          11
      29: iload_2
      30: ireturn

  protected static int shiftLeft(byte[], byte[]);
    Code:
       0: bipush        16
       2: istore_2
       3: iconst_0
       4: istore_3
       5: iinc          2, -1
       8: iload_2
       9: iflt          42
      12: aload_0
      13: iload_2
      14: baload
      15: sipush        255
      18: iand
      19: istore        4
      21: aload_1
      22: iload_2
      23: iload         4
      25: iconst_1
      26: ishl
      27: iload_3
      28: ior
      29: i2b
      30: bastore
      31: iload         4
      33: bipush        7
      35: iushr
      36: iconst_1
      37: iand
      38: istore_3
      39: goto          5
      42: iload_3
      43: ireturn

  protected static void xor(byte[], byte[]);
    Code:
       0: bipush        15
       2: istore_2
       3: iload_2
       4: iflt          23
       7: aload_0
       8: iload_2
       9: dup2
      10: baload
      11: aload_1
      12: iload_2
      13: baload
      14: ixor
      15: i2b
      16: bastore
      17: iinc          2, -1
      20: goto          3
      23: return
}
