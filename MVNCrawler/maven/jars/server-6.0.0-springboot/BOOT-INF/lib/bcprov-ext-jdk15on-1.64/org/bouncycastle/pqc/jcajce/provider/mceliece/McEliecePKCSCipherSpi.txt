public class org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi extends org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher implements org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers,org.bouncycastle.asn1.x509.X509ObjectIdentifiers {
  private org.bouncycastle.pqc.crypto.mceliece.McElieceCipher cipher;

  public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi(org.bouncycastle.pqc.crypto.mceliece.McElieceCipher);
    Code:
       0: aload_0
       1: invokespecial #88                 // Method org/bouncycastle/pqc/jcajce/provider/util/AsymmetricBlockCipher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
       9: return

  protected void initCipherEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_1
       1: checkcast     #40                 // class java/security/PublicKey
       4: invokestatic  #87                 // Method org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKeysToParams.generatePublicKeyParameter:(Ljava/security/PublicKey;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       7: astore        4
       9: new           #45                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      12: dup
      13: aload         4
      15: aload_3
      16: invokespecial #81                 // Method org/bouncycastle/crypto/params/ParametersWithRandom."<init>":(Lorg/bouncycastle/crypto/CipherParameters;Ljava/security/SecureRandom;)V
      19: astore        4
      21: aload_0
      22: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      25: iconst_1
      26: aload         4
      28: invokevirtual #84                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      31: aload_0
      32: aload_0
      33: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      36: getfield      #76                 // Field org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.maxPlainTextSize:I
      39: putfield      #78                 // Field maxPlainTextSize:I
      42: aload_0
      43: aload_0
      44: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      47: getfield      #75                 // Field org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.cipherTextSize:I
      50: putfield      #77                 // Field cipherTextSize:I
      53: return

  protected void initCipherDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_1
       1: checkcast     #39                 // class java/security/PrivateKey
       4: invokestatic  #86                 // Method org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKeysToParams.generatePrivateKeyParameter:(Ljava/security/PrivateKey;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       7: astore_3
       8: aload_0
       9: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      12: iconst_0
      13: aload_3
      14: invokevirtual #84                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      17: aload_0
      18: aload_0
      19: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      22: getfield      #76                 // Field org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.maxPlainTextSize:I
      25: putfield      #78                 // Field maxPlainTextSize:I
      28: aload_0
      29: aload_0
      30: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      33: getfield      #75                 // Field org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.cipherTextSize:I
      36: putfield      #77                 // Field cipherTextSize:I
      39: return

  protected byte[] messageEncrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
       6: aload_1
       7: invokevirtual #83                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.messageEncrypt:([B)[B
      10: astore_2
      11: goto          19
      14: astore_3
      15: aload_3
      16: invokevirtual #80                 // Method java/lang/Exception.printStackTrace:()V
      19: aload_2
      20: areturn
    Exception table:
       from    to  target type
           2    11    14   Class java/lang/Exception

  protected byte[] messageDecrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
       6: aload_1
       7: invokevirtual #82                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.messageDecrypt:([B)[B
      10: astore_2
      11: goto          19
      14: astore_3
      15: aload_3
      16: invokevirtual #80                 // Method java/lang/Exception.printStackTrace:()V
      19: aload_2
      20: areturn
    Exception table:
       from    to  target type
           2    11    14   Class java/lang/Exception

  public java.lang.String getName();
    Code:
       0: ldc           #1                  // String McEliecePKCS
       2: areturn

  public int getKeySize(java.security.Key) throws java.security.InvalidKeyException;
    Code:
       0: aload_1
       1: instanceof    #40                 // class java/security/PublicKey
       4: ifeq          21
       7: aload_1
       8: checkcast     #40                 // class java/security/PublicKey
      11: invokestatic  #87                 // Method org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKeysToParams.generatePublicKeyParameter:(Ljava/security/PublicKey;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      14: checkcast     #47                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters
      17: astore_2
      18: goto          32
      21: aload_1
      22: checkcast     #39                 // class java/security/PrivateKey
      25: invokestatic  #86                 // Method org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKeysToParams.generatePrivateKeyParameter:(Ljava/security/PrivateKey;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      28: checkcast     #47                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters
      31: astore_2
      32: aload_0
      33: getfield      #79                 // Field cipher:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCipher;
      36: aload_2
      37: invokevirtual #85                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.getKeySize:(Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;)I
      40: ireturn
}
