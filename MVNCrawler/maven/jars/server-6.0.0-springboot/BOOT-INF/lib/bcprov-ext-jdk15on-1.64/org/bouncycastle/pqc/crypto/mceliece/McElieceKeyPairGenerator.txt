public class org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator {
  private static final java.lang.String OID;

  private org.bouncycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters mcElieceParams;

  private int m;

  private int n;

  private int t;

  private int fieldPoly;

  private java.security.SecureRandom random;

  private boolean initialized;

  public org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator();
    Code:
       0: aload_0
       1: invokespecial #140                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #137                // Field initialized:Z
       9: return

  private void initializeDefault();
    Code:
       0: new           #61                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters
       3: dup
       4: invokestatic  #142                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
       7: new           #63                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceParameters
      10: dup
      11: invokespecial #153                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters."<init>":()V
      14: invokespecial #145                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;)V
      17: astore_1
      18: aload_0
      19: aload_1
      20: invokespecial #148                // Method initialize:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      23: return

  private void initialize(org.bouncycastle.crypto.KeyGenerationParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters
       5: putfield      #139                // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
       8: aload_0
       9: aload_1
      10: invokevirtual #143                // Method org/bouncycastle/crypto/KeyGenerationParameters.getRandom:()Ljava/security/SecureRandom;
      13: putfield      #138                // Field random:Ljava/security/SecureRandom;
      16: aload_0
      17: getfield      #138                // Field random:Ljava/security/SecureRandom;
      20: ifnonnull     30
      23: aload_0
      24: invokestatic  #142                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      27: putfield      #138                // Field random:Ljava/security/SecureRandom;
      30: aload_0
      31: aload_0
      32: getfield      #139                // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      35: invokevirtual #144                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      38: invokevirtual #150                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getM:()I
      41: putfield      #134                // Field m:I
      44: aload_0
      45: aload_0
      46: getfield      #139                // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      49: invokevirtual #144                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      52: invokevirtual #151                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getN:()I
      55: putfield      #135                // Field n:I
      58: aload_0
      59: aload_0
      60: getfield      #139                // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      63: invokevirtual #144                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      66: invokevirtual #152                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getT:()I
      69: putfield      #136                // Field t:I
      72: aload_0
      73: aload_0
      74: getfield      #139                // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      77: invokevirtual #144                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      80: invokevirtual #149                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getFieldPoly:()I
      83: putfield      #133                // Field fieldPoly:I
      86: aload_0
      87: iconst_1
      88: putfield      #137                // Field initialized:Z
      91: return

  private org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair();
    Code:
       0: aload_0
       1: getfield      #137                // Field initialized:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #146                // Method initializeDefault:()V
      11: new           #67                 // class org/bouncycastle/pqc/math/linearalgebra/GF2mField
      14: dup
      15: aload_0
      16: getfield      #134                // Field m:I
      19: aload_0
      20: getfield      #133                // Field fieldPoly:I
      23: invokespecial #162                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField."<init>":(II)V
      26: astore_1
      27: new           #71                 // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      30: dup
      31: aload_1
      32: aload_0
      33: getfield      #136                // Field t:I
      36: bipush        73
      38: aload_0
      39: getfield      #138                // Field random:Ljava/security/SecureRandom;
      42: invokespecial #168                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;ICLjava/security/SecureRandom;)V
      45: astore_2
      46: new           #72                 // class org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m
      49: dup
      50: aload_1
      51: aload_2
      52: invokespecial #170                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)V
      55: astore_3
      56: aload_3
      57: invokevirtual #169                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m.getSquareRootMatrix:()[Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      60: astore        4
      62: aload_1
      63: aload_2
      64: invokestatic  #163                // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode.createCanonicalCheckMatrix:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      67: astore        5
      69: aload         5
      71: aload_0
      72: getfield      #138                // Field random:Ljava/security/SecureRandom;
      75: invokestatic  #164                // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode.computeSystematicForm:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;Ljava/security/SecureRandom;)Lorg/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe;
      78: astore        6
      80: aload         6
      82: invokevirtual #165                // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe.getSecondMatrix:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      85: astore        7
      87: aload         6
      89: invokevirtual #166                // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe.getPermutation:()Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;
      92: astore        8
      94: aload         7
      96: invokevirtual #158                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.computeTranspose:()Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      99: checkcast     #66                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     102: astore        9
     104: aload         9
     106: invokevirtual #157                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.extendLeftCompactForm:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
     109: astore        10
     111: aload         9
     113: invokevirtual #156                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.getNumRows:()I
     116: istore        11
     118: iload         11
     120: aload_0
     121: getfield      #138                // Field random:Ljava/security/SecureRandom;
     124: invokestatic  #159                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.createRandomRegularMatrixAndItsInverse:(ILjava/security/SecureRandom;)[Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
     127: astore        12
     129: new           #70                 // class org/bouncycastle/pqc/math/linearalgebra/Permutation
     132: dup
     133: aload_0
     134: getfield      #135                // Field n:I
     137: aload_0
     138: getfield      #138                // Field random:Ljava/security/SecureRandom;
     141: invokespecial #167                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation."<init>":(ILjava/security/SecureRandom;)V
     144: astore        13
     146: aload         12
     148: iconst_0
     149: aaload
     150: aload         10
     152: invokevirtual #160                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
     155: checkcast     #66                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     158: astore        14
     160: aload         14
     162: aload         13
     164: invokevirtual #161                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
     167: checkcast     #66                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     170: astore        14
     172: new           #65                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
     175: dup
     176: aload_0
     177: getfield      #135                // Field n:I
     180: aload_0
     181: getfield      #136                // Field t:I
     184: aload         14
     186: invokespecial #155                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters."<init>":(IILorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;)V
     189: astore        15
     191: new           #64                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
     194: dup
     195: aload_0
     196: getfield      #135                // Field n:I
     199: iload         11
     201: aload_1
     202: aload_2
     203: aload         8
     205: aload         13
     207: aload         12
     209: iconst_1
     210: aaload
     211: invokespecial #154                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters."<init>":(IILorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;)V
     214: astore        16
     216: new           #57                 // class org/bouncycastle/crypto/AsymmetricCipherKeyPair
     219: dup
     220: aload         15
     222: aload         16
     224: invokespecial #141                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair."<init>":(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V
     227: areturn

  public void init(org.bouncycastle.crypto.KeyGenerationParameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #148                // Method initialize:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
       5: return

  public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair();
    Code:
       0: aload_0
       1: invokespecial #147                // Method genKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       4: areturn
}
