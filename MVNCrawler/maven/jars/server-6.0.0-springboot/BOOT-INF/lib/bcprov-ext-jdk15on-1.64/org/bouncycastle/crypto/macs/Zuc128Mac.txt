public final class org.bouncycastle.crypto.macs.Zuc128Mac implements org.bouncycastle.crypto.Mac {
  private static final int TOPBIT;

  private final org.bouncycastle.crypto.macs.Zuc128Mac$InternalZuc128Engine theEngine;

  private int theMac;

  private final int[] theKeyStream;

  private org.bouncycastle.crypto.engines.Zuc128CoreEngine theState;

  private int theWordIndex;

  private int theByteIndex;

  public org.bouncycastle.crypto.macs.Zuc128Mac();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #47                 // class org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine
       8: dup
       9: aconst_null
      10: invokespecial #95                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine."<init>":(Lorg/bouncycastle/crypto/macs/Zuc128Mac$1;)V
      13: putfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
      16: aload_0
      17: iconst_2
      18: newarray       int
      20: putfield      #80                 // Field theKeyStream:[I
      23: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String Zuc128Mac
       2: areturn

  public int getMacSize();
    Code:
       0: iconst_4
       1: ireturn

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: getfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
       4: iconst_1
       5: aload_1
       6: invokevirtual #94                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
       9: aload_0
      10: aload_0
      11: getfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
      14: invokevirtual #96                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine.copy:()Lorg/bouncycastle/util/Memoable;
      17: checkcast     #44                 // class org/bouncycastle/crypto/engines/Zuc128CoreEngine
      20: putfield      #81                 // Field theState:Lorg/bouncycastle/crypto/engines/Zuc128CoreEngine;
      23: aload_0
      24: invokespecial #87                 // Method initKeyStream:()V
      27: return

  private void initKeyStream();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #78                 // Field theMac:I
       5: iconst_0
       6: istore_1
       7: iload_1
       8: aload_0
       9: getfield      #80                 // Field theKeyStream:[I
      12: arraylength
      13: iconst_1
      14: isub
      15: if_icmpge     37
      18: aload_0
      19: getfield      #80                 // Field theKeyStream:[I
      22: iload_1
      23: aload_0
      24: getfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
      27: invokevirtual #93                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine.createKeyStreamWord:()I
      30: iastore
      31: iinc          1, 1
      34: goto          7
      37: aload_0
      38: aload_0
      39: getfield      #80                 // Field theKeyStream:[I
      42: arraylength
      43: iconst_1
      44: isub
      45: putfield      #79                 // Field theWordIndex:I
      48: aload_0
      49: iconst_3
      50: putfield      #77                 // Field theByteIndex:I
      53: return

  public void update(byte);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method shift4NextByte:()V
       4: aload_0
       5: getfield      #77                 // Field theByteIndex:I
       8: bipush        8
      10: imul
      11: istore_2
      12: sipush        128
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload_3
      20: ifle          47
      23: iload_1
      24: iload_3
      25: iand
      26: ifeq          37
      29: aload_0
      30: iload_2
      31: iload         4
      33: iadd
      34: invokespecial #92                 // Method updateMac:(I)V
      37: iload_3
      38: iconst_1
      39: ishr
      40: istore_3
      41: iinc          4, 1
      44: goto          19
      47: return

  private void shift4NextByte();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #77                 // Field theByteIndex:I
       5: iconst_1
       6: iadd
       7: iconst_4
       8: irem
       9: putfield      #77                 // Field theByteIndex:I
      12: aload_0
      13: getfield      #77                 // Field theByteIndex:I
      16: ifne          51
      19: aload_0
      20: getfield      #80                 // Field theKeyStream:[I
      23: aload_0
      24: getfield      #79                 // Field theWordIndex:I
      27: aload_0
      28: getfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
      31: invokevirtual #93                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine.createKeyStreamWord:()I
      34: iastore
      35: aload_0
      36: aload_0
      37: getfield      #79                 // Field theWordIndex:I
      40: iconst_1
      41: iadd
      42: aload_0
      43: getfield      #80                 // Field theKeyStream:[I
      46: arraylength
      47: irem
      48: putfield      #79                 // Field theWordIndex:I
      51: return

  private void updateMac(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #78                 // Field theMac:I
       5: aload_0
       6: iload_1
       7: invokespecial #91                 // Method getKeyStreamWord:(I)I
      10: ixor
      11: putfield      #78                 // Field theMac:I
      14: return

  private int getKeyStreamWord(int);
    Code:
       0: aload_0
       1: getfield      #80                 // Field theKeyStream:[I
       4: aload_0
       5: getfield      #79                 // Field theWordIndex:I
       8: iaload
       9: istore_2
      10: iload_1
      11: ifne          16
      14: iload_2
      15: ireturn
      16: aload_0
      17: getfield      #80                 // Field theKeyStream:[I
      20: aload_0
      21: getfield      #79                 // Field theWordIndex:I
      24: iconst_1
      25: iadd
      26: aload_0
      27: getfield      #80                 // Field theKeyStream:[I
      30: arraylength
      31: irem
      32: iaload
      33: istore_3
      34: iload_2
      35: iload_1
      36: ishl
      37: iload_3
      38: bipush        32
      40: iload_1
      41: isub
      42: iushr
      43: ior
      44: ireturn

  public void update(byte[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     25
       9: aload_0
      10: aload_1
      11: iload_2
      12: iload         4
      14: iadd
      15: baload
      16: invokevirtual #90                 // Method update:(B)V
      19: iinc          4, 1
      22: goto          3
      25: return

  private int getFinalWord();
    Code:
       0: aload_0
       1: getfield      #77                 // Field theByteIndex:I
       4: ifeq          15
       7: aload_0
       8: getfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
      11: invokevirtual #93                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine.createKeyStreamWord:()I
      14: ireturn
      15: aload_0
      16: aload_0
      17: getfield      #79                 // Field theWordIndex:I
      20: iconst_1
      21: iadd
      22: aload_0
      23: getfield      #80                 // Field theKeyStream:[I
      26: arraylength
      27: irem
      28: putfield      #79                 // Field theWordIndex:I
      31: aload_0
      32: getfield      #80                 // Field theKeyStream:[I
      35: aload_0
      36: getfield      #79                 // Field theWordIndex:I
      39: iaload
      40: ireturn

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method shift4NextByte:()V
       4: aload_0
       5: dup
       6: getfield      #78                 // Field theMac:I
       9: aload_0
      10: aload_0
      11: getfield      #77                 // Field theByteIndex:I
      14: bipush        8
      16: imul
      17: invokespecial #91                 // Method getKeyStreamWord:(I)I
      20: ixor
      21: putfield      #78                 // Field theMac:I
      24: aload_0
      25: dup
      26: getfield      #78                 // Field theMac:I
      29: aload_0
      30: invokespecial #85                 // Method getFinalWord:()I
      33: ixor
      34: putfield      #78                 // Field theMac:I
      37: aload_0
      38: getfield      #78                 // Field theMac:I
      41: aload_1
      42: iload_2
      43: invokestatic  #84                 // Method org/bouncycastle/crypto/engines/Zuc128CoreEngine.encode32be:(I[BI)V
      46: aload_0
      47: invokevirtual #88                 // Method reset:()V
      50: aload_0
      51: invokevirtual #86                 // Method getMacSize:()I
      54: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #81                 // Field theState:Lorg/bouncycastle/crypto/engines/Zuc128CoreEngine;
       4: ifnull        18
       7: aload_0
       8: getfield      #82                 // Field theEngine:Lorg/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine;
      11: aload_0
      12: getfield      #81                 // Field theState:Lorg/bouncycastle/crypto/engines/Zuc128CoreEngine;
      15: invokevirtual #97                 // Method org/bouncycastle/crypto/macs/Zuc128Mac$InternalZuc128Engine.reset:(Lorg/bouncycastle/util/Memoable;)V
      18: aload_0
      19: invokespecial #87                 // Method initKeyStream:()V
      22: return
}
