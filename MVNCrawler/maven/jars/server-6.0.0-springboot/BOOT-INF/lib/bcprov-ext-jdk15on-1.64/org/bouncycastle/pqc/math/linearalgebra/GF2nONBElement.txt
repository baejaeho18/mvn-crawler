public class org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement extends org.bouncycastle.pqc.math.linearalgebra.GF2nElement {
  private static final long[] mBitmask;

  private static final long[] mMaxmask;

  private static final int[] mIBY64;

  private static final int MAXLONG;

  private int mLength;

  private int mBit;

  private long[] mPol;

  public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #435                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
       9: aload_0
      10: aload_0
      11: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      14: invokevirtual #439                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.getDegree:()I
      17: putfield      #416                // Field mDegree:I
      20: aload_0
      21: aload_1
      22: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
      25: putfield      #417                // Field mLength:I
      28: aload_0
      29: aload_1
      30: invokevirtual #462                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBBit:()I
      33: putfield      #415                // Field mBit:I
      36: aload_0
      37: aload_0
      38: getfield      #417                // Field mLength:I
      41: newarray       long
      43: putfield      #421                // Field mPol:[J
      46: aload_0
      47: getfield      #417                // Field mLength:I
      50: iconst_1
      51: if_icmple     110
      54: iconst_0
      55: istore_3
      56: iload_3
      57: aload_0
      58: getfield      #417                // Field mLength:I
      61: iconst_1
      62: isub
      63: if_icmpge     82
      66: aload_0
      67: getfield      #421                // Field mPol:[J
      70: iload_3
      71: aload_2
      72: invokevirtual #434                // Method java/security/SecureRandom.nextLong:()J
      75: lastore
      76: iinc          3, 1
      79: goto          56
      82: aload_2
      83: invokevirtual #434                // Method java/security/SecureRandom.nextLong:()J
      86: lstore_3
      87: aload_0
      88: getfield      #421                // Field mPol:[J
      91: aload_0
      92: getfield      #417                // Field mLength:I
      95: iconst_1
      96: isub
      97: lload_3
      98: bipush        64
     100: aload_0
     101: getfield      #415                // Field mBit:I
     104: isub
     105: lushr
     106: lastore
     107: goto          140
     110: aload_0
     111: getfield      #421                // Field mPol:[J
     114: iconst_0
     115: aload_2
     116: invokevirtual #434                // Method java/security/SecureRandom.nextLong:()J
     119: lastore
     120: aload_0
     121: getfield      #421                // Field mPol:[J
     124: iconst_0
     125: aload_0
     126: getfield      #421                // Field mPol:[J
     129: iconst_0
     130: laload
     131: bipush        64
     133: aload_0
     134: getfield      #415                // Field mBit:I
     137: isub
     138: lushr
     139: lastore
     140: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, byte[]);
    Code:
       0: aload_0
       1: invokespecial #435                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
       9: aload_0
      10: aload_0
      11: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      14: invokevirtual #439                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.getDegree:()I
      17: putfield      #416                // Field mDegree:I
      20: aload_0
      21: aload_1
      22: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
      25: putfield      #417                // Field mLength:I
      28: aload_0
      29: aload_1
      30: invokevirtual #462                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBBit:()I
      33: putfield      #415                // Field mBit:I
      36: aload_0
      37: aload_0
      38: getfield      #417                // Field mLength:I
      41: newarray       long
      43: putfield      #421                // Field mPol:[J
      46: aload_0
      47: aload_2
      48: invokespecial #451                // Method assign:([B)V
      51: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #435                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
       9: aload_0
      10: aload_0
      11: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      14: invokevirtual #439                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.getDegree:()I
      17: putfield      #416                // Field mDegree:I
      20: aload_0
      21: aload_1
      22: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
      25: putfield      #417                // Field mLength:I
      28: aload_0
      29: aload_1
      30: invokevirtual #462                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBBit:()I
      33: putfield      #415                // Field mBit:I
      36: aload_0
      37: aload_0
      38: getfield      #417                // Field mLength:I
      41: newarray       long
      43: putfield      #421                // Field mPol:[J
      46: aload_0
      47: aload_2
      48: invokespecial #455                // Method assign:(Ljava/math/BigInteger;)V
      51: return

  private org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, long[]);
    Code:
       0: aload_0
       1: invokespecial #435                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
       9: aload_0
      10: aload_0
      11: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      14: invokevirtual #439                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.getDegree:()I
      17: putfield      #416                // Field mDegree:I
      20: aload_0
      21: aload_1
      22: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
      25: putfield      #417                // Field mLength:I
      28: aload_0
      29: aload_1
      30: invokevirtual #462                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBBit:()I
      33: putfield      #415                // Field mBit:I
      36: aload_0
      37: aload_2
      38: putfield      #421                // Field mPol:[J
      41: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement);
    Code:
       0: aload_0
       1: invokespecial #435                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
       9: putfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      12: aload_0
      13: aload_0
      14: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      17: invokevirtual #439                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.getDegree:()I
      20: putfield      #416                // Field mDegree:I
      23: aload_0
      24: aload_0
      25: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      28: checkcast     #349                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBField
      31: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
      34: putfield      #417                // Field mLength:I
      37: aload_0
      38: aload_0
      39: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      42: checkcast     #349                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBField
      45: invokevirtual #462                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBBit:()I
      48: putfield      #415                // Field mBit:I
      51: aload_0
      52: aload_0
      53: getfield      #417                // Field mLength:I
      56: newarray       long
      58: putfield      #421                // Field mPol:[J
      61: aload_0
      62: aload_1
      63: invokespecial #448                // Method getElement:()[J
      66: invokespecial #452                // Method assign:([J)V
      69: return

  public java.lang.Object clone();
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: areturn

  public static org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField);
    Code:
       0: aload_0
       1: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
       4: newarray       long
       6: astore_1
       7: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #457                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;[J)V
      16: areturn

  public static org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement ONE(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField);
    Code:
       0: aload_0
       1: invokevirtual #463                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBLength:()I
       4: istore_1
       5: iload_1
       6: newarray       long
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: iconst_1
      14: isub
      15: if_icmpge     30
      18: aload_2
      19: iload_3
      20: ldc2_w        #90                 // long -1l
      23: lastore
      24: iinc          3, 1
      27: goto          11
      30: aload_2
      31: iload_1
      32: iconst_1
      33: isub
      34: getstatic     #420                // Field mMaxmask:[J
      37: aload_0
      38: invokevirtual #462                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.getONBBit:()I
      41: iconst_1
      42: isub
      43: laload
      44: lastore
      45: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      48: dup
      49: aload_0
      50: aload_2
      51: invokespecial #457                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;[J)V
      54: areturn

  void assignZero();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #417                // Field mLength:I
       5: newarray       long
       7: putfield      #421                // Field mPol:[J
      10: return

  void assignOne();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #417                // Field mLength:I
       7: iconst_1
       8: isub
       9: if_icmpge     27
      12: aload_0
      13: getfield      #421                // Field mPol:[J
      16: iload_1
      17: ldc2_w        #90                 // long -1l
      20: lastore
      21: iinc          1, 1
      24: goto          2
      27: aload_0
      28: getfield      #421                // Field mPol:[J
      31: aload_0
      32: getfield      #417                // Field mLength:I
      35: iconst_1
      36: isub
      37: getstatic     #420                // Field mMaxmask:[J
      40: aload_0
      41: getfield      #415                // Field mBit:I
      44: iconst_1
      45: isub
      46: laload
      47: lastore
      48: return

  private void assign(java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #432                // Method java/math/BigInteger.toByteArray:()[B
       5: invokespecial #451                // Method assign:([B)V
       8: return

  private void assign(long[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: getfield      #421                // Field mPol:[J
       6: iconst_0
       7: aload_0
       8: getfield      #417                // Field mLength:I
      11: invokestatic  #431                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: return

  private void assign(byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #417                // Field mLength:I
       5: newarray       long
       7: putfield      #421                // Field mPol:[J
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_1
      14: arraylength
      15: if_icmpge     55
      18: aload_0
      19: getfield      #421                // Field mPol:[J
      22: iload_2
      23: iconst_3
      24: iushr
      25: dup2
      26: laload
      27: aload_1
      28: aload_1
      29: arraylength
      30: iconst_1
      31: isub
      32: iload_2
      33: isub
      34: baload
      35: i2l
      36: ldc2_w        #118                // long 255l
      39: land
      40: iload_2
      41: bipush        7
      43: iand
      44: iconst_3
      45: ishl
      46: lshl
      47: lor
      48: lastore
      49: iinc          2, 1
      52: goto          12
      55: return

  public boolean isZero();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #417                // Field mLength:I
       9: if_icmpge     47
      12: iload_1
      13: ifeq          47
      16: iload_1
      17: ifeq          39
      20: aload_0
      21: getfield      #421                // Field mPol:[J
      24: iload_2
      25: laload
      26: ldc2_w        #90                 // long -1l
      29: land
      30: lconst_0
      31: lcmp
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_1
      41: iinc          2, 1
      44: goto          4
      47: iload_1
      48: ireturn

  public boolean isOne();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #417                // Field mLength:I
       9: iconst_1
      10: isub
      11: if_icmpge     51
      14: iload_1
      15: ifeq          51
      18: iload_1
      19: ifeq          43
      22: aload_0
      23: getfield      #421                // Field mPol:[J
      26: iload_2
      27: laload
      28: ldc2_w        #90                 // long -1l
      31: land
      32: ldc2_w        #90                 // long -1l
      35: lcmp
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: istore_1
      45: iinc          2, 1
      48: goto          4
      51: iload_1
      52: ifeq          101
      55: iload_1
      56: ifeq          99
      59: aload_0
      60: getfield      #421                // Field mPol:[J
      63: aload_0
      64: getfield      #417                // Field mLength:I
      67: iconst_1
      68: isub
      69: laload
      70: getstatic     #420                // Field mMaxmask:[J
      73: aload_0
      74: getfield      #415                // Field mBit:I
      77: iconst_1
      78: isub
      79: laload
      80: land
      81: getstatic     #420                // Field mMaxmask:[J
      84: aload_0
      85: getfield      #415                // Field mBit:I
      88: iconst_1
      89: isub
      90: laload
      91: lcmp
      92: ifne          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: istore_1
     101: iload_1
     102: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #417                // Field mLength:I
      25: if_icmpge     52
      28: aload_0
      29: getfield      #421                // Field mPol:[J
      32: iload_3
      33: laload
      34: aload_2
      35: getfield      #421                // Field mPol:[J
      38: iload_3
      39: laload
      40: lcmp
      41: ifeq          46
      44: iconst_0
      45: ireturn
      46: iinc          3, 1
      49: goto          20
      52: iconst_1
      53: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #421                // Field mPol:[J
       4: invokestatic  #464                // Method org/bouncycastle/util/Arrays.hashCode:([J)I
       7: ireturn

  public boolean testRightmostBit();
    Code:
       0: aload_0
       1: getfield      #421                // Field mPol:[J
       4: aload_0
       5: getfield      #417                // Field mLength:I
       8: iconst_1
       9: isub
      10: laload
      11: getstatic     #419                // Field mBitmask:[J
      14: aload_0
      15: getfield      #415                // Field mBit:I
      18: iconst_1
      19: isub
      20: laload
      21: land
      22: lconst_0
      23: lcmp
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  boolean testBit(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #416                // Field mDegree:I
       9: if_icmple     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #421                // Field mPol:[J
      18: iload_1
      19: bipush        6
      21: iushr
      22: laload
      23: getstatic     #419                // Field mBitmask:[J
      26: iload_1
      27: bipush        63
      29: iand
      30: laload
      31: land
      32: lstore_2
      33: lload_2
      34: lconst_0
      35: lcmp
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  private long[] getElement();
    Code:
       0: aload_0
       1: getfield      #421                // Field mPol:[J
       4: arraylength
       5: newarray       long
       7: astore_1
       8: aload_0
       9: getfield      #421                // Field mPol:[J
      12: iconst_0
      13: aload_1
      14: iconst_0
      15: aload_0
      16: getfield      #421                // Field mPol:[J
      19: arraylength
      20: invokestatic  #431                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_1
      24: areturn

  private long[] getElementReverseOrder();
    Code:
       0: aload_0
       1: getfield      #421                // Field mPol:[J
       4: arraylength
       5: newarray       long
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #416                // Field mDegree:I
      15: if_icmpge     56
      18: aload_0
      19: aload_0
      20: getfield      #416                // Field mDegree:I
      23: iload_2
      24: isub
      25: iconst_1
      26: isub
      27: invokevirtual #450                // Method testBit:(I)Z
      30: ifeq          50
      33: aload_1
      34: iload_2
      35: bipush        6
      37: iushr
      38: dup2
      39: laload
      40: getstatic     #419                // Field mBitmask:[J
      43: iload_2
      44: bipush        63
      46: iand
      47: laload
      48: lor
      49: lastore
      50: iinc          2, 1
      53: goto          10
      56: aload_1
      57: areturn

  void reverseOrder();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #449                // Method getElementReverseOrder:()[J
       5: putfield      #421                // Field mPol:[J
       8: return

  public org.bouncycastle.pqc.math.linearalgebra.GFElement add(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException;
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #458                // Method addToThis:(Lorg/bouncycastle/pqc/math/linearalgebra/GFElement;)V
      14: aload_2
      15: areturn

  public void addToThis(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException;
    Code:
       0: aload_1
       1: instanceof    #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       4: ifne          15
       7: new           #341                // class java/lang/RuntimeException
      10: dup
      11: invokespecial #425                // Method java/lang/RuntimeException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      19: aload_1
      20: checkcast     #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      23: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      26: invokevirtual #440                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.equals:(Ljava/lang/Object;)Z
      29: ifne          40
      32: new           #341                // class java/lang/RuntimeException
      35: dup
      36: invokespecial #425                // Method java/lang/RuntimeException."<init>":()V
      39: athrow
      40: iconst_0
      41: istore_2
      42: iload_2
      43: aload_0
      44: getfield      #417                // Field mLength:I
      47: if_icmpge     74
      50: aload_0
      51: getfield      #421                // Field mPol:[J
      54: iload_2
      55: dup2
      56: laload
      57: aload_1
      58: checkcast     #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      61: getfield      #421                // Field mPol:[J
      64: iload_2
      65: laload
      66: lxor
      67: lastore
      68: iinc          2, 1
      71: goto          42
      74: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2nElement increase();
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #442                // Method increaseThis:()V
      13: aload_1
      14: areturn

  public void increaseThis();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
       5: checkcast     #349                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBField
       8: invokestatic  #460                // Method ONE:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;
      11: invokevirtual #458                // Method addToThis:(Lorg/bouncycastle/pqc/math/linearalgebra/GFElement;)V
      14: return

  public org.bouncycastle.pqc.math.linearalgebra.GFElement multiply(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException;
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #459                // Method multiplyThisBy:(Lorg/bouncycastle/pqc/math/linearalgebra/GFElement;)V
      14: aload_2
      15: areturn

  public void multiplyThisBy(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException;
    Code:
       0: aload_1
       1: instanceof    #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       4: ifne          17
       7: new           #341                // class java/lang/RuntimeException
      10: dup
      11: ldc           #5                  // String The elements have different representation: not yet implemented
      13: invokespecial #426                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      21: aload_1
      22: checkcast     #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      25: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      28: invokevirtual #440                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.equals:(Ljava/lang/Object;)Z
      31: ifne          42
      34: new           #341                // class java/lang/RuntimeException
      37: dup
      38: invokespecial #425                // Method java/lang/RuntimeException."<init>":()V
      41: athrow
      42: aload_0
      43: aload_1
      44: invokevirtual #453                // Method equals:(Ljava/lang/Object;)Z
      47: ifeq          57
      50: aload_0
      51: invokevirtual #445                // Method squareThis:()V
      54: goto          637
      57: aload_0
      58: getfield      #421                // Field mPol:[J
      61: astore_2
      62: aload_1
      63: checkcast     #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      66: getfield      #421                // Field mPol:[J
      69: astore_3
      70: aload_0
      71: getfield      #417                // Field mLength:I
      74: newarray       long
      76: astore        4
      78: aload_0
      79: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      82: checkcast     #349                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBField
      85: getfield      #423                // Field org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.mMult:[[I
      88: astore        5
      90: aload_0
      91: getfield      #417                // Field mLength:I
      94: iconst_1
      95: isub
      96: istore        6
      98: aload_0
      99: getfield      #415                // Field mBit:I
     102: iconst_1
     103: isub
     104: istore        7
     106: iconst_0
     107: istore        8
     109: getstatic     #419                // Field mBitmask:[J
     112: bipush        63
     114: laload
     115: lstore        13
     117: getstatic     #419                // Field mBitmask:[J
     120: iload         7
     122: laload
     123: lstore        15
     125: iconst_0
     126: istore        19
     128: iload         19
     130: aload_0
     131: getfield      #416                // Field mDegree:I
     134: if_icmpge     631
     137: iconst_0
     138: istore        8
     140: iconst_0
     141: istore        20
     143: iload         20
     145: aload_0
     146: getfield      #416                // Field mDegree:I
     149: if_icmpge     294
     152: getstatic     #418                // Field mIBY64:[I
     155: iload         20
     157: iaload
     158: istore        9
     160: iload         20
     162: bipush        63
     164: iand
     165: istore        11
     167: getstatic     #418                // Field mIBY64:[I
     170: aload         5
     172: iload         20
     174: aaload
     175: iconst_0
     176: iaload
     177: iaload
     178: istore        10
     180: aload         5
     182: iload         20
     184: aaload
     185: iconst_0
     186: iaload
     187: bipush        63
     189: iand
     190: istore        12
     192: aload_2
     193: iload         9
     195: laload
     196: getstatic     #419                // Field mBitmask:[J
     199: iload         11
     201: laload
     202: land
     203: lconst_0
     204: lcmp
     205: ifeq          288
     208: aload_3
     209: iload         10
     211: laload
     212: getstatic     #419                // Field mBitmask:[J
     215: iload         12
     217: laload
     218: land
     219: lconst_0
     220: lcmp
     221: ifeq          230
     224: iload         8
     226: iconst_1
     227: ixor
     228: istore        8
     230: aload         5
     232: iload         20
     234: aaload
     235: iconst_1
     236: iaload
     237: iconst_m1
     238: if_icmpeq     288
     241: getstatic     #418                // Field mIBY64:[I
     244: aload         5
     246: iload         20
     248: aaload
     249: iconst_1
     250: iaload
     251: iaload
     252: istore        10
     254: aload         5
     256: iload         20
     258: aaload
     259: iconst_1
     260: iaload
     261: bipush        63
     263: iand
     264: istore        12
     266: aload_3
     267: iload         10
     269: laload
     270: getstatic     #419                // Field mBitmask:[J
     273: iload         12
     275: laload
     276: land
     277: lconst_0
     278: lcmp
     279: ifeq          288
     282: iload         8
     284: iconst_1
     285: ixor
     286: istore        8
     288: iinc          20, 1
     291: goto          143
     294: getstatic     #418                // Field mIBY64:[I
     297: iload         19
     299: iaload
     300: istore        9
     302: iload         19
     304: bipush        63
     306: iand
     307: istore        11
     309: iload         8
     311: ifeq          328
     314: aload         4
     316: iload         9
     318: dup2
     319: laload
     320: getstatic     #419                // Field mBitmask:[J
     323: iload         11
     325: laload
     326: lxor
     327: lastore
     328: aload_0
     329: getfield      #417                // Field mLength:I
     332: iconst_1
     333: if_icmple     549
     336: aload_2
     337: iload         6
     339: laload
     340: lconst_1
     341: land
     342: lconst_1
     343: lcmp
     344: ifne          351
     347: iconst_1
     348: goto          352
     351: iconst_0
     352: istore        17
     354: iload         6
     356: iconst_1
     357: isub
     358: istore        20
     360: iload         20
     362: iflt          417
     365: aload_2
     366: iload         20
     368: laload
     369: lconst_1
     370: land
     371: lconst_0
     372: lcmp
     373: ifeq          380
     376: iconst_1
     377: goto          381
     380: iconst_0
     381: istore        18
     383: aload_2
     384: iload         20
     386: aload_2
     387: iload         20
     389: laload
     390: iconst_1
     391: lushr
     392: lastore
     393: iload         17
     395: ifeq          407
     398: aload_2
     399: iload         20
     401: dup2
     402: laload
     403: lload         13
     405: lxor
     406: lastore
     407: iload         18
     409: istore        17
     411: iinc          20, -1
     414: goto          360
     417: aload_2
     418: iload         6
     420: aload_2
     421: iload         6
     423: laload
     424: iconst_1
     425: lushr
     426: lastore
     427: iload         17
     429: ifeq          441
     432: aload_2
     433: iload         6
     435: dup2
     436: laload
     437: lload         15
     439: lxor
     440: lastore
     441: aload_3
     442: iload         6
     444: laload
     445: lconst_1
     446: land
     447: lconst_1
     448: lcmp
     449: ifne          456
     452: iconst_1
     453: goto          457
     456: iconst_0
     457: istore        17
     459: iload         6
     461: iconst_1
     462: isub
     463: istore        20
     465: iload         20
     467: iflt          522
     470: aload_3
     471: iload         20
     473: laload
     474: lconst_1
     475: land
     476: lconst_0
     477: lcmp
     478: ifeq          485
     481: iconst_1
     482: goto          486
     485: iconst_0
     486: istore        18
     488: aload_3
     489: iload         20
     491: aload_3
     492: iload         20
     494: laload
     495: iconst_1
     496: lushr
     497: lastore
     498: iload         17
     500: ifeq          512
     503: aload_3
     504: iload         20
     506: dup2
     507: laload
     508: lload         13
     510: lxor
     511: lastore
     512: iload         18
     514: istore        17
     516: iinc          20, -1
     519: goto          465
     522: aload_3
     523: iload         6
     525: aload_3
     526: iload         6
     528: laload
     529: iconst_1
     530: lushr
     531: lastore
     532: iload         17
     534: ifeq          625
     537: aload_3
     538: iload         6
     540: dup2
     541: laload
     542: lload         15
     544: lxor
     545: lastore
     546: goto          625
     549: aload_2
     550: iconst_0
     551: laload
     552: lconst_1
     553: land
     554: lconst_1
     555: lcmp
     556: ifne          563
     559: iconst_1
     560: goto          564
     563: iconst_0
     564: istore        17
     566: aload_2
     567: iconst_0
     568: aload_2
     569: iconst_0
     570: laload
     571: iconst_1
     572: lushr
     573: lastore
     574: iload         17
     576: ifeq          587
     579: aload_2
     580: iconst_0
     581: dup2
     582: laload
     583: lload         15
     585: lxor
     586: lastore
     587: aload_3
     588: iconst_0
     589: laload
     590: lconst_1
     591: land
     592: lconst_1
     593: lcmp
     594: ifne          601
     597: iconst_1
     598: goto          602
     601: iconst_0
     602: istore        17
     604: aload_3
     605: iconst_0
     606: aload_3
     607: iconst_0
     608: laload
     609: iconst_1
     610: lushr
     611: lastore
     612: iload         17
     614: ifeq          625
     617: aload_3
     618: iconst_0
     619: dup2
     620: laload
     621: lload         15
     623: lxor
     624: lastore
     625: iinc          19, 1
     628: goto          128
     631: aload_0
     632: aload         4
     634: invokespecial #452                // Method assign:([J)V
     637: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2nElement square();
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #445                // Method squareThis:()V
      13: aload_1
      14: areturn

  public void squareThis();
    Code:
       0: aload_0
       1: invokespecial #448                // Method getElement:()[J
       4: astore_1
       5: aload_0
       6: getfield      #417                // Field mLength:I
       9: iconst_1
      10: isub
      11: istore_2
      12: aload_0
      13: getfield      #415                // Field mBit:I
      16: iconst_1
      17: isub
      18: istore_3
      19: getstatic     #419                // Field mBitmask:[J
      22: bipush        63
      24: laload
      25: lstore        4
      27: aload_1
      28: iload_2
      29: laload
      30: getstatic     #419                // Field mBitmask:[J
      33: iload_3
      34: laload
      35: land
      36: lconst_0
      37: lcmp
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore        6
      48: iconst_0
      49: istore        8
      51: iload         8
      53: iload_2
      54: if_icmpge     109
      57: aload_1
      58: iload         8
      60: laload
      61: lload         4
      63: land
      64: lconst_0
      65: lcmp
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: istore        7
      76: aload_1
      77: iload         8
      79: aload_1
      80: iload         8
      82: laload
      83: iconst_1
      84: lshl
      85: lastore
      86: iload         6
      88: ifeq          99
      91: aload_1
      92: iload         8
      94: dup2
      95: laload
      96: lconst_1
      97: lxor
      98: lastore
      99: iload         7
     101: istore        6
     103: iinc          8, 1
     106: goto          51
     109: aload_1
     110: iload_2
     111: laload
     112: getstatic     #419                // Field mBitmask:[J
     115: iload_3
     116: laload
     117: land
     118: lconst_0
     119: lcmp
     120: ifeq          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: istore        7
     130: aload_1
     131: iload_2
     132: aload_1
     133: iload_2
     134: laload
     135: iconst_1
     136: lshl
     137: lastore
     138: iload         6
     140: ifeq          150
     143: aload_1
     144: iload_2
     145: dup2
     146: laload
     147: lconst_1
     148: lxor
     149: lastore
     150: iload         7
     152: ifeq          168
     155: aload_1
     156: iload_2
     157: dup2
     158: laload
     159: getstatic     #419                // Field mBitmask:[J
     162: iload_3
     163: iconst_1
     164: iadd
     165: laload
     166: lxor
     167: lastore
     168: aload_0
     169: aload_1
     170: invokespecial #452                // Method assign:([J)V
     173: return

  public org.bouncycastle.pqc.math.linearalgebra.GFElement invert() throws java.lang.ArithmeticException;
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #443                // Method invertThis:()V
      13: aload_1
      14: areturn

  public void invertThis() throws java.lang.ArithmeticException;
    Code:
       0: aload_0
       1: invokevirtual #446                // Method isZero:()Z
       4: ifeq          15
       7: new           #340                // class java/lang/ArithmeticException
      10: dup
      11: invokespecial #424                // Method java/lang/ArithmeticException."<init>":()V
      14: athrow
      15: bipush        31
      17: istore_1
      18: iconst_0
      19: istore_2
      20: iload_2
      21: ifne          54
      24: iload_1
      25: iflt          54
      28: aload_0
      29: getfield      #416                // Field mDegree:I
      32: iconst_1
      33: isub
      34: i2l
      35: getstatic     #419                // Field mBitmask:[J
      38: iload_1
      39: laload
      40: land
      41: lconst_0
      42: lcmp
      43: ifeq          48
      46: iconst_1
      47: istore_2
      48: iinc          1, -1
      51: goto          20
      54: iinc          1, 1
      57: aload_0
      58: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
      61: checkcast     #349                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBField
      64: invokestatic  #461                // Method ZERO:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;
      67: astore_2
      68: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      71: dup
      72: aload_0
      73: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
      76: astore_3
      77: iconst_1
      78: istore        4
      80: iload_1
      81: iconst_1
      82: isub
      83: istore        5
      85: iload         5
      87: iflt          166
      90: aload_3
      91: invokevirtual #437                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.clone:()Ljava/lang/Object;
      94: checkcast     #346                // class org/bouncycastle/pqc/math/linearalgebra/GF2nElement
      97: astore_2
      98: iconst_1
      99: istore        6
     101: iload         6
     103: iload         4
     105: if_icmpgt     118
     108: aload_2
     109: invokevirtual #436                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.squareThis:()V
     112: iinc          6, 1
     115: goto          101
     118: aload_3
     119: aload_2
     120: invokevirtual #438                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.multiplyThisBy:(Lorg/bouncycastle/pqc/math/linearalgebra/GFElement;)V
     123: iload         4
     125: iconst_1
     126: ishl
     127: istore        4
     129: aload_0
     130: getfield      #416                // Field mDegree:I
     133: iconst_1
     134: isub
     135: i2l
     136: getstatic     #419                // Field mBitmask:[J
     139: iload         5
     141: laload
     142: land
     143: lconst_0
     144: lcmp
     145: ifeq          160
     148: aload_3
     149: invokevirtual #436                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.squareThis:()V
     152: aload_3
     153: aload_0
     154: invokevirtual #438                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.multiplyThisBy:(Lorg/bouncycastle/pqc/math/linearalgebra/GFElement;)V
     157: iinc          4, 1
     160: iinc          5, -1
     163: goto          85
     166: aload_3
     167: invokevirtual #436                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.squareThis:()V
     170: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2nElement squareRoot();
    Code:
       0: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
       3: dup
       4: aload_0
       5: invokespecial #456                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #444                // Method squareRootThis:()V
      13: aload_1
      14: areturn

  public void squareRootThis();
    Code:
       0: aload_0
       1: invokespecial #448                // Method getElement:()[J
       4: astore_1
       5: aload_0
       6: getfield      #417                // Field mLength:I
       9: iconst_1
      10: isub
      11: istore_2
      12: aload_0
      13: getfield      #415                // Field mBit:I
      16: iconst_1
      17: isub
      18: istore_3
      19: getstatic     #419                // Field mBitmask:[J
      22: bipush        63
      24: laload
      25: lstore        4
      27: aload_1
      28: iconst_0
      29: laload
      30: lconst_1
      31: land
      32: lconst_0
      33: lcmp
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore        6
      44: iload_2
      45: istore        8
      47: iload         8
      49: iflt          125
      52: aload_1
      53: iload         8
      55: laload
      56: lconst_1
      57: land
      58: lconst_0
      59: lcmp
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: istore        7
      70: aload_1
      71: iload         8
      73: aload_1
      74: iload         8
      76: laload
      77: iconst_1
      78: lushr
      79: lastore
      80: iload         6
      82: ifeq          115
      85: iload         8
      87: iload_2
      88: if_icmpne     106
      91: aload_1
      92: iload         8
      94: dup2
      95: laload
      96: getstatic     #419                // Field mBitmask:[J
      99: iload_3
     100: laload
     101: lxor
     102: lastore
     103: goto          115
     106: aload_1
     107: iload         8
     109: dup2
     110: laload
     111: lload         4
     113: lxor
     114: lastore
     115: iload         7
     117: istore        6
     119: iinc          8, -1
     122: goto          47
     125: aload_0
     126: aload_1
     127: invokespecial #452                // Method assign:([J)V
     130: return

  public int trace();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #417                // Field mLength:I
       6: iconst_1
       7: isub
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_2
      13: if_icmpge     60
      16: iconst_0
      17: istore        4
      19: iload         4
      21: bipush        64
      23: if_icmpge     54
      26: aload_0
      27: getfield      #421                // Field mPol:[J
      30: iload_3
      31: laload
      32: getstatic     #419                // Field mBitmask:[J
      35: iload         4
      37: laload
      38: land
      39: lconst_0
      40: lcmp
      41: ifeq          48
      44: iload_1
      45: iconst_1
      46: ixor
      47: istore_1
      48: iinc          4, 1
      51: goto          19
      54: iinc          3, 1
      57: goto          11
      60: aload_0
      61: getfield      #415                // Field mBit:I
      64: istore_3
      65: iconst_0
      66: istore        4
      68: iload         4
      70: iload_3
      71: if_icmpge     102
      74: aload_0
      75: getfield      #421                // Field mPol:[J
      78: iload_2
      79: laload
      80: getstatic     #419                // Field mBitmask:[J
      83: iload         4
      85: laload
      86: land
      87: lconst_0
      88: lcmp
      89: ifeq          96
      92: iload_1
      93: iconst_1
      94: ixor
      95: istore_1
      96: iinc          4, 1
      99: goto          68
     102: iload_1
     103: ireturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation() throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: invokevirtual #441                // Method trace:()I
       4: iconst_1
       5: if_icmpne     16
       8: new           #341                // class java/lang/RuntimeException
      11: dup
      12: invokespecial #425                // Method java/lang/RuntimeException."<init>":()V
      15: athrow
      16: getstatic     #419                // Field mBitmask:[J
      19: bipush        63
      21: laload
      22: lstore_1
      23: lconst_0
      24: lstore_3
      25: lconst_1
      26: lstore        5
      28: aload_0
      29: getfield      #417                // Field mLength:I
      32: newarray       long
      34: astore        7
      36: lconst_0
      37: lstore        8
      39: iconst_1
      40: istore        10
      42: iconst_0
      43: istore        11
      45: iload         11
      47: aload_0
      48: getfield      #417                // Field mLength:I
      51: iconst_1
      52: isub
      53: if_icmpge     229
      56: iconst_1
      57: istore        10
      59: iload         10
      61: bipush        64
      63: if_icmpge     153
      66: getstatic     #419                // Field mBitmask:[J
      69: iload         10
      71: laload
      72: aload_0
      73: getfield      #421                // Field mPol:[J
      76: iload         11
      78: laload
      79: land
      80: lload_3
      81: lcmp
      82: ifeq          101
      85: lload         8
      87: getstatic     #419                // Field mBitmask:[J
      90: iload         10
      92: iconst_1
      93: isub
      94: laload
      95: land
      96: lload_3
      97: lcmp
      98: ifne          147
     101: aload_0
     102: getfield      #421                // Field mPol:[J
     105: iload         11
     107: laload
     108: getstatic     #419                // Field mBitmask:[J
     111: iload         10
     113: laload
     114: land
     115: lload_3
     116: lcmp
     117: ifne          136
     120: lload         8
     122: getstatic     #419                // Field mBitmask:[J
     125: iload         10
     127: iconst_1
     128: isub
     129: laload
     130: land
     131: lload_3
     132: lcmp
     133: ifeq          147
     136: lload         8
     138: getstatic     #419                // Field mBitmask:[J
     141: iload         10
     143: laload
     144: lxor
     145: lstore        8
     147: iinc          10, 1
     150: goto          59
     153: aload         7
     155: iload         11
     157: lload         8
     159: lastore
     160: lload_1
     161: lload         8
     163: land
     164: lload_3
     165: lcmp
     166: ifeq          187
     169: lload         5
     171: aload_0
     172: getfield      #421                // Field mPol:[J
     175: iload         11
     177: iconst_1
     178: iadd
     179: laload
     180: land
     181: lload         5
     183: lcmp
     184: ifeq          213
     187: lload_1
     188: lload         8
     190: land
     191: lload_3
     192: lcmp
     193: ifne          219
     196: lload         5
     198: aload_0
     199: getfield      #421                // Field mPol:[J
     202: iload         11
     204: iconst_1
     205: iadd
     206: laload
     207: land
     208: lload_3
     209: lcmp
     210: ifne          219
     213: lload_3
     214: lstore        8
     216: goto          223
     219: lload         5
     221: lstore        8
     223: iinc          11, 1
     226: goto          45
     229: aload_0
     230: getfield      #416                // Field mDegree:I
     233: bipush        63
     235: iand
     236: istore        11
     238: aload_0
     239: getfield      #421                // Field mPol:[J
     242: aload_0
     243: getfield      #417                // Field mLength:I
     246: iconst_1
     247: isub
     248: laload
     249: lstore        12
     251: iconst_1
     252: istore        10
     254: iload         10
     256: iload         11
     258: if_icmpge     338
     261: getstatic     #419                // Field mBitmask:[J
     264: iload         10
     266: laload
     267: lload         12
     269: land
     270: lload_3
     271: lcmp
     272: ifeq          291
     275: getstatic     #419                // Field mBitmask:[J
     278: iload         10
     280: iconst_1
     281: isub
     282: laload
     283: lload         8
     285: land
     286: lload_3
     287: lcmp
     288: ifne          332
     291: getstatic     #419                // Field mBitmask:[J
     294: iload         10
     296: laload
     297: lload         12
     299: land
     300: lload_3
     301: lcmp
     302: ifne          321
     305: getstatic     #419                // Field mBitmask:[J
     308: iload         10
     310: iconst_1
     311: isub
     312: laload
     313: lload         8
     315: land
     316: lload_3
     317: lcmp
     318: ifeq          332
     321: lload         8
     323: getstatic     #419                // Field mBitmask:[J
     326: iload         10
     328: laload
     329: lxor
     330: lstore        8
     332: iinc          10, 1
     335: goto          254
     338: aload         7
     340: aload_0
     341: getfield      #417                // Field mLength:I
     344: iconst_1
     345: isub
     346: lload         8
     348: lastore
     349: new           #348                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
     352: dup
     353: aload_0
     354: getfield      #422                // Field mField:Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;
     357: checkcast     #349                // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBField
     360: aload         7
     362: invokespecial #457                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;[J)V
     365: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: bipush        16
       3: invokevirtual #454                // Method toString:(I)Ljava/lang/String;
       6: areturn

  public java.lang.String toString(int);
    Code:
       0: ldc           #1                  // String
       2: astore_2
       3: aload_0
       4: invokespecial #448                // Method getElement:()[J
       7: astore_3
       8: aload_0
       9: getfield      #415                // Field mBit:I
      12: istore        4
      14: iload_1
      15: iconst_2
      16: if_icmpne     189
      19: iload         4
      21: iconst_1
      22: isub
      23: istore        5
      25: iload         5
      27: iflt          95
      30: aload_3
      31: aload_3
      32: arraylength
      33: iconst_1
      34: isub
      35: laload
      36: lconst_1
      37: iload         5
      39: lshl
      40: land
      41: lconst_0
      42: lcmp
      43: ifne          69
      46: new           #342                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
      53: aload_2
      54: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #3                  // String 0
      59: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: astore_2
      66: goto          89
      69: new           #342                // class java/lang/StringBuilder
      72: dup
      73: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
      76: aload_2
      77: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #4                  // String 1
      82: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: astore_2
      89: iinc          5, -1
      92: goto          25
      95: aload_3
      96: arraylength
      97: iconst_2
      98: isub
      99: istore        5
     101: iload         5
     103: iflt          186
     106: bipush        63
     108: istore        6
     110: iload         6
     112: iflt          180
     115: aload_3
     116: iload         5
     118: laload
     119: getstatic     #419                // Field mBitmask:[J
     122: iload         6
     124: laload
     125: land
     126: lconst_0
     127: lcmp
     128: ifne          154
     131: new           #342                // class java/lang/StringBuilder
     134: dup
     135: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     138: aload_2
     139: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: ldc           #3                  // String 0
     144: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: astore_2
     151: goto          174
     154: new           #342                // class java/lang/StringBuilder
     157: dup
     158: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     161: aload_2
     162: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: ldc           #4                  // String 1
     167: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: astore_2
     174: iinc          6, -1
     177: goto          110
     180: iinc          5, -1
     183: goto          101
     186: goto          836
     189: iload_1
     190: bipush        16
     192: if_icmpne     836
     195: bipush        16
     197: newarray       char
     199: dup
     200: iconst_0
     201: bipush        48
     203: castore
     204: dup
     205: iconst_1
     206: bipush        49
     208: castore
     209: dup
     210: iconst_2
     211: bipush        50
     213: castore
     214: dup
     215: iconst_3
     216: bipush        51
     218: castore
     219: dup
     220: iconst_4
     221: bipush        52
     223: castore
     224: dup
     225: iconst_5
     226: bipush        53
     228: castore
     229: dup
     230: bipush        6
     232: bipush        54
     234: castore
     235: dup
     236: bipush        7
     238: bipush        55
     240: castore
     241: dup
     242: bipush        8
     244: bipush        56
     246: castore
     247: dup
     248: bipush        9
     250: bipush        57
     252: castore
     253: dup
     254: bipush        10
     256: bipush        97
     258: castore
     259: dup
     260: bipush        11
     262: bipush        98
     264: castore
     265: dup
     266: bipush        12
     268: bipush        99
     270: castore
     271: dup
     272: bipush        13
     274: bipush        100
     276: castore
     277: dup
     278: bipush        14
     280: bipush        101
     282: castore
     283: dup
     284: bipush        15
     286: bipush        102
     288: castore
     289: astore        5
     291: aload_3
     292: arraylength
     293: iconst_1
     294: isub
     295: istore        6
     297: iload         6
     299: iflt          836
     302: new           #342                // class java/lang/StringBuilder
     305: dup
     306: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     309: aload_2
     310: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     313: aload         5
     315: aload_3
     316: iload         6
     318: laload
     319: bipush        60
     321: lushr
     322: l2i
     323: bipush        15
     325: iand
     326: caload
     327: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     330: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     333: astore_2
     334: new           #342                // class java/lang/StringBuilder
     337: dup
     338: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     341: aload_2
     342: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     345: aload         5
     347: aload_3
     348: iload         6
     350: laload
     351: bipush        56
     353: lushr
     354: l2i
     355: bipush        15
     357: iand
     358: caload
     359: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     362: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     365: astore_2
     366: new           #342                // class java/lang/StringBuilder
     369: dup
     370: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     373: aload_2
     374: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     377: aload         5
     379: aload_3
     380: iload         6
     382: laload
     383: bipush        52
     385: lushr
     386: l2i
     387: bipush        15
     389: iand
     390: caload
     391: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     394: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     397: astore_2
     398: new           #342                // class java/lang/StringBuilder
     401: dup
     402: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     405: aload_2
     406: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     409: aload         5
     411: aload_3
     412: iload         6
     414: laload
     415: bipush        48
     417: lushr
     418: l2i
     419: bipush        15
     421: iand
     422: caload
     423: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     426: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     429: astore_2
     430: new           #342                // class java/lang/StringBuilder
     433: dup
     434: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     437: aload_2
     438: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     441: aload         5
     443: aload_3
     444: iload         6
     446: laload
     447: bipush        44
     449: lushr
     450: l2i
     451: bipush        15
     453: iand
     454: caload
     455: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     458: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     461: astore_2
     462: new           #342                // class java/lang/StringBuilder
     465: dup
     466: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     469: aload_2
     470: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     473: aload         5
     475: aload_3
     476: iload         6
     478: laload
     479: bipush        40
     481: lushr
     482: l2i
     483: bipush        15
     485: iand
     486: caload
     487: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     490: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     493: astore_2
     494: new           #342                // class java/lang/StringBuilder
     497: dup
     498: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     501: aload_2
     502: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     505: aload         5
     507: aload_3
     508: iload         6
     510: laload
     511: bipush        36
     513: lushr
     514: l2i
     515: bipush        15
     517: iand
     518: caload
     519: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     522: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     525: astore_2
     526: new           #342                // class java/lang/StringBuilder
     529: dup
     530: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     533: aload_2
     534: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     537: aload         5
     539: aload_3
     540: iload         6
     542: laload
     543: bipush        32
     545: lushr
     546: l2i
     547: bipush        15
     549: iand
     550: caload
     551: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     554: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: astore_2
     558: new           #342                // class java/lang/StringBuilder
     561: dup
     562: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     565: aload_2
     566: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     569: aload         5
     571: aload_3
     572: iload         6
     574: laload
     575: bipush        28
     577: lushr
     578: l2i
     579: bipush        15
     581: iand
     582: caload
     583: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     586: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     589: astore_2
     590: new           #342                // class java/lang/StringBuilder
     593: dup
     594: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     597: aload_2
     598: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     601: aload         5
     603: aload_3
     604: iload         6
     606: laload
     607: bipush        24
     609: lushr
     610: l2i
     611: bipush        15
     613: iand
     614: caload
     615: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     618: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     621: astore_2
     622: new           #342                // class java/lang/StringBuilder
     625: dup
     626: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     629: aload_2
     630: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     633: aload         5
     635: aload_3
     636: iload         6
     638: laload
     639: bipush        20
     641: lushr
     642: l2i
     643: bipush        15
     645: iand
     646: caload
     647: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     650: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     653: astore_2
     654: new           #342                // class java/lang/StringBuilder
     657: dup
     658: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     661: aload_2
     662: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     665: aload         5
     667: aload_3
     668: iload         6
     670: laload
     671: bipush        16
     673: lushr
     674: l2i
     675: bipush        15
     677: iand
     678: caload
     679: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     682: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     685: astore_2
     686: new           #342                // class java/lang/StringBuilder
     689: dup
     690: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     693: aload_2
     694: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     697: aload         5
     699: aload_3
     700: iload         6
     702: laload
     703: bipush        12
     705: lushr
     706: l2i
     707: bipush        15
     709: iand
     710: caload
     711: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     714: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     717: astore_2
     718: new           #342                // class java/lang/StringBuilder
     721: dup
     722: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     725: aload_2
     726: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     729: aload         5
     731: aload_3
     732: iload         6
     734: laload
     735: bipush        8
     737: lushr
     738: l2i
     739: bipush        15
     741: iand
     742: caload
     743: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     746: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     749: astore_2
     750: new           #342                // class java/lang/StringBuilder
     753: dup
     754: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     757: aload_2
     758: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     761: aload         5
     763: aload_3
     764: iload         6
     766: laload
     767: iconst_4
     768: lushr
     769: l2i
     770: bipush        15
     772: iand
     773: caload
     774: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     777: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     780: astore_2
     781: new           #342                // class java/lang/StringBuilder
     784: dup
     785: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     788: aload_2
     789: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     792: aload         5
     794: aload_3
     795: iload         6
     797: laload
     798: l2i
     799: bipush        15
     801: iand
     802: caload
     803: invokevirtual #429                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     806: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     809: astore_2
     810: new           #342                // class java/lang/StringBuilder
     813: dup
     814: invokespecial #427                // Method java/lang/StringBuilder."<init>":()V
     817: aload_2
     818: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     821: ldc           #2                  // String
     823: invokevirtual #430                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     826: invokevirtual #428                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     829: astore_2
     830: iinc          6, -1
     833: goto          297
     836: aload_2
     837: areturn

  public java.math.BigInteger toFlexiBigInt();
    Code:
       0: new           #344                // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: aload_0
       6: invokevirtual #447                // Method toByteArray:()[B
       9: invokespecial #433                // Method java/math/BigInteger."<init>":(I[B)V
      12: areturn

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #416                // Field mDegree:I
       4: iconst_1
       5: isub
       6: iconst_3
       7: ishr
       8: iconst_1
       9: iadd
      10: istore_1
      11: iload_1
      12: newarray       byte
      14: astore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_1
      19: if_icmpge     63
      22: aload_2
      23: iload_1
      24: iload_3
      25: isub
      26: iconst_1
      27: isub
      28: aload_0
      29: getfield      #421                // Field mPol:[J
      32: iload_3
      33: iconst_3
      34: iushr
      35: laload
      36: ldc2_w        #118                // long 255l
      39: iload_3
      40: bipush        7
      42: iand
      43: iconst_3
      44: ishl
      45: lshl
      46: land
      47: iload_3
      48: bipush        7
      50: iand
      51: iconst_3
      52: ishl
      53: lushr
      54: l2i
      55: i2b
      56: bastore
      57: iinc          3, 1
      60: goto          17
      63: aload_2
      64: areturn

  static {};
    Code:
       0: bipush        64
       2: newarray       long
       4: dup
       5: iconst_0
       6: lconst_1
       7: lastore
       8: dup
       9: iconst_1
      10: ldc2_w        #92                 // long 2l
      13: lastore
      14: dup
      15: iconst_2
      16: ldc2_w        #96                 // long 4l
      19: lastore
      20: dup
      21: iconst_3
      22: ldc2_w        #100                // long 8l
      25: lastore
      26: dup
      27: iconst_4
      28: ldc2_w        #104                // long 16l
      31: lastore
      32: dup
      33: iconst_5
      34: ldc2_w        #108                // long 32l
      37: lastore
      38: dup
      39: bipush        6
      41: ldc2_w        #112                // long 64l
      44: lastore
      45: dup
      46: bipush        7
      48: ldc2_w        #116                // long 128l
      51: lastore
      52: dup
      53: bipush        8
      55: ldc2_w        #120                // long 256l
      58: lastore
      59: dup
      60: bipush        9
      62: ldc2_w        #124                // long 512l
      65: lastore
      66: dup
      67: bipush        10
      69: ldc2_w        #128                // long 1024l
      72: lastore
      73: dup
      74: bipush        11
      76: ldc2_w        #132                // long 2048l
      79: lastore
      80: dup
      81: bipush        12
      83: ldc2_w        #136                // long 4096l
      86: lastore
      87: dup
      88: bipush        13
      90: ldc2_w        #140                // long 8192l
      93: lastore
      94: dup
      95: bipush        14
      97: ldc2_w        #144                // long 16384l
     100: lastore
     101: dup
     102: bipush        15
     104: ldc2_w        #148                // long 32768l
     107: lastore
     108: dup
     109: bipush        16
     111: ldc2_w        #152                // long 65536l
     114: lastore
     115: dup
     116: bipush        17
     118: ldc2_w        #156                // long 131072l
     121: lastore
     122: dup
     123: bipush        18
     125: ldc2_w        #160                // long 262144l
     128: lastore
     129: dup
     130: bipush        19
     132: ldc2_w        #164                // long 524288l
     135: lastore
     136: dup
     137: bipush        20
     139: ldc2_w        #168                // long 1048576l
     142: lastore
     143: dup
     144: bipush        21
     146: ldc2_w        #172                // long 2097152l
     149: lastore
     150: dup
     151: bipush        22
     153: ldc2_w        #176                // long 4194304l
     156: lastore
     157: dup
     158: bipush        23
     160: ldc2_w        #180                // long 8388608l
     163: lastore
     164: dup
     165: bipush        24
     167: ldc2_w        #184                // long 16777216l
     170: lastore
     171: dup
     172: bipush        25
     174: ldc2_w        #188                // long 33554432l
     177: lastore
     178: dup
     179: bipush        26
     181: ldc2_w        #192                // long 67108864l
     184: lastore
     185: dup
     186: bipush        27
     188: ldc2_w        #196                // long 134217728l
     191: lastore
     192: dup
     193: bipush        28
     195: ldc2_w        #200                // long 268435456l
     198: lastore
     199: dup
     200: bipush        29
     202: ldc2_w        #204                // long 536870912l
     205: lastore
     206: dup
     207: bipush        30
     209: ldc2_w        #208                // long 1073741824l
     212: lastore
     213: dup
     214: bipush        31
     216: ldc2_w        #212                // long 2147483648l
     219: lastore
     220: dup
     221: bipush        32
     223: ldc2_w        #216                // long 4294967296l
     226: lastore
     227: dup
     228: bipush        33
     230: ldc2_w        #220                // long 8589934592l
     233: lastore
     234: dup
     235: bipush        34
     237: ldc2_w        #224                // long 17179869184l
     240: lastore
     241: dup
     242: bipush        35
     244: ldc2_w        #228                // long 34359738368l
     247: lastore
     248: dup
     249: bipush        36
     251: ldc2_w        #232                // long 68719476736l
     254: lastore
     255: dup
     256: bipush        37
     258: ldc2_w        #236                // long 137438953472l
     261: lastore
     262: dup
     263: bipush        38
     265: ldc2_w        #240                // long 274877906944l
     268: lastore
     269: dup
     270: bipush        39
     272: ldc2_w        #244                // long 549755813888l
     275: lastore
     276: dup
     277: bipush        40
     279: ldc2_w        #248                // long 1099511627776l
     282: lastore
     283: dup
     284: bipush        41
     286: ldc2_w        #252                // long 2199023255552l
     289: lastore
     290: dup
     291: bipush        42
     293: ldc2_w        #256                // long 4398046511104l
     296: lastore
     297: dup
     298: bipush        43
     300: ldc2_w        #260                // long 8796093022208l
     303: lastore
     304: dup
     305: bipush        44
     307: ldc2_w        #264                // long 17592186044416l
     310: lastore
     311: dup
     312: bipush        45
     314: ldc2_w        #268                // long 35184372088832l
     317: lastore
     318: dup
     319: bipush        46
     321: ldc2_w        #272                // long 70368744177664l
     324: lastore
     325: dup
     326: bipush        47
     328: ldc2_w        #276                // long 140737488355328l
     331: lastore
     332: dup
     333: bipush        48
     335: ldc2_w        #280                // long 281474976710656l
     338: lastore
     339: dup
     340: bipush        49
     342: ldc2_w        #284                // long 562949953421312l
     345: lastore
     346: dup
     347: bipush        50
     349: ldc2_w        #288                // long 1125899906842624l
     352: lastore
     353: dup
     354: bipush        51
     356: ldc2_w        #292                // long 2251799813685248l
     359: lastore
     360: dup
     361: bipush        52
     363: ldc2_w        #296                // long 4503599627370496l
     366: lastore
     367: dup
     368: bipush        53
     370: ldc2_w        #300                // long 9007199254740992l
     373: lastore
     374: dup
     375: bipush        54
     377: ldc2_w        #304                // long 18014398509481984l
     380: lastore
     381: dup
     382: bipush        55
     384: ldc2_w        #308                // long 36028797018963968l
     387: lastore
     388: dup
     389: bipush        56
     391: ldc2_w        #312                // long 72057594037927936l
     394: lastore
     395: dup
     396: bipush        57
     398: ldc2_w        #316                // long 144115188075855872l
     401: lastore
     402: dup
     403: bipush        58
     405: ldc2_w        #320                // long 288230376151711744l
     408: lastore
     409: dup
     410: bipush        59
     412: ldc2_w        #324                // long 576460752303423488l
     415: lastore
     416: dup
     417: bipush        60
     419: ldc2_w        #328                // long 1152921504606846976l
     422: lastore
     423: dup
     424: bipush        61
     426: ldc2_w        #332                // long 2305843009213693952l
     429: lastore
     430: dup
     431: bipush        62
     433: ldc2_w        #336                // long 4611686018427387904l
     436: lastore
     437: dup
     438: bipush        63
     440: ldc2_w        #88                 // long -9223372036854775808l
     443: lastore
     444: putstatic     #419                // Field mBitmask:[J
     447: bipush        64
     449: newarray       long
     451: dup
     452: iconst_0
     453: lconst_1
     454: lastore
     455: dup
     456: iconst_1
     457: ldc2_w        #94                 // long 3l
     460: lastore
     461: dup
     462: iconst_2
     463: ldc2_w        #98                 // long 7l
     466: lastore
     467: dup
     468: iconst_3
     469: ldc2_w        #102                // long 15l
     472: lastore
     473: dup
     474: iconst_4
     475: ldc2_w        #106                // long 31l
     478: lastore
     479: dup
     480: iconst_5
     481: ldc2_w        #110                // long 63l
     484: lastore
     485: dup
     486: bipush        6
     488: ldc2_w        #114                // long 127l
     491: lastore
     492: dup
     493: bipush        7
     495: ldc2_w        #118                // long 255l
     498: lastore
     499: dup
     500: bipush        8
     502: ldc2_w        #122                // long 511l
     505: lastore
     506: dup
     507: bipush        9
     509: ldc2_w        #126                // long 1023l
     512: lastore
     513: dup
     514: bipush        10
     516: ldc2_w        #130                // long 2047l
     519: lastore
     520: dup
     521: bipush        11
     523: ldc2_w        #134                // long 4095l
     526: lastore
     527: dup
     528: bipush        12
     530: ldc2_w        #138                // long 8191l
     533: lastore
     534: dup
     535: bipush        13
     537: ldc2_w        #142                // long 16383l
     540: lastore
     541: dup
     542: bipush        14
     544: ldc2_w        #146                // long 32767l
     547: lastore
     548: dup
     549: bipush        15
     551: ldc2_w        #150                // long 65535l
     554: lastore
     555: dup
     556: bipush        16
     558: ldc2_w        #154                // long 131071l
     561: lastore
     562: dup
     563: bipush        17
     565: ldc2_w        #158                // long 262143l
     568: lastore
     569: dup
     570: bipush        18
     572: ldc2_w        #162                // long 524287l
     575: lastore
     576: dup
     577: bipush        19
     579: ldc2_w        #166                // long 1048575l
     582: lastore
     583: dup
     584: bipush        20
     586: ldc2_w        #170                // long 2097151l
     589: lastore
     590: dup
     591: bipush        21
     593: ldc2_w        #174                // long 4194303l
     596: lastore
     597: dup
     598: bipush        22
     600: ldc2_w        #178                // long 8388607l
     603: lastore
     604: dup
     605: bipush        23
     607: ldc2_w        #182                // long 16777215l
     610: lastore
     611: dup
     612: bipush        24
     614: ldc2_w        #186                // long 33554431l
     617: lastore
     618: dup
     619: bipush        25
     621: ldc2_w        #190                // long 67108863l
     624: lastore
     625: dup
     626: bipush        26
     628: ldc2_w        #194                // long 134217727l
     631: lastore
     632: dup
     633: bipush        27
     635: ldc2_w        #198                // long 268435455l
     638: lastore
     639: dup
     640: bipush        28
     642: ldc2_w        #202                // long 536870911l
     645: lastore
     646: dup
     647: bipush        29
     649: ldc2_w        #206                // long 1073741823l
     652: lastore
     653: dup
     654: bipush        30
     656: ldc2_w        #210                // long 2147483647l
     659: lastore
     660: dup
     661: bipush        31
     663: ldc2_w        #214                // long 4294967295l
     666: lastore
     667: dup
     668: bipush        32
     670: ldc2_w        #218                // long 8589934591l
     673: lastore
     674: dup
     675: bipush        33
     677: ldc2_w        #222                // long 17179869183l
     680: lastore
     681: dup
     682: bipush        34
     684: ldc2_w        #226                // long 34359738367l
     687: lastore
     688: dup
     689: bipush        35
     691: ldc2_w        #230                // long 68719476735l
     694: lastore
     695: dup
     696: bipush        36
     698: ldc2_w        #234                // long 137438953471l
     701: lastore
     702: dup
     703: bipush        37
     705: ldc2_w        #238                // long 274877906943l
     708: lastore
     709: dup
     710: bipush        38
     712: ldc2_w        #242                // long 549755813887l
     715: lastore
     716: dup
     717: bipush        39
     719: ldc2_w        #246                // long 1099511627775l
     722: lastore
     723: dup
     724: bipush        40
     726: ldc2_w        #250                // long 2199023255551l
     729: lastore
     730: dup
     731: bipush        41
     733: ldc2_w        #254                // long 4398046511103l
     736: lastore
     737: dup
     738: bipush        42
     740: ldc2_w        #258                // long 8796093022207l
     743: lastore
     744: dup
     745: bipush        43
     747: ldc2_w        #262                // long 17592186044415l
     750: lastore
     751: dup
     752: bipush        44
     754: ldc2_w        #266                // long 35184372088831l
     757: lastore
     758: dup
     759: bipush        45
     761: ldc2_w        #270                // long 70368744177663l
     764: lastore
     765: dup
     766: bipush        46
     768: ldc2_w        #274                // long 140737488355327l
     771: lastore
     772: dup
     773: bipush        47
     775: ldc2_w        #278                // long 281474976710655l
     778: lastore
     779: dup
     780: bipush        48
     782: ldc2_w        #282                // long 562949953421311l
     785: lastore
     786: dup
     787: bipush        49
     789: ldc2_w        #286                // long 1125899906842623l
     792: lastore
     793: dup
     794: bipush        50
     796: ldc2_w        #290                // long 2251799813685247l
     799: lastore
     800: dup
     801: bipush        51
     803: ldc2_w        #294                // long 4503599627370495l
     806: lastore
     807: dup
     808: bipush        52
     810: ldc2_w        #298                // long 9007199254740991l
     813: lastore
     814: dup
     815: bipush        53
     817: ldc2_w        #302                // long 18014398509481983l
     820: lastore
     821: dup
     822: bipush        54
     824: ldc2_w        #306                // long 36028797018963967l
     827: lastore
     828: dup
     829: bipush        55
     831: ldc2_w        #310                // long 72057594037927935l
     834: lastore
     835: dup
     836: bipush        56
     838: ldc2_w        #314                // long 144115188075855871l
     841: lastore
     842: dup
     843: bipush        57
     845: ldc2_w        #318                // long 288230376151711743l
     848: lastore
     849: dup
     850: bipush        58
     852: ldc2_w        #322                // long 576460752303423487l
     855: lastore
     856: dup
     857: bipush        59
     859: ldc2_w        #326                // long 1152921504606846975l
     862: lastore
     863: dup
     864: bipush        60
     866: ldc2_w        #330                // long 2305843009213693951l
     869: lastore
     870: dup
     871: bipush        61
     873: ldc2_w        #334                // long 4611686018427387903l
     876: lastore
     877: dup
     878: bipush        62
     880: ldc2_w        #338                // long 9223372036854775807l
     883: lastore
     884: dup
     885: bipush        63
     887: ldc2_w        #90                 // long -1l
     890: lastore
     891: putstatic     #420                // Field mMaxmask:[J
     894: sipush        384
     897: newarray       int
     899: dup
     900: iconst_0
     901: iconst_0
     902: iastore
     903: dup
     904: iconst_1
     905: iconst_0
     906: iastore
     907: dup
     908: iconst_2
     909: iconst_0
     910: iastore
     911: dup
     912: iconst_3
     913: iconst_0
     914: iastore
     915: dup
     916: iconst_4
     917: iconst_0
     918: iastore
     919: dup
     920: iconst_5
     921: iconst_0
     922: iastore
     923: dup
     924: bipush        6
     926: iconst_0
     927: iastore
     928: dup
     929: bipush        7
     931: iconst_0
     932: iastore
     933: dup
     934: bipush        8
     936: iconst_0
     937: iastore
     938: dup
     939: bipush        9
     941: iconst_0
     942: iastore
     943: dup
     944: bipush        10
     946: iconst_0
     947: iastore
     948: dup
     949: bipush        11
     951: iconst_0
     952: iastore
     953: dup
     954: bipush        12
     956: iconst_0
     957: iastore
     958: dup
     959: bipush        13
     961: iconst_0
     962: iastore
     963: dup
     964: bipush        14
     966: iconst_0
     967: iastore
     968: dup
     969: bipush        15
     971: iconst_0
     972: iastore
     973: dup
     974: bipush        16
     976: iconst_0
     977: iastore
     978: dup
     979: bipush        17
     981: iconst_0
     982: iastore
     983: dup
     984: bipush        18
     986: iconst_0
     987: iastore
     988: dup
     989: bipush        19
     991: iconst_0
     992: iastore
     993: dup
     994: bipush        20
     996: iconst_0
     997: iastore
     998: dup
     999: bipush        21
    1001: iconst_0
    1002: iastore
    1003: dup
    1004: bipush        22
    1006: iconst_0
    1007: iastore
    1008: dup
    1009: bipush        23
    1011: iconst_0
    1012: iastore
    1013: dup
    1014: bipush        24
    1016: iconst_0
    1017: iastore
    1018: dup
    1019: bipush        25
    1021: iconst_0
    1022: iastore
    1023: dup
    1024: bipush        26
    1026: iconst_0
    1027: iastore
    1028: dup
    1029: bipush        27
    1031: iconst_0
    1032: iastore
    1033: dup
    1034: bipush        28
    1036: iconst_0
    1037: iastore
    1038: dup
    1039: bipush        29
    1041: iconst_0
    1042: iastore
    1043: dup
    1044: bipush        30
    1046: iconst_0
    1047: iastore
    1048: dup
    1049: bipush        31
    1051: iconst_0
    1052: iastore
    1053: dup
    1054: bipush        32
    1056: iconst_0
    1057: iastore
    1058: dup
    1059: bipush        33
    1061: iconst_0
    1062: iastore
    1063: dup
    1064: bipush        34
    1066: iconst_0
    1067: iastore
    1068: dup
    1069: bipush        35
    1071: iconst_0
    1072: iastore
    1073: dup
    1074: bipush        36
    1076: iconst_0
    1077: iastore
    1078: dup
    1079: bipush        37
    1081: iconst_0
    1082: iastore
    1083: dup
    1084: bipush        38
    1086: iconst_0
    1087: iastore
    1088: dup
    1089: bipush        39
    1091: iconst_0
    1092: iastore
    1093: dup
    1094: bipush        40
    1096: iconst_0
    1097: iastore
    1098: dup
    1099: bipush        41
    1101: iconst_0
    1102: iastore
    1103: dup
    1104: bipush        42
    1106: iconst_0
    1107: iastore
    1108: dup
    1109: bipush        43
    1111: iconst_0
    1112: iastore
    1113: dup
    1114: bipush        44
    1116: iconst_0
    1117: iastore
    1118: dup
    1119: bipush        45
    1121: iconst_0
    1122: iastore
    1123: dup
    1124: bipush        46
    1126: iconst_0
    1127: iastore
    1128: dup
    1129: bipush        47
    1131: iconst_0
    1132: iastore
    1133: dup
    1134: bipush        48
    1136: iconst_0
    1137: iastore
    1138: dup
    1139: bipush        49
    1141: iconst_0
    1142: iastore
    1143: dup
    1144: bipush        50
    1146: iconst_0
    1147: iastore
    1148: dup
    1149: bipush        51
    1151: iconst_0
    1152: iastore
    1153: dup
    1154: bipush        52
    1156: iconst_0
    1157: iastore
    1158: dup
    1159: bipush        53
    1161: iconst_0
    1162: iastore
    1163: dup
    1164: bipush        54
    1166: iconst_0
    1167: iastore
    1168: dup
    1169: bipush        55
    1171: iconst_0
    1172: iastore
    1173: dup
    1174: bipush        56
    1176: iconst_0
    1177: iastore
    1178: dup
    1179: bipush        57
    1181: iconst_0
    1182: iastore
    1183: dup
    1184: bipush        58
    1186: iconst_0
    1187: iastore
    1188: dup
    1189: bipush        59
    1191: iconst_0
    1192: iastore
    1193: dup
    1194: bipush        60
    1196: iconst_0
    1197: iastore
    1198: dup
    1199: bipush        61
    1201: iconst_0
    1202: iastore
    1203: dup
    1204: bipush        62
    1206: iconst_0
    1207: iastore
    1208: dup
    1209: bipush        63
    1211: iconst_0
    1212: iastore
    1213: dup
    1214: bipush        64
    1216: iconst_1
    1217: iastore
    1218: dup
    1219: bipush        65
    1221: iconst_1
    1222: iastore
    1223: dup
    1224: bipush        66
    1226: iconst_1
    1227: iastore
    1228: dup
    1229: bipush        67
    1231: iconst_1
    1232: iastore
    1233: dup
    1234: bipush        68
    1236: iconst_1
    1237: iastore
    1238: dup
    1239: bipush        69
    1241: iconst_1
    1242: iastore
    1243: dup
    1244: bipush        70
    1246: iconst_1
    1247: iastore
    1248: dup
    1249: bipush        71
    1251: iconst_1
    1252: iastore
    1253: dup
    1254: bipush        72
    1256: iconst_1
    1257: iastore
    1258: dup
    1259: bipush        73
    1261: iconst_1
    1262: iastore
    1263: dup
    1264: bipush        74
    1266: iconst_1
    1267: iastore
    1268: dup
    1269: bipush        75
    1271: iconst_1
    1272: iastore
    1273: dup
    1274: bipush        76
    1276: iconst_1
    1277: iastore
    1278: dup
    1279: bipush        77
    1281: iconst_1
    1282: iastore
    1283: dup
    1284: bipush        78
    1286: iconst_1
    1287: iastore
    1288: dup
    1289: bipush        79
    1291: iconst_1
    1292: iastore
    1293: dup
    1294: bipush        80
    1296: iconst_1
    1297: iastore
    1298: dup
    1299: bipush        81
    1301: iconst_1
    1302: iastore
    1303: dup
    1304: bipush        82
    1306: iconst_1
    1307: iastore
    1308: dup
    1309: bipush        83
    1311: iconst_1
    1312: iastore
    1313: dup
    1314: bipush        84
    1316: iconst_1
    1317: iastore
    1318: dup
    1319: bipush        85
    1321: iconst_1
    1322: iastore
    1323: dup
    1324: bipush        86
    1326: iconst_1
    1327: iastore
    1328: dup
    1329: bipush        87
    1331: iconst_1
    1332: iastore
    1333: dup
    1334: bipush        88
    1336: iconst_1
    1337: iastore
    1338: dup
    1339: bipush        89
    1341: iconst_1
    1342: iastore
    1343: dup
    1344: bipush        90
    1346: iconst_1
    1347: iastore
    1348: dup
    1349: bipush        91
    1351: iconst_1
    1352: iastore
    1353: dup
    1354: bipush        92
    1356: iconst_1
    1357: iastore
    1358: dup
    1359: bipush        93
    1361: iconst_1
    1362: iastore
    1363: dup
    1364: bipush        94
    1366: iconst_1
    1367: iastore
    1368: dup
    1369: bipush        95
    1371: iconst_1
    1372: iastore
    1373: dup
    1374: bipush        96
    1376: iconst_1
    1377: iastore
    1378: dup
    1379: bipush        97
    1381: iconst_1
    1382: iastore
    1383: dup
    1384: bipush        98
    1386: iconst_1
    1387: iastore
    1388: dup
    1389: bipush        99
    1391: iconst_1
    1392: iastore
    1393: dup
    1394: bipush        100
    1396: iconst_1
    1397: iastore
    1398: dup
    1399: bipush        101
    1401: iconst_1
    1402: iastore
    1403: dup
    1404: bipush        102
    1406: iconst_1
    1407: iastore
    1408: dup
    1409: bipush        103
    1411: iconst_1
    1412: iastore
    1413: dup
    1414: bipush        104
    1416: iconst_1
    1417: iastore
    1418: dup
    1419: bipush        105
    1421: iconst_1
    1422: iastore
    1423: dup
    1424: bipush        106
    1426: iconst_1
    1427: iastore
    1428: dup
    1429: bipush        107
    1431: iconst_1
    1432: iastore
    1433: dup
    1434: bipush        108
    1436: iconst_1
    1437: iastore
    1438: dup
    1439: bipush        109
    1441: iconst_1
    1442: iastore
    1443: dup
    1444: bipush        110
    1446: iconst_1
    1447: iastore
    1448: dup
    1449: bipush        111
    1451: iconst_1
    1452: iastore
    1453: dup
    1454: bipush        112
    1456: iconst_1
    1457: iastore
    1458: dup
    1459: bipush        113
    1461: iconst_1
    1462: iastore
    1463: dup
    1464: bipush        114
    1466: iconst_1
    1467: iastore
    1468: dup
    1469: bipush        115
    1471: iconst_1
    1472: iastore
    1473: dup
    1474: bipush        116
    1476: iconst_1
    1477: iastore
    1478: dup
    1479: bipush        117
    1481: iconst_1
    1482: iastore
    1483: dup
    1484: bipush        118
    1486: iconst_1
    1487: iastore
    1488: dup
    1489: bipush        119
    1491: iconst_1
    1492: iastore
    1493: dup
    1494: bipush        120
    1496: iconst_1
    1497: iastore
    1498: dup
    1499: bipush        121
    1501: iconst_1
    1502: iastore
    1503: dup
    1504: bipush        122
    1506: iconst_1
    1507: iastore
    1508: dup
    1509: bipush        123
    1511: iconst_1
    1512: iastore
    1513: dup
    1514: bipush        124
    1516: iconst_1
    1517: iastore
    1518: dup
    1519: bipush        125
    1521: iconst_1
    1522: iastore
    1523: dup
    1524: bipush        126
    1526: iconst_1
    1527: iastore
    1528: dup
    1529: bipush        127
    1531: iconst_1
    1532: iastore
    1533: dup
    1534: sipush        128
    1537: iconst_2
    1538: iastore
    1539: dup
    1540: sipush        129
    1543: iconst_2
    1544: iastore
    1545: dup
    1546: sipush        130
    1549: iconst_2
    1550: iastore
    1551: dup
    1552: sipush        131
    1555: iconst_2
    1556: iastore
    1557: dup
    1558: sipush        132
    1561: iconst_2
    1562: iastore
    1563: dup
    1564: sipush        133
    1567: iconst_2
    1568: iastore
    1569: dup
    1570: sipush        134
    1573: iconst_2
    1574: iastore
    1575: dup
    1576: sipush        135
    1579: iconst_2
    1580: iastore
    1581: dup
    1582: sipush        136
    1585: iconst_2
    1586: iastore
    1587: dup
    1588: sipush        137
    1591: iconst_2
    1592: iastore
    1593: dup
    1594: sipush        138
    1597: iconst_2
    1598: iastore
    1599: dup
    1600: sipush        139
    1603: iconst_2
    1604: iastore
    1605: dup
    1606: sipush        140
    1609: iconst_2
    1610: iastore
    1611: dup
    1612: sipush        141
    1615: iconst_2
    1616: iastore
    1617: dup
    1618: sipush        142
    1621: iconst_2
    1622: iastore
    1623: dup
    1624: sipush        143
    1627: iconst_2
    1628: iastore
    1629: dup
    1630: sipush        144
    1633: iconst_2
    1634: iastore
    1635: dup
    1636: sipush        145
    1639: iconst_2
    1640: iastore
    1641: dup
    1642: sipush        146
    1645: iconst_2
    1646: iastore
    1647: dup
    1648: sipush        147
    1651: iconst_2
    1652: iastore
    1653: dup
    1654: sipush        148
    1657: iconst_2
    1658: iastore
    1659: dup
    1660: sipush        149
    1663: iconst_2
    1664: iastore
    1665: dup
    1666: sipush        150
    1669: iconst_2
    1670: iastore
    1671: dup
    1672: sipush        151
    1675: iconst_2
    1676: iastore
    1677: dup
    1678: sipush        152
    1681: iconst_2
    1682: iastore
    1683: dup
    1684: sipush        153
    1687: iconst_2
    1688: iastore
    1689: dup
    1690: sipush        154
    1693: iconst_2
    1694: iastore
    1695: dup
    1696: sipush        155
    1699: iconst_2
    1700: iastore
    1701: dup
    1702: sipush        156
    1705: iconst_2
    1706: iastore
    1707: dup
    1708: sipush        157
    1711: iconst_2
    1712: iastore
    1713: dup
    1714: sipush        158
    1717: iconst_2
    1718: iastore
    1719: dup
    1720: sipush        159
    1723: iconst_2
    1724: iastore
    1725: dup
    1726: sipush        160
    1729: iconst_2
    1730: iastore
    1731: dup
    1732: sipush        161
    1735: iconst_2
    1736: iastore
    1737: dup
    1738: sipush        162
    1741: iconst_2
    1742: iastore
    1743: dup
    1744: sipush        163
    1747: iconst_2
    1748: iastore
    1749: dup
    1750: sipush        164
    1753: iconst_2
    1754: iastore
    1755: dup
    1756: sipush        165
    1759: iconst_2
    1760: iastore
    1761: dup
    1762: sipush        166
    1765: iconst_2
    1766: iastore
    1767: dup
    1768: sipush        167
    1771: iconst_2
    1772: iastore
    1773: dup
    1774: sipush        168
    1777: iconst_2
    1778: iastore
    1779: dup
    1780: sipush        169
    1783: iconst_2
    1784: iastore
    1785: dup
    1786: sipush        170
    1789: iconst_2
    1790: iastore
    1791: dup
    1792: sipush        171
    1795: iconst_2
    1796: iastore
    1797: dup
    1798: sipush        172
    1801: iconst_2
    1802: iastore
    1803: dup
    1804: sipush        173
    1807: iconst_2
    1808: iastore
    1809: dup
    1810: sipush        174
    1813: iconst_2
    1814: iastore
    1815: dup
    1816: sipush        175
    1819: iconst_2
    1820: iastore
    1821: dup
    1822: sipush        176
    1825: iconst_2
    1826: iastore
    1827: dup
    1828: sipush        177
    1831: iconst_2
    1832: iastore
    1833: dup
    1834: sipush        178
    1837: iconst_2
    1838: iastore
    1839: dup
    1840: sipush        179
    1843: iconst_2
    1844: iastore
    1845: dup
    1846: sipush        180
    1849: iconst_2
    1850: iastore
    1851: dup
    1852: sipush        181
    1855: iconst_2
    1856: iastore
    1857: dup
    1858: sipush        182
    1861: iconst_2
    1862: iastore
    1863: dup
    1864: sipush        183
    1867: iconst_2
    1868: iastore
    1869: dup
    1870: sipush        184
    1873: iconst_2
    1874: iastore
    1875: dup
    1876: sipush        185
    1879: iconst_2
    1880: iastore
    1881: dup
    1882: sipush        186
    1885: iconst_2
    1886: iastore
    1887: dup
    1888: sipush        187
    1891: iconst_2
    1892: iastore
    1893: dup
    1894: sipush        188
    1897: iconst_2
    1898: iastore
    1899: dup
    1900: sipush        189
    1903: iconst_2
    1904: iastore
    1905: dup
    1906: sipush        190
    1909: iconst_2
    1910: iastore
    1911: dup
    1912: sipush        191
    1915: iconst_2
    1916: iastore
    1917: dup
    1918: sipush        192
    1921: iconst_3
    1922: iastore
    1923: dup
    1924: sipush        193
    1927: iconst_3
    1928: iastore
    1929: dup
    1930: sipush        194
    1933: iconst_3
    1934: iastore
    1935: dup
    1936: sipush        195
    1939: iconst_3
    1940: iastore
    1941: dup
    1942: sipush        196
    1945: iconst_3
    1946: iastore
    1947: dup
    1948: sipush        197
    1951: iconst_3
    1952: iastore
    1953: dup
    1954: sipush        198
    1957: iconst_3
    1958: iastore
    1959: dup
    1960: sipush        199
    1963: iconst_3
    1964: iastore
    1965: dup
    1966: sipush        200
    1969: iconst_3
    1970: iastore
    1971: dup
    1972: sipush        201
    1975: iconst_3
    1976: iastore
    1977: dup
    1978: sipush        202
    1981: iconst_3
    1982: iastore
    1983: dup
    1984: sipush        203
    1987: iconst_3
    1988: iastore
    1989: dup
    1990: sipush        204
    1993: iconst_3
    1994: iastore
    1995: dup
    1996: sipush        205
    1999: iconst_3
    2000: iastore
    2001: dup
    2002: sipush        206
    2005: iconst_3
    2006: iastore
    2007: dup
    2008: sipush        207
    2011: iconst_3
    2012: iastore
    2013: dup
    2014: sipush        208
    2017: iconst_3
    2018: iastore
    2019: dup
    2020: sipush        209
    2023: iconst_3
    2024: iastore
    2025: dup
    2026: sipush        210
    2029: iconst_3
    2030: iastore
    2031: dup
    2032: sipush        211
    2035: iconst_3
    2036: iastore
    2037: dup
    2038: sipush        212
    2041: iconst_3
    2042: iastore
    2043: dup
    2044: sipush        213
    2047: iconst_3
    2048: iastore
    2049: dup
    2050: sipush        214
    2053: iconst_3
    2054: iastore
    2055: dup
    2056: sipush        215
    2059: iconst_3
    2060: iastore
    2061: dup
    2062: sipush        216
    2065: iconst_3
    2066: iastore
    2067: dup
    2068: sipush        217
    2071: iconst_3
    2072: iastore
    2073: dup
    2074: sipush        218
    2077: iconst_3
    2078: iastore
    2079: dup
    2080: sipush        219
    2083: iconst_3
    2084: iastore
    2085: dup
    2086: sipush        220
    2089: iconst_3
    2090: iastore
    2091: dup
    2092: sipush        221
    2095: iconst_3
    2096: iastore
    2097: dup
    2098: sipush        222
    2101: iconst_3
    2102: iastore
    2103: dup
    2104: sipush        223
    2107: iconst_3
    2108: iastore
    2109: dup
    2110: sipush        224
    2113: iconst_3
    2114: iastore
    2115: dup
    2116: sipush        225
    2119: iconst_3
    2120: iastore
    2121: dup
    2122: sipush        226
    2125: iconst_3
    2126: iastore
    2127: dup
    2128: sipush        227
    2131: iconst_3
    2132: iastore
    2133: dup
    2134: sipush        228
    2137: iconst_3
    2138: iastore
    2139: dup
    2140: sipush        229
    2143: iconst_3
    2144: iastore
    2145: dup
    2146: sipush        230
    2149: iconst_3
    2150: iastore
    2151: dup
    2152: sipush        231
    2155: iconst_3
    2156: iastore
    2157: dup
    2158: sipush        232
    2161: iconst_3
    2162: iastore
    2163: dup
    2164: sipush        233
    2167: iconst_3
    2168: iastore
    2169: dup
    2170: sipush        234
    2173: iconst_3
    2174: iastore
    2175: dup
    2176: sipush        235
    2179: iconst_3
    2180: iastore
    2181: dup
    2182: sipush        236
    2185: iconst_3
    2186: iastore
    2187: dup
    2188: sipush        237
    2191: iconst_3
    2192: iastore
    2193: dup
    2194: sipush        238
    2197: iconst_3
    2198: iastore
    2199: dup
    2200: sipush        239
    2203: iconst_3
    2204: iastore
    2205: dup
    2206: sipush        240
    2209: iconst_3
    2210: iastore
    2211: dup
    2212: sipush        241
    2215: iconst_3
    2216: iastore
    2217: dup
    2218: sipush        242
    2221: iconst_3
    2222: iastore
    2223: dup
    2224: sipush        243
    2227: iconst_3
    2228: iastore
    2229: dup
    2230: sipush        244
    2233: iconst_3
    2234: iastore
    2235: dup
    2236: sipush        245
    2239: iconst_3
    2240: iastore
    2241: dup
    2242: sipush        246
    2245: iconst_3
    2246: iastore
    2247: dup
    2248: sipush        247
    2251: iconst_3
    2252: iastore
    2253: dup
    2254: sipush        248
    2257: iconst_3
    2258: iastore
    2259: dup
    2260: sipush        249
    2263: iconst_3
    2264: iastore
    2265: dup
    2266: sipush        250
    2269: iconst_3
    2270: iastore
    2271: dup
    2272: sipush        251
    2275: iconst_3
    2276: iastore
    2277: dup
    2278: sipush        252
    2281: iconst_3
    2282: iastore
    2283: dup
    2284: sipush        253
    2287: iconst_3
    2288: iastore
    2289: dup
    2290: sipush        254
    2293: iconst_3
    2294: iastore
    2295: dup
    2296: sipush        255
    2299: iconst_3
    2300: iastore
    2301: dup
    2302: sipush        256
    2305: iconst_4
    2306: iastore
    2307: dup
    2308: sipush        257
    2311: iconst_4
    2312: iastore
    2313: dup
    2314: sipush        258
    2317: iconst_4
    2318: iastore
    2319: dup
    2320: sipush        259
    2323: iconst_4
    2324: iastore
    2325: dup
    2326: sipush        260
    2329: iconst_4
    2330: iastore
    2331: dup
    2332: sipush        261
    2335: iconst_4
    2336: iastore
    2337: dup
    2338: sipush        262
    2341: iconst_4
    2342: iastore
    2343: dup
    2344: sipush        263
    2347: iconst_4
    2348: iastore
    2349: dup
    2350: sipush        264
    2353: iconst_4
    2354: iastore
    2355: dup
    2356: sipush        265
    2359: iconst_4
    2360: iastore
    2361: dup
    2362: sipush        266
    2365: iconst_4
    2366: iastore
    2367: dup
    2368: sipush        267
    2371: iconst_4
    2372: iastore
    2373: dup
    2374: sipush        268
    2377: iconst_4
    2378: iastore
    2379: dup
    2380: sipush        269
    2383: iconst_4
    2384: iastore
    2385: dup
    2386: sipush        270
    2389: iconst_4
    2390: iastore
    2391: dup
    2392: sipush        271
    2395: iconst_4
    2396: iastore
    2397: dup
    2398: sipush        272
    2401: iconst_4
    2402: iastore
    2403: dup
    2404: sipush        273
    2407: iconst_4
    2408: iastore
    2409: dup
    2410: sipush        274
    2413: iconst_4
    2414: iastore
    2415: dup
    2416: sipush        275
    2419: iconst_4
    2420: iastore
    2421: dup
    2422: sipush        276
    2425: iconst_4
    2426: iastore
    2427: dup
    2428: sipush        277
    2431: iconst_4
    2432: iastore
    2433: dup
    2434: sipush        278
    2437: iconst_4
    2438: iastore
    2439: dup
    2440: sipush        279
    2443: iconst_4
    2444: iastore
    2445: dup
    2446: sipush        280
    2449: iconst_4
    2450: iastore
    2451: dup
    2452: sipush        281
    2455: iconst_4
    2456: iastore
    2457: dup
    2458: sipush        282
    2461: iconst_4
    2462: iastore
    2463: dup
    2464: sipush        283
    2467: iconst_4
    2468: iastore
    2469: dup
    2470: sipush        284
    2473: iconst_4
    2474: iastore
    2475: dup
    2476: sipush        285
    2479: iconst_4
    2480: iastore
    2481: dup
    2482: sipush        286
    2485: iconst_4
    2486: iastore
    2487: dup
    2488: sipush        287
    2491: iconst_4
    2492: iastore
    2493: dup
    2494: sipush        288
    2497: iconst_4
    2498: iastore
    2499: dup
    2500: sipush        289
    2503: iconst_4
    2504: iastore
    2505: dup
    2506: sipush        290
    2509: iconst_4
    2510: iastore
    2511: dup
    2512: sipush        291
    2515: iconst_4
    2516: iastore
    2517: dup
    2518: sipush        292
    2521: iconst_4
    2522: iastore
    2523: dup
    2524: sipush        293
    2527: iconst_4
    2528: iastore
    2529: dup
    2530: sipush        294
    2533: iconst_4
    2534: iastore
    2535: dup
    2536: sipush        295
    2539: iconst_4
    2540: iastore
    2541: dup
    2542: sipush        296
    2545: iconst_4
    2546: iastore
    2547: dup
    2548: sipush        297
    2551: iconst_4
    2552: iastore
    2553: dup
    2554: sipush        298
    2557: iconst_4
    2558: iastore
    2559: dup
    2560: sipush        299
    2563: iconst_4
    2564: iastore
    2565: dup
    2566: sipush        300
    2569: iconst_4
    2570: iastore
    2571: dup
    2572: sipush        301
    2575: iconst_4
    2576: iastore
    2577: dup
    2578: sipush        302
    2581: iconst_4
    2582: iastore
    2583: dup
    2584: sipush        303
    2587: iconst_4
    2588: iastore
    2589: dup
    2590: sipush        304
    2593: iconst_4
    2594: iastore
    2595: dup
    2596: sipush        305
    2599: iconst_4
    2600: iastore
    2601: dup
    2602: sipush        306
    2605: iconst_4
    2606: iastore
    2607: dup
    2608: sipush        307
    2611: iconst_4
    2612: iastore
    2613: dup
    2614: sipush        308
    2617: iconst_4
    2618: iastore
    2619: dup
    2620: sipush        309
    2623: iconst_4
    2624: iastore
    2625: dup
    2626: sipush        310
    2629: iconst_4
    2630: iastore
    2631: dup
    2632: sipush        311
    2635: iconst_4
    2636: iastore
    2637: dup
    2638: sipush        312
    2641: iconst_4
    2642: iastore
    2643: dup
    2644: sipush        313
    2647: iconst_4
    2648: iastore
    2649: dup
    2650: sipush        314
    2653: iconst_4
    2654: iastore
    2655: dup
    2656: sipush        315
    2659: iconst_4
    2660: iastore
    2661: dup
    2662: sipush        316
    2665: iconst_4
    2666: iastore
    2667: dup
    2668: sipush        317
    2671: iconst_4
    2672: iastore
    2673: dup
    2674: sipush        318
    2677: iconst_4
    2678: iastore
    2679: dup
    2680: sipush        319
    2683: iconst_4
    2684: iastore
    2685: dup
    2686: sipush        320
    2689: iconst_5
    2690: iastore
    2691: dup
    2692: sipush        321
    2695: iconst_5
    2696: iastore
    2697: dup
    2698: sipush        322
    2701: iconst_5
    2702: iastore
    2703: dup
    2704: sipush        323
    2707: iconst_5
    2708: iastore
    2709: dup
    2710: sipush        324
    2713: iconst_5
    2714: iastore
    2715: dup
    2716: sipush        325
    2719: iconst_5
    2720: iastore
    2721: dup
    2722: sipush        326
    2725: iconst_5
    2726: iastore
    2727: dup
    2728: sipush        327
    2731: iconst_5
    2732: iastore
    2733: dup
    2734: sipush        328
    2737: iconst_5
    2738: iastore
    2739: dup
    2740: sipush        329
    2743: iconst_5
    2744: iastore
    2745: dup
    2746: sipush        330
    2749: iconst_5
    2750: iastore
    2751: dup
    2752: sipush        331
    2755: iconst_5
    2756: iastore
    2757: dup
    2758: sipush        332
    2761: iconst_5
    2762: iastore
    2763: dup
    2764: sipush        333
    2767: iconst_5
    2768: iastore
    2769: dup
    2770: sipush        334
    2773: iconst_5
    2774: iastore
    2775: dup
    2776: sipush        335
    2779: iconst_5
    2780: iastore
    2781: dup
    2782: sipush        336
    2785: iconst_5
    2786: iastore
    2787: dup
    2788: sipush        337
    2791: iconst_5
    2792: iastore
    2793: dup
    2794: sipush        338
    2797: iconst_5
    2798: iastore
    2799: dup
    2800: sipush        339
    2803: iconst_5
    2804: iastore
    2805: dup
    2806: sipush        340
    2809: iconst_5
    2810: iastore
    2811: dup
    2812: sipush        341
    2815: iconst_5
    2816: iastore
    2817: dup
    2818: sipush        342
    2821: iconst_5
    2822: iastore
    2823: dup
    2824: sipush        343
    2827: iconst_5
    2828: iastore
    2829: dup
    2830: sipush        344
    2833: iconst_5
    2834: iastore
    2835: dup
    2836: sipush        345
    2839: iconst_5
    2840: iastore
    2841: dup
    2842: sipush        346
    2845: iconst_5
    2846: iastore
    2847: dup
    2848: sipush        347
    2851: iconst_5
    2852: iastore
    2853: dup
    2854: sipush        348
    2857: iconst_5
    2858: iastore
    2859: dup
    2860: sipush        349
    2863: iconst_5
    2864: iastore
    2865: dup
    2866: sipush        350
    2869: iconst_5
    2870: iastore
    2871: dup
    2872: sipush        351
    2875: iconst_5
    2876: iastore
    2877: dup
    2878: sipush        352
    2881: iconst_5
    2882: iastore
    2883: dup
    2884: sipush        353
    2887: iconst_5
    2888: iastore
    2889: dup
    2890: sipush        354
    2893: iconst_5
    2894: iastore
    2895: dup
    2896: sipush        355
    2899: iconst_5
    2900: iastore
    2901: dup
    2902: sipush        356
    2905: iconst_5
    2906: iastore
    2907: dup
    2908: sipush        357
    2911: iconst_5
    2912: iastore
    2913: dup
    2914: sipush        358
    2917: iconst_5
    2918: iastore
    2919: dup
    2920: sipush        359
    2923: iconst_5
    2924: iastore
    2925: dup
    2926: sipush        360
    2929: iconst_5
    2930: iastore
    2931: dup
    2932: sipush        361
    2935: iconst_5
    2936: iastore
    2937: dup
    2938: sipush        362
    2941: iconst_5
    2942: iastore
    2943: dup
    2944: sipush        363
    2947: iconst_5
    2948: iastore
    2949: dup
    2950: sipush        364
    2953: iconst_5
    2954: iastore
    2955: dup
    2956: sipush        365
    2959: iconst_5
    2960: iastore
    2961: dup
    2962: sipush        366
    2965: iconst_5
    2966: iastore
    2967: dup
    2968: sipush        367
    2971: iconst_5
    2972: iastore
    2973: dup
    2974: sipush        368
    2977: iconst_5
    2978: iastore
    2979: dup
    2980: sipush        369
    2983: iconst_5
    2984: iastore
    2985: dup
    2986: sipush        370
    2989: iconst_5
    2990: iastore
    2991: dup
    2992: sipush        371
    2995: iconst_5
    2996: iastore
    2997: dup
    2998: sipush        372
    3001: iconst_5
    3002: iastore
    3003: dup
    3004: sipush        373
    3007: iconst_5
    3008: iastore
    3009: dup
    3010: sipush        374
    3013: iconst_5
    3014: iastore
    3015: dup
    3016: sipush        375
    3019: iconst_5
    3020: iastore
    3021: dup
    3022: sipush        376
    3025: iconst_5
    3026: iastore
    3027: dup
    3028: sipush        377
    3031: iconst_5
    3032: iastore
    3033: dup
    3034: sipush        378
    3037: iconst_5
    3038: iastore
    3039: dup
    3040: sipush        379
    3043: iconst_5
    3044: iastore
    3045: dup
    3046: sipush        380
    3049: iconst_5
    3050: iastore
    3051: dup
    3052: sipush        381
    3055: iconst_5
    3056: iastore
    3057: dup
    3058: sipush        382
    3061: iconst_5
    3062: iastore
    3063: dup
    3064: sipush        383
    3067: iconst_5
    3068: iastore
    3069: putstatic     #418                // Field mIBY64:[I
    3072: return
}
