class org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo extends org.bouncycastle.asn1.ASN1Object {
  private final org.bouncycastle.asn1.ASN1Integer version;

  private final org.bouncycastle.asn1.x500.X500Name subject;

  private final org.bouncycastle.asn1.ASN1Sequence subjectPublicKeyInfo;

  private final org.bouncycastle.asn1.ASN1Set attributes;

  final org.bouncycastle.asn1.cmc.CertificationRequest this$0;

  private org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo(org.bouncycastle.asn1.cmc.CertificationRequest, org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field this$0:Lorg/bouncycastle/asn1/cmc/CertificationRequest;
       5: aload_0
       6: invokespecial #122                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       9: aload_2
      10: invokevirtual #123                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      13: iconst_4
      14: if_icmpeq     27
      17: new           #45                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #1                  // String incorrect sequence size for CertificationRequestInfo
      23: invokespecial #118                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: aload_2
      29: iconst_0
      30: invokevirtual #124                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      33: invokestatic  #121                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
      36: putfield      #113                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      39: aload_0
      40: aload_2
      41: iconst_1
      42: invokevirtual #124                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      45: invokestatic  #138                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
      48: putfield      #117                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      51: aload_0
      52: aload_2
      53: iconst_2
      54: invokevirtual #124                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      57: invokestatic  #125                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      60: putfield      #114                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/ASN1Sequence;
      63: aload_0
      64: getfield      #114                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/ASN1Sequence;
      67: invokevirtual #123                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      70: iconst_2
      71: if_icmpeq     84
      74: new           #45                 // class java/lang/IllegalArgumentException
      77: dup
      78: ldc           #2                  // String incorrect subjectPublicKeyInfo size for CertificationRequestInfo
      80: invokespecial #118                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload_2
      85: iconst_3
      86: invokevirtual #124                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      89: checkcast     #52                 // class org/bouncycastle/asn1/ASN1TaggedObject
      92: astore_3
      93: aload_3
      94: invokevirtual #127                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
      97: ifeq          110
     100: new           #45                 // class java/lang/IllegalArgumentException
     103: dup
     104: ldc           #3                  // String incorrect tag number on attributes for CertificationRequestInfo
     106: invokespecial #118                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload_0
     111: aload_3
     112: iconst_0
     113: invokestatic  #126                // Method org/bouncycastle/asn1/ASN1Set.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Set;
     116: putfield      #115                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
     119: return

  private org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo(org.bouncycastle.asn1.cmc.CertificationRequest, org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field this$0:Lorg/bouncycastle/asn1/cmc/CertificationRequest;
       5: aload_0
       6: invokespecial #122                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       9: aload_0
      10: invokestatic  #131                // Method org/bouncycastle/asn1/cmc/CertificationRequest.access$600:()Lorg/bouncycastle/asn1/ASN1Integer;
      13: putfield      #113                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aload_2
      18: putfield      #117                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      21: aload_0
      22: new           #53                 // class org/bouncycastle/asn1/DERSequence
      25: dup
      26: iconst_2
      27: anewarray     #46                 // class org/bouncycastle/asn1/ASN1Encodable
      30: dup
      31: iconst_0
      32: aload_3
      33: aastore
      34: dup
      35: iconst_1
      36: aload         4
      38: aastore
      39: invokespecial #128                // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      42: putfield      #114                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/ASN1Sequence;
      45: aload_0
      46: aload         5
      48: putfield      #115                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      51: return

  private org.bouncycastle.asn1.ASN1Integer getVersion();
    Code:
       0: aload_0
       1: getfield      #113                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  private org.bouncycastle.asn1.x500.X500Name getSubject();
    Code:
       0: aload_0
       1: getfield      #117                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  private org.bouncycastle.asn1.ASN1Sequence getSubjectPublicKeyInfo();
    Code:
       0: aload_0
       1: getfield      #114                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: areturn

  private org.bouncycastle.asn1.ASN1Set getAttributes();
    Code:
       0: aload_0
       1: getfield      #115                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #47                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: iconst_4
       5: invokespecial #119                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: getfield      #113                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      14: invokevirtual #120                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      17: aload_1
      18: aload_0
      19: getfield      #117                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      22: invokevirtual #120                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      25: aload_1
      26: aload_0
      27: getfield      #114                // Field subjectPublicKeyInfo:Lorg/bouncycastle/asn1/ASN1Sequence;
      30: invokevirtual #120                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      33: aload_1
      34: new           #54                 // class org/bouncycastle/asn1/DERTaggedObject
      37: dup
      38: iconst_0
      39: iconst_0
      40: aload_0
      41: getfield      #115                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      44: invokespecial #130                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      47: invokevirtual #120                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      50: new           #53                 // class org/bouncycastle/asn1/DERSequence
      53: dup
      54: aload_1
      55: invokespecial #129                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      58: areturn

  org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo(org.bouncycastle.asn1.cmc.CertificationRequest, org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cmc.CertificationRequest$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #137                // Method "<init>":(Lorg/bouncycastle/asn1/cmc/CertificationRequest;Lorg/bouncycastle/asn1/x500/X500Name;Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/DERBitString;Lorg/bouncycastle/asn1/ASN1Set;)V
      11: return

  org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo(org.bouncycastle.asn1.cmc.CertificationRequest, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.cmc.CertificationRequest$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #136                // Method "<init>":(Lorg/bouncycastle/asn1/cmc/CertificationRequest;Lorg/bouncycastle/asn1/ASN1Sequence;)V
       6: return

  static org.bouncycastle.asn1.ASN1Integer access$200(org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo);
    Code:
       0: aload_0
       1: invokespecial #132                // Method getVersion:()Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  static org.bouncycastle.asn1.x500.X500Name access$300(org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo);
    Code:
       0: aload_0
       1: invokespecial #135                // Method getSubject:()Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  static org.bouncycastle.asn1.ASN1Set access$400(org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo);
    Code:
       0: aload_0
       1: invokespecial #134                // Method getAttributes:()Lorg/bouncycastle/asn1/ASN1Set;
       4: areturn

  static org.bouncycastle.asn1.ASN1Sequence access$500(org.bouncycastle.asn1.cmc.CertificationRequest$CertificationRequestInfo);
    Code:
       0: aload_0
       1: invokespecial #133                // Method getSubjectPublicKeyInfo:()Lorg/bouncycastle/asn1/ASN1Sequence;
       4: areturn
}
