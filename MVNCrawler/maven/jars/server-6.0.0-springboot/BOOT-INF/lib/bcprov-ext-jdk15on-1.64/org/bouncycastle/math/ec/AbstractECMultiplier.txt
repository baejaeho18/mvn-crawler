public abstract class org.bouncycastle.math.ec.AbstractECMultiplier implements org.bouncycastle.math.ec.ECMultiplier {
  public org.bouncycastle.math.ec.AbstractECMultiplier();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method java/lang/Object."<init>":()V
       4: return

  public org.bouncycastle.math.ec.ECPoint multiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger);
    Code:
       0: aload_2
       1: invokevirtual #45                 // Method java/math/BigInteger.signum:()I
       4: istore_3
       5: iload_3
       6: ifeq          16
       9: aload_1
      10: invokevirtual #51                 // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      13: ifeq          24
      16: aload_1
      17: invokevirtual #52                 // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      20: invokevirtual #50                 // Method org/bouncycastle/math/ec/ECCurve.getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
      23: areturn
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #46                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      30: invokevirtual #48                 // Method multiplyPositive:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      33: astore        4
      35: iload_3
      36: ifle          44
      39: aload         4
      41: goto          49
      44: aload         4
      46: invokevirtual #53                 // Method org/bouncycastle/math/ec/ECPoint.negate:()Lorg/bouncycastle/math/ec/ECPoint;
      49: astore        5
      51: aload_0
      52: aload         5
      54: invokevirtual #47                 // Method checkResult:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      57: areturn

  protected abstract org.bouncycastle.math.ec.ECPoint multiplyPositive(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger);

  protected org.bouncycastle.math.ec.ECPoint checkResult(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_1
       1: invokestatic  #49                 // Method org/bouncycastle/math/ec/ECAlgorithms.implCheckResult:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
       4: areturn
}
