public class org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm {
  protected short hash;

  protected short signature;

  public org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm(short, short);
    Code:
       0: aload_0
       1: invokespecial #54                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: invokestatic  #58                 // Method org/bouncycastle/crypto/tls/TlsUtils.isValidUint8:(S)Z
       8: ifne          21
      11: new           #31                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #1                  // String \'hash\' should be a uint8
      17: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_2
      22: invokestatic  #58                 // Method org/bouncycastle/crypto/tls/TlsUtils.isValidUint8:(S)Z
      25: ifne          38
      28: new           #31                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #3                  // String \'signature\' should be a uint8
      34: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_2
      39: ifne          52
      42: new           #31                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #2                  // String \'signature\' MUST NOT be \"anonymous\"
      48: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: iload_1
      54: putfield      #51                 // Field hash:S
      57: aload_0
      58: iload_2
      59: putfield      #52                 // Field signature:S
      62: return

  public short getHash();
    Code:
       0: aload_0
       1: getfield      #51                 // Field hash:S
       4: ireturn

  public short getSignature();
    Code:
       0: aload_0
       1: getfield      #52                 // Field signature:S
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #33                 // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #33                 // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      13: astore_2
      14: aload_2
      15: invokevirtual #55                 // Method getHash:()S
      18: aload_0
      19: invokevirtual #55                 // Method getHash:()S
      22: if_icmpne     40
      25: aload_2
      26: invokevirtual #56                 // Method getSignature:()S
      29: aload_0
      30: invokevirtual #56                 // Method getSignature:()S
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getHash:()S
       4: bipush        16
       6: ishl
       7: aload_0
       8: invokevirtual #56                 // Method getSignature:()S
      11: ior
      12: ireturn

  public void encode(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getHash:()S
       4: aload_1
       5: invokestatic  #60                 // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(SLjava/io/OutputStream;)V
       8: aload_0
       9: invokevirtual #56                 // Method getSignature:()S
      12: aload_1
      13: invokestatic  #60                 // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(SLjava/io/OutputStream;)V
      16: return

  public static org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm parse(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:(Ljava/io/InputStream;)S
       4: istore_1
       5: aload_0
       6: invokestatic  #59                 // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:(Ljava/io/InputStream;)S
       9: istore_2
      10: new           #33                 // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      13: dup
      14: iload_1
      15: iload_2
      16: invokespecial #57                 // Method "<init>":(SS)V
      19: areturn
}
