public abstract class org.bouncycastle.crypto.tls.TlsDSASigner extends org.bouncycastle.crypto.tls.AbstractTlsSigner {
  public org.bouncycastle.crypto.tls.TlsDSASigner();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method org/bouncycastle/crypto/tls/AbstractTlsSigner."<init>":()V
       4: return

  public byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: new           #40                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       7: dup
       8: aload_2
       9: aload_0
      10: getfield      #77                 // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
      13: invokeinterface #95,  1           // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecureRandom:()Ljava/security/SecureRandom;
      18: invokespecial #80                 // Method org/bouncycastle/crypto/params/ParametersWithRandom."<init>":(Lorg/bouncycastle/crypto/CipherParameters;Ljava/security/SecureRandom;)V
      21: invokevirtual #88                 // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
      24: astore        4
      26: aload_1
      27: ifnonnull     45
      30: aload         4
      32: aload_3
      33: bipush        16
      35: bipush        20
      37: invokeinterface #93,  4           // InterfaceMethod org/bouncycastle/crypto/Signer.update:([BII)V
      42: goto          56
      45: aload         4
      47: aload_3
      48: iconst_0
      49: aload_3
      50: arraylength
      51: invokeinterface #93,  4           // InterfaceMethod org/bouncycastle/crypto/Signer.update:([BII)V
      56: aload         4
      58: invokeinterface #91,  1           // InterfaceMethod org/bouncycastle/crypto/Signer.generateSignature:()[B
      63: areturn

  public boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_0
       4: aload_3
       5: invokevirtual #88                 // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
       8: astore        5
      10: aload_1
      11: ifnonnull     30
      14: aload         5
      16: aload         4
      18: bipush        16
      20: bipush        20
      22: invokeinterface #93,  4           // InterfaceMethod org/bouncycastle/crypto/Signer.update:([BII)V
      27: goto          43
      30: aload         5
      32: aload         4
      34: iconst_0
      35: aload         4
      37: arraylength
      38: invokeinterface #93,  4           // InterfaceMethod org/bouncycastle/crypto/Signer.update:([BII)V
      43: aload         5
      45: aload_2
      46: invokeinterface #92,  2           // InterfaceMethod org/bouncycastle/crypto/Signer.verifySignature:([B)Z
      51: ireturn

  public org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_1
       4: aload_2
       5: invokevirtual #88                 // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
       8: areturn

  public org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: aload_2
       5: invokevirtual #88                 // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
       8: areturn

  protected org.bouncycastle.crypto.CipherParameters makeInitParameters(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: areturn

  protected org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, boolean, boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: aload_0
      10: getfield      #77                 // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
      13: invokestatic  #90                 // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      16: if_icmpeq     27
      19: new           #36                 // class java/lang/IllegalStateException
      22: dup
      23: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":()V
      26: athrow
      27: aload_1
      28: ifnull        50
      31: aload_1
      32: invokevirtual #84                 // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      35: aload_0
      36: invokevirtual #85                 // Method getSignatureAlgorithm:()S
      39: if_icmpeq     50
      42: new           #36                 // class java/lang/IllegalStateException
      45: dup
      46: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":()V
      49: athrow
      50: aload_1
      51: ifnonnull     58
      54: iconst_2
      55: goto          62
      58: aload_1
      59: invokevirtual #83                 // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      62: istore        5
      64: iload_2
      65: ifeq          78
      68: new           #39                 // class org/bouncycastle/crypto/digests/NullDigest
      71: dup
      72: invokespecial #79                 // Method org/bouncycastle/crypto/digests/NullDigest."<init>":()V
      75: goto          83
      78: iload         5
      80: invokestatic  #89                 // Method org/bouncycastle/crypto/tls/TlsUtils.createHash:(S)Lorg/bouncycastle/crypto/Digest;
      83: astore        6
      85: new           #41                 // class org/bouncycastle/crypto/signers/DSADigestSigner
      88: dup
      89: aload_0
      90: iload         5
      92: invokevirtual #86                 // Method createDSAImpl:(S)Lorg/bouncycastle/crypto/DSA;
      95: aload         6
      97: invokespecial #81                 // Method org/bouncycastle/crypto/signers/DSADigestSigner."<init>":(Lorg/bouncycastle/crypto/DSA;Lorg/bouncycastle/crypto/Digest;)V
     100: astore        7
     102: aload         7
     104: iload_3
     105: aload_0
     106: iload_3
     107: aload         4
     109: invokevirtual #87                 // Method makeInitParameters:(ZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/CipherParameters;
     112: invokeinterface #94,  3           // InterfaceMethod org/bouncycastle/crypto/Signer.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     117: aload         7
     119: areturn

  protected abstract short getSignatureAlgorithm();

  protected abstract org.bouncycastle.crypto.DSA createDSAImpl(short);
}
