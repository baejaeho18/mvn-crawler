public abstract class org.bouncycastle.math.ec.rfc7748.X25519Field {
  public static final int SIZE;

  private static final int M24;

  private static final int M25;

  private static final int M26;

  private static final int[] ROOT_NEG_ONE;

  protected org.bouncycastle.math.ec.rfc7748.X25519Field();
    Code:
       0: aload_0
       1: invokespecial #103                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        10
       5: if_icmpge     24
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_3
      12: iaload
      13: aload_1
      14: iload_3
      15: iaload
      16: iadd
      17: iastore
      18: iinc          3, 1
      21: goto          2
      24: return

  public static void addOne(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: iaload
       4: iconst_1
       5: iadd
       6: iastore
       7: return

  public static void addOne(int[], int);
    Code:
       0: aload_0
       1: iload_1
       2: dup2
       3: iaload
       4: iconst_1
       5: iadd
       6: iastore
       7: return

  public static void apm(int[], int[], int[], int[]);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: bipush        10
       7: if_icmpge     46
      10: aload_0
      11: iload         4
      13: iaload
      14: istore        5
      16: aload_1
      17: iload         4
      19: iaload
      20: istore        6
      22: aload_2
      23: iload         4
      25: iload         5
      27: iload         6
      29: iadd
      30: iastore
      31: aload_3
      32: iload         4
      34: iload         5
      36: iload         6
      38: isub
      39: iastore
      40: iinc          4, 1
      43: goto          3
      46: return

  public static void carry(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_1
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_2
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore_3
      12: aload_0
      13: iconst_3
      14: iaload
      15: istore        4
      17: aload_0
      18: iconst_4
      19: iaload
      20: istore        5
      22: aload_0
      23: iconst_5
      24: iaload
      25: istore        6
      27: aload_0
      28: bipush        6
      30: iaload
      31: istore        7
      33: aload_0
      34: bipush        7
      36: iaload
      37: istore        8
      39: aload_0
      40: bipush        8
      42: iaload
      43: istore        9
      45: aload_0
      46: bipush        9
      48: iaload
      49: istore        10
      51: iload         4
      53: iload_3
      54: bipush        25
      56: ishr
      57: iadd
      58: istore        4
      60: iload_3
      61: ldc           #9                  // int 33554431
      63: iand
      64: istore_3
      65: iload         6
      67: iload         5
      69: bipush        25
      71: ishr
      72: iadd
      73: istore        6
      75: iload         5
      77: ldc           #9                  // int 33554431
      79: iand
      80: istore        5
      82: iload         9
      84: iload         8
      86: bipush        25
      88: ishr
      89: iadd
      90: istore        9
      92: iload         8
      94: ldc           #9                  // int 33554431
      96: iand
      97: istore        8
      99: iload_1
     100: iload         10
     102: bipush        25
     104: ishr
     105: bipush        38
     107: imul
     108: iadd
     109: istore_1
     110: iload         10
     112: ldc           #9                  // int 33554431
     114: iand
     115: istore        10
     117: iload_2
     118: iload_1
     119: bipush        26
     121: ishr
     122: iadd
     123: istore_2
     124: iload_1
     125: ldc           #13                 // int 67108863
     127: iand
     128: istore_1
     129: iload         7
     131: iload         6
     133: bipush        26
     135: ishr
     136: iadd
     137: istore        7
     139: iload         6
     141: ldc           #13                 // int 67108863
     143: iand
     144: istore        6
     146: iload_3
     147: iload_2
     148: bipush        26
     150: ishr
     151: iadd
     152: istore_3
     153: iload_2
     154: ldc           #13                 // int 67108863
     156: iand
     157: istore_2
     158: iload         5
     160: iload         4
     162: bipush        26
     164: ishr
     165: iadd
     166: istore        5
     168: iload         4
     170: ldc           #13                 // int 67108863
     172: iand
     173: istore        4
     175: iload         8
     177: iload         7
     179: bipush        26
     181: ishr
     182: iadd
     183: istore        8
     185: iload         7
     187: ldc           #13                 // int 67108863
     189: iand
     190: istore        7
     192: iload         10
     194: iload         9
     196: bipush        26
     198: ishr
     199: iadd
     200: istore        10
     202: iload         9
     204: ldc           #13                 // int 67108863
     206: iand
     207: istore        9
     209: aload_0
     210: iconst_0
     211: iload_1
     212: iastore
     213: aload_0
     214: iconst_1
     215: iload_2
     216: iastore
     217: aload_0
     218: iconst_2
     219: iload_3
     220: iastore
     221: aload_0
     222: iconst_3
     223: iload         4
     225: iastore
     226: aload_0
     227: iconst_4
     228: iload         5
     230: iastore
     231: aload_0
     232: iconst_5
     233: iload         6
     235: iastore
     236: aload_0
     237: bipush        6
     239: iload         7
     241: iastore
     242: aload_0
     243: bipush        7
     245: iload         8
     247: iastore
     248: aload_0
     249: bipush        8
     251: iload         9
     253: iastore
     254: aload_0
     255: bipush        9
     257: iload         10
     259: iastore
     260: return

  public static void cmov(int, int[], int, int[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: bipush        10
       7: if_icmpge     54
      10: aload_3
      11: iload         4
      13: iload         5
      15: iadd
      16: iaload
      17: istore        6
      19: iload         6
      21: aload_1
      22: iload_2
      23: iload         5
      25: iadd
      26: iaload
      27: ixor
      28: istore        7
      30: iload         6
      32: iload         7
      34: iload_0
      35: iand
      36: ixor
      37: istore        6
      39: aload_3
      40: iload         4
      42: iload         5
      44: iadd
      45: iload         6
      47: iastore
      48: iinc          5, 1
      51: goto          3
      54: return

  public static void cnegate(int, int[]);
    Code:
       0: iconst_0
       1: iload_0
       2: isub
       3: istore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: bipush        10
       9: if_icmpge     28
      12: aload_1
      13: iload_3
      14: aload_1
      15: iload_3
      16: iaload
      17: iload_2
      18: ixor
      19: iload_2
      20: isub
      21: iastore
      22: iinc          3, 1
      25: goto          6
      28: return

  public static void copy(int[], int, int[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: bipush        10
       7: if_icmpge     28
      10: aload_2
      11: iload_3
      12: iload         4
      14: iadd
      15: aload_0
      16: iload_1
      17: iload         4
      19: iadd
      20: iaload
      21: iastore
      22: iinc          4, 1
      25: goto          3
      28: return

  public static int[] create();
    Code:
       0: bipush        10
       2: newarray       int
       4: areturn

  public static int[] createTable(int);
    Code:
       0: bipush        10
       2: iload_0
       3: imul
       4: newarray       int
       6: areturn

  public static void cswap(int, int[], int[]);
    Code:
       0: iconst_0
       1: iload_0
       2: isub
       3: istore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: bipush        10
      11: if_icmpge     59
      14: aload_1
      15: iload         4
      17: iaload
      18: istore        5
      20: aload_2
      21: iload         4
      23: iaload
      24: istore        6
      26: iload_3
      27: iload         5
      29: iload         6
      31: ixor
      32: iand
      33: istore        7
      35: aload_1
      36: iload         4
      38: iload         5
      40: iload         7
      42: ixor
      43: iastore
      44: aload_2
      45: iload         4
      47: iload         6
      49: iload         7
      51: ixor
      52: iastore
      53: iinc          4, 1
      56: goto          7
      59: return

  public static void decode(byte[], int, int[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #107                // Method decode128:([BI[II)V
       7: aload_0
       8: iload_1
       9: bipush        16
      11: iadd
      12: aload_2
      13: iconst_5
      14: invokestatic  #107                // Method decode128:([BI[II)V
      17: aload_2
      18: bipush        9
      20: dup2
      21: iaload
      22: ldc           #6                  // int 16777215
      24: iand
      25: iastore
      26: return

  private static void decode128(byte[], int, int[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: iadd
       4: invokestatic  #106                // Method decode32:([BI)I
       7: istore        4
       9: aload_0
      10: iload_1
      11: iconst_4
      12: iadd
      13: invokestatic  #106                // Method decode32:([BI)I
      16: istore        5
      18: aload_0
      19: iload_1
      20: bipush        8
      22: iadd
      23: invokestatic  #106                // Method decode32:([BI)I
      26: istore        6
      28: aload_0
      29: iload_1
      30: bipush        12
      32: iadd
      33: invokestatic  #106                // Method decode32:([BI)I
      36: istore        7
      38: aload_2
      39: iload_3
      40: iconst_0
      41: iadd
      42: iload         4
      44: ldc           #13                 // int 67108863
      46: iand
      47: iastore
      48: aload_2
      49: iload_3
      50: iconst_1
      51: iadd
      52: iload         5
      54: bipush        6
      56: ishl
      57: iload         4
      59: bipush        26
      61: iushr
      62: ior
      63: ldc           #13                 // int 67108863
      65: iand
      66: iastore
      67: aload_2
      68: iload_3
      69: iconst_2
      70: iadd
      71: iload         6
      73: bipush        12
      75: ishl
      76: iload         5
      78: bipush        20
      80: iushr
      81: ior
      82: ldc           #9                  // int 33554431
      84: iand
      85: iastore
      86: aload_2
      87: iload_3
      88: iconst_3
      89: iadd
      90: iload         7
      92: bipush        19
      94: ishl
      95: iload         6
      97: bipush        13
      99: iushr
     100: ior
     101: ldc           #13                 // int 67108863
     103: iand
     104: iastore
     105: aload_2
     106: iload_3
     107: iconst_4
     108: iadd
     109: iload         7
     111: bipush        7
     113: iushr
     114: iastore
     115: return

  private static int decode32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: istore_2
       8: iload_2
       9: aload_0
      10: iinc          1, 1
      13: iload_1
      14: baload
      15: sipush        255
      18: iand
      19: bipush        8
      21: ishl
      22: ior
      23: istore_2
      24: iload_2
      25: aload_0
      26: iinc          1, 1
      29: iload_1
      30: baload
      31: sipush        255
      34: iand
      35: bipush        16
      37: ishl
      38: ior
      39: istore_2
      40: iload_2
      41: aload_0
      42: iinc          1, 1
      45: iload_1
      46: baload
      47: bipush        24
      49: ishl
      50: ior
      51: istore_2
      52: iload_2
      53: ireturn

  public static void encode(int[], byte[], int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: iload_2
       4: invokestatic  #112                // Method encode128:([II[BI)V
       7: aload_0
       8: iconst_5
       9: aload_1
      10: iload_2
      11: bipush        16
      13: iadd
      14: invokestatic  #112                // Method encode128:([II[BI)V
      17: return

  private static void encode128(int[], int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: iadd
       4: iaload
       5: istore        4
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: iaload
      12: istore        5
      14: aload_0
      15: iload_1
      16: iconst_2
      17: iadd
      18: iaload
      19: istore        6
      21: aload_0
      22: iload_1
      23: iconst_3
      24: iadd
      25: iaload
      26: istore        7
      28: aload_0
      29: iload_1
      30: iconst_4
      31: iadd
      32: iaload
      33: istore        8
      35: iload         4
      37: iload         5
      39: bipush        26
      41: ishl
      42: ior
      43: istore        9
      45: iload         9
      47: aload_2
      48: iload_3
      49: iconst_0
      50: iadd
      51: invokestatic  #105                // Method encode32:(I[BI)V
      54: iload         5
      56: bipush        6
      58: iushr
      59: iload         6
      61: bipush        20
      63: ishl
      64: ior
      65: istore        10
      67: iload         10
      69: aload_2
      70: iload_3
      71: iconst_4
      72: iadd
      73: invokestatic  #105                // Method encode32:(I[BI)V
      76: iload         6
      78: bipush        12
      80: iushr
      81: iload         7
      83: bipush        13
      85: ishl
      86: ior
      87: istore        11
      89: iload         11
      91: aload_2
      92: iload_3
      93: bipush        8
      95: iadd
      96: invokestatic  #105                // Method encode32:(I[BI)V
      99: iload         7
     101: bipush        19
     103: iushr
     104: iload         8
     106: bipush        7
     108: ishl
     109: ior
     110: istore        12
     112: iload         12
     114: aload_2
     115: iload_3
     116: bipush        12
     118: iadd
     119: invokestatic  #105                // Method encode32:(I[BI)V
     122: return

  private static void encode32(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: i2b
       4: bastore
       5: aload_1
       6: iinc          2, 1
       9: iload_2
      10: iload_0
      11: bipush        8
      13: iushr
      14: i2b
      15: bastore
      16: aload_1
      17: iinc          2, 1
      20: iload_2
      21: iload_0
      22: bipush        16
      24: iushr
      25: i2b
      26: bastore
      27: aload_1
      28: iinc          2, 1
      31: iload_2
      32: iload_0
      33: bipush        24
      35: iushr
      36: i2b
      37: bastore
      38: return

  public static void inv(int[], int[]);
    Code:
       0: invokestatic  #104                // Method create:()[I
       3: astore_2
       4: invokestatic  #104                // Method create:()[I
       7: astore_3
       8: aload_0
       9: aload_2
      10: aload_3
      11: invokestatic  #118                // Method powPm5d8:([I[I[I)V
      14: aload_3
      15: iconst_3
      16: aload_3
      17: invokestatic  #113                // Method sqr:([II[I)V
      20: aload_3
      21: aload_2
      22: aload_1
      23: invokestatic  #117                // Method mul:([I[I[I)V
      26: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        10
       7: if_icmpge     22
      10: iload_1
      11: aload_0
      12: iload_2
      13: iaload
      14: ior
      15: istore_1
      16: iinc          2, 1
      19: goto          4
      22: iload_1
      23: iconst_1
      24: iushr
      25: iload_1
      26: iconst_1
      27: iand
      28: ior
      29: istore_1
      30: iload_1
      31: iconst_1
      32: isub
      33: bipush        31
      35: ishr
      36: ireturn

  public static boolean isZeroVar(int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #108                // Method isZero:([I)I
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static void mul(int[], int, int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_3
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore        4
       9: aload_0
      10: iconst_2
      11: iaload
      12: istore        5
      14: aload_0
      15: iconst_3
      16: iaload
      17: istore        6
      19: aload_0
      20: iconst_4
      21: iaload
      22: istore        7
      24: aload_0
      25: iconst_5
      26: iaload
      27: istore        8
      29: aload_0
      30: bipush        6
      32: iaload
      33: istore        9
      35: aload_0
      36: bipush        7
      38: iaload
      39: istore        10
      41: aload_0
      42: bipush        8
      44: iaload
      45: istore        11
      47: aload_0
      48: bipush        9
      50: iaload
      51: istore        12
      53: iload         5
      55: i2l
      56: iload_1
      57: i2l
      58: lmul
      59: lstore        13
      61: lload         13
      63: l2i
      64: ldc           #9                  // int 33554431
      66: iand
      67: istore        5
      69: lload         13
      71: bipush        25
      73: lshr
      74: lstore        13
      76: iload         7
      78: i2l
      79: iload_1
      80: i2l
      81: lmul
      82: lstore        15
      84: lload         15
      86: l2i
      87: ldc           #9                  // int 33554431
      89: iand
      90: istore        7
      92: lload         15
      94: bipush        25
      96: lshr
      97: lstore        15
      99: iload         10
     101: i2l
     102: iload_1
     103: i2l
     104: lmul
     105: lstore        17
     107: lload         17
     109: l2i
     110: ldc           #9                  // int 33554431
     112: iand
     113: istore        10
     115: lload         17
     117: bipush        25
     119: lshr
     120: lstore        17
     122: iload         12
     124: i2l
     125: iload_1
     126: i2l
     127: lmul
     128: lstore        19
     130: lload         19
     132: l2i
     133: ldc           #9                  // int 33554431
     135: iand
     136: istore        12
     138: lload         19
     140: bipush        25
     142: lshr
     143: lstore        19
     145: lload         19
     147: ldc2_w        #78                 // long 38l
     150: lmul
     151: lstore        19
     153: lload         19
     155: iload_3
     156: i2l
     157: iload_1
     158: i2l
     159: lmul
     160: ladd
     161: lstore        19
     163: aload_2
     164: iconst_0
     165: lload         19
     167: l2i
     168: ldc           #13                 // int 67108863
     170: iand
     171: iastore
     172: lload         19
     174: bipush        26
     176: lshr
     177: lstore        19
     179: lload         15
     181: iload         8
     183: i2l
     184: iload_1
     185: i2l
     186: lmul
     187: ladd
     188: lstore        15
     190: aload_2
     191: iconst_5
     192: lload         15
     194: l2i
     195: ldc           #13                 // int 67108863
     197: iand
     198: iastore
     199: lload         15
     201: bipush        26
     203: lshr
     204: lstore        15
     206: lload         19
     208: iload         4
     210: i2l
     211: iload_1
     212: i2l
     213: lmul
     214: ladd
     215: lstore        19
     217: aload_2
     218: iconst_1
     219: lload         19
     221: l2i
     222: ldc           #13                 // int 67108863
     224: iand
     225: iastore
     226: lload         19
     228: bipush        26
     230: lshr
     231: lstore        19
     233: lload         13
     235: iload         6
     237: i2l
     238: iload_1
     239: i2l
     240: lmul
     241: ladd
     242: lstore        13
     244: aload_2
     245: iconst_3
     246: lload         13
     248: l2i
     249: ldc           #13                 // int 67108863
     251: iand
     252: iastore
     253: lload         13
     255: bipush        26
     257: lshr
     258: lstore        13
     260: lload         15
     262: iload         9
     264: i2l
     265: iload_1
     266: i2l
     267: lmul
     268: ladd
     269: lstore        15
     271: aload_2
     272: bipush        6
     274: lload         15
     276: l2i
     277: ldc           #13                 // int 67108863
     279: iand
     280: iastore
     281: lload         15
     283: bipush        26
     285: lshr
     286: lstore        15
     288: lload         17
     290: iload         11
     292: i2l
     293: iload_1
     294: i2l
     295: lmul
     296: ladd
     297: lstore        17
     299: aload_2
     300: bipush        8
     302: lload         17
     304: l2i
     305: ldc           #13                 // int 67108863
     307: iand
     308: iastore
     309: lload         17
     311: bipush        26
     313: lshr
     314: lstore        17
     316: aload_2
     317: iconst_2
     318: iload         5
     320: lload         19
     322: l2i
     323: iadd
     324: iastore
     325: aload_2
     326: iconst_4
     327: iload         7
     329: lload         13
     331: l2i
     332: iadd
     333: iastore
     334: aload_2
     335: bipush        7
     337: iload         10
     339: lload         15
     341: l2i
     342: iadd
     343: iastore
     344: aload_2
     345: bipush        9
     347: iload         12
     349: lload         17
     351: l2i
     352: iadd
     353: iastore
     354: return

  public static void mul(int[], int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_3
       4: aload_1
       5: iconst_0
       6: iaload
       7: istore        4
       9: aload_0
      10: iconst_1
      11: iaload
      12: istore        5
      14: aload_1
      15: iconst_1
      16: iaload
      17: istore        6
      19: aload_0
      20: iconst_2
      21: iaload
      22: istore        7
      24: aload_1
      25: iconst_2
      26: iaload
      27: istore        8
      29: aload_0
      30: iconst_3
      31: iaload
      32: istore        9
      34: aload_1
      35: iconst_3
      36: iaload
      37: istore        10
      39: aload_0
      40: iconst_4
      41: iaload
      42: istore        11
      44: aload_1
      45: iconst_4
      46: iaload
      47: istore        12
      49: aload_0
      50: iconst_5
      51: iaload
      52: istore        13
      54: aload_1
      55: iconst_5
      56: iaload
      57: istore        14
      59: aload_0
      60: bipush        6
      62: iaload
      63: istore        15
      65: aload_1
      66: bipush        6
      68: iaload
      69: istore        16
      71: aload_0
      72: bipush        7
      74: iaload
      75: istore        17
      77: aload_1
      78: bipush        7
      80: iaload
      81: istore        18
      83: aload_0
      84: bipush        8
      86: iaload
      87: istore        19
      89: aload_1
      90: bipush        8
      92: iaload
      93: istore        20
      95: aload_0
      96: bipush        9
      98: iaload
      99: istore        21
     101: aload_1
     102: bipush        9
     104: iaload
     105: istore        22
     107: iload_3
     108: i2l
     109: iload         4
     111: i2l
     112: lmul
     113: lstore        23
     115: iload_3
     116: i2l
     117: iload         6
     119: i2l
     120: lmul
     121: iload         5
     123: i2l
     124: iload         4
     126: i2l
     127: lmul
     128: ladd
     129: lstore        25
     131: iload_3
     132: i2l
     133: iload         8
     135: i2l
     136: lmul
     137: iload         5
     139: i2l
     140: iload         6
     142: i2l
     143: lmul
     144: ladd
     145: iload         7
     147: i2l
     148: iload         4
     150: i2l
     151: lmul
     152: ladd
     153: lstore        27
     155: iload         5
     157: i2l
     158: iload         8
     160: i2l
     161: lmul
     162: iload         7
     164: i2l
     165: iload         6
     167: i2l
     168: lmul
     169: ladd
     170: lstore        29
     172: lload         29
     174: iconst_1
     175: lshl
     176: lstore        29
     178: lload         29
     180: iload_3
     181: i2l
     182: iload         10
     184: i2l
     185: lmul
     186: iload         9
     188: i2l
     189: iload         4
     191: i2l
     192: lmul
     193: ladd
     194: ladd
     195: lstore        29
     197: iload         7
     199: i2l
     200: iload         8
     202: i2l
     203: lmul
     204: lstore        31
     206: lload         31
     208: iconst_1
     209: lshl
     210: lstore        31
     212: lload         31
     214: iload_3
     215: i2l
     216: iload         12
     218: i2l
     219: lmul
     220: iload         5
     222: i2l
     223: iload         10
     225: i2l
     226: lmul
     227: ladd
     228: iload         9
     230: i2l
     231: iload         6
     233: i2l
     234: lmul
     235: ladd
     236: iload         11
     238: i2l
     239: iload         4
     241: i2l
     242: lmul
     243: ladd
     244: ladd
     245: lstore        31
     247: iload         5
     249: i2l
     250: iload         12
     252: i2l
     253: lmul
     254: iload         7
     256: i2l
     257: iload         10
     259: i2l
     260: lmul
     261: ladd
     262: iload         9
     264: i2l
     265: iload         8
     267: i2l
     268: lmul
     269: ladd
     270: iload         11
     272: i2l
     273: iload         6
     275: i2l
     276: lmul
     277: ladd
     278: lstore        33
     280: lload         33
     282: iconst_1
     283: lshl
     284: lstore        33
     286: iload         7
     288: i2l
     289: iload         12
     291: i2l
     292: lmul
     293: iload         11
     295: i2l
     296: iload         8
     298: i2l
     299: lmul
     300: ladd
     301: lstore        35
     303: lload         35
     305: iconst_1
     306: lshl
     307: lstore        35
     309: lload         35
     311: iload         9
     313: i2l
     314: iload         10
     316: i2l
     317: lmul
     318: ladd
     319: lstore        35
     321: iload         9
     323: i2l
     324: iload         12
     326: i2l
     327: lmul
     328: iload         11
     330: i2l
     331: iload         10
     333: i2l
     334: lmul
     335: ladd
     336: lstore        37
     338: iload         11
     340: i2l
     341: iload         12
     343: i2l
     344: lmul
     345: lstore        39
     347: lload         39
     349: iconst_1
     350: lshl
     351: lstore        39
     353: iload         13
     355: i2l
     356: iload         14
     358: i2l
     359: lmul
     360: lstore        41
     362: iload         13
     364: i2l
     365: iload         16
     367: i2l
     368: lmul
     369: iload         15
     371: i2l
     372: iload         14
     374: i2l
     375: lmul
     376: ladd
     377: lstore        43
     379: iload         13
     381: i2l
     382: iload         18
     384: i2l
     385: lmul
     386: iload         15
     388: i2l
     389: iload         16
     391: i2l
     392: lmul
     393: ladd
     394: iload         17
     396: i2l
     397: iload         14
     399: i2l
     400: lmul
     401: ladd
     402: lstore        45
     404: iload         15
     406: i2l
     407: iload         18
     409: i2l
     410: lmul
     411: iload         17
     413: i2l
     414: iload         16
     416: i2l
     417: lmul
     418: ladd
     419: lstore        47
     421: lload         47
     423: iconst_1
     424: lshl
     425: lstore        47
     427: lload         47
     429: iload         13
     431: i2l
     432: iload         20
     434: i2l
     435: lmul
     436: iload         19
     438: i2l
     439: iload         14
     441: i2l
     442: lmul
     443: ladd
     444: ladd
     445: lstore        47
     447: iload         17
     449: i2l
     450: iload         18
     452: i2l
     453: lmul
     454: lstore        49
     456: lload         49
     458: iconst_1
     459: lshl
     460: lstore        49
     462: lload         49
     464: iload         13
     466: i2l
     467: iload         22
     469: i2l
     470: lmul
     471: iload         15
     473: i2l
     474: iload         20
     476: i2l
     477: lmul
     478: ladd
     479: iload         19
     481: i2l
     482: iload         16
     484: i2l
     485: lmul
     486: ladd
     487: iload         21
     489: i2l
     490: iload         14
     492: i2l
     493: lmul
     494: ladd
     495: ladd
     496: lstore        49
     498: iload         15
     500: i2l
     501: iload         22
     503: i2l
     504: lmul
     505: iload         17
     507: i2l
     508: iload         20
     510: i2l
     511: lmul
     512: ladd
     513: iload         19
     515: i2l
     516: iload         18
     518: i2l
     519: lmul
     520: ladd
     521: iload         21
     523: i2l
     524: iload         16
     526: i2l
     527: lmul
     528: ladd
     529: lstore        51
     531: iload         17
     533: i2l
     534: iload         22
     536: i2l
     537: lmul
     538: iload         21
     540: i2l
     541: iload         18
     543: i2l
     544: lmul
     545: ladd
     546: lstore        53
     548: lload         53
     550: iconst_1
     551: lshl
     552: lstore        53
     554: lload         53
     556: iload         19
     558: i2l
     559: iload         20
     561: i2l
     562: lmul
     563: ladd
     564: lstore        53
     566: iload         19
     568: i2l
     569: iload         22
     571: i2l
     572: lmul
     573: iload         21
     575: i2l
     576: iload         20
     578: i2l
     579: lmul
     580: ladd
     581: lstore        55
     583: iload         21
     585: i2l
     586: iload         22
     588: i2l
     589: lmul
     590: lstore        57
     592: lload         23
     594: lload         51
     596: ldc2_w        #80                 // long 76l
     599: lmul
     600: lsub
     601: lstore        23
     603: lload         25
     605: lload         53
     607: ldc2_w        #78                 // long 38l
     610: lmul
     611: lsub
     612: lstore        25
     614: lload         27
     616: lload         55
     618: ldc2_w        #78                 // long 38l
     621: lmul
     622: lsub
     623: lstore        27
     625: lload         29
     627: lload         57
     629: ldc2_w        #80                 // long 76l
     632: lmul
     633: lsub
     634: lstore        29
     636: lload         33
     638: lload         41
     640: lsub
     641: lstore        33
     643: lload         35
     645: lload         43
     647: lsub
     648: lstore        35
     650: lload         37
     652: lload         45
     654: lsub
     655: lstore        37
     657: lload         39
     659: lload         47
     661: lsub
     662: lstore        39
     664: iload_3
     665: iload         13
     667: iadd
     668: istore_3
     669: iload         4
     671: iload         14
     673: iadd
     674: istore        4
     676: iload         5
     678: iload         15
     680: iadd
     681: istore        5
     683: iload         6
     685: iload         16
     687: iadd
     688: istore        6
     690: iload         7
     692: iload         17
     694: iadd
     695: istore        7
     697: iload         8
     699: iload         18
     701: iadd
     702: istore        8
     704: iload         9
     706: iload         19
     708: iadd
     709: istore        9
     711: iload         10
     713: iload         20
     715: iadd
     716: istore        10
     718: iload         11
     720: iload         21
     722: iadd
     723: istore        11
     725: iload         12
     727: iload         22
     729: iadd
     730: istore        12
     732: iload_3
     733: i2l
     734: iload         4
     736: i2l
     737: lmul
     738: lstore        59
     740: iload_3
     741: i2l
     742: iload         6
     744: i2l
     745: lmul
     746: iload         5
     748: i2l
     749: iload         4
     751: i2l
     752: lmul
     753: ladd
     754: lstore        61
     756: iload_3
     757: i2l
     758: iload         8
     760: i2l
     761: lmul
     762: iload         5
     764: i2l
     765: iload         6
     767: i2l
     768: lmul
     769: ladd
     770: iload         7
     772: i2l
     773: iload         4
     775: i2l
     776: lmul
     777: ladd
     778: lstore        63
     780: iload         5
     782: i2l
     783: iload         8
     785: i2l
     786: lmul
     787: iload         7
     789: i2l
     790: iload         6
     792: i2l
     793: lmul
     794: ladd
     795: lstore        65
     797: lload         65
     799: iconst_1
     800: lshl
     801: lstore        65
     803: lload         65
     805: iload_3
     806: i2l
     807: iload         10
     809: i2l
     810: lmul
     811: iload         9
     813: i2l
     814: iload         4
     816: i2l
     817: lmul
     818: ladd
     819: ladd
     820: lstore        65
     822: iload         7
     824: i2l
     825: iload         8
     827: i2l
     828: lmul
     829: lstore        67
     831: lload         67
     833: iconst_1
     834: lshl
     835: lstore        67
     837: lload         67
     839: iload_3
     840: i2l
     841: iload         12
     843: i2l
     844: lmul
     845: iload         5
     847: i2l
     848: iload         10
     850: i2l
     851: lmul
     852: ladd
     853: iload         9
     855: i2l
     856: iload         6
     858: i2l
     859: lmul
     860: ladd
     861: iload         11
     863: i2l
     864: iload         4
     866: i2l
     867: lmul
     868: ladd
     869: ladd
     870: lstore        67
     872: iload         5
     874: i2l
     875: iload         12
     877: i2l
     878: lmul
     879: iload         7
     881: i2l
     882: iload         10
     884: i2l
     885: lmul
     886: ladd
     887: iload         9
     889: i2l
     890: iload         8
     892: i2l
     893: lmul
     894: ladd
     895: iload         11
     897: i2l
     898: iload         6
     900: i2l
     901: lmul
     902: ladd
     903: lstore        69
     905: lload         69
     907: iconst_1
     908: lshl
     909: lstore        69
     911: iload         7
     913: i2l
     914: iload         12
     916: i2l
     917: lmul
     918: iload         11
     920: i2l
     921: iload         8
     923: i2l
     924: lmul
     925: ladd
     926: lstore        71
     928: lload         71
     930: iconst_1
     931: lshl
     932: lstore        71
     934: lload         71
     936: iload         9
     938: i2l
     939: iload         10
     941: i2l
     942: lmul
     943: ladd
     944: lstore        71
     946: iload         9
     948: i2l
     949: iload         12
     951: i2l
     952: lmul
     953: iload         11
     955: i2l
     956: iload         10
     958: i2l
     959: lmul
     960: ladd
     961: lstore        73
     963: iload         11
     965: i2l
     966: iload         12
     968: i2l
     969: lmul
     970: lstore        75
     972: lload         75
     974: iconst_1
     975: lshl
     976: lstore        75
     978: lload         39
     980: lload         65
     982: lload         29
     984: lsub
     985: ladd
     986: lstore        79
     988: lload         79
     990: l2i
     991: ldc           #13                 // int 67108863
     993: iand
     994: istore        77
     996: lload         79
     998: bipush        26
    1000: lshr
    1001: lstore        79
    1003: lload         79
    1005: lload         67
    1007: lload         31
    1009: lsub
    1010: lload         49
    1012: lsub
    1013: ladd
    1014: lstore        79
    1016: lload         79
    1018: l2i
    1019: ldc           #9                  // int 33554431
    1021: iand
    1022: istore        78
    1024: lload         79
    1026: bipush        25
    1028: lshr
    1029: lstore        79
    1031: lload         23
    1033: lload         79
    1035: lload         69
    1037: ladd
    1038: lload         33
    1040: lsub
    1041: ldc2_w        #78                 // long 38l
    1044: lmul
    1045: ladd
    1046: lstore        79
    1048: aload_2
    1049: iconst_0
    1050: lload         79
    1052: l2i
    1053: ldc           #13                 // int 67108863
    1055: iand
    1056: iastore
    1057: lload         79
    1059: bipush        26
    1061: lshr
    1062: lstore        79
    1064: lload         79
    1066: lload         25
    1068: lload         71
    1070: lload         35
    1072: lsub
    1073: ldc2_w        #78                 // long 38l
    1076: lmul
    1077: ladd
    1078: ladd
    1079: lstore        79
    1081: aload_2
    1082: iconst_1
    1083: lload         79
    1085: l2i
    1086: ldc           #13                 // int 67108863
    1088: iand
    1089: iastore
    1090: lload         79
    1092: bipush        26
    1094: lshr
    1095: lstore        79
    1097: lload         79
    1099: lload         27
    1101: lload         73
    1103: lload         37
    1105: lsub
    1106: ldc2_w        #78                 // long 38l
    1109: lmul
    1110: ladd
    1111: ladd
    1112: lstore        79
    1114: aload_2
    1115: iconst_2
    1116: lload         79
    1118: l2i
    1119: ldc           #9                  // int 33554431
    1121: iand
    1122: iastore
    1123: lload         79
    1125: bipush        25
    1127: lshr
    1128: lstore        79
    1130: lload         79
    1132: lload         29
    1134: lload         75
    1136: lload         39
    1138: lsub
    1139: ldc2_w        #78                 // long 38l
    1142: lmul
    1143: ladd
    1144: ladd
    1145: lstore        79
    1147: aload_2
    1148: iconst_3
    1149: lload         79
    1151: l2i
    1152: ldc           #13                 // int 67108863
    1154: iand
    1155: iastore
    1156: lload         79
    1158: bipush        26
    1160: lshr
    1161: lstore        79
    1163: lload         79
    1165: lload         31
    1167: lload         49
    1169: ldc2_w        #78                 // long 38l
    1172: lmul
    1173: ladd
    1174: ladd
    1175: lstore        79
    1177: aload_2
    1178: iconst_4
    1179: lload         79
    1181: l2i
    1182: ldc           #9                  // int 33554431
    1184: iand
    1185: iastore
    1186: lload         79
    1188: bipush        25
    1190: lshr
    1191: lstore        79
    1193: lload         79
    1195: lload         33
    1197: lload         59
    1199: lload         23
    1201: lsub
    1202: ladd
    1203: ladd
    1204: lstore        79
    1206: aload_2
    1207: iconst_5
    1208: lload         79
    1210: l2i
    1211: ldc           #13                 // int 67108863
    1213: iand
    1214: iastore
    1215: lload         79
    1217: bipush        26
    1219: lshr
    1220: lstore        79
    1222: lload         79
    1224: lload         35
    1226: lload         61
    1228: lload         25
    1230: lsub
    1231: ladd
    1232: ladd
    1233: lstore        79
    1235: aload_2
    1236: bipush        6
    1238: lload         79
    1240: l2i
    1241: ldc           #13                 // int 67108863
    1243: iand
    1244: iastore
    1245: lload         79
    1247: bipush        26
    1249: lshr
    1250: lstore        79
    1252: lload         79
    1254: lload         37
    1256: lload         63
    1258: lload         27
    1260: lsub
    1261: ladd
    1262: ladd
    1263: lstore        79
    1265: aload_2
    1266: bipush        7
    1268: lload         79
    1270: l2i
    1271: ldc           #9                  // int 33554431
    1273: iand
    1274: iastore
    1275: lload         79
    1277: bipush        25
    1279: lshr
    1280: lstore        79
    1282: lload         79
    1284: iload         77
    1286: i2l
    1287: ladd
    1288: lstore        79
    1290: aload_2
    1291: bipush        8
    1293: lload         79
    1295: l2i
    1296: ldc           #13                 // int 67108863
    1298: iand
    1299: iastore
    1300: lload         79
    1302: bipush        26
    1304: lshr
    1305: lstore        79
    1307: aload_2
    1308: bipush        9
    1310: iload         78
    1312: lload         79
    1314: l2i
    1315: iadd
    1316: iastore
    1317: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        10
       5: if_icmpge     21
       8: aload_1
       9: iload_2
      10: aload_0
      11: iload_2
      12: iaload
      13: ineg
      14: iastore
      15: iinc          2, 1
      18: goto          2
      21: return

  public static void normalize(int[]);
    Code:
       0: aload_0
       1: bipush        9
       3: iaload
       4: bipush        23
       6: iushr
       7: iconst_1
       8: iand
       9: istore_1
      10: aload_0
      11: iload_1
      12: invokestatic  #111                // Method reduce:([II)V
      15: aload_0
      16: iload_1
      17: ineg
      18: invokestatic  #111                // Method reduce:([II)V
      21: return

  public static void one(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: iastore
       4: iconst_1
       5: istore_1
       6: iload_1
       7: bipush        10
       9: if_icmpge     22
      12: aload_0
      13: iload_1
      14: iconst_0
      15: iastore
      16: iinc          1, 1
      19: goto          6
      22: return

  private static void powPm5d8(int[], int[], int[]);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: aload_3
       4: invokestatic  #115                // Method sqr:([I[I)V
       7: aload_0
       8: aload_3
       9: aload_3
      10: invokestatic  #117                // Method mul:([I[I[I)V
      13: invokestatic  #104                // Method create:()[I
      16: astore        4
      18: aload_3
      19: aload         4
      21: invokestatic  #115                // Method sqr:([I[I)V
      24: aload_0
      25: aload         4
      27: aload         4
      29: invokestatic  #117                // Method mul:([I[I[I)V
      32: aload         4
      34: astore        5
      36: aload         4
      38: iconst_2
      39: aload         5
      41: invokestatic  #113                // Method sqr:([II[I)V
      44: aload_3
      45: aload         5
      47: aload         5
      49: invokestatic  #117                // Method mul:([I[I[I)V
      52: invokestatic  #104                // Method create:()[I
      55: astore        6
      57: aload         5
      59: iconst_5
      60: aload         6
      62: invokestatic  #113                // Method sqr:([II[I)V
      65: aload         5
      67: aload         6
      69: aload         6
      71: invokestatic  #117                // Method mul:([I[I[I)V
      74: invokestatic  #104                // Method create:()[I
      77: astore        7
      79: aload         6
      81: iconst_5
      82: aload         7
      84: invokestatic  #113                // Method sqr:([II[I)V
      87: aload         5
      89: aload         7
      91: aload         7
      93: invokestatic  #117                // Method mul:([I[I[I)V
      96: aload         5
      98: astore        8
     100: aload         7
     102: bipush        10
     104: aload         8
     106: invokestatic  #113                // Method sqr:([II[I)V
     109: aload         6
     111: aload         8
     113: aload         8
     115: invokestatic  #117                // Method mul:([I[I[I)V
     118: aload         6
     120: astore        9
     122: aload         8
     124: bipush        25
     126: aload         9
     128: invokestatic  #113                // Method sqr:([II[I)V
     131: aload         8
     133: aload         9
     135: aload         9
     137: invokestatic  #117                // Method mul:([I[I[I)V
     140: aload         7
     142: astore        10
     144: aload         9
     146: bipush        25
     148: aload         10
     150: invokestatic  #113                // Method sqr:([II[I)V
     153: aload         8
     155: aload         10
     157: aload         10
     159: invokestatic  #117                // Method mul:([I[I[I)V
     162: aload         8
     164: astore        11
     166: aload         10
     168: bipush        50
     170: aload         11
     172: invokestatic  #113                // Method sqr:([II[I)V
     175: aload         9
     177: aload         11
     179: aload         11
     181: invokestatic  #117                // Method mul:([I[I[I)V
     184: aload         9
     186: astore        12
     188: aload         11
     190: bipush        125
     192: aload         12
     194: invokestatic  #113                // Method sqr:([II[I)V
     197: aload         11
     199: aload         12
     201: aload         12
     203: invokestatic  #117                // Method mul:([I[I[I)V
     206: aload         11
     208: astore        13
     210: aload         12
     212: iconst_2
     213: aload         13
     215: invokestatic  #113                // Method sqr:([II[I)V
     218: aload         13
     220: aload_0
     221: aload_2
     222: invokestatic  #117                // Method mul:([I[I[I)V
     225: return

  private static void reduce(int[], int);
    Code:
       0: aload_0
       1: bipush        9
       3: iaload
       4: istore_2
       5: iload_2
       6: istore_3
       7: iload_3
       8: ldc           #6                  // int 16777215
      10: iand
      11: istore_2
      12: iload_3
      13: bipush        24
      15: ishr
      16: istore_3
      17: iload_3
      18: iload_1
      19: iadd
      20: istore_3
      21: iload_3
      22: bipush        19
      24: imul
      25: istore_3
      26: iload_3
      27: aload_0
      28: iconst_0
      29: iaload
      30: iadd
      31: istore_3
      32: aload_0
      33: iconst_0
      34: iload_3
      35: ldc           #13                 // int 67108863
      37: iand
      38: iastore
      39: iload_3
      40: bipush        26
      42: ishr
      43: istore_3
      44: iload_3
      45: aload_0
      46: iconst_1
      47: iaload
      48: iadd
      49: istore_3
      50: aload_0
      51: iconst_1
      52: iload_3
      53: ldc           #13                 // int 67108863
      55: iand
      56: iastore
      57: iload_3
      58: bipush        26
      60: ishr
      61: istore_3
      62: iload_3
      63: aload_0
      64: iconst_2
      65: iaload
      66: iadd
      67: istore_3
      68: aload_0
      69: iconst_2
      70: iload_3
      71: ldc           #9                  // int 33554431
      73: iand
      74: iastore
      75: iload_3
      76: bipush        25
      78: ishr
      79: istore_3
      80: iload_3
      81: aload_0
      82: iconst_3
      83: iaload
      84: iadd
      85: istore_3
      86: aload_0
      87: iconst_3
      88: iload_3
      89: ldc           #13                 // int 67108863
      91: iand
      92: iastore
      93: iload_3
      94: bipush        26
      96: ishr
      97: istore_3
      98: iload_3
      99: aload_0
     100: iconst_4
     101: iaload
     102: iadd
     103: istore_3
     104: aload_0
     105: iconst_4
     106: iload_3
     107: ldc           #9                  // int 33554431
     109: iand
     110: iastore
     111: iload_3
     112: bipush        25
     114: ishr
     115: istore_3
     116: iload_3
     117: aload_0
     118: iconst_5
     119: iaload
     120: iadd
     121: istore_3
     122: aload_0
     123: iconst_5
     124: iload_3
     125: ldc           #13                 // int 67108863
     127: iand
     128: iastore
     129: iload_3
     130: bipush        26
     132: ishr
     133: istore_3
     134: iload_3
     135: aload_0
     136: bipush        6
     138: iaload
     139: iadd
     140: istore_3
     141: aload_0
     142: bipush        6
     144: iload_3
     145: ldc           #13                 // int 67108863
     147: iand
     148: iastore
     149: iload_3
     150: bipush        26
     152: ishr
     153: istore_3
     154: iload_3
     155: aload_0
     156: bipush        7
     158: iaload
     159: iadd
     160: istore_3
     161: aload_0
     162: bipush        7
     164: iload_3
     165: ldc           #9                  // int 33554431
     167: iand
     168: iastore
     169: iload_3
     170: bipush        25
     172: ishr
     173: istore_3
     174: iload_3
     175: aload_0
     176: bipush        8
     178: iaload
     179: iadd
     180: istore_3
     181: aload_0
     182: bipush        8
     184: iload_3
     185: ldc           #13                 // int 67108863
     187: iand
     188: iastore
     189: iload_3
     190: bipush        26
     192: ishr
     193: istore_3
     194: iload_3
     195: iload_2
     196: iadd
     197: istore_3
     198: aload_0
     199: bipush        9
     201: iload_3
     202: iastore
     203: return

  public static void sqr(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_3
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore        4
      13: aload_0
      14: iconst_3
      15: iaload
      16: istore        5
      18: aload_0
      19: iconst_4
      20: iaload
      21: istore        6
      23: aload_0
      24: iconst_5
      25: iaload
      26: istore        7
      28: aload_0
      29: bipush        6
      31: iaload
      32: istore        8
      34: aload_0
      35: bipush        7
      37: iaload
      38: istore        9
      40: aload_0
      41: bipush        8
      43: iaload
      44: istore        10
      46: aload_0
      47: bipush        9
      49: iaload
      50: istore        11
      52: iload_3
      53: iconst_2
      54: imul
      55: istore        12
      57: iload         4
      59: iconst_2
      60: imul
      61: istore        13
      63: iload         5
      65: iconst_2
      66: imul
      67: istore        14
      69: iload         6
      71: iconst_2
      72: imul
      73: istore        15
      75: iload_2
      76: i2l
      77: iload_2
      78: i2l
      79: lmul
      80: lstore        16
      82: iload_2
      83: i2l
      84: iload         12
      86: i2l
      87: lmul
      88: lstore        18
      90: iload_2
      91: i2l
      92: iload         13
      94: i2l
      95: lmul
      96: iload_3
      97: i2l
      98: iload_3
      99: i2l
     100: lmul
     101: ladd
     102: lstore        20
     104: iload         12
     106: i2l
     107: iload         13
     109: i2l
     110: lmul
     111: iload_2
     112: i2l
     113: iload         14
     115: i2l
     116: lmul
     117: ladd
     118: lstore        22
     120: iload         4
     122: i2l
     123: iload         13
     125: i2l
     126: lmul
     127: iload_2
     128: i2l
     129: iload         15
     131: i2l
     132: lmul
     133: ladd
     134: iload_3
     135: i2l
     136: iload         14
     138: i2l
     139: lmul
     140: ladd
     141: lstore        24
     143: iload         12
     145: i2l
     146: iload         15
     148: i2l
     149: lmul
     150: iload         13
     152: i2l
     153: iload         14
     155: i2l
     156: lmul
     157: ladd
     158: lstore        26
     160: iload         13
     162: i2l
     163: iload         15
     165: i2l
     166: lmul
     167: iload         5
     169: i2l
     170: iload         5
     172: i2l
     173: lmul
     174: ladd
     175: lstore        28
     177: iload         5
     179: i2l
     180: iload         15
     182: i2l
     183: lmul
     184: lstore        30
     186: iload         6
     188: i2l
     189: iload         15
     191: i2l
     192: lmul
     193: lstore        32
     195: iload         8
     197: iconst_2
     198: imul
     199: istore        34
     201: iload         9
     203: iconst_2
     204: imul
     205: istore        35
     207: iload         10
     209: iconst_2
     210: imul
     211: istore        36
     213: iload         11
     215: iconst_2
     216: imul
     217: istore        37
     219: iload         7
     221: i2l
     222: iload         7
     224: i2l
     225: lmul
     226: lstore        38
     228: iload         7
     230: i2l
     231: iload         34
     233: i2l
     234: lmul
     235: lstore        40
     237: iload         7
     239: i2l
     240: iload         35
     242: i2l
     243: lmul
     244: iload         8
     246: i2l
     247: iload         8
     249: i2l
     250: lmul
     251: ladd
     252: lstore        42
     254: iload         34
     256: i2l
     257: iload         35
     259: i2l
     260: lmul
     261: iload         7
     263: i2l
     264: iload         36
     266: i2l
     267: lmul
     268: ladd
     269: lstore        44
     271: iload         9
     273: i2l
     274: iload         35
     276: i2l
     277: lmul
     278: iload         7
     280: i2l
     281: iload         37
     283: i2l
     284: lmul
     285: ladd
     286: iload         8
     288: i2l
     289: iload         36
     291: i2l
     292: lmul
     293: ladd
     294: lstore        46
     296: iload         34
     298: i2l
     299: iload         37
     301: i2l
     302: lmul
     303: iload         35
     305: i2l
     306: iload         36
     308: i2l
     309: lmul
     310: ladd
     311: lstore        48
     313: iload         35
     315: i2l
     316: iload         37
     318: i2l
     319: lmul
     320: iload         10
     322: i2l
     323: iload         10
     325: i2l
     326: lmul
     327: ladd
     328: lstore        50
     330: iload         10
     332: i2l
     333: iload         37
     335: i2l
     336: lmul
     337: lstore        52
     339: iload         11
     341: i2l
     342: iload         37
     344: i2l
     345: lmul
     346: lstore        54
     348: lload         16
     350: lload         48
     352: ldc2_w        #78                 // long 38l
     355: lmul
     356: lsub
     357: lstore        16
     359: lload         18
     361: lload         50
     363: ldc2_w        #78                 // long 38l
     366: lmul
     367: lsub
     368: lstore        18
     370: lload         20
     372: lload         52
     374: ldc2_w        #78                 // long 38l
     377: lmul
     378: lsub
     379: lstore        20
     381: lload         22
     383: lload         54
     385: ldc2_w        #78                 // long 38l
     388: lmul
     389: lsub
     390: lstore        22
     392: lload         26
     394: lload         38
     396: lsub
     397: lstore        26
     399: lload         28
     401: lload         40
     403: lsub
     404: lstore        28
     406: lload         30
     408: lload         42
     410: lsub
     411: lstore        30
     413: lload         32
     415: lload         44
     417: lsub
     418: lstore        32
     420: iload_2
     421: iload         7
     423: iadd
     424: istore_2
     425: iload_3
     426: iload         8
     428: iadd
     429: istore_3
     430: iload         4
     432: iload         9
     434: iadd
     435: istore        4
     437: iload         5
     439: iload         10
     441: iadd
     442: istore        5
     444: iload         6
     446: iload         11
     448: iadd
     449: istore        6
     451: iload_3
     452: iconst_2
     453: imul
     454: istore        12
     456: iload         4
     458: iconst_2
     459: imul
     460: istore        13
     462: iload         5
     464: iconst_2
     465: imul
     466: istore        14
     468: iload         6
     470: iconst_2
     471: imul
     472: istore        15
     474: iload_2
     475: i2l
     476: iload_2
     477: i2l
     478: lmul
     479: lstore        56
     481: iload_2
     482: i2l
     483: iload         12
     485: i2l
     486: lmul
     487: lstore        58
     489: iload_2
     490: i2l
     491: iload         13
     493: i2l
     494: lmul
     495: iload_3
     496: i2l
     497: iload_3
     498: i2l
     499: lmul
     500: ladd
     501: lstore        60
     503: iload         12
     505: i2l
     506: iload         13
     508: i2l
     509: lmul
     510: iload_2
     511: i2l
     512: iload         14
     514: i2l
     515: lmul
     516: ladd
     517: lstore        62
     519: iload         4
     521: i2l
     522: iload         13
     524: i2l
     525: lmul
     526: iload_2
     527: i2l
     528: iload         15
     530: i2l
     531: lmul
     532: ladd
     533: iload_3
     534: i2l
     535: iload         14
     537: i2l
     538: lmul
     539: ladd
     540: lstore        64
     542: iload         12
     544: i2l
     545: iload         15
     547: i2l
     548: lmul
     549: iload         13
     551: i2l
     552: iload         14
     554: i2l
     555: lmul
     556: ladd
     557: lstore        66
     559: iload         13
     561: i2l
     562: iload         15
     564: i2l
     565: lmul
     566: iload         5
     568: i2l
     569: iload         5
     571: i2l
     572: lmul
     573: ladd
     574: lstore        68
     576: iload         5
     578: i2l
     579: iload         15
     581: i2l
     582: lmul
     583: lstore        70
     585: iload         6
     587: i2l
     588: iload         15
     590: i2l
     591: lmul
     592: lstore        72
     594: lload         32
     596: lload         62
     598: lload         22
     600: lsub
     601: ladd
     602: lstore        76
     604: lload         76
     606: l2i
     607: ldc           #13                 // int 67108863
     609: iand
     610: istore        74
     612: lload         76
     614: bipush        26
     616: lshr
     617: lstore        76
     619: lload         76
     621: lload         64
     623: lload         24
     625: lsub
     626: lload         46
     628: lsub
     629: ladd
     630: lstore        76
     632: lload         76
     634: l2i
     635: ldc           #9                  // int 33554431
     637: iand
     638: istore        75
     640: lload         76
     642: bipush        25
     644: lshr
     645: lstore        76
     647: lload         16
     649: lload         76
     651: lload         66
     653: ladd
     654: lload         26
     656: lsub
     657: ldc2_w        #78                 // long 38l
     660: lmul
     661: ladd
     662: lstore        76
     664: aload_1
     665: iconst_0
     666: lload         76
     668: l2i
     669: ldc           #13                 // int 67108863
     671: iand
     672: iastore
     673: lload         76
     675: bipush        26
     677: lshr
     678: lstore        76
     680: lload         76
     682: lload         18
     684: lload         68
     686: lload         28
     688: lsub
     689: ldc2_w        #78                 // long 38l
     692: lmul
     693: ladd
     694: ladd
     695: lstore        76
     697: aload_1
     698: iconst_1
     699: lload         76
     701: l2i
     702: ldc           #13                 // int 67108863
     704: iand
     705: iastore
     706: lload         76
     708: bipush        26
     710: lshr
     711: lstore        76
     713: lload         76
     715: lload         20
     717: lload         70
     719: lload         30
     721: lsub
     722: ldc2_w        #78                 // long 38l
     725: lmul
     726: ladd
     727: ladd
     728: lstore        76
     730: aload_1
     731: iconst_2
     732: lload         76
     734: l2i
     735: ldc           #9                  // int 33554431
     737: iand
     738: iastore
     739: lload         76
     741: bipush        25
     743: lshr
     744: lstore        76
     746: lload         76
     748: lload         22
     750: lload         72
     752: lload         32
     754: lsub
     755: ldc2_w        #78                 // long 38l
     758: lmul
     759: ladd
     760: ladd
     761: lstore        76
     763: aload_1
     764: iconst_3
     765: lload         76
     767: l2i
     768: ldc           #13                 // int 67108863
     770: iand
     771: iastore
     772: lload         76
     774: bipush        26
     776: lshr
     777: lstore        76
     779: lload         76
     781: lload         24
     783: lload         46
     785: ldc2_w        #78                 // long 38l
     788: lmul
     789: ladd
     790: ladd
     791: lstore        76
     793: aload_1
     794: iconst_4
     795: lload         76
     797: l2i
     798: ldc           #9                  // int 33554431
     800: iand
     801: iastore
     802: lload         76
     804: bipush        25
     806: lshr
     807: lstore        76
     809: lload         76
     811: lload         26
     813: lload         56
     815: lload         16
     817: lsub
     818: ladd
     819: ladd
     820: lstore        76
     822: aload_1
     823: iconst_5
     824: lload         76
     826: l2i
     827: ldc           #13                 // int 67108863
     829: iand
     830: iastore
     831: lload         76
     833: bipush        26
     835: lshr
     836: lstore        76
     838: lload         76
     840: lload         28
     842: lload         58
     844: lload         18
     846: lsub
     847: ladd
     848: ladd
     849: lstore        76
     851: aload_1
     852: bipush        6
     854: lload         76
     856: l2i
     857: ldc           #13                 // int 67108863
     859: iand
     860: iastore
     861: lload         76
     863: bipush        26
     865: lshr
     866: lstore        76
     868: lload         76
     870: lload         30
     872: lload         60
     874: lload         20
     876: lsub
     877: ladd
     878: ladd
     879: lstore        76
     881: aload_1
     882: bipush        7
     884: lload         76
     886: l2i
     887: ldc           #9                  // int 33554431
     889: iand
     890: iastore
     891: lload         76
     893: bipush        25
     895: lshr
     896: lstore        76
     898: lload         76
     900: iload         74
     902: i2l
     903: ladd
     904: lstore        76
     906: aload_1
     907: bipush        8
     909: lload         76
     911: l2i
     912: ldc           #13                 // int 67108863
     914: iand
     915: iastore
     916: lload         76
     918: bipush        26
     920: lshr
     921: lstore        76
     923: aload_1
     924: bipush        9
     926: iload         75
     928: lload         76
     930: l2i
     931: iadd
     932: iastore
     933: return

  public static void sqr(int[], int, int[]);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #115                // Method sqr:([I[I)V
       5: iinc          1, -1
       8: iload_1
       9: ifle          20
      12: aload_2
      13: aload_2
      14: invokestatic  #115                // Method sqr:([I[I)V
      17: goto          5
      20: return

  public static boolean sqrtRatioVar(int[], int[], int[]);
    Code:
       0: invokestatic  #104                // Method create:()[I
       3: astore_3
       4: invokestatic  #104                // Method create:()[I
       7: astore        4
       9: aload_0
      10: aload_1
      11: aload_3
      12: invokestatic  #117                // Method mul:([I[I[I)V
      15: aload_1
      16: aload         4
      18: invokestatic  #115                // Method sqr:([I[I)V
      21: aload_3
      22: aload         4
      24: aload_3
      25: invokestatic  #117                // Method mul:([I[I[I)V
      28: aload         4
      30: aload         4
      32: invokestatic  #115                // Method sqr:([I[I)V
      35: aload         4
      37: aload_3
      38: aload         4
      40: invokestatic  #117                // Method mul:([I[I[I)V
      43: invokestatic  #104                // Method create:()[I
      46: astore        5
      48: invokestatic  #104                // Method create:()[I
      51: astore        6
      53: aload         4
      55: aload         5
      57: aload         6
      59: invokestatic  #118                // Method powPm5d8:([I[I[I)V
      62: aload         6
      64: aload_3
      65: aload         6
      67: invokestatic  #117                // Method mul:([I[I[I)V
      70: invokestatic  #104                // Method create:()[I
      73: astore        7
      75: aload         6
      77: aload         7
      79: invokestatic  #115                // Method sqr:([I[I)V
      82: aload         7
      84: aload_1
      85: aload         7
      87: invokestatic  #117                // Method mul:([I[I[I)V
      90: aload         7
      92: aload_0
      93: aload         5
      95: invokestatic  #119                // Method sub:([I[I[I)V
      98: aload         5
     100: invokestatic  #109                // Method normalize:([I)V
     103: aload         5
     105: invokestatic  #110                // Method isZeroVar:([I)Z
     108: ifeq          121
     111: aload         6
     113: iconst_0
     114: aload_2
     115: iconst_0
     116: invokestatic  #114                // Method copy:([II[II)V
     119: iconst_1
     120: ireturn
     121: aload         7
     123: aload_0
     124: aload         5
     126: invokestatic  #116                // Method add:([I[I[I)V
     129: aload         5
     131: invokestatic  #109                // Method normalize:([I)V
     134: aload         5
     136: invokestatic  #110                // Method isZeroVar:([I)Z
     139: ifeq          153
     142: aload         6
     144: getstatic     #102                // Field ROOT_NEG_ONE:[I
     147: aload_2
     148: invokestatic  #117                // Method mul:([I[I[I)V
     151: iconst_1
     152: ireturn
     153: iconst_0
     154: ireturn

  public static void sub(int[], int[], int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        10
       5: if_icmpge     24
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_3
      12: iaload
      13: aload_1
      14: iload_3
      15: iaload
      16: isub
      17: iastore
      18: iinc          3, 1
      21: goto          2
      24: return

  public static void subOne(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: iaload
       4: iconst_1
       5: isub
       6: iastore
       7: return

  public static void zero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: bipush        10
       5: if_icmpge     18
       8: aload_0
       9: iload_1
      10: iconst_0
      11: iastore
      12: iinc          1, 1
      15: goto          2
      18: return

  static {};
    Code:
       0: bipush        10
       2: newarray       int
       4: dup
       5: iconst_0
       6: ldc           #10                 // int 34513072
       8: iastore
       9: dup
      10: iconst_1
      11: ldc           #12                 // int 59165138
      13: iastore
      14: dup
      15: iconst_2
      16: ldc           #3                  // int 4688974
      18: iastore
      19: dup
      20: iconst_3
      21: ldc           #2                  // int 3500415
      23: iastore
      24: dup
      25: iconst_4
      26: ldc           #5                  // int 6194736
      28: iastore
      29: dup
      30: iconst_5
      31: ldc           #8                  // int 33281959
      33: iastore
      34: dup
      35: bipush        6
      37: ldc           #11                 // int 54535759
      39: iastore
      40: dup
      41: bipush        7
      43: ldc           #7                  // int 32551604
      45: iastore
      46: dup
      47: bipush        8
      49: ldc           #1                  // int 163342
      51: iastore
      52: dup
      53: bipush        9
      55: ldc           #4                  // int 5703241
      57: iastore
      58: putstatic     #102                // Field ROOT_NEG_ONE:[I
      61: return
}
