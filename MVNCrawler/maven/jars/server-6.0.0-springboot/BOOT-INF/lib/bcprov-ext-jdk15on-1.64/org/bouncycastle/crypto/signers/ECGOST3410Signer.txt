public class org.bouncycastle.crypto.signers.ECGOST3410Signer implements org.bouncycastle.crypto.DSAExt {
  org.bouncycastle.crypto.params.ECKeyParameters key;

  java.security.SecureRandom random;

  public org.bouncycastle.crypto.signers.ECGOST3410Signer();
    Code:
       0: aload_0
       1: invokespecial #128                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: iload_1
       1: ifeq          56
       4: aload_2
       5: instanceof    #64                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       8: ifeq          38
      11: aload_2
      12: checkcast     #64                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #144                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      21: putfield      #124                // Field random:Ljava/security/SecureRandom;
      24: aload_0
      25: aload_3
      26: invokevirtual #145                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      29: checkcast     #62                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      32: putfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      35: goto          64
      38: aload_0
      39: invokestatic  #138                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      42: putfield      #124                // Field random:Ljava/security/SecureRandom;
      45: aload_0
      46: aload_2
      47: checkcast     #62                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      50: putfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      53: goto          64
      56: aload_0
      57: aload_2
      58: checkcast     #63                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      61: putfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      64: return

  public java.math.BigInteger getOrder();
    Code:
       0: aload_0
       1: getfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
       4: invokevirtual #141                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       7: invokevirtual #139                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger[] generateSignature(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #153                // Method org/bouncycastle/util/Arrays.reverse:([B)[B
       4: astore_2
       5: new           #57                 // class java/math/BigInteger
       8: dup
       9: iconst_1
      10: aload_2
      11: invokespecial #130                // Method java/math/BigInteger."<init>":(I[B)V
      14: astore_3
      15: aload_0
      16: getfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      19: invokevirtual #141                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      22: astore        4
      24: aload         4
      26: invokevirtual #139                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      29: astore        5
      31: aload_0
      32: getfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      35: checkcast     #62                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      38: invokevirtual #142                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      41: astore        6
      43: aload_0
      44: invokevirtual #146                // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      47: astore        9
      49: aload         5
      51: invokevirtual #129                // Method java/math/BigInteger.bitLength:()I
      54: aload_0
      55: getfield      #124                // Field random:Ljava/security/SecureRandom;
      58: invokestatic  #154                // Method org/bouncycastle/util/BigIntegers.createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
      61: astore        10
      63: aload         10
      65: getstatic     #127                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      68: invokevirtual #131                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      71: ifne          49
      74: aload         9
      76: aload         4
      78: invokevirtual #140                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      81: aload         10
      83: invokeinterface #155,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      88: invokevirtual #151                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      91: astore        11
      93: aload         11
      95: invokevirtual #150                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      98: invokevirtual #148                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     101: aload         5
     103: invokevirtual #134                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     106: astore        7
     108: aload         7
     110: getstatic     #127                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     113: invokevirtual #131                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     116: ifne          49
     119: aload         10
     121: aload_3
     122: invokevirtual #136                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     125: aload         6
     127: aload         7
     129: invokevirtual #136                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     132: invokevirtual #133                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     135: aload         5
     137: invokevirtual #134                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     140: astore        8
     142: aload         8
     144: getstatic     #127                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     147: invokevirtual #131                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     150: ifne          49
     153: iconst_2
     154: anewarray     #57                 // class java/math/BigInteger
     157: dup
     158: iconst_0
     159: aload         7
     161: aastore
     162: dup
     163: iconst_1
     164: aload         8
     166: aastore
     167: areturn

  public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #153                // Method org/bouncycastle/util/Arrays.reverse:([B)[B
       4: astore        4
       6: new           #57                 // class java/math/BigInteger
       9: dup
      10: iconst_1
      11: aload         4
      13: invokespecial #130                // Method java/math/BigInteger."<init>":(I[B)V
      16: astore        5
      18: aload_0
      19: getfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      22: invokevirtual #141                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      25: invokevirtual #139                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      28: astore        6
      30: aload_2
      31: getstatic     #126                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      34: invokevirtual #132                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      37: iflt          49
      40: aload_2
      41: aload         6
      43: invokevirtual #132                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      46: iflt          51
      49: iconst_0
      50: ireturn
      51: aload_3
      52: getstatic     #126                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      55: invokevirtual #132                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      58: iflt          70
      61: aload_3
      62: aload         6
      64: invokevirtual #132                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      67: iflt          72
      70: iconst_0
      71: ireturn
      72: aload         5
      74: aload         6
      76: invokevirtual #135                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      79: astore        7
      81: aload_3
      82: aload         7
      84: invokevirtual #136                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      87: aload         6
      89: invokevirtual #134                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      92: astore        8
      94: aload         6
      96: aload_2
      97: invokevirtual #137                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     100: aload         7
     102: invokevirtual #136                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     105: aload         6
     107: invokevirtual #134                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     110: astore        9
     112: aload_0
     113: getfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
     116: invokevirtual #141                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
     119: invokevirtual #140                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     122: astore        10
     124: aload_0
     125: getfield      #125                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
     128: checkcast     #63                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
     131: invokevirtual #143                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     134: astore        11
     136: aload         10
     138: aload         8
     140: aload         11
     142: aload         9
     144: invokestatic  #147                // Method org/bouncycastle/math/ec/ECAlgorithms.sumOfTwoMultiplies:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     147: invokevirtual #151                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     150: astore        12
     152: aload         12
     154: invokevirtual #149                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     157: ifeq          162
     160: iconst_0
     161: ireturn
     162: aload         12
     164: invokevirtual #150                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     167: invokevirtual #148                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     170: aload         6
     172: invokevirtual #134                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     175: astore        13
     177: aload         13
     179: aload_2
     180: invokevirtual #131                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     183: ireturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #71                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #152                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn
}
