public class org.bouncycastle.crypto.prng.ReversedWindowGenerator implements org.bouncycastle.crypto.prng.RandomGenerator {
  private final org.bouncycastle.crypto.prng.RandomGenerator generator;

  private byte[] window;

  private int windowCount;

  public org.bouncycastle.crypto.prng.ReversedWindowGenerator(org.bouncycastle.crypto.prng.RandomGenerator, int);
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #22                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #1                  // String generator cannot be null
      14: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_2
      19: iconst_2
      20: if_icmpge     33
      23: new           #22                 // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #2                  // String windowSize must be at least 2
      29: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: aload_1
      35: putfield      #40                 // Field generator:Lorg/bouncycastle/crypto/prng/RandomGenerator;
      38: aload_0
      39: iload_2
      40: newarray       byte
      42: putfield      #39                 // Field window:[B
      45: return

  public void addSeedMaterial(byte[]);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: iconst_0
       6: putfield      #38                 // Field windowCount:I
       9: aload_0
      10: getfield      #40                 // Field generator:Lorg/bouncycastle/crypto/prng/RandomGenerator;
      13: aload_1
      14: invokeinterface #45,  2           // InterfaceMethod org/bouncycastle/crypto/prng/RandomGenerator.addSeedMaterial:([B)V
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
           4    21    24   any
          24    27    24   any

  public void addSeedMaterial(long);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: iconst_0
       6: putfield      #38                 // Field windowCount:I
       9: aload_0
      10: getfield      #40                 // Field generator:Lorg/bouncycastle/crypto/prng/RandomGenerator;
      13: lload_1
      14: invokeinterface #44,  3           // InterfaceMethod org/bouncycastle/crypto/prng/RandomGenerator.addSeedMaterial:(J)V
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    21    24   any
          24    28    24   any

  public void nextBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #43                 // Method doNextBytes:([BII)V
       8: return

  public void nextBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #43                 // Method doNextBytes:([BII)V
       7: return

  private void doNextBytes(byte[], int, int);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: iconst_0
       6: istore        5
       8: iload         5
      10: iload_3
      11: if_icmpge     78
      14: aload_0
      15: getfield      #38                 // Field windowCount:I
      18: iconst_1
      19: if_icmpge     50
      22: aload_0
      23: getfield      #40                 // Field generator:Lorg/bouncycastle/crypto/prng/RandomGenerator;
      26: aload_0
      27: getfield      #39                 // Field window:[B
      30: iconst_0
      31: aload_0
      32: getfield      #39                 // Field window:[B
      35: arraylength
      36: invokeinterface #46,  4           // InterfaceMethod org/bouncycastle/crypto/prng/RandomGenerator.nextBytes:([BII)V
      41: aload_0
      42: aload_0
      43: getfield      #39                 // Field window:[B
      46: arraylength
      47: putfield      #38                 // Field windowCount:I
      50: aload_1
      51: iload_2
      52: iload         5
      54: iinc          5, 1
      57: iadd
      58: aload_0
      59: getfield      #39                 // Field window:[B
      62: aload_0
      63: dup
      64: getfield      #38                 // Field windowCount:I
      67: iconst_1
      68: isub
      69: dup_x1
      70: putfield      #38                 // Field windowCount:I
      73: baload
      74: bastore
      75: goto          8
      78: aload         4
      80: monitorexit
      81: goto          92
      84: astore        6
      86: aload         4
      88: monitorexit
      89: aload         6
      91: athrow
      92: return
    Exception table:
       from    to  target type
           5    81    84   any
          84    89    84   any
}
