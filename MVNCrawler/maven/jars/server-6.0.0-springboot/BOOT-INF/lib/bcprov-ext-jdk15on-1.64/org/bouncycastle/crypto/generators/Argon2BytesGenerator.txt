public class org.bouncycastle.crypto.generators.Argon2BytesGenerator {
  private static final int ARGON2_BLOCK_SIZE;

  private static final int ARGON2_QWORDS_IN_BLOCK;

  private static final int ARGON2_ADDRESSES_IN_BLOCK;

  private static final int ARGON2_PREHASH_DIGEST_LENGTH;

  private static final int ARGON2_PREHASH_SEED_LENGTH;

  private static final int ARGON2_SYNC_POINTS;

  private static final int MIN_PARALLELISM;

  private static final int MAX_PARALLELISM;

  private static final int MIN_OUTLEN;

  private static final int MIN_ITERATIONS;

  private org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block[] memory;

  private int segmentLength;

  private int laneLength;

  private org.bouncycastle.crypto.params.Argon2Parameters parameters;

  private byte[] result;

  public org.bouncycastle.crypto.generators.Argon2BytesGenerator();
    Code:
       0: aload_0
       1: invokespecial #285                // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.params.Argon2Parameters);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: aload_1
       6: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
       9: iconst_1
      10: if_icmpge     23
      13: new           #153                // class java/lang/IllegalStateException
      16: dup
      17: ldc           #4                  // String lanes must be greater than 1
      19: invokespecial #284                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      27: ldc           #1                  // int 16777216
      29: if_icmple     42
      32: new           #153                // class java/lang/IllegalStateException
      35: dup
      36: ldc           #5                  // String lanes must be less than 16777216
      38: invokespecial #284                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: invokevirtual #338                // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
      46: iconst_2
      47: aload_1
      48: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      51: imul
      52: if_icmpge     101
      55: new           #153                // class java/lang/IllegalStateException
      58: dup
      59: new           #155                // class java/lang/StringBuilder
      62: dup
      63: invokespecial #286                // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #6                  // String memory is less than:
      68: invokevirtual #289                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: iconst_2
      72: aload_1
      73: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      76: imul
      77: invokevirtual #288                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #2                  // String  expected
      82: invokevirtual #289                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iconst_2
      86: aload_1
      87: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      90: imul
      91: invokevirtual #288                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #287                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #284                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload_1
     102: invokevirtual #336                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
     105: iconst_1
     106: if_icmpge     119
     109: new           #153                // class java/lang/IllegalStateException
     112: dup
     113: ldc           #3                  // String iterations is less than: 1
     115: invokespecial #284                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload_0
     120: aload_1
     121: invokespecial #319                // Method doInit:(Lorg/bouncycastle/crypto/params/Argon2Parameters;)V
     124: return

  public int generateBytes(char[], byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: invokevirtual #344                // Method org/bouncycastle/crypto/params/Argon2Parameters.getCharToByteConverter:()Lorg/bouncycastle/crypto/CharToByteConverter;
       8: aload_1
       9: invokeinterface #348,  2          // InterfaceMethod org/bouncycastle/crypto/CharToByteConverter.convert:([C)[B
      14: aload_2
      15: invokevirtual #305                // Method generateBytes:([B[B)I
      18: ireturn

  public int generateBytes(char[], byte[], int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: invokevirtual #344                // Method org/bouncycastle/crypto/params/Argon2Parameters.getCharToByteConverter:()Lorg/bouncycastle/crypto/CharToByteConverter;
       8: aload_1
       9: invokeinterface #348,  2          // InterfaceMethod org/bouncycastle/crypto/CharToByteConverter.convert:([C)[B
      14: aload_2
      15: iload_3
      16: iload         4
      18: invokevirtual #307                // Method generateBytes:([B[BII)I
      21: ireturn

  public int generateBytes(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #307                // Method generateBytes:([B[BII)I
       9: ireturn

  public int generateBytes(byte[], byte[], int, int);
    Code:
       0: iload         4
       2: iconst_4
       3: if_icmpge     16
       6: new           #153                // class java/lang/IllegalStateException
       9: dup
      10: ldc           #7                  // String output length less than 4
      12: invokespecial #284                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: aload_1
      18: iload         4
      20: invokespecial #303                // Method initialize:([BI)V
      23: aload_0
      24: invokespecial #295                // Method fillMemoryBlocks:()V
      27: aload_0
      28: iload         4
      30: invokespecial #299                // Method digest:(I)V
      33: aload_0
      34: getfield      #274                // Field result:[B
      37: iconst_0
      38: aload_2
      39: iload_3
      40: iload         4
      42: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      45: aload_0
      46: invokespecial #296                // Method reset:()V
      49: iload         4
      51: ireturn

  private void reset();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
       7: arraylength
       8: if_icmpge     29
      11: aload_0
      12: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      15: iload_1
      16: aaload
      17: astore_2
      18: aload_2
      19: invokevirtual #328                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      22: pop
      23: iinc          1, 1
      26: goto          2
      29: aload_0
      30: aconst_null
      31: putfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      34: aload_0
      35: getfield      #274                // Field result:[B
      38: iconst_0
      39: invokestatic  #345                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      42: return

  private void doInit(org.bouncycastle.crypto.params.Argon2Parameters);
    Code:
       0: aload_1
       1: invokevirtual #338                // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
       4: istore_2
       5: iload_2
       6: bipush        8
       8: aload_1
       9: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      12: imul
      13: if_icmpge     24
      16: bipush        8
      18: aload_1
      19: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      22: imul
      23: istore_2
      24: aload_0
      25: iload_2
      26: aload_1
      27: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      30: iconst_4
      31: imul
      32: idiv
      33: putfield      #273                // Field segmentLength:I
      36: aload_0
      37: aload_0
      38: getfield      #273                // Field segmentLength:I
      41: iconst_4
      42: imul
      43: putfield      #272                // Field laneLength:I
      46: aload_0
      47: getfield      #273                // Field segmentLength:I
      50: aload_1
      51: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      54: iconst_4
      55: imul
      56: imul
      57: istore_2
      58: aload_0
      59: iload_2
      60: invokespecial #300                // Method initMemory:(I)V
      63: return

  private void initMemory(int);
    Code:
       0: aload_0
       1: iload_1
       2: anewarray     #162                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block
       5: putfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      15: arraylength
      16: if_icmpge     39
      19: aload_0
      20: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      23: iload_2
      24: new           #162                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block
      27: dup
      28: aconst_null
      29: invokespecial #327                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block."<init>":(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$1;)V
      32: aastore
      33: iinc          2, 1
      36: goto          10
      39: return

  private void fillMemoryBlocks();
    Code:
       0: new           #163                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock
       3: dup
       4: aconst_null
       5: invokespecial #331                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock."<init>":(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$1;)V
       8: astore_1
       9: new           #164                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position
      12: dup
      13: invokespecial #334                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position."<init>":()V
      16: astore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      24: invokevirtual #336                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      27: if_icmpge     88
      30: iconst_0
      31: istore        4
      33: iload         4
      35: iconst_4
      36: if_icmpge     82
      39: iconst_0
      40: istore        5
      42: iload         5
      44: aload_0
      45: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      48: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      51: if_icmpge     76
      54: aload_2
      55: iload_3
      56: iload         5
      58: iload         4
      60: iconst_0
      61: invokevirtual #335                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.update:(IIII)V
      64: aload_0
      65: aload_1
      66: aload_2
      67: invokespecial #321                // Method fillSegment:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)V
      70: iinc          5, 1
      73: goto          42
      76: iinc          4, 1
      79: goto          33
      82: iinc          3, 1
      85: goto          19
      88: return

  private void fillSegment(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aconst_null
       6: astore        5
       8: aload_0
       9: aload_2
      10: invokespecial #315                // Method isDataIndependentAddressing:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)Z
      13: istore        6
      15: aload_2
      16: invokestatic  #314                // Method getStartingIndex:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)I
      19: istore        7
      21: aload_2
      22: getfield      #281                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      25: aload_0
      26: getfield      #272                // Field laneLength:I
      29: imul
      30: aload_2
      31: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      34: aload_0
      35: getfield      #273                // Field segmentLength:I
      38: imul
      39: iadd
      40: iload         7
      42: iadd
      43: istore        8
      45: aload_0
      46: iload         8
      48: invokespecial #297                // Method getPrevOffset:(I)I
      51: istore        9
      53: iload         6
      55: ifeq          95
      58: aload_1
      59: getfield      #277                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.addressBlock:Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      62: invokevirtual #328                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      65: astore_3
      66: aload_1
      67: getfield      #279                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.zeroBlock:Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      70: invokevirtual #328                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      73: astore        5
      75: aload_1
      76: getfield      #278                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.inputBlock:Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      79: invokevirtual #328                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      82: astore        4
      84: aload_0
      85: aload_1
      86: aload_2
      87: aload         5
      89: aload         4
      91: aload_3
      92: invokespecial #323                // Method initAddressBlocks:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      95: aload_2
      96: iload         7
      98: putfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
     101: aload_2
     102: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
     105: aload_0
     106: getfield      #273                // Field segmentLength:I
     109: if_icmpge     256
     112: aload_0
     113: iload         8
     115: iload         9
     117: invokespecial #301                // Method rotatePrevOffset:(II)I
     120: istore        9
     122: aload_0
     123: aload_1
     124: aload_2
     125: aload_3
     126: aload         4
     128: aload         5
     130: iload         9
     132: iload         6
     134: invokespecial #324                // Method getPseudoRandom:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IZ)J
     137: lstore        10
     139: aload_0
     140: aload_2
     141: lload         10
     143: invokespecial #317                // Method getRefLane:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;J)I
     146: istore        12
     148: aload_0
     149: aload_2
     150: lload         10
     152: iload         12
     154: aload_2
     155: getfield      #281                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
     158: if_icmpne     165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: invokespecial #318                // Method getRefColumn:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;JZ)I
     169: istore        13
     171: aload_0
     172: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     175: iload         9
     177: aaload
     178: astore        14
     180: aload_0
     181: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     184: aload_0
     185: getfield      #272                // Field laneLength:I
     188: iload         12
     190: imul
     191: iload         13
     193: iadd
     194: aaload
     195: astore        15
     197: aload_0
     198: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     201: iload         8
     203: aaload
     204: astore        16
     206: aload_0
     207: aload_2
     208: invokespecial #316                // Method isWithXor:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)Z
     211: ifeq          227
     214: aload_1
     215: aload         14
     217: aload         15
     219: aload         16
     221: invokestatic  #332                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$200:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
     224: goto          237
     227: aload_1
     228: aload         14
     230: aload         15
     232: aload         16
     234: invokestatic  #333                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$300:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
     237: aload_2
     238: dup
     239: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
     242: iconst_1
     243: iadd
     244: putfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
     247: iinc          8, 1
     250: iinc          9, 1
     253: goto          101
     256: return

  private boolean isDataIndependentAddressing(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aload_0
       1: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       4: invokevirtual #339                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
       7: iconst_1
       8: if_icmpeq     37
      11: aload_0
      12: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      15: invokevirtual #339                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
      18: iconst_2
      19: if_icmpne     41
      22: aload_1
      23: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      26: ifne          41
      29: aload_1
      30: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      33: iconst_2
      34: if_icmpge     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private void initAddressBlocks(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block);
    Code:
       0: aload         4
       2: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       5: iconst_0
       6: aload_0
       7: aload_2
       8: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      11: invokespecial #298                // Method intToLong:(I)J
      14: lastore
      15: aload         4
      17: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      20: iconst_1
      21: aload_0
      22: aload_2
      23: getfield      #281                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      26: invokespecial #298                // Method intToLong:(I)J
      29: lastore
      30: aload         4
      32: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      35: iconst_2
      36: aload_0
      37: aload_2
      38: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      41: invokespecial #298                // Method intToLong:(I)J
      44: lastore
      45: aload         4
      47: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      50: iconst_3
      51: aload_0
      52: aload_0
      53: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      56: arraylength
      57: invokespecial #298                // Method intToLong:(I)J
      60: lastore
      61: aload         4
      63: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      66: iconst_4
      67: aload_0
      68: aload_0
      69: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      72: invokevirtual #336                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      75: invokespecial #298                // Method intToLong:(I)J
      78: lastore
      79: aload         4
      81: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      84: iconst_5
      85: aload_0
      86: aload_0
      87: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      90: invokevirtual #339                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
      93: invokespecial #298                // Method intToLong:(I)J
      96: lastore
      97: aload_2
      98: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
     101: ifne          121
     104: aload_2
     105: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
     108: ifne          121
     111: aload_0
     112: aload_1
     113: aload_3
     114: aload         4
     116: aload         5
     118: invokespecial #322                // Method nextAddresses:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
     121: return

  private boolean isWithXor(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aload_1
       1: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
       4: ifeq          23
       7: aload_0
       8: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      11: invokevirtual #340                // Method org/bouncycastle/crypto/params/Argon2Parameters.getVersion:()I
      14: bipush        16
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private int getPrevOffset(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #272                // Field laneLength:I
       5: irem
       6: ifne          18
       9: iload_1
      10: aload_0
      11: getfield      #272                // Field laneLength:I
      14: iadd
      15: iconst_1
      16: isub
      17: ireturn
      18: iload_1
      19: iconst_1
      20: isub
      21: ireturn

  private int rotatePrevOffset(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #272                // Field laneLength:I
       5: irem
       6: iconst_1
       7: if_icmpne     14
      10: iload_1
      11: iconst_1
      12: isub
      13: istore_2
      14: iload_2
      15: ireturn

  private static int getStartingIndex(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aload_0
       1: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
       4: ifne          16
       7: aload_0
       8: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      11: ifne          16
      14: iconst_2
      15: ireturn
      16: iconst_0
      17: ireturn

  private void nextAddresses(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block);
    Code:
       0: aload_3
       1: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       4: bipush        6
       6: dup2
       7: laload
       8: lconst_1
       9: ladd
      10: lastore
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokestatic  #333                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$300:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      19: aload_1
      20: aload_2
      21: aload         4
      23: aload         4
      25: invokestatic  #333                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$300:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      28: return

  private long getPseudoRandom(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, boolean);
    Code:
       0: iload         7
       2: ifeq          40
       5: aload_2
       6: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
       9: sipush        128
      12: irem
      13: ifne          26
      16: aload_0
      17: aload_1
      18: aload         5
      20: aload         4
      22: aload_3
      23: invokespecial #322                // Method nextAddresses:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      26: aload_3
      27: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      30: aload_2
      31: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
      34: sipush        128
      37: irem
      38: laload
      39: lreturn
      40: aload_0
      41: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      44: iload         6
      46: aaload
      47: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      50: iconst_0
      51: laload
      52: lreturn

  private int getRefLane(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, long);
    Code:
       0: lload_2
       1: bipush        32
       3: lushr
       4: aload_0
       5: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       8: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      11: i2l
      12: lrem
      13: l2i
      14: istore        4
      16: aload_1
      17: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      20: ifne          36
      23: aload_1
      24: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      27: ifne          36
      30: aload_1
      31: getfield      #281                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      34: istore        4
      36: iload         4
      38: ireturn

  private int getRefColumn(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, long, boolean);
    Code:
       0: aload_1
       1: getfield      #282                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
       4: ifne          63
       7: iconst_0
       8: istore        6
      10: iload         4
      12: ifeq          36
      15: aload_1
      16: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      19: aload_0
      20: getfield      #273                // Field segmentLength:I
      23: imul
      24: aload_1
      25: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
      28: iadd
      29: iconst_1
      30: isub
      31: istore        5
      33: goto          131
      36: aload_1
      37: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      40: aload_0
      41: getfield      #273                // Field segmentLength:I
      44: imul
      45: aload_1
      46: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
      49: ifne          56
      52: iconst_m1
      53: goto          57
      56: iconst_0
      57: iadd
      58: istore        5
      60: goto          131
      63: aload_1
      64: getfield      #283                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      67: iconst_1
      68: iadd
      69: aload_0
      70: getfield      #273                // Field segmentLength:I
      73: imul
      74: aload_0
      75: getfield      #272                // Field laneLength:I
      78: irem
      79: istore        6
      81: iload         4
      83: ifeq          107
      86: aload_0
      87: getfield      #272                // Field laneLength:I
      90: aload_0
      91: getfield      #273                // Field segmentLength:I
      94: isub
      95: aload_1
      96: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
      99: iadd
     100: iconst_1
     101: isub
     102: istore        5
     104: goto          131
     107: aload_0
     108: getfield      #272                // Field laneLength:I
     111: aload_0
     112: getfield      #273                // Field segmentLength:I
     115: isub
     116: aload_1
     117: getfield      #280                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.index:I
     120: ifne          127
     123: iconst_m1
     124: goto          128
     127: iconst_0
     128: iadd
     129: istore        5
     131: lload_2
     132: ldc2_w        #151                // long 4294967295l
     135: land
     136: lstore        7
     138: lload         7
     140: lload         7
     142: lmul
     143: bipush        32
     145: lushr
     146: lstore        7
     148: iload         5
     150: iconst_1
     151: isub
     152: i2l
     153: iload         5
     155: i2l
     156: lload         7
     158: lmul
     159: bipush        32
     161: lushr
     162: lsub
     163: lstore        7
     165: iload         6
     167: i2l
     168: lload         7
     170: ladd
     171: l2i
     172: aload_0
     173: getfield      #272                // Field laneLength:I
     176: irem
     177: ireturn

  private void digest(int);
    Code:
       0: aload_0
       1: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
       4: aload_0
       5: getfield      #272                // Field laneLength:I
       8: iconst_1
       9: isub
      10: aaload
      11: astore_2
      12: iconst_1
      13: istore_3
      14: iload_3
      15: aload_0
      16: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      19: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      22: if_icmpge     57
      25: iload_3
      26: aload_0
      27: getfield      #272                // Field laneLength:I
      30: imul
      31: aload_0
      32: getfield      #272                // Field laneLength:I
      35: iconst_1
      36: isub
      37: iadd
      38: istore        4
      40: aload_2
      41: aload_0
      42: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      45: iload         4
      47: aaload
      48: invokestatic  #330                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$500:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      51: iinc          3, 1
      54: goto          14
      57: aload_2
      58: invokevirtual #325                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.toBytes:()[B
      61: astore_3
      62: aload_0
      63: aload_0
      64: aload_3
      65: iload_1
      66: invokespecial #304                // Method hash:([BI)[B
      69: putfield      #274                // Field result:[B
      72: return

  private byte[] initialHash(org.bouncycastle.crypto.params.Argon2Parameters, int, byte[]);
    Code:
       0: new           #159                // class org/bouncycastle/crypto/digests/Blake2bDigest
       3: dup
       4: sipush        512
       7: invokespecial #292                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
      10: astore        4
      12: aload         4
      14: aload_1
      15: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      18: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      21: aload         4
      23: iload_2
      24: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      27: aload         4
      29: aload_1
      30: invokevirtual #338                // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
      33: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      36: aload         4
      38: aload_1
      39: invokevirtual #336                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      42: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      45: aload         4
      47: aload_1
      48: invokevirtual #340                // Method org/bouncycastle/crypto/params/Argon2Parameters.getVersion:()I
      51: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      54: aload         4
      56: aload_1
      57: invokevirtual #339                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
      60: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      63: aload         4
      65: aload_3
      66: invokestatic  #309                // Method addByteString:(Lorg/bouncycastle/crypto/Digest;[B)V
      69: aload         4
      71: aload_1
      72: invokevirtual #342                // Method org/bouncycastle/crypto/params/Argon2Parameters.getSalt:()[B
      75: invokestatic  #309                // Method addByteString:(Lorg/bouncycastle/crypto/Digest;[B)V
      78: aload         4
      80: aload_1
      81: invokevirtual #343                // Method org/bouncycastle/crypto/params/Argon2Parameters.getSecret:()[B
      84: invokestatic  #309                // Method addByteString:(Lorg/bouncycastle/crypto/Digest;[B)V
      87: aload         4
      89: aload_1
      90: invokevirtual #341                // Method org/bouncycastle/crypto/params/Argon2Parameters.getAdditional:()[B
      93: invokestatic  #309                // Method addByteString:(Lorg/bouncycastle/crypto/Digest;[B)V
      96: aload         4
      98: invokevirtual #291                // Method org/bouncycastle/crypto/digests/Blake2bDigest.getDigestSize:()I
     101: newarray       byte
     103: astore        5
     105: aload         4
     107: aload         5
     109: iconst_0
     110: invokevirtual #293                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     113: pop
     114: aload         5
     116: areturn

  private byte[] hash(byte[], int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: iload_2
       5: invokestatic  #346                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I)[B
       8: astore        4
      10: bipush        64
      12: istore        5
      14: iload_2
      15: iload         5
      17: if_icmpgt     64
      20: new           #159                // class org/bouncycastle/crypto/digests/Blake2bDigest
      23: dup
      24: iload_2
      25: bipush        8
      27: imul
      28: invokespecial #292                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
      31: astore        6
      33: aload         6
      35: aload         4
      37: iconst_0
      38: aload         4
      40: arraylength
      41: invokevirtual #294                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
      44: aload         6
      46: aload_1
      47: iconst_0
      48: aload_1
      49: arraylength
      50: invokevirtual #294                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
      53: aload         6
      55: aload_3
      56: iconst_0
      57: invokevirtual #293                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
      60: pop
      61: goto          243
      64: new           #159                // class org/bouncycastle/crypto/digests/Blake2bDigest
      67: dup
      68: iload         5
      70: bipush        8
      72: imul
      73: invokespecial #292                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
      76: astore        6
      78: iload         5
      80: newarray       byte
      82: astore        7
      84: aload         6
      86: aload         4
      88: iconst_0
      89: aload         4
      91: arraylength
      92: invokevirtual #294                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
      95: aload         6
      97: aload_1
      98: iconst_0
      99: aload_1
     100: arraylength
     101: invokevirtual #294                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     104: aload         6
     106: aload         7
     108: iconst_0
     109: invokevirtual #293                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     112: pop
     113: aload         7
     115: iconst_0
     116: aload_3
     117: iconst_0
     118: iload         5
     120: iconst_2
     121: idiv
     122: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: iload_2
     126: bipush        31
     128: iadd
     129: bipush        32
     131: idiv
     132: iconst_2
     133: isub
     134: istore        8
     136: iload         5
     138: iconst_2
     139: idiv
     140: istore        9
     142: iconst_2
     143: istore        10
     145: iload         10
     147: iload         8
     149: if_icmpgt     200
     152: aload         6
     154: aload         7
     156: iconst_0
     157: aload         7
     159: arraylength
     160: invokevirtual #294                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     163: aload         6
     165: aload         7
     167: iconst_0
     168: invokevirtual #293                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     171: pop
     172: aload         7
     174: iconst_0
     175: aload_3
     176: iload         9
     178: iload         5
     180: iconst_2
     181: idiv
     182: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     185: iinc          10, 1
     188: iload         9
     190: iload         5
     192: iconst_2
     193: idiv
     194: iadd
     195: istore        9
     197: goto          145
     200: iload_2
     201: bipush        32
     203: iload         8
     205: imul
     206: isub
     207: istore        10
     209: new           #159                // class org/bouncycastle/crypto/digests/Blake2bDigest
     212: dup
     213: iload         10
     215: bipush        8
     217: imul
     218: invokespecial #292                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
     221: astore        6
     223: aload         6
     225: aload         7
     227: iconst_0
     228: aload         7
     230: arraylength
     231: invokevirtual #294                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     234: aload         6
     236: aload_3
     237: iload         9
     239: invokevirtual #293                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     242: pop
     243: aload_3
     244: areturn

  private static void roundFunction(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         5
       4: iload         9
       6: iload         13
       8: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      11: aload_0
      12: iload_2
      13: iload         6
      15: iload         10
      17: iload         14
      19: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      22: aload_0
      23: iload_3
      24: iload         7
      26: iload         11
      28: iload         15
      30: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      33: aload_0
      34: iload         4
      36: iload         8
      38: iload         12
      40: iload         16
      42: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      45: aload_0
      46: iload_1
      47: iload         6
      49: iload         11
      51: iload         16
      53: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      56: aload_0
      57: iload_2
      58: iload         7
      60: iload         12
      62: iload         13
      64: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      67: aload_0
      68: iload_3
      69: iload         8
      71: iload         9
      73: iload         14
      75: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      78: aload_0
      79: iload         4
      81: iload         5
      83: iload         10
      85: iload         15
      87: invokestatic  #311                // Method F:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIII)V
      90: return

  private static void F(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #310                // Method fBlaMka:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;II)V
       6: aload_0
       7: iload         4
       9: iload_1
      10: ldc2_w        #145                // long 32l
      13: invokestatic  #313                // Method rotr64:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIJ)V
      16: aload_0
      17: iload_3
      18: iload         4
      20: invokestatic  #310                // Method fBlaMka:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;II)V
      23: aload_0
      24: iload_2
      25: iload_3
      26: ldc2_w        #143                // long 24l
      29: invokestatic  #313                // Method rotr64:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIJ)V
      32: aload_0
      33: iload_1
      34: iload_2
      35: invokestatic  #310                // Method fBlaMka:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;II)V
      38: aload_0
      39: iload         4
      41: iload_1
      42: ldc2_w        #141                // long 16l
      45: invokestatic  #313                // Method rotr64:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIJ)V
      48: aload_0
      49: iload_3
      50: iload         4
      52: invokestatic  #310                // Method fBlaMka:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;II)V
      55: aload_0
      56: iload_2
      57: iload_3
      58: ldc2_w        #147                // long 63l
      61: invokestatic  #313                // Method rotr64:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIJ)V
      64: return

  private static void fBlaMka(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int);
    Code:
       0: aload_0
       1: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       4: iload_1
       5: laload
       6: ldc2_w        #151                // long 4294967295l
       9: land
      10: aload_0
      11: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      14: iload_2
      15: laload
      16: ldc2_w        #151                // long 4294967295l
      19: land
      20: lmul
      21: lstore        5
      23: aload_0
      24: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      27: iload_1
      28: aload_0
      29: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      32: iload_1
      33: laload
      34: aload_0
      35: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      38: iload_2
      39: laload
      40: ladd
      41: ldc2_w        #139                // long 2l
      44: lload         5
      46: lmul
      47: ladd
      48: lastore
      49: return

  private static void rotr64(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int, long);
    Code:
       0: aload_0
       1: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       4: iload_1
       5: laload
       6: aload_0
       7: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      10: iload_2
      11: laload
      12: lxor
      13: lstore        5
      15: aload_0
      16: invokestatic  #329                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      19: iload_1
      20: lload         5
      22: lload_3
      23: l2i
      24: lushr
      25: lload         5
      27: ldc2_w        #149                // long 64l
      30: lload_3
      31: lsub
      32: l2i
      33: lshl
      34: lor
      35: lastore
      36: return

  private void initialize(byte[], int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: iload_2
       6: aload_1
       7: invokespecial #320                // Method initialHash:(Lorg/bouncycastle/crypto/params/Argon2Parameters;I[B)[B
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokespecial #302                // Method fillFirstBlocks:([B)V
      16: return

  private static void addIntToLittleEndian(org.bouncycastle.crypto.Digest, int);
    Code:
       0: aload_0
       1: iload_1
       2: i2b
       3: invokeinterface #349,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
       8: aload_0
       9: iload_1
      10: bipush        8
      12: iushr
      13: i2b
      14: invokeinterface #349,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      19: aload_0
      20: iload_1
      21: bipush        16
      23: iushr
      24: i2b
      25: invokeinterface #349,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      30: aload_0
      31: iload_1
      32: bipush        24
      34: iushr
      35: i2b
      36: invokeinterface #349,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      41: return

  private static void addByteString(org.bouncycastle.crypto.Digest, byte[]);
    Code:
       0: aload_1
       1: ifnull        23
       4: aload_0
       5: aload_1
       6: arraylength
       7: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      10: aload_0
      11: aload_1
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokeinterface #350,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      20: goto          28
      23: aload_0
      24: iconst_0
      25: invokestatic  #308                // Method addIntToLittleEndian:(Lorg/bouncycastle/crypto/Digest;I)V
      28: return

  private void fillFirstBlocks(byte[]);
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: bastore
      11: dup
      12: iconst_2
      13: iconst_0
      14: bastore
      15: dup
      16: iconst_3
      17: iconst_0
      18: bastore
      19: astore_2
      20: iconst_4
      21: newarray       byte
      23: dup
      24: iconst_0
      25: iconst_1
      26: bastore
      27: dup
      28: iconst_1
      29: iconst_0
      30: bastore
      31: dup
      32: iconst_2
      33: iconst_0
      34: bastore
      35: dup
      36: iconst_3
      37: iconst_0
      38: bastore
      39: astore_3
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokespecial #306                // Method getInitialHashLong:([B[B)[B
      46: astore        4
      48: aload_0
      49: aload_1
      50: aload_3
      51: invokespecial #306                // Method getInitialHashLong:([B[B)[B
      54: astore        5
      56: iconst_0
      57: istore        6
      59: iload         6
      61: aload_0
      62: getfield      #276                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      65: invokevirtual #337                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      68: if_icmpge     155
      71: iload         6
      73: aload         4
      75: bipush        68
      77: invokestatic  #347                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
      80: iload         6
      82: aload         5
      84: bipush        68
      86: invokestatic  #347                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
      89: aload_0
      90: aload         4
      92: sipush        1024
      95: invokespecial #304                // Method hash:([BI)[B
      98: astore        7
     100: aload_0
     101: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     104: iload         6
     106: aload_0
     107: getfield      #272                // Field laneLength:I
     110: imul
     111: iconst_0
     112: iadd
     113: aaload
     114: aload         7
     116: invokevirtual #326                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.fromBytes:([B)V
     119: aload_0
     120: aload         5
     122: sipush        1024
     125: invokespecial #304                // Method hash:([BI)[B
     128: astore        7
     130: aload_0
     131: getfield      #275                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     134: iload         6
     136: aload_0
     137: getfield      #272                // Field laneLength:I
     140: imul
     141: iconst_1
     142: iadd
     143: aaload
     144: aload         7
     146: invokevirtual #326                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.fromBytes:([B)V
     149: iinc          6, 1
     152: goto          59
     155: return

  private byte[] getInitialHashLong(byte[], byte[]);
    Code:
       0: bipush        72
       2: newarray       byte
       4: astore_3
       5: aload_1
       6: iconst_0
       7: aload_3
       8: iconst_0
       9: bipush        64
      11: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_2
      15: iconst_0
      16: aload_3
      17: bipush        64
      19: iconst_4
      20: invokestatic  #290                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_3
      24: areturn

  private long intToLong(int);
    Code:
       0: iload_1
       1: i2l
       2: ldc2_w        #151                // long 4294967295l
       5: land
       6: lreturn

  static void access$600(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: iload         9
      16: iload         10
      18: iload         11
      20: iload         12
      22: iload         13
      24: iload         14
      26: iload         15
      28: iload         16
      30: invokestatic  #312                // Method roundFunction:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIIIIIIIIIIIIIII)V
      33: return
}
