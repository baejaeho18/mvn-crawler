public class org.bouncycastle.crypto.signers.GenericSigner implements org.bouncycastle.crypto.Signer {
  private final org.bouncycastle.crypto.AsymmetricBlockCipher engine;

  private final org.bouncycastle.crypto.Digest digest;

  private boolean forSigning;

  public org.bouncycastle.crypto.signers.GenericSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #88                 // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
       9: aload_0
      10: aload_2
      11: putfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      14: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #87                 // Field forSigning:Z
       5: aload_2
       6: instanceof    #61                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       9: ifeq          26
      12: aload_2
      13: checkcast     #61                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      16: invokevirtual #95                 // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      19: checkcast     #60                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      22: astore_3
      23: goto          31
      26: aload_2
      27: checkcast     #60                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      30: astore_3
      31: iload_1
      32: ifeq          52
      35: aload_3
      36: invokevirtual #94                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      39: ifne          52
      42: new           #51                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #3                  // String signing requires private key
      48: invokespecial #90                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_1
      53: ifne          73
      56: aload_3
      57: invokevirtual #94                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      60: ifeq          73
      63: new           #51                 // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #4                  // String verification requires public key
      69: invokespecial #90                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: invokevirtual #96                 // Method reset:()V
      77: aload_0
      78: getfield      #88                 // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      81: iload_1
      82: aload_2
      83: invokeinterface #99,  3           // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      88: return

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: iload_1
       5: invokeinterface #102,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      10: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #104,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      12: return

  public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException, org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #87                 // Field forSigning:Z
       4: ifne          17
       7: new           #52                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String GenericSigner not initialised for signature generation.
      13: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      21: invokeinterface #100,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      26: newarray       byte
      28: astore_1
      29: aload_0
      30: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      33: aload_1
      34: iconst_0
      35: invokeinterface #103,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      40: pop
      41: aload_0
      42: getfield      #88                 // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      45: aload_1
      46: iconst_0
      47: aload_1
      48: arraylength
      49: invokeinterface #98,  4           // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.processBlock:([BII)[B
      54: areturn

  public boolean verifySignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #87                 // Field forSigning:Z
       4: ifeq          17
       7: new           #52                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String GenericSigner not initialised for verification
      13: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      21: invokeinterface #100,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      26: newarray       byte
      28: astore_2
      29: aload_0
      30: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      33: aload_2
      34: iconst_0
      35: invokeinterface #103,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      40: pop
      41: aload_0
      42: getfield      #88                 // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      45: aload_1
      46: iconst_0
      47: aload_1
      48: arraylength
      49: invokeinterface #98,  4           // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.processBlock:([BII)[B
      54: astore_3
      55: aload_3
      56: arraylength
      57: aload_2
      58: arraylength
      59: if_icmpge     86
      62: aload_2
      63: arraylength
      64: newarray       byte
      66: astore        4
      68: aload_3
      69: iconst_0
      70: aload         4
      72: aload         4
      74: arraylength
      75: aload_3
      76: arraylength
      77: isub
      78: aload_3
      79: arraylength
      80: invokestatic  #93                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      83: aload         4
      85: astore_3
      86: aload_3
      87: aload_2
      88: invokestatic  #97                 // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
      91: ireturn
      92: astore_3
      93: iconst_0
      94: ireturn
    Exception table:
       from    to  target type
          41    91    92   Class java/lang/Exception

  public void reset();
    Code:
       0: aload_0
       1: getfield      #89                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #101,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.reset:()V
       9: return
}
