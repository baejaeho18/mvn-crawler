public class org.bouncycastle.crypto.tls.ByteQueue {
  private static final int DEFAULT_CAPACITY;

  private byte[] databuf;

  private int skipped;

  private int available;

  private boolean readOnlyBuf;

  public static int nextTwoPow(int);
    Code:
       0: iload_0
       1: iload_0
       2: iconst_1
       3: ishr
       4: ior
       5: istore_0
       6: iload_0
       7: iload_0
       8: iconst_2
       9: ishr
      10: ior
      11: istore_0
      12: iload_0
      13: iload_0
      14: iconst_4
      15: ishr
      16: ior
      17: istore_0
      18: iload_0
      19: iload_0
      20: bipush        8
      22: ishr
      23: ior
      24: istore_0
      25: iload_0
      26: iload_0
      27: bipush        16
      29: ishr
      30: ior
      31: istore_0
      32: iload_0
      33: iconst_1
      34: iadd
      35: ireturn

  public org.bouncycastle.crypto.tls.ByteQueue();
    Code:
       0: aload_0
       1: sipush        1024
       4: invokespecial #109                // Method "<init>":(I)V
       7: return

  public org.bouncycastle.crypto.tls.ByteQueue(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #94                 // Field skipped:I
       9: aload_0
      10: iconst_0
      11: putfield      #93                 // Field available:I
      14: aload_0
      15: iconst_0
      16: putfield      #95                 // Field readOnlyBuf:Z
      19: aload_0
      20: iload_1
      21: ifne          30
      24: getstatic     #97                 // Field org/bouncycastle/crypto/tls/TlsUtils.EMPTY_BYTES:[B
      27: goto          33
      30: iload_1
      31: newarray       byte
      33: putfield      #96                 // Field databuf:[B
      36: return

  public org.bouncycastle.crypto.tls.ByteQueue(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #94                 // Field skipped:I
       9: aload_0
      10: iconst_0
      11: putfield      #93                 // Field available:I
      14: aload_0
      15: iconst_0
      16: putfield      #95                 // Field readOnlyBuf:Z
      19: aload_0
      20: aload_1
      21: putfield      #96                 // Field databuf:[B
      24: aload_0
      25: iload_2
      26: putfield      #94                 // Field skipped:I
      29: aload_0
      30: iload_3
      31: putfield      #93                 // Field available:I
      34: aload_0
      35: iconst_1
      36: putfield      #95                 // Field readOnlyBuf:Z
      39: return

  public void addData(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #95                 // Field readOnlyBuf:Z
       4: ifeq          17
       7: new           #62                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String Cannot add data to read-only buffer
      13: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #94                 // Field skipped:I
      21: aload_0
      22: getfield      #93                 // Field available:I
      25: iadd
      26: iload_3
      27: iadd
      28: aload_0
      29: getfield      #96                 // Field databuf:[B
      32: arraylength
      33: if_icmple     115
      36: aload_0
      37: getfield      #93                 // Field available:I
      40: iload_3
      41: iadd
      42: invokestatic  #108                // Method nextTwoPow:(I)I
      45: istore        4
      47: iload         4
      49: aload_0
      50: getfield      #96                 // Field databuf:[B
      53: arraylength
      54: if_icmple     90
      57: iload         4
      59: newarray       byte
      61: astore        5
      63: aload_0
      64: getfield      #96                 // Field databuf:[B
      67: aload_0
      68: getfield      #94                 // Field skipped:I
      71: aload         5
      73: iconst_0
      74: aload_0
      75: getfield      #93                 // Field available:I
      78: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      81: aload_0
      82: aload         5
      84: putfield      #96                 // Field databuf:[B
      87: goto          110
      90: aload_0
      91: getfield      #96                 // Field databuf:[B
      94: aload_0
      95: getfield      #94                 // Field skipped:I
      98: aload_0
      99: getfield      #96                 // Field databuf:[B
     102: iconst_0
     103: aload_0
     104: getfield      #93                 // Field available:I
     107: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     110: aload_0
     111: iconst_0
     112: putfield      #94                 // Field skipped:I
     115: aload_1
     116: iload_2
     117: aload_0
     118: getfield      #96                 // Field databuf:[B
     121: aload_0
     122: getfield      #94                 // Field skipped:I
     125: aload_0
     126: getfield      #93                 // Field available:I
     129: iadd
     130: iload_3
     131: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     134: aload_0
     135: dup
     136: getfield      #93                 // Field available:I
     139: iload_3
     140: iadd
     141: putfield      #93                 // Field available:I
     144: return

  public int available();
    Code:
       0: aload_0
       1: getfield      #93                 // Field available:I
       4: ireturn

  public void copyTo(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #93                 // Field available:I
       5: if_icmple     47
       8: new           #62                 // class java/lang/IllegalStateException
      11: dup
      12: new           #64                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #6                  // String Cannot copy
      21: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_2
      25: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #2                  // String  bytes, only got
      30: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #93                 // Field available:I
      37: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_1
      48: aload_0
      49: getfield      #96                 // Field databuf:[B
      52: aload_0
      53: getfield      #94                 // Field skipped:I
      56: iload_2
      57: invokevirtual #99                 // Method java/io/OutputStream.write:([BII)V
      60: return

  public void read(byte[], int, int, int);
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: isub
       4: iload_3
       5: if_icmpge     50
       8: new           #61                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #64                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #4                  // String Buffer size of
      21: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: arraylength
      26: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #3                  // String  is too small for a read of
      31: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_3
      35: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #1                  // String  bytes
      40: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #93                 // Field available:I
      54: iload         4
      56: isub
      57: iload_3
      58: if_icmpge     71
      61: new           #62                 // class java/lang/IllegalStateException
      64: dup
      65: ldc           #9                  // String Not enough data to read
      67: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #96                 // Field databuf:[B
      75: aload_0
      76: getfield      #94                 // Field skipped:I
      79: iload         4
      81: iadd
      82: aload_1
      83: iload_2
      84: iload_3
      85: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      88: return

  public java.io.ByteArrayInputStream readFrom(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #93                 // Field available:I
       5: if_icmple     47
       8: new           #62                 // class java/lang/IllegalStateException
      11: dup
      12: new           #64                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #7                  // String Cannot read
      21: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #2                  // String  bytes, only got
      30: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #93                 // Field available:I
      37: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #94                 // Field skipped:I
      51: istore_2
      52: aload_0
      53: dup
      54: getfield      #93                 // Field available:I
      57: iload_1
      58: isub
      59: putfield      #93                 // Field available:I
      62: aload_0
      63: dup
      64: getfield      #94                 // Field skipped:I
      67: iload_1
      68: iadd
      69: putfield      #94                 // Field skipped:I
      72: new           #58                 // class java/io/ByteArrayInputStream
      75: dup
      76: aload_0
      77: getfield      #96                 // Field databuf:[B
      80: iload_2
      81: iload_1
      82: invokespecial #98                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      85: areturn

  public void removeData(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #93                 // Field available:I
       5: if_icmple     47
       8: new           #62                 // class java/lang/IllegalStateException
      11: dup
      12: new           #64                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #8                  // String Cannot remove
      21: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #2                  // String  bytes, only got
      30: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #93                 // Field available:I
      37: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: dup
      49: getfield      #93                 // Field available:I
      52: iload_1
      53: isub
      54: putfield      #93                 // Field available:I
      57: aload_0
      58: dup
      59: getfield      #94                 // Field skipped:I
      62: iload_1
      63: iadd
      64: putfield      #94                 // Field skipped:I
      67: return

  public void removeData(byte[], int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #111                // Method read:([BIII)V
       9: aload_0
      10: iload         4
      12: iload_3
      13: iadd
      14: invokevirtual #110                // Method removeData:(I)V
      17: return

  public byte[] removeData(int, int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: aload_3
       6: iconst_0
       7: iload_1
       8: iload_2
       9: invokevirtual #112                // Method removeData:([BIII)V
      12: aload_3
      13: areturn

  public void shrink();
    Code:
       0: aload_0
       1: getfield      #93                 // Field available:I
       4: ifne          22
       7: aload_0
       8: getstatic     #97                 // Field org/bouncycastle/crypto/tls/TlsUtils.EMPTY_BYTES:[B
      11: putfield      #96                 // Field databuf:[B
      14: aload_0
      15: iconst_0
      16: putfield      #94                 // Field skipped:I
      19: goto          70
      22: aload_0
      23: getfield      #93                 // Field available:I
      26: invokestatic  #108                // Method nextTwoPow:(I)I
      29: istore_1
      30: iload_1
      31: aload_0
      32: getfield      #96                 // Field databuf:[B
      35: arraylength
      36: if_icmpge     70
      39: iload_1
      40: newarray       byte
      42: astore_2
      43: aload_0
      44: getfield      #96                 // Field databuf:[B
      47: aload_0
      48: getfield      #94                 // Field skipped:I
      51: aload_2
      52: iconst_0
      53: aload_0
      54: getfield      #93                 // Field available:I
      57: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: aload_0
      61: aload_2
      62: putfield      #96                 // Field databuf:[B
      65: aload_0
      66: iconst_0
      67: putfield      #94                 // Field skipped:I
      70: return
}
