class org.bouncycastle.crypto.tls.DTLSReliableHandshake {
  private static final int MAX_RECEIVE_AHEAD;

  private static final int MESSAGE_HEADER_LENGTH;

  private org.bouncycastle.crypto.tls.DTLSRecordLayer recordLayer;

  private org.bouncycastle.crypto.tls.TlsHandshakeHash handshakeHash;

  private java.util.Hashtable currentInboundFlight;

  private java.util.Hashtable previousInboundFlight;

  private java.util.Vector outboundFlight;

  private boolean sending;

  private int message_seq;

  private int next_receive_seq;

  org.bouncycastle.crypto.tls.DTLSReliableHandshake(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.DTLSRecordLayer);
    Code:
       0: aload_0
       1: invokespecial #239                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #120                // class java/util/Hashtable
       8: dup
       9: invokespecial #240                // Method java/util/Hashtable."<init>":()V
      12: putfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
      15: aload_0
      16: aconst_null
      17: putfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
      20: aload_0
      21: new           #121                // class java/util/Vector
      24: dup
      25: invokespecial #246                // Method java/util/Vector."<init>":()V
      28: putfield      #234                // Field outboundFlight:Ljava/util/Vector;
      31: aload_0
      32: iconst_1
      33: putfield      #231                // Field sending:Z
      36: aload_0
      37: iconst_0
      38: putfield      #229                // Field message_seq:I
      41: aload_0
      42: iconst_0
      43: putfield      #230                // Field next_receive_seq:I
      46: aload_0
      47: aload_2
      48: putfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      51: aload_0
      52: new           #128                // class org/bouncycastle/crypto/tls/DeferredHash
      55: dup
      56: invokespecial #282                // Method org/bouncycastle/crypto/tls/DeferredHash."<init>":()V
      59: putfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      62: aload_0
      63: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      66: aload_1
      67: invokeinterface #299,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V
      72: return

  void notifyHelloComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       5: invokeinterface #300,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.notifyPRFDetermined:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: putfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      13: return

  org.bouncycastle.crypto.tls.TlsHandshakeHash getHandshakeHash();
    Code:
       0: aload_0
       1: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: areturn

  org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish();
    Code:
       0: aload_0
       1: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: invokeinterface #301,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.stopTracking:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      15: putfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      18: aload_1
      19: areturn

  void sendMessage(short, byte[]) throws java.io.IOException;
    Code:
       0: aload_2
       1: arraylength
       2: invokestatic  #284                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint24:(I)V
       5: aload_0
       6: getfield      #231                // Field sending:Z
       9: ifne          28
      12: aload_0
      13: invokespecial #262                // Method checkInboundFlight:()V
      16: aload_0
      17: iconst_1
      18: putfield      #231                // Field sending:Z
      21: aload_0
      22: getfield      #234                // Field outboundFlight:Ljava/util/Vector;
      25: invokevirtual #247                // Method java/util/Vector.removeAllElements:()V
      28: new           #126                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
      31: dup
      32: aload_0
      33: dup
      34: getfield      #229                // Field message_seq:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #229                // Field message_seq:I
      43: iload_1
      44: aload_2
      45: aconst_null
      46: invokespecial #278                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message."<init>":(IS[BLorg/bouncycastle/crypto/tls/DTLSReliableHandshake$1;)V
      49: astore_3
      50: aload_0
      51: getfield      #234                // Field outboundFlight:Ljava/util/Vector;
      54: aload_3
      55: invokevirtual #249                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      58: aload_0
      59: aload_3
      60: invokespecial #271                // Method writeMessage:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)V
      63: aload_0
      64: aload_3
      65: invokespecial #273                // Method updateHandshakeMessagesDigest:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
      68: pop
      69: return

  byte[] receiveMessageBody(short) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #270                // Method receiveMessage:()Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
       4: astore_2
       5: aload_2
       6: invokevirtual #276                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
       9: iload_1
      10: if_icmpeq     23
      13: new           #129                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      16: dup
      17: bipush        10
      19: invokespecial #283                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      22: athrow
      23: aload_2
      24: invokevirtual #277                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      27: areturn

  org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #231                // Field sending:Z
       4: ifeq          23
       7: aload_0
       8: iconst_0
       9: putfield      #231                // Field sending:Z
      12: aload_0
      13: new           #120                // class java/util/Hashtable
      16: dup
      17: invokespecial #240                // Method java/util/Hashtable."<init>":()V
      20: invokespecial #266                // Method prepareInboundFlight:(Ljava/util/Hashtable;)V
      23: aconst_null
      24: astore_1
      25: sipush        1000
      28: istore_2
      29: aload_0
      30: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      33: invokevirtual #259                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.isClosed:()Z
      36: ifeq          49
      39: new           #129                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      42: dup
      43: bipush        90
      45: invokespecial #283                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      48: athrow
      49: aload_0
      50: invokespecial #269                // Method getPendingMessage:()Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
      53: astore_3
      54: aload_3
      55: ifnull        60
      58: aload_3
      59: areturn
      60: aload_0
      61: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      64: invokevirtual #256                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.getReceiveLimit:()I
      67: istore        4
      69: aload_1
      70: ifnull        80
      73: aload_1
      74: arraylength
      75: iload         4
      77: if_icmpge     85
      80: iload         4
      82: newarray       byte
      84: astore_1
      85: aload_0
      86: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      89: aload_1
      90: iconst_0
      91: iload         4
      93: iload_2
      94: invokevirtual #260                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.receive:([BIII)I
      97: istore        5
      99: iload         5
     101: ifge          107
     104: goto          140
     107: aload_0
     108: bipush        16
     110: aload_0
     111: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
     114: invokevirtual #255                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.getReadEpoch:()I
     117: aload_1
     118: iconst_0
     119: iload         5
     121: invokespecial #265                // Method processRecord:(II[BII)Z
     124: istore        6
     126: iload         6
     128: ifeq          137
     131: aload_0
     132: iload_2
     133: invokespecial #264                // Method backOff:(I)I
     136: istore_2
     137: goto          29
     140: goto          144
     143: astore_3
     144: aload_0
     145: invokespecial #263                // Method resendOutboundFlight:()V
     148: aload_0
     149: iload_2
     150: invokespecial #264                // Method backOff:(I)I
     153: istore_2
     154: goto          29
    Exception table:
       from    to  target type
          29    59   143   Class java/io/IOException
          60   140   143   Class java/io/IOException

  void finish();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #231                // Field sending:Z
       6: ifne          16
       9: aload_0
      10: invokespecial #262                // Method checkInboundFlight:()V
      13: goto          37
      16: aload_0
      17: aconst_null
      18: invokespecial #266                // Method prepareInboundFlight:(Ljava/util/Hashtable;)V
      21: aload_0
      22: getfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
      25: ifnull        37
      28: new           #125                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$1
      31: dup
      32: aload_0
      33: invokespecial #274                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$1."<init>":(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake;)V
      36: astore_1
      37: aload_0
      38: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      41: aload_1
      42: invokevirtual #261                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.handshakeSuccessful:(Lorg/bouncycastle/crypto/tls/DTLSHandshakeRetransmit;)V
      45: return

  void resetHandshakeMessagesDigest();
    Code:
       0: aload_0
       1: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: invokeinterface #297,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.reset:()V
       9: return

  private int backOff(int);
    Code:
       0: iload_1
       1: iconst_2
       2: imul
       3: ldc           #1                  // int 60000
       5: invokestatic  #238                // Method java/lang/Math.min:(II)I
       8: ireturn

  private void checkInboundFlight();
    Code:
       0: aload_0
       1: getfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
       4: invokevirtual #242                // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       7: astore_1
       8: aload_1
       9: invokeinterface #295,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      14: ifeq          41
      17: aload_1
      18: invokeinterface #296,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      23: checkcast     #116                // class java/lang/Integer
      26: astore_2
      27: aload_2
      28: invokevirtual #237                // Method java/lang/Integer.intValue:()I
      31: aload_0
      32: getfield      #230                // Field next_receive_seq:I
      35: if_icmplt     38
      38: goto          8
      41: return

  private org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message getPendingMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
       4: aload_0
       5: getfield      #230                // Field next_receive_seq:I
       8: invokestatic  #294                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      11: invokevirtual #243                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #122                // class org/bouncycastle/crypto/tls/DTLSReassembler
      17: astore_1
      18: aload_1
      19: ifnull        65
      22: aload_1
      23: invokevirtual #252                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getBodyIfComplete:()[B
      26: astore_2
      27: aload_2
      28: ifnull        65
      31: aload_0
      32: aconst_null
      33: putfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
      36: aload_0
      37: new           #126                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
      40: dup
      41: aload_0
      42: dup
      43: getfield      #230                // Field next_receive_seq:I
      46: dup_x1
      47: iconst_1
      48: iadd
      49: putfield      #230                // Field next_receive_seq:I
      52: aload_1
      53: invokevirtual #250                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getMsgType:()S
      56: aload_2
      57: aconst_null
      58: invokespecial #278                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message."<init>":(IS[BLorg/bouncycastle/crypto/tls/DTLSReliableHandshake$1;)V
      61: invokespecial #273                // Method updateHandshakeMessagesDigest:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
      64: areturn
      65: aconst_null
      66: areturn

  private void prepareInboundFlight(java.util.Hashtable);
    Code:
       0: aload_0
       1: getfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
       4: invokestatic  #267                // Method resetAll:(Ljava/util/Hashtable;)V
       7: aload_0
       8: aload_0
       9: getfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
      12: putfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
      15: aload_0
      16: aload_1
      17: putfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
      20: return

  private boolean processRecord(int, int, byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        6
       3: iload         5
       5: bipush        12
       7: if_icmplt     278
      10: aload_3
      11: iload         4
      13: bipush        9
      15: iadd
      16: invokestatic  #289                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
      19: istore        7
      21: iload         7
      23: bipush        12
      25: iadd
      26: istore        8
      28: iload         5
      30: iload         8
      32: if_icmpge     38
      35: goto          278
      38: aload_3
      39: iload         4
      41: iconst_1
      42: iadd
      43: invokestatic  #289                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
      46: istore        9
      48: aload_3
      49: iload         4
      51: bipush        6
      53: iadd
      54: invokestatic  #289                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
      57: istore        10
      59: iload         10
      61: iload         7
      63: iadd
      64: iload         9
      66: if_icmple     72
      69: goto          278
      72: aload_3
      73: iload         4
      75: iconst_0
      76: iadd
      77: invokestatic  #290                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      80: istore        11
      82: iload         11
      84: bipush        20
      86: if_icmpne     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: istore        12
      96: iload_2
      97: iload         12
      99: if_icmpeq     105
     102: goto          278
     105: aload_3
     106: iload         4
     108: iconst_4
     109: iadd
     110: invokestatic  #288                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
     113: istore        13
     115: iload         13
     117: aload_0
     118: getfield      #230                // Field next_receive_seq:I
     121: iload_1
     122: iadd
     123: if_icmplt     129
     126: goto          261
     129: iload         13
     131: aload_0
     132: getfield      #230                // Field next_receive_seq:I
     135: if_icmplt     210
     138: aload_0
     139: getfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
     142: iload         13
     144: invokestatic  #294                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
     147: invokevirtual #243                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
     150: checkcast     #122                // class org/bouncycastle/crypto/tls/DTLSReassembler
     153: astore        14
     155: aload         14
     157: ifnonnull     188
     160: new           #122                // class org/bouncycastle/crypto/tls/DTLSReassembler
     163: dup
     164: iload         11
     166: iload         9
     168: invokespecial #253                // Method org/bouncycastle/crypto/tls/DTLSReassembler."<init>":(SI)V
     171: astore        14
     173: aload_0
     174: getfield      #232                // Field currentInboundFlight:Ljava/util/Hashtable;
     177: iload         13
     179: invokestatic  #294                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
     182: aload         14
     184: invokevirtual #244                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     187: pop
     188: aload         14
     190: iload         11
     192: iload         9
     194: aload_3
     195: iload         4
     197: bipush        12
     199: iadd
     200: iload         10
     202: iload         7
     204: invokevirtual #254                // Method org/bouncycastle/crypto/tls/DTLSReassembler.contributeFragment:(SI[BIII)V
     207: goto          261
     210: aload_0
     211: getfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
     214: ifnull        261
     217: aload_0
     218: getfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
     221: iload         13
     223: invokestatic  #294                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
     226: invokevirtual #243                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
     229: checkcast     #122                // class org/bouncycastle/crypto/tls/DTLSReassembler
     232: astore        14
     234: aload         14
     236: ifnull        261
     239: aload         14
     241: iload         11
     243: iload         9
     245: aload_3
     246: iload         4
     248: bipush        12
     250: iadd
     251: iload         10
     253: iload         7
     255: invokevirtual #254                // Method org/bouncycastle/crypto/tls/DTLSReassembler.contributeFragment:(SI[BIII)V
     258: iconst_1
     259: istore        6
     261: iload         4
     263: iload         8
     265: iadd
     266: istore        4
     268: iload         5
     270: iload         8
     272: isub
     273: istore        5
     275: goto          3
     278: iload         6
     280: ifeq          297
     283: aload_0
     284: getfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
     287: invokestatic  #268                // Method checkAll:(Ljava/util/Hashtable;)Z
     290: ifeq          297
     293: iconst_1
     294: goto          298
     297: iconst_0
     298: istore        7
     300: iload         7
     302: ifeq          316
     305: aload_0
     306: invokespecial #263                // Method resendOutboundFlight:()V
     309: aload_0
     310: getfield      #233                // Field previousInboundFlight:Ljava/util/Hashtable;
     313: invokestatic  #267                // Method resetAll:(Ljava/util/Hashtable;)V
     316: iload         7
     318: ireturn

  private void resendOutboundFlight() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
       4: invokevirtual #258                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.resetWriteEpoch:()V
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #234                // Field outboundFlight:Ljava/util/Vector;
      14: invokevirtual #245                // Method java/util/Vector.size:()I
      17: if_icmpge     41
      20: aload_0
      21: aload_0
      22: getfield      #234                // Field outboundFlight:Ljava/util/Vector;
      25: iload_1
      26: invokevirtual #248                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      29: checkcast     #126                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
      32: invokespecial #271                // Method writeMessage:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)V
      35: iinc          1, 1
      38: goto          9
      41: return

  private org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message updateHandshakeMessagesDigest(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #276                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
       4: ifeq          83
       7: aload_1
       8: invokevirtual #277                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      11: astore_2
      12: bipush        12
      14: newarray       byte
      16: astore_3
      17: aload_1
      18: invokevirtual #276                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
      21: aload_3
      22: iconst_0
      23: invokestatic  #287                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(S[BI)V
      26: aload_2
      27: arraylength
      28: aload_3
      29: iconst_1
      30: invokestatic  #286                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(I[BI)V
      33: aload_1
      34: invokevirtual #275                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getSeq:()I
      37: aload_3
      38: iconst_4
      39: invokestatic  #285                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(I[BI)V
      42: iconst_0
      43: aload_3
      44: bipush        6
      46: invokestatic  #286                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(I[BI)V
      49: aload_2
      50: arraylength
      51: aload_3
      52: bipush        9
      54: invokestatic  #286                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(I[BI)V
      57: aload_0
      58: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      61: aload_3
      62: iconst_0
      63: aload_3
      64: arraylength
      65: invokeinterface #298,  4          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.update:([BII)V
      70: aload_0
      71: getfield      #236                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      74: aload_2
      75: iconst_0
      76: aload_2
      77: arraylength
      78: invokeinterface #298,  4          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.update:([BII)V
      83: aload_1
      84: areturn

  private void writeMessage(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
       4: invokevirtual #257                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.getSendLimit:()I
       7: istore_2
       8: iload_2
       9: bipush        12
      11: isub
      12: istore_3
      13: iload_3
      14: iconst_1
      15: if_icmpge     28
      18: new           #129                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      21: dup
      22: bipush        80
      24: invokespecial #283                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      27: athrow
      28: aload_1
      29: invokevirtual #277                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      32: arraylength
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         4
      40: iload         5
      42: isub
      43: iload_3
      44: invokestatic  #238                // Method java/lang/Math.min:(II)I
      47: istore        6
      49: aload_0
      50: aload_1
      51: iload         5
      53: iload         6
      55: invokespecial #272                // Method writeHandshakeFragment:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;II)V
      58: iload         5
      60: iload         6
      62: iadd
      63: istore        5
      65: iload         5
      67: iload         4
      69: if_icmplt     38
      72: return

  private void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message, int, int) throws java.io.IOException;
    Code:
       0: new           #127                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer
       3: dup
       4: bipush        12
       6: iload_3
       7: iadd
       8: invokespecial #279                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer."<init>":(I)V
      11: astore        4
      13: aload_1
      14: invokevirtual #276                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
      17: aload         4
      19: invokestatic  #293                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(SLjava/io/OutputStream;)V
      22: aload_1
      23: invokevirtual #277                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      26: arraylength
      27: aload         4
      29: invokestatic  #292                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(ILjava/io/OutputStream;)V
      32: aload_1
      33: invokevirtual #275                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getSeq:()I
      36: aload         4
      38: invokestatic  #291                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      41: iload_2
      42: aload         4
      44: invokestatic  #292                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(ILjava/io/OutputStream;)V
      47: iload_3
      48: aload         4
      50: invokestatic  #292                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(ILjava/io/OutputStream;)V
      53: aload         4
      55: aload_1
      56: invokevirtual #277                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      59: iload_2
      60: iload_3
      61: invokevirtual #280                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer.write:([BII)V
      64: aload         4
      66: aload_0
      67: getfield      #235                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      70: invokevirtual #281                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer.sendToRecordLayer:(Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;)V
      73: return

  private static boolean checkAll(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokevirtual #241                // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_1
       6: invokeinterface #295,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          31
      14: aload_1
      15: invokeinterface #296,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #122                // class org/bouncycastle/crypto/tls/DTLSReassembler
      23: invokevirtual #252                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getBodyIfComplete:()[B
      26: ifnonnull     5
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  private static void resetAll(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokevirtual #241                // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_1
       6: invokeinterface #295,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          29
      14: aload_1
      15: invokeinterface #296,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #122                // class org/bouncycastle/crypto/tls/DTLSReassembler
      23: invokevirtual #251                // Method org/bouncycastle/crypto/tls/DTLSReassembler.reset:()V
      26: goto          5
      29: return

  static boolean access$100(org.bouncycastle.crypto.tls.DTLSReliableHandshake, int, int, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokespecial #265                // Method processRecord:(II[BII)Z
      11: ireturn
}
