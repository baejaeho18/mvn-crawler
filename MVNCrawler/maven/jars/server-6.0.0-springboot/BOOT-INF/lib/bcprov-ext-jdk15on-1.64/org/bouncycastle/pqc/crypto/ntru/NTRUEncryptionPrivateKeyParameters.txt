public class org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters extends org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionKeyParameters {
  public org.bouncycastle.pqc.math.ntru.polynomial.Polynomial t;

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial fp;

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial h;

  public org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.math.ntru.polynomial.Polynomial, org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionParameters);
    Code:
       0: aload_0
       1: iconst_1
       2: aload         4
       4: invokespecial #128                // Method org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionKeyParameters."<init>":(ZLorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;)V
       7: aload_0
       8: aload_1
       9: putfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      12: aload_0
      13: aload_2
      14: putfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      17: aload_0
      18: aload_3
      19: putfield      #119                // Field fp:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      22: return

  public org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters(byte[], org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionParameters) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #50                 // class java/io/ByteArrayInputStream
       4: dup
       5: aload_1
       6: invokespecial #123                // Method java/io/ByteArrayInputStream."<init>":([B)V
       9: aload_2
      10: invokespecial #133                // Method "<init>":(Ljava/io/InputStream;Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;)V
      13: return

  public org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters(java.io.InputStream, org.bouncycastle.pqc.crypto.ntru.NTRUEncryptionParameters) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: aload_2
       3: invokespecial #128                // Method org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionKeyParameters."<init>":(ZLorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;)V
       6: aload_2
       7: getfield      #114                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.polyType:I
      10: iconst_1
      11: if_icmpne     95
      14: aload_2
      15: getfield      #110                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.N:I
      18: istore_3
      19: aload_2
      20: getfield      #111                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.df1:I
      23: istore        4
      25: aload_2
      26: getfield      #112                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.df2:I
      29: istore        5
      31: aload_2
      32: getfield      #113                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.df3:I
      35: istore        6
      37: aload_2
      38: getfield      #116                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.fastFp:Z
      41: ifeq          51
      44: aload_2
      45: getfield      #113                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.df3:I
      48: goto          57
      51: aload_2
      52: getfield      #113                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.df3:I
      55: iconst_1
      56: isub
      57: istore        7
      59: aload_0
      60: aload_1
      61: aload_2
      62: getfield      #110                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.N:I
      65: aload_2
      66: getfield      #115                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.q:I
      69: invokestatic  #141                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:(Ljava/io/InputStream;II)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      72: putfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      75: aload_0
      76: aload_1
      77: iload_3
      78: iload         4
      80: iload         5
      82: iload         6
      84: iload         7
      86: invokestatic  #143                // Method org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.fromBinary:(Ljava/io/InputStream;IIIII)Lorg/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial;
      89: putfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      92: goto          150
      95: aload_0
      96: aload_1
      97: aload_2
      98: getfield      #110                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.N:I
     101: aload_2
     102: getfield      #115                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.q:I
     105: invokestatic  #141                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:(Ljava/io/InputStream;II)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     108: putfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     111: aload_1
     112: aload_2
     113: getfield      #110                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.N:I
     116: invokestatic  #140                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary3Tight:(Ljava/io/InputStream;I)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     119: astore_3
     120: aload_0
     121: aload_2
     122: getfield      #117                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.sparse:Z
     125: ifeq          139
     128: new           #62                 // class org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial
     131: dup
     132: aload_3
     133: invokespecial #144                // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial."<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     136: goto          147
     139: new           #58                 // class org/bouncycastle/pqc/math/ntru/polynomial/DenseTernaryPolynomial
     142: dup
     143: aload_3
     144: invokespecial #134                // Method org/bouncycastle/pqc/math/ntru/polynomial/DenseTernaryPolynomial."<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     147: putfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     150: aload_0
     151: invokespecial #131                // Method init:()V
     154: return

  private void init();
    Code:
       0: aload_0
       1: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
       4: getfield      #116                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.fastFp:Z
       7: ifeq          41
      10: aload_0
      11: new           #59                 // class org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial
      14: dup
      15: aload_0
      16: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      19: getfield      #110                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.N:I
      22: invokespecial #136                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial."<init>":(I)V
      25: putfield      #119                // Field fp:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      28: aload_0
      29: getfield      #119                // Field fp:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      32: getfield      #122                // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
      35: iconst_0
      36: iconst_1
      37: iastore
      38: goto          57
      41: aload_0
      42: aload_0
      43: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      46: invokeinterface #145,  1          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      51: invokevirtual #139                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.invertF3:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      54: putfield      #119                // Field fp:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      57: return

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
       4: aload_0
       5: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
       8: getfield      #115                // Field org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.q:I
      11: invokevirtual #137                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary:(I)[B
      14: astore_1
      15: aload_0
      16: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      19: instanceof    #61                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
      22: ifeq          39
      25: aload_0
      26: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      29: checkcast     #61                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
      32: invokevirtual #142                // Method org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.toBinary:()[B
      35: astore_2
      36: goto          52
      39: aload_0
      40: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      43: invokeinterface #145,  1          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      48: invokevirtual #135                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary3Tight:()[B
      51: astore_2
      52: aload_1
      53: arraylength
      54: aload_2
      55: arraylength
      56: iadd
      57: newarray       byte
      59: astore_3
      60: aload_1
      61: iconst_0
      62: aload_3
      63: iconst_0
      64: aload_1
      65: arraylength
      66: invokestatic  #127                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_2
      70: iconst_0
      71: aload_3
      72: aload_1
      73: arraylength
      74: aload_2
      75: arraylength
      76: invokestatic  #127                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_3
      80: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #132                // Method getEncoded:()[B
       5: invokevirtual #124                // Method java/io/OutputStream.write:([B)V
       8: return

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_2
       2: bipush        31
       4: iload_2
       5: imul
       6: aload_0
       7: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      10: ifnonnull     17
      13: iconst_0
      14: goto          24
      17: aload_0
      18: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      21: invokevirtual #129                // Method org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.hashCode:()I
      24: iadd
      25: istore_2
      26: bipush        31
      28: iload_2
      29: imul
      30: aload_0
      31: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      34: ifnonnull     41
      37: iconst_0
      38: goto          48
      41: aload_0
      42: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      45: invokevirtual #125                // Method java/lang/Object.hashCode:()I
      48: iadd
      49: istore_2
      50: bipush        31
      52: iload_2
      53: imul
      54: aload_0
      55: getfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      58: ifnonnull     65
      61: iconst_0
      62: goto          72
      65: aload_0
      66: getfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      69: invokevirtual #125                // Method java/lang/Object.hashCode:()I
      72: iadd
      73: istore_2
      74: iload_2
      75: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #57                 // class org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionPrivateKeyParameters
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #57                 // class org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionPrivateKeyParameters
      26: astore_2
      27: aload_0
      28: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      31: ifnonnull     43
      34: aload_2
      35: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      38: ifnull        59
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      47: aload_2
      48: getfield      #118                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters;
      51: invokevirtual #130                // Method org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionParameters.equals:(Ljava/lang/Object;)Z
      54: ifne          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      63: ifnonnull     75
      66: aload_2
      67: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      70: ifnull        91
      73: iconst_0
      74: ireturn
      75: aload_0
      76: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      79: aload_2
      80: getfield      #121                // Field t:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      83: invokevirtual #126                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      86: ifne          91
      89: iconst_0
      90: ireturn
      91: aload_0
      92: getfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      95: aload_2
      96: getfield      #120                // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      99: invokevirtual #138                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.equals:(Ljava/lang/Object;)Z
     102: ifne          107
     105: iconst_0
     106: ireturn
     107: iconst_1
     108: ireturn
}
