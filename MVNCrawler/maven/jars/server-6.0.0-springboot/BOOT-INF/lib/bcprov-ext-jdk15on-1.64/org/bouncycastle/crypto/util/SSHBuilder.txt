class org.bouncycastle.crypto.util.SSHBuilder {
  private final java.io.ByteArrayOutputStream bos;

  org.bouncycastle.crypto.util.SSHBuilder();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #27                 // class java/io/ByteArrayOutputStream
       8: dup
       9: invokespecial #54                 // Method java/io/ByteArrayOutputStream."<init>":()V
      12: putfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      15: return

  public void u32(int);
    Code:
       0: aload_0
       1: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
       4: iload_1
       5: bipush        24
       7: iushr
       8: sipush        255
      11: iand
      12: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.write:(I)V
      15: aload_0
      16: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      19: iload_1
      20: bipush        16
      22: iushr
      23: sipush        255
      26: iand
      27: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.write:(I)V
      30: aload_0
      31: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      34: iload_1
      35: bipush        8
      37: iushr
      38: sipush        255
      41: iand
      42: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.write:(I)V
      45: aload_0
      46: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      49: iload_1
      50: sipush        255
      53: iand
      54: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.write:(I)V
      57: return

  public void writeBigNum(java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method java/math/BigInteger.toByteArray:()[B
       5: invokevirtual #64                 // Method writeBlock:([B)V
       8: return

  public void writeBlock(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: invokevirtual #62                 // Method u32:(I)V
       6: aload_0
       7: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      10: aload_1
      11: invokevirtual #57                 // Method java/io/ByteArrayOutputStream.write:([B)V
      14: goto          31
      17: astore_2
      18: new           #29                 // class java/lang/IllegalStateException
      21: dup
      22: aload_2
      23: invokevirtual #58                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      26: aload_2
      27: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: athrow
      31: return
    Exception table:
       from    to  target type
           6    14    17   Class java/io/IOException

  public void writeBytes(byte[]);
    Code:
       0: aload_0
       1: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
       4: aload_1
       5: invokevirtual #57                 // Method java/io/ByteArrayOutputStream.write:([B)V
       8: goto          25
      11: astore_2
      12: new           #29                 // class java/lang/IllegalStateException
      15: dup
      16: aload_2
      17: invokevirtual #58                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      20: aload_2
      21: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: athrow
      25: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public void writeString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
       5: invokevirtual #64                 // Method writeBlock:([B)V
       8: return

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #55                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       7: areturn

  public byte[] getPaddedBytes();
    Code:
       0: aload_0
       1: bipush        8
       3: invokevirtual #63                 // Method getPaddedBytes:(I)[B
       6: areturn

  public byte[] getPaddedBytes(int);
    Code:
       0: aload_0
       1: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #53                 // Method java/io/ByteArrayOutputStream.size:()I
       7: iload_1
       8: irem
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpeq     43
      15: iload_1
      16: iload_2
      17: isub
      18: istore_3
      19: iconst_1
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpgt     43
      28: aload_0
      29: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      32: iload         4
      34: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.write:(I)V
      37: iinc          4, 1
      40: goto          22
      43: aload_0
      44: getfield      #52                 // Field bos:Ljava/io/ByteArrayOutputStream;
      47: invokevirtual #55                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      50: areturn
}
