public final class org.bouncycastle.crypto.params.Ed448PrivateKeyParameters extends org.bouncycastle.crypto.params.AsymmetricKeyParameter {
  public static final int KEY_SIZE;

  public static final int SIGNATURE_SIZE;

  private final byte[] data;

  public org.bouncycastle.crypto.params.Ed448PrivateKeyParameters(java.security.SecureRandom);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #75                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        57
       8: newarray       byte
      10: putfield      #71                 // Field data:[B
      13: aload_1
      14: aload_0
      15: getfield      #71                 // Field data:[B
      18: invokestatic  #81                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.generatePrivateKey:(Ljava/security/SecureRandom;[B)V
      21: return

  public org.bouncycastle.crypto.params.Ed448PrivateKeyParameters(byte[], int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #75                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        57
       8: newarray       byte
      10: putfield      #71                 // Field data:[B
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #71                 // Field data:[B
      19: iconst_0
      20: bipush        57
      22: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: return

  public org.bouncycastle.crypto.params.Ed448PrivateKeyParameters(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #75                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        57
       8: newarray       byte
      10: putfield      #71                 // Field data:[B
      13: bipush        57
      15: aload_1
      16: aload_0
      17: getfield      #71                 // Field data:[B
      20: invokestatic  #83                 // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      23: if_icmpeq     36
      26: new           #41                 // class java/io/EOFException
      29: dup
      30: ldc           #1                  // String EOF encountered in middle of Ed448 private key
      32: invokespecial #72                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public void encode(byte[], int);
    Code:
       0: aload_0
       1: getfield      #71                 // Field data:[B
       4: iconst_0
       5: aload_1
       6: iload_2
       7: bipush        57
       9: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #71                 // Field data:[B
       4: invokestatic  #82                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public org.bouncycastle.crypto.params.Ed448PublicKeyParameters generatePublicKey();
    Code:
       0: bipush        57
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: getfield      #71                 // Field data:[B
       9: iconst_0
      10: aload_1
      11: iconst_0
      12: invokestatic  #78                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.generatePublicKey:([BI[BI)V
      15: new           #47                 // class org/bouncycastle/crypto/params/Ed448PublicKeyParameters
      18: dup
      19: aload_1
      20: iconst_0
      21: invokespecial #76                 // Method org/bouncycastle/crypto/params/Ed448PublicKeyParameters."<init>":([BI)V
      24: areturn

  public void sign(int, org.bouncycastle.crypto.params.Ed448PublicKeyParameters, byte[], byte[], int, int, byte[], int);
    Code:
       0: bipush        57
       2: newarray       byte
       4: astore        9
       6: aconst_null
       7: aload_2
       8: if_acmpne     25
      11: aload_0
      12: getfield      #71                 // Field data:[B
      15: iconst_0
      16: aload         9
      18: iconst_0
      19: invokestatic  #78                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.generatePublicKey:([BI[BI)V
      22: goto          32
      25: aload_2
      26: aload         9
      28: iconst_0
      29: invokevirtual #77                 // Method org/bouncycastle/crypto/params/Ed448PublicKeyParameters.encode:([BI)V
      32: iload_1
      33: lookupswitch  { // 2
                     0: 60
                     1: 85
               default: 125
          }
      60: aload_0
      61: getfield      #71                 // Field data:[B
      64: iconst_0
      65: aload         9
      67: iconst_0
      68: aload_3
      69: aload         4
      71: iload         5
      73: iload         6
      75: aload         7
      77: iload         8
      79: invokestatic  #79                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.sign:([BI[BI[B[BII[BI)V
      82: goto          135
      85: bipush        64
      87: iload         6
      89: if_icmpeq     102
      92: new           #43                 // class java/lang/IllegalArgumentException
      95: dup
      96: ldc           #3                  // String msgLen
      98: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_0
     103: getfield      #71                 // Field data:[B
     106: iconst_0
     107: aload         9
     109: iconst_0
     110: aload_3
     111: aload         4
     113: iload         5
     115: aload         7
     117: iload         8
     119: invokestatic  #80                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.signPrehash:([BI[BI[B[BI[BI)V
     122: goto          135
     125: new           #43                 // class java/lang/IllegalArgumentException
     128: dup
     129: ldc           #2                  // String algorithm
     131: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: return
}
