public class org.bouncycastle.crypto.tls.UDPTransport implements org.bouncycastle.crypto.tls.DatagramTransport {
  protected static final int MIN_IP_OVERHEAD;

  protected static final int MAX_IP_OVERHEAD;

  protected static final int UDP_OVERHEAD;

  protected final java.net.DatagramSocket socket;

  protected final int receiveLimit;

  protected final int sendLimit;

  public org.bouncycastle.crypto.tls.UDPTransport(java.net.DatagramSocket, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #69                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #73                 // Method java/net/DatagramSocket.isBound:()Z
       8: ifeq          18
      11: aload_1
      12: invokevirtual #74                 // Method java/net/DatagramSocket.isConnected:()Z
      15: ifne          28
      18: new           #39                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #1                  // String \'socket\' must be bound and connected
      24: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #67                 // Field socket:Ljava/net/DatagramSocket;
      33: aload_0
      34: iload_2
      35: bipush        20
      37: isub
      38: bipush        8
      40: isub
      41: putfield      #65                 // Field receiveLimit:I
      44: aload_0
      45: iload_2
      46: bipush        84
      48: isub
      49: bipush        8
      51: isub
      52: putfield      #66                 // Field sendLimit:I
      55: return

  public int getReceiveLimit();
    Code:
       0: aload_0
       1: getfield      #65                 // Field receiveLimit:I
       4: ireturn

  public int getSendLimit();
    Code:
       0: aload_0
       1: getfield      #66                 // Field sendLimit:I
       4: ireturn

  public int receive(byte[], int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field socket:Ljava/net/DatagramSocket;
       4: iload         4
       6: invokevirtual #75                 // Method java/net/DatagramSocket.setSoTimeout:(I)V
       9: new           #41                 // class java/net/DatagramPacket
      12: dup
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokespecial #71                 // Method java/net/DatagramPacket."<init>":([BII)V
      19: astore        5
      21: aload_0
      22: getfield      #67                 // Field socket:Ljava/net/DatagramSocket;
      25: aload         5
      27: invokevirtual #76                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V
      30: aload         5
      32: invokevirtual #70                 // Method java/net/DatagramPacket.getLength:()I
      35: ireturn

  public void send(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #79                 // Method getSendLimit:()I
       5: if_icmple     18
       8: new           #44                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      11: dup
      12: bipush        80
      14: invokespecial #78                 // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      17: athrow
      18: new           #41                 // class java/net/DatagramPacket
      21: dup
      22: aload_1
      23: iload_2
      24: iload_3
      25: invokespecial #71                 // Method java/net/DatagramPacket."<init>":([BII)V
      28: astore        4
      30: aload_0
      31: getfield      #67                 // Field socket:Ljava/net/DatagramSocket;
      34: aload         4
      36: invokevirtual #77                 // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V
      39: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field socket:Ljava/net/DatagramSocket;
       4: invokevirtual #72                 // Method java/net/DatagramSocket.close:()V
       7: return
}
