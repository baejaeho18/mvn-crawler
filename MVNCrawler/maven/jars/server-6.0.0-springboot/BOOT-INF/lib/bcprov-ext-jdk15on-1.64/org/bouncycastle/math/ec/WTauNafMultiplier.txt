public class org.bouncycastle.math.ec.WTauNafMultiplier extends org.bouncycastle.math.ec.AbstractECMultiplier {
  static final java.lang.String PRECOMP_NAME;

  public org.bouncycastle.math.ec.WTauNafMultiplier();
    Code:
       0: aload_0
       1: invokespecial #108                // Method org/bouncycastle/math/ec/AbstractECMultiplier."<init>":()V
       4: return

  protected org.bouncycastle.math.ec.ECPoint multiplyPositive(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger);
    Code:
       0: aload_1
       1: instanceof    #54                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
       4: ifne          17
       7: new           #47                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #1                  // String Only ECPoint.AbstractF2m can be used in WTauNafMultiplier
      13: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #54                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
      21: astore_3
      22: aload_3
      23: invokevirtual #115                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      26: checkcast     #51                 // class org/bouncycastle/math/ec/ECCurve$AbstractF2m
      29: astore        4
      31: aload         4
      33: invokevirtual #110                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getFieldSize:()I
      36: istore        5
      38: aload         4
      40: invokevirtual #112                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      43: invokevirtual #114                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      46: invokevirtual #106                // Method java/math/BigInteger.byteValue:()B
      49: istore        6
      51: iload         6
      53: invokestatic  #119                // Method org/bouncycastle/math/ec/Tnaf.getMu:(I)B
      56: istore        7
      58: aload         4
      60: invokevirtual #111                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getSi:()[Ljava/math/BigInteger;
      63: astore        8
      65: aload_2
      66: iload         5
      68: iload         6
      70: aload         8
      72: iload         7
      74: bipush        10
      76: invokestatic  #121                // Method org/bouncycastle/math/ec/Tnaf.partModReduction:(Ljava/math/BigInteger;IB[Ljava/math/BigInteger;BB)Lorg/bouncycastle/math/ec/ZTauElement;
      79: astore        9
      81: aload_0
      82: aload_3
      83: aload         9
      85: iload         6
      87: iload         7
      89: invokespecial #124                // Method multiplyWTnaf:(Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;Lorg/bouncycastle/math/ec/ZTauElement;BB)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
      92: areturn

  private org.bouncycastle.math.ec.ECPoint$AbstractF2m multiplyWTnaf(org.bouncycastle.math.ec.ECPoint$AbstractF2m, org.bouncycastle.math.ec.ZTauElement, byte, byte);
    Code:
       0: iload_3
       1: ifne          10
       4: getstatic     #103                // Field org/bouncycastle/math/ec/Tnaf.alpha0:[Lorg/bouncycastle/math/ec/ZTauElement;
       7: goto          13
      10: getstatic     #104                // Field org/bouncycastle/math/ec/Tnaf.alpha1:[Lorg/bouncycastle/math/ec/ZTauElement;
      13: astore        5
      15: iload         4
      17: iconst_4
      18: invokestatic  #120                // Method org/bouncycastle/math/ec/Tnaf.getTw:(BI)Ljava/math/BigInteger;
      21: astore        6
      23: iload         4
      25: aload_2
      26: iconst_4
      27: ldc2_w        #45                 // long 16l
      30: invokestatic  #107                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      33: aload         6
      35: aload         5
      37: invokestatic  #122                // Method org/bouncycastle/math/ec/Tnaf.tauAdicWNaf:(BLorg/bouncycastle/math/ec/ZTauElement;BLjava/math/BigInteger;Ljava/math/BigInteger;[Lorg/bouncycastle/math/ec/ZTauElement;)[B
      40: astore        7
      42: aload_1
      43: aload         7
      45: invokestatic  #123                // Method multiplyFromWTnaf:(Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;[B)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
      48: areturn

  private static org.bouncycastle.math.ec.ECPoint$AbstractF2m multiplyFromWTnaf(org.bouncycastle.math.ec.ECPoint$AbstractF2m, byte[]);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: checkcast     #51                 // class org/bouncycastle/math/ec/ECCurve$AbstractF2m
       7: astore_2
       8: aload_2
       9: invokevirtual #112                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      12: invokevirtual #114                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      15: invokevirtual #106                // Method java/math/BigInteger.byteValue:()B
      18: istore_3
      19: aload_2
      20: aload_0
      21: ldc           #2                  // String bc_wtnaf
      23: new           #57                 // class org/bouncycastle/math/ec/WTauNafMultiplier$1
      26: dup
      27: aload_0
      28: iload_3
      29: invokespecial #125                // Method org/bouncycastle/math/ec/WTauNafMultiplier$1."<init>":(Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;B)V
      32: invokevirtual #113                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.precompute:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompCallback;)Lorg/bouncycastle/math/ec/PreCompInfo;
      35: checkcast     #58                 // class org/bouncycastle/math/ec/WTauNafPreCompInfo
      38: astore        4
      40: aload         4
      42: invokevirtual #126                // Method org/bouncycastle/math/ec/WTauNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
      45: astore        5
      47: aload         5
      49: arraylength
      50: anewarray     #54                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
      53: astore        6
      55: iconst_0
      56: istore        7
      58: iload         7
      60: aload         5
      62: arraylength
      63: if_icmpge     88
      66: aload         6
      68: iload         7
      70: aload         5
      72: iload         7
      74: aaload
      75: invokevirtual #116                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.negate:()Lorg/bouncycastle/math/ec/ECPoint;
      78: checkcast     #54                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
      81: aastore
      82: iinc          7, 1
      85: goto          58
      88: aload_0
      89: invokevirtual #115                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      92: invokevirtual #109                // Method org/bouncycastle/math/ec/ECCurve.getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
      95: checkcast     #54                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
      98: astore        7
     100: iconst_0
     101: istore        8
     103: aload_1
     104: arraylength
     105: iconst_1
     106: isub
     107: istore        9
     109: iload         9
     111: iflt          183
     114: iinc          8, 1
     117: aload_1
     118: iload         9
     120: baload
     121: istore        10
     123: iload         10
     125: ifeq          177
     128: aload         7
     130: iload         8
     132: invokevirtual #117                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.tauPow:(I)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
     135: astore        7
     137: iconst_0
     138: istore        8
     140: iload         10
     142: ifle          155
     145: aload         5
     147: iload         10
     149: iconst_1
     150: iushr
     151: aaload
     152: goto          163
     155: aload         6
     157: iload         10
     159: ineg
     160: iconst_1
     161: iushr
     162: aaload
     163: astore        11
     165: aload         7
     167: aload         11
     169: invokevirtual #118                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     172: checkcast     #54                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
     175: astore        7
     177: iinc          9, -1
     180: goto          109
     183: iload         8
     185: ifle          197
     188: aload         7
     190: iload         8
     192: invokevirtual #117                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.tauPow:(I)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
     195: astore        7
     197: aload         7
     199: areturn
}
