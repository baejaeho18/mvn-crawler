public class org.bouncycastle.crypto.signers.Ed25519ctxSigner implements org.bouncycastle.crypto.Signer {
  private final org.bouncycastle.crypto.signers.Ed25519ctxSigner$Buffer buffer;

  private final byte[] context;

  private boolean forSigning;

  private org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters privateKey;

  private org.bouncycastle.crypto.params.Ed25519PublicKeyParameters publicKey;

  public org.bouncycastle.crypto.signers.Ed25519ctxSigner(byte[]);
    Code:
       0: aload_0
       1: invokespecial #77                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #45                 // class org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer
       8: dup
       9: aconst_null
      10: invokespecial #84                 // Method org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer."<init>":(Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$1;)V
      13: putfield      #75                 // Field buffer:Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer;
      16: aload_0
      17: aload_1
      18: invokestatic  #86                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      21: putfield      #72                 // Field context:[B
      24: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field forSigning:Z
       5: iload_1
       6: ifeq          31
       9: aload_0
      10: aload_2
      11: checkcast     #41                 // class org/bouncycastle/crypto/params/Ed25519PrivateKeyParameters
      14: putfield      #73                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed25519PrivateKeyParameters;
      17: aload_0
      18: aload_0
      19: getfield      #73                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed25519PrivateKeyParameters;
      22: invokevirtual #78                 // Method org/bouncycastle/crypto/params/Ed25519PrivateKeyParameters.generatePublicKey:()Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      25: putfield      #74                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      28: goto          44
      31: aload_0
      32: aconst_null
      33: putfield      #73                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed25519PrivateKeyParameters;
      36: aload_0
      37: aload_2
      38: checkcast     #42                 // class org/bouncycastle/crypto/params/Ed25519PublicKeyParameters
      41: putfield      #74                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      44: aload_0
      45: invokevirtual #79                 // Method reset:()V
      48: return

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #75                 // Field buffer:Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer;
       4: iload_1
       5: invokevirtual #81                 // Method org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer.write:(I)V
       8: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #75                 // Field buffer:Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #82                 // Method org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer.write:([BII)V
      10: return

  public byte[] generateSignature();
    Code:
       0: aload_0
       1: getfield      #71                 // Field forSigning:Z
       4: ifeq          15
       7: aconst_null
       8: aload_0
       9: getfield      #73                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed25519PrivateKeyParameters;
      12: if_acmpne     25
      15: new           #38                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #1                  // String Ed25519ctxSigner not initialised for signature generation.
      21: invokespecial #76                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: getfield      #75                 // Field buffer:Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer;
      29: aload_0
      30: getfield      #73                 // Field privateKey:Lorg/bouncycastle/crypto/params/Ed25519PrivateKeyParameters;
      33: aload_0
      34: getfield      #74                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      37: aload_0
      38: getfield      #72                 // Field context:[B
      41: invokevirtual #85                 // Method org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer.generateSignature:(Lorg/bouncycastle/crypto/params/Ed25519PrivateKeyParameters;Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;[B)[B
      44: areturn

  public boolean verifySignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #71                 // Field forSigning:Z
       4: ifne          15
       7: aconst_null
       8: aload_0
       9: getfield      #74                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      12: if_acmpne     25
      15: new           #38                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #2                  // String Ed25519ctxSigner not initialised for verification
      21: invokespecial #76                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: getfield      #75                 // Field buffer:Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer;
      29: aload_0
      30: getfield      #74                 // Field publicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      33: aload_0
      34: getfield      #72                 // Field context:[B
      37: aload_1
      38: invokevirtual #83                 // Method org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer.verifySignature:(Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;[B[B)Z
      41: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #75                 // Field buffer:Lorg/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer;
       4: invokevirtual #80                 // Method org/bouncycastle/crypto/signers/Ed25519ctxSigner$Buffer.reset:()V
       7: return
}
