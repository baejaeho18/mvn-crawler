public class org.bouncycastle.crypto.ec.ECElGamalEncryptor implements org.bouncycastle.crypto.ec.ECEncryptor {
  private org.bouncycastle.crypto.params.ECPublicKeyParameters key;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.ec.ECElGamalEncryptor();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #50                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          54
       7: aload_1
       8: checkcast     #50                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore_2
      12: aload_2
      13: invokevirtual #110                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      16: instanceof    #49                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      19: ifne          32
      22: new           #40                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #2                  // String ECPublicKeyParameters are required for encryption.
      28: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_2
      34: invokevirtual #110                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      37: checkcast     #49                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      40: putfield      #96                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      43: aload_0
      44: aload_2
      45: invokevirtual #109                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      48: putfield      #95                 // Field random:Ljava/security/SecureRandom;
      51: goto          86
      54: aload_1
      55: instanceof    #49                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      58: ifne          71
      61: new           #40                 // class java/lang/IllegalArgumentException
      64: dup
      65: ldc           #2                  // String ECPublicKeyParameters are required for encryption.
      67: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: aload_1
      73: checkcast     #49                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      76: putfield      #96                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      79: aload_0
      80: invokestatic  #100                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      83: putfield      #95                 // Field random:Ljava/security/SecureRandom;
      86: return

  public org.bouncycastle.crypto.ec.ECPair encrypt(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: getfield      #96                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
       4: ifnonnull     17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String ECElGamalEncryptor not initialised
      13: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #96                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      21: invokevirtual #107                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      24: astore_2
      25: aload_2
      26: invokevirtual #104                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      29: aload_0
      30: getfield      #95                 // Field random:Ljava/security/SecureRandom;
      33: invokestatic  #103                // Method org/bouncycastle/crypto/ec/ECUtil.generateK:(Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      36: astore_3
      37: aload_0
      38: invokevirtual #101                // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      41: astore        4
      43: iconst_2
      44: anewarray     #54                 // class org/bouncycastle/math/ec/ECPoint
      47: dup
      48: iconst_0
      49: aload         4
      51: aload_2
      52: invokevirtual #106                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      55: aload_3
      56: invokeinterface #116,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      61: aastore
      62: dup
      63: iconst_1
      64: aload_0
      65: getfield      #96                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      68: invokevirtual #108                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      71: aload_3
      72: invokevirtual #113                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      75: aload_2
      76: invokevirtual #105                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      79: aload_1
      80: invokestatic  #111                // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      83: invokevirtual #114                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      86: aastore
      87: astore        5
      89: aload_2
      90: invokevirtual #105                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      93: aload         5
      95: invokevirtual #112                // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
      98: new           #46                 // class org/bouncycastle/crypto/ec/ECPair
     101: dup
     102: aload         5
     104: iconst_0
     105: aaload
     106: aload         5
     108: iconst_1
     109: aaload
     110: invokespecial #102                // Method org/bouncycastle/crypto/ec/ECPair."<init>":(Lorg/bouncycastle/math/ec/ECPoint;Lorg/bouncycastle/math/ec/ECPoint;)V
     113: areturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #55                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #115                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn
}
