public class org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi extends java.security.KeyPairGenerator {
  static final java.math.BigInteger defaultPublicExponent;

  org.bouncycastle.crypto.params.RSAKeyGenerationParameters param;

  org.bouncycastle.crypto.generators.RSAKeyPairGenerator engine;

  public org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #96                 // Method java/security/KeyPairGenerator."<init>":(Ljava/lang/String;)V
       5: return

  public org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi();
    Code:
       0: aload_0
       1: ldc           #1                  // String RSA
       3: invokespecial #96                 // Method java/security/KeyPairGenerator."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: new           #47                 // class org/bouncycastle/crypto/generators/RSAKeyPairGenerator
      10: dup
      11: invokespecial #102                // Method org/bouncycastle/crypto/generators/RSAKeyPairGenerator."<init>":()V
      14: putfield      #91                 // Field engine:Lorg/bouncycastle/crypto/generators/RSAKeyPairGenerator;
      17: aload_0
      18: new           #48                 // class org/bouncycastle/crypto/params/RSAKeyGenerationParameters
      21: dup
      22: getstatic     #90                 // Field defaultPublicExponent:Ljava/math/BigInteger;
      25: invokestatic  #101                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      28: sipush        2048
      31: sipush        2048
      34: invokestatic  #108                // Method org/bouncycastle/jcajce/provider/asymmetric/util/PrimeCertaintyCalculator.getDefaultCertainty:(I)I
      37: invokespecial #105                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters."<init>":(Ljava/math/BigInteger;Ljava/security/SecureRandom;II)V
      40: putfield      #92                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      43: aload_0
      44: getfield      #91                 // Field engine:Lorg/bouncycastle/crypto/generators/RSAKeyPairGenerator;
      47: aload_0
      48: getfield      #92                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      51: invokevirtual #104                // Method org/bouncycastle/crypto/generators/RSAKeyPairGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      54: return

  public void initialize(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: new           #48                 // class org/bouncycastle/crypto/params/RSAKeyGenerationParameters
       4: dup
       5: getstatic     #90                 // Field defaultPublicExponent:Ljava/math/BigInteger;
       8: aload_2
       9: iload_1
      10: iload_1
      11: invokestatic  #108                // Method org/bouncycastle/jcajce/provider/asymmetric/util/PrimeCertaintyCalculator.getDefaultCertainty:(I)I
      14: invokespecial #105                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters."<init>":(Ljava/math/BigInteger;Ljava/security/SecureRandom;II)V
      17: putfield      #92                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      20: aload_0
      21: getfield      #91                 // Field engine:Lorg/bouncycastle/crypto/generators/RSAKeyPairGenerator;
      24: aload_0
      25: getfield      #92                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      28: invokevirtual #104                // Method org/bouncycastle/crypto/generators/RSAKeyPairGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      31: return

  public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_1
       1: instanceof    #44                 // class java/security/spec/RSAKeyGenParameterSpec
       4: ifne          17
       7: new           #41                 // class java/security/InvalidAlgorithmParameterException
      10: dup
      11: ldc           #2                  // String parameter object not a RSAKeyGenParameterSpec
      13: invokespecial #94                 // Method java/security/InvalidAlgorithmParameterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #44                 // class java/security/spec/RSAKeyGenParameterSpec
      21: astore_3
      22: aload_0
      23: new           #48                 // class org/bouncycastle/crypto/params/RSAKeyGenerationParameters
      26: dup
      27: aload_3
      28: invokevirtual #98                 // Method java/security/spec/RSAKeyGenParameterSpec.getPublicExponent:()Ljava/math/BigInteger;
      31: aload_2
      32: aload_3
      33: invokevirtual #97                 // Method java/security/spec/RSAKeyGenParameterSpec.getKeysize:()I
      36: sipush        2048
      39: invokestatic  #108                // Method org/bouncycastle/jcajce/provider/asymmetric/util/PrimeCertaintyCalculator.getDefaultCertainty:(I)I
      42: invokespecial #105                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters."<init>":(Ljava/math/BigInteger;Ljava/security/SecureRandom;II)V
      45: putfield      #92                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      48: aload_0
      49: getfield      #91                 // Field engine:Lorg/bouncycastle/crypto/generators/RSAKeyPairGenerator;
      52: aload_0
      53: getfield      #92                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      56: invokevirtual #104                // Method org/bouncycastle/crypto/generators/RSAKeyPairGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      59: return

  public java.security.KeyPair generateKeyPair();
    Code:
       0: aload_0
       1: getfield      #91                 // Field engine:Lorg/bouncycastle/crypto/generators/RSAKeyPairGenerator;
       4: invokevirtual #103                // Method org/bouncycastle/crypto/generators/RSAKeyPairGenerator.generateKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       7: astore_1
       8: aload_1
       9: invokevirtual #100                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPublic:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      12: checkcast     #49                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      15: astore_2
      16: aload_1
      17: invokevirtual #99                 // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPrivate:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      20: checkcast     #50                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
      23: astore_3
      24: new           #42                 // class java/security/KeyPair
      27: dup
      28: new           #52                 // class org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPublicKey
      31: dup
      32: aload_2
      33: invokespecial #107                // Method org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPublicKey."<init>":(Lorg/bouncycastle/crypto/params/RSAKeyParameters;)V
      36: new           #51                 // class org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPrivateCrtKey
      39: dup
      40: aload_3
      41: invokespecial #106                // Method org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPrivateCrtKey."<init>":(Lorg/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters;)V
      44: invokespecial #95                 // Method java/security/KeyPair."<init>":(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
      47: areturn

  static {};
    Code:
       0: ldc2_w        #38                 // long 65537l
       3: invokestatic  #93                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #90                 // Field defaultPublicExponent:Ljava/math/BigInteger;
       9: return
}
