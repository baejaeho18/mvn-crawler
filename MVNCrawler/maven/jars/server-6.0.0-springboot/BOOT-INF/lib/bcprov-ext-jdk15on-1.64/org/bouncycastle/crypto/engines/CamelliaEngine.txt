public class org.bouncycastle.crypto.engines.CamelliaEngine implements org.bouncycastle.crypto.BlockCipher {
  private boolean initialised;

  private boolean _keyIs128;

  private static final int BLOCK_SIZE;

  private static final int MASK8;

  private int[] subkey;

  private int[] kw;

  private int[] ke;

  private int[] state;

  private static final int[] SIGMA;

  private static final int[] SBOX1_1110;

  private static final int[] SBOX4_4404;

  private static final int[] SBOX2_0222;

  private static final int[] SBOX3_3033;

  private static int rightRotate(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iushr
       3: iload_0
       4: bipush        32
       6: iload_1
       7: isub
       8: ishl
       9: iadd
      10: ireturn

  private static int leftRotate(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: ishl
       3: iload_0
       4: bipush        32
       6: iload_1
       7: isub
       8: iushr
       9: iadd
      10: ireturn

  private static void roldq(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_0
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_0
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: ishl
      12: aload_1
      13: iconst_1
      14: iload_2
      15: iadd
      16: iaload
      17: bipush        32
      19: iload_0
      20: isub
      21: iushr
      22: ior
      23: iastore
      24: aload_3
      25: iconst_1
      26: iload         4
      28: iadd
      29: aload_1
      30: iconst_1
      31: iload_2
      32: iadd
      33: iaload
      34: iload_0
      35: ishl
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iadd
      40: iaload
      41: bipush        32
      43: iload_0
      44: isub
      45: iushr
      46: ior
      47: iastore
      48: aload_3
      49: iconst_2
      50: iload         4
      52: iadd
      53: aload_1
      54: iconst_2
      55: iload_2
      56: iadd
      57: iaload
      58: iload_0
      59: ishl
      60: aload_1
      61: iconst_3
      62: iload_2
      63: iadd
      64: iaload
      65: bipush        32
      67: iload_0
      68: isub
      69: iushr
      70: ior
      71: iastore
      72: aload_3
      73: iconst_3
      74: iload         4
      76: iadd
      77: aload_1
      78: iconst_3
      79: iload_2
      80: iadd
      81: iaload
      82: iload_0
      83: ishl
      84: aload_1
      85: iconst_0
      86: iload_2
      87: iadd
      88: iaload
      89: bipush        32
      91: iload_0
      92: isub
      93: iushr
      94: ior
      95: iastore
      96: aload_1
      97: iconst_0
      98: iload_2
      99: iadd
     100: aload_3
     101: iconst_0
     102: iload         4
     104: iadd
     105: iaload
     106: iastore
     107: aload_1
     108: iconst_1
     109: iload_2
     110: iadd
     111: aload_3
     112: iconst_1
     113: iload         4
     115: iadd
     116: iaload
     117: iastore
     118: aload_1
     119: iconst_2
     120: iload_2
     121: iadd
     122: aload_3
     123: iconst_2
     124: iload         4
     126: iadd
     127: iaload
     128: iastore
     129: aload_1
     130: iconst_3
     131: iload_2
     132: iadd
     133: aload_3
     134: iconst_3
     135: iload         4
     137: iadd
     138: iaload
     139: iastore
     140: return

  private static void decroldq(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_2
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_0
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: ishl
      12: aload_1
      13: iconst_1
      14: iload_2
      15: iadd
      16: iaload
      17: bipush        32
      19: iload_0
      20: isub
      21: iushr
      22: ior
      23: iastore
      24: aload_3
      25: iconst_3
      26: iload         4
      28: iadd
      29: aload_1
      30: iconst_1
      31: iload_2
      32: iadd
      33: iaload
      34: iload_0
      35: ishl
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iadd
      40: iaload
      41: bipush        32
      43: iload_0
      44: isub
      45: iushr
      46: ior
      47: iastore
      48: aload_3
      49: iconst_0
      50: iload         4
      52: iadd
      53: aload_1
      54: iconst_2
      55: iload_2
      56: iadd
      57: iaload
      58: iload_0
      59: ishl
      60: aload_1
      61: iconst_3
      62: iload_2
      63: iadd
      64: iaload
      65: bipush        32
      67: iload_0
      68: isub
      69: iushr
      70: ior
      71: iastore
      72: aload_3
      73: iconst_1
      74: iload         4
      76: iadd
      77: aload_1
      78: iconst_3
      79: iload_2
      80: iadd
      81: iaload
      82: iload_0
      83: ishl
      84: aload_1
      85: iconst_0
      86: iload_2
      87: iadd
      88: iaload
      89: bipush        32
      91: iload_0
      92: isub
      93: iushr
      94: ior
      95: iastore
      96: aload_1
      97: iconst_0
      98: iload_2
      99: iadd
     100: aload_3
     101: iconst_2
     102: iload         4
     104: iadd
     105: iaload
     106: iastore
     107: aload_1
     108: iconst_1
     109: iload_2
     110: iadd
     111: aload_3
     112: iconst_3
     113: iload         4
     115: iadd
     116: iaload
     117: iastore
     118: aload_1
     119: iconst_2
     120: iload_2
     121: iadd
     122: aload_3
     123: iconst_0
     124: iload         4
     126: iadd
     127: iaload
     128: iastore
     129: aload_1
     130: iconst_3
     131: iload_2
     132: iadd
     133: aload_3
     134: iconst_1
     135: iload         4
     137: iadd
     138: iaload
     139: iastore
     140: return

  private static void roldqo32(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_0
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_1
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: bipush        32
      13: isub
      14: ishl
      15: aload_1
      16: iconst_2
      17: iload_2
      18: iadd
      19: iaload
      20: bipush        64
      22: iload_0
      23: isub
      24: iushr
      25: ior
      26: iastore
      27: aload_3
      28: iconst_1
      29: iload         4
      31: iadd
      32: aload_1
      33: iconst_2
      34: iload_2
      35: iadd
      36: iaload
      37: iload_0
      38: bipush        32
      40: isub
      41: ishl
      42: aload_1
      43: iconst_3
      44: iload_2
      45: iadd
      46: iaload
      47: bipush        64
      49: iload_0
      50: isub
      51: iushr
      52: ior
      53: iastore
      54: aload_3
      55: iconst_2
      56: iload         4
      58: iadd
      59: aload_1
      60: iconst_3
      61: iload_2
      62: iadd
      63: iaload
      64: iload_0
      65: bipush        32
      67: isub
      68: ishl
      69: aload_1
      70: iconst_0
      71: iload_2
      72: iadd
      73: iaload
      74: bipush        64
      76: iload_0
      77: isub
      78: iushr
      79: ior
      80: iastore
      81: aload_3
      82: iconst_3
      83: iload         4
      85: iadd
      86: aload_1
      87: iconst_0
      88: iload_2
      89: iadd
      90: iaload
      91: iload_0
      92: bipush        32
      94: isub
      95: ishl
      96: aload_1
      97: iconst_1
      98: iload_2
      99: iadd
     100: iaload
     101: bipush        64
     103: iload_0
     104: isub
     105: iushr
     106: ior
     107: iastore
     108: aload_1
     109: iconst_0
     110: iload_2
     111: iadd
     112: aload_3
     113: iconst_0
     114: iload         4
     116: iadd
     117: iaload
     118: iastore
     119: aload_1
     120: iconst_1
     121: iload_2
     122: iadd
     123: aload_3
     124: iconst_1
     125: iload         4
     127: iadd
     128: iaload
     129: iastore
     130: aload_1
     131: iconst_2
     132: iload_2
     133: iadd
     134: aload_3
     135: iconst_2
     136: iload         4
     138: iadd
     139: iaload
     140: iastore
     141: aload_1
     142: iconst_3
     143: iload_2
     144: iadd
     145: aload_3
     146: iconst_3
     147: iload         4
     149: iadd
     150: iaload
     151: iastore
     152: return

  private static void decroldqo32(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_2
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_1
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: bipush        32
      13: isub
      14: ishl
      15: aload_1
      16: iconst_2
      17: iload_2
      18: iadd
      19: iaload
      20: bipush        64
      22: iload_0
      23: isub
      24: iushr
      25: ior
      26: iastore
      27: aload_3
      28: iconst_3
      29: iload         4
      31: iadd
      32: aload_1
      33: iconst_2
      34: iload_2
      35: iadd
      36: iaload
      37: iload_0
      38: bipush        32
      40: isub
      41: ishl
      42: aload_1
      43: iconst_3
      44: iload_2
      45: iadd
      46: iaload
      47: bipush        64
      49: iload_0
      50: isub
      51: iushr
      52: ior
      53: iastore
      54: aload_3
      55: iconst_0
      56: iload         4
      58: iadd
      59: aload_1
      60: iconst_3
      61: iload_2
      62: iadd
      63: iaload
      64: iload_0
      65: bipush        32
      67: isub
      68: ishl
      69: aload_1
      70: iconst_0
      71: iload_2
      72: iadd
      73: iaload
      74: bipush        64
      76: iload_0
      77: isub
      78: iushr
      79: ior
      80: iastore
      81: aload_3
      82: iconst_1
      83: iload         4
      85: iadd
      86: aload_1
      87: iconst_0
      88: iload_2
      89: iadd
      90: iaload
      91: iload_0
      92: bipush        32
      94: isub
      95: ishl
      96: aload_1
      97: iconst_1
      98: iload_2
      99: iadd
     100: iaload
     101: bipush        64
     103: iload_0
     104: isub
     105: iushr
     106: ior
     107: iastore
     108: aload_1
     109: iconst_0
     110: iload_2
     111: iadd
     112: aload_3
     113: iconst_2
     114: iload         4
     116: iadd
     117: iaload
     118: iastore
     119: aload_1
     120: iconst_1
     121: iload_2
     122: iadd
     123: aload_3
     124: iconst_3
     125: iload         4
     127: iadd
     128: iaload
     129: iastore
     130: aload_1
     131: iconst_2
     132: iload_2
     133: iadd
     134: aload_3
     135: iconst_0
     136: iload         4
     138: iadd
     139: iaload
     140: iastore
     141: aload_1
     142: iconst_3
     143: iload_2
     144: iadd
     145: aload_3
     146: iconst_1
     147: iload         4
     149: iadd
     150: iaload
     151: iastore
     152: return

  private int bytes2int(byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload         4
       7: iconst_4
       8: if_icmpge     33
      11: iload_3
      12: bipush        8
      14: ishl
      15: aload_1
      16: iload         4
      18: iload_2
      19: iadd
      20: baload
      21: sipush        255
      24: iand
      25: iadd
      26: istore_3
      27: iinc          4, 1
      30: goto          5
      33: iload_3
      34: ireturn

  private void int2bytes(int, byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iconst_4
       6: if_icmpge     30
       9: aload_2
      10: iconst_3
      11: iload         4
      13: isub
      14: iload_3
      15: iadd
      16: iload_1
      17: i2b
      18: bastore
      19: iload_1
      20: bipush        8
      22: iushr
      23: istore_1
      24: iinc          4, 1
      27: goto          3
      30: return

  private void camelliaF2(int[], int[], int);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: aload_2
       4: iconst_0
       5: iload_3
       6: iadd
       7: iaload
       8: ixor
       9: istore        4
      11: getstatic     #1144               // Field SBOX4_4404:[I
      14: iload         4
      16: sipush        255
      19: iand
      20: iaload
      21: istore        6
      23: iload         6
      25: getstatic     #1143               // Field SBOX3_3033:[I
      28: iload         4
      30: bipush        8
      32: iushr
      33: sipush        255
      36: iand
      37: iaload
      38: ixor
      39: istore        6
      41: iload         6
      43: getstatic     #1142               // Field SBOX2_0222:[I
      46: iload         4
      48: bipush        16
      50: iushr
      51: sipush        255
      54: iand
      55: iaload
      56: ixor
      57: istore        6
      59: iload         6
      61: getstatic     #1141               // Field SBOX1_1110:[I
      64: iload         4
      66: bipush        24
      68: iushr
      69: sipush        255
      72: iand
      73: iaload
      74: ixor
      75: istore        6
      77: aload_1
      78: iconst_1
      79: iaload
      80: aload_2
      81: iconst_1
      82: iload_3
      83: iadd
      84: iaload
      85: ixor
      86: istore        5
      88: getstatic     #1141               // Field SBOX1_1110:[I
      91: iload         5
      93: sipush        255
      96: iand
      97: iaload
      98: istore        7
     100: iload         7
     102: getstatic     #1144               // Field SBOX4_4404:[I
     105: iload         5
     107: bipush        8
     109: iushr
     110: sipush        255
     113: iand
     114: iaload
     115: ixor
     116: istore        7
     118: iload         7
     120: getstatic     #1143               // Field SBOX3_3033:[I
     123: iload         5
     125: bipush        16
     127: iushr
     128: sipush        255
     131: iand
     132: iaload
     133: ixor
     134: istore        7
     136: iload         7
     138: getstatic     #1142               // Field SBOX2_0222:[I
     141: iload         5
     143: bipush        24
     145: iushr
     146: sipush        255
     149: iand
     150: iaload
     151: ixor
     152: istore        7
     154: aload_1
     155: iconst_2
     156: dup2
     157: iaload
     158: iload         6
     160: iload         7
     162: ixor
     163: ixor
     164: iastore
     165: aload_1
     166: iconst_3
     167: dup2
     168: iaload
     169: iload         6
     171: iload         7
     173: ixor
     174: iload         6
     176: bipush        8
     178: invokestatic  #1156               // Method rightRotate:(II)I
     181: ixor
     182: ixor
     183: iastore
     184: aload_1
     185: iconst_2
     186: iaload
     187: aload_2
     188: iconst_2
     189: iload_3
     190: iadd
     191: iaload
     192: ixor
     193: istore        4
     195: getstatic     #1144               // Field SBOX4_4404:[I
     198: iload         4
     200: sipush        255
     203: iand
     204: iaload
     205: istore        6
     207: iload         6
     209: getstatic     #1143               // Field SBOX3_3033:[I
     212: iload         4
     214: bipush        8
     216: iushr
     217: sipush        255
     220: iand
     221: iaload
     222: ixor
     223: istore        6
     225: iload         6
     227: getstatic     #1142               // Field SBOX2_0222:[I
     230: iload         4
     232: bipush        16
     234: iushr
     235: sipush        255
     238: iand
     239: iaload
     240: ixor
     241: istore        6
     243: iload         6
     245: getstatic     #1141               // Field SBOX1_1110:[I
     248: iload         4
     250: bipush        24
     252: iushr
     253: sipush        255
     256: iand
     257: iaload
     258: ixor
     259: istore        6
     261: aload_1
     262: iconst_3
     263: iaload
     264: aload_2
     265: iconst_3
     266: iload_3
     267: iadd
     268: iaload
     269: ixor
     270: istore        5
     272: getstatic     #1141               // Field SBOX1_1110:[I
     275: iload         5
     277: sipush        255
     280: iand
     281: iaload
     282: istore        7
     284: iload         7
     286: getstatic     #1144               // Field SBOX4_4404:[I
     289: iload         5
     291: bipush        8
     293: iushr
     294: sipush        255
     297: iand
     298: iaload
     299: ixor
     300: istore        7
     302: iload         7
     304: getstatic     #1143               // Field SBOX3_3033:[I
     307: iload         5
     309: bipush        16
     311: iushr
     312: sipush        255
     315: iand
     316: iaload
     317: ixor
     318: istore        7
     320: iload         7
     322: getstatic     #1142               // Field SBOX2_0222:[I
     325: iload         5
     327: bipush        24
     329: iushr
     330: sipush        255
     333: iand
     334: iaload
     335: ixor
     336: istore        7
     338: aload_1
     339: iconst_0
     340: dup2
     341: iaload
     342: iload         6
     344: iload         7
     346: ixor
     347: ixor
     348: iastore
     349: aload_1
     350: iconst_1
     351: dup2
     352: iaload
     353: iload         6
     355: iload         7
     357: ixor
     358: iload         6
     360: bipush        8
     362: invokestatic  #1156               // Method rightRotate:(II)I
     365: ixor
     366: ixor
     367: iastore
     368: return

  private void camelliaFLs(int[], int[], int);
    Code:
       0: aload_1
       1: iconst_1
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_0
       6: iaload
       7: aload_2
       8: iconst_0
       9: iload_3
      10: iadd
      11: iaload
      12: iand
      13: iconst_1
      14: invokestatic  #1155               // Method leftRotate:(II)I
      17: ixor
      18: iastore
      19: aload_1
      20: iconst_0
      21: dup2
      22: iaload
      23: aload_2
      24: iconst_1
      25: iload_3
      26: iadd
      27: iaload
      28: aload_1
      29: iconst_1
      30: iaload
      31: ior
      32: ixor
      33: iastore
      34: aload_1
      35: iconst_2
      36: dup2
      37: iaload
      38: aload_2
      39: iconst_3
      40: iload_3
      41: iadd
      42: iaload
      43: aload_1
      44: iconst_3
      45: iaload
      46: ior
      47: ixor
      48: iastore
      49: aload_1
      50: iconst_3
      51: dup2
      52: iaload
      53: aload_2
      54: iconst_2
      55: iload_3
      56: iadd
      57: iaload
      58: aload_1
      59: iconst_2
      60: iaload
      61: iand
      62: iconst_1
      63: invokestatic  #1155               // Method leftRotate:(II)I
      66: ixor
      67: iastore
      68: return

  private void setKey(boolean, byte[]);
    Code:
       0: bipush        8
       2: newarray       int
       4: astore_3
       5: iconst_4
       6: newarray       int
       8: astore        4
      10: iconst_4
      11: newarray       int
      13: astore        5
      15: iconst_4
      16: newarray       int
      18: astore        6
      20: aload_2
      21: arraylength
      22: lookupswitch  { // 3
                    16: 56
                    24: 120
                    32: 204
               default: 292
          }
      56: aload_0
      57: iconst_1
      58: putfield      #1139               // Field _keyIs128:Z
      61: aload_3
      62: iconst_0
      63: aload_0
      64: aload_2
      65: iconst_0
      66: invokespecial #1163               // Method bytes2int:([BI)I
      69: iastore
      70: aload_3
      71: iconst_1
      72: aload_0
      73: aload_2
      74: iconst_4
      75: invokespecial #1163               // Method bytes2int:([BI)I
      78: iastore
      79: aload_3
      80: iconst_2
      81: aload_0
      82: aload_2
      83: bipush        8
      85: invokespecial #1163               // Method bytes2int:([BI)I
      88: iastore
      89: aload_3
      90: iconst_3
      91: aload_0
      92: aload_2
      93: bipush        12
      95: invokespecial #1163               // Method bytes2int:([BI)I
      98: iastore
      99: aload_3
     100: iconst_4
     101: aload_3
     102: iconst_5
     103: aload_3
     104: bipush        6
     106: aload_3
     107: bipush        7
     109: iconst_0
     110: dup_x2
     111: iastore
     112: dup_x2
     113: iastore
     114: dup_x2
     115: iastore
     116: iastore
     117: goto          302
     120: aload_3
     121: iconst_0
     122: aload_0
     123: aload_2
     124: iconst_0
     125: invokespecial #1163               // Method bytes2int:([BI)I
     128: iastore
     129: aload_3
     130: iconst_1
     131: aload_0
     132: aload_2
     133: iconst_4
     134: invokespecial #1163               // Method bytes2int:([BI)I
     137: iastore
     138: aload_3
     139: iconst_2
     140: aload_0
     141: aload_2
     142: bipush        8
     144: invokespecial #1163               // Method bytes2int:([BI)I
     147: iastore
     148: aload_3
     149: iconst_3
     150: aload_0
     151: aload_2
     152: bipush        12
     154: invokespecial #1163               // Method bytes2int:([BI)I
     157: iastore
     158: aload_3
     159: iconst_4
     160: aload_0
     161: aload_2
     162: bipush        16
     164: invokespecial #1163               // Method bytes2int:([BI)I
     167: iastore
     168: aload_3
     169: iconst_5
     170: aload_0
     171: aload_2
     172: bipush        20
     174: invokespecial #1163               // Method bytes2int:([BI)I
     177: iastore
     178: aload_3
     179: bipush        6
     181: aload_3
     182: iconst_4
     183: iaload
     184: iconst_m1
     185: ixor
     186: iastore
     187: aload_3
     188: bipush        7
     190: aload_3
     191: iconst_5
     192: iaload
     193: iconst_m1
     194: ixor
     195: iastore
     196: aload_0
     197: iconst_0
     198: putfield      #1139               // Field _keyIs128:Z
     201: goto          302
     204: aload_3
     205: iconst_0
     206: aload_0
     207: aload_2
     208: iconst_0
     209: invokespecial #1163               // Method bytes2int:([BI)I
     212: iastore
     213: aload_3
     214: iconst_1
     215: aload_0
     216: aload_2
     217: iconst_4
     218: invokespecial #1163               // Method bytes2int:([BI)I
     221: iastore
     222: aload_3
     223: iconst_2
     224: aload_0
     225: aload_2
     226: bipush        8
     228: invokespecial #1163               // Method bytes2int:([BI)I
     231: iastore
     232: aload_3
     233: iconst_3
     234: aload_0
     235: aload_2
     236: bipush        12
     238: invokespecial #1163               // Method bytes2int:([BI)I
     241: iastore
     242: aload_3
     243: iconst_4
     244: aload_0
     245: aload_2
     246: bipush        16
     248: invokespecial #1163               // Method bytes2int:([BI)I
     251: iastore
     252: aload_3
     253: iconst_5
     254: aload_0
     255: aload_2
     256: bipush        20
     258: invokespecial #1163               // Method bytes2int:([BI)I
     261: iastore
     262: aload_3
     263: bipush        6
     265: aload_0
     266: aload_2
     267: bipush        24
     269: invokespecial #1163               // Method bytes2int:([BI)I
     272: iastore
     273: aload_3
     274: bipush        7
     276: aload_0
     277: aload_2
     278: bipush        28
     280: invokespecial #1163               // Method bytes2int:([BI)I
     283: iastore
     284: aload_0
     285: iconst_0
     286: putfield      #1139               // Field _keyIs128:Z
     289: goto          302
     292: new           #1101               // class java/lang/IllegalArgumentException
     295: dup
     296: ldc           #217                // String key sizes are only 16/24/32 bytes.
     298: invokespecial #1150               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     301: athrow
     302: iconst_0
     303: istore        7
     305: iload         7
     307: iconst_4
     308: if_icmpge     333
     311: aload         4
     313: iload         7
     315: aload_3
     316: iload         7
     318: iaload
     319: aload_3
     320: iload         7
     322: iconst_4
     323: iadd
     324: iaload
     325: ixor
     326: iastore
     327: iinc          7, 1
     330: goto          305
     333: aload_0
     334: aload         4
     336: getstatic     #1145               // Field SIGMA:[I
     339: iconst_0
     340: invokespecial #1166               // Method camelliaF2:([I[II)V
     343: iconst_0
     344: istore        7
     346: iload         7
     348: iconst_4
     349: if_icmpge     370
     352: aload         4
     354: iload         7
     356: dup2
     357: iaload
     358: aload_3
     359: iload         7
     361: iaload
     362: ixor
     363: iastore
     364: iinc          7, 1
     367: goto          346
     370: aload_0
     371: aload         4
     373: getstatic     #1145               // Field SIGMA:[I
     376: iconst_4
     377: invokespecial #1166               // Method camelliaF2:([I[II)V
     380: aload_0
     381: getfield      #1139               // Field _keyIs128:Z
     384: ifeq          946
     387: iload_1
     388: ifeq          666
     391: aload_0
     392: getfield      #1147               // Field kw:[I
     395: iconst_0
     396: aload_3
     397: iconst_0
     398: iaload
     399: iastore
     400: aload_0
     401: getfield      #1147               // Field kw:[I
     404: iconst_1
     405: aload_3
     406: iconst_1
     407: iaload
     408: iastore
     409: aload_0
     410: getfield      #1147               // Field kw:[I
     413: iconst_2
     414: aload_3
     415: iconst_2
     416: iaload
     417: iastore
     418: aload_0
     419: getfield      #1147               // Field kw:[I
     422: iconst_3
     423: aload_3
     424: iconst_3
     425: iaload
     426: iastore
     427: bipush        15
     429: aload_3
     430: iconst_0
     431: aload_0
     432: getfield      #1149               // Field subkey:[I
     435: iconst_4
     436: invokestatic  #1160               // Method roldq:(I[II[II)V
     439: bipush        30
     441: aload_3
     442: iconst_0
     443: aload_0
     444: getfield      #1149               // Field subkey:[I
     447: bipush        12
     449: invokestatic  #1160               // Method roldq:(I[II[II)V
     452: bipush        15
     454: aload_3
     455: iconst_0
     456: aload         6
     458: iconst_0
     459: invokestatic  #1160               // Method roldq:(I[II[II)V
     462: aload_0
     463: getfield      #1149               // Field subkey:[I
     466: bipush        18
     468: aload         6
     470: iconst_2
     471: iaload
     472: iastore
     473: aload_0
     474: getfield      #1149               // Field subkey:[I
     477: bipush        19
     479: aload         6
     481: iconst_3
     482: iaload
     483: iastore
     484: bipush        17
     486: aload_3
     487: iconst_0
     488: aload_0
     489: getfield      #1146               // Field ke:[I
     492: iconst_4
     493: invokestatic  #1160               // Method roldq:(I[II[II)V
     496: bipush        17
     498: aload_3
     499: iconst_0
     500: aload_0
     501: getfield      #1149               // Field subkey:[I
     504: bipush        24
     506: invokestatic  #1160               // Method roldq:(I[II[II)V
     509: bipush        17
     511: aload_3
     512: iconst_0
     513: aload_0
     514: getfield      #1149               // Field subkey:[I
     517: bipush        32
     519: invokestatic  #1160               // Method roldq:(I[II[II)V
     522: aload_0
     523: getfield      #1149               // Field subkey:[I
     526: iconst_0
     527: aload         4
     529: iconst_0
     530: iaload
     531: iastore
     532: aload_0
     533: getfield      #1149               // Field subkey:[I
     536: iconst_1
     537: aload         4
     539: iconst_1
     540: iaload
     541: iastore
     542: aload_0
     543: getfield      #1149               // Field subkey:[I
     546: iconst_2
     547: aload         4
     549: iconst_2
     550: iaload
     551: iastore
     552: aload_0
     553: getfield      #1149               // Field subkey:[I
     556: iconst_3
     557: aload         4
     559: iconst_3
     560: iaload
     561: iastore
     562: bipush        15
     564: aload         4
     566: iconst_0
     567: aload_0
     568: getfield      #1149               // Field subkey:[I
     571: bipush        8
     573: invokestatic  #1160               // Method roldq:(I[II[II)V
     576: bipush        15
     578: aload         4
     580: iconst_0
     581: aload_0
     582: getfield      #1146               // Field ke:[I
     585: iconst_0
     586: invokestatic  #1160               // Method roldq:(I[II[II)V
     589: bipush        15
     591: aload         4
     593: iconst_0
     594: aload         6
     596: iconst_0
     597: invokestatic  #1160               // Method roldq:(I[II[II)V
     600: aload_0
     601: getfield      #1149               // Field subkey:[I
     604: bipush        16
     606: aload         6
     608: iconst_0
     609: iaload
     610: iastore
     611: aload_0
     612: getfield      #1149               // Field subkey:[I
     615: bipush        17
     617: aload         6
     619: iconst_1
     620: iaload
     621: iastore
     622: bipush        15
     624: aload         4
     626: iconst_0
     627: aload_0
     628: getfield      #1149               // Field subkey:[I
     631: bipush        20
     633: invokestatic  #1160               // Method roldq:(I[II[II)V
     636: bipush        34
     638: aload         4
     640: iconst_0
     641: aload_0
     642: getfield      #1149               // Field subkey:[I
     645: bipush        28
     647: invokestatic  #1161               // Method roldqo32:(I[II[II)V
     650: bipush        17
     652: aload         4
     654: iconst_0
     655: aload_0
     656: getfield      #1147               // Field kw:[I
     659: iconst_4
     660: invokestatic  #1160               // Method roldq:(I[II[II)V
     663: goto          1606
     666: aload_0
     667: getfield      #1147               // Field kw:[I
     670: iconst_4
     671: aload_3
     672: iconst_0
     673: iaload
     674: iastore
     675: aload_0
     676: getfield      #1147               // Field kw:[I
     679: iconst_5
     680: aload_3
     681: iconst_1
     682: iaload
     683: iastore
     684: aload_0
     685: getfield      #1147               // Field kw:[I
     688: bipush        6
     690: aload_3
     691: iconst_2
     692: iaload
     693: iastore
     694: aload_0
     695: getfield      #1147               // Field kw:[I
     698: bipush        7
     700: aload_3
     701: iconst_3
     702: iaload
     703: iastore
     704: bipush        15
     706: aload_3
     707: iconst_0
     708: aload_0
     709: getfield      #1149               // Field subkey:[I
     712: bipush        28
     714: invokestatic  #1158               // Method decroldq:(I[II[II)V
     717: bipush        30
     719: aload_3
     720: iconst_0
     721: aload_0
     722: getfield      #1149               // Field subkey:[I
     725: bipush        20
     727: invokestatic  #1158               // Method decroldq:(I[II[II)V
     730: bipush        15
     732: aload_3
     733: iconst_0
     734: aload         6
     736: iconst_0
     737: invokestatic  #1158               // Method decroldq:(I[II[II)V
     740: aload_0
     741: getfield      #1149               // Field subkey:[I
     744: bipush        16
     746: aload         6
     748: iconst_0
     749: iaload
     750: iastore
     751: aload_0
     752: getfield      #1149               // Field subkey:[I
     755: bipush        17
     757: aload         6
     759: iconst_1
     760: iaload
     761: iastore
     762: bipush        17
     764: aload_3
     765: iconst_0
     766: aload_0
     767: getfield      #1146               // Field ke:[I
     770: iconst_0
     771: invokestatic  #1158               // Method decroldq:(I[II[II)V
     774: bipush        17
     776: aload_3
     777: iconst_0
     778: aload_0
     779: getfield      #1149               // Field subkey:[I
     782: bipush        8
     784: invokestatic  #1158               // Method decroldq:(I[II[II)V
     787: bipush        17
     789: aload_3
     790: iconst_0
     791: aload_0
     792: getfield      #1149               // Field subkey:[I
     795: iconst_0
     796: invokestatic  #1158               // Method decroldq:(I[II[II)V
     799: aload_0
     800: getfield      #1149               // Field subkey:[I
     803: bipush        34
     805: aload         4
     807: iconst_0
     808: iaload
     809: iastore
     810: aload_0
     811: getfield      #1149               // Field subkey:[I
     814: bipush        35
     816: aload         4
     818: iconst_1
     819: iaload
     820: iastore
     821: aload_0
     822: getfield      #1149               // Field subkey:[I
     825: bipush        32
     827: aload         4
     829: iconst_2
     830: iaload
     831: iastore
     832: aload_0
     833: getfield      #1149               // Field subkey:[I
     836: bipush        33
     838: aload         4
     840: iconst_3
     841: iaload
     842: iastore
     843: bipush        15
     845: aload         4
     847: iconst_0
     848: aload_0
     849: getfield      #1149               // Field subkey:[I
     852: bipush        24
     854: invokestatic  #1158               // Method decroldq:(I[II[II)V
     857: bipush        15
     859: aload         4
     861: iconst_0
     862: aload_0
     863: getfield      #1146               // Field ke:[I
     866: iconst_4
     867: invokestatic  #1158               // Method decroldq:(I[II[II)V
     870: bipush        15
     872: aload         4
     874: iconst_0
     875: aload         6
     877: iconst_0
     878: invokestatic  #1158               // Method decroldq:(I[II[II)V
     881: aload_0
     882: getfield      #1149               // Field subkey:[I
     885: bipush        18
     887: aload         6
     889: iconst_2
     890: iaload
     891: iastore
     892: aload_0
     893: getfield      #1149               // Field subkey:[I
     896: bipush        19
     898: aload         6
     900: iconst_3
     901: iaload
     902: iastore
     903: bipush        15
     905: aload         4
     907: iconst_0
     908: aload_0
     909: getfield      #1149               // Field subkey:[I
     912: bipush        12
     914: invokestatic  #1158               // Method decroldq:(I[II[II)V
     917: bipush        34
     919: aload         4
     921: iconst_0
     922: aload_0
     923: getfield      #1149               // Field subkey:[I
     926: iconst_4
     927: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
     930: bipush        17
     932: aload         4
     934: iconst_0
     935: aload_0
     936: getfield      #1147               // Field kw:[I
     939: iconst_0
     940: invokestatic  #1160               // Method roldq:(I[II[II)V
     943: goto          1606
     946: iconst_0
     947: istore        7
     949: iload         7
     951: iconst_4
     952: if_icmpge     978
     955: aload         5
     957: iload         7
     959: aload         4
     961: iload         7
     963: iaload
     964: aload_3
     965: iload         7
     967: iconst_4
     968: iadd
     969: iaload
     970: ixor
     971: iastore
     972: iinc          7, 1
     975: goto          949
     978: aload_0
     979: aload         5
     981: getstatic     #1145               // Field SIGMA:[I
     984: bipush        8
     986: invokespecial #1166               // Method camelliaF2:([I[II)V
     989: iload_1
     990: ifeq          1300
     993: aload_0
     994: getfield      #1147               // Field kw:[I
     997: iconst_0
     998: aload_3
     999: iconst_0
    1000: iaload
    1001: iastore
    1002: aload_0
    1003: getfield      #1147               // Field kw:[I
    1006: iconst_1
    1007: aload_3
    1008: iconst_1
    1009: iaload
    1010: iastore
    1011: aload_0
    1012: getfield      #1147               // Field kw:[I
    1015: iconst_2
    1016: aload_3
    1017: iconst_2
    1018: iaload
    1019: iastore
    1020: aload_0
    1021: getfield      #1147               // Field kw:[I
    1024: iconst_3
    1025: aload_3
    1026: iconst_3
    1027: iaload
    1028: iastore
    1029: bipush        45
    1031: aload_3
    1032: iconst_0
    1033: aload_0
    1034: getfield      #1149               // Field subkey:[I
    1037: bipush        16
    1039: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1042: bipush        15
    1044: aload_3
    1045: iconst_0
    1046: aload_0
    1047: getfield      #1146               // Field ke:[I
    1050: iconst_4
    1051: invokestatic  #1160               // Method roldq:(I[II[II)V
    1054: bipush        17
    1056: aload_3
    1057: iconst_0
    1058: aload_0
    1059: getfield      #1149               // Field subkey:[I
    1062: bipush        32
    1064: invokestatic  #1160               // Method roldq:(I[II[II)V
    1067: bipush        34
    1069: aload_3
    1070: iconst_0
    1071: aload_0
    1072: getfield      #1149               // Field subkey:[I
    1075: bipush        44
    1077: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1080: bipush        15
    1082: aload_3
    1083: iconst_4
    1084: aload_0
    1085: getfield      #1149               // Field subkey:[I
    1088: iconst_4
    1089: invokestatic  #1160               // Method roldq:(I[II[II)V
    1092: bipush        15
    1094: aload_3
    1095: iconst_4
    1096: aload_0
    1097: getfield      #1146               // Field ke:[I
    1100: iconst_0
    1101: invokestatic  #1160               // Method roldq:(I[II[II)V
    1104: bipush        30
    1106: aload_3
    1107: iconst_4
    1108: aload_0
    1109: getfield      #1149               // Field subkey:[I
    1112: bipush        24
    1114: invokestatic  #1160               // Method roldq:(I[II[II)V
    1117: bipush        34
    1119: aload_3
    1120: iconst_4
    1121: aload_0
    1122: getfield      #1149               // Field subkey:[I
    1125: bipush        36
    1127: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1130: bipush        15
    1132: aload         4
    1134: iconst_0
    1135: aload_0
    1136: getfield      #1149               // Field subkey:[I
    1139: bipush        8
    1141: invokestatic  #1160               // Method roldq:(I[II[II)V
    1144: bipush        30
    1146: aload         4
    1148: iconst_0
    1149: aload_0
    1150: getfield      #1149               // Field subkey:[I
    1153: bipush        20
    1155: invokestatic  #1160               // Method roldq:(I[II[II)V
    1158: aload_0
    1159: getfield      #1146               // Field ke:[I
    1162: bipush        8
    1164: aload         4
    1166: iconst_1
    1167: iaload
    1168: iastore
    1169: aload_0
    1170: getfield      #1146               // Field ke:[I
    1173: bipush        9
    1175: aload         4
    1177: iconst_2
    1178: iaload
    1179: iastore
    1180: aload_0
    1181: getfield      #1146               // Field ke:[I
    1184: bipush        10
    1186: aload         4
    1188: iconst_3
    1189: iaload
    1190: iastore
    1191: aload_0
    1192: getfield      #1146               // Field ke:[I
    1195: bipush        11
    1197: aload         4
    1199: iconst_0
    1200: iaload
    1201: iastore
    1202: bipush        49
    1204: aload         4
    1206: iconst_0
    1207: aload_0
    1208: getfield      #1149               // Field subkey:[I
    1211: bipush        40
    1213: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1216: aload_0
    1217: getfield      #1149               // Field subkey:[I
    1220: iconst_0
    1221: aload         5
    1223: iconst_0
    1224: iaload
    1225: iastore
    1226: aload_0
    1227: getfield      #1149               // Field subkey:[I
    1230: iconst_1
    1231: aload         5
    1233: iconst_1
    1234: iaload
    1235: iastore
    1236: aload_0
    1237: getfield      #1149               // Field subkey:[I
    1240: iconst_2
    1241: aload         5
    1243: iconst_2
    1244: iaload
    1245: iastore
    1246: aload_0
    1247: getfield      #1149               // Field subkey:[I
    1250: iconst_3
    1251: aload         5
    1253: iconst_3
    1254: iaload
    1255: iastore
    1256: bipush        30
    1258: aload         5
    1260: iconst_0
    1261: aload_0
    1262: getfield      #1149               // Field subkey:[I
    1265: bipush        12
    1267: invokestatic  #1160               // Method roldq:(I[II[II)V
    1270: bipush        30
    1272: aload         5
    1274: iconst_0
    1275: aload_0
    1276: getfield      #1149               // Field subkey:[I
    1279: bipush        28
    1281: invokestatic  #1160               // Method roldq:(I[II[II)V
    1284: bipush        51
    1286: aload         5
    1288: iconst_0
    1289: aload_0
    1290: getfield      #1147               // Field kw:[I
    1293: iconst_4
    1294: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1297: goto          1606
    1300: aload_0
    1301: getfield      #1147               // Field kw:[I
    1304: iconst_4
    1305: aload_3
    1306: iconst_0
    1307: iaload
    1308: iastore
    1309: aload_0
    1310: getfield      #1147               // Field kw:[I
    1313: iconst_5
    1314: aload_3
    1315: iconst_1
    1316: iaload
    1317: iastore
    1318: aload_0
    1319: getfield      #1147               // Field kw:[I
    1322: bipush        6
    1324: aload_3
    1325: iconst_2
    1326: iaload
    1327: iastore
    1328: aload_0
    1329: getfield      #1147               // Field kw:[I
    1332: bipush        7
    1334: aload_3
    1335: iconst_3
    1336: iaload
    1337: iastore
    1338: bipush        45
    1340: aload_3
    1341: iconst_0
    1342: aload_0
    1343: getfield      #1149               // Field subkey:[I
    1346: bipush        28
    1348: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1351: bipush        15
    1353: aload_3
    1354: iconst_0
    1355: aload_0
    1356: getfield      #1146               // Field ke:[I
    1359: iconst_4
    1360: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1363: bipush        17
    1365: aload_3
    1366: iconst_0
    1367: aload_0
    1368: getfield      #1149               // Field subkey:[I
    1371: bipush        12
    1373: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1376: bipush        34
    1378: aload_3
    1379: iconst_0
    1380: aload_0
    1381: getfield      #1149               // Field subkey:[I
    1384: iconst_0
    1385: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1388: bipush        15
    1390: aload_3
    1391: iconst_4
    1392: aload_0
    1393: getfield      #1149               // Field subkey:[I
    1396: bipush        40
    1398: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1401: bipush        15
    1403: aload_3
    1404: iconst_4
    1405: aload_0
    1406: getfield      #1146               // Field ke:[I
    1409: bipush        8
    1411: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1414: bipush        30
    1416: aload_3
    1417: iconst_4
    1418: aload_0
    1419: getfield      #1149               // Field subkey:[I
    1422: bipush        20
    1424: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1427: bipush        34
    1429: aload_3
    1430: iconst_4
    1431: aload_0
    1432: getfield      #1149               // Field subkey:[I
    1435: bipush        8
    1437: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1440: bipush        15
    1442: aload         4
    1444: iconst_0
    1445: aload_0
    1446: getfield      #1149               // Field subkey:[I
    1449: bipush        36
    1451: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1454: bipush        30
    1456: aload         4
    1458: iconst_0
    1459: aload_0
    1460: getfield      #1149               // Field subkey:[I
    1463: bipush        24
    1465: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1468: aload_0
    1469: getfield      #1146               // Field ke:[I
    1472: iconst_2
    1473: aload         4
    1475: iconst_1
    1476: iaload
    1477: iastore
    1478: aload_0
    1479: getfield      #1146               // Field ke:[I
    1482: iconst_3
    1483: aload         4
    1485: iconst_2
    1486: iaload
    1487: iastore
    1488: aload_0
    1489: getfield      #1146               // Field ke:[I
    1492: iconst_0
    1493: aload         4
    1495: iconst_3
    1496: iaload
    1497: iastore
    1498: aload_0
    1499: getfield      #1146               // Field ke:[I
    1502: iconst_1
    1503: aload         4
    1505: iconst_0
    1506: iaload
    1507: iastore
    1508: bipush        49
    1510: aload         4
    1512: iconst_0
    1513: aload_0
    1514: getfield      #1149               // Field subkey:[I
    1517: iconst_4
    1518: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1521: aload_0
    1522: getfield      #1149               // Field subkey:[I
    1525: bipush        46
    1527: aload         5
    1529: iconst_0
    1530: iaload
    1531: iastore
    1532: aload_0
    1533: getfield      #1149               // Field subkey:[I
    1536: bipush        47
    1538: aload         5
    1540: iconst_1
    1541: iaload
    1542: iastore
    1543: aload_0
    1544: getfield      #1149               // Field subkey:[I
    1547: bipush        44
    1549: aload         5
    1551: iconst_2
    1552: iaload
    1553: iastore
    1554: aload_0
    1555: getfield      #1149               // Field subkey:[I
    1558: bipush        45
    1560: aload         5
    1562: iconst_3
    1563: iaload
    1564: iastore
    1565: bipush        30
    1567: aload         5
    1569: iconst_0
    1570: aload_0
    1571: getfield      #1149               // Field subkey:[I
    1574: bipush        32
    1576: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1579: bipush        30
    1581: aload         5
    1583: iconst_0
    1584: aload_0
    1585: getfield      #1149               // Field subkey:[I
    1588: bipush        16
    1590: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1593: bipush        51
    1595: aload         5
    1597: iconst_0
    1598: aload_0
    1599: getfield      #1147               // Field kw:[I
    1602: iconst_0
    1603: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1606: return

  private int processBlock128(byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iconst_4
       6: if_icmpge     50
       9: aload_0
      10: getfield      #1148               // Field state:[I
      13: iload         5
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload         5
      20: iconst_4
      21: imul
      22: iadd
      23: invokespecial #1163               // Method bytes2int:([BI)I
      26: iastore
      27: aload_0
      28: getfield      #1148               // Field state:[I
      31: iload         5
      33: dup2
      34: iaload
      35: aload_0
      36: getfield      #1147               // Field kw:[I
      39: iload         5
      41: iaload
      42: ixor
      43: iastore
      44: iinc          5, 1
      47: goto          3
      50: aload_0
      51: aload_0
      52: getfield      #1148               // Field state:[I
      55: aload_0
      56: getfield      #1149               // Field subkey:[I
      59: iconst_0
      60: invokespecial #1166               // Method camelliaF2:([I[II)V
      63: aload_0
      64: aload_0
      65: getfield      #1148               // Field state:[I
      68: aload_0
      69: getfield      #1149               // Field subkey:[I
      72: iconst_4
      73: invokespecial #1166               // Method camelliaF2:([I[II)V
      76: aload_0
      77: aload_0
      78: getfield      #1148               // Field state:[I
      81: aload_0
      82: getfield      #1149               // Field subkey:[I
      85: bipush        8
      87: invokespecial #1166               // Method camelliaF2:([I[II)V
      90: aload_0
      91: aload_0
      92: getfield      #1148               // Field state:[I
      95: aload_0
      96: getfield      #1146               // Field ke:[I
      99: iconst_0
     100: invokespecial #1167               // Method camelliaFLs:([I[II)V
     103: aload_0
     104: aload_0
     105: getfield      #1148               // Field state:[I
     108: aload_0
     109: getfield      #1149               // Field subkey:[I
     112: bipush        12
     114: invokespecial #1166               // Method camelliaF2:([I[II)V
     117: aload_0
     118: aload_0
     119: getfield      #1148               // Field state:[I
     122: aload_0
     123: getfield      #1149               // Field subkey:[I
     126: bipush        16
     128: invokespecial #1166               // Method camelliaF2:([I[II)V
     131: aload_0
     132: aload_0
     133: getfield      #1148               // Field state:[I
     136: aload_0
     137: getfield      #1149               // Field subkey:[I
     140: bipush        20
     142: invokespecial #1166               // Method camelliaF2:([I[II)V
     145: aload_0
     146: aload_0
     147: getfield      #1148               // Field state:[I
     150: aload_0
     151: getfield      #1146               // Field ke:[I
     154: iconst_4
     155: invokespecial #1167               // Method camelliaFLs:([I[II)V
     158: aload_0
     159: aload_0
     160: getfield      #1148               // Field state:[I
     163: aload_0
     164: getfield      #1149               // Field subkey:[I
     167: bipush        24
     169: invokespecial #1166               // Method camelliaF2:([I[II)V
     172: aload_0
     173: aload_0
     174: getfield      #1148               // Field state:[I
     177: aload_0
     178: getfield      #1149               // Field subkey:[I
     181: bipush        28
     183: invokespecial #1166               // Method camelliaF2:([I[II)V
     186: aload_0
     187: aload_0
     188: getfield      #1148               // Field state:[I
     191: aload_0
     192: getfield      #1149               // Field subkey:[I
     195: bipush        32
     197: invokespecial #1166               // Method camelliaF2:([I[II)V
     200: aload_0
     201: getfield      #1148               // Field state:[I
     204: iconst_2
     205: dup2
     206: iaload
     207: aload_0
     208: getfield      #1147               // Field kw:[I
     211: iconst_4
     212: iaload
     213: ixor
     214: iastore
     215: aload_0
     216: getfield      #1148               // Field state:[I
     219: iconst_3
     220: dup2
     221: iaload
     222: aload_0
     223: getfield      #1147               // Field kw:[I
     226: iconst_5
     227: iaload
     228: ixor
     229: iastore
     230: aload_0
     231: getfield      #1148               // Field state:[I
     234: iconst_0
     235: dup2
     236: iaload
     237: aload_0
     238: getfield      #1147               // Field kw:[I
     241: bipush        6
     243: iaload
     244: ixor
     245: iastore
     246: aload_0
     247: getfield      #1148               // Field state:[I
     250: iconst_1
     251: dup2
     252: iaload
     253: aload_0
     254: getfield      #1147               // Field kw:[I
     257: bipush        7
     259: iaload
     260: ixor
     261: iastore
     262: aload_0
     263: aload_0
     264: getfield      #1148               // Field state:[I
     267: iconst_2
     268: iaload
     269: aload_3
     270: iload         4
     272: invokespecial #1157               // Method int2bytes:(I[BI)V
     275: aload_0
     276: aload_0
     277: getfield      #1148               // Field state:[I
     280: iconst_3
     281: iaload
     282: aload_3
     283: iload         4
     285: iconst_4
     286: iadd
     287: invokespecial #1157               // Method int2bytes:(I[BI)V
     290: aload_0
     291: aload_0
     292: getfield      #1148               // Field state:[I
     295: iconst_0
     296: iaload
     297: aload_3
     298: iload         4
     300: bipush        8
     302: iadd
     303: invokespecial #1157               // Method int2bytes:(I[BI)V
     306: aload_0
     307: aload_0
     308: getfield      #1148               // Field state:[I
     311: iconst_1
     312: iaload
     313: aload_3
     314: iload         4
     316: bipush        12
     318: iadd
     319: invokespecial #1157               // Method int2bytes:(I[BI)V
     322: bipush        16
     324: ireturn

  private int processBlock192or256(byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iconst_4
       6: if_icmpge     50
       9: aload_0
      10: getfield      #1148               // Field state:[I
      13: iload         5
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload         5
      20: iconst_4
      21: imul
      22: iadd
      23: invokespecial #1163               // Method bytes2int:([BI)I
      26: iastore
      27: aload_0
      28: getfield      #1148               // Field state:[I
      31: iload         5
      33: dup2
      34: iaload
      35: aload_0
      36: getfield      #1147               // Field kw:[I
      39: iload         5
      41: iaload
      42: ixor
      43: iastore
      44: iinc          5, 1
      47: goto          3
      50: aload_0
      51: aload_0
      52: getfield      #1148               // Field state:[I
      55: aload_0
      56: getfield      #1149               // Field subkey:[I
      59: iconst_0
      60: invokespecial #1166               // Method camelliaF2:([I[II)V
      63: aload_0
      64: aload_0
      65: getfield      #1148               // Field state:[I
      68: aload_0
      69: getfield      #1149               // Field subkey:[I
      72: iconst_4
      73: invokespecial #1166               // Method camelliaF2:([I[II)V
      76: aload_0
      77: aload_0
      78: getfield      #1148               // Field state:[I
      81: aload_0
      82: getfield      #1149               // Field subkey:[I
      85: bipush        8
      87: invokespecial #1166               // Method camelliaF2:([I[II)V
      90: aload_0
      91: aload_0
      92: getfield      #1148               // Field state:[I
      95: aload_0
      96: getfield      #1146               // Field ke:[I
      99: iconst_0
     100: invokespecial #1167               // Method camelliaFLs:([I[II)V
     103: aload_0
     104: aload_0
     105: getfield      #1148               // Field state:[I
     108: aload_0
     109: getfield      #1149               // Field subkey:[I
     112: bipush        12
     114: invokespecial #1166               // Method camelliaF2:([I[II)V
     117: aload_0
     118: aload_0
     119: getfield      #1148               // Field state:[I
     122: aload_0
     123: getfield      #1149               // Field subkey:[I
     126: bipush        16
     128: invokespecial #1166               // Method camelliaF2:([I[II)V
     131: aload_0
     132: aload_0
     133: getfield      #1148               // Field state:[I
     136: aload_0
     137: getfield      #1149               // Field subkey:[I
     140: bipush        20
     142: invokespecial #1166               // Method camelliaF2:([I[II)V
     145: aload_0
     146: aload_0
     147: getfield      #1148               // Field state:[I
     150: aload_0
     151: getfield      #1146               // Field ke:[I
     154: iconst_4
     155: invokespecial #1167               // Method camelliaFLs:([I[II)V
     158: aload_0
     159: aload_0
     160: getfield      #1148               // Field state:[I
     163: aload_0
     164: getfield      #1149               // Field subkey:[I
     167: bipush        24
     169: invokespecial #1166               // Method camelliaF2:([I[II)V
     172: aload_0
     173: aload_0
     174: getfield      #1148               // Field state:[I
     177: aload_0
     178: getfield      #1149               // Field subkey:[I
     181: bipush        28
     183: invokespecial #1166               // Method camelliaF2:([I[II)V
     186: aload_0
     187: aload_0
     188: getfield      #1148               // Field state:[I
     191: aload_0
     192: getfield      #1149               // Field subkey:[I
     195: bipush        32
     197: invokespecial #1166               // Method camelliaF2:([I[II)V
     200: aload_0
     201: aload_0
     202: getfield      #1148               // Field state:[I
     205: aload_0
     206: getfield      #1146               // Field ke:[I
     209: bipush        8
     211: invokespecial #1167               // Method camelliaFLs:([I[II)V
     214: aload_0
     215: aload_0
     216: getfield      #1148               // Field state:[I
     219: aload_0
     220: getfield      #1149               // Field subkey:[I
     223: bipush        36
     225: invokespecial #1166               // Method camelliaF2:([I[II)V
     228: aload_0
     229: aload_0
     230: getfield      #1148               // Field state:[I
     233: aload_0
     234: getfield      #1149               // Field subkey:[I
     237: bipush        40
     239: invokespecial #1166               // Method camelliaF2:([I[II)V
     242: aload_0
     243: aload_0
     244: getfield      #1148               // Field state:[I
     247: aload_0
     248: getfield      #1149               // Field subkey:[I
     251: bipush        44
     253: invokespecial #1166               // Method camelliaF2:([I[II)V
     256: aload_0
     257: getfield      #1148               // Field state:[I
     260: iconst_2
     261: dup2
     262: iaload
     263: aload_0
     264: getfield      #1147               // Field kw:[I
     267: iconst_4
     268: iaload
     269: ixor
     270: iastore
     271: aload_0
     272: getfield      #1148               // Field state:[I
     275: iconst_3
     276: dup2
     277: iaload
     278: aload_0
     279: getfield      #1147               // Field kw:[I
     282: iconst_5
     283: iaload
     284: ixor
     285: iastore
     286: aload_0
     287: getfield      #1148               // Field state:[I
     290: iconst_0
     291: dup2
     292: iaload
     293: aload_0
     294: getfield      #1147               // Field kw:[I
     297: bipush        6
     299: iaload
     300: ixor
     301: iastore
     302: aload_0
     303: getfield      #1148               // Field state:[I
     306: iconst_1
     307: dup2
     308: iaload
     309: aload_0
     310: getfield      #1147               // Field kw:[I
     313: bipush        7
     315: iaload
     316: ixor
     317: iastore
     318: aload_0
     319: aload_0
     320: getfield      #1148               // Field state:[I
     323: iconst_2
     324: iaload
     325: aload_3
     326: iload         4
     328: invokespecial #1157               // Method int2bytes:(I[BI)V
     331: aload_0
     332: aload_0
     333: getfield      #1148               // Field state:[I
     336: iconst_3
     337: iaload
     338: aload_3
     339: iload         4
     341: iconst_4
     342: iadd
     343: invokespecial #1157               // Method int2bytes:(I[BI)V
     346: aload_0
     347: aload_0
     348: getfield      #1148               // Field state:[I
     351: iconst_0
     352: iaload
     353: aload_3
     354: iload         4
     356: bipush        8
     358: iadd
     359: invokespecial #1157               // Method int2bytes:(I[BI)V
     362: aload_0
     363: aload_0
     364: getfield      #1148               // Field state:[I
     367: iconst_1
     368: iaload
     369: aload_3
     370: iload         4
     372: bipush        12
     374: iadd
     375: invokespecial #1157               // Method int2bytes:(I[BI)V
     378: bipush        16
     380: ireturn

  public org.bouncycastle.crypto.engines.CamelliaEngine();
    Code:
       0: aload_0
       1: invokespecial #1152               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #1140               // Field initialised:Z
       9: aload_0
      10: bipush        96
      12: newarray       int
      14: putfield      #1149               // Field subkey:[I
      17: aload_0
      18: bipush        8
      20: newarray       int
      22: putfield      #1147               // Field kw:[I
      25: aload_0
      26: bipush        12
      28: newarray       int
      30: putfield      #1146               // Field ke:[I
      33: aload_0
      34: iconst_4
      35: newarray       int
      37: putfield      #1148               // Field state:[I
      40: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #1108               // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          17
       7: new           #1101               // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #218                // String only simple KeyParameter expected.
      13: invokespecial #1150               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: aload_2
      20: checkcast     #1108               // class org/bouncycastle/crypto/params/KeyParameter
      23: invokevirtual #1168               // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      26: invokespecial #1162               // Method setKey:(Z[B)V
      29: aload_0
      30: iconst_1
      31: putfield      #1140               // Field initialised:Z
      34: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #214                // String Camellia
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #1140               // Field initialised:Z
       4: ifne          17
       7: new           #1102               // class java/lang/IllegalStateException
      10: dup
      11: ldc           #215                // String Camellia engine not initialised
      13: invokespecial #1151               // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: bipush        16
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     36
      26: new           #1105               // class org/bouncycastle/crypto/DataLengthException
      29: dup
      30: ldc           #216                // String input buffer too short
      32: invokespecial #1153               // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload         4
      38: bipush        16
      40: iadd
      41: aload_3
      42: arraylength
      43: if_icmple     56
      46: new           #1106               // class org/bouncycastle/crypto/OutputLengthException
      49: dup
      50: ldc           #219                // String output buffer too short
      52: invokespecial #1154               // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #1139               // Field _keyIs128:Z
      60: ifeq          73
      63: aload_0
      64: aload_1
      65: iload_2
      66: aload_3
      67: iload         4
      69: invokespecial #1164               // Method processBlock128:([BI[BI)I
      72: ireturn
      73: aload_0
      74: aload_1
      75: iload_2
      76: aload_3
      77: iload         4
      79: invokespecial #1165               // Method processBlock192or256:([BI[BI)I
      82: ireturn

  public void reset();
    Code:
       0: return

  static {};
    Code:
       0: bipush        12
       2: newarray       int
       4: dup
       5: iconst_0
       6: ldc           #28                 // int -1600231809
       8: iastore
       9: dup
      10: iconst_1
      11: ldc           #158                // int 1003262091
      13: iastore
      14: dup
      15: iconst_2
      16: ldc           #47                 // int -1233459112
      18: iastore
      19: dup
      20: iconst_3
      21: ldc           #170                // int 1286239154
      23: iastore
      24: dup
      25: iconst_4
      26: ldc           #60                 // int -957401297
      28: iastore
      29: dup
      30: iconst_5
      31: ldc           #90                 // int -380665154
      33: iastore
      34: dup
      35: bipush        6
      37: ldc           #179                // int 1426019237
      39: iastore
      40: dup
      41: bipush        7
      43: ldc           #98                 // int -237801700
      45: iastore
      46: dup
      47: bipush        8
      49: ldc           #121                // int 283453434
      51: iastore
      52: dup
      53: bipush        9
      55: ldc           #80                 // int -563598051
      57: iastore
      58: dup
      59: bipush        10
      61: ldc           #40                 // int -1336506174
      63: iastore
      64: dup
      65: bipush        11
      67: ldc           #45                 // int -1276722691
      69: iastore
      70: putstatic     #1145               // Field SIGMA:[I
      73: sipush        256
      76: newarray       int
      78: dup
      79: iconst_0
      80: ldc           #203                // int 1886416896
      82: iastore
      83: dup
      84: iconst_1
      85: ldc           #2                  // int -2105376256
      87: iastore
      88: dup
      89: iconst_2
      90: ldc           #145                // int 741092352
      92: iastore
      93: dup
      94: iconst_3
      95: ldc           #94                 // int -320017408
      97: iastore
      98: dup
      99: iconst_4
     100: ldc           #44                 // int -1280068864
     102: iastore
     103: dup
     104: iconst_5
     105: ldc           #142                // int 656877312
     107: iastore
     108: dup
     109: bipush        6
     111: ldc           #54                 // int -1061109760
     113: iastore
     114: dup
     115: bipush        7
     117: ldc           #87                 // int -437918464
     119: iastore
     120: dup
     121: bipush        8
     123: ldc           #86                 // int -454761472
     125: iastore
     126: dup
     127: bipush        9
     129: ldc           #5                  // int -2054847232
     131: iastore
     132: dup
     133: bipush        10
     135: ldc           #181                // int 1465341696
     137: iastore
     138: dup
     139: bipush        11
     141: ldc           #153                // int 892679424
     143: iastore
     144: dup
     145: bipush        12
     147: ldc           #92                 // int -353703424
     149: iastore
     150: dup
     151: bipush        13
     153: ldc           #116                // int 202116096
     155: iastore
     156: dup
     157: bipush        14
     159: ldc           #38                 // int -1364283904
     161: iastore
     162: dup
     163: bipush        15
     165: ldc           #162                // int 1094795520
     167: iastore
     168: dup
     169: bipush        16
     171: ldc           #139                // int 589505280
     173: iastore
     174: dup
     175: bipush        17
     177: ldc           #96                 // int -269488384
     179: iastore
     180: dup
     181: bipush        18
     183: ldc           #198                // int 1802201856
     185: iastore
     186: dup
     187: bipush        19
     189: ldc           #17                 // int -1819045120
     191: iastore
     192: dup
     193: bipush        20
     195: ldc           #164                // int 1162167552
     197: iastore
     198: dup
     199: bipush        21
     201: ldc           #129                // int 421075200
     203: iastore
     204: dup
     205: bipush        22
     207: ldc           #32                 // int -1515870976
     209: iastore
     210: dup
     211: bipush        23
     213: ldc           #137                // int 555819264
     215: iastore
     216: dup
     217: bipush        24
     219: ldc           #95                 // int -303174400
     221: iastore
     222: dup
     223: bipush        25
     225: ldc           #118                // int 235802112
     227: iastore
     228: dup
     229: bipush        26
     231: ldc           #173                // int 1330597632
     233: iastore
     234: dup
     235: bipush        27
     237: ldc           #172                // int 1313754624
     239: iastore
     240: dup
     241: bipush        28
     243: ldc           #133                // int 488447232
     245: iastore
     246: dup
     247: bipush        29
     249: ldc           #194                // int 1701143808
     251: iastore
     252: dup
     253: bipush        30
     255: ldc           #16                 // int -1835888128
     257: iastore
     258: dup
     259: bipush        31
     261: ldc           #51                 // int -1111638784
     263: iastore
     264: dup
     265: bipush        32
     267: ldc           #6                  // int -2038004224
     269: iastore
     270: dup
     271: bipush        33
     273: ldc           #49                 // int -1195853824
     275: iastore
     276: dup
     277: bipush        34
     279: ldc           #39                 // int -1347440896
     281: iastore
     282: dup
     283: bipush        35
     285: ldc           #13                 // int -1886417152
     287: iastore
     288: dup
     289: bipush        36
     291: ldc           #210                // int 2088532992
     293: iastore
     294: dup
     295: bipush        37
     297: ldc           #93                 // int -336860416
     299: iastore
     300: dup
     301: bipush        38
     303: ldc           #135                // int 522133248
     305: iastore
     306: dup
     307: bipush        39
     309: ldc           #66                 // int -825307648
     311: iastore
     312: dup
     313: bipush        40
     315: ldc           #160                // int 1044266496
     317: iastore
     318: dup
     319: bipush        41
     321: ldc           #148                // int 808464384
     323: iastore
     324: dup
     325: bipush        42
     327: ldc           #78                 // int -589505536
     329: iastore
     330: dup
     331: bipush        43
     333: ldc           #188                // int 1600085760
     335: iastore
     336: dup
     337: bipush        44
     339: ldc           #187                // int 1583242752
     341: iastore
     342: dup
     343: bipush        45
     345: ldc           #58                 // int -976894720
     347: iastore
     348: dup
     349: bipush        46
     351: ldc           #115                // int 185273088
     353: iastore
     354: dup
     355: bipush        47
     357: ldc           #130                // int 437918208
     359: iastore
     360: dup
     361: bipush        48
     363: ldc           #33                 // int -1499027968
     365: iastore
     366: dup
     367: bipush        49
     369: ldc           #84                 // int -505290496
     371: iastore
     372: dup
     373: bipush        50
     375: ldc           #155                // int 960051456
     377: iastore
     378: dup
     379: bipush        51
     381: ldc           #62                 // int -892679680
     383: iastore
     384: dup
     385: bipush        52
     387: ldc           #71                 // int -707406592
     389: iastore
     390: dup
     391: bipush        53
     393: ldc           #165                // int 1195853568
     395: iastore
     396: dup
     397: bipush        54
     399: ldc           #186                // int 1566399744
     401: iastore
     402: dup
     403: bipush        55
     405: ldc           #159                // int 1027423488
     407: iastore
     408: dup
     409: bipush        56
     411: ldc           #75                 // int -640034560
     413: iastore
     414: dup
     415: bipush        57
     417: ldc           #108                // int 16843008
     419: iastore
     420: dup
     421: bipush        58
     423: ldc           #183                // int 1515870720
     425: iastore
     426: dup
     427: bipush        59
     429: ldc           #72                 // int -690563584
     431: iastore
     432: dup
     433: bipush        60
     435: ldc           #175                // int 1364283648
     437: iastore
     438: dup
     439: bipush        61
     441: ldc           #180                // int 1448498688
     443: iastore
     444: dup
     445: bipush        62
     447: ldc           #199                // int 1819044864
     449: iastore
     450: dup
     451: bipush        63
     453: ldc           #171                // int 1296911616
     455: iastore
     456: dup
     457: bipush        64
     459: ldc           #10                 // int -1953789184
     461: iastore
     462: dup
     463: bipush        65
     465: ldc           #117                // int 218959104
     467: iastore
     468: dup
     469: bipush        66
     471: ldc           #23                 // int -1701144064
     473: iastore
     474: dup
     475: bipush        67
     477: ldc           #195                // int 1717986816
     479: iastore
     480: dup
     481: bipush        68
     483: ldc           #105                // int -67372288
     485: iastore
     486: dup
     487: bipush        69
     489: ldc           #64                 // int -858993664
     491: iastore
     492: dup
     493: bipush        70
     495: ldc           #41                 // int -1330597888
     497: iastore
     498: dup
     499: bipush        71
     501: ldc           #146                // int 757935360
     503: iastore
     504: dup
     505: bipush        72
     507: ldc           #205                // int 1953788928
     509: iastore
     510: dup
     511: bipush        73
     513: ldc           #123                // int 303174144
     515: iastore
     516: dup
     517: bipush        74
     519: ldc           #144                // int 724249344
     521: iastore
     522: dup
     523: bipush        75
     525: ldc           #136                // int 538976256
     527: iastore
     528: dup
     529: bipush        76
     531: ldc           #97                 // int -252645376
     533: iastore
     534: dup
     535: bipush        77
     537: ldc           #42                 // int -1313754880
     539: iastore
     540: dup
     541: bipush        78
     543: ldc           #4                  // int -2071690240
     545: iastore
     546: dup
     547: bipush        79
     549: ldc           #22                 // int -1717987072
     551: iastore
     552: dup
     553: bipush        80
     555: ldc           #82                 // int -538976512
     557: iastore
     558: dup
     559: bipush        81
     561: ldc           #169                // int 1280068608
     563: iastore
     564: dup
     565: bipush        82
     567: ldc           #63                 // int -875836672
     569: iastore
     570: dup
     571: bipush        83
     573: ldc           #55                 // int -1027423744
     575: iastore
     576: dup
     577: bipush        84
     579: ldc           #152                // int 875836416
     581: iastore
     582: dup
     583: bipush        85
     585: ldc           #212                // int 2122219008
     587: iastore
     588: dup
     589: bipush        86
     591: ldc           #207                // int 1987474944
     593: iastore
     594: dup
     595: bipush        87
     597: ldc           #112                // int 84215040
     599: iastore
     600: dup
     601: bipush        88
     603: ldc           #200                // int 1835887872
     605: iastore
     606: dup
     607: bipush        89
     609: ldc           #48                 // int -1212696832
     611: iastore
     612: dup
     613: bipush        90
     615: ldc           #36                 // int -1448498944
     617: iastore
     618: dup
     619: bipush        91
     621: ldc           #149                // int 825307392
     623: iastore
     624: dup
     625: bipush        92
     627: ldc           #69                 // int -774778624
     629: iastore
     630: dup
     631: bipush        93
     633: ldc           #127                // int 387389184
     635: iastore
     636: dup
     637: bipush        94
     639: ldc           #111                // int 67372032
     641: iastore
     642: dup
     643: bipush        95
     645: ldc           #73                 // int -673720576
     647: iastore
     648: dup
     649: bipush        96
     651: ldc           #125                // int 336860160
     653: iastore
     654: dup
     655: bipush        97
     657: ldc           #182                // int 1482184704
     659: iastore
     660: dup
     661: bipush        98
     663: ldc           #156                // int 976894464
     665: iastore
     666: dup
     667: bipush        99
     669: ldc           #190                // int 1633771776
     671: iastore
     672: dup
     673: bipush        100
     675: ldc           #81                 // int -555819520
     677: iastore
     678: dup
     679: bipush        101
     681: ldc           #131                // int 454761216
     683: iastore
     684: dup
     685: bipush        102
     687: ldc           #122                // int 286331136
     689: iastore
     690: dup
     691: bipush        103
     693: ldc           #132                // int 471604224
     695: iastore
     696: dup
     697: bipush        104
     699: ldc           #150                // int 842150400
     701: iastore
     702: dup
     703: bipush        105
     705: ldc           #119                // int 252645120
     707: iastore
     708: dup
     709: bipush        106
     711: ldc           #25                 // int -1667458048
     713: iastore
     714: dup
     715: bipush        107
     717: ldc           #126                // int 370546176
     719: iastore
     720: dup
     721: bipush        108
     723: ldc           #177                // int 1397969664
     725: iastore
     726: dup
     727: bipush        109
     729: ldc           #128                // int 404232192
     731: iastore
     732: dup
     733: bipush        110
     735: ldc           #99                 // int -218959360
     737: iastore
     738: dup
     739: bipush        111
     741: ldc           #138                // int 572662272
     743: iastore
     744: dup
     745: bipush        112
     747: ldc           #107                // int -16843264
     749: iastore
     750: dup
     751: bipush        113
     753: ldc           #163                // int 1145324544
     755: iastore
     756: dup
     757: bipush        114
     759: ldc           #67                 // int -808464640
     761: iastore
     762: dup
     763: bipush        115
     765: ldc           #43                 // int -1296911872
     767: iastore
     768: dup
     769: bipush        116
     771: ldc           #56                 // int -1010580736
     773: iastore
     774: dup
     775: bipush        117
     777: ldc           #46                 // int -1246382848
     779: iastore
     780: dup
     781: bipush        118
     783: ldc           #209                // int 2054846976
     785: iastore
     786: dup
     787: bipush        119
     789: ldc           #15                 // int -1852731136
     791: iastore
     792: dup
     793: bipush        120
     795: ldc           #140                // int 606348288
     797: iastore
     798: dup
     799: bipush        121
     801: ldc           #113                // int 134744064
     803: iastore
     804: dup
     805: bipush        122
     807: ldc           #89                 // int -387389440
     809: iastore
     810: dup
     811: bipush        123
     813: ldc           #35                 // int -1465341952
     815: iastore
     816: dup
     817: bipush        124
     819: ldc           #189                // int 1616928768
     821: iastore
     822: dup
     823: bipush        125
     825: ldc           #106                // int -50529280
     827: iastore
     828: dup
     829: bipush        126
     831: ldc           #197                // int 1768515840
     833: iastore
     834: dup
     835: bipush        127
     837: ldc           #174                // int 1347440640
     839: iastore
     840: dup
     841: sipush        128
     844: ldc           #37                 // int -1431655936
     846: iastore
     847: dup
     848: sipush        129
     851: ldc           #68                 // int -791621632
     853: iastore
     854: dup
     855: sipush        130
     858: ldc           #29                 // int -1600086016
     860: iastore
     861: dup
     862: sipush        131
     865: ldc           #211                // int 2105376000
     867: iastore
     868: dup
     869: sipush        132
     872: ldc           #30                 // int -1583243008
     874: iastore
     875: dup
     876: sipush        133
     879: ldc           #8                  // int -1987475200
     881: iastore
     882: dup
     883: sipush        134
     886: ldc           #191                // int 1650614784
     888: iastore
     889: dup
     890: sipush        135
     893: ldc           #21                 // int -1751673088
     895: iastore
     896: dup
     897: sipush        136
     900: ldc           #178                // int 1414812672
     902: iastore
     903: dup
     904: sipush        137
     907: ldc           #184                // int 1532713728
     909: iastore
     910: dup
     911: sipush        138
     914: ldc           #134                // int 505290240
     916: iastore
     917: dup
     918: sipush        139
     921: ldc           #19                 // int -1785359104
     923: iastore
     924: dup
     925: sipush        140
     928: ldc           #83                 // int -522133504
     930: iastore
     931: dup
     932: sipush        141
     935: sipush        -256
     938: iastore
     939: dup
     940: sipush        142
     943: ldc           #193                // int 1684300800
     945: iastore
     946: dup
     947: sipush        143
     950: ldc           #70                 // int -757935616
     952: iastore
     953: dup
     954: sipush        144
     957: ldc           #120                // int 269488128
     959: iastore
     960: dup
     961: sipush        145
     964: ldc           #57                 // int -993737728
     966: iastore
     967: dup
     968: sipush        146
     971: iconst_0
     972: iastore
     973: dup
     974: sipush        147
     977: ldc           #166                // int 1212696576
     979: iastore
     980: dup
     981: sipush        148
     984: ldc           #31                 // int -1549556992
     986: iastore
     987: dup
     988: sipush        149
     991: ldc           #103                // int -134744320
     993: iastore
     994: dup
     995: sipush        150
     998: ldc           #206                // int 1970631936
    1000: iastore
    1001: dup
    1002: sipush        151
    1005: ldc           #77                 // int -606348544
    1007: iastore
    1008: dup
    1009: sipush        152
    1012: ldc           #9                  // int -1970632192
    1014: iastore
    1015: dup
    1016: sipush        153
    1019: ldc           #110                // int 50529024
    1021: iastore
    1022: dup
    1023: sipush        154
    1026: ldc           #88                 // int -421075456
    1028: iastore
    1029: dup
    1030: sipush        155
    1033: ldc           #76                 // int -623191552
    1035: iastore
    1036: dup
    1037: sipush        156
    1040: ldc           #114                // int 151587072
    1042: iastore
    1043: dup
    1044: sipush        157
    1047: ldc           #161                // int 1061109504
    1049: iastore
    1050: dup
    1051: sipush        158
    1054: ldc           #79                 // int -572662528
    1056: iastore
    1057: dup
    1058: sipush        159
    1061: ldc           #18                 // int -1802202112
    1063: iastore
    1064: dup
    1065: sipush        160
    1068: ldc           #7                  // int -2021161216
    1070: iastore
    1071: dup
    1072: sipush        161
    1075: ldc           #185                // int 1549556736
    1077: iastore
    1078: dup
    1079: sipush        162
    1082: ldc           #3                  // int -2088533248
    1084: iastore
    1085: dup
    1086: sipush        163
    1089: ldc           #109                // int 33686016
    1091: iastore
    1092: dup
    1093: sipush        164
    1096: ldc           #65                 // int -842150656
    1098: iastore
    1099: dup
    1100: sipush        165
    1103: ldc           #167                // int 1246382592
    1105: iastore
    1106: dup
    1107: sipush        166
    1110: ldc           #14                 // int -1869574144
    1112: iastore
    1113: dup
    1114: sipush        167
    1117: ldc           #151                // int 858993408
    1119: iastore
    1120: dup
    1121: sipush        168
    1124: ldc           #204                // int 1936945920
    1126: iastore
    1127: dup
    1128: sipush        169
    1131: ldc           #196                // int 1734829824
    1133: iastore
    1134: dup
    1135: sipush        170
    1138: ldc           #102                // int -151587328
    1140: iastore
    1141: dup
    1142: sipush        171
    1145: ldc           #100                // int -202116352
    1147: iastore
    1148: dup
    1149: sipush        172
    1152: ldc           #26                 // int -1650615040
    1154: iastore
    1155: dup
    1156: sipush        173
    1159: ldc           #213                // int 2139062016
    1161: iastore
    1162: dup
    1163: sipush        174
    1166: ldc           #53                 // int -1077952768
    1168: iastore
    1169: dup
    1170: sipush        175
    1173: ldc           #85                 // int -488447488
    1175: iastore
    1176: dup
    1177: sipush        176
    1180: ldc           #176                // int 1381126656
    1182: iastore
    1183: dup
    1184: sipush        177
    1187: ldc           #24                 // int -1684301056
    1189: iastore
    1190: dup
    1191: sipush        178
    1194: ldc           #74                 // int -656877568
    1196: iastore
    1197: dup
    1198: sipush        179
    1201: ldc           #141                // int 640034304
    1203: iastore
    1204: dup
    1205: sipush        180
    1208: ldc           #61                 // int -926365696
    1210: iastore
    1211: dup
    1212: sipush        181
    1215: ldc           #154                // int 926365440
    1217: iastore
    1218: dup
    1219: sipush        182
    1222: ldc           #59                 // int -960051712
    1224: iastore
    1225: dup
    1226: sipush        183
    1229: ldc           #157                // int 993737472
    1231: iastore
    1232: dup
    1233: sipush        184
    1236: ldc           #1                  // int -2122219264
    1238: iastore
    1239: dup
    1240: sipush        185
    1243: ldc           #20                 // int -1768516096
    1245: iastore
    1246: dup
    1247: sipush        186
    1250: ldc           #202                // int 1869573888
    1252: iastore
    1253: dup
    1254: sipush        187
    1257: ldc           #168                // int 1263225600
    1259: iastore
    1260: dup
    1261: sipush        188
    1264: ldc           #124                // int 320017152
    1266: iastore
    1267: dup
    1268: sipush        189
    1271: ldc           #52                 // int -1094795776
    1273: iastore
    1274: dup
    1275: sipush        190
    1278: ldc           #192                // int 1667457792
    1280: iastore
    1281: dup
    1282: sipush        191
    1285: ldc           #147                // int 774778368
    1287: iastore
    1288: dup
    1289: sipush        192
    1292: ldc           #91                 // int -370546432
    1294: iastore
    1295: dup
    1296: sipush        193
    1299: ldc           #208                // int 2038003968
    1301: iastore
    1302: dup
    1303: sipush        194
    1306: ldc           #34                 // int -1482184960
    1308: iastore
    1309: dup
    1310: sipush        195
    1313: ldc           #11                 // int -1936946176
    1315: iastore
    1316: dup
    1317: sipush        196
    1320: ldc           #27                 // int -1616929024
    1322: iastore
    1323: dup
    1324: sipush        197
    1327: ldc           #201                // int 1852730880
    1329: iastore
    1330: dup
    1331: sipush        198
    1334: ldc           #50                 // int -1128481792
    1336: iastore
    1337: dup
    1338: sipush        199
    1341: ldc           #12                 // int -1903260160
    1343: iastore
    1344: dup
    1345: sipush        200
    1348: ldc           #143                // int 690563328
    1350: iastore
    1351: dup
    1352: sipush        201
    1355: ldc           #101                // int -168430336
    1357: iastore
    1358: dup
    1359: sipush        202
    1362: ldc           #104                // int -101058304
    1364: iastore
    1365: dup
    1366: sipush        203
    1369: ldc_w         #402                // int -1229539840
    1372: iastore
    1373: dup
    1374: sipush        204
    1377: ldc_w         #923                // int 791621376
    1380: iastore
    1381: dup
    1382: sipush        205
    1385: ldc_w         #560                // int -33686272
    1388: iastore
    1389: dup
    1390: sipush        206
    1393: ldc_w         #397                // int -1263225856
    1396: iastore
    1397: dup
    1398: sipush        207
    1401: ldc_w         #1017               // int 1499027712
    1404: iastore
    1405: dup
    1406: sipush        208
    1409: ldc_w         #1085               // int 2021160960
    1412: iastore
    1413: dup
    1414: sipush        209
    1417: ldc_w         #334                // int -1734830080
    1420: iastore
    1421: dup
    1422: sipush        210
    1425: ldc_w         #834                // int 101058048
    1428: iastore
    1429: dup
    1430: sipush        211
    1433: ldc_w         #1053               // int 1785358848
    1436: iastore
    1437: dup
    1438: sipush        212
    1441: ldc_w         #510                // int -404232448
    1444: iastore
    1445: dup
    1446: sipush        213
    1449: ldc_w         #976                // int 1179010560
    1452: iastore
    1453: dup
    1454: sipush        214
    1457: ldc_w         #1068               // int 1903259904
    1460: iastore
    1461: dup
    1462: sipush        215
    1465: ldc_w         #412                // int -1162167808
    1468: iastore
    1469: dup
    1470: sipush        216
    1473: ldc_w         #470                // int -724249600
    1476: iastore
    1477: dup
    1478: sipush        217
    1481: ldc_w         #900                // int 623191296
    1484: iastore
    1485: dup
    1486: sipush        218
    1489: ldc_w         #376                // int -1414812928
    1492: iastore
    1493: dup
    1494: sipush        219
    1497: ldc_w         #966                // int 1111638528
    1500: iastore
    1501: dup
    1502: sipush        220
    1505: ldc_w         #300                // int -2004318208
    1508: iastore
    1509: dup
    1510: sipush        221
    1513: ldc_w         #356                // int -1566400000
    1516: iastore
    1517: dup
    1518: sipush        222
    1521: ldc_w         #311                // int -1920103168
    1524: iastore
    1525: dup
    1526: sipush        223
    1529: ldc_w         #553                // int -84215296
    1532: iastore
    1533: dup
    1534: sipush        224
    1537: ldc_w         #1071               // int 1920102912
    1540: iastore
    1541: dup
    1542: sipush        225
    1545: ldc_w         #837                // int 117901056
    1548: iastore
    1549: dup
    1550: sipush        226
    1553: ldc_w         #409                // int -1179010816
    1556: iastore
    1557: dup
    1558: sipush        227
    1561: ldc_w         #1008               // int 1431655680
    1564: iastore
    1565: dup
    1566: sipush        228
    1569: ldc_w         #548                // int -117901312
    1572: iastore
    1573: dup
    1574: sipush        229
    1577: ldc_w         #525                // int -286331392
    1580: iastore
    1581: dup
    1582: sipush        230
    1585: ldc_w         #379                // int -1397969920
    1588: iastore
    1589: dup
    1590: sipush        231
    1593: ldc_w         #844                // int 168430080
    1596: iastore
    1597: dup
    1598: sipush        232
    1601: ldc_w         #938                // int 909522432
    1604: iastore
    1605: dup
    1606: sipush        233
    1609: ldc_w         #983                // int 1229539584
    1612: iastore
    1613: dup
    1614: sipush        234
    1617: ldc_w         #912                // int 707406336
    1620: iastore
    1621: dup
    1622: sipush        235
    1625: ldc_w         #1048               // int 1751672832
    1628: iastore
    1629: dup
    1630: sipush        236
    1633: ldc_w         #952                // int 1010580480
    1636: iastore
    1637: dup
    1638: sipush        237
    1641: ldc_w         #943                // int 943208448
    1644: iastore
    1645: dup
    1646: sipush        238
    1649: ldc_w         #532                // int -235802368
    1652: iastore
    1653: dup
    1654: sipush        239
    1657: ldc_w         #361                // int -1532713984
    1660: iastore
    1661: dup
    1662: sipush        240
    1665: ldc_w         #961                // int 1077952512
    1668: iastore
    1669: dup
    1670: sipush        241
    1673: ldc_w         #907                // int 673720320
    1676: iastore
    1677: dup
    1678: sipush        242
    1681: ldc_w         #467                // int -741092608
    1684: iastore
    1685: dup
    1686: sipush        243
    1689: ldc_w         #1092               // int 2071689984
    1692: iastore
    1693: dup
    1694: sipush        244
    1697: ldc_w         #415                // int -1145324800
    1700: iastore
    1701: dup
    1702: sipush        245
    1705: ldc_w         #446                // int -909522688
    1708: iastore
    1709: dup
    1710: sipush        246
    1713: ldc_w         #969                // int 1128481536
    1716: iastore
    1717: dup
    1718: sipush        247
    1721: ldc_w         #428                // int -1044266752
    1724: iastore
    1725: dup
    1726: sipush        248
    1729: ldc_w         #867                // int 353703168
    1732: iastore
    1733: dup
    1734: sipush        249
    1737: ldc_w         #501                // int -471604480
    1740: iastore
    1741: dup
    1742: sipush        250
    1745: ldc_w         #382                // int -1381126912
    1748: iastore
    1749: dup
    1750: sipush        251
    1753: ldc_w         #539                // int -185273344
    1756: iastore
    1757: dup
    1758: sipush        252
    1761: ldc_w         #1082               // int 2004317952
    1764: iastore
    1765: dup
    1766: sipush        253
    1769: ldc_w         #441                // int -943208704
    1772: iastore
    1773: dup
    1774: sipush        254
    1777: ldc_w         #283                // int -2139062272
    1780: iastore
    1781: dup
    1782: sipush        255
    1785: ldc_w         #347                // int -1633772032
    1788: iastore
    1789: putstatic     #1141               // Field SBOX1_1110:[I
    1792: sipush        256
    1795: newarray       int
    1797: dup
    1798: iconst_0
    1799: ldc_w         #1065               // int 1886388336
    1802: iastore
    1803: dup
    1804: iconst_1
    1805: ldc_w         #916                // int 741081132
    1808: iastore
    1809: dup
    1810: iconst_2
    1811: ldc_w         #394                // int -1280114509
    1814: iastore
    1815: dup
    1816: iconst_3
    1817: ldc_w         #425                // int -1061158720
    1820: iastore
    1821: dup
    1822: iconst_4
    1823: ldc_w         #503                // int -454819612
    1826: iastore
    1827: dup
    1828: iconst_5
    1829: ldc_w         #1012               // int 1465319511
    1832: iastore
    1833: dup
    1834: bipush        6
    1836: ldc_w         #516                // int -353763094
    1839: iastore
    1840: dup
    1841: bipush        7
    1843: ldc_w         #384                // int -1364328274
    1846: iastore
    1847: dup
    1848: bipush        8
    1850: ldc_w         #895                // int 589496355
    1853: iastore
    1854: dup
    1855: bipush        9
    1857: ldc_w         #1055               // int 1802174571
    1860: iastore
    1861: dup
    1862: bipush        10
    1864: ldc_w         #973                // int 1162149957
    1867: iastore
    1868: dup
    1869: bipush        11
    1871: ldc_w         #363                // int -1515913051
    1874: iastore
    1875: dup
    1876: bipush        12
    1878: ldc_w         #522                // int -303234835
    1881: iastore
    1882: dup
    1883: bipush        13
    1885: ldc_w         #995                // int 1330577487
    1888: iastore
    1889: dup
    1890: bipush        14
    1892: ldc_w         #883                // int 488439837
    1895: iastore
    1896: dup
    1897: bipush        15
    1899: ldc_w         #321                // int -1835925358
    1902: iastore
    1903: dup
    1904: bipush        16
    1906: ldc_w         #295                // int -2038038394
    1909: iastore
    1910: dup
    1911: bipush        17
    1913: ldc_w         #386                // int -1347485521
    1916: iastore
    1917: dup
    1918: bipush        18
    1920: ldc_w         #1094               // int 2088501372
    1923: iastore
    1924: dup
    1925: bipush        19
    1927: ldc_w         #887                // int 522125343
    1930: iastore
    1931: dup
    1932: bipush        20
    1934: ldc_w         #956                // int 1044250686
    1937: iastore
    1938: dup
    1939: bipush        21
    1941: ldc_w         #486                // int -589561636
    1944: iastore
    1945: dup
    1946: bipush        22
    1948: ldc_w         #1027               // int 1583218782
    1951: iastore
    1952: dup
    1953: bipush        23
    1955: ldc_w         #846                // int 185270283
    1958: iastore
    1959: dup
    1960: bipush        24
    1962: ldc_w         #365                // int -1499070298
    1965: iastore
    1966: dup
    1967: bipush        25
    1969: ldc_w         #945                // int 960036921
    1972: iastore
    1973: dup
    1974: bipush        26
    1976: ldc_w         #472                // int -707460907
    1979: iastore
    1980: dup
    1981: bipush        27
    1983: ldc_w         #1025               // int 1566376029
    1986: iastore
    1987: dup
    1988: bipush        28
    1990: ldc_w         #480                // int -640089895
    1993: iastore
    1994: dup
    1995: bipush        29
    1997: ldc_w         #1019               // int 1515847770
    2000: iastore
    2001: dup
    2002: bipush        30
    2004: ldc_w         #999                // int 1364262993
    2007: iastore
    2008: dup
    2009: bipush        31
    2011: ldc_w         #1057               // int 1819017324
    2014: iastore
    2015: dup
    2016: bipush        32
    2018: ldc_w         #306                // int -1953824629
    2021: iastore
    2022: dup
    2023: bipush        33
    2025: ldc_w         #338                // int -1701183334
    2028: iastore
    2029: dup
    2030: bipush        34
    2032: ldc_w         #555                // int -67436293
    2035: iastore
    2036: dup
    2037: bipush        35
    2039: ldc_w         #388                // int -1330642768
    2042: iastore
    2043: dup
    2044: bipush        36
    2046: ldc_w         #1075               // int 1953759348
    2049: iastore
    2050: dup
    2051: bipush        37
    2053: ldc_w         #914                // int 724238379
    2056: iastore
    2057: dup
    2058: bipush        38
    2060: ldc_w         #529                // int -252706576
    2063: iastore
    2064: dup
    2065: bipush        39
    2067: ldc_w         #291                // int -2071723900
    2070: iastore
    2071: dup
    2072: bipush        40
    2074: ldc_w         #492                // int -539033377
    2077: iastore
    2078: dup
    2079: bipush        41
    2081: ldc_w         #450                // int -875888437
    2084: iastore
    2085: dup
    2086: bipush        42
    2088: ldc_w         #933                // int 875823156
    2091: iastore
    2092: dup
    2093: bipush        43
    2095: ldc_w         #1079               // int 1987444854
    2098: iastore
    2099: dup
    2100: bipush        44
    2102: ldc_w         #1059               // int 1835860077
    2105: iastore
    2106: dup
    2107: bipush        45
    2109: ldc_w         #371                // int -1448542039
    2112: iastore
    2113: dup
    2114: bipush        46
    2116: ldc_w         #462                // int -774831919
    2119: iastore
    2120: dup
    2121: bipush        47
    2123: ldc_w         #829                // int 67371012
    2126: iastore
    2127: dup
    2128: bipush        48
    2130: ldc_w         #864                // int 336855060
    2133: iastore
    2134: dup
    2135: bipush        49
    2137: ldc_w         #947                // int 976879674
    2140: iastore
    2141: dup
    2142: bipush        50
    2144: ldc_w         #490                // int -555876130
    2147: iastore
    2148: dup
    2149: bipush        51
    2151: ldc_w         #858                // int 286326801
    2154: iastore
    2155: dup
    2156: bipush        52
    2158: ldc_w         #929                // int 842137650
    2161: iastore
    2162: dup
    2163: bipush        53
    2165: ldc_w         #342                // int -1667497828
    2168: iastore
    2169: dup
    2170: bipush        54
    2172: ldc_w         #1003               // int 1397948499
    2175: iastore
    2176: dup
    2177: bipush        55
    2179: ldc_w         #534                // int -219021070
    2182: iastore
    2183: dup
    2184: bipush        56
    2186: ldc_w         #562                // int -16908034
    2189: iastore
    2190: dup
    2191: bipush        57
    2193: ldc_w         #458                // int -808517425
    2196: iastore
    2197: dup
    2198: bipush        58
    2200: ldc_w         #432                // int -1010630461
    2203: iastore
    2204: dup
    2205: bipush        59
    2207: ldc_w         #1089               // int 2054815866
    2210: iastore
    2211: dup
    2212: bipush        60
    2214: ldc_w         #897                // int 606339108
    2217: iastore
    2218: dup
    2219: bipush        61
    2221: ldc_w         #512                // int -387448600
    2224: iastore
    2225: dup
    2226: bipush        62
    2228: ldc_w         #1031               // int 1616904288
    2231: iastore
    2232: dup
    2233: bipush        63
    2235: ldc_w         #1050               // int 1768489065
    2238: iastore
    2239: dup
    2240: bipush        64
    2242: ldc_w         #373                // int -1431699286
    2245: iastore
    2246: dup
    2247: bipush        65
    2249: ldc_w         #351                // int -1600126816
    2252: iastore
    2253: dup
    2254: bipush        66
    2256: ldc_w         #353                // int -1583284063
    2259: iastore
    2260: dup
    2261: bipush        67
    2263: ldc_w         #1035               // int 1650589794
    2266: iastore
    2267: dup
    2268: bipush        68
    2270: ldc_w         #1005               // int 1414791252
    2273: iastore
    2274: dup
    2275: bipush        69
    2277: ldc_w         #885                // int 505282590
    2280: iastore
    2281: dup
    2282: bipush        70
    2284: ldc_w         #494                // int -522190624
    2287: iastore
    2288: dup
    2289: bipush        71
    2291: ldc_w         #1039               // int 1684275300
    2294: iastore
    2295: dup
    2296: bipush        72
    2298: ldc_w         #856                // int 269484048
    2301: iastore
    2302: dup
    2303: bipush        73
    2305: iconst_0
    2306: iastore
    2307: dup
    2308: bipush        74
    2310: ldc_w         #358                // int -1549598557
    2313: iastore
    2314: dup
    2315: bipush        75
    2317: ldc_w         #1077               // int 1970602101
    2320: iastore
    2321: dup
    2322: bipush        76
    2324: ldc_w         #304                // int -1970667382
    2327: iastore
    2328: dup
    2329: bipush        77
    2331: ldc_w         #507                // int -421134106
    2334: iastore
    2335: dup
    2336: bipush        78
    2338: ldc_w         #841                // int 151584777
    2341: iastore
    2342: dup
    2343: bipush        79
    2345: ldc_w         #488                // int -572718883
    2348: iastore
    2349: dup
    2350: bipush        80
    2352: ldc_w         #297                // int -2021195641
    2355: iastore
    2356: dup
    2357: bipush        81
    2359: ldc_w         #289                // int -2088566653
    2362: iastore
    2363: dup
    2364: bipush        82
    2366: ldc_w         #454                // int -842202931
    2369: iastore
    2370: dup
    2371: bipush        83
    2373: ldc_w         #317                // int -1869610864
    2376: iastore
    2377: dup
    2378: bipush        84
    2380: ldc_w         #1073               // int 1936916595
    2383: iastore
    2384: dup
    2385: bipush        85
    2387: ldc_w         #543                // int -151650058
    2390: iastore
    2391: dup
    2392: bipush        86
    2394: ldc_w         #344                // int -1650655075
    2397: iastore
    2398: dup
    2399: bipush        87
    2401: ldc_w         #423                // int -1078001473
    2404: iastore
    2405: dup
    2406: bipush        88
    2408: ldc_w         #1001               // int 1381105746
    2411: iastore
    2412: dup
    2413: bipush        89
    2415: ldc_w         #478                // int -656932648
    2418: iastore
    2419: dup
    2420: bipush        90
    2422: ldc_w         #443                // int -926416696
    2425: iastore
    2426: dup
    2427: bipush        91
    2429: ldc_w         #438                // int -960102202
    2432: iastore
    2433: dup
    2434: bipush        92
    2436: ldc_w         #285                // int -2122252159
    2439: iastore
    2440: dup
    2441: bipush        93
    2443: ldc_w         #1063               // int 1869545583
    2446: iastore
    2447: dup
    2448: bipush        94
    2450: ldc_w         #862                // int 320012307
    2453: iastore
    2454: dup
    2455: bipush        95
    2457: ldc_w         #1037               // int 1667432547
    2460: iastore
    2461: dup
    2462: bipush        96
    2464: ldc_w         #514                // int -370605847
    2467: iastore
    2468: dup
    2469: bipush        97
    2471: ldc_w         #367                // int -1482227545
    2474: iastore
    2475: dup
    2476: bipush        98
    2478: ldc_w         #349                // int -1616969569
    2481: iastore
    2482: dup
    2483: bipush        99
    2485: ldc_w         #417                // int -1128529732
    2488: iastore
    2489: dup
    2490: bipush        100
    2492: ldc_w         #909                // int 690552873
    2495: iastore
    2496: dup
    2497: bipush        101
    2499: ldc_w         #550                // int -101121799
    2502: iastore
    2503: dup
    2504: bipush        102
    2506: ldc_w         #922                // int 791609391
    2509: iastore
    2510: dup
    2511: bipush        103
    2513: ldc_w         #396                // int -1263271756
    2516: iastore
    2517: dup
    2518: bipush        104
    2520: ldc_w         #1084               // int 2021130360
    2523: iastore
    2524: dup
    2525: bipush        105
    2527: ldc_w         #833                // int 101056518
    2530: iastore
    2531: dup
    2532: bipush        106
    2534: ldc_w         #509                // int -404291353
    2537: iastore
    2538: dup
    2539: bipush        107
    2541: ldc_w         #1067               // int 1903231089
    2544: iastore
    2545: dup
    2546: bipush        108
    2548: ldc_w         #469                // int -724303660
    2551: iastore
    2552: dup
    2553: bipush        109
    2555: ldc_w         #375                // int -1414856533
    2558: iastore
    2559: dup
    2560: bipush        110
    2562: ldc_w         #299                // int -2004352888
    2565: iastore
    2566: dup
    2567: bipush        111
    2569: ldc_w         #310                // int -1920139123
    2572: iastore
    2573: dup
    2574: bipush        112
    2576: ldc_w         #1070               // int 1920073842
    2579: iastore
    2580: dup
    2581: bipush        113
    2583: ldc_w         #408                // int -1179057991
    2586: iastore
    2587: dup
    2588: bipush        114
    2590: ldc_w         #547                // int -117964552
    2593: iastore
    2594: dup
    2595: bipush        115
    2597: ldc_w         #378                // int -1398013780
    2600: iastore
    2601: dup
    2602: bipush        116
    2604: ldc_w         #937                // int 909508662
    2607: iastore
    2608: dup
    2609: bipush        117
    2611: ldc_w         #911                // int 707395626
    2614: iastore
    2615: dup
    2616: bipush        118
    2618: ldc_w         #951                // int 1010565180
    2621: iastore
    2622: dup
    2623: bipush        119
    2625: ldc_w         #531                // int -235863823
    2628: iastore
    2629: dup
    2630: bipush        120
    2632: ldc_w         #960                // int 1077936192
    2635: iastore
    2636: dup
    2637: bipush        121
    2639: ldc_w         #466                // int -741146413
    2642: iastore
    2643: dup
    2644: bipush        122
    2646: ldc_w         #414                // int -1145372485
    2649: iastore
    2650: dup
    2651: bipush        123
    2653: ldc_w         #968                // int 1128464451
    2656: iastore
    2657: dup
    2658: bipush        124
    2660: ldc_w         #866                // int 353697813
    2663: iastore
    2664: dup
    2665: bipush        125
    2667: ldc_w         #381                // int -1381171027
    2670: iastore
    2671: dup
    2672: bipush        126
    2674: ldc_w         #1081               // int 2004287607
    2677: iastore
    2678: dup
    2679: bipush        127
    2681: ldc_w         #282                // int -2139094912
    2684: iastore
    2685: dup
    2686: sipush        128
    2689: ldc_w         #287                // int -2105409406
    2692: iastore
    2693: dup
    2694: sipush        129
    2697: ldc_w         #520                // int -320077588
    2700: iastore
    2701: dup
    2702: sipush        130
    2705: ldc_w         #904                // int 656867367
    2708: iastore
    2709: dup
    2710: sipush        131
    2713: ldc_w         #505                // int -437976859
    2716: iastore
    2717: dup
    2718: sipush        132
    2721: ldc_w         #293                // int -2054881147
    2724: iastore
    2725: dup
    2726: sipush        133
    2729: ldc_w         #935                // int 892665909
    2732: iastore
    2733: dup
    2734: sipush        134
    2737: ldc_w         #848                // int 202113036
    2740: iastore
    2741: dup
    2742: sipush        135
    2745: ldc_w         #963                // int 1094778945
    2748: iastore
    2749: dup
    2750: sipush        136
    2753: ldc_w         #527                // int -269549329
    2756: iastore
    2757: dup
    2758: sipush        137
    2761: ldc_w         #323                // int -1819082605
    2764: iastore
    2765: dup
    2766: sipush        138
    2769: ldc_w         #875                // int 421068825
    2772: iastore
    2773: dup
    2774: sipush        139
    2777: ldc_w         #891                // int 555810849
    2780: iastore
    2781: dup
    2782: sipush        140
    2785: ldc_w         #852                // int 235798542
    2788: iastore
    2789: dup
    2790: sipush        141
    2793: ldc_w         #993                // int 1313734734
    2796: iastore
    2797: dup
    2798: sipush        142
    2801: ldc_w         #1041               // int 1701118053
    2804: iastore
    2805: dup
    2806: sipush        143
    2809: ldc_w         #419                // int -1111686979
    2812: iastore
    2813: dup
    2814: sipush        144
    2817: ldc_w         #406                // int -1195900744
    2820: iastore
    2821: dup
    2822: sipush        145
    2825: ldc_w         #315                // int -1886453617
    2828: iastore
    2829: dup
    2830: sipush        146
    2833: ldc_w         #518                // int -336920341
    2836: iastore
    2837: dup
    2838: sipush        147
    2841: ldc_w         #456                // int -825360178
    2844: iastore
    2845: dup
    2846: sipush        148
    2849: ldc_w         #925                // int 808452144
    2852: iastore
    2853: dup
    2854: sipush        149
    2857: ldc_w         #1029               // int 1600061535
    2860: iastore
    2861: dup
    2862: sipush        150
    2865: ldc_w         #436                // int -976944955
    2868: iastore
    2869: dup
    2870: sipush        151
    2873: ldc_w         #877                // int 437911578
    2876: iastore
    2877: dup
    2878: sipush        152
    2881: ldc_w         #496                // int -505347871
    2884: iastore
    2885: dup
    2886: sipush        153
    2889: ldc_w         #448                // int -892731190
    2892: iastore
    2893: dup
    2894: sipush        154
    2897: ldc_w         #978                // int 1195835463
    2900: iastore
    2901: dup
    2902: sipush        155
    2905: ldc_w         #954                // int 1027407933
    2908: iastore
    2909: dup
    2910: sipush        156
    2913: ldc_w         #823                // int 16842753
    2916: iastore
    2917: dup
    2918: sipush        157
    2921: ldc_w         #474                // int -690618154
    2924: iastore
    2925: dup
    2926: sipush        158
    2929: ldc_w         #1010               // int 1448476758
    2932: iastore
    2933: dup
    2934: sipush        159
    2937: ldc_w         #991                // int 1296891981
    2940: iastore
    2941: dup
    2942: sipush        160
    2945: ldc_w         #850                // int 218955789
    2948: iastore
    2949: dup
    2950: sipush        161
    2953: ldc_w         #1043               // int 1717960806
    2956: iastore
    2957: dup
    2958: sipush        162
    2961: ldc_w         #452                // int -859045684
    2964: iastore
    2965: dup
    2966: sipush        163
    2969: ldc_w         #918                // int 757923885
    2972: iastore
    2973: dup
    2974: sipush        164
    2977: ldc_w         #860                // int 303169554
    2980: iastore
    2981: dup
    2982: sipush        165
    2985: ldc_w         #889                // int 538968096
    2988: iastore
    2989: dup
    2990: sipush        166
    2993: ldc_w         #390                // int -1313800015
    2996: iastore
    2997: dup
    2998: sipush        167
    3001: ldc_w         #336                // int -1718026087
    3004: iastore
    3005: dup
    3006: sipush        168
    3009: ldc_w         #989                // int 1280049228
    3012: iastore
    3013: dup
    3014: sipush        169
    3017: ldc_w         #430                // int -1027473214
    3020: iastore
    3021: dup
    3022: sipush        170
    3025: ldc_w         #1098               // int 2122186878
    3028: iastore
    3029: dup
    3030: sipush        171
    3033: ldc_w         #831                // int 84213765
    3036: iastore
    3037: dup
    3038: sipush        172
    3041: ldc_w         #404                // int -1212743497
    3044: iastore
    3045: dup
    3046: sipush        173
    3049: ldc_w         #927                // int 825294897
    3052: iastore
    3053: dup
    3054: sipush        174
    3057: ldc_w         #871                // int 387383319
    3060: iastore
    3061: dup
    3062: sipush        175
    3065: ldc_w         #476                // int -673775401
    3068: iastore
    3069: dup
    3070: sipush        176
    3073: ldc_w         #1014               // int 1482162264
    3076: iastore
    3077: dup
    3078: sipush        177
    3081: ldc_w         #1033               // int 1633747041
    3084: iastore
    3085: dup
    3086: sipush        178
    3089: ldc_w         #879                // int 454754331
    3092: iastore
    3093: dup
    3094: sipush        179
    3097: ldc_w         #881                // int 471597084
    3100: iastore
    3101: dup
    3102: sipush        180
    3105: ldc_w         #854                // int 252641295
    3108: iastore
    3109: dup
    3110: sipush        181
    3113: ldc_w         #869                // int 370540566
    3116: iastore
    3117: dup
    3118: sipush        182
    3121: ldc_w         #873                // int 404226072
    3124: iastore
    3125: dup
    3126: sipush        183
    3129: ldc_w         #893                // int 572653602
    3132: iastore
    3133: dup
    3134: sipush        184
    3137: ldc_w         #971                // int 1145307204
    3140: iastore
    3141: dup
    3142: sipush        185
    3145: ldc_w         #392                // int -1296957262
    3148: iastore
    3149: dup
    3150: sipush        186
    3153: ldc_w         #399                // int -1246429003
    3156: iastore
    3157: dup
    3158: sipush        187
    3161: ldc_w         #319                // int -1852768111
    3164: iastore
    3165: dup
    3166: sipush        188
    3169: ldc_w         #839                // int 134742024
    3172: iastore
    3173: dup
    3174: sipush        189
    3177: ldc_w         #369                // int -1465384792
    3180: iastore
    3181: dup
    3182: sipush        190
    3185: ldc_w         #557                // int -50593540
    3188: iastore
    3189: dup
    3190: sipush        191
    3193: ldc_w         #997                // int 1347420240
    3196: iastore
    3197: dup
    3198: sipush        192
    3201: ldc_w         #460                // int -791674672
    3204: iastore
    3205: dup
    3206: sipush        193
    3209: ldc_w         #1096               // int 2105344125
    3212: iastore
    3213: dup
    3214: sipush        194
    3217: ldc_w         #302                // int -1987510135
    3220: iastore
    3221: dup
    3222: sipush        195
    3225: ldc_w         #331                // int -1751711593
    3228: iastore
    3229: dup
    3230: sipush        196
    3233: ldc_w         #1021               // int 1532690523
    3236: iastore
    3237: dup
    3238: sipush        197
    3241: ldc_w         #327                // int -1785397099
    3244: iastore
    3245: dup
    3246: sipush        198
    3249: ldc_w         #564                // int -65281
    3252: iastore
    3253: dup
    3254: sipush        199
    3257: ldc_w         #464                // int -757989166
    3260: iastore
    3261: dup
    3262: sipush        200
    3265: ldc_w         #434                // int -993787708
    3268: iastore
    3269: dup
    3270: sipush        201
    3273: ldc_w         #980                // int 1212678216
    3276: iastore
    3277: dup
    3278: sipush        202
    3281: ldc_w         #545                // int -134807305
    3284: iastore
    3285: dup
    3286: sipush        203
    3289: ldc_w         #484                // int -606404389
    3292: iastore
    3293: dup
    3294: sipush        204
    3297: ldc_w         #827                // int 50528259
    3300: iastore
    3301: dup
    3302: sipush        205
    3305: ldc_w         #482                // int -623247142
    3308: iastore
    3309: dup
    3310: sipush        206
    3313: ldc_w         #958                // int 1061093439
    3316: iastore
    3317: dup
    3318: sipush        207
    3321: ldc_w         #325                // int -1802239852
    3324: iastore
    3325: dup
    3326: sipush        208
    3329: ldc_w         #1023               // int 1549533276
    3332: iastore
    3333: dup
    3334: sipush        209
    3337: ldc_w         #825                // int 33685506
    3340: iastore
    3341: dup
    3342: sipush        210
    3345: ldc_w         #985                // int 1246363722
    3348: iastore
    3349: dup
    3350: sipush        211
    3353: ldc_w         #931                // int 858980403
    3356: iastore
    3357: dup
    3358: sipush        212
    3361: ldc_w         #1045               // int 1734803559
    3364: iastore
    3365: dup
    3366: sipush        213
    3369: ldc_w         #536                // int -202178317
    3372: iastore
    3373: dup
    3374: sipush        214
    3377: ldc_w         #1100               // int 2139029631
    3380: iastore
    3381: dup
    3382: sipush        215
    3385: ldc_w         #498                // int -488505118
    3388: iastore
    3389: dup
    3390: sipush        216
    3393: ldc_w         #340                // int -1684340581
    3396: iastore
    3397: dup
    3398: sipush        217
    3401: ldc_w         #902                // int 640024614
    3404: iastore
    3405: dup
    3406: sipush        218
    3409: ldc_w         #940                // int 926351415
    3412: iastore
    3413: dup
    3414: sipush        219
    3417: ldc_w         #949                // int 993722427
    3420: iastore
    3421: dup
    3422: sipush        220
    3425: ldc_w         #329                // int -1768554346
    3428: iastore
    3429: dup
    3430: sipush        221
    3433: ldc_w         #987                // int 1263206475
    3436: iastore
    3437: dup
    3438: sipush        222
    3441: ldc_w         #421                // int -1094844226
    3444: iastore
    3445: dup
    3446: sipush        223
    3449: ldc_w         #920                // int 774766638
    3452: iastore
    3453: dup
    3454: sipush        224
    3457: ldc_w         #1087               // int 2037973113
    3460: iastore
    3461: dup
    3462: sipush        225
    3465: ldc_w         #308                // int -1936981876
    3468: iastore
    3469: dup
    3470: sipush        226
    3473: ldc_w         #1061               // int 1852702830
    3476: iastore
    3477: dup
    3478: sipush        227
    3481: ldc_w         #313                // int -1903296370
    3484: iastore
    3485: dup
    3486: sipush        228
    3489: ldc_w         #541                // int -168492811
    3492: iastore
    3493: dup
    3494: sipush        229
    3497: ldc_w         #401                // int -1229586250
    3500: iastore
    3501: dup
    3502: sipush        230
    3505: ldc_w         #559                // int -33750787
    3508: iastore
    3509: dup
    3510: sipush        231
    3513: ldc_w         #1016               // int 1499005017
    3516: iastore
    3517: dup
    3518: sipush        232
    3521: ldc_w         #333                // int -1734868840
    3524: iastore
    3525: dup
    3526: sipush        233
    3529: ldc_w         #1052               // int 1785331818
    3532: iastore
    3533: dup
    3534: sipush        234
    3537: ldc_w         #975                // int 1178992710
    3540: iastore
    3541: dup
    3542: sipush        235
    3545: ldc_w         #411                // int -1162215238
    3548: iastore
    3549: dup
    3550: sipush        236
    3553: ldc_w         #899                // int 623181861
    3556: iastore
    3557: dup
    3558: sipush        237
    3561: ldc_w         #965                // int 1111621698
    3564: iastore
    3565: dup
    3566: sipush        238
    3569: ldc_w         #355                // int -1566441310
    3572: iastore
    3573: dup
    3574: sipush        239
    3577: ldc_w         #552                // int -84279046
    3580: iastore
    3581: dup
    3582: sipush        240
    3585: ldc_w         #836                // int 117899271
    3588: iastore
    3589: dup
    3590: sipush        241
    3593: ldc_w         #1007               // int 1431634005
    3596: iastore
    3597: dup
    3598: sipush        242
    3601: ldc_w         #524                // int -286392082
    3604: iastore
    3605: dup
    3606: sipush        243
    3609: ldc_w         #843                // int 168427530
    3612: iastore
    3613: dup
    3614: sipush        244
    3617: ldc_w         #982                // int 1229520969
    3620: iastore
    3621: dup
    3622: sipush        245
    3625: ldc_w         #1047               // int 1751646312
    3628: iastore
    3629: dup
    3630: sipush        246
    3633: ldc_w         #942                // int 943194168
    3636: iastore
    3637: dup
    3638: sipush        247
    3641: ldc_w         #360                // int -1532755804
    3644: iastore
    3645: dup
    3646: sipush        248
    3649: ldc_w         #906                // int 673710120
    3652: iastore
    3653: dup
    3654: sipush        249
    3657: ldc_w         #1091               // int 2071658619
    3660: iastore
    3661: dup
    3662: sipush        250
    3665: ldc_w         #445                // int -909573943
    3668: iastore
    3669: dup
    3670: sipush        251
    3673: ldc_w         #427                // int -1044315967
    3676: iastore
    3677: dup
    3678: sipush        252
    3681: ldc_w         #500                // int -471662365
    3684: iastore
    3685: dup
    3686: sipush        253
    3689: ldc_w         #538                // int -185335564
    3692: iastore
    3693: dup
    3694: sipush        254
    3697: ldc_w         #440                // int -943259449
    3700: iastore
    3701: dup
    3702: sipush        255
    3705: ldc_w         #346                // int -1633812322
    3708: iastore
    3709: putstatic     #1144               // Field SBOX4_4404:[I
    3712: sipush        256
    3715: newarray       int
    3717: dup
    3718: iconst_0
    3719: ldc_w         #790                // int 14737632
    3722: iastore
    3723: dup
    3724: iconst_1
    3725: ldc_w         #571                // int 328965
    3728: iastore
    3729: dup
    3730: iconst_2
    3731: ldc_w         #654                // int 5789784
    3734: iastore
    3735: dup
    3736: iconst_3
    3737: ldc_w         #783                // int 14277081
    3740: iastore
    3741: dup
    3742: iconst_4
    3743: ldc_w         #669                // int 6776679
    3746: iastore
    3747: dup
    3748: iconst_5
    3749: ldc_w         #644                // int 5131854
    3752: iastore
    3753: dup
    3754: bipush        6
    3756: ldc_w         #695                // int 8487297
    3759: iastore
    3760: dup
    3761: bipush        7
    3763: ldc_w         #769                // int 13355979
    3766: iastore
    3767: dup
    3768: bipush        8
    3770: ldc_w         #767                // int 13224393
    3773: iastore
    3774: dup
    3775: bipush        9
    3777: ldc_w         #577                // int 723723
    3780: iastore
    3781: dup
    3782: bipush        10
    3784: ldc_w         #740                // int 11447982
    3787: iastore
    3788: dup
    3789: bipush        11
    3791: ldc_w         #672                // int 6974058
    3794: iastore
    3795: dup
    3796: bipush        12
    3798: ldc_w         #779                // int 14013909
    3801: iastore
    3802: dup
    3803: bipush        13
    3805: ldc_w         #590                // int 1579032
    3808: iastore
    3809: dup
    3810: bipush        14
    3812: ldc_w         #659                // int 6118749
    3815: iastore
    3816: dup
    3817: bipush        15
    3819: ldc_w         #696                // int 8553090
    3822: iastore
    3823: dup
    3824: bipush        16
    3826: ldc_w         #636                // int 4605510
    3829: iastore
    3830: dup
    3831: bipush        17
    3833: ldc_w         #789                // int 14671839
    3836: iastore
    3837: dup
    3838: bipush        18
    3840: ldc_w         #780                // int 14079702
    3843: iastore
    3844: dup
    3845: bipush        19
    3847: ldc_w         #605                // int 2565927
    3850: iastore
    3851: dup
    3852: bipush        20
    3854: ldc_w         #704                // int 9079434
    3857: iastore
    3858: dup
    3859: bipush        21
    3861: ldc_w         #616                // int 3289650
    3864: iastore
    3865: dup
    3866: bipush        22
    3868: ldc_w         #641                // int 4934475
    3871: iastore
    3872: dup
    3873: bipush        23
    3875: ldc_w         #632                // int 4342338
    3878: iastore
    3879: dup
    3880: bipush        24
    3882: ldc_w         #785                // int 14408667
    3885: iastore
    3886: dup
    3887: bipush        25
    3889: ldc_w         #594                // int 1842204
    3892: iastore
    3893: dup
    3894: bipush        26
    3896: ldc_w         #724                // int 10395294
    3899: iastore
    3900: dup
    3901: bipush        27
    3903: ldc_w         #722                // int 10263708
    3906: iastore
    3907: dup
    3908: bipush        28
    3910: ldc_w         #624                // int 3815994
    3913: iastore
    3914: dup
    3915: bipush        29
    3917: ldc_w         #768                // int 13290186
    3920: iastore
    3921: dup
    3922: bipush        30
    3924: ldc_w         #603                // int 2434341
    3927: iastore
    3928: dup
    3929: bipush        31
    3931: ldc_w         #689                // int 8092539
    3934: iastore
    3935: dup
    3936: bipush        32
    3938: ldc_w         #579                // int 855309
    3941: iastore
    3942: dup
    3943: bipush        33
    3945: ldc_w         #679                // int 7434609
    3948: iastore
    3949: dup
    3950: bipush        34
    3952: ldc_w         #661                // int 6250335
    3955: iastore
    3956: dup
    3957: bipush        35
    3959: ldc_w         #597                // int 2039583
    3962: iastore
    3963: dup
    3964: bipush        36
    3966: ldc_w         #814                // int 16316664
    3969: iastore
    3970: dup
    3971: bipush        37
    3973: ldc_w         #781                // int 14145495
    3976: iastore
    3977: dup
    3978: bipush        38
    3980: ldc_w         #628                // int 4079166
    3983: iastore
    3984: dup
    3985: bipush        39
    3987: ldc_w         #723                // int 10329501
    3990: iastore
    3991: dup
    3992: bipush        40
    3994: ldc_w         #690                // int 8158332
    3997: iastore
    3998: dup
    3999: bipush        41
    4001: ldc_w         #662                // int 6316128
    4004: iastore
    4005: dup
    4006: bipush        42
    4008: ldc_w         #751                // int 12171705
    4011: iastore
    4012: dup
    4013: bipush        43
    4015: ldc_w         #756                // int 12500670
    4018: iastore
    4019: dup
    4020: bipush        44
    4022: ldc_w         #754                // int 12369084
    4025: iastore
    4026: dup
    4027: bipush        45
    4029: ldc_w         #705                // int 9145227
    4032: iastore
    4033: dup
    4034: bipush        46
    4036: ldc_w         #588                // int 1447446
    4039: iastore
    4040: dup
    4041: bipush        47
    4043: ldc_w         #618                // int 3421236
    4046: iastore
    4047: dup
    4048: bipush        48
    4050: ldc_w         #643                // int 5066061
    4053: iastore
    4054: dup
    4055: bipush        49
    4057: ldc_w         #761                // int 12829635
    4060: iastore
    4061: dup
    4062: bipush        50
    4064: ldc_w         #680                // int 7500402
    4067: iastore
    4068: dup
    4069: bipush        51
    4071: ldc_w         #715                // int 9803157
    4074: iastore
    4075: dup
    4076: bipush        52
    4078: ldc_w         #737                // int 11250603
    4081: iastore
    4082: dup
    4083: bipush        53
    4085: ldc_w         #708                // int 9342606
    4088: iastore
    4089: dup
    4090: bipush        54
    4092: ldc_w         #752                // int 12237498
    4095: iastore
    4096: dup
    4097: bipush        55
    4099: ldc_w         #688                // int 8026746
    4102: iastore
    4103: dup
    4104: bipush        56
    4106: ldc_w         #745                // int 11776947
    4109: iastore
    4110: dup
    4111: bipush        57
    4113: ldc_w         #568                // int 131586
    4116: iastore
    4117: dup
    4118: bipush        58
    4120: ldc_w         #746                // int 11842740
    4123: iastore
    4124: dup
    4125: bipush        59
    4127: ldc_w         #739                // int 11382189
    4130: iastore
    4131: dup
    4132: bipush        60
    4134: ldc_w         #728                // int 10658466
    4137: iastore
    4138: dup
    4139: bipush        61
    4141: ldc_w         #738                // int 11316396
    4144: iastore
    4145: dup
    4146: bipush        62
    4148: ldc_w         #782                // int 14211288
    4151: iastore
    4152: dup
    4153: bipush        63
    4155: ldc_w         #720                // int 10132122
    4158: iastore
    4159: dup
    4160: bipush        64
    4162: ldc_w         #589                // int 1513239
    4165: iastore
    4166: dup
    4167: bipush        65
    4169: ldc_w         #592                // int 1710618
    4172: iastore
    4173: dup
    4174: bipush        66
    4176: ldc_w         #619                // int 3487029
    4179: iastore
    4180: dup
    4181: bipush        67
    4183: ldc_w         #770                // int 13421772
    4186: iastore
    4187: dup
    4188: bipush        68
    4190: ldc_w         #813                // int 16250871
    4193: iastore
    4194: dup
    4195: bipush        69
    4197: ldc_w         #719                // int 10066329
    4200: iastore
    4201: dup
    4202: bipush        70
    4204: ldc_w         #663                // int 6381921
    4207: iastore
    4208: dup
    4209: bipush        71
    4211: ldc_w         #656                // int 5921370
    4214: iastore
    4215: dup
    4216: bipush        72
    4218: ldc_w         #798                // int 15263976
    4221: iastore
    4222: dup
    4223: bipush        73
    4225: ldc_w         #602                // int 2368548
    4228: iastore
    4229: dup
    4230: bipush        74
    4232: ldc_w         #652                // int 5658198
    4235: iastore
    4236: dup
    4237: bipush        75
    4239: ldc_w         #630                // int 4210752
    4242: iastore
    4243: dup
    4244: bipush        76
    4246: ldc_w         #791                // int 14803425
    4249: iastore
    4250: dup
    4251: bipush        77
    4253: ldc_w         #665                // int 6513507
    4256: iastore
    4257: dup
    4258: bipush        78
    4260: ldc_w         #575                // int 592137
    4263: iastore
    4264: dup
    4265: bipush        79
    4267: ldc_w         #617                // int 3355443
    4270: iastore
    4271: dup
    4272: bipush        80
    4274: ldc_w         #757                // int 12566463
    4277: iastore
    4278: dup
    4279: bipush        81
    4281: ldc_w         #718                // int 10000536
    4284: iastore
    4285: dup
    4286: bipush        82
    4288: ldc_w         #717                // int 9934743
    4291: iastore
    4292: dup
    4293: bipush        83
    4295: ldc_w         #699                // int 8750469
    4298: iastore
    4299: dup
    4300: bipush        84
    4302: ldc_w         #670                // int 6842472
    4305: iastore
    4306: dup
    4307: bipush        85
    4309: ldc_w         #818                // int 16579836
    4312: iastore
    4313: dup
    4314: bipush        86
    4316: ldc_w         #802                // int 15527148
    4319: iastore
    4320: dup
    4321: bipush        87
    4323: ldc_w         #576                // int 657930
    4326: iastore
    4327: dup
    4328: bipush        88
    4330: ldc_w         #784                // int 14342874
    4333: iastore
    4334: dup
    4335: bipush        89
    4337: ldc_w         #677                // int 7303023
    4340: iastore
    4341: dup
    4342: bipush        90
    4344: ldc_w         #649                // int 5460819
    4347: iastore
    4348: dup
    4349: bipush        91
    4351: ldc_w         #664                // int 6447714
    4354: iastore
    4355: dup
    4356: bipush        92
    4358: ldc_w         #729                // int 10724259
    4361: iastore
    4362: dup
    4363: bipush        93
    4365: ldc_w         #612                // int 3026478
    4368: iastore
    4369: dup
    4370: bipush        94
    4372: ldc_w         #574                // int 526344
    4375: iastore
    4376: dup
    4377: bipush        95
    4379: ldc_w         #741                // int 11513775
    4382: iastore
    4383: dup
    4384: bipush        96
    4386: ldc_w         #606                // int 2631720
    4389: iastore
    4390: dup
    4391: bipush        97
    4393: ldc_w         #742                // int 11579568
    4396: iastore
    4397: dup
    4398: bipush        98
    4400: ldc_w         #682                // int 7631988
    4403: iastore
    4404: dup
    4405: bipush        99
    4407: ldc_w         #760                // int 12763842
    4410: iastore
    4411: dup
    4412: bipush        100
    4414: ldc_w         #755                // int 12434877
    4417: iastore
    4418: dup
    4419: bipush        101
    4421: ldc_w         #620                // int 3552822
    4424: iastore
    4425: dup
    4426: bipush        102
    4428: ldc_w         #600                // int 2236962
    4431: iastore
    4432: dup
    4433: bipush        103
    4435: ldc_w         #622                // int 3684408
    4438: iastore
    4439: dup
    4440: bipush        104
    4442: ldc_w         #666                // int 6579300
    4445: iastore
    4446: dup
    4447: bipush        105
    4449: ldc_w         #596                // int 1973790
    4452: iastore
    4453: dup
    4454: bipush        106
    4456: ldc_w         #623                // int 3750201
    4459: iastore
    4460: dup
    4461: bipush        107
    4463: ldc_w         #610                // int 2894892
    4466: iastore
    4467: dup
    4468: bipush        108
    4470: ldc_w         #732                // int 10921638
    4473: iastore
    4474: dup
    4475: bipush        109
    4477: ldc_w         #614                // int 3158064
    4480: iastore
    4481: dup
    4482: bipush        110
    4484: ldc_w         #795                // int 15066597
    4487: iastore
    4488: dup
    4489: bipush        111
    4491: ldc_w         #634                // int 4473924
    4494: iastore
    4495: dup
    4496: bipush        112
    4498: ldc_w         #819                // int 16645629
    4501: iastore
    4502: dup
    4503: bipush        113
    4505: ldc_w         #702                // int 8947848
    4508: iastore
    4509: dup
    4510: bipush        114
    4512: ldc_w         #725                // int 10461087
    4515: iastore
    4516: dup
    4517: bipush        115
    4519: ldc_w         #667                // int 6645093
    4522: iastore
    4523: dup
    4524: bipush        116
    4526: ldc_w         #701                // int 8882055
    4529: iastore
    4530: dup
    4531: bipush        117
    4533: ldc_w         #673                // int 7039851
    4536: iastore
    4537: dup
    4538: bipush        118
    4540: ldc_w         #810                // int 16053492
    4543: iastore
    4544: dup
    4545: bipush        119
    4547: ldc_w         #601                // int 2302755
    4550: iastore
    4551: dup
    4552: bipush        120
    4554: ldc_w         #638                // int 4737096
    4557: iastore
    4558: dup
    4559: bipush        121
    4561: ldc_w         #582                // int 1052688
    4564: iastore
    4565: dup
    4566: bipush        122
    4568: ldc_w         #775                // int 13750737
    4571: iastore
    4572: dup
    4573: bipush        123
    4575: ldc_w         #647                // int 5329233
    4578: iastore
    4579: dup
    4580: bipush        124
    4582: ldc_w         #758                // int 12632256
    4585: iastore
    4586: dup
    4587: bipush        125
    4589: ldc_w         #815                // int 16382457
    4592: iastore
    4593: dup
    4594: bipush        126
    4596: ldc_w         #776                // int 13816530
    4599: iastore
    4600: dup
    4601: bipush        127
    4603: ldc_w         #726                // int 10526880
    4606: iastore
    4607: dup
    4608: sipush        128
    4611: ldc_w         #651                // int 5592405
    4614: iastore
    4615: dup
    4616: sipush        129
    4619: ldc_w         #727                // int 10592673
    4622: iastore
    4623: dup
    4624: sipush        130
    4627: ldc_w         #631                // int 4276545
    4630: iastore
    4631: dup
    4632: sipush        131
    4635: ldc_w         #816                // int 16448250
    4638: iastore
    4639: dup
    4640: sipush        132
    4643: ldc_w         #633                // int 4408131
    4646: iastore
    4647: dup
    4648: sipush        133
    4651: ldc_w         #585                // int 1250067
    4654: iastore
    4655: dup
    4656: sipush        134
    4659: ldc_w         #762                // int 12895428
    4662: iastore
    4663: dup
    4664: sipush        135
    4667: ldc_w         #613                // int 3092271
    4670: iastore
    4671: dup
    4672: sipush        136
    4675: ldc_w         #734                // int 11053224
    4678: iastore
    4679: dup
    4680: sipush        137
    4683: ldc_w         #748                // int 11974326
    4686: iastore
    4687: dup
    4688: sipush        138
    4691: ldc_w         #626                // int 3947580
    4694: iastore
    4695: dup
    4696: sipush        139
    4699: ldc_w         #609                // int 2829099
    4702: iastore
    4703: dup
    4704: sipush        140
    4707: ldc_w         #759                // int 12698049
    4710: iastore
    4711: dup
    4712: sipush        141
    4715: ldc_w         #821                // int 16777215
    4718: iastore
    4719: dup
    4720: sipush        142
    4723: ldc_w         #766                // int 13158600
    4726: iastore
    4727: dup
    4728: sipush        143
    4731: ldc_w         #731                // int 10855845
    4734: iastore
    4735: dup
    4736: sipush        144
    4739: ldc_w         #598                // int 2105376
    4742: iastore
    4743: dup
    4744: sipush        145
    4747: ldc_w         #703                // int 9013641
    4750: iastore
    4751: dup
    4752: sipush        146
    4755: iconst_0
    4756: iastore
    4757: dup
    4758: sipush        147
    4761: ldc_w         #710                // int 9474192
    4764: iastore
    4765: dup
    4766: sipush        148
    4769: ldc_w         #637                // int 4671303
    4772: iastore
    4773: dup
    4774: sipush        149
    4777: ldc_w         #805                // int 15724527
    4780: iastore
    4781: dup
    4782: sipush        150
    4785: ldc_w         #800                // int 15395562
    4788: iastore
    4789: dup
    4790: sipush        151
    4793: ldc_w         #749                // int 12040119
    4796: iastore
    4797: dup
    4798: sipush        152
    4801: ldc_w         #587                // int 1381653
    4804: iastore
    4805: dup
    4806: sipush        153
    4809: ldc_w         #572                // int 394758
    4812: iastore
    4813: dup
    4814: sipush        154
    4817: ldc_w         #771                // int 13487565
    4820: iastore
    4821: dup
    4822: sipush        155
    4825: ldc_w         #747                // int 11908533
    4828: iastore
    4829: dup
    4830: sipush        156
    4833: ldc_w         #584                // int 1184274
    4836: iastore
    4837: dup
    4838: sipush        157
    4841: ldc_w         #692                // int 8289918
    4844: iastore
    4845: dup
    4846: sipush        158
    4849: ldc_w         #753                // int 12303291
    4852: iastore
    4853: dup
    4854: sipush        159
    4857: ldc_w         #607                // int 2697513
    4860: iastore
    4861: dup
    4862: sipush        160
    4865: ldc_w         #581                // int 986895
    4868: iastore
    4869: dup
    4870: sipush        161
    4873: ldc_w         #750                // int 12105912
    4876: iastore
    4877: dup
    4878: sipush        162
    4881: ldc_w         #573                // int 460551
    4884: iastore
    4885: dup
    4886: sipush        163
    4889: ldc_w         #570                // int 263172
    4892: iastore
    4893: dup
    4894: sipush        164
    4897: ldc_w         #721                // int 10197915
    4900: iastore
    4901: dup
    4902: sipush        165
    4905: ldc_w         #714                // int 9737364
    4908: iastore
    4909: dup
    4910: sipush        166
    4913: ldc_w         #599                // int 2171169
    4916: iastore
    4917: dup
    4918: sipush        167
    4921: ldc_w         #668                // int 6710886
    4924: iastore
    4925: dup
    4926: sipush        168
    4929: ldc_w         #796                // int 15132390
    4932: iastore
    4933: dup
    4934: sipush        169
    4937: ldc_w         #772                // int 13553358
    4940: iastore
    4941: dup
    4942: sipush        170
    4945: ldc_w         #803                // int 15592941
    4948: iastore
    4949: dup
    4950: sipush        171
    4953: ldc_w         #797                // int 15198183
    4956: iastore
    4957: dup
    4958: sipush        172
    4961: ldc_w         #625                // int 3881787
    4964: iastore
    4965: dup
    4966: sipush        173
    4969: ldc_w         #820                // int 16711422
    4972: iastore
    4973: dup
    4974: sipush        174
    4977: ldc_w         #693                // int 8355711
    4980: iastore
    4981: dup
    4982: sipush        175
    4985: ldc_w         #763                // int 12961221
    4988: iastore
    4989: dup
    4990: sipush        176
    4993: ldc_w         #730                // int 10790052
    4996: iastore
    4997: dup
    4998: sipush        177
    5001: ldc_w         #621                // int 3618615
    5004: iastore
    5005: dup
    5006: sipush        178
    5009: ldc_w         #743                // int 11645361
    5012: iastore
    5013: dup
    5014: sipush        179
    5017: ldc_w         #642                // int 5000268
    5020: iastore
    5021: dup
    5022: sipush        180
    5025: ldc_w         #711                // int 9539985
    5028: iastore
    5029: dup
    5030: sipush        181
    5033: ldc_w         #676                // int 7237230
    5036: iastore
    5037: dup
    5038: sipush        182
    5041: ldc_w         #707                // int 9276813
    5044: iastore
    5045: dup
    5046: sipush        183
    5049: ldc_w         #684                // int 7763574
    5052: iastore
    5053: dup
    5054: sipush        184
    5057: ldc_w         #569                // int 197379
    5060: iastore
    5061: dup
    5062: sipush        185
    5065: ldc_w         #611                // int 2960685
    5068: iastore
    5069: dup
    5070: sipush        186
    5073: ldc_w         #788                // int 14606046
    5076: iastore
    5077: dup
    5078: sipush        187
    5081: ldc_w         #716                // int 9868950
    5084: iastore
    5085: dup
    5086: sipush        188
    5089: ldc_w         #604                // int 2500134
    5092: iastore
    5093: dup
    5094: sipush        189
    5097: ldc_w         #691                // int 8224125
    5100: iastore
    5101: dup
    5102: sipush        190
    5105: ldc_w         #764                // int 13027014
    5108: iastore
    5109: dup
    5110: sipush        191
    5113: ldc_w         #658                // int 6052956
    5116: iastore
    5117: dup
    5118: sipush        192
    5121: ldc_w         #777                // int 13882323
    5124: iastore
    5125: dup
    5126: sipush        193
    5129: ldc_w         #808                // int 15921906
    5132: iastore
    5133: dup
    5134: sipush        194
    5137: ldc_w         #645                // int 5197647
    5140: iastore
    5141: dup
    5142: sipush        195
    5145: ldc_w         #591                // int 1644825
    5148: iastore
    5149: dup
    5150: sipush        196
    5153: ldc_w         #629                // int 4144959
    5156: iastore
    5157: dup
    5158: sipush        197
    5161: ldc_w         #786                // int 14474460
    5164: iastore
    5165: dup
    5166: sipush        198
    5169: ldc_w         #687                // int 7960953
    5172: iastore
    5173: dup
    5174: sipush        199
    5177: ldc_w         #595                // int 1907997
    5180: iastore
    5181: dup
    5182: sipush        200
    5185: ldc_w         #648                // int 5395026
    5188: iastore
    5189: dup
    5190: sipush        201
    5193: ldc_w         #801                // int 15461355
    5196: iastore
    5197: dup
    5198: sipush        202
    5201: ldc_w         #809                // int 15987699
    5204: iastore
    5205: dup
    5206: sipush        203
    5209: ldc_w         #675                // int 7171437
    5212: iastore
    5213: dup
    5214: sipush        204
    5217: ldc_w         #660                // int 6184542
    5220: iastore
    5221: dup
    5222: sipush        205
    5225: ldc_w         #817                // int 16514043
    5228: iastore
    5229: dup
    5230: sipush        206
    5233: ldc_w         #671                // int 6908265
    5236: iastore
    5237: dup
    5238: sipush        207
    5241: ldc_w         #744                // int 11711154
    5244: iastore
    5245: dup
    5246: sipush        208
    5249: ldc_w         #806                // int 15790320
    5252: iastore
    5253: dup
    5254: sipush        209
    5257: ldc_w         #615                // int 3223857
    5260: iastore
    5261: dup
    5262: sipush        210
    5265: ldc_w         #578                // int 789516
    5268: iastore
    5269: dup
    5270: sipush        211
    5273: ldc_w         #778                // int 13948116
    5276: iastore
    5277: dup
    5278: sipush        212
    5281: ldc_w         #773                // int 13619151
    5284: iastore
    5285: dup
    5286: sipush        213
    5289: ldc_w         #706                // int 9211020
    5292: iastore
    5293: dup
    5294: sipush        214
    5297: ldc_w         #792                // int 14869218
    5300: iastore
    5301: dup
    5302: sipush        215
    5305: ldc_w         #683                // int 7697781
    5308: iastore
    5309: dup
    5310: sipush        216
    5313: ldc_w         #735                // int 11119017
    5316: iastore
    5317: dup
    5318: sipush        217
    5321: ldc_w         #640                // int 4868682
    5324: iastore
    5325: dup
    5326: sipush        218
    5329: ldc_w         #653                // int 5723991
    5332: iastore
    5333: dup
    5334: sipush        219
    5337: ldc_w         #698                // int 8684676
    5340: iastore
    5341: dup
    5342: sipush        220
    5345: ldc_w         #583                // int 1118481
    5348: iastore
    5349: dup
    5350: sipush        221
    5353: ldc_w         #635                // int 4539717
    5356: iastore
    5357: dup
    5358: sipush        222
    5361: ldc_w         #593                // int 1776411
    5364: iastore
    5365: dup
    5366: sipush        223
    5369: ldc_w         #811                // int 16119285
    5372: iastore
    5373: dup
    5374: sipush        224
    5377: ldc_w         #794                // int 15000804
    5380: iastore
    5381: dup
    5382: sipush        225
    5385: ldc_w         #580                // int 921102
    5388: iastore
    5389: dup
    5390: sipush        226
    5393: ldc_w         #681                // int 7566195
    5396: iastore
    5397: dup
    5398: sipush        227
    5401: ldc_w         #736                // int 11184810
    5404: iastore
    5405: dup
    5406: sipush        228
    5409: ldc_w         #807                // int 15856113
    5412: iastore
    5413: dup
    5414: sipush        229
    5417: ldc_w         #787                // int 14540253
    5420: iastore
    5421: dup
    5422: sipush        230
    5425: ldc_w         #655                // int 5855577
    5428: iastore
    5429: dup
    5430: sipush        231
    5433: ldc_w         #586                // int 1315860
    5436: iastore
    5437: dup
    5438: sipush        232
    5441: ldc_w         #674                // int 7105644
    5444: iastore
    5445: dup
    5446: sipush        233
    5449: ldc_w         #712                // int 9605778
    5452: iastore
    5453: dup
    5454: sipush        234
    5457: ldc_w         #650                // int 5526612
    5460: iastore
    5461: dup
    5462: sipush        235
    5465: ldc_w         #774                // int 13684944
    5468: iastore
    5469: dup
    5470: sipush        236
    5473: ldc_w         #686                // int 7895160
    5476: iastore
    5477: dup
    5478: sipush        237
    5481: ldc_w         #678                // int 7368816
    5484: iastore
    5485: dup
    5486: sipush        238
    5489: ldc_w         #793                // int 14935011
    5492: iastore
    5493: dup
    5494: sipush        239
    5497: ldc_w         #639                // int 4802889
    5500: iastore
    5501: dup
    5502: sipush        240
    5505: ldc_w         #694                // int 8421504
    5508: iastore
    5509: dup
    5510: sipush        241
    5513: ldc_w         #646                // int 5263440
    5516: iastore
    5517: dup
    5518: sipush        242
    5521: ldc_w         #733                // int 10987431
    5524: iastore
    5525: dup
    5526: sipush        243
    5529: ldc_w         #812                // int 16185078
    5532: iastore
    5533: dup
    5534: sipush        244
    5537: ldc_w         #685                // int 7829367
    5540: iastore
    5541: dup
    5542: sipush        245
    5545: ldc_w         #713                // int 9671571
    5548: iastore
    5549: dup
    5550: sipush        246
    5553: ldc_w         #700                // int 8816262
    5556: iastore
    5557: dup
    5558: sipush        247
    5561: ldc_w         #697                // int 8618883
    5564: iastore
    5565: dup
    5566: sipush        248
    5569: ldc_w         #608                // int 2763306
    5572: iastore
    5573: dup
    5574: sipush        249
    5577: ldc_w         #765                // int 13092807
    5580: iastore
    5581: dup
    5582: sipush        250
    5585: ldc_w         #657                // int 5987163
    5588: iastore
    5589: dup
    5590: sipush        251
    5593: ldc_w         #799                // int 15329769
    5596: iastore
    5597: dup
    5598: sipush        252
    5601: ldc_w         #804                // int 15658734
    5604: iastore
    5605: dup
    5606: sipush        253
    5609: ldc_w         #709                // int 9408399
    5612: iastore
    5613: dup
    5614: sipush        254
    5617: ldc_w         #567                // int 65793
    5620: iastore
    5621: dup
    5622: sipush        255
    5625: ldc_w         #627                // int 4013373
    5628: iastore
    5629: putstatic     #1142               // Field SBOX2_0222:[I
    5632: sipush        256
    5635: newarray       int
    5637: dup
    5638: iconst_0
    5639: ldc_w         #941                // int 939538488
    5642: iastore
    5643: dup
    5644: iconst_1
    5645: ldc_w         #962                // int 1090535745
    5648: iastore
    5649: dup
    5650: iconst_2
    5651: ldc_w         #868                // int 369104406
    5654: iastore
    5655: dup
    5656: iconst_3
    5657: ldc_w         #1078               // int 1979741814
    5660: iastore
    5661: dup
    5662: iconst_4
    5663: ldc_w         #479                // int -654255655
    5666: iastore
    5667: dup
    5668: iconst_5
    5669: ldc_w         #322                // int -1828678765
    5672: iastore
    5673: dup
    5674: bipush        6
    5676: ldc_w         #1030               // int 1610637408
    5679: iastore
    5680: dup
    5681: bipush        7
    5683: ldc_w         #533                // int -234818830
    5686: iastore
    5687: dup
    5688: bipush        8
    5690: ldc_w         #1069               // int 1912631922
    5693: iastore
    5694: dup
    5695: bipush        9
    5697: ldc_w         #429                // int -1040137534
    5700: iastore
    5701: dup
    5702: bipush        10
    5704: ldc_w         #374                // int -1426019413
    5707: iastore
    5708: dup
    5709: bipush        11
    5711: ldc_w         #337                // int -1711236454
    5714: iastore
    5715: dup
    5716: bipush        12
    5718: ldc_w         #1076               // int 1962964341
    5721: iastore
    5722: dup
    5723: bipush        13
    5725: ldc_w         #832                // int 100664838
    5728: iastore
    5729: dup
    5730: bipush        14
    5732: ldc_w         #1011               // int 1459640151
    5735: iastore
    5736: dup
    5737: bipush        15
    5739: ldc_w         #350                // int -1610571616
    5742: iastore
    5743: dup
    5744: bipush        16
    5746: ldc_w         #318                // int -1862233711
    5749: iastore
    5750: dup
    5751: bipush        17
    5753: ldc_w         #544                // int -150931465
    5756: iastore
    5757: dup
    5758: bipush        18
    5760: ldc_w         #398                // int -1258244683
    5763: iastore
    5764: dup
    5765: bipush        19
    5767: ldc_w         #444                // int -922695223
    5770: iastore
    5771: dup
    5772: bipush        20
    5774: ldc_w         #354                // int -1577016670
    5777: iastore
    5778: dup
    5779: bipush        21
    5781: ldc_w         #307                // int -1946121076
    5784: iastore
    5785: dup
    5786: bipush        22
    5788: ldc_w         #463                // int -771697966
    5791: iastore
    5792: dup
    5793: bipush        23
    5795: ldc_w         #316                // int -1879011184
    5798: iastore
    5799: dup
    5800: bipush        24
    5802: ldc_w         #542                // int -167708938
    5805: iastore
    5806: dup
    5807: bipush        25
    5809: ldc_w         #835                // int 117442311
    5812: iastore
    5813: dup
    5814: bipush        26
    5816: ldc_w         #366                // int -1493129305
    5819: iastore
    5820: dup
    5821: bipush        27
    5823: ldc_w         #903                // int 654321447
    5826: iastore
    5827: dup
    5828: bipush        28
    5830: ldc_w         #312                // int -1912566130
    5833: iastore
    5834: dup
    5835: bipush        29
    5837: ldc_w         #391                // int -1308577102
    5840: iastore
    5841: dup
    5842: bipush        30
    5844: ldc_w         #981                // int 1224755529
    5847: iastore
    5848: dup
    5849: bipush        31
    5851: ldc_w         #489                // int -570368290
    5854: iastore
    5855: dup
    5856: bipush        32
    5858: ldc_w         #967                // int 1124090691
    5861: iastore
    5862: dup
    5863: bipush        33
    5865: ldc_w         #1022               // int 1543527516
    5868: iastore
    5869: dup
    5870: bipush        34
    5872: ldc_w         #475                // int -687810601
    5875: iastore
    5876: dup
    5877: bipush        35
    5879: ldc_w         #439                // int -956250169
    5882: iastore
    5883: dup
    5884: bipush        36
    5886: ldc_w         #955                // int 1040203326
    5889: iastore
    5890: dup
    5891: bipush        37
    5893: ldc_w         #540                // int -184486411
    5896: iastore
    5897: dup
    5898: bipush        38
    5900: ldc_w         #314                // int -1895788657
    5903: iastore
    5904: dup
    5905: bipush        39
    5907: ldc_w         #1044               // int 1728079719
    5910: iastore
    5911: dup
    5912: bipush        40
    5914: ldc_w         #886                // int 520101663
    5917: iastore
    5918: dup
    5919: bipush        41
    5921: ldc_w         #872                // int 402659352
    5924: iastore
    5925: dup
    5926: bipush        42
    5928: ldc_w         #1060               // int 1845522030
    5931: iastore
    5932: dup
    5933: bipush        43
    5935: ldc_w         #385                // int -1358909521
    5938: iastore
    5939: dup
    5940: bipush        44
    5942: ldc_w         #921                // int 788541231
    5945: iastore
    5946: dup
    5947: bipush        45
    5949: ldc_w         #497                // int -503258398
    5952: iastore
    5953: dup
    5954: bipush        46
    5956: ldc_w         #292                // int -2063563387
    5959: iastore
    5960: dup
    5961: bipush        47
    5963: ldc_w         #849                // int 218107149
    5966: iastore
    5967: dup
    5968: bipush        48
    5970: ldc_w         #1002               // int 1392530259
    5973: iastore
    5974: dup
    5975: bipush        49
    5977: ldc_w         #528                // int -268373776
    5980: iastore
    5981: dup
    5982: bipush        50
    5984: ldc_w         #341                // int -1677681508
    5987: iastore
    5988: dup
    5989: bipush        51
    5991: ldc_w         #1040               // int 1694524773
    5994: iastore
    5995: dup
    5996: bipush        52
    5998: ldc_w         #515                // int -369038614
    6001: iastore
    6002: dup
    6003: bipush        53
    6005: ldc_w         #357                // int -1560239197
    6008: iastore
    6009: dup
    6010: bipush        54
    6012: ldc_w         #383                // int -1375686994
    6015: iastore
    6016: dup
    6017: bipush        55
    6019: ldc_w         #345                // int -1644126562
    6022: iastore
    6023: dup
    6024: bipush        56
    6026: ldc_w         #519                // int -335483668
    6029: iastore
    6030: dup
    6031: bipush        57
    6033: ldc_w         #281                // int -2147450752
    6036: iastore
    6037: dup
    6038: bipush        58
    6040: ldc_w         #917                // int 754986285
    6043: iastore
    6044: dup
    6045: bipush        59
    6047: ldc_w         #1054               // int 1795189611
    6050: iastore
    6051: dup
    6052: bipush        60
    6054: ldc_w         #368                // int -1476351832
    6057: iastore
    6058: dup
    6059: bipush        61
    6061: ldc_w         #913                // int 721431339
    6064: iastore
    6065: dup
    6066: bipush        62
    6068: ldc_w         #936                // int 905983542
    6071: iastore
    6072: dup
    6073: bipush        63
    6075: ldc_w         #364                // int -1509906778
    6078: iastore
    6079: dup
    6080: bipush        64
    6082: ldc_w         #435                // int -989805115
    6085: iastore
    6086: dup
    6087: bipush        65
    6089: ldc_w         #294                // int -2046785914
    6092: iastore
    6093: dup
    6094: bipush        66
    6096: ldc_w         #990                // int 1291865421
    6099: iastore
    6100: dup
    6101: bipush        67
    6103: ldc_w         #930                // int 855651123
    6106: iastore
    6107: dup
    6108: bipush        68
    6110: ldc_w         #558                // int -50266627
    6113: iastore
    6114: dup
    6115: bipush        69
    6117: ldc_w         #1042               // int 1711302246
    6120: iastore
    6121: dup
    6122: bipush        70
    6124: ldc_w         #1013               // int 1476417624
    6127: iastore
    6128: dup
    6129: bipush        71
    6131: ldc_w         #328                // int -1778346346
    6134: iastore
    6135: dup
    6136: bipush        72
    6138: ldc_w         #946                // int 973093434
    6141: iastore
    6142: dup
    6143: bipush        73
    6145: ldc_w         #840                // int 150997257
    6148: iastore
    6149: dup
    6150: bipush        74
    6152: ldc_w         #326                // int -1795123819
    6155: iastore
    6156: dup
    6157: bipush        75
    6159: ldc_w         #855                // int 268439568
    6162: iastore
    6163: dup
    6164: bipush        76
    6166: ldc_w         #1083               // int 2013296760
    6169: iastore
    6170: dup
    6171: bipush        77
    6173: ldc_w         #477                // int -671033128
    6176: iastore
    6177: dup
    6178: bipush        78
    6180: ldc_w         #964                // int 1107313218
    6183: iastore
    6184: dup
    6185: bipush        79
    6187: ldc_w         #451                // int -872362804
    6190: iastore
    6191: dup
    6192: bipush        80
    6194: ldc_w         #526                // int -285151249
    6197: iastore
    6198: dup
    6199: bipush        81
    6201: ldc_w         #901                // int 637543974
    6204: iastore
    6205: dup
    6206: bipush        82
    6208: ldc_w         #504                // int -452925979
    6211: iastore
    6212: dup
    6213: bipush        83
    6215: ldc_w         #1032               // int 1627414881
    6218: iastore
    6219: dup
    6220: bipush        84
    6222: ldc_w         #876                // int 436214298
    6225: iastore
    6226: dup
    6227: bipush        85
    6229: ldc_w         #957                // int 1056980799
    6232: iastore
    6233: dup
    6234: bipush        86
    6236: ldc_w         #948                // int 989870907
    6239: iastore
    6240: dup
    6241: bipush        87
    6243: ldc_w         #286                // int -2113895806
    6246: iastore
    6247: dup
    6248: bipush        88
    6250: ldc_w         #400                // int -1241467210
    6253: iastore
    6254: dup
    6255: bipush        89
    6257: ldc_w         #483                // int -620700709
    6260: iastore
    6261: dup
    6262: bipush        90
    6264: ldc_w         #468                // int -738143020
    6267: iastore
    6268: dup
    6269: bipush        91
    6271: ldc_w         #332                // int -1744791400
    6274: iastore
    6275: dup
    6276: bipush        92
    6278: ldc_w         #511                // int -402593560
    6281: iastore
    6282: dup
    6283: bipush        93
    6285: ldc_w         #305                // int -1962898549
    6288: iastore
    6289: dup
    6290: bipush        94
    6292: ldc_w         #824                // int 33554946
    6295: iastore
    6296: dup
    6297: bipush        95
    6299: ldc_w         #517                // int -352261141
    6302: iastore
    6303: dup
    6304: bipush        96
    6306: ldc_w         #842                // int 167774730
    6309: iastore
    6310: dup
    6311: bipush        97
    6313: ldc_w         #915                // int 738208812
    6316: iastore
    6317: dup
    6318: bipush        98
    6320: ldc_w         #882                // int 486546717
    6323: iastore
    6324: dup
    6325: bipush        99
    6327: ldc_w         #387                // int -1342132048
    6330: iastore
    6331: dup
    6332: bipush        100
    6334: ldc_w         #1062               // int 1862299503
    6337: iastore
    6338: dup
    6339: bipush        101
    6341: ldc_w         #309                // int -1929343603
    6344: iastore
    6345: dup
    6346: bipush        102
    6348: ldc_w         #298                // int -2013230968
    6351: iastore
    6352: dup
    6353: bipush        103
    6355: ldc_w         #851                // int 234884622
    6358: iastore
    6359: dup
    6360: bipush        104
    6362: ldc_w         #874                // int 419436825
    6365: iastore
    6366: dup
    6367: bipush        105
    6369: ldc_w         #296                // int -2030008441
    6372: iastore
    6373: dup
    6374: bipush        106
    6376: ldc_w         #992                // int 1308642894
    6379: iastore
    6380: dup
    6381: bipush        107
    6383: ldc_w         #845                // int 184552203
    6386: iastore
    6387: dup
    6388: bipush        108
    6390: ldc_w         #370                // int -1459574359
    6393: iastore
    6394: dup
    6395: bipush        109
    6397: ldc_w         #847                // int 201329676
    6400: iastore
    6401: dup
    6402: bipush        110
    6404: ldc_w         #1086               // int 2030074233
    6407: iastore
    6408: dup
    6409: bipush        111
    6411: ldc_w         #857                // int 285217041
    6414: iastore
    6415: dup
    6416: bipush        112
    6418: ldc_w         #1099               // int 2130739071
    6421: iastore
    6422: dup
    6423: bipush        113
    6425: ldc_w         #892                // int 570434082
    6428: iastore
    6429: dup
    6430: bipush        114
    6432: ldc_w         #508                // int -419371033
    6435: iastore
    6436: dup
    6437: bipush        115
    6439: ldc_w         #1015               // int 1493195097
    6442: iastore
    6443: dup
    6444: bipush        116
    6446: ldc_w         #495                // int -520035871
    6449: iastore
    6450: dup
    6451: bipush        117
    6453: ldc_w         #481                // int -637478182
    6456: iastore
    6457: dup
    6458: bipush        118
    6460: ldc_w         #953                // int 1023425853
    6463: iastore
    6464: dup
    6465: bipush        119
    6467: ldc_w         #442                // int -939472696
    6470: iastore
    6471: dup
    6472: bipush        120
    6474: ldc_w         #859                // int 301994514
    6477: iastore
    6478: dup
    6479: bipush        121
    6481: ldc_w         #828                // int 67109892
    6484: iastore
    6485: dup
    6486: bipush        122
    6488: ldc_w         #1074               // int 1946186868
    6491: iastore
    6492: dup
    6493: bipush        123
    6495: ldc_w         #1004               // int 1409307732
    6498: iastore
    6499: dup
    6500: bipush        124
    6502: ldc_w         #924                // int 805318704
    6505: iastore
    6506: dup
    6507: bipush        125
    6509: ldc_w         #1097               // int 2113961598
    6512: iastore
    6513: dup
    6514: bipush        126
    6516: ldc_w         #395                // int -1275022156
    6519: iastore
    6520: dup
    6521: bipush        127
    6523: ldc_w         #905                // int 671098920
    6526: iastore
    6527: dup
    6528: sipush        128
    6531: ldc_w         #1006               // int 1426085205
    6534: iastore
    6535: dup
    6536: sipush        129
    6539: ldc_w         #1046               // int 1744857192
    6542: iastore
    6543: dup
    6544: sipush        130
    6547: ldc_w         #996                // int 1342197840
    6550: iastore
    6551: dup
    6552: sipush        131
    6555: ldc_w         #420                // int -1107247426
    6558: iastore
    6559: dup
    6560: sipush        132
    6563: ldc_w         #459                // int -805252912
    6566: iastore
    6567: dup
    6568: sipush        133
    6571: ldc_w         #433                // int -1006582588
    6574: iastore
    6575: dup
    6576: sipush        134
    6579: ldc_w         #926                // int 822096177
    6582: iastore
    6583: dup
    6584: sipush        135
    6587: ldc_w         #449                // int -889140277
    6590: iastore
    6591: dup
    6592: sipush        136
    6595: ldc_w         #910                // int 704653866
    6598: iastore
    6599: dup
    6600: sipush        137
    6603: ldc_w         #380                // int -1392464467
    6606: iastore
    6607: dup
    6608: sipush        138
    6611: ldc_w         #853                // int 251662095
    6614: iastore
    6615: dup
    6616: sipush        139
    6619: ldc_w         #447                // int -905917750
    6622: iastore
    6623: dup
    6624: sipush        140
    6627: ldc_w         #1064               // int 1879076976
    6630: iastore
    6631: dup
    6632: sipush        141
    6635: ldc_w         #563                // int -16711681
    6638: iastore
    6639: dup
    6640: sipush        142
    6643: ldc_w         #928                // int 838873650
    6646: iastore
    6647: dup
    6648: sipush        143
    6651: ldc_w         #1049               // int 1761634665
    6654: iastore
    6655: dup
    6656: sipush        144
    6659: ldc_w         #838                // int 134219784
    6662: iastore
    6663: dup
    6664: sipush        145
    6667: ldc_w         #1034               // int 1644192354
    6670: iastore
    6671: dup
    6672: sipush        146
    6675: iconst_0
    6676: iastore
    6677: dup
    6678: sipush        147
    6681: ldc_w         #896                // int 603989028
    6684: iastore
    6685: dup
    6686: sipush        148
    6689: ldc_w         #461                // int -788475439
    6692: iastore
    6693: dup
    6694: sipush        149
    6697: ldc_w         #554                // int -83821573
    6700: iastore
    6701: dup
    6702: sipush        150
    6705: ldc_w         #410                // int -1174357318
    6708: iastore
    6709: dup
    6710: sipush        151
    6713: ldc_w         #521                // int -318706195
    6716: iastore
    6717: dup
    6718: sipush        152
    6721: ldc_w         #972                // int 1157645637
    6724: iastore
    6725: dup
    6726: sipush        153
    6729: ldc_w         #284                // int -2130673279
    6732: iastore
    6733: dup
    6734: sipush        154
    6737: ldc_w         #1072               // int 1929409395
    6740: iastore
    6741: dup
    6742: sipush        155
    6745: ldc_w         #1058               // int 1828744557
    6748: iastore
    6749: dup
    6750: sipush        156
    6753: ldc_w         #290                // int -2080340860
    6756: iastore
    6757: dup
    6758: sipush        157
    6761: ldc_w         #348                // int -1627349089
    6764: iastore
    6765: dup
    6766: sipush        158
    6769: ldc_w         #523                // int -301928722
    6772: iastore
    6773: dup
    6774: sipush        159
    6777: ldc_w         #984                // int 1241533002
    6780: iastore
    6781: dup
    6782: sipush        160
    6785: ldc_w         #431                // int -1023360061
    6788: iastore
    6789: dup
    6790: sipush        161
    6793: ldc_w         #919                // int 771763758
    6796: iastore
    6797: dup
    6798: sipush        162
    6801: ldc_w         #426                // int -1056915007
    6804: iastore
    6805: dup
    6806: sipush        163
    6809: ldc_w         #822                // int 16777473
    6812: iastore
    6813: dup
    6814: sipush        164
    6817: ldc_w         #506                // int -436148506
    6820: iastore
    6821: dup
    6822: sipush        165
    6825: ldc_w         #898                // int 620766501
    6828: iastore
    6829: dup
    6830: sipush        166
    6833: ldc_w         #979                // int 1207978056
    6836: iastore
    6837: dup
    6838: sipush        167
    6841: ldc_w         #335                // int -1728013927
    6844: iastore
    6845: dup
    6846: sipush        168
    6849: ldc_w         #407                // int -1191134791
    6852: iastore
    6853: dup
    6854: sipush        169
    6857: ldc_w         #393                // int -1291799629
    6860: iastore
    6861: dup
    6862: sipush        170
    6865: ldc_w         #1090               // int 2063629179
    6868: iastore
    6869: dup
    6870: sipush        171
    6873: ldc_w         #549                // int -117376519
    6876: iastore
    6877: dup
    6878: sipush        172
    6881: ldc_w         #455                // int -838807858
    6884: iastore
    6885: dup
    6886: sipush        173
    6889: ldc_w         #422                // int -1090469953
    6892: iastore
    6893: dup
    6894: sipush        174
    6897: ldc_w         #491                // int -553590817
    6900: iastore
    6901: dup
    6902: sipush        175
    6905: ldc_w         #1066               // int 1895854449
    6908: iastore
    6909: dup
    6910: sipush        176
    6913: ldc_w         #908                // int 687876393
    6916: iastore
    6917: dup
    6918: sipush        177
    6921: ldc_w         #453                // int -855585331
    6924: iastore
    6925: dup
    6926: sipush        178
    6929: ldc_w         #1056               // int 1811967084
    6932: iastore
    6933: dup
    6934: sipush        179
    6937: ldc_w         #861                // int 318771987
    6940: iastore
    6941: dup
    6942: sipush        180
    6945: ldc_w         #1038               // int 1677747300
    6948: iastore
    6949: dup
    6950: sipush        181
    6953: ldc_w         #339                // int -1694458981
    6956: iastore
    6957: dup
    6958: sipush        182
    6961: ldc_w         #1036               // int 1660969827
    6964: iastore
    6965: dup
    6966: sipush        183
    6969: ldc_w         #343                // int -1660904035
    6972: iastore
    6973: dup
    6974: sipush        184
    6977: ldc_w         #424                // int -1073692480
    6980: iastore
    6981: dup
    6982: sipush        185
    6985: ldc_w         #986                // int 1258310475
    6988: iastore
    6989: dup
    6990: sipush        186
    6993: ldc_w         #403                // int -1224689737
    6996: iastore
    6997: dup
    6998: sipush        187
    7001: ldc_w         #362                // int -1526684251
    7004: iastore
    7005: dup
    7006: sipush        188
    7009: ldc_w         #301                // int -1996453495
    7012: iastore
    7013: dup
    7014: sipush        189
    7017: ldc_w         #1028               // int 1593859935
    7020: iastore
    7021: dup
    7022: sipush        190
    7025: ldc_w         #389                // int -1325354575
    7028: iastore
    7029: dup
    7030: sipush        191
    7033: ldc_w         #870                // int 385881879
    7036: iastore
    7037: dup
    7038: sipush        192
    7041: ldc_w         #537                // int -201263884
    7044: iastore
    7045: dup
    7046: sipush        193
    7049: ldc_w         #416                // int -1140802372
    7052: iastore
    7053: dup
    7054: sipush        194
    7057: ldc_w         #465                // int -754920493
    7060: iastore
    7061: dup
    7062: sipush        195
    7065: ldc_w         #974                // int 1174423110
    7068: iastore
    7069: dup
    7070: sipush        196
    7073: ldc_w         #457                // int -822030385
    7076: iastore
    7077: dup
    7078: sipush        197
    7081: ldc_w         #939                // int 922761015
    7084: iastore
    7085: dup
    7086: sipush        198
    7089: ldc_w         #1026               // int 1577082462
    7092: iastore
    7093: dup
    7094: sipush        199
    7097: ldc_w         #977                // int 1191200583
    7100: iastore
    7101: dup
    7102: sipush        200
    7105: ldc_w         #324                // int -1811901292
    7108: iastore
    7109: dup
    7110: sipush        201
    7113: ldc_w         #551                // int -100599046
    7116: iastore
    7117: dup
    7118: sipush        202
    7121: ldc_w         #556                // int -67044100
    7124: iastore
    7125: dup
    7126: sipush        203
    7129: ldc_w         #1020               // int 1526750043
    7132: iastore
    7133: dup
    7134: sipush        204
    7137: ldc_w         #330                // int -1761568873
    7140: iastore
    7141: dup
    7142: sipush        205
    7145: ldc_w         #561                // int -33489154
    7148: iastore
    7149: dup
    7150: sipush        206
    7153: ldc_w         #1018               // int 1509972570
    7156: iastore
    7157: dup
    7158: sipush        207
    7161: ldc_w         #377                // int -1409241940
    7164: iastore
    7165: dup
    7166: sipush        208
    7169: ldc_w         #950                // int 1006648380
    7172: iastore
    7173: dup
    7174: sipush        209
    7177: ldc_w         #988                // int 1275087948
    7180: iastore
    7181: dup
    7182: sipush        210
    7185: ldc_w         #826                // int 50332419
    7188: iastore
    7189: dup
    7190: sipush        211
    7193: ldc_w         #934                // int 889206069
    7196: iastore
    7197: dup
    7198: sipush        212
    7201: ldc_w         #535                // int -218041357
    7204: iastore
    7205: dup
    7206: sipush        213
    7209: ldc_w         #894                // int 587211555
    7212: iastore
    7213: dup
    7214: sipush        214
    7217: ldc_w         #405                // int -1207912264
    7220: iastore
    7221: dup
    7222: sipush        215
    7225: ldc_w         #1024               // int 1560304989
    7228: iastore
    7229: dup
    7230: sipush        216
    7233: ldc_w         #1051               // int 1778412138
    7236: iastore
    7237: dup
    7238: sipush        217
    7241: ldc_w         #320                // int -1845456238
    7244: iastore
    7245: dup
    7246: sipush        218
    7249: ldc_w         #471                // int -721365547
    7252: iastore
    7253: dup
    7254: sipush        219
    7257: ldc_w         #890                // int 553656609
    7260: iastore
    7261: dup
    7262: sipush        220
    7265: ldc_w         #970                // int 1140868164
    7268: iastore
    7269: dup
    7270: sipush        221
    7273: ldc_w         #998                // int 1358975313
    7276: iastore
    7277: dup
    7278: sipush        222
    7281: ldc_w         #437                // int -973027642
    7284: iastore
    7285: dup
    7286: sipush        223
    7289: ldc_w         #1095               // int 2097184125
    7292: iastore
    7293: dup
    7294: sipush        224
    7297: ldc_w         #944                // int 956315961
    7300: iastore
    7301: dup
    7302: sipush        225
    7305: ldc_w         #288                // int -2097118333
    7308: iastore
    7309: dup
    7310: sipush        226
    7313: ldc_w         #485                // int -603923236
    7316: iastore
    7317: dup
    7318: sipush        227
    7321: ldc_w         #372                // int -1442796886
    7324: iastore
    7325: dup
    7326: sipush        228
    7329: ldc_w         #1093               // int 2080406652
    7332: iastore
    7333: dup
    7334: sipush        229
    7337: ldc_w         #1080               // int 1996519287
    7340: iastore
    7341: dup
    7342: sipush        230
    7345: ldc_w         #1009               // int 1442862678
    7348: iastore
    7349: dup
    7350: sipush        231
    7353: ldc_w         #830                // int 83887365
    7356: iastore
    7357: dup
    7358: sipush        232
    7361: ldc_w         #878                // int 452991771
    7364: iastore
    7365: dup
    7366: sipush        233
    7369: ldc_w         #359                // int -1543461724
    7372: iastore
    7373: dup
    7374: sipush        234
    7377: ldc_w         #865                // int 352326933
    7380: iastore
    7381: dup
    7382: sipush        235
    7385: ldc_w         #932                // int 872428596
    7388: iastore
    7389: dup
    7390: sipush        236
    7393: ldc_w         #884                // int 503324190
    7396: iastore
    7397: dup
    7398: sipush        237
    7401: ldc_w         #880                // int 469769244
    7404: iastore
    7405: dup
    7406: sipush        238
    7409: ldc_w         #546                // int -134153992
    7412: iastore
    7413: dup
    7414: sipush        239
    7417: ldc_w         #1000               // int 1375752786
    7420: iastore
    7421: dup
    7422: sipush        240
    7425: ldc_w         #888                // int 536879136
    7428: iastore
    7429: dup
    7430: sipush        241
    7433: ldc_w         #863                // int 335549460
    7436: iastore
    7437: dup
    7438: sipush        242
    7441: ldc_w         #513                // int -385816087
    7444: iastore
    7445: dup
    7446: sipush        243
    7449: ldc_w         #418                // int -1124024899
    7452: iastore
    7453: dup
    7454: sipush        244
    7457: ldc_w         #487                // int -587145763
    7460: iastore
    7461: dup
    7462: sipush        245
    7465: ldc_w         #502                // int -469703452
    7468: iastore
    7469: dup
    7470: sipush        246
    7473: ldc_w         #352                // int -1593794143
    7476: iastore
    7477: dup
    7478: sipush        247
    7481: ldc_w         #493                // int -536813344
    7484: iastore
    7485: dup
    7486: sipush        248
    7489: ldc_w         #303                // int -1979676022
    7492: iastore
    7493: dup
    7494: sipush        249
    7497: ldc_w         #530                // int -251596303
    7500: iastore
    7501: dup
    7502: sipush        250
    7505: ldc_w         #473                // int -704588074
    7508: iastore
    7509: dup
    7510: sipush        251
    7513: ldc_w         #1088               // int 2046851706
    7516: iastore
    7517: dup
    7518: sipush        252
    7521: ldc_w         #413                // int -1157579845
    7524: iastore
    7525: dup
    7526: sipush        253
    7529: ldc_w         #499                // int -486480925
    7532: iastore
    7533: dup
    7534: sipush        254
    7537: ldc_w         #959                // int 1073758272
    7540: iastore
    7541: dup
    7542: sipush        255
    7545: ldc_w         #994                // int 1325420367
    7548: iastore
    7549: putstatic     #1143               // Field SBOX3_3033:[I
    7552: return
}
