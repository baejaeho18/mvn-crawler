public class org.bouncycastle.crypto.params.ECDomainParameters implements org.bouncycastle.math.ec.ECConstants {
  private final org.bouncycastle.math.ec.ECCurve curve;

  private final byte[] seed;

  private final org.bouncycastle.math.ec.ECPoint G;

  private final java.math.BigInteger n;

  private final java.math.BigInteger h;

  private java.math.BigInteger hInv;

  public org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #106                // Field ONE:Ljava/math/BigInteger;
       7: aconst_null
       8: invokespecial #123                // Method "<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V
      11: return

  public org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #123                // Method "<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V
      10: return

  public org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[]);
    Code:
       0: aload_0
       1: invokespecial #115                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #108                // Field hInv:Ljava/math/BigInteger;
       9: aload_1
      10: ifnonnull     23
      13: new           #55                 // class java/lang/NullPointerException
      16: dup
      17: ldc           #6                  // String curve
      19: invokespecial #114                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_3
      24: ifnonnull     37
      27: new           #55                 // class java/lang/NullPointerException
      30: dup
      31: ldc           #7                  // String n
      33: invokespecial #114                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_1
      39: putfield      #110                // Field curve:Lorg/bouncycastle/math/ec/ECCurve;
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokestatic  #122                // Method validatePublicPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      48: putfield      #111                // Field G:Lorg/bouncycastle/math/ec/ECPoint;
      51: aload_0
      52: aload_3
      53: putfield      #109                // Field n:Ljava/math/BigInteger;
      56: aload_0
      57: aload         4
      59: putfield      #107                // Field h:Ljava/math/BigInteger;
      62: aload_0
      63: aload         5
      65: invokestatic  #132                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      68: putfield      #105                // Field seed:[B
      71: return

  public org.bouncycastle.math.ec.ECCurve getCurve();
    Code:
       0: aload_0
       1: getfield      #110                // Field curve:Lorg/bouncycastle/math/ec/ECCurve;
       4: areturn

  public org.bouncycastle.math.ec.ECPoint getG();
    Code:
       0: aload_0
       1: getfield      #111                // Field G:Lorg/bouncycastle/math/ec/ECPoint;
       4: areturn

  public java.math.BigInteger getN();
    Code:
       0: aload_0
       1: getfield      #109                // Field n:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getH();
    Code:
       0: aload_0
       1: getfield      #107                // Field h:Ljava/math/BigInteger;
       4: areturn

  public synchronized java.math.BigInteger getHInv();
    Code:
       0: aload_0
       1: getfield      #108                // Field hInv:Ljava/math/BigInteger;
       4: ifnonnull     22
       7: aload_0
       8: aload_0
       9: getfield      #107                // Field h:Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #109                // Field n:Ljava/math/BigInteger;
      16: invokevirtual #119                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: putfield      #108                // Field hInv:Ljava/math/BigInteger;
      22: aload_0
      23: getfield      #108                // Field hInv:Ljava/math/BigInteger;
      26: areturn

  public byte[] getSeed();
    Code:
       0: aload_0
       1: getfield      #105                // Field seed:[B
       4: invokestatic  #132                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #58                 // class org/bouncycastle/crypto/params/ECDomainParameters
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #58                 // class org/bouncycastle/crypto/params/ECDomainParameters
      20: astore_2
      21: aload_0
      22: getfield      #110                // Field curve:Lorg/bouncycastle/math/ec/ECCurve;
      25: aload_2
      26: getfield      #110                // Field curve:Lorg/bouncycastle/math/ec/ECCurve;
      29: invokevirtual #126                // Method org/bouncycastle/math/ec/ECCurve.equals:(Lorg/bouncycastle/math/ec/ECCurve;)Z
      32: ifeq          67
      35: aload_0
      36: getfield      #111                // Field G:Lorg/bouncycastle/math/ec/ECPoint;
      39: aload_2
      40: getfield      #111                // Field G:Lorg/bouncycastle/math/ec/ECPoint;
      43: invokevirtual #131                // Method org/bouncycastle/math/ec/ECPoint.equals:(Lorg/bouncycastle/math/ec/ECPoint;)Z
      46: ifeq          67
      49: aload_0
      50: getfield      #109                // Field n:Ljava/math/BigInteger;
      53: aload_2
      54: getfield      #109                // Field n:Ljava/math/BigInteger;
      57: invokevirtual #117                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public int hashCode();
    Code:
       0: iconst_4
       1: istore_1
       2: iload_1
       3: sipush        257
       6: imul
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #110                // Field curve:Lorg/bouncycastle/math/ec/ECCurve;
      13: invokevirtual #125                // Method org/bouncycastle/math/ec/ECCurve.hashCode:()I
      16: ixor
      17: istore_1
      18: iload_1
      19: sipush        257
      22: imul
      23: istore_1
      24: iload_1
      25: aload_0
      26: getfield      #111                // Field G:Lorg/bouncycastle/math/ec/ECPoint;
      29: invokevirtual #127                // Method org/bouncycastle/math/ec/ECPoint.hashCode:()I
      32: ixor
      33: istore_1
      34: iload_1
      35: sipush        257
      38: imul
      39: istore_1
      40: iload_1
      41: aload_0
      42: getfield      #109                // Field n:Ljava/math/BigInteger;
      45: invokevirtual #116                // Method java/math/BigInteger.hashCode:()I
      48: ixor
      49: istore_1
      50: iload_1
      51: ireturn

  public java.math.BigInteger validatePrivateScalar(java.math.BigInteger);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #55                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #4                  // String Scalar cannot be null
      11: invokespecial #114                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_1
      16: getstatic     #112                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      19: invokevirtual #118                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      22: iflt          36
      25: aload_1
      26: aload_0
      27: invokevirtual #120                // Method getN:()Ljava/math/BigInteger;
      30: invokevirtual #118                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      33: iflt          46
      36: new           #54                 // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #5                  // String Scalar is not in the interval [1, n - 1]
      42: invokespecial #113                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_1
      47: areturn

  public org.bouncycastle.math.ec.ECPoint validatePublicPoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: invokevirtual #121                // Method getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: aload_1
       5: invokestatic  #122                // Method validatePublicPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
       8: areturn

  static org.bouncycastle.math.ec.ECPoint validatePublicPoint(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #55                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #2                  // String Point cannot be null
      11: invokespecial #114                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: aload_1
      17: invokestatic  #124                // Method org/bouncycastle/math/ec/ECAlgorithms.importPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      20: invokevirtual #130                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      23: astore_1
      24: aload_1
      25: invokevirtual #128                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      28: ifeq          41
      31: new           #54                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #1                  // String Point at infinity
      37: invokespecial #113                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_1
      42: invokevirtual #129                // Method org/bouncycastle/math/ec/ECPoint.isValid:()Z
      45: ifne          58
      48: new           #54                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #3                  // String Point not on curve
      54: invokespecial #113                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_1
      59: areturn
}
