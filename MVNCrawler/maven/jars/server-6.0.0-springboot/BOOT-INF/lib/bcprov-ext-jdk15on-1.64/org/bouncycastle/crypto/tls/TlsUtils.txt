public class org.bouncycastle.crypto.tls.TlsUtils {
  public static final byte[] EMPTY_BYTES;

  public static final short[] EMPTY_SHORTS;

  public static final int[] EMPTY_INTS;

  public static final long[] EMPTY_LONGS;

  public static final java.lang.Integer EXT_signature_algorithms;

  static final byte[] SSL_CLIENT;

  static final byte[] SSL_SERVER;

  static final byte[][] SSL3_CONST;

  public org.bouncycastle.crypto.tls.TlsUtils();
    Code:
       0: aload_0
       1: invokespecial #643                // Method java/lang/Object."<init>":()V
       4: return

  public static void checkUint8(short) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #730                // Method isValidUint8:(S)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint8(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #721                // Method isValidUint8:(I)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint8(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #729                // Method isValidUint8:(J)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint16(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #719                // Method isValidUint16:(I)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint16(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #724                // Method isValidUint16:(J)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint24(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #720                // Method isValidUint24:(I)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint24(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #725                // Method isValidUint24:(J)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint32(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #726                // Method isValidUint32:(J)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint48(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #727                // Method isValidUint48:(J)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint64(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #728                // Method isValidUint64:(J)Z
       4: ifne          17
       7: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static boolean isValidUint8(short);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: iload_0
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isValidUint8(int);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: iload_0
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isValidUint8(long);
    Code:
       0: lload_0
       1: ldc2_w        #301                // long 255l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint16(int);
    Code:
       0: iload_0
       1: ldc           #2                  // int 65535
       3: iand
       4: iload_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isValidUint16(long);
    Code:
       0: lload_0
       1: ldc2_w        #305                // long 65535l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint24(int);
    Code:
       0: iload_0
       1: ldc           #3                  // int 16777215
       3: iand
       4: iload_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isValidUint24(long);
    Code:
       0: lload_0
       1: ldc2_w        #307                // long 16777215l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint32(long);
    Code:
       0: lload_0
       1: ldc2_w        #309                // long 4294967295l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint48(long);
    Code:
       0: lload_0
       1: ldc2_w        #311                // long 281474976710655l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint64(long);
    Code:
       0: iconst_1
       1: ireturn

  public static boolean isSSL(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: invokeinterface #782,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       6: invokevirtual #688                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
       9: ireturn

  public static boolean isTLSv11(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: getstatic     #623                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv11:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: aload_0
       4: invokevirtual #689                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       7: invokevirtual #691                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      10: ireturn

  public static boolean isTLSv11(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: invokeinterface #782,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       6: invokestatic  #760                // Method isTLSv11:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
       9: ireturn

  public static boolean isTLSv12(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: getstatic     #624                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: aload_0
       4: invokevirtual #689                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       7: invokevirtual #691                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      10: ireturn

  public static boolean isTLSv12(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: invokeinterface #782,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       6: invokestatic  #761                // Method isTLSv12:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
       9: ireturn

  public static void writeUint8(short, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
       5: return

  public static void writeUint8(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
       5: return

  public static void writeUint8(short, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: i2b
       4: bastore
       5: return

  public static void writeUint8(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: i2b
       4: bastore
       5: return

  public static void writeUint16(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: bipush        8
       4: iushr
       5: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
       8: aload_1
       9: iload_0
      10: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      13: return

  public static void writeUint16(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: bipush        8
       5: iushr
       6: i2b
       7: bastore
       8: aload_1
       9: iload_2
      10: iconst_1
      11: iadd
      12: iload_0
      13: i2b
      14: bastore
      15: return

  public static void writeUint24(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: bipush        16
       4: iushr
       5: i2b
       6: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
       9: aload_1
      10: iload_0
      11: bipush        8
      13: iushr
      14: i2b
      15: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      18: aload_1
      19: iload_0
      20: i2b
      21: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      24: return

  public static void writeUint24(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: bipush        16
       5: iushr
       6: i2b
       7: bastore
       8: aload_1
       9: iload_2
      10: iconst_1
      11: iadd
      12: iload_0
      13: bipush        8
      15: iushr
      16: i2b
      17: bastore
      18: aload_1
      19: iload_2
      20: iconst_2
      21: iadd
      22: iload_0
      23: i2b
      24: bastore
      25: return

  public static void writeUint32(long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: lload_0
       2: bipush        24
       4: lushr
       5: l2i
       6: i2b
       7: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      10: aload_2
      11: lload_0
      12: bipush        16
      14: lushr
      15: l2i
      16: i2b
      17: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      20: aload_2
      21: lload_0
      22: bipush        8
      24: lushr
      25: l2i
      26: i2b
      27: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      30: aload_2
      31: lload_0
      32: l2i
      33: i2b
      34: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      37: return

  public static void writeUint32(long, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: lload_0
       3: bipush        24
       5: lushr
       6: l2i
       7: i2b
       8: bastore
       9: aload_2
      10: iload_3
      11: iconst_1
      12: iadd
      13: lload_0
      14: bipush        16
      16: lushr
      17: l2i
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_2
      23: iadd
      24: lload_0
      25: bipush        8
      27: lushr
      28: l2i
      29: i2b
      30: bastore
      31: aload_2
      32: iload_3
      33: iconst_3
      34: iadd
      35: lload_0
      36: l2i
      37: i2b
      38: bastore
      39: return

  public static void writeUint48(long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: lload_0
       2: bipush        40
       4: lushr
       5: l2i
       6: i2b
       7: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      10: aload_2
      11: lload_0
      12: bipush        32
      14: lushr
      15: l2i
      16: i2b
      17: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      20: aload_2
      21: lload_0
      22: bipush        24
      24: lushr
      25: l2i
      26: i2b
      27: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      30: aload_2
      31: lload_0
      32: bipush        16
      34: lushr
      35: l2i
      36: i2b
      37: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      40: aload_2
      41: lload_0
      42: bipush        8
      44: lushr
      45: l2i
      46: i2b
      47: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      50: aload_2
      51: lload_0
      52: l2i
      53: i2b
      54: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      57: return

  public static void writeUint48(long, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: lload_0
       3: bipush        40
       5: lushr
       6: l2i
       7: i2b
       8: bastore
       9: aload_2
      10: iload_3
      11: iconst_1
      12: iadd
      13: lload_0
      14: bipush        32
      16: lushr
      17: l2i
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_2
      23: iadd
      24: lload_0
      25: bipush        24
      27: lushr
      28: l2i
      29: i2b
      30: bastore
      31: aload_2
      32: iload_3
      33: iconst_3
      34: iadd
      35: lload_0
      36: bipush        16
      38: lushr
      39: l2i
      40: i2b
      41: bastore
      42: aload_2
      43: iload_3
      44: iconst_4
      45: iadd
      46: lload_0
      47: bipush        8
      49: lushr
      50: l2i
      51: i2b
      52: bastore
      53: aload_2
      54: iload_3
      55: iconst_5
      56: iadd
      57: lload_0
      58: l2i
      59: i2b
      60: bastore
      61: return

  public static void writeUint64(long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: lload_0
       2: bipush        56
       4: lushr
       5: l2i
       6: i2b
       7: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      10: aload_2
      11: lload_0
      12: bipush        48
      14: lushr
      15: l2i
      16: i2b
      17: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      20: aload_2
      21: lload_0
      22: bipush        40
      24: lushr
      25: l2i
      26: i2b
      27: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      30: aload_2
      31: lload_0
      32: bipush        32
      34: lushr
      35: l2i
      36: i2b
      37: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      40: aload_2
      41: lload_0
      42: bipush        24
      44: lushr
      45: l2i
      46: i2b
      47: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      50: aload_2
      51: lload_0
      52: bipush        16
      54: lushr
      55: l2i
      56: i2b
      57: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      60: aload_2
      61: lload_0
      62: bipush        8
      64: lushr
      65: l2i
      66: i2b
      67: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      70: aload_2
      71: lload_0
      72: l2i
      73: i2b
      74: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      77: return

  public static void writeUint64(long, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: lload_0
       3: bipush        56
       5: lushr
       6: l2i
       7: i2b
       8: bastore
       9: aload_2
      10: iload_3
      11: iconst_1
      12: iadd
      13: lload_0
      14: bipush        48
      16: lushr
      17: l2i
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_2
      23: iadd
      24: lload_0
      25: bipush        40
      27: lushr
      28: l2i
      29: i2b
      30: bastore
      31: aload_2
      32: iload_3
      33: iconst_3
      34: iadd
      35: lload_0
      36: bipush        32
      38: lushr
      39: l2i
      40: i2b
      41: bastore
      42: aload_2
      43: iload_3
      44: iconst_4
      45: iadd
      46: lload_0
      47: bipush        24
      49: lushr
      50: l2i
      51: i2b
      52: bastore
      53: aload_2
      54: iload_3
      55: iconst_5
      56: iadd
      57: lload_0
      58: bipush        16
      60: lushr
      61: l2i
      62: i2b
      63: bastore
      64: aload_2
      65: iload_3
      66: bipush        6
      68: iadd
      69: lload_0
      70: bipush        8
      72: lushr
      73: l2i
      74: i2b
      75: bastore
      76: aload_2
      77: iload_3
      78: bipush        7
      80: iadd
      81: lload_0
      82: l2i
      83: i2b
      84: bastore
      85: return

  public static void writeOpaque8(byte[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #718                // Method checkUint8:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #747                // Method writeUint8:(ILjava/io/OutputStream;)V
      11: aload_1
      12: aload_0
      13: invokevirtual #639                // Method java/io/OutputStream.write:([B)V
      16: return

  public static void writeOpaque16(byte[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #716                // Method checkUint16:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #745                // Method writeUint16:(ILjava/io/OutputStream;)V
      11: aload_1
      12: aload_0
      13: invokevirtual #639                // Method java/io/OutputStream.write:([B)V
      16: return

  public static void writeOpaque24(byte[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #717                // Method checkUint24:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #746                // Method writeUint24:(ILjava/io/OutputStream;)V
      11: aload_1
      12: aload_0
      13: invokevirtual #639                // Method java/io/OutputStream.write:([B)V
      16: return

  public static void writeUint8Array(short[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: arraylength
       5: if_icmpge     21
       8: aload_0
       9: iload_2
      10: saload
      11: aload_1
      12: invokestatic  #748                // Method writeUint8:(SLjava/io/OutputStream;)V
      15: iinc          2, 1
      18: goto          2
      21: return

  public static void writeUint8Array(short[], byte[], int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: arraylength
       5: if_icmpge     25
       8: aload_0
       9: iload_3
      10: saload
      11: aload_1
      12: iload_2
      13: invokestatic  #731                // Method writeUint8:(S[BI)V
      16: iinc          2, 1
      19: iinc          3, 1
      22: goto          2
      25: return

  public static void writeUint8ArrayWithUint8Length(short[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #718                // Method checkUint8:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #747                // Method writeUint8:(ILjava/io/OutputStream;)V
      11: aload_0
      12: aload_1
      13: invokestatic  #750                // Method writeUint8Array:([SLjava/io/OutputStream;)V
      16: return

  public static void writeUint8ArrayWithUint8Length(short[], byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #718                // Method checkUint8:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: iload_2
       9: invokestatic  #723                // Method writeUint8:(I[BI)V
      12: aload_0
      13: aload_1
      14: iload_2
      15: iconst_1
      16: iadd
      17: invokestatic  #739                // Method writeUint8Array:([S[BI)V
      20: return

  public static void writeUint16Array(int[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: arraylength
       5: if_icmpge     21
       8: aload_0
       9: iload_2
      10: iaload
      11: aload_1
      12: invokestatic  #745                // Method writeUint16:(ILjava/io/OutputStream;)V
      15: iinc          2, 1
      18: goto          2
      21: return

  public static void writeUint16Array(int[], byte[], int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: arraylength
       5: if_icmpge     25
       8: aload_0
       9: iload_3
      10: iaload
      11: aload_1
      12: iload_2
      13: invokestatic  #722                // Method writeUint16:(I[BI)V
      16: iinc          2, 2
      19: iinc          3, 1
      22: goto          2
      25: return

  public static void writeUint16ArrayWithUint16Length(int[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_2
       1: aload_0
       2: arraylength
       3: imul
       4: istore_2
       5: iload_2
       6: invokestatic  #716                // Method checkUint16:(I)V
       9: iload_2
      10: aload_1
      11: invokestatic  #745                // Method writeUint16:(ILjava/io/OutputStream;)V
      14: aload_0
      15: aload_1
      16: invokestatic  #749                // Method writeUint16Array:([ILjava/io/OutputStream;)V
      19: return

  public static void writeUint16ArrayWithUint16Length(int[], byte[], int) throws java.io.IOException;
    Code:
       0: iconst_2
       1: aload_0
       2: arraylength
       3: imul
       4: istore_3
       5: iload_3
       6: invokestatic  #716                // Method checkUint16:(I)V
       9: iload_3
      10: aload_1
      11: iload_2
      12: invokestatic  #722                // Method writeUint16:(I[BI)V
      15: aload_0
      16: aload_1
      17: iload_2
      18: iconst_2
      19: iadd
      20: invokestatic  #737                // Method writeUint16Array:([I[BI)V
      23: return

  public static byte[] encodeOpaque8(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #718                // Method checkUint8:(I)V
       5: aload_0
       6: aload_0
       7: arraylength
       8: i2b
       9: invokestatic  #772                // Method org/bouncycastle/util/Arrays.prepend:([BB)[B
      12: areturn

  public static byte[] encodeUint8ArrayWithUint8Length(short[]) throws java.io.IOException;
    Code:
       0: iconst_1
       1: aload_0
       2: arraylength
       3: iadd
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #740                // Method writeUint8ArrayWithUint8Length:([S[BI)V
      13: aload_1
      14: areturn

  public static byte[] encodeUint16ArrayWithUint16Length(int[]) throws java.io.IOException;
    Code:
       0: iconst_2
       1: aload_0
       2: arraylength
       3: imul
       4: istore_1
       5: iconst_2
       6: iload_1
       7: iadd
       8: newarray       byte
      10: astore_2
      11: aload_0
      12: aload_2
      13: iconst_0
      14: invokestatic  #738                // Method writeUint16ArrayWithUint16Length:([I[BI)V
      17: aload_2
      18: areturn

  public static short readUint8(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #637                // Method java/io/InputStream.read:()I
       4: istore_1
       5: iload_1
       6: ifge          17
       9: new           #316                // class java/io/EOFException
      12: dup
      13: invokespecial #636                // Method java/io/EOFException."<init>":()V
      16: athrow
      17: iload_1
      18: i2s
      19: ireturn

  public static short readUint8(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: i2s
       8: ireturn

  public static int readUint16(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #637                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #637                // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: ifge          22
      14: new           #316                // class java/io/EOFException
      17: dup
      18: invokespecial #636                // Method java/io/EOFException."<init>":()V
      21: athrow
      22: iload_1
      23: bipush        8
      25: ishl
      26: iload_2
      27: ior
      28: ireturn

  public static int readUint16(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        8
       9: ishl
      10: istore_2
      11: iload_2
      12: aload_0
      13: iinc          1, 1
      16: iload_1
      17: baload
      18: sipush        255
      21: iand
      22: ior
      23: istore_2
      24: iload_2
      25: ireturn

  public static int readUint24(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #637                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #637                // Method java/io/InputStream.read:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #637                // Method java/io/InputStream.read:()I
      14: istore_3
      15: iload_3
      16: ifge          27
      19: new           #316                // class java/io/EOFException
      22: dup
      23: invokespecial #636                // Method java/io/EOFException."<init>":()V
      26: athrow
      27: iload_1
      28: bipush        16
      30: ishl
      31: iload_2
      32: bipush        8
      34: ishl
      35: ior
      36: iload_3
      37: ior
      38: ireturn

  public static int readUint24(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        16
       9: ishl
      10: istore_2
      11: iload_2
      12: aload_0
      13: iinc          1, 1
      16: iload_1
      17: baload
      18: sipush        255
      21: iand
      22: bipush        8
      24: ishl
      25: ior
      26: istore_2
      27: iload_2
      28: aload_0
      29: iinc          1, 1
      32: iload_1
      33: baload
      34: sipush        255
      37: iand
      38: ior
      39: istore_2
      40: iload_2
      41: ireturn

  public static long readUint32(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #637                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #637                // Method java/io/InputStream.read:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #637                // Method java/io/InputStream.read:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #637                // Method java/io/InputStream.read:()I
      19: istore        4
      21: iload         4
      23: ifge          34
      26: new           #316                // class java/io/EOFException
      29: dup
      30: invokespecial #636                // Method java/io/EOFException."<init>":()V
      33: athrow
      34: iload_1
      35: bipush        24
      37: ishl
      38: iload_2
      39: bipush        16
      41: ishl
      42: ior
      43: iload_3
      44: bipush        8
      46: ishl
      47: ior
      48: iload         4
      50: ior
      51: i2l
      52: ldc2_w        #309                // long 4294967295l
      55: land
      56: lreturn

  public static long readUint32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: istore_2
      11: iload_2
      12: aload_0
      13: iinc          1, 1
      16: iload_1
      17: baload
      18: sipush        255
      21: iand
      22: bipush        16
      24: ishl
      25: ior
      26: istore_2
      27: iload_2
      28: aload_0
      29: iinc          1, 1
      32: iload_1
      33: baload
      34: sipush        255
      37: iand
      38: bipush        8
      40: ishl
      41: ior
      42: istore_2
      43: iload_2
      44: aload_0
      45: iinc          1, 1
      48: iload_1
      49: baload
      50: sipush        255
      53: iand
      54: ior
      55: istore_2
      56: iload_2
      57: i2l
      58: ldc2_w        #309                // long 4294967295l
      61: land
      62: lreturn

  public static long readUint48(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #743                // Method readUint24:(Ljava/io/InputStream;)I
       4: istore_1
       5: aload_0
       6: invokestatic  #743                // Method readUint24:(Ljava/io/InputStream;)I
       9: istore_2
      10: iload_1
      11: i2l
      12: ldc2_w        #309                // long 4294967295l
      15: land
      16: bipush        24
      18: lshl
      19: iload_2
      20: i2l
      21: ldc2_w        #309                // long 4294967295l
      24: land
      25: lor
      26: lreturn

  public static long readUint48(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #732                // Method readUint24:([BI)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iconst_3
       9: iadd
      10: invokestatic  #732                // Method readUint24:([BI)I
      13: istore_3
      14: iload_2
      15: i2l
      16: ldc2_w        #309                // long 4294967295l
      19: land
      20: bipush        24
      22: lshl
      23: iload_3
      24: i2l
      25: ldc2_w        #309                // long 4294967295l
      28: land
      29: lor
      30: lreturn

  public static byte[] readAllOrNothing(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     9
       5: getstatic     #625                // Field EMPTY_BYTES:[B
       8: areturn
       9: iload_0
      10: newarray       byte
      12: astore_2
      13: aload_1
      14: aload_2
      15: invokestatic  #778                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      18: istore_3
      19: iload_3
      20: ifne          25
      23: aconst_null
      24: areturn
      25: iload_3
      26: iload_0
      27: if_icmpeq     38
      30: new           #316                // class java/io/EOFException
      33: dup
      34: invokespecial #636                // Method java/io/EOFException."<init>":()V
      37: athrow
      38: aload_2
      39: areturn

  public static byte[] readFully(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     9
       5: getstatic     #625                // Field EMPTY_BYTES:[B
       8: areturn
       9: iload_0
      10: newarray       byte
      12: astore_2
      13: iload_0
      14: aload_1
      15: aload_2
      16: invokestatic  #778                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      19: if_icmpeq     30
      22: new           #316                // class java/io/EOFException
      25: dup
      26: invokespecial #636                // Method java/io/EOFException."<init>":()V
      29: athrow
      30: aload_2
      31: areturn

  public static void readFully(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iload_2
       4: ifle          24
       7: iload_2
       8: aload_1
       9: aload_0
      10: invokestatic  #778                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      13: if_icmpeq     24
      16: new           #316                // class java/io/EOFException
      19: dup
      20: invokespecial #636                // Method java/io/EOFException."<init>":()V
      23: athrow
      24: return

  public static byte[] readOpaque8(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #744                // Method readUint8:(Ljava/io/InputStream;)S
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokestatic  #741                // Method readFully:(ILjava/io/InputStream;)[B
      10: areturn

  public static byte[] readOpaque16(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #742                // Method readUint16:(Ljava/io/InputStream;)I
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokestatic  #741                // Method readFully:(ILjava/io/InputStream;)[B
      10: areturn

  public static byte[] readOpaque24(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #743                // Method readUint24:(Ljava/io/InputStream;)I
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokestatic  #741                // Method readFully:(ILjava/io/InputStream;)[B
      10: areturn

  public static short[] readUint8Array(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: newarray       short
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_0
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_1
      14: invokestatic  #744                // Method readUint8:(Ljava/io/InputStream;)S
      17: sastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public static int[] readUint16Array(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: newarray       int
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_0
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_1
      14: invokestatic  #742                // Method readUint16:(Ljava/io/InputStream;)I
      17: iastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public static org.bouncycastle.crypto.tls.ProtocolVersion readVersion(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: baload
      12: sipush        255
      15: iand
      16: invokestatic  #690                // Method org/bouncycastle/crypto/tls/ProtocolVersion.get:(II)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      19: areturn

  public static org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #637                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #637                // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: ifge          22
      14: new           #316                // class java/io/EOFException
      17: dup
      18: invokespecial #636                // Method java/io/EOFException."<init>":()V
      21: athrow
      22: iload_1
      23: iload_2
      24: invokestatic  #690                // Method org/bouncycastle/crypto/tls/ProtocolVersion.get:(II)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      27: areturn

  public static int readVersionRaw(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: bipush        8
       5: ishl
       6: aload_0
       7: iload_1
       8: iconst_1
       9: iadd
      10: baload
      11: ior
      12: ireturn

  public static int readVersionRaw(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #637                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #637                // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: ifge          22
      14: new           #316                // class java/io/EOFException
      17: dup
      18: invokespecial #636                // Method java/io/EOFException."<init>":()V
      21: athrow
      22: iload_1
      23: bipush        8
      25: ishl
      26: iload_2
      27: ior
      28: ireturn

  public static org.bouncycastle.asn1.ASN1Primitive readASN1Object(byte[]) throws java.io.IOException;
    Code:
       0: new           #328                // class org/bouncycastle/asn1/ASN1InputStream
       3: dup
       4: aload_0
       5: invokespecial #654                // Method org/bouncycastle/asn1/ASN1InputStream."<init>":([B)V
       8: astore_1
       9: aload_1
      10: invokevirtual #655                // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      13: astore_2
      14: aconst_null
      15: aload_2
      16: if_acmpne     29
      19: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      22: dup
      23: bipush        50
      25: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      28: athrow
      29: aconst_null
      30: aload_1
      31: invokevirtual #655                // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      34: if_acmpeq     47
      37: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      40: dup
      41: bipush        50
      43: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      46: athrow
      47: aload_2
      48: areturn

  public static org.bouncycastle.asn1.ASN1Primitive readDERObject(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #754                // Method readASN1Object:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       4: astore_1
       5: aload_1
       6: ldc           #8                  // String DER
       8: invokevirtual #656                // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:(Ljava/lang/String;)[B
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokestatic  #774                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      17: ifne          30
      20: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      23: dup
      24: bipush        50
      26: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      29: athrow
      30: aload_1
      31: areturn

  public static void writeGMTUnixTime(byte[], int);
    Code:
       0: invokestatic  #644                // Method java/lang/System.currentTimeMillis:()J
       3: ldc2_w        #303                // long 1000l
       6: ldiv
       7: l2i
       8: istore_2
       9: aload_0
      10: iload_1
      11: iload_2
      12: bipush        24
      14: iushr
      15: i2b
      16: bastore
      17: aload_0
      18: iload_1
      19: iconst_1
      20: iadd
      21: iload_2
      22: bipush        16
      24: iushr
      25: i2b
      26: bastore
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: iload_2
      32: bipush        8
      34: iushr
      35: i2b
      36: bastore
      37: aload_0
      38: iload_1
      39: iconst_3
      40: iadd
      41: iload_2
      42: i2b
      43: bastore
      44: return

  public static void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #686                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMajorVersion:()I
       5: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
       8: aload_1
       9: aload_0
      10: invokevirtual #687                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMinorVersion:()I
      13: invokevirtual #638                // Method java/io/OutputStream.write:(I)V
      16: return

  public static void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #686                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMajorVersion:()I
       6: i2b
       7: bastore
       8: aload_1
       9: iload_2
      10: iconst_1
      11: iadd
      12: aload_0
      13: invokevirtual #687                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMinorVersion:()I
      16: i2b
      17: bastore
      18: return

  public static java.util.Vector getAllSignatureAlgorithms();
    Code:
       0: new           #327                // class java/util/Vector
       3: dup
       4: iconst_4
       5: invokespecial #650                // Method java/util/Vector."<init>":(I)V
       8: astore_0
       9: aload_0
      10: iconst_0
      11: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
      14: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      17: aload_0
      18: iconst_1
      19: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
      22: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      25: aload_0
      26: iconst_2
      27: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
      30: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      33: aload_0
      34: iconst_3
      35: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
      38: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      41: aload_0
      42: areturn

  public static java.util.Vector getDefaultDSSSignatureAlgorithms();
    Code:
       0: new           #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       3: dup
       4: iconst_2
       5: iconst_2
       6: invokespecial #701                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
       9: invokestatic  #768                // Method vectorOfOne:(Ljava/lang/Object;)Ljava/util/Vector;
      12: areturn

  public static java.util.Vector getDefaultECDSASignatureAlgorithms();
    Code:
       0: new           #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       3: dup
       4: iconst_2
       5: iconst_3
       6: invokespecial #701                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
       9: invokestatic  #768                // Method vectorOfOne:(Ljava/lang/Object;)Ljava/util/Vector;
      12: areturn

  public static java.util.Vector getDefaultRSASignatureAlgorithms();
    Code:
       0: new           #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       3: dup
       4: iconst_2
       5: iconst_1
       6: invokespecial #701                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
       9: invokestatic  #768                // Method vectorOfOne:(Ljava/lang/Object;)Ljava/util/Vector;
      12: areturn

  public static java.util.Vector getDefaultSupportedSignatureAlgorithms();
    Code:
       0: iconst_5
       1: newarray       short
       3: dup
       4: iconst_0
       5: iconst_2
       6: sastore
       7: dup
       8: iconst_1
       9: iconst_3
      10: sastore
      11: dup
      12: iconst_2
      13: iconst_4
      14: sastore
      15: dup
      16: iconst_3
      17: iconst_5
      18: sastore
      19: dup
      20: iconst_4
      21: bipush        6
      23: sastore
      24: astore_0
      25: iconst_3
      26: newarray       short
      28: dup
      29: iconst_0
      30: iconst_1
      31: sastore
      32: dup
      33: iconst_1
      34: iconst_2
      35: sastore
      36: dup
      37: iconst_2
      38: iconst_3
      39: sastore
      40: astore_1
      41: new           #327                // class java/util/Vector
      44: dup
      45: invokespecial #649                // Method java/util/Vector."<init>":()V
      48: astore_2
      49: iconst_0
      50: istore_3
      51: iload_3
      52: aload_1
      53: arraylength
      54: if_icmpge     97
      57: iconst_0
      58: istore        4
      60: iload         4
      62: aload_0
      63: arraylength
      64: if_icmpge     91
      67: aload_2
      68: new           #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      71: dup
      72: aload_0
      73: iload         4
      75: saload
      76: aload_1
      77: iload_3
      78: saload
      79: invokespecial #701                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
      82: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      85: iinc          4, 1
      88: goto          60
      91: iinc          3, 1
      94: goto          51
      97: aload_2
      98: areturn

  public static org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm getSignatureAndHashAlgorithm(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsSignerCredentials) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokestatic  #763                // Method isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       6: ifeq          30
       9: aload_1
      10: invokeinterface #785,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSignerCredentials.getSignatureAndHashAlgorithm:()Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;
      15: astore_2
      16: aload_2
      17: ifnonnull     30
      20: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      23: dup
      24: bipush        80
      26: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      29: athrow
      30: aload_2
      31: areturn

  public static byte[] getExtensionData(java.util.Hashtable, java.lang.Integer);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          19
       8: aload_0
       9: aload_1
      10: invokevirtual #646                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #313                // class "[B"
      16: checkcast     #313                // class "[B"
      19: areturn

  public static boolean hasExpectedEmptyExtensionData(java.util.Hashtable, java.lang.Integer, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #765                // Method getExtensionData:(Ljava/util/Hashtable;Ljava/lang/Integer;)[B
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_3
      13: arraylength
      14: ifeq          26
      17: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      20: dup
      21: iload_2
      22: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      25: athrow
      26: iconst_1
      27: ireturn

  public static org.bouncycastle.crypto.tls.TlsSession importSession(byte[], org.bouncycastle.crypto.tls.SessionParameters);
    Code:
       0: new           #362                // class org/bouncycastle/crypto/tls/TlsSessionImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #710                // Method org/bouncycastle/crypto/tls/TlsSessionImpl."<init>":([BLorg/bouncycastle/crypto/tls/SessionParameters;)V
       9: areturn

  public static boolean isSignatureAlgorithmsExtensionAllowed(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: getstatic     #624                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: aload_0
       4: invokevirtual #689                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       7: invokevirtual #691                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      10: ireturn

  public static void addSignatureAlgorithmsExtension(java.util.Hashtable, java.util.Vector) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #632                // Field EXT_signature_algorithms:Ljava/lang/Integer;
       4: aload_1
       5: invokestatic  #752                // Method createSignatureAlgorithmsExtension:(Ljava/util/Vector;)[B
       8: invokevirtual #647                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public static java.util.Vector getSignatureAlgorithmsExtension(java.util.Hashtable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #632                // Field EXT_signature_algorithms:Ljava/lang/Integer;
       4: invokestatic  #765                // Method getExtensionData:(Ljava/util/Hashtable;Ljava/lang/Integer;)[B
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: invokestatic  #753                // Method readSignatureAlgorithmsExtension:([B)Ljava/util/Vector;
      20: areturn

  public static byte[] createSignatureAlgorithmsExtension(java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #315                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #634                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: iconst_0
      10: aload_1
      11: invokestatic  #764                // Method encodeSupportedSignatureAlgorithms:(Ljava/util/Vector;ZLjava/io/OutputStream;)V
      14: aload_1
      15: invokevirtual #635                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      18: areturn

  public static java.util.Vector readSignatureAlgorithmsExtension(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #321                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #5                  // String \'extensionData\' cannot be null
      10: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #314                // class java/io/ByteArrayInputStream
      17: dup
      18: aload_0
      19: invokespecial #633                // Method java/io/ByteArrayInputStream."<init>":([B)V
      22: astore_1
      23: iconst_0
      24: aload_1
      25: invokestatic  #767                // Method parseSupportedSignatureAlgorithms:(ZLjava/io/InputStream;)Ljava/util/Vector;
      28: astore_2
      29: aload_1
      30: invokestatic  #708                // Method org/bouncycastle/crypto/tls/TlsProtocol.assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      33: aload_2
      34: areturn

  public static void encodeSupportedSignatureAlgorithms(java.util.Vector, boolean, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: invokevirtual #648                // Method java/util/Vector.size:()I
       8: iconst_1
       9: if_icmplt     21
      12: aload_0
      13: invokevirtual #648                // Method java/util/Vector.size:()I
      16: ldc           #1                  // int 32768
      18: if_icmplt     31
      21: new           #321                // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #7                  // String \'supportedSignatureAlgorithms\' must have length from 1 to (2^15 - 1)
      27: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iconst_2
      32: aload_0
      33: invokevirtual #648                // Method java/util/Vector.size:()I
      36: imul
      37: istore_3
      38: iload_3
      39: invokestatic  #716                // Method checkUint16:(I)V
      42: iload_3
      43: aload_2
      44: invokestatic  #745                // Method writeUint16:(ILjava/io/OutputStream;)V
      47: iconst_0
      48: istore        4
      50: iload         4
      52: aload_0
      53: invokevirtual #648                // Method java/util/Vector.size:()I
      56: if_icmpge     104
      59: aload_0
      60: iload         4
      62: invokevirtual #651                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      65: checkcast     #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      68: astore        5
      70: iload_1
      71: ifne          92
      74: aload         5
      76: invokevirtual #700                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      79: ifne          92
      82: new           #321                // class java/lang/IllegalArgumentException
      85: dup
      86: ldc           #10                 // String SignatureAlgorithm.anonymous MUST NOT appear in the signature_algorithms extension
      88: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload         5
      94: aload_2
      95: invokevirtual #702                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.encode:(Ljava/io/OutputStream;)V
      98: iinc          4, 1
     101: goto          50
     104: return

  public static java.util.Vector parseSupportedSignatureAlgorithms(boolean, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #742                // Method readUint16:(Ljava/io/InputStream;)I
       4: istore_2
       5: iload_2
       6: iconst_2
       7: if_icmplt     16
      10: iload_2
      11: iconst_1
      12: iand
      13: ifeq          26
      16: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      19: dup
      20: bipush        50
      22: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      25: athrow
      26: iload_2
      27: iconst_2
      28: idiv
      29: istore_3
      30: new           #327                // class java/util/Vector
      33: dup
      34: iload_3
      35: invokespecial #650                // Method java/util/Vector."<init>":(I)V
      38: astore        4
      40: iconst_0
      41: istore        5
      43: iload         5
      45: iload_3
      46: if_icmpge     90
      49: aload_1
      50: invokestatic  #703                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.parse:(Ljava/io/InputStream;)Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;
      53: astore        6
      55: iload_0
      56: ifne          77
      59: aload         6
      61: invokevirtual #700                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      64: ifne          77
      67: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      70: dup
      71: bipush        47
      73: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      76: athrow
      77: aload         4
      79: aload         6
      81: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      84: iinc          5, 1
      87: goto          43
      90: aload         4
      92: areturn

  public static void verifySupportedSignatureAlgorithm(java.util.Vector, org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: invokevirtual #648                // Method java/util/Vector.size:()I
       8: iconst_1
       9: if_icmplt     21
      12: aload_0
      13: invokevirtual #648                // Method java/util/Vector.size:()I
      16: ldc           #1                  // int 32768
      18: if_icmplt     31
      21: new           #321                // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #7                  // String \'supportedSignatureAlgorithms\' must have length from 1 to (2^15 - 1)
      27: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #321                // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #6                  // String \'signatureAlgorithm\' cannot be null
      41: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_1
      46: invokevirtual #700                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      49: ifeq          100
      52: iconst_0
      53: istore_2
      54: iload_2
      55: aload_0
      56: invokevirtual #648                // Method java/util/Vector.size:()I
      59: if_icmpge     100
      62: aload_0
      63: iload_2
      64: invokevirtual #651                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      67: checkcast     #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      70: astore_3
      71: aload_3
      72: invokevirtual #699                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      75: aload_1
      76: invokevirtual #699                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      79: if_icmpne     94
      82: aload_3
      83: invokevirtual #700                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      86: aload_1
      87: invokevirtual #700                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      90: if_icmpne     94
      93: return
      94: iinc          2, 1
      97: goto          54
     100: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     103: dup
     104: bipush        47
     106: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     109: athrow

  public static byte[] PRF(org.bouncycastle.crypto.tls.TlsContext, byte[], java.lang.String, byte[], int);
    Code:
       0: aload_0
       1: invokeinterface #782,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       6: astore        5
       8: aload         5
      10: invokevirtual #688                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
      13: ifeq          26
      16: new           #322                // class java/lang/IllegalStateException
      19: dup
      20: ldc           #9                  // String No PRF available for SSLv3 session
      22: invokespecial #641                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_2
      27: invokestatic  #777                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
      30: astore        6
      32: aload         6
      34: aload_3
      35: invokestatic  #734                // Method concat:([B[B)[B
      38: astore        7
      40: aload_0
      41: invokeinterface #783,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      46: invokevirtual #692                // Method org/bouncycastle/crypto/tls/SecurityParameters.getPrfAlgorithm:()I
      49: istore        8
      51: iload         8
      53: ifne          67
      56: aload_1
      57: aload         6
      59: aload         7
      61: iload         4
      63: invokestatic  #736                // Method PRF_legacy:([B[B[BI)[B
      66: areturn
      67: iload         8
      69: invokestatic  #756                // Method createPRFHash:(I)Lorg/bouncycastle/crypto/Digest;
      72: astore        9
      74: iload         4
      76: newarray       byte
      78: astore        10
      80: aload         9
      82: aload_1
      83: aload         7
      85: aload         10
      87: invokestatic  #757                // Method hmac_hash:(Lorg/bouncycastle/crypto/Digest;[B[B[B)V
      90: aload         10
      92: areturn

  public static byte[] PRF_legacy(byte[], java.lang.String, byte[], int);
    Code:
       0: aload_1
       1: invokestatic  #777                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
       4: astore        4
       6: aload         4
       8: aload_2
       9: invokestatic  #734                // Method concat:([B[B)[B
      12: astore        5
      14: aload_0
      15: aload         4
      17: aload         5
      19: iload_3
      20: invokestatic  #736                // Method PRF_legacy:([B[B[BI)[B
      23: areturn

  static byte[] PRF_legacy(byte[], byte[], byte[], int);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: iadd
       4: iconst_2
       5: idiv
       6: istore        4
       8: iload         4
      10: newarray       byte
      12: astore        5
      14: iload         4
      16: newarray       byte
      18: astore        6
      20: aload_0
      21: iconst_0
      22: aload         5
      24: iconst_0
      25: iload         4
      27: invokestatic  #645                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: aload_0
      31: aload_0
      32: arraylength
      33: iload         4
      35: isub
      36: aload         6
      38: iconst_0
      39: iload         4
      41: invokestatic  #645                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: iload_3
      45: newarray       byte
      47: astore        7
      49: iload_3
      50: newarray       byte
      52: astore        8
      54: iconst_1
      55: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      58: aload         5
      60: aload_2
      61: aload         7
      63: invokestatic  #757                // Method hmac_hash:(Lorg/bouncycastle/crypto/Digest;[B[B[B)V
      66: iconst_2
      67: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      70: aload         6
      72: aload_2
      73: aload         8
      75: invokestatic  #757                // Method hmac_hash:(Lorg/bouncycastle/crypto/Digest;[B[B[B)V
      78: iconst_0
      79: istore        9
      81: iload         9
      83: iload_3
      84: if_icmpge     107
      87: aload         7
      89: iload         9
      91: dup2
      92: baload
      93: aload         8
      95: iload         9
      97: baload
      98: ixor
      99: i2b
     100: bastore
     101: iinc          9, 1
     104: goto          81
     107: aload         7
     109: areturn

  static byte[] concat(byte[], byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: aload_1
       3: arraylength
       4: iadd
       5: newarray       byte
       7: astore_2
       8: aload_0
       9: iconst_0
      10: aload_2
      11: iconst_0
      12: aload_0
      13: arraylength
      14: invokestatic  #645                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_1
      18: iconst_0
      19: aload_2
      20: aload_0
      21: arraylength
      22: aload_1
      23: arraylength
      24: invokestatic  #645                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_2
      28: areturn

  static void hmac_hash(org.bouncycastle.crypto.Digest, byte[], byte[], byte[]);
    Code:
       0: new           #343                // class org/bouncycastle/crypto/macs/HMac
       3: dup
       4: aload_0
       5: invokespecial #678                // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
       8: astore        4
      10: aload         4
      12: new           #347                // class org/bouncycastle/crypto/params/KeyParameter
      15: dup
      16: aload_1
      17: invokespecial #680                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      20: invokevirtual #677                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      23: aload_2
      24: astore        5
      26: aload_0
      27: invokeinterface #779,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      32: istore        6
      34: aload_3
      35: arraylength
      36: iload         6
      38: iadd
      39: iconst_1
      40: isub
      41: iload         6
      43: idiv
      44: istore        7
      46: aload         4
      48: invokevirtual #674                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      51: newarray       byte
      53: astore        8
      55: aload         4
      57: invokevirtual #674                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      60: newarray       byte
      62: astore        9
      64: iconst_0
      65: istore        10
      67: iload         10
      69: iload         7
      71: if_icmpge     158
      74: aload         4
      76: aload         5
      78: iconst_0
      79: aload         5
      81: arraylength
      82: invokevirtual #676                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
      85: aload         4
      87: aload         8
      89: iconst_0
      90: invokevirtual #675                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
      93: pop
      94: aload         8
      96: astore        5
      98: aload         4
     100: aload         5
     102: iconst_0
     103: aload         5
     105: arraylength
     106: invokevirtual #676                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     109: aload         4
     111: aload_2
     112: iconst_0
     113: aload_2
     114: arraylength
     115: invokevirtual #676                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     118: aload         4
     120: aload         9
     122: iconst_0
     123: invokevirtual #675                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     126: pop
     127: aload         9
     129: iconst_0
     130: aload_3
     131: iload         6
     133: iload         10
     135: imul
     136: iload         6
     138: aload_3
     139: arraylength
     140: iload         6
     142: iload         10
     144: imul
     145: isub
     146: invokestatic  #642                // Method java/lang/Math.min:(II)I
     149: invokestatic  #645                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     152: iinc          10, 1
     155: goto          67
     158: return

  static void validateKeyUsage(org.bouncycastle.asn1.x509.Certificate, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #658                // Method org/bouncycastle/asn1/x509/Certificate.getTBSCertificate:()Lorg/bouncycastle/asn1/x509/TBSCertificate;
       4: invokevirtual #661                // Method org/bouncycastle/asn1/x509/TBSCertificate.getExtensions:()Lorg/bouncycastle/asn1/x509/Extensions;
       7: astore_2
       8: aload_2
       9: ifnull        51
      12: aload_2
      13: invokestatic  #660                // Method org/bouncycastle/asn1/x509/KeyUsage.fromExtensions:(Lorg/bouncycastle/asn1/x509/Extensions;)Lorg/bouncycastle/asn1/x509/KeyUsage;
      16: astore_3
      17: aload_3
      18: ifnull        51
      21: aload_3
      22: invokevirtual #659                // Method org/bouncycastle/asn1/x509/KeyUsage.getBytes:()[B
      25: iconst_0
      26: baload
      27: sipush        255
      30: iand
      31: istore        4
      33: iload         4
      35: iload_1
      36: iand
      37: iload_1
      38: if_icmpeq     51
      41: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      44: dup
      45: bipush        46
      47: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      50: athrow
      51: return

  static byte[] calculateKeyBlock(org.bouncycastle.crypto.tls.TlsContext, int);
    Code:
       0: aload_0
       1: invokeinterface #783,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
       6: astore_2
       7: aload_2
       8: invokevirtual #696                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
      11: astore_3
      12: aload_2
      13: invokevirtual #697                // Method org/bouncycastle/crypto/tls/SecurityParameters.getServerRandom:()[B
      16: aload_2
      17: invokevirtual #695                // Method org/bouncycastle/crypto/tls/SecurityParameters.getClientRandom:()[B
      20: invokestatic  #734                // Method concat:([B[B)[B
      23: astore        4
      25: aload_0
      26: invokestatic  #762                // Method isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      29: ifeq          40
      32: aload_3
      33: aload         4
      35: iload_1
      36: invokestatic  #735                // Method calculateKeyBlock_SSL:([B[BI)[B
      39: areturn
      40: aload_0
      41: aload_3
      42: ldc           #12                 // String key expansion
      44: aload         4
      46: iload_1
      47: invokestatic  #766                // Method PRF:(Lorg/bouncycastle/crypto/tls/TlsContext;[BLjava/lang/String;[BI)[B
      50: areturn

  static byte[] calculateKeyBlock_SSL(byte[], byte[], int);
    Code:
       0: iconst_1
       1: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       4: astore_3
       5: iconst_2
       6: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       9: astore        4
      11: aload_3
      12: invokeinterface #779,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      17: istore        5
      19: aload         4
      21: invokeinterface #779,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      26: newarray       byte
      28: astore        6
      30: iload_2
      31: iload         5
      33: iadd
      34: newarray       byte
      36: astore        7
      38: iconst_0
      39: istore        8
      41: iconst_0
      42: istore        9
      44: iload         9
      46: iload_2
      47: if_icmpge     150
      50: getstatic     #631                // Field SSL3_CONST:[[B
      53: iload         8
      55: aaload
      56: astore        10
      58: aload         4
      60: aload         10
      62: iconst_0
      63: aload         10
      65: arraylength
      66: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      71: aload         4
      73: aload_0
      74: iconst_0
      75: aload_0
      76: arraylength
      77: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      82: aload         4
      84: aload_1
      85: iconst_0
      86: aload_1
      87: arraylength
      88: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      93: aload         4
      95: aload         6
      97: iconst_0
      98: invokeinterface #780,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     103: pop
     104: aload_3
     105: aload_0
     106: iconst_0
     107: aload_0
     108: arraylength
     109: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     114: aload_3
     115: aload         6
     117: iconst_0
     118: aload         6
     120: arraylength
     121: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     126: aload_3
     127: aload         7
     129: iload         9
     131: invokeinterface #780,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     136: pop
     137: iload         9
     139: iload         5
     141: iadd
     142: istore        9
     144: iinc          8, 1
     147: goto          44
     150: aload         7
     152: iconst_0
     153: iload_2
     154: invokestatic  #773                // Method org/bouncycastle/util/Arrays.copyOfRange:([BII)[B
     157: areturn

  static byte[] calculateMasterSecret(org.bouncycastle.crypto.tls.TlsContext, byte[]);
    Code:
       0: aload_0
       1: invokeinterface #783,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
       6: astore_2
       7: aload_2
       8: invokevirtual #694                // Method org/bouncycastle/crypto/tls/SecurityParameters.isExtendedMasterSecret:()Z
      11: ifeq          22
      14: aload_2
      15: invokevirtual #698                // Method org/bouncycastle/crypto/tls/SecurityParameters.getSessionHash:()[B
      18: astore_3
      19: goto          34
      22: aload_2
      23: invokevirtual #695                // Method org/bouncycastle/crypto/tls/SecurityParameters.getClientRandom:()[B
      26: aload_2
      27: invokevirtual #697                // Method org/bouncycastle/crypto/tls/SecurityParameters.getServerRandom:()[B
      30: invokestatic  #734                // Method concat:([B[B)[B
      33: astore_3
      34: aload_0
      35: invokestatic  #762                // Method isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      38: ifeq          47
      41: aload_1
      42: aload_3
      43: invokestatic  #733                // Method calculateMasterSecret_SSL:([B[B)[B
      46: areturn
      47: aload_2
      48: invokevirtual #694                // Method org/bouncycastle/crypto/tls/SecurityParameters.isExtendedMasterSecret:()Z
      51: ifeq          59
      54: ldc           #11                 // String extended master secret
      56: goto          61
      59: ldc           #14                 // String master secret
      61: astore        4
      63: aload_0
      64: aload_1
      65: aload         4
      67: aload_3
      68: bipush        48
      70: invokestatic  #766                // Method PRF:(Lorg/bouncycastle/crypto/tls/TlsContext;[BLjava/lang/String;[BI)[B
      73: areturn

  static byte[] calculateMasterSecret_SSL(byte[], byte[]);
    Code:
       0: iconst_1
       1: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       4: astore_2
       5: iconst_2
       6: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       9: astore_3
      10: aload_2
      11: invokeinterface #779,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      16: istore        4
      18: aload_3
      19: invokeinterface #779,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      24: newarray       byte
      26: astore        5
      28: iload         4
      30: iconst_3
      31: imul
      32: newarray       byte
      34: astore        6
      36: iconst_0
      37: istore        7
      39: iconst_0
      40: istore        8
      42: iload         8
      44: iconst_3
      45: if_icmpge     144
      48: getstatic     #631                // Field SSL3_CONST:[[B
      51: iload         8
      53: aaload
      54: astore        9
      56: aload_3
      57: aload         9
      59: iconst_0
      60: aload         9
      62: arraylength
      63: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      68: aload_3
      69: aload_0
      70: iconst_0
      71: aload_0
      72: arraylength
      73: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      78: aload_3
      79: aload_1
      80: iconst_0
      81: aload_1
      82: arraylength
      83: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      88: aload_3
      89: aload         5
      91: iconst_0
      92: invokeinterface #780,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      97: pop
      98: aload_2
      99: aload_0
     100: iconst_0
     101: aload_0
     102: arraylength
     103: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     108: aload_2
     109: aload         5
     111: iconst_0
     112: aload         5
     114: arraylength
     115: invokeinterface #781,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     120: aload_2
     121: aload         6
     123: iload         7
     125: invokeinterface #780,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     130: pop
     131: iload         7
     133: iload         4
     135: iadd
     136: istore        7
     138: iinc          8, 1
     141: goto          42
     144: aload         6
     146: areturn

  static byte[] calculateVerifyData(org.bouncycastle.crypto.tls.TlsContext, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: invokestatic  #762                // Method isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       4: ifeq          9
       7: aload_2
       8: areturn
       9: aload_0
      10: invokeinterface #783,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      15: astore_3
      16: aload_3
      17: invokevirtual #696                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
      20: astore        4
      22: aload_3
      23: invokevirtual #693                // Method org/bouncycastle/crypto/tls/SecurityParameters.getVerifyDataLength:()I
      26: istore        5
      28: aload_0
      29: aload         4
      31: aload_1
      32: aload_2
      33: iload         5
      35: invokestatic  #766                // Method PRF:(Lorg/bouncycastle/crypto/tls/TlsContext;[BLjava/lang/String;[BI)[B
      38: areturn

  public static org.bouncycastle.crypto.Digest createHash(short);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 48
                     3: 56
                     4: 64
                     5: 72
                     6: 80
               default: 88
          }
      40: new           #337                // class org/bouncycastle/crypto/digests/MD5Digest
      43: dup
      44: invokespecial #662                // Method org/bouncycastle/crypto/digests/MD5Digest."<init>":()V
      47: areturn
      48: new           #338                // class org/bouncycastle/crypto/digests/SHA1Digest
      51: dup
      52: invokespecial #664                // Method org/bouncycastle/crypto/digests/SHA1Digest."<init>":()V
      55: areturn
      56: new           #339                // class org/bouncycastle/crypto/digests/SHA224Digest
      59: dup
      60: invokespecial #666                // Method org/bouncycastle/crypto/digests/SHA224Digest."<init>":()V
      63: areturn
      64: new           #340                // class org/bouncycastle/crypto/digests/SHA256Digest
      67: dup
      68: invokespecial #668                // Method org/bouncycastle/crypto/digests/SHA256Digest."<init>":()V
      71: areturn
      72: new           #341                // class org/bouncycastle/crypto/digests/SHA384Digest
      75: dup
      76: invokespecial #670                // Method org/bouncycastle/crypto/digests/SHA384Digest."<init>":()V
      79: areturn
      80: new           #342                // class org/bouncycastle/crypto/digests/SHA512Digest
      83: dup
      84: invokespecial #672                // Method org/bouncycastle/crypto/digests/SHA512Digest."<init>":()V
      87: areturn
      88: new           #321                // class java/lang/IllegalArgumentException
      91: dup
      92: ldc           #15                 // String unknown HashAlgorithm
      94: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow

  public static org.bouncycastle.crypto.Digest createHash(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #350                // class org/bouncycastle/crypto/tls/CombinedHash
       7: dup
       8: invokespecial #683                // Method org/bouncycastle/crypto/tls/CombinedHash."<init>":()V
      11: goto          21
      14: aload_0
      15: invokevirtual #699                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      18: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      21: areturn

  public static org.bouncycastle.crypto.Digest cloneHash(short, org.bouncycastle.crypto.Digest);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 52
                     3: 64
                     4: 76
                     5: 88
                     6: 100
               default: 112
          }
      40: new           #337                // class org/bouncycastle/crypto/digests/MD5Digest
      43: dup
      44: aload_1
      45: checkcast     #337                // class org/bouncycastle/crypto/digests/MD5Digest
      48: invokespecial #663                // Method org/bouncycastle/crypto/digests/MD5Digest."<init>":(Lorg/bouncycastle/crypto/digests/MD5Digest;)V
      51: areturn
      52: new           #338                // class org/bouncycastle/crypto/digests/SHA1Digest
      55: dup
      56: aload_1
      57: checkcast     #338                // class org/bouncycastle/crypto/digests/SHA1Digest
      60: invokespecial #665                // Method org/bouncycastle/crypto/digests/SHA1Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA1Digest;)V
      63: areturn
      64: new           #339                // class org/bouncycastle/crypto/digests/SHA224Digest
      67: dup
      68: aload_1
      69: checkcast     #339                // class org/bouncycastle/crypto/digests/SHA224Digest
      72: invokespecial #667                // Method org/bouncycastle/crypto/digests/SHA224Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA224Digest;)V
      75: areturn
      76: new           #340                // class org/bouncycastle/crypto/digests/SHA256Digest
      79: dup
      80: aload_1
      81: checkcast     #340                // class org/bouncycastle/crypto/digests/SHA256Digest
      84: invokespecial #669                // Method org/bouncycastle/crypto/digests/SHA256Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA256Digest;)V
      87: areturn
      88: new           #341                // class org/bouncycastle/crypto/digests/SHA384Digest
      91: dup
      92: aload_1
      93: checkcast     #341                // class org/bouncycastle/crypto/digests/SHA384Digest
      96: invokespecial #671                // Method org/bouncycastle/crypto/digests/SHA384Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA384Digest;)V
      99: areturn
     100: new           #342                // class org/bouncycastle/crypto/digests/SHA512Digest
     103: dup
     104: aload_1
     105: checkcast     #342                // class org/bouncycastle/crypto/digests/SHA512Digest
     108: invokespecial #673                // Method org/bouncycastle/crypto/digests/SHA512Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA512Digest;)V
     111: areturn
     112: new           #321                // class java/lang/IllegalArgumentException
     115: dup
     116: ldc           #15                 // String unknown HashAlgorithm
     118: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow

  public static org.bouncycastle.crypto.Digest createPRFHash(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 1
                     0: 20
               default: 28
          }
      20: new           #350                // class org/bouncycastle/crypto/tls/CombinedHash
      23: dup
      24: invokespecial #683                // Method org/bouncycastle/crypto/tls/CombinedHash."<init>":()V
      27: areturn
      28: iload_0
      29: invokestatic  #715                // Method getHashAlgorithmForPRFAlgorithm:(I)S
      32: invokestatic  #758                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      35: areturn

  public static org.bouncycastle.crypto.Digest clonePRFHash(int, org.bouncycastle.crypto.Digest);
    Code:
       0: iload_0
       1: lookupswitch  { // 1
                     0: 20
               default: 32
          }
      20: new           #350                // class org/bouncycastle/crypto/tls/CombinedHash
      23: dup
      24: aload_1
      25: checkcast     #350                // class org/bouncycastle/crypto/tls/CombinedHash
      28: invokespecial #684                // Method org/bouncycastle/crypto/tls/CombinedHash."<init>":(Lorg/bouncycastle/crypto/tls/CombinedHash;)V
      31: areturn
      32: iload_0
      33: invokestatic  #715                // Method getHashAlgorithmForPRFAlgorithm:(I)S
      36: aload_1
      37: invokestatic  #769                // Method cloneHash:(SLorg/bouncycastle/crypto/Digest;)Lorg/bouncycastle/crypto/Digest;
      40: areturn

  public static short getHashAlgorithmForPRFAlgorithm(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 38
                     2: 40
               default: 42
          }
      28: new           #321                // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #13                 // String legacy PRF not a valid algorithm
      34: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iconst_4
      39: ireturn
      40: iconst_5
      41: ireturn
      42: new           #321                // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #16                 // String unknown PRFAlgorithm
      48: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow

  public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOIDForHashAlgorithm(short);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 44
                     3: 48
                     4: 52
                     5: 56
                     6: 60
               default: 64
          }
      40: getstatic     #620                // Field org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.md5:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      43: areturn
      44: getstatic     #621                // Field org/bouncycastle/asn1/x509/X509ObjectIdentifiers.id_SHA1:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      47: areturn
      48: getstatic     #616                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha224:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      51: areturn
      52: getstatic     #617                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha256:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      55: areturn
      56: getstatic     #618                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha384:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      59: areturn
      60: getstatic     #619                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha512:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      63: areturn
      64: new           #321                // class java/lang/IllegalArgumentException
      67: dup
      68: ldc           #15                 // String unknown HashAlgorithm
      70: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow

  static short getClientCertificateType(org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #681                // Method org/bouncycastle/crypto/tls/Certificate.isEmpty:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: iconst_0
      11: invokevirtual #682                // Method org/bouncycastle/crypto/tls/Certificate.getCertificateAt:(I)Lorg/bouncycastle/asn1/x509/Certificate;
      14: astore_2
      15: aload_2
      16: invokevirtual #657                // Method org/bouncycastle/asn1/x509/Certificate.getSubjectPublicKeyInfo:()Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      19: astore_3
      20: aload_3
      21: invokestatic  #770                // Method org/bouncycastle/crypto/util/PublicKeyFactory.createKey:(Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      24: astore        4
      26: aload         4
      28: invokevirtual #679                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      31: ifeq          44
      34: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      37: dup
      38: bipush        80
      40: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      43: athrow
      44: aload         4
      46: instanceof    #348                // class org/bouncycastle/crypto/params/RSAKeyParameters
      49: ifeq          61
      52: aload_2
      53: sipush        128
      56: invokestatic  #755                // Method validateKeyUsage:(Lorg/bouncycastle/asn1/x509/Certificate;I)V
      59: iconst_1
      60: ireturn
      61: aload         4
      63: instanceof    #345                // class org/bouncycastle/crypto/params/DSAPublicKeyParameters
      66: ifeq          78
      69: aload_2
      70: sipush        128
      73: invokestatic  #755                // Method validateKeyUsage:(Lorg/bouncycastle/asn1/x509/Certificate;I)V
      76: iconst_2
      77: ireturn
      78: aload         4
      80: instanceof    #346                // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      83: ifeq          96
      86: aload_2
      87: sipush        128
      90: invokestatic  #755                // Method validateKeyUsage:(Lorg/bouncycastle/asn1/x509/Certificate;I)V
      93: bipush        64
      95: ireturn
      96: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      99: dup
     100: bipush        43
     102: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     105: athrow
     106: astore        4
     108: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     111: dup
     112: bipush        43
     114: aload         4
     116: invokespecial #707                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(SLjava/lang/Throwable;)V
     119: athrow
    Exception table:
       from    to  target type
          20    60   106   Class java/lang/Exception
          61    77   106   Class java/lang/Exception
          78    95   106   Class java/lang/Exception
          96   106   106   Class java/lang/Exception

  static void trackHashAlgorithms(org.bouncycastle.crypto.tls.TlsHandshakeHash, java.util.Vector);
    Code:
       0: aload_1
       1: ifnull        51
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: invokevirtual #648                // Method java/util/Vector.size:()I
      11: if_icmpge     51
      14: aload_1
      15: iload_2
      16: invokevirtual #651                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      19: checkcast     #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      22: astore_3
      23: aload_3
      24: invokevirtual #699                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      27: istore        4
      29: iload         4
      31: invokestatic  #685                // Method org/bouncycastle/crypto/tls/HashAlgorithm.isRecognized:(S)Z
      34: ifeq          45
      37: aload_0
      38: iload         4
      40: invokeinterface #784,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.trackHashAlgorithm:(S)V
      45: iinc          2, 1
      48: goto          6
      51: return

  public static boolean hasSigningCapability(short);
    Code:
       0: iload_0
       1: lookupswitch  { // 3
                     1: 36
                     2: 36
                    64: 36
               default: 38
          }
      36: iconst_1
      37: ireturn
      38: iconst_0
      39: ireturn

  public static org.bouncycastle.crypto.tls.TlsSigner createTlsSigner(short);
    Code:
       0: iload_0
       1: lookupswitch  { // 3
                     1: 52
                     2: 36
                    64: 44
               default: 60
          }
      36: new           #356                // class org/bouncycastle/crypto/tls/TlsDSSSigner
      39: dup
      40: invokespecial #704                // Method org/bouncycastle/crypto/tls/TlsDSSSigner."<init>":()V
      43: areturn
      44: new           #357                // class org/bouncycastle/crypto/tls/TlsECDSASigner
      47: dup
      48: invokespecial #705                // Method org/bouncycastle/crypto/tls/TlsECDSASigner."<init>":()V
      51: areturn
      52: new           #361                // class org/bouncycastle/crypto/tls/TlsRSASigner
      55: dup
      56: invokespecial #709                // Method org/bouncycastle/crypto/tls/TlsRSASigner."<init>":()V
      59: areturn
      60: new           #321                // class java/lang/IllegalArgumentException
      63: dup
      64: ldc           #4                  // String \'clientCertificateType\' is not a type with signing capability
      66: invokespecial #640                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow

  private static byte[][] genSSL3Const();
    Code:
       0: bipush        10
       2: istore_0
       3: iload_0
       4: anewarray     #313                // class "[B"
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: iload_0
      12: if_icmpge     40
      15: iload_2
      16: iconst_1
      17: iadd
      18: newarray       byte
      20: astore_3
      21: aload_3
      22: bipush        65
      24: iload_2
      25: iadd
      26: i2b
      27: invokestatic  #771                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      30: aload_1
      31: iload_2
      32: aload_3
      33: aastore
      34: iinc          2, 1
      37: goto          10
      40: aload_1
      41: areturn

  private static java.util.Vector vectorOfOne(java.lang.Object);
    Code:
       0: new           #327                // class java/util/Vector
       3: dup
       4: iconst_1
       5: invokespecial #650                // Method java/util/Vector."<init>":(I)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      14: aload_1
      15: areturn

  public static int getCipherType(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #713                // Method getEncryptionAlgorithm:(I)I
       4: tableswitch   { // 0 to 104
                     0: 444
                     1: 444
                     2: 444
                     3: 442
                     4: 442
                     5: 442
                     6: 442
                     7: 442
                     8: 442
                     9: 442
                    10: 440
                    11: 440
                    12: 442
                    13: 442
                    14: 442
                    15: 440
                    16: 440
                    17: 440
                    18: 440
                    19: 440
                    20: 440
                    21: 440
                    22: 446
                    23: 446
                    24: 446
                    25: 446
                    26: 446
                    27: 446
                    28: 446
                    29: 446
                    30: 446
                    31: 446
                    32: 446
                    33: 446
                    34: 446
                    35: 446
                    36: 446
                    37: 446
                    38: 446
                    39: 446
                    40: 446
                    41: 446
                    42: 446
                    43: 446
                    44: 446
                    45: 446
                    46: 446
                    47: 446
                    48: 446
                    49: 446
                    50: 446
                    51: 446
                    52: 446
                    53: 446
                    54: 446
                    55: 446
                    56: 446
                    57: 446
                    58: 446
                    59: 446
                    60: 446
                    61: 446
                    62: 446
                    63: 446
                    64: 446
                    65: 446
                    66: 446
                    67: 446
                    68: 446
                    69: 446
                    70: 446
                    71: 446
                    72: 446
                    73: 446
                    74: 446
                    75: 446
                    76: 446
                    77: 446
                    78: 446
                    79: 446
                    80: 446
                    81: 446
                    82: 446
                    83: 446
                    84: 446
                    85: 446
                    86: 446
                    87: 446
                    88: 446
                    89: 446
                    90: 446
                    91: 446
                    92: 446
                    93: 446
                    94: 446
                    95: 446
                    96: 446
                    97: 446
                    98: 446
                    99: 446
                   100: 446
                   101: 446
                   102: 446
                   103: 440
                   104: 440
               default: 446
          }
     440: iconst_2
     441: ireturn
     442: iconst_1
     443: ireturn
     444: iconst_0
     445: ireturn
     446: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     449: dup
     450: bipush        80
     452: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     455: athrow

  public static int getEncryptionAlgorithm(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: lookupswitch  { // 251
                     1: 2068
                     2: 2070
                     4: 2076
                     5: 2078
                    10: 2020
                    13: 2020
                    16: 2020
                    19: 2020
                    22: 2020
                    24: 2076
                    27: 2020
                    44: 2070
                    45: 2070
                    46: 2070
                    47: 2023
                    48: 2023
                    49: 2023
                    50: 2023
                    51: 2023
                    52: 2023
                    53: 2038
                    54: 2038
                    55: 2038
                    56: 2038
                    57: 2038
                    58: 2038
                    59: 2072
                    60: 2023
                    61: 2038
                    62: 2023
                    63: 2023
                    64: 2023
                    65: 2053
                    66: 2053
                    67: 2053
                    68: 2053
                    69: 2053
                    70: 2053
                   103: 2023
                   104: 2038
                   105: 2038
                   106: 2038
                   107: 2038
                   108: 2023
                   109: 2038
                   132: 2059
                   133: 2059
                   134: 2059
                   135: 2059
                   136: 2059
                   137: 2059
                   138: 2078
                   139: 2020
                   140: 2023
                   141: 2038
                   142: 2078
                   143: 2020
                   144: 2023
                   145: 2038
                   146: 2078
                   147: 2020
                   148: 2023
                   149: 2038
                   150: 2080
                   151: 2080
                   152: 2080
                   153: 2080
                   154: 2080
                   155: 2080
                   156: 2032
                   157: 2047
                   158: 2032
                   159: 2047
                   160: 2032
                   161: 2047
                   162: 2032
                   163: 2047
                   164: 2032
                   165: 2047
                   166: 2032
                   167: 2047
                   168: 2032
                   169: 2047
                   170: 2032
                   171: 2047
                   172: 2032
                   173: 2047
                   174: 2023
                   175: 2038
                   176: 2072
                   177: 2074
                   178: 2023
                   179: 2038
                   180: 2072
                   181: 2074
                   182: 2023
                   183: 2038
                   184: 2072
                   185: 2074
                   186: 2053
                   187: 2053
                   188: 2053
                   189: 2053
                   190: 2053
                   191: 2053
                   192: 2059
                   193: 2059
                   194: 2059
                   195: 2059
                   196: 2059
                   197: 2059
                 49153: 2070
                 49154: 2078
                 49155: 2020
                 49156: 2023
                 49157: 2038
                 49158: 2070
                 49159: 2078
                 49160: 2020
                 49161: 2023
                 49162: 2038
                 49163: 2070
                 49164: 2078
                 49165: 2020
                 49166: 2023
                 49167: 2038
                 49168: 2070
                 49169: 2078
                 49170: 2020
                 49171: 2023
                 49172: 2038
                 49173: 2070
                 49174: 2078
                 49175: 2020
                 49176: 2023
                 49177: 2038
                 49178: 2020
                 49179: 2020
                 49180: 2020
                 49181: 2023
                 49182: 2023
                 49183: 2023
                 49184: 2038
                 49185: 2038
                 49186: 2038
                 49187: 2023
                 49188: 2038
                 49189: 2023
                 49190: 2038
                 49191: 2023
                 49192: 2038
                 49193: 2023
                 49194: 2038
                 49195: 2032
                 49196: 2047
                 49197: 2032
                 49198: 2047
                 49199: 2032
                 49200: 2047
                 49201: 2032
                 49202: 2047
                 49203: 2078
                 49204: 2020
                 49205: 2023
                 49206: 2038
                 49207: 2023
                 49208: 2038
                 49209: 2070
                 49210: 2072
                 49211: 2074
                 49266: 2053
                 49267: 2059
                 49268: 2053
                 49269: 2059
                 49270: 2053
                 49271: 2059
                 49272: 2053
                 49273: 2059
                 49274: 2056
                 49275: 2062
                 49276: 2056
                 49277: 2062
                 49278: 2056
                 49279: 2062
                 49280: 2056
                 49281: 2062
                 49282: 2056
                 49283: 2062
                 49284: 2056
                 49285: 2062
                 49286: 2056
                 49287: 2062
                 49288: 2056
                 49289: 2062
                 49290: 2056
                 49291: 2062
                 49292: 2056
                 49293: 2062
                 49294: 2056
                 49295: 2062
                 49296: 2056
                 49297: 2062
                 49298: 2056
                 49299: 2062
                 49300: 2053
                 49301: 2059
                 49302: 2053
                 49303: 2059
                 49304: 2053
                 49305: 2059
                 49306: 2053
                 49307: 2059
                 49308: 2026
                 49309: 2041
                 49310: 2026
                 49311: 2041
                 49312: 2029
                 49313: 2044
                 49314: 2029
                 49315: 2044
                 49316: 2026
                 49317: 2041
                 49318: 2026
                 49319: 2041
                 49320: 2029
                 49321: 2044
                 49322: 2029
                 49323: 2044
                 49324: 2026
                 49325: 2041
                 49326: 2029
                 49327: 2044
                 52392: 2065
                 52393: 2065
                 52394: 2065
                 52395: 2065
                 52396: 2065
                 52397: 2065
                 52398: 2065
                 65280: 2035
                 65281: 2050
                 65282: 2035
                 65283: 2050
                 65284: 2035
                 65285: 2050
                 65296: 2035
                 65297: 2050
                 65298: 2035
                 65299: 2050
                 65300: 2035
                 65301: 2050
               default: 2083
          }
    2020: bipush        7
    2022: ireturn
    2023: bipush        8
    2025: ireturn
    2026: bipush        15
    2028: ireturn
    2029: bipush        16
    2031: ireturn
    2032: bipush        10
    2034: ireturn
    2035: bipush        103
    2037: ireturn
    2038: bipush        9
    2040: ireturn
    2041: bipush        17
    2043: ireturn
    2044: bipush        18
    2046: ireturn
    2047: bipush        11
    2049: ireturn
    2050: bipush        104
    2052: ireturn
    2053: bipush        12
    2055: ireturn
    2056: bipush        19
    2058: ireturn
    2059: bipush        13
    2061: ireturn
    2062: bipush        20
    2064: ireturn
    2065: bipush        21
    2067: ireturn
    2068: iconst_0
    2069: ireturn
    2070: iconst_0
    2071: ireturn
    2072: iconst_0
    2073: ireturn
    2074: iconst_0
    2075: ireturn
    2076: iconst_2
    2077: ireturn
    2078: iconst_2
    2079: ireturn
    2080: bipush        14
    2082: ireturn
    2083: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    2086: dup
    2087: bipush        80
    2089: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    2092: athrow

  public static int getKeyExchangeAlgorithm(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: lookupswitch  { // 251
                     1: 2057
                     2: 2057
                     4: 2057
                     5: 2057
                    10: 2057
                    13: 2023
                    16: 2026
                    19: 2029
                    22: 2034
                    24: 2020
                    27: 2020
                    44: 2054
                    45: 2031
                    46: 2059
                    47: 2057
                    48: 2023
                    49: 2026
                    50: 2029
                    51: 2034
                    52: 2020
                    53: 2057
                    54: 2023
                    55: 2026
                    56: 2029
                    57: 2034
                    58: 2020
                    59: 2057
                    60: 2057
                    61: 2057
                    62: 2023
                    63: 2026
                    64: 2029
                    65: 2057
                    66: 2023
                    67: 2026
                    68: 2029
                    69: 2034
                    70: 2020
                   103: 2034
                   104: 2023
                   105: 2026
                   106: 2029
                   107: 2034
                   108: 2020
                   109: 2020
                   132: 2057
                   133: 2023
                   134: 2026
                   135: 2029
                   136: 2034
                   137: 2020
                   138: 2054
                   139: 2054
                   140: 2054
                   141: 2054
                   142: 2031
                   143: 2031
                   144: 2031
                   145: 2031
                   146: 2059
                   147: 2059
                   148: 2059
                   149: 2059
                   150: 2057
                   151: 2023
                   152: 2026
                   153: 2029
                   154: 2034
                   155: 2020
                   156: 2057
                   157: 2057
                   158: 2034
                   159: 2034
                   160: 2026
                   161: 2026
                   162: 2029
                   163: 2029
                   164: 2023
                   165: 2023
                   166: 2020
                   167: 2020
                   168: 2054
                   169: 2054
                   170: 2031
                   171: 2031
                   172: 2059
                   173: 2059
                   174: 2054
                   175: 2054
                   176: 2054
                   177: 2054
                   178: 2031
                   179: 2031
                   180: 2031
                   181: 2031
                   182: 2059
                   183: 2059
                   184: 2059
                   185: 2059
                   186: 2057
                   187: 2023
                   188: 2026
                   189: 2029
                   190: 2034
                   191: 2020
                   192: 2057
                   193: 2023
                   194: 2026
                   195: 2029
                   196: 2034
                   197: 2020
                 49153: 2039
                 49154: 2039
                 49155: 2039
                 49156: 2039
                 49157: 2039
                 49158: 2045
                 49159: 2045
                 49160: 2045
                 49161: 2045
                 49162: 2045
                 49163: 2042
                 49164: 2042
                 49165: 2042
                 49166: 2042
                 49167: 2042
                 49168: 2051
                 49169: 2051
                 49170: 2051
                 49171: 2051
                 49172: 2051
                 49173: 2036
                 49174: 2036
                 49175: 2036
                 49176: 2036
                 49177: 2036
                 49178: 2062
                 49179: 2068
                 49180: 2065
                 49181: 2062
                 49182: 2068
                 49183: 2065
                 49184: 2062
                 49185: 2068
                 49186: 2065
                 49187: 2045
                 49188: 2045
                 49189: 2039
                 49190: 2039
                 49191: 2051
                 49192: 2051
                 49193: 2042
                 49194: 2042
                 49195: 2045
                 49196: 2045
                 49197: 2039
                 49198: 2039
                 49199: 2051
                 49200: 2051
                 49201: 2042
                 49202: 2042
                 49203: 2048
                 49204: 2048
                 49205: 2048
                 49206: 2048
                 49207: 2048
                 49208: 2048
                 49209: 2048
                 49210: 2048
                 49211: 2048
                 49266: 2045
                 49267: 2045
                 49268: 2039
                 49269: 2039
                 49270: 2051
                 49271: 2051
                 49272: 2042
                 49273: 2042
                 49274: 2057
                 49275: 2057
                 49276: 2034
                 49277: 2034
                 49278: 2026
                 49279: 2026
                 49280: 2029
                 49281: 2029
                 49282: 2023
                 49283: 2023
                 49284: 2020
                 49285: 2020
                 49286: 2045
                 49287: 2045
                 49288: 2039
                 49289: 2039
                 49290: 2051
                 49291: 2051
                 49292: 2042
                 49293: 2042
                 49294: 2054
                 49295: 2054
                 49296: 2031
                 49297: 2031
                 49298: 2059
                 49299: 2059
                 49300: 2054
                 49301: 2054
                 49302: 2031
                 49303: 2031
                 49304: 2059
                 49305: 2059
                 49306: 2048
                 49307: 2048
                 49308: 2057
                 49309: 2057
                 49310: 2034
                 49311: 2034
                 49312: 2057
                 49313: 2057
                 49314: 2034
                 49315: 2034
                 49316: 2054
                 49317: 2054
                 49318: 2031
                 49319: 2031
                 49320: 2054
                 49321: 2054
                 49322: 2031
                 49323: 2031
                 49324: 2045
                 49325: 2045
                 49326: 2045
                 49327: 2045
                 52392: 2051
                 52393: 2045
                 52394: 2034
                 52395: 2054
                 52396: 2048
                 52397: 2031
                 52398: 2059
                 65280: 2034
                 65281: 2034
                 65282: 2051
                 65283: 2051
                 65284: 2045
                 65285: 2045
                 65296: 2054
                 65297: 2054
                 65298: 2031
                 65299: 2031
                 65300: 2048
                 65301: 2048
               default: 2071
          }
    2020: bipush        11
    2022: ireturn
    2023: bipush        7
    2025: ireturn
    2026: bipush        9
    2028: ireturn
    2029: iconst_3
    2030: ireturn
    2031: bipush        14
    2033: ireturn
    2034: iconst_5
    2035: ireturn
    2036: bipush        20
    2038: ireturn
    2039: bipush        16
    2041: ireturn
    2042: bipush        18
    2044: ireturn
    2045: bipush        17
    2047: ireturn
    2048: bipush        24
    2050: ireturn
    2051: bipush        19
    2053: ireturn
    2054: bipush        13
    2056: ireturn
    2057: iconst_1
    2058: ireturn
    2059: bipush        15
    2061: ireturn
    2062: bipush        21
    2064: ireturn
    2065: bipush        22
    2067: ireturn
    2068: bipush        23
    2070: ireturn
    2071: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    2074: dup
    2075: bipush        80
    2077: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    2080: athrow

  public static int getMACAlgorithm(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: lookupswitch  { // 251
                     1: 2022
                     2: 2024
                     4: 2022
                     5: 2024
                    10: 2024
                    13: 2024
                    16: 2024
                    19: 2024
                    22: 2024
                    24: 2022
                    27: 2024
                    44: 2024
                    45: 2024
                    46: 2024
                    47: 2024
                    48: 2024
                    49: 2024
                    50: 2024
                    51: 2024
                    52: 2024
                    53: 2024
                    54: 2024
                    55: 2024
                    56: 2024
                    57: 2024
                    58: 2024
                    59: 2026
                    60: 2026
                    61: 2026
                    62: 2026
                    63: 2026
                    64: 2026
                    65: 2024
                    66: 2024
                    67: 2024
                    68: 2024
                    69: 2024
                    70: 2024
                   103: 2026
                   104: 2026
                   105: 2026
                   106: 2026
                   107: 2026
                   108: 2026
                   109: 2026
                   132: 2024
                   133: 2024
                   134: 2024
                   135: 2024
                   136: 2024
                   137: 2024
                   138: 2024
                   139: 2024
                   140: 2024
                   141: 2024
                   142: 2024
                   143: 2024
                   144: 2024
                   145: 2024
                   146: 2024
                   147: 2024
                   148: 2024
                   149: 2024
                   150: 2024
                   151: 2024
                   152: 2024
                   153: 2024
                   154: 2024
                   155: 2024
                   156: 2020
                   157: 2020
                   158: 2020
                   159: 2020
                   160: 2020
                   161: 2020
                   162: 2020
                   163: 2020
                   164: 2020
                   165: 2020
                   166: 2020
                   167: 2020
                   168: 2020
                   169: 2020
                   170: 2020
                   171: 2020
                   172: 2020
                   173: 2020
                   174: 2026
                   175: 2028
                   176: 2026
                   177: 2028
                   178: 2026
                   179: 2028
                   180: 2026
                   181: 2028
                   182: 2026
                   183: 2028
                   184: 2026
                   185: 2028
                   186: 2026
                   187: 2026
                   188: 2026
                   189: 2026
                   190: 2026
                   191: 2026
                   192: 2026
                   193: 2026
                   194: 2026
                   195: 2026
                   196: 2026
                   197: 2026
                 49153: 2024
                 49154: 2024
                 49155: 2024
                 49156: 2024
                 49157: 2024
                 49158: 2024
                 49159: 2024
                 49160: 2024
                 49161: 2024
                 49162: 2024
                 49163: 2024
                 49164: 2024
                 49165: 2024
                 49166: 2024
                 49167: 2024
                 49168: 2024
                 49169: 2024
                 49170: 2024
                 49171: 2024
                 49172: 2024
                 49173: 2024
                 49174: 2024
                 49175: 2024
                 49176: 2024
                 49177: 2024
                 49178: 2024
                 49179: 2024
                 49180: 2024
                 49181: 2024
                 49182: 2024
                 49183: 2024
                 49184: 2024
                 49185: 2024
                 49186: 2024
                 49187: 2026
                 49188: 2028
                 49189: 2026
                 49190: 2028
                 49191: 2026
                 49192: 2028
                 49193: 2026
                 49194: 2028
                 49195: 2020
                 49196: 2020
                 49197: 2020
                 49198: 2020
                 49199: 2020
                 49200: 2020
                 49201: 2020
                 49202: 2020
                 49203: 2024
                 49204: 2024
                 49205: 2024
                 49206: 2024
                 49207: 2026
                 49208: 2028
                 49209: 2024
                 49210: 2026
                 49211: 2028
                 49266: 2026
                 49267: 2028
                 49268: 2026
                 49269: 2028
                 49270: 2026
                 49271: 2028
                 49272: 2026
                 49273: 2028
                 49274: 2020
                 49275: 2020
                 49276: 2020
                 49277: 2020
                 49278: 2020
                 49279: 2020
                 49280: 2020
                 49281: 2020
                 49282: 2020
                 49283: 2020
                 49284: 2020
                 49285: 2020
                 49286: 2020
                 49287: 2020
                 49288: 2020
                 49289: 2020
                 49290: 2020
                 49291: 2020
                 49292: 2020
                 49293: 2020
                 49294: 2020
                 49295: 2020
                 49296: 2020
                 49297: 2020
                 49298: 2020
                 49299: 2020
                 49300: 2026
                 49301: 2028
                 49302: 2026
                 49303: 2028
                 49304: 2026
                 49305: 2028
                 49306: 2026
                 49307: 2028
                 49308: 2020
                 49309: 2020
                 49310: 2020
                 49311: 2020
                 49312: 2020
                 49313: 2020
                 49314: 2020
                 49315: 2020
                 49316: 2020
                 49317: 2020
                 49318: 2020
                 49319: 2020
                 49320: 2020
                 49321: 2020
                 49322: 2020
                 49323: 2020
                 49324: 2020
                 49325: 2020
                 49326: 2020
                 49327: 2020
                 52392: 2020
                 52393: 2020
                 52394: 2020
                 52395: 2020
                 52396: 2020
                 52397: 2020
                 52398: 2020
                 65280: 2020
                 65281: 2020
                 65282: 2020
                 65283: 2020
                 65284: 2020
                 65285: 2020
                 65296: 2020
                 65297: 2020
                 65298: 2020
                 65299: 2020
                 65300: 2020
                 65301: 2020
               default: 2030
          }
    2020: iconst_0
    2021: ireturn
    2022: iconst_1
    2023: ireturn
    2024: iconst_2
    2025: ireturn
    2026: iconst_3
    2027: ireturn
    2028: iconst_4
    2029: ireturn
    2030: new           #358                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    2033: dup
    2034: bipush        80
    2036: invokespecial #706                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    2039: athrow

  public static org.bouncycastle.crypto.tls.ProtocolVersion getMinimumVersion(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 132
                    59: 1068
                    60: 1068
                    61: 1068
                    62: 1068
                    63: 1068
                    64: 1068
                   103: 1068
                   104: 1068
                   105: 1068
                   106: 1068
                   107: 1068
                   108: 1068
                   109: 1068
                   156: 1068
                   157: 1068
                   158: 1068
                   159: 1068
                   160: 1068
                   161: 1068
                   162: 1068
                   163: 1068
                   164: 1068
                   165: 1068
                   166: 1068
                   167: 1068
                   168: 1068
                   169: 1068
                   170: 1068
                   171: 1068
                   172: 1068
                   173: 1068
                   186: 1068
                   187: 1068
                   188: 1068
                   189: 1068
                   190: 1068
                   191: 1068
                   192: 1068
                   193: 1068
                   194: 1068
                   195: 1068
                   196: 1068
                   197: 1068
                 49187: 1068
                 49188: 1068
                 49189: 1068
                 49190: 1068
                 49191: 1068
                 49192: 1068
                 49193: 1068
                 49194: 1068
                 49195: 1068
                 49196: 1068
                 49197: 1068
                 49198: 1068
                 49199: 1068
                 49200: 1068
                 49201: 1068
                 49202: 1068
                 49266: 1068
                 49267: 1068
                 49268: 1068
                 49269: 1068
                 49270: 1068
                 49271: 1068
                 49272: 1068
                 49273: 1068
                 49274: 1068
                 49275: 1068
                 49276: 1068
                 49277: 1068
                 49278: 1068
                 49279: 1068
                 49280: 1068
                 49281: 1068
                 49282: 1068
                 49283: 1068
                 49284: 1068
                 49285: 1068
                 49286: 1068
                 49287: 1068
                 49288: 1068
                 49289: 1068
                 49290: 1068
                 49291: 1068
                 49292: 1068
                 49293: 1068
                 49294: 1068
                 49295: 1068
                 49296: 1068
                 49297: 1068
                 49298: 1068
                 49299: 1068
                 49308: 1068
                 49309: 1068
                 49310: 1068
                 49311: 1068
                 49312: 1068
                 49313: 1068
                 49314: 1068
                 49315: 1068
                 49316: 1068
                 49317: 1068
                 49318: 1068
                 49319: 1068
                 49320: 1068
                 49321: 1068
                 49322: 1068
                 49323: 1068
                 49324: 1068
                 49325: 1068
                 49326: 1068
                 49327: 1068
                 52392: 1068
                 52393: 1068
                 52394: 1068
                 52395: 1068
                 52396: 1068
                 52397: 1068
                 52398: 1068
                 65280: 1068
                 65281: 1068
                 65282: 1068
                 65283: 1068
                 65284: 1068
                 65285: 1068
                 65296: 1068
                 65297: 1068
                 65298: 1068
                 65299: 1068
                 65300: 1068
                 65301: 1068
               default: 1072
          }
    1068: getstatic     #624                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
    1071: areturn
    1072: getstatic     #622                // Field org/bouncycastle/crypto/tls/ProtocolVersion.SSLv3:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
    1075: areturn

  public static boolean isAEADCipherSuite(int) throws java.io.IOException;
    Code:
       0: iconst_2
       1: iload_0
       2: invokestatic  #712                // Method getCipherType:(I)I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isBlockCipherSuite(int) throws java.io.IOException;
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #712                // Method getCipherType:(I)I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isStreamCipherSuite(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: iload_0
       2: invokestatic  #712                // Method getCipherType:(I)I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isValidCipherSuiteForSignatureAlgorithms(int, java.util.Vector);
    Code:
       0: iload_0
       1: invokestatic  #714                // Method getKeyExchangeAlgorithm:(I)I
       4: istore_2
       5: goto          11
       8: astore_3
       9: iconst_1
      10: ireturn
      11: iload_2
      12: tableswitch   { // 3 to 23
                     3: 130
                     4: 130
                     5: 121
                     6: 121
                     7: 148
                     8: 148
                     9: 148
                    10: 148
                    11: 112
                    12: 112
                    13: 148
                    14: 148
                    15: 148
                    16: 148
                    17: 139
                    18: 148
                    19: 121
                    20: 112
                    21: 148
                    22: 130
                    23: 121
               default: 148
          }
     112: aload_1
     113: iconst_0
     114: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
     117: invokevirtual #653                // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
     120: ireturn
     121: aload_1
     122: iconst_1
     123: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
     126: invokevirtual #653                // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
     129: ireturn
     130: aload_1
     131: iconst_2
     132: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
     135: invokevirtual #653                // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
     138: ireturn
     139: aload_1
     140: iconst_3
     141: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
     144: invokevirtual #653                // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
     147: ireturn
     148: iconst_1
     149: ireturn
    Exception table:
       from    to  target type
           0     5     8   Class java/io/IOException

  public static boolean isValidCipherSuiteForVersion(int, org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: iload_0
       1: invokestatic  #759                // Method getMinimumVersion:(I)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: aload_1
       5: invokevirtual #689                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       8: invokevirtual #691                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      11: ireturn

  public static java.util.Vector getUsableSignatureAlgorithms(java.util.Vector);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #751                // Method getAllSignatureAlgorithms:()Ljava/util/Vector;
       7: areturn
       8: new           #327                // class java/util/Vector
      11: dup
      12: iconst_4
      13: invokespecial #650                // Method java/util/Vector."<init>":(I)V
      16: astore_1
      17: aload_1
      18: iconst_0
      19: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
      22: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      25: iconst_0
      26: istore_2
      27: iload_2
      28: aload_0
      29: invokevirtual #648                // Method java/util/Vector.size:()I
      32: if_icmpge     74
      35: aload_0
      36: iload_2
      37: invokevirtual #651                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      40: checkcast     #354                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      43: astore_3
      44: aload_3
      45: invokevirtual #700                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      48: invokestatic  #776                // Method org/bouncycastle/util/Shorts.valueOf:(S)Ljava/lang/Short;
      51: astore        4
      53: aload_1
      54: aload         4
      56: invokevirtual #653                // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
      59: ifne          68
      62: aload_1
      63: aload         4
      65: invokevirtual #652                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      68: iinc          2, 1
      71: goto          27
      74: aload_1
      75: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #625                // Field EMPTY_BYTES:[B
       6: iconst_0
       7: newarray       short
       9: putstatic     #630                // Field EMPTY_SHORTS:[S
      12: iconst_0
      13: newarray       int
      15: putstatic     #628                // Field EMPTY_INTS:[I
      18: iconst_0
      19: newarray       long
      21: putstatic     #629                // Field EMPTY_LONGS:[J
      24: bipush        13
      26: invokestatic  #775                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      29: putstatic     #632                // Field EXT_signature_algorithms:Ljava/lang/Integer;
      32: iconst_4
      33: newarray       byte
      35: dup
      36: iconst_0
      37: bipush        67
      39: bastore
      40: dup
      41: iconst_1
      42: bipush        76
      44: bastore
      45: dup
      46: iconst_2
      47: bipush        78
      49: bastore
      50: dup
      51: iconst_3
      52: bipush        84
      54: bastore
      55: putstatic     #626                // Field SSL_CLIENT:[B
      58: iconst_4
      59: newarray       byte
      61: dup
      62: iconst_0
      63: bipush        83
      65: bastore
      66: dup
      67: iconst_1
      68: bipush        82
      70: bastore
      71: dup
      72: iconst_2
      73: bipush        86
      75: bastore
      76: dup
      77: iconst_3
      78: bipush        82
      80: bastore
      81: putstatic     #627                // Field SSL_SERVER:[B
      84: invokestatic  #711                // Method genSSL3Const:()[[B
      87: putstatic     #631                // Field SSL3_CONST:[[B
      90: return
}
