public class org.bouncycastle.math.ec.custom.sec.SecP256R1Curve extends org.bouncycastle.math.ec.ECCurve$AbstractFp {
  public static final java.math.BigInteger q;

  private static final int SECP256R1_DEFAULT_COORDS;

  private static final org.bouncycastle.math.ec.ECFieldElement[] SECP256R1_AFFINE_ZS;

  protected org.bouncycastle.math.ec.custom.sec.SecP256R1Point infinity;

  public org.bouncycastle.math.ec.custom.sec.SecP256R1Curve();
    Code:
       0: aload_0
       1: getstatic     #115                // Field q:Ljava/math/BigInteger;
       4: invokespecial #125                // Method org/bouncycastle/math/ec/ECCurve$AbstractFp."<init>":(Ljava/math/BigInteger;)V
       7: aload_0
       8: new           #65                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1Point
      11: dup
      12: aload_0
      13: aconst_null
      14: aconst_null
      15: invokespecial #132                // Method org/bouncycastle/math/ec/custom/sec/SecP256R1Point."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)V
      18: putfield      #119                // Field infinity:Lorg/bouncycastle/math/ec/custom/sec/SecP256R1Point;
      21: aload_0
      22: aload_0
      23: new           #56                 // class java/math/BigInteger
      26: dup
      27: iconst_1
      28: ldc           #3                  // String FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
      30: invokestatic  #135                // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
      33: invokespecial #123                // Method java/math/BigInteger."<init>":(I[B)V
      36: invokevirtual #129                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      39: putfield      #116                // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
      42: aload_0
      43: aload_0
      44: new           #56                 // class java/math/BigInteger
      47: dup
      48: iconst_1
      49: ldc           #1                  // String 5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
      51: invokestatic  #135                // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
      54: invokespecial #123                // Method java/math/BigInteger."<init>":(I[B)V
      57: invokevirtual #129                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      60: putfield      #117                // Field b:Lorg/bouncycastle/math/ec/ECFieldElement;
      63: aload_0
      64: new           #56                 // class java/math/BigInteger
      67: dup
      68: iconst_1
      69: ldc           #2                  // String FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551
      71: invokestatic  #135                // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
      74: invokespecial #123                // Method java/math/BigInteger."<init>":(I[B)V
      77: putfield      #114                // Field order:Ljava/math/BigInteger;
      80: aload_0
      81: lconst_1
      82: invokestatic  #124                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      85: putfield      #113                // Field cofactor:Ljava/math/BigInteger;
      88: aload_0
      89: iconst_2
      90: putfield      #112                // Field coord:I
      93: return

  protected org.bouncycastle.math.ec.ECCurve cloneCurve();
    Code:
       0: new           #62                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1Curve
       3: dup
       4: invokespecial #128                // Method "<init>":()V
       7: areturn

  public boolean supportsCoordinateSystem(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 1
                     2: 20
               default: 22
          }
      20: iconst_1
      21: ireturn
      22: iconst_0
      23: ireturn

  public java.math.BigInteger getQ();
    Code:
       0: getstatic     #115                // Field q:Ljava/math/BigInteger;
       3: areturn

  public int getFieldSize();
    Code:
       0: getstatic     #115                // Field q:Ljava/math/BigInteger;
       3: invokevirtual #122                // Method java/math/BigInteger.bitLength:()I
       6: ireturn

  public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger);
    Code:
       0: new           #64                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement
       3: dup
       4: aload_1
       5: invokespecial #131                // Method org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement."<init>":(Ljava/math/BigInteger;)V
       8: areturn

  protected org.bouncycastle.math.ec.ECPoint createRawPoint(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: new           #65                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1Point
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #132                // Method org/bouncycastle/math/ec/custom/sec/SecP256R1Point."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)V
      10: areturn

  protected org.bouncycastle.math.ec.ECPoint createRawPoint(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement[]);
    Code:
       0: new           #65                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1Point
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #133                // Method org/bouncycastle/math/ec/custom/sec/SecP256R1Point."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;[Lorg/bouncycastle/math/ec/ECFieldElement;)V
      11: areturn

  public org.bouncycastle.math.ec.ECPoint getInfinity();
    Code:
       0: aload_0
       1: getfield      #119                // Field infinity:Lorg/bouncycastle/math/ec/custom/sec/SecP256R1Point;
       4: areturn

  public org.bouncycastle.math.ec.ECLookupTable createCacheSafeLookupTable(org.bouncycastle.math.ec.ECPoint[], int, int);
    Code:
       0: iload_3
       1: bipush        8
       3: imul
       4: iconst_2
       5: imul
       6: newarray       int
       8: astore        5
      10: iconst_0
      11: istore        6
      13: iconst_0
      14: istore        7
      16: iload         7
      18: iload_3
      19: if_icmpge     80
      22: aload_1
      23: iload_2
      24: iload         7
      26: iadd
      27: aaload
      28: astore        8
      30: aload         8
      32: invokevirtual #126                // Method org/bouncycastle/math/ec/ECPoint.getRawXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      35: checkcast     #64                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement
      38: getfield      #120                // Field org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement.x:[I
      41: iconst_0
      42: aload         5
      44: iload         6
      46: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat256.copy:([II[II)V
      49: iinc          6, 8
      52: aload         8
      54: invokevirtual #127                // Method org/bouncycastle/math/ec/ECPoint.getRawYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      57: checkcast     #64                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement
      60: getfield      #120                // Field org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement.x:[I
      63: iconst_0
      64: aload         5
      66: iload         6
      68: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat256.copy:([II[II)V
      71: iinc          6, 8
      74: iinc          7, 1
      77: goto          16
      80: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1Curve$1
      83: dup
      84: aload_0
      85: iload_3
      86: aload         5
      88: invokespecial #130                // Method org/bouncycastle/math/ec/custom/sec/SecP256R1Curve$1."<init>":(Lorg/bouncycastle/math/ec/custom/sec/SecP256R1Curve;I[I)V
      91: areturn

  static org.bouncycastle.math.ec.ECFieldElement[] access$000();
    Code:
       0: getstatic     #118                // Field SECP256R1_AFFINE_ZS:[Lorg/bouncycastle/math/ec/ECFieldElement;
       3: areturn

  static {};
    Code:
       0: getstatic     #121                // Field org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement.Q:Ljava/math/BigInteger;
       3: putstatic     #115                // Field q:Ljava/math/BigInteger;
       6: iconst_1
       7: anewarray     #60                 // class org/bouncycastle/math/ec/ECFieldElement
      10: dup
      11: iconst_0
      12: new           #64                 // class org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement
      15: dup
      16: getstatic     #111                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      19: invokespecial #131                // Method org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement."<init>":(Ljava/math/BigInteger;)V
      22: aastore
      23: putstatic     #118                // Field SECP256R1_AFFINE_ZS:[Lorg/bouncycastle/math/ec/ECFieldElement;
      26: return
}
