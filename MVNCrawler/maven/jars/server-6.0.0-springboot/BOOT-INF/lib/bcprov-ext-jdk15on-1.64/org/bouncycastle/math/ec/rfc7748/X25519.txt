public abstract class org.bouncycastle.math.ec.rfc7748.X25519 {
  public static final int POINT_SIZE;

  public static final int SCALAR_SIZE;

  private static final int C_A;

  private static final int C_A24;

  public org.bouncycastle.math.ec.rfc7748.X25519();
    Code:
       0: aload_0
       1: invokespecial #95                 // Method java/lang/Object."<init>":()V
       4: return

  public static boolean calculateAgreement(byte[], int, byte[], int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: invokestatic  #99                 // Method scalarMult:([BI[BI[BI)V
      11: aload         4
      13: iload         5
      15: bipush        32
      17: invokestatic  #118                // Method org/bouncycastle/util/Arrays.areAllZeroes:([BII)Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private static int decode32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: istore_2
       8: iload_2
       9: aload_0
      10: iinc          1, 1
      13: iload_1
      14: baload
      15: sipush        255
      18: iand
      19: bipush        8
      21: ishl
      22: ior
      23: istore_2
      24: iload_2
      25: aload_0
      26: iinc          1, 1
      29: iload_1
      30: baload
      31: sipush        255
      34: iand
      35: bipush        16
      37: ishl
      38: ior
      39: istore_2
      40: iload_2
      41: aload_0
      42: iinc          1, 1
      45: iload_1
      46: baload
      47: bipush        24
      49: ishl
      50: ior
      51: istore_2
      52: iload_2
      53: ireturn

  private static void decodeScalar(byte[], int, int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        8
       5: if_icmpge     26
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_1
      12: iload_3
      13: iconst_4
      14: imul
      15: iadd
      16: invokestatic  #97                 // Method decode32:([BI)I
      19: iastore
      20: iinc          3, 1
      23: goto          2
      26: aload_2
      27: iconst_0
      28: dup2
      29: iaload
      30: bipush        -8
      32: iand
      33: iastore
      34: aload_2
      35: bipush        7
      37: dup2
      38: iaload
      39: ldc           #3                  // int 2147483647
      41: iand
      42: iastore
      43: aload_2
      44: bipush        7
      46: dup2
      47: iaload
      48: ldc           #2                  // int 1073741824
      50: ior
      51: iastore
      52: return

  public static void generatePrivateKey(java.security.SecureRandom, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method java/security/SecureRandom.nextBytes:([B)V
       5: aload_1
       6: iconst_0
       7: dup2
       8: baload
       9: sipush        248
      12: iand
      13: i2b
      14: bastore
      15: aload_1
      16: bipush        31
      18: dup2
      19: baload
      20: bipush        127
      22: iand
      23: i2b
      24: bastore
      25: aload_1
      26: bipush        31
      28: dup2
      29: baload
      30: bipush        64
      32: ior
      33: i2b
      34: bastore
      35: return

  public static void generatePublicKey(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #98                 // Method scalarMultBase:([BI[BI)V
       7: return

  private static void pointDouble(int[], int[]);
    Code:
       0: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
       3: astore_2
       4: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #115                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.apm:([I[I[I[I)V
      15: aload_2
      16: aload_2
      17: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sqr:([I[I)V
      20: aload_3
      21: aload_3
      22: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sqr:([I[I)V
      25: aload_2
      26: aload_3
      27: aload_0
      28: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
      31: aload_2
      32: aload_3
      33: aload_2
      34: invokestatic  #114                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sub:([I[I[I)V
      37: aload_2
      38: ldc           #1                  // int 121666
      40: aload_1
      41: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([II[I)V
      44: aload_1
      45: aload_3
      46: aload_1
      47: invokestatic  #112                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.add:([I[I[I)V
      50: aload_1
      51: aload_2
      52: aload_1
      53: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
      56: return

  public static void precompute();
    Code:
       0: invokestatic  #116                // Method org/bouncycastle/math/ec/rfc8032/Ed25519.precompute:()V
       3: return

  public static void scalarMult(byte[], int, byte[], int, byte[], int);
    Code:
       0: bipush        8
       2: newarray       int
       4: astore        6
       6: aload_0
       7: iload_1
       8: aload         6
      10: invokestatic  #100                // Method decodeScalar:([BI[I)V
      13: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      16: astore        7
      18: aload_2
      19: iload_3
      20: aload         7
      22: invokestatic  #105                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.decode:([BI[I)V
      25: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      28: astore        8
      30: aload         7
      32: iconst_0
      33: aload         8
      35: iconst_0
      36: invokestatic  #108                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.copy:([II[II)V
      39: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      42: astore        9
      44: aload         9
      46: iconst_0
      47: iconst_1
      48: iastore
      49: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      52: astore        10
      54: aload         10
      56: iconst_0
      57: iconst_1
      58: iastore
      59: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      62: astore        11
      64: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      67: astore        12
      69: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
      72: astore        13
      74: sipush        254
      77: istore        14
      79: iconst_1
      80: istore        15
      82: aload         10
      84: aload         11
      86: aload         12
      88: aload         10
      90: invokestatic  #115                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.apm:([I[I[I[I)V
      93: aload         8
      95: aload         9
      97: aload         11
      99: aload         8
     101: invokestatic  #115                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.apm:([I[I[I[I)V
     104: aload         12
     106: aload         8
     108: aload         12
     110: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
     113: aload         10
     115: aload         11
     117: aload         10
     119: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
     122: aload         11
     124: aload         11
     126: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sqr:([I[I)V
     129: aload         8
     131: aload         8
     133: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sqr:([I[I)V
     136: aload         11
     138: aload         8
     140: aload         13
     142: invokestatic  #114                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sub:([I[I[I)V
     145: aload         13
     147: ldc           #1                  // int 121666
     149: aload         9
     151: invokestatic  #107                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([II[I)V
     154: aload         9
     156: aload         8
     158: aload         9
     160: invokestatic  #112                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.add:([I[I[I)V
     163: aload         9
     165: aload         13
     167: aload         9
     169: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
     172: aload         8
     174: aload         11
     176: aload         8
     178: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
     181: aload         12
     183: aload         10
     185: aload         10
     187: aload         11
     189: invokestatic  #115                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.apm:([I[I[I[I)V
     192: aload         10
     194: aload         10
     196: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sqr:([I[I)V
     199: aload         11
     201: aload         11
     203: invokestatic  #111                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.sqr:([I[I)V
     206: aload         11
     208: aload         7
     210: aload         11
     212: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
     215: iinc          14, -1
     218: iload         14
     220: iconst_5
     221: iushr
     222: istore        16
     224: iload         14
     226: bipush        31
     228: iand
     229: istore        17
     231: aload         6
     233: iload         16
     235: iaload
     236: iload         17
     238: iushr
     239: iconst_1
     240: iand
     241: istore        18
     243: iload         15
     245: iload         18
     247: ixor
     248: istore        15
     250: iload         15
     252: aload         8
     254: aload         10
     256: invokestatic  #104                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.cswap:(I[I[I)V
     259: iload         15
     261: aload         9
     263: aload         11
     265: invokestatic  #104                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.cswap:(I[I[I)V
     268: iload         18
     270: istore        15
     272: iload         14
     274: iconst_3
     275: if_icmpge     82
     278: iconst_0
     279: istore        16
     281: iload         16
     283: iconst_3
     284: if_icmpge     300
     287: aload         8
     289: aload         9
     291: invokestatic  #101                // Method pointDouble:([I[I)V
     294: iinc          16, 1
     297: goto          281
     300: aload         9
     302: aload         9
     304: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.inv:([I[I)V
     307: aload         8
     309: aload         9
     311: aload         8
     313: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
     316: aload         8
     318: invokestatic  #106                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.normalize:([I)V
     321: aload         8
     323: aload         4
     325: iload         5
     327: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.encode:([I[BI)V
     330: return

  public static void scalarMultBase(byte[], int, byte[], int);
    Code:
       0: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
       3: astore        4
       5: invokestatic  #103                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.create:()[I
       8: astore        5
      10: invokestatic  #102                // Method org/bouncycastle/math/ec/rfc7748/X25519$Friend.access$000:()Lorg/bouncycastle/math/ec/rfc7748/X25519$Friend;
      13: aload_0
      14: iload_1
      15: aload         4
      17: aload         5
      19: invokestatic  #117                // Method org/bouncycastle/math/ec/rfc8032/Ed25519.scalarMultBaseYZ:(Lorg/bouncycastle/math/ec/rfc7748/X25519$Friend;[BI[I[I)V
      22: aload         5
      24: aload         4
      26: aload         4
      28: aload         5
      30: invokestatic  #115                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.apm:([I[I[I[I)V
      33: aload         5
      35: aload         5
      37: invokestatic  #110                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.inv:([I[I)V
      40: aload         4
      42: aload         5
      44: aload         4
      46: invokestatic  #113                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.mul:([I[I[I)V
      49: aload         4
      51: invokestatic  #106                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.normalize:([I)V
      54: aload         4
      56: aload_2
      57: iload_3
      58: invokestatic  #109                // Method org/bouncycastle/math/ec/rfc7748/X25519Field.encode:([I[BI)V
      61: return
}
