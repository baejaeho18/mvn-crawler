public class org.bouncycastle.crypto.tls.TlsDSSSigner extends org.bouncycastle.crypto.tls.TlsDSASigner {
  public org.bouncycastle.crypto.tls.TlsDSSSigner();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/bouncycastle/crypto/tls/TlsDSASigner."<init>":()V
       4: return

  public boolean isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_1
       1: instanceof    #14                 // class org/bouncycastle/crypto/params/DSAPublicKeyParameters
       4: ireturn

  protected org.bouncycastle.crypto.DSA createDSAImpl(short);
    Code:
       0: new           #15                 // class org/bouncycastle/crypto/signers/DSASigner
       3: dup
       4: new           #16                 // class org/bouncycastle/crypto/signers/HMacDSAKCalculator
       7: dup
       8: iload_1
       9: invokestatic  #32                 // Method org/bouncycastle/crypto/tls/TlsUtils.createHash:(S)Lorg/bouncycastle/crypto/Digest;
      12: invokespecial #30                 // Method org/bouncycastle/crypto/signers/HMacDSAKCalculator."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      15: invokespecial #29                 // Method org/bouncycastle/crypto/signers/DSASigner."<init>":(Lorg/bouncycastle/crypto/signers/DSAKCalculator;)V
      18: areturn

  protected short getSignatureAlgorithm();
    Code:
       0: iconst_2
       1: ireturn
}
