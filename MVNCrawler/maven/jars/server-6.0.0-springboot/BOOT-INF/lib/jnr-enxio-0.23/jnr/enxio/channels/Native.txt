Compiled from "Native.java"
public final class jnr.enxio.channels.Native {
  public jnr.enxio.channels.Native();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static jnr.enxio.channels.Native$LibC libc();
    Code:
       0: getstatic     #2                  // Field jnr/enxio/channels/Native$SingletonHolder.libc:Ljnr/enxio/channels/Native$LibC;
       3: areturn

  static jnr.ffi.Runtime getRuntime();
    Code:
       0: getstatic     #3                  // Field jnr/enxio/channels/Native$SingletonHolder.runtime:Ljnr/ffi/Runtime;
       3: areturn

  public static int close(int) throws java.io.IOException;
    Code:
       0: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
       3: iload_0
       4: invokeinterface #5,  2            // InterfaceMethod jnr/enxio/channels/Native$LibC.close:(I)I
       9: istore_1
      10: iload_1
      11: ifge          26
      14: getstatic     #6                  // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
      17: invokestatic  #7                  // Method getLastError:()Ljnr/constants/platform/Errno;
      20: invokevirtual #8                  // Method jnr/constants/platform/Errno.equals:(Ljava/lang/Object;)Z
      23: ifne          0
      26: iload_1
      27: ifge          65
      30: ldc           #9                  // String Error closing fd %d: %s
      32: iconst_2
      33: anewarray     #10                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: iload_0
      39: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_1
      45: invokestatic  #12                 // Method getLastErrorString:()Ljava/lang/String;
      48: aastore
      49: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: astore_2
      53: new           #14                 // class jnr/enxio/channels/NativeException
      56: dup
      57: aload_2
      58: invokestatic  #7                  // Method getLastError:()Ljnr/constants/platform/Errno;
      61: invokespecial #15                 // Method jnr/enxio/channels/NativeException."<init>":(Ljava/lang/String;Ljnr/constants/platform/Errno;)V
      64: athrow
      65: iload_1
      66: ireturn

  public static int read(int, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #16                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #17                 // String Destination buffer cannot be null
      10: invokespecial #18                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #19                 // Method java/nio/ByteBuffer.isReadOnly:()Z
      18: ifeq          31
      21: new           #20                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #21                 // String Read-only buffer
      27: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
      34: iload_0
      35: aload_1
      36: aload_1
      37: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      40: i2l
      41: invokeinterface #24,  5           // InterfaceMethod jnr/enxio/channels/Native$LibC.read:(ILjava/nio/ByteBuffer;J)I
      46: istore_2
      47: iload_2
      48: ifge          63
      51: getstatic     #6                  // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
      54: invokestatic  #7                  // Method getLastError:()Ljnr/constants/platform/Errno;
      57: invokevirtual #8                  // Method jnr/constants/platform/Errno.equals:(Ljava/lang/Object;)Z
      60: ifne          31
      63: iload_2
      64: ifle          78
      67: aload_1
      68: aload_1
      69: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
      72: iload_2
      73: iadd
      74: invokevirtual #26                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      77: pop
      78: iload_2
      79: ireturn

  public static int write(int, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #16                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #27                 // String Source buffer cannot be null
      10: invokespecial #18                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
      17: iload_0
      18: aload_1
      19: aload_1
      20: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      23: i2l
      24: invokeinterface #28,  5           // InterfaceMethod jnr/enxio/channels/Native$LibC.write:(ILjava/nio/ByteBuffer;J)I
      29: istore_2
      30: iload_2
      31: ifge          46
      34: getstatic     #6                  // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
      37: invokestatic  #7                  // Method getLastError:()Ljnr/constants/platform/Errno;
      40: invokevirtual #8                  // Method jnr/constants/platform/Errno.equals:(Ljava/lang/Object;)Z
      43: ifne          14
      46: iload_2
      47: ifle          61
      50: aload_1
      51: aload_1
      52: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
      55: iload_2
      56: iadd
      57: invokevirtual #26                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      60: pop
      61: iload_2
      62: ireturn

  public static void setBlocking(int, boolean);
    Code:
       0: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
       3: iload_0
       4: getstatic     #29                 // Field jnr/enxio/channels/Native$LibC.F_GETFL:I
       7: iconst_0
       8: invokeinterface #30,  4           // InterfaceMethod jnr/enxio/channels/Native$LibC.fcntl:(III)I
      13: istore_2
      14: iload_1
      15: ifeq          29
      18: iload_2
      19: getstatic     #31                 // Field jnr/enxio/channels/Native$LibC.O_NONBLOCK:I
      22: iconst_m1
      23: ixor
      24: iand
      25: istore_2
      26: goto          35
      29: iload_2
      30: getstatic     #31                 // Field jnr/enxio/channels/Native$LibC.O_NONBLOCK:I
      33: ior
      34: istore_2
      35: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
      38: iload_0
      39: getstatic     #32                 // Field jnr/enxio/channels/Native$LibC.F_SETFL:I
      42: iload_2
      43: invokeinterface #30,  4           // InterfaceMethod jnr/enxio/channels/Native$LibC.fcntl:(III)I
      48: pop
      49: return

  public static int shutdown(int, int);
    Code:
       0: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
       3: iload_0
       4: iload_1
       5: invokeinterface #33,  3           // InterfaceMethod jnr/enxio/channels/Native$LibC.shutdown:(II)I
      10: ireturn

  public static java.lang.String getLastErrorString();
    Code:
       0: invokestatic  #4                  // Method libc:()Ljnr/enxio/channels/Native$LibC;
       3: invokestatic  #34                 // Method getRuntime:()Ljnr/ffi/Runtime;
       6: invokestatic  #35                 // Method jnr/ffi/LastError.getLastError:(Ljnr/ffi/Runtime;)I
       9: invokeinterface #36,  2           // InterfaceMethod jnr/enxio/channels/Native$LibC.strerror:(I)Ljava/lang/String;
      14: areturn

  public static jnr.constants.platform.Errno getLastError();
    Code:
       0: invokestatic  #34                 // Method getRuntime:()Ljnr/ffi/Runtime;
       3: invokestatic  #35                 // Method jnr/ffi/LastError.getLastError:(Ljnr/ffi/Runtime;)I
       6: i2l
       7: invokestatic  #37                 // Method jnr/constants/platform/Errno.valueOf:(J)Ljnr/constants/platform/Errno;
      10: areturn
}
