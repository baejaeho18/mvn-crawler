Compiled from "PollSelector.java"
class jnr.enxio.channels.PollSelector extends java.nio.channels.spi.AbstractSelector {
  private static final int POLLFD_SIZE;

  private static final int FD_OFFSET;

  private static final int EVENTS_OFFSET;

  private static final int REVENTS_OFFSET;

  static final int POLLIN;

  static final int POLLOUT;

  static final int POLLERR;

  static final int POLLHUP;

  private jnr.enxio.channels.PollSelectionKey[] keyArray;

  private java.nio.ByteBuffer pollData;

  private int nfds;

  private final int[] pipefd;

  private final java.lang.Object regLock;

  private final java.util.Map<java.nio.channels.SelectionKey, java.lang.Boolean> keys;

  private final java.util.Set<java.nio.channels.SelectionKey> selected;

  public jnr.enxio.channels.PollSelector(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/nio/channels/spi/AbstractSelector."<init>":(Ljava/nio/channels/spi/SelectorProvider;)V
       5: aload_0
       6: iconst_0
       7: anewarray     #2                  // class jnr/enxio/channels/PollSelectionKey
      10: putfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      13: aload_0
      14: aconst_null
      15: putfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
      18: aload_0
      19: iconst_2
      20: newarray       int
      22: dup
      23: iconst_0
      24: iconst_m1
      25: iastore
      26: dup
      27: iconst_1
      28: iconst_m1
      29: iastore
      30: putfield      #5                  // Field pipefd:[I
      33: aload_0
      34: new           #6                  // class java/lang/Object
      37: dup
      38: invokespecial #7                  // Method java/lang/Object."<init>":()V
      41: putfield      #8                  // Field regLock:Ljava/lang/Object;
      44: aload_0
      45: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      48: dup
      49: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      52: putfield      #11                 // Field keys:Ljava/util/Map;
      55: aload_0
      56: new           #12                 // class java/util/HashSet
      59: dup
      60: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      63: putfield      #14                 // Field selected:Ljava/util/Set;
      66: invokestatic  #15                 // Method jnr/enxio/channels/Native.libc:()Ljnr/enxio/channels/Native$LibC;
      69: aload_0
      70: getfield      #5                  // Field pipefd:[I
      73: invokeinterface #16,  2           // InterfaceMethod jnr/enxio/channels/Native$LibC.pipe:([I)I
      78: pop
      79: aload_0
      80: bipush        8
      82: invokestatic  #17                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      85: invokestatic  #18                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      88: invokevirtual #19                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      91: putfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
      94: aload_0
      95: iconst_0
      96: aload_0
      97: getfield      #5                  // Field pipefd:[I
     100: iconst_0
     101: iaload
     102: invokespecial #20                 // Method putPollFD:(II)V
     105: aload_0
     106: iconst_0
     107: iconst_1
     108: invokespecial #22                 // Method putPollEvents:(II)V
     111: aload_0
     112: iconst_1
     113: putfield      #23                 // Field nfds:I
     116: aload_0
     117: iconst_1
     118: anewarray     #2                  // class jnr/enxio/channels/PollSelectionKey
     121: putfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
     124: return

  private void putPollFD(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
       4: iload_1
       5: bipush        8
       7: imul
       8: iconst_0
       9: iadd
      10: iload_2
      11: invokevirtual #24                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
      14: pop
      15: return

  private void putPollEvents(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
       4: iload_1
       5: bipush        8
       7: imul
       8: iconst_4
       9: iadd
      10: iload_2
      11: i2s
      12: invokevirtual #25                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
      15: pop
      16: return

  private int getPollFD(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
       4: iload_1
       5: bipush        8
       7: imul
       8: iconst_0
       9: iadd
      10: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:(I)I
      13: ireturn

  private short getPollEvents(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
       4: iload_1
       5: bipush        8
       7: imul
       8: iconst_4
       9: iadd
      10: invokevirtual #27                 // Method java/nio/ByteBuffer.getShort:(I)S
      13: ireturn

  private short getPollRevents(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
       4: iload_1
       5: bipush        8
       7: imul
       8: bipush        6
      10: iadd
      11: invokevirtual #27                 // Method java/nio/ByteBuffer.getShort:(I)S
      14: ireturn

  private void putPollRevents(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
       4: iload_1
       5: bipush        8
       7: imul
       8: bipush        6
      10: iadd
      11: iload_2
      12: i2s
      13: invokevirtual #25                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
      16: pop
      17: return

  protected void implCloseSelector() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pipefd:[I
       4: iconst_0
       5: iaload
       6: iconst_m1
       7: if_icmpeq     20
      10: aload_0
      11: getfield      #5                  // Field pipefd:[I
      14: iconst_0
      15: iaload
      16: invokestatic  #28                 // Method jnr/enxio/channels/Native.close:(I)I
      19: pop
      20: aload_0
      21: getfield      #5                  // Field pipefd:[I
      24: iconst_1
      25: iaload
      26: iconst_m1
      27: if_icmpeq     40
      30: aload_0
      31: getfield      #5                  // Field pipefd:[I
      34: iconst_1
      35: iaload
      36: invokestatic  #28                 // Method jnr/enxio/channels/Native.close:(I)I
      39: pop
      40: aload_0
      41: getfield      #11                 // Field keys:Ljava/util/Map;
      44: invokeinterface #29,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      49: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      54: astore_1
      55: aload_1
      56: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          85
      64: aload_1
      65: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #33                 // class java/nio/channels/SelectionKey
      73: astore_2
      74: aload_0
      75: aload_2
      76: checkcast     #2                  // class jnr/enxio/channels/PollSelectionKey
      79: invokespecial #34                 // Method remove:(Ljnr/enxio/channels/PollSelectionKey;)V
      82: goto          55
      85: return

  protected java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel, int, java.lang.Object);
    Code:
       0: new           #2                  // class jnr/enxio/channels/PollSelectionKey
       3: dup
       4: aload_0
       5: aload_1
       6: checkcast     #35                 // class jnr/enxio/channels/NativeSelectableChannel
       9: invokespecial #36                 // Method jnr/enxio/channels/PollSelectionKey."<init>":(Ljnr/enxio/channels/PollSelector;Ljnr/enxio/channels/NativeSelectableChannel;)V
      12: astore        4
      14: aload_0
      15: aload         4
      17: invokespecial #37                 // Method add:(Ljnr/enxio/channels/PollSelectionKey;)V
      20: aload         4
      22: aload_3
      23: invokevirtual #38                 // Method jnr/enxio/channels/PollSelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload         4
      29: iload_2
      30: invokevirtual #39                 // Method jnr/enxio/channels/PollSelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      33: pop
      34: aload         4
      36: areturn

  public java.util.Set<java.nio.channels.SelectionKey> keys();
    Code:
       0: new           #12                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
       8: invokestatic  #40                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: iconst_0
      12: aload_0
      13: getfield      #23                 // Field nfds:I
      16: invokeinterface #41,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      21: invokespecial #42                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: areturn

  public java.util.Set<java.nio.channels.SelectionKey> selectedKeys();
    Code:
       0: aload_0
       1: getfield      #14                 // Field selected:Ljava/util/Set;
       4: areturn

  void interestOps(jnr.enxio.channels.PollSelectionKey, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_2
       3: bipush        17
       5: iand
       6: ifeq          14
       9: iload_3
      10: iconst_1
      11: ior
      12: i2s
      13: istore_3
      14: iload_2
      15: bipush        12
      17: iand
      18: ifeq          26
      21: iload_3
      22: iconst_4
      23: ior
      24: i2s
      25: istore_3
      26: aload_0
      27: aload_1
      28: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
      31: iload_3
      32: invokespecial #22                 // Method putPollEvents:(II)V
      35: return

  private void add(jnr.enxio.channels.PollSelectionKey);
    Code:
       0: aload_0
       1: getfield      #8                  // Field regLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: getfield      #23                 // Field nfds:I
      12: iconst_1
      13: iadd
      14: putfield      #23                 // Field nfds:I
      17: aload_0
      18: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      21: arraylength
      22: aload_0
      23: getfield      #23                 // Field nfds:I
      26: if_icmpge     111
      29: aload_0
      30: getfield      #23                 // Field nfds:I
      33: aload_0
      34: getfield      #23                 // Field nfds:I
      37: iconst_2
      38: idiv
      39: iadd
      40: anewarray     #2                  // class jnr/enxio/channels/PollSelectionKey
      43: astore_3
      44: aload_0
      45: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      48: iconst_0
      49: aload_3
      50: iconst_0
      51: aload_0
      52: getfield      #23                 // Field nfds:I
      55: iconst_1
      56: isub
      57: invokestatic  #44                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: aload_0
      61: aload_3
      62: putfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      65: aload_3
      66: arraylength
      67: bipush        8
      69: imul
      70: invokestatic  #17                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      73: astore        4
      75: aload_0
      76: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
      79: ifnull        92
      82: aload         4
      84: aload_0
      85: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
      88: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      91: pop
      92: aload         4
      94: iconst_0
      95: invokevirtual #46                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      98: pop
      99: aload_0
     100: aload         4
     102: invokestatic  #18                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
     105: invokevirtual #19                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     108: putfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
     111: aload_1
     112: aload_0
     113: getfield      #23                 // Field nfds:I
     116: iconst_1
     117: isub
     118: invokevirtual #47                 // Method jnr/enxio/channels/PollSelectionKey.setIndex:(I)V
     121: aload_0
     122: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
     125: aload_0
     126: getfield      #23                 // Field nfds:I
     129: iconst_1
     130: isub
     131: aload_1
     132: aastore
     133: aload_0
     134: aload_1
     135: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
     138: aload_1
     139: invokevirtual #48                 // Method jnr/enxio/channels/PollSelectionKey.getFD:()I
     142: invokespecial #20                 // Method putPollFD:(II)V
     145: aload_0
     146: aload_1
     147: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
     150: iconst_0
     151: invokespecial #22                 // Method putPollEvents:(II)V
     154: aload_0
     155: getfield      #11                 // Field keys:Ljava/util/Map;
     158: aload_1
     159: iconst_1
     160: invokestatic  #49                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     163: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: pop
     169: aload_2
     170: monitorexit
     171: goto          181
     174: astore        5
     176: aload_2
     177: monitorexit
     178: aload         5
     180: athrow
     181: return
    Exception table:
       from    to  target type
           7   171   174   any
         174   178   174   any

  private void remove(jnr.enxio.channels.PollSelectionKey);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
       4: istore_2
       5: aload_0
       6: getfield      #8                  // Field regLock:Ljava/lang/Object;
       9: dup
      10: astore_3
      11: monitorenter
      12: iload_2
      13: aload_0
      14: getfield      #23                 // Field nfds:I
      17: iconst_1
      18: isub
      19: if_icmpge     80
      22: aload_0
      23: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      26: aload_0
      27: getfield      #23                 // Field nfds:I
      30: iconst_1
      31: isub
      32: aaload
      33: astore        4
      35: aload_0
      36: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      39: iload_2
      40: aload         4
      42: aastore
      43: aload_0
      44: iload_2
      45: aload_0
      46: aload         4
      48: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
      51: invokespecial #51                 // Method getPollFD:(I)I
      54: invokespecial #20                 // Method putPollFD:(II)V
      57: aload_0
      58: iload_2
      59: aload_0
      60: aload         4
      62: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
      65: invokespecial #52                 // Method getPollEvents:(I)S
      68: invokespecial #22                 // Method putPollEvents:(II)V
      71: aload         4
      73: iload_2
      74: invokevirtual #47                 // Method jnr/enxio/channels/PollSelectionKey.setIndex:(I)V
      77: goto          92
      80: aload_0
      81: iload_2
      82: iconst_m1
      83: invokespecial #20                 // Method putPollFD:(II)V
      86: aload_0
      87: iload_2
      88: iconst_0
      89: invokespecial #22                 // Method putPollEvents:(II)V
      92: aload_0
      93: getfield      #3                  // Field keyArray:[Ljnr/enxio/channels/PollSelectionKey;
      96: aload_0
      97: getfield      #23                 // Field nfds:I
     100: iconst_1
     101: isub
     102: aconst_null
     103: aastore
     104: aload_0
     105: dup
     106: getfield      #23                 // Field nfds:I
     109: iconst_1
     110: isub
     111: putfield      #23                 // Field nfds:I
     114: aload_0
     115: getfield      #14                 // Field selected:Ljava/util/Set;
     118: dup
     119: astore        4
     121: monitorenter
     122: aload_0
     123: getfield      #14                 // Field selected:Ljava/util/Set;
     126: aload_1
     127: invokeinterface #53,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     132: pop
     133: aload         4
     135: monitorexit
     136: goto          147
     139: astore        5
     141: aload         4
     143: monitorexit
     144: aload         5
     146: athrow
     147: aload_0
     148: getfield      #11                 // Field keys:Ljava/util/Map;
     151: aload_1
     152: invokeinterface #54,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: aload_3
     159: monitorexit
     160: goto          170
     163: astore        6
     165: aload_3
     166: monitorexit
     167: aload         6
     169: athrow
     170: aload_0
     171: aload_1
     172: invokevirtual #55                 // Method deregister:(Ljava/nio/channels/spi/AbstractSelectionKey;)V
     175: return
    Exception table:
       from    to  target type
         122   136   139   any
         139   144   139   any
          12   160   163   any
         163   167   163   any

  public int selectNow() throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #56                 // Method poll:(J)I
       5: ireturn

  public int select(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: lcmp
       4: ifle          11
       7: lload_1
       8: goto          14
      11: ldc2_w        #57                 // long -1l
      14: invokespecial #56                 // Method poll:(J)I
      17: ireturn

  public int select() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #57                 // long -1l
       4: invokespecial #56                 // Method poll:(J)I
       7: ireturn

  private int poll(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method cancelledKeys:()Ljava/util/Set;
       4: astore_3
       5: aload_3
       6: dup
       7: astore        4
       9: monitorenter
      10: aload_3
      11: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        5
      18: aload         5
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          52
      28: aload         5
      30: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #33                 // class java/nio/channels/SelectionKey
      38: astore        6
      40: aload_0
      41: aload         6
      43: checkcast     #2                  // class jnr/enxio/channels/PollSelectionKey
      46: invokespecial #34                 // Method remove:(Ljnr/enxio/channels/PollSelectionKey;)V
      49: goto          18
      52: aload_3
      53: invokeinterface #60,  1           // InterfaceMethod java/util/Set.clear:()V
      58: aload         4
      60: monitorexit
      61: goto          72
      64: astore        7
      66: aload         4
      68: monitorexit
      69: aload         7
      71: athrow
      72: iconst_0
      73: istore        4
      75: aload_0
      76: invokevirtual #61                 // Method begin:()V
      79: invokestatic  #15                 // Method jnr/enxio/channels/Native.libc:()Ljnr/enxio/channels/Native$LibC;
      82: aload_0
      83: getfield      #4                  // Field pollData:Ljava/nio/ByteBuffer;
      86: aload_0
      87: getfield      #23                 // Field nfds:I
      90: lload_1
      91: l2i
      92: invokeinterface #62,  4           // InterfaceMethod jnr/enxio/channels/Native$LibC.poll:(Ljava/nio/ByteBuffer;II)I
      97: istore        4
      99: iload         4
     101: ifge          123
     104: getstatic     #63                 // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
     107: invokestatic  #64                 // Method jnr/enxio/channels/Native.getRuntime:()Ljnr/ffi/Runtime;
     110: invokevirtual #65                 // Method jnr/ffi/Runtime.getLastError:()I
     113: i2l
     114: invokestatic  #66                 // Method jnr/constants/platform/Errno.valueOf:(J)Ljnr/constants/platform/Errno;
     117: invokevirtual #67                 // Method jnr/constants/platform/Errno.equals:(Ljava/lang/Object;)Z
     120: ifne          79
     123: aload_0
     124: invokevirtual #68                 // Method end:()V
     127: goto          139
     130: astore        8
     132: aload_0
     133: invokevirtual #68                 // Method end:()V
     136: aload         8
     138: athrow
     139: iload         4
     141: iconst_1
     142: if_icmpge     148
     145: iload         4
     147: ireturn
     148: aload_0
     149: iconst_0
     150: invokespecial #69                 // Method getPollRevents:(I)S
     153: iconst_1
     154: iand
     155: ifeq          162
     158: aload_0
     159: invokespecial #70                 // Method wakeupReceived:()V
     162: iconst_0
     163: istore        5
     165: aload_0
     166: getfield      #11                 // Field keys:Ljava/util/Map;
     169: invokeinterface #29,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     174: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     179: astore        6
     181: aload         6
     183: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     188: ifeq          334
     191: aload         6
     193: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     198: checkcast     #33                 // class java/nio/channels/SelectionKey
     201: astore        7
     203: aload         7
     205: checkcast     #2                  // class jnr/enxio/channels/PollSelectionKey
     208: astore        8
     210: aload_0
     211: aload         8
     213: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
     216: invokespecial #69                 // Method getPollRevents:(I)S
     219: istore        9
     221: iload         9
     223: ifeq          331
     226: aload_0
     227: aload         8
     229: invokevirtual #43                 // Method jnr/enxio/channels/PollSelectionKey.getIndex:()I
     232: iconst_0
     233: invokespecial #71                 // Method putPollRevents:(II)V
     236: aload         7
     238: invokevirtual #72                 // Method java/nio/channels/SelectionKey.interestOps:()I
     241: istore        10
     243: iconst_0
     244: istore        11
     246: iload         9
     248: iconst_1
     249: iand
     250: ifeq          263
     253: iload         11
     255: iload         10
     257: bipush        17
     259: iand
     260: ior
     261: istore        11
     263: iload         9
     265: iconst_4
     266: iand
     267: ifeq          280
     270: iload         11
     272: iload         10
     274: bipush        12
     276: iand
     277: ior
     278: istore        11
     280: iload         9
     282: bipush        24
     284: iand
     285: ifeq          292
     288: iload         10
     290: istore        11
     292: aload         7
     294: checkcast     #2                  // class jnr/enxio/channels/PollSelectionKey
     297: iload         11
     299: invokevirtual #73                 // Method jnr/enxio/channels/PollSelectionKey.readyOps:(I)V
     302: iinc          5, 1
     305: aload_0
     306: getfield      #14                 // Field selected:Ljava/util/Set;
     309: aload         7
     311: invokeinterface #74,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     316: ifne          331
     319: aload_0
     320: getfield      #14                 // Field selected:Ljava/util/Set;
     323: aload         7
     325: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     330: pop
     331: goto          181
     334: iload         5
     336: ireturn
    Exception table:
       from    to  target type
          10    61    64   any
          64    69    64   any
          75   123   130   any
         130   132   130   any

  private void wakeupReceived() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pipefd:[I
       4: iconst_0
       5: iaload
       6: iconst_1
       7: invokestatic  #76                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: invokestatic  #77                 // Method jnr/enxio/channels/Native.read:(ILjava/nio/ByteBuffer;)I
      13: pop
      14: return

  public java.nio.channels.Selector wakeup();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pipefd:[I
       4: iconst_1
       5: iaload
       6: iconst_1
       7: invokestatic  #76                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: invokestatic  #78                 // Method jnr/enxio/channels/Native.write:(ILjava/nio/ByteBuffer;)I
      13: pop
      14: goto          27
      17: astore_1
      18: new           #80                 // class java/lang/RuntimeException
      21: dup
      22: aload_1
      23: invokespecial #81                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
      27: aload_0
      28: areturn
    Exception table:
       from    to  target type
           0    14    17   Class java/io/IOException
}
