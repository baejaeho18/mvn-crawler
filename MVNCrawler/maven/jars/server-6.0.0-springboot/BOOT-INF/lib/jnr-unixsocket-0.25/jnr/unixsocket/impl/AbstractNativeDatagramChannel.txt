Compiled from "AbstractNativeDatagramChannel.java"
public abstract class jnr.unixsocket.impl.AbstractNativeDatagramChannel extends java.nio.channels.DatagramChannel implements java.nio.channels.ByteChannel,jnr.enxio.channels.NativeSelectableChannel {
  private final jnr.unixsocket.impl.Common common;

  public jnr.unixsocket.impl.AbstractNativeDatagramChannel(int);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method jnr/enxio/channels/NativeSelectorProvider.getInstance:()Ljava/nio/channels/spi/SelectorProvider;
       4: iload_1
       5: invokespecial #2                  // Method "<init>":(Ljava/nio/channels/spi/SelectorProvider;I)V
       8: return

  jnr.unixsocket.impl.AbstractNativeDatagramChannel(java.nio.channels.spi.SelectorProvider, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/nio/channels/DatagramChannel."<init>":(Ljava/nio/channels/spi/SelectorProvider;)V
       5: aload_0
       6: new           #4                  // class jnr/unixsocket/impl/Common
       9: dup
      10: iload_2
      11: invokespecial #5                  // Method jnr/unixsocket/impl/Common."<init>":(I)V
      14: putfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
      17: return

  public void setFD(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: iload_1
       5: invokevirtual #7                  // Method jnr/unixsocket/impl/Common.setFD:(I)V
       8: return

  public final int getFD();
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: invokevirtual #8                  // Method jnr/unixsocket/impl/Common.getFD:()I
       7: ireturn

  protected void implCloseSelectableChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: invokevirtual #8                  // Method jnr/unixsocket/impl/Common.getFD:()I
       7: invokestatic  #9                  // Method jnr/enxio/channels/Native.close:(I)I
      10: pop
      11: return

  protected void implConfigureBlocking(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: invokevirtual #8                  // Method jnr/unixsocket/impl/Common.getFD:()I
       7: iload_1
       8: invokestatic  #10                 // Method jnr/enxio/channels/Native.setBlocking:(IZ)V
      11: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: aload_1
       5: invokevirtual #11                 // Method jnr/unixsocket/impl/Common.read:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #12                 // Method jnr/unixsocket/impl/Common.read:([Ljava/nio/ByteBuffer;II)J
      10: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: aload_1
       5: invokevirtual #13                 // Method jnr/unixsocket/impl/Common.write:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field common:Ljnr/unixsocket/impl/Common;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #14                 // Method jnr/unixsocket/impl/Common.write:([Ljava/nio/ByteBuffer;II)J
      10: lreturn
}
