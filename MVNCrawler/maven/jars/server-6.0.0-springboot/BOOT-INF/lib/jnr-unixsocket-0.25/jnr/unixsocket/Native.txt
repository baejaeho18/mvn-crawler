Compiled from "Native.java"
class jnr.unixsocket.Native {
  static final java.lang.String[] libnames;

  static final jnr.unixsocket.Native$LibC INSTANCE;

  jnr.unixsocket.Native();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static final jnr.unixsocket.Native$LibC libsocket();
    Code:
       0: getstatic     #2                  // Field INSTANCE:Ljnr/unixsocket/Native$LibC;
       3: areturn

  static final jnr.unixsocket.Native$LibC libc();
    Code:
       0: getstatic     #2                  // Field INSTANCE:Ljnr/unixsocket/Native$LibC;
       3: areturn

  static int socket(jnr.constants.platform.ProtocolFamily, jnr.constants.platform.Sock, int) throws java.io.IOException;
    Code:
       0: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
       3: aload_0
       4: invokevirtual #4                  // Method jnr/constants/platform/ProtocolFamily.intValue:()I
       7: aload_1
       8: invokevirtual #5                  // Method jnr/constants/platform/Sock.intValue:()I
      11: iload_2
      12: invokeinterface #6,  4            // InterfaceMethod jnr/unixsocket/Native$LibC.socket:(III)I
      17: istore_3
      18: iload_3
      19: ifge          33
      22: new           #7                  // class java/io/IOException
      25: dup
      26: invokestatic  #8                  // Method getLastErrorString:()Ljava/lang/String;
      29: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iload_3
      34: ireturn

  static int socketpair(jnr.constants.platform.ProtocolFamily, jnr.constants.platform.Sock, int, int[]) throws java.io.IOException;
    Code:
       0: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
       3: aload_0
       4: invokevirtual #4                  // Method jnr/constants/platform/ProtocolFamily.intValue:()I
       7: aload_1
       8: invokevirtual #5                  // Method jnr/constants/platform/Sock.intValue:()I
      11: iload_2
      12: aload_3
      13: invokeinterface #10,  5           // InterfaceMethod jnr/unixsocket/Native$LibC.socketpair:(III[I)I
      18: ifge          50
      21: new           #7                  // class java/io/IOException
      24: dup
      25: new           #11                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #13                 // String socketpair(2) failed
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokestatic  #8                  // Method getLastErrorString:()Ljava/lang/String;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: iconst_0
      51: ireturn

  static int listen(int, int);
    Code:
       0: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
       3: iload_0
       4: iload_1
       5: invokeinterface #16,  3           // InterfaceMethod jnr/unixsocket/Native$LibC.listen:(II)I
      10: ireturn

  static int bind(int, jnr.unixsocket.SockAddrUnix, int);
    Code:
       0: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
       3: iload_0
       4: aload_1
       5: iload_2
       6: invokeinterface #17,  4           // InterfaceMethod jnr/unixsocket/Native$LibC.bind:(ILjnr/unixsocket/SockAddrUnix;I)I
      11: ireturn

  static int accept(int, jnr.unixsocket.SockAddrUnix, jnr.ffi.byref.IntByReference);
    Code:
       0: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  4           // InterfaceMethod jnr/unixsocket/Native$LibC.accept:(ILjnr/unixsocket/SockAddrUnix;Ljnr/ffi/byref/IntByReference;)I
      11: ireturn

  static int connect(int, jnr.unixsocket.SockAddrUnix, int);
    Code:
       0: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
       3: iload_0
       4: aload_1
       5: iload_2
       6: invokeinterface #19,  4           // InterfaceMethod jnr/unixsocket/Native$LibC.connect:(ILjnr/unixsocket/SockAddrUnix;I)I
      11: ireturn

  static java.lang.String getLastErrorString();
    Code:
       0: invokestatic  #20                 // Method jnr/ffi/Runtime.getSystemRuntime:()Ljnr/ffi/Runtime;
       3: invokestatic  #21                 // Method jnr/ffi/LastError.getLastError:(Ljnr/ffi/Runtime;)I
       6: invokestatic  #22                 // Method strerror:(I)Ljava/lang/String;
       9: areturn

  static jnr.constants.platform.Errno getLastError();
    Code:
       0: invokestatic  #20                 // Method jnr/ffi/Runtime.getSystemRuntime:()Ljnr/ffi/Runtime;
       3: invokestatic  #21                 // Method jnr/ffi/LastError.getLastError:(Ljnr/ffi/Runtime;)I
       6: i2l
       7: invokestatic  #23                 // Method jnr/constants/platform/Errno.valueOf:(J)Ljnr/constants/platform/Errno;
      10: areturn

  static java.lang.String strerror(int);
    Code:
       0: invokestatic  #24                 // Method libc:()Ljnr/unixsocket/Native$LibC;
       3: iload_0
       4: invokeinterface #25,  2           // InterfaceMethod jnr/unixsocket/Native$LibC.strerror:(I)Ljava/lang/String;
       9: areturn

  public static void setBlocking(int, boolean);
    Code:
       0: invokestatic  #24                 // Method libc:()Ljnr/unixsocket/Native$LibC;
       3: iload_0
       4: getstatic     #26                 // Field jnr/unixsocket/Native$LibC.F_GETFL:I
       7: iconst_0
       8: invokeinterface #27,  4           // InterfaceMethod jnr/unixsocket/Native$LibC.fcntl:(III)I
      13: istore_2
      14: iload_1
      15: ifeq          29
      18: iload_2
      19: getstatic     #28                 // Field jnr/unixsocket/Native$LibC.O_NONBLOCK:I
      22: iconst_m1
      23: ixor
      24: iand
      25: istore_2
      26: goto          35
      29: iload_2
      30: getstatic     #28                 // Field jnr/unixsocket/Native$LibC.O_NONBLOCK:I
      33: ior
      34: istore_2
      35: invokestatic  #24                 // Method libc:()Ljnr/unixsocket/Native$LibC;
      38: iload_0
      39: getstatic     #29                 // Field jnr/unixsocket/Native$LibC.F_SETFL:I
      42: iload_2
      43: invokeinterface #27,  4           // InterfaceMethod jnr/unixsocket/Native$LibC.fcntl:(III)I
      48: pop
      49: return

  public static int setsockopt(int, jnr.constants.platform.SocketLevel, jnr.constants.platform.SocketOption, boolean);
    Code:
       0: iload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #30                 // Method setsockopt:(ILjnr/constants/platform/SocketLevel;Ljnr/constants/platform/SocketOption;I)I
      15: ireturn

  public static int setsockopt(int, jnr.constants.platform.SocketLevel, jnr.constants.platform.SocketOption, int);
    Code:
       0: aload_2
       1: getstatic     #31                 // Field jnr/constants/platform/SocketOption.SO_RCVTIMEO:Ljnr/constants/platform/SocketOption;
       4: if_acmpeq     14
       7: aload_2
       8: getstatic     #32                 // Field jnr/constants/platform/SocketOption.SO_SNDTIMEO:Ljnr/constants/platform/SocketOption;
      11: if_acmpne     81
      14: new           #33                 // class jnr/posix/DefaultNativeTimeval
      17: dup
      18: invokestatic  #20                 // Method jnr/ffi/Runtime.getSystemRuntime:()Ljnr/ffi/Runtime;
      21: invokespecial #34                 // Method jnr/posix/DefaultNativeTimeval."<init>":(Ljnr/ffi/Runtime;)V
      24: astore        4
      26: aload         4
      28: iconst_2
      29: newarray       long
      31: dup
      32: iconst_0
      33: iload_3
      34: sipush        1000
      37: idiv
      38: i2l
      39: lastore
      40: dup
      41: iconst_1
      42: iload_3
      43: i2l
      44: ldc2_w        #35                 // long 1000l
      47: lrem
      48: ldc2_w        #35                 // long 1000l
      51: lmul
      52: lastore
      53: invokevirtual #37                 // Method jnr/posix/DefaultNativeTimeval.setTime:([J)V
      56: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
      59: iload_0
      60: aload_1
      61: invokevirtual #38                 // Method jnr/constants/platform/SocketLevel.intValue:()I
      64: aload_2
      65: invokevirtual #39                 // Method jnr/constants/platform/SocketOption.intValue:()I
      68: aload         4
      70: aload         4
      72: invokestatic  #40                 // Method jnr/posix/DefaultNativeTimeval.size:(Ljnr/ffi/Struct;)I
      75: invokeinterface #41,  6           // InterfaceMethod jnr/unixsocket/Native$LibC.setsockopt:(IIILjnr/posix/Timeval;I)I
      80: ireturn
      81: iconst_4
      82: invokestatic  #42                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      85: astore        4
      87: aload         4
      89: invokestatic  #43                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      92: invokevirtual #44                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      95: pop
      96: aload         4
      98: iload_3
      99: invokevirtual #45                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     102: invokevirtual #46                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     105: pop
     106: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
     109: iload_0
     110: aload_1
     111: invokevirtual #38                 // Method jnr/constants/platform/SocketLevel.intValue:()I
     114: aload_2
     115: invokevirtual #39                 // Method jnr/constants/platform/SocketOption.intValue:()I
     118: aload         4
     120: aload         4
     122: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
     125: invokeinterface #48,  6           // InterfaceMethod jnr/unixsocket/Native$LibC.setsockopt:(IIILjava/nio/ByteBuffer;I)I
     130: ireturn

  public static int getsockopt(int, jnr.constants.platform.SocketLevel, int);
    Code:
       0: iload_2
       1: getstatic     #31                 // Field jnr/constants/platform/SocketOption.SO_RCVTIMEO:Ljnr/constants/platform/SocketOption;
       4: invokevirtual #39                 // Method jnr/constants/platform/SocketOption.intValue:()I
       7: if_icmpeq     20
      10: iload_2
      11: getstatic     #32                 // Field jnr/constants/platform/SocketOption.SO_SNDTIMEO:Ljnr/constants/platform/SocketOption;
      14: invokevirtual #39                 // Method jnr/constants/platform/SocketOption.intValue:()I
      17: if_icmpne     89
      20: new           #33                 // class jnr/posix/DefaultNativeTimeval
      23: dup
      24: invokestatic  #20                 // Method jnr/ffi/Runtime.getSystemRuntime:()Ljnr/ffi/Runtime;
      27: invokespecial #34                 // Method jnr/posix/DefaultNativeTimeval."<init>":(Ljnr/ffi/Runtime;)V
      30: astore        4
      32: new           #49                 // class jnr/ffi/byref/IntByReference
      35: dup
      36: aload         4
      38: invokestatic  #40                 // Method jnr/posix/DefaultNativeTimeval.size:(Ljnr/ffi/Struct;)I
      41: invokespecial #50                 // Method jnr/ffi/byref/IntByReference."<init>":(I)V
      44: astore_3
      45: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
      48: iload_0
      49: aload_1
      50: invokevirtual #38                 // Method jnr/constants/platform/SocketLevel.intValue:()I
      53: iload_2
      54: aload         4
      56: aload_3
      57: invokeinterface #51,  6           // InterfaceMethod jnr/unixsocket/Native$LibC.getsockopt:(IIILjnr/posix/Timeval;Ljnr/ffi/byref/IntByReference;)I
      62: pop
      63: aload         4
      65: getfield      #52                 // Field jnr/posix/DefaultNativeTimeval.tv_sec:Ljnr/ffi/Struct$SignedLong;
      68: invokevirtual #53                 // Method jnr/ffi/Struct$SignedLong.intValue:()I
      71: sipush        1000
      74: imul
      75: aload         4
      77: getfield      #54                 // Field jnr/posix/DefaultNativeTimeval.tv_usec:Ljnr/ffi/Struct$SignedLong;
      80: invokevirtual #53                 // Method jnr/ffi/Struct$SignedLong.intValue:()I
      83: sipush        1000
      86: idiv
      87: iadd
      88: ireturn
      89: iconst_4
      90: invokestatic  #42                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      93: astore        4
      95: aload         4
      97: invokestatic  #43                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
     100: invokevirtual #44                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     103: pop
     104: new           #49                 // class jnr/ffi/byref/IntByReference
     107: dup
     108: iconst_4
     109: invokespecial #50                 // Method jnr/ffi/byref/IntByReference."<init>":(I)V
     112: astore_3
     113: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
     116: iload_0
     117: aload_1
     118: invokevirtual #38                 // Method jnr/constants/platform/SocketLevel.intValue:()I
     121: iload_2
     122: aload         4
     124: aload_3
     125: invokeinterface #55,  6           // InterfaceMethod jnr/unixsocket/Native$LibC.getsockopt:(IIILjava/nio/ByteBuffer;Ljnr/ffi/byref/IntByReference;)I
     130: pop
     131: aload         4
     133: invokevirtual #56                 // Method java/nio/ByteBuffer.getInt:()I
     136: ireturn

  public static int getsockopt(int, jnr.constants.platform.SocketLevel, jnr.constants.platform.SocketOption, jnr.ffi.Struct);
    Code:
       0: aload_3
       1: invokestatic  #57                 // Method jnr/ffi/Struct.getMemory:(Ljnr/ffi/Struct;)Ljnr/ffi/Pointer;
       4: astore        4
       6: new           #49                 // class jnr/ffi/byref/IntByReference
       9: dup
      10: aload_3
      11: invokestatic  #58                 // Method jnr/ffi/Struct.size:(Ljnr/ffi/Struct;)I
      14: invokespecial #50                 // Method jnr/ffi/byref/IntByReference."<init>":(I)V
      17: astore        5
      19: aload         4
      21: invokevirtual #59                 // Method jnr/ffi/Pointer.array:()Ljava/lang/Object;
      24: checkcast     #60                 // class "[B"
      27: checkcast     #60                 // class "[B"
      30: invokestatic  #61                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      33: astore        6
      35: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
      38: iload_0
      39: aload_1
      40: invokevirtual #38                 // Method jnr/constants/platform/SocketLevel.intValue:()I
      43: aload_2
      44: invokevirtual #39                 // Method jnr/constants/platform/SocketOption.intValue:()I
      47: aload         6
      49: aload         5
      51: invokeinterface #55,  6           // InterfaceMethod jnr/unixsocket/Native$LibC.getsockopt:(IIILjava/nio/ByteBuffer;Ljnr/ffi/byref/IntByReference;)I
      56: ireturn

  public static boolean getboolsockopt(int, jnr.constants.platform.SocketLevel, int);
    Code:
       0: iload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #62                 // Method getsockopt:(ILjnr/constants/platform/SocketLevel;I)I
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static int sendto(int, java.nio.ByteBuffer, jnr.unixsocket.SockAddrUnix, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #63                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #64                 // String Source buffer cannot be null
      10: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
      17: iload_0
      18: aload_1
      19: aload_1
      20: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      23: i2l
      24: iconst_0
      25: aload_2
      26: iload_3
      27: invokeinterface #66,  8           // InterfaceMethod jnr/unixsocket/Native$LibC.sendto:(ILjava/nio/ByteBuffer;JILjnr/unixsocket/SockAddrUnix;I)I
      32: istore        4
      34: iload         4
      36: ifge          51
      39: getstatic     #67                 // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
      42: invokestatic  #68                 // Method getLastError:()Ljnr/constants/platform/Errno;
      45: invokevirtual #69                 // Method jnr/constants/platform/Errno.equals:(Ljava/lang/Object;)Z
      48: ifne          14
      51: iload         4
      53: ifle          68
      56: aload_1
      57: aload_1
      58: invokevirtual #70                 // Method java/nio/ByteBuffer.position:()I
      61: iload         4
      63: iadd
      64: invokevirtual #71                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: iload         4
      70: ireturn

  public static int recvfrom(int, java.nio.ByteBuffer, jnr.unixsocket.SockAddrUnix) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #63                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #72                 // String Destination buffer cannot be null
      10: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #73                 // Method java/nio/ByteBuffer.isReadOnly:()Z
      18: ifeq          31
      21: new           #63                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #74                 // String Read-only buffer
      27: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aconst_null
      32: aload_2
      33: if_acmpne     40
      36: aconst_null
      37: goto          51
      40: new           #49                 // class jnr/ffi/byref/IntByReference
      43: dup
      44: aload_2
      45: invokevirtual #75                 // Method jnr/unixsocket/SockAddrUnix.getMaximumLength:()I
      48: invokespecial #50                 // Method jnr/ffi/byref/IntByReference."<init>":(I)V
      51: astore_3
      52: invokestatic  #3                  // Method libsocket:()Ljnr/unixsocket/Native$LibC;
      55: iload_0
      56: aload_1
      57: aload_1
      58: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      61: i2l
      62: iconst_0
      63: aload_2
      64: aload_3
      65: invokeinterface #76,  8           // InterfaceMethod jnr/unixsocket/Native$LibC.recvfrom:(ILjava/nio/ByteBuffer;JILjnr/unixsocket/SockAddrUnix;Ljnr/ffi/byref/IntByReference;)I
      70: istore        4
      72: iload         4
      74: ifge          89
      77: getstatic     #67                 // Field jnr/constants/platform/Errno.EINTR:Ljnr/constants/platform/Errno;
      80: invokestatic  #68                 // Method getLastError:()Ljnr/constants/platform/Errno;
      83: invokevirtual #69                 // Method jnr/constants/platform/Errno.equals:(Ljava/lang/Object;)Z
      86: ifne          52
      89: iload         4
      91: ifle          106
      94: aload_1
      95: aload_1
      96: invokevirtual #70                 // Method java/nio/ByteBuffer.position:()I
      99: iload         4
     101: iadd
     102: invokevirtual #71                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     105: pop
     106: iload         4
     108: ireturn

  static {};
    Code:
       0: invokestatic  #77                 // Method jnr/ffi/Platform.getNativePlatform:()Ljnr/ffi/Platform;
       3: invokevirtual #78                 // Method jnr/ffi/Platform.getOS:()Ljnr/ffi/Platform$OS;
       6: getstatic     #79                 // Field jnr/ffi/Platform$OS.SOLARIS:Ljnr/ffi/Platform$OS;
       9: if_acmpne     38
      12: iconst_3
      13: anewarray     #80                 // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #81                 // String socket
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #82                 // String nsl
      25: aastore
      26: dup
      27: iconst_2
      28: invokestatic  #77                 // Method jnr/ffi/Platform.getNativePlatform:()Ljnr/ffi/Platform;
      31: invokevirtual #83                 // Method jnr/ffi/Platform.getStandardCLibraryName:()Ljava/lang/String;
      34: aastore
      35: goto          51
      38: iconst_1
      39: anewarray     #80                 // class java/lang/String
      42: dup
      43: iconst_0
      44: invokestatic  #77                 // Method jnr/ffi/Platform.getNativePlatform:()Ljnr/ffi/Platform;
      47: invokevirtual #83                 // Method jnr/ffi/Platform.getStandardCLibraryName:()Ljava/lang/String;
      50: aastore
      51: putstatic     #84                 // Field libnames:[Ljava/lang/String;
      54: ldc           #85                 // class jnr/unixsocket/Native$LibC
      56: invokestatic  #86                 // Method jnr/ffi/LibraryLoader.create:(Ljava/lang/Class;)Ljnr/ffi/LibraryLoader;
      59: astore_0
      60: getstatic     #84                 // Field libnames:[Ljava/lang/String;
      63: astore_1
      64: aload_1
      65: arraylength
      66: istore_2
      67: iconst_0
      68: istore_3
      69: iload_3
      70: iload_2
      71: if_icmpge     92
      74: aload_1
      75: iload_3
      76: aaload
      77: astore        4
      79: aload_0
      80: aload         4
      82: invokevirtual #87                 // Method jnr/ffi/LibraryLoader.library:(Ljava/lang/String;)Ljnr/ffi/LibraryLoader;
      85: pop
      86: iinc          3, 1
      89: goto          69
      92: aload_0
      93: invokevirtual #88                 // Method jnr/ffi/LibraryLoader.load:()Ljava/lang/Object;
      96: checkcast     #85                 // class jnr/unixsocket/Native$LibC
      99: putstatic     #2                  // Field INSTANCE:Ljnr/unixsocket/Native$LibC;
     102: return
}
