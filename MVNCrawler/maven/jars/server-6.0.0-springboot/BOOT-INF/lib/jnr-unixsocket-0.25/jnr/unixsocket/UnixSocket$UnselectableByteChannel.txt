Compiled from "UnixSocket.java"
final class jnr.unixsocket.UnixSocket$UnselectableByteChannel implements java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel {
  private final jnr.unixsocket.UnixSocketChannel channel;

  jnr.unixsocket.UnixSocket$UnselectableByteChannel(jnr.unixsocket.UnixSocketChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Ljnr/unixsocket/UnixSocketChannel;
       9: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljnr/unixsocket/UnixSocketChannel;
       4: aload_1
       5: invokevirtual #3                  // Method jnr/unixsocket/UnixSocketChannel.write:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljnr/unixsocket/UnixSocketChannel;
       4: aload_1
       5: invokevirtual #4                  // Method jnr/unixsocket/UnixSocketChannel.read:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljnr/unixsocket/UnixSocketChannel;
       4: invokevirtual #5                  // Method jnr/unixsocket/UnixSocketChannel.isOpen:()Z
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljnr/unixsocket/UnixSocketChannel;
       4: invokevirtual #6                  // Method jnr/unixsocket/UnixSocketChannel.close:()V
       7: return
}
