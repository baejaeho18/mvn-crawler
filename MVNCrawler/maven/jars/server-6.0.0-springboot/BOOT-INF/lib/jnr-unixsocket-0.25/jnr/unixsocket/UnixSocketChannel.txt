Compiled from "UnixSocketChannel.java"
public class jnr.unixsocket.UnixSocketChannel extends jnr.unixsocket.impl.AbstractNativeSocketChannel {
  private jnr.unixsocket.UnixSocketChannel$State state;

  private jnr.unixsocket.UnixSocketAddress remoteAddress;

  private jnr.unixsocket.UnixSocketAddress localAddress;

  private final java.util.concurrent.locks.ReadWriteLock stateLock;

  private final jnr.unixsocket.BindHandler bindHandler;

  public static final jnr.unixsocket.UnixSocketChannel open() throws java.io.IOException;
    Code:
       0: new           #1                  // class jnr/unixsocket/UnixSocketChannel
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  public static final jnr.unixsocket.UnixSocketChannel open(jnr.unixsocket.UnixSocketAddress) throws java.io.IOException;
    Code:
       0: new           #1                  // class jnr/unixsocket/UnixSocketChannel
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #3                  // Method connect:(Ljnr/unixsocket/UnixSocketAddress;)Z
      13: pop
      14: goto          24
      17: astore_2
      18: aload_1
      19: invokevirtual #5                  // Method close:()V
      22: aload_2
      23: athrow
      24: aload_1
      25: areturn
    Exception table:
       from    to  target type
           8    14    17   Class java/io/IOException

  public static final jnr.unixsocket.UnixSocketChannel create() throws java.io.IOException;
    Code:
       0: new           #1                  // class jnr/unixsocket/UnixSocketChannel
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  public static final jnr.unixsocket.UnixSocketChannel[] pair() throws java.io.IOException;
    Code:
       0: iconst_2
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_m1
       6: iastore
       7: dup
       8: iconst_1
       9: iconst_m1
      10: iastore
      11: astore_0
      12: getstatic     #6                  // Field jnr/constants/platform/ProtocolFamily.PF_UNIX:Ljnr/constants/platform/ProtocolFamily;
      15: getstatic     #7                  // Field jnr/constants/platform/Sock.SOCK_STREAM:Ljnr/constants/platform/Sock;
      18: iconst_0
      19: aload_0
      20: invokestatic  #8                  // Method jnr/unixsocket/Native.socketpair:(Ljnr/constants/platform/ProtocolFamily;Ljnr/constants/platform/Sock;I[I)I
      23: pop
      24: iconst_2
      25: anewarray     #1                  // class jnr/unixsocket/UnixSocketChannel
      28: dup
      29: iconst_0
      30: new           #1                  // class jnr/unixsocket/UnixSocketChannel
      33: dup
      34: aload_0
      35: iconst_0
      36: iaload
      37: getstatic     #9                  // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTED:Ljnr/unixsocket/UnixSocketChannel$State;
      40: iconst_1
      41: invokespecial #10                 // Method "<init>":(ILjnr/unixsocket/UnixSocketChannel$State;Z)V
      44: aastore
      45: dup
      46: iconst_1
      47: new           #1                  // class jnr/unixsocket/UnixSocketChannel
      50: dup
      51: aload_0
      52: iconst_1
      53: iaload
      54: getstatic     #9                  // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTED:Ljnr/unixsocket/UnixSocketChannel$State;
      57: iconst_1
      58: invokespecial #10                 // Method "<init>":(ILjnr/unixsocket/UnixSocketChannel$State;Z)V
      61: aastore
      62: areturn

  public static final jnr.unixsocket.UnixSocketChannel fromFD(int);
    Code:
       0: new           #1                  // class jnr/unixsocket/UnixSocketChannel
       3: dup
       4: iload_0
       5: invokespecial #11                 // Method "<init>":(I)V
       8: areturn

  jnr.unixsocket.UnixSocketChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #6                  // Field jnr/constants/platform/ProtocolFamily.PF_UNIX:Ljnr/constants/platform/ProtocolFamily;
       4: getstatic     #7                  // Field jnr/constants/platform/Sock.SOCK_STREAM:Ljnr/constants/platform/Sock;
       7: iconst_0
       8: invokestatic  #12                 // Method jnr/unixsocket/Native.socket:(Ljnr/constants/platform/ProtocolFamily;Ljnr/constants/platform/Sock;I)I
      11: invokespecial #11                 // Method "<init>":(I)V
      14: return

  jnr.unixsocket.UnixSocketChannel(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #9                  // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTED:Ljnr/unixsocket/UnixSocketChannel$State;
       5: iconst_0
       6: invokespecial #10                 // Method "<init>":(ILjnr/unixsocket/UnixSocketChannel$State;Z)V
       9: return

  jnr.unixsocket.UnixSocketChannel(int, jnr.unixsocket.UnixSocketChannel$State, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #13                 // Method jnr/unixsocket/impl/AbstractNativeSocketChannel."<init>":(I)V
       5: aload_0
       6: aconst_null
       7: putfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      10: aload_0
      11: aconst_null
      12: putfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
      15: aload_0
      16: new           #16                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      19: dup
      20: invokespecial #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      23: putfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      26: aload_0
      27: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      30: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      35: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      40: aload_0
      41: aload_2
      42: putfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      45: aload_0
      46: new           #22                 // class jnr/unixsocket/BindHandler
      49: dup
      50: iload_3
      51: invokespecial #23                 // Method jnr/unixsocket/BindHandler."<init>":(Z)V
      54: putfield      #24                 // Field bindHandler:Ljnr/unixsocket/BindHandler;
      57: aload_0
      58: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      61: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: return

  private boolean doConnect(jnr.unixsocket.SockAddrUnix) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getFD:()I
       4: aload_1
       5: aload_1
       6: invokevirtual #27                 // Method jnr/unixsocket/SockAddrUnix.length:()I
       9: invokestatic  #28                 // Method jnr/unixsocket/Native.connect:(ILjnr/unixsocket/SockAddrUnix;I)I
      12: ifeq          74
      15: invokestatic  #29                 // Method jnr/ffi/Runtime.getSystemRuntime:()Ljnr/ffi/Runtime;
      18: invokestatic  #30                 // Method jnr/ffi/LastError.getLastError:(Ljnr/ffi/Runtime;)I
      21: i2l
      22: invokestatic  #31                 // Method jnr/constants/platform/Errno.valueOf:(J)Ljnr/constants/platform/Errno;
      25: astore_2
      26: getstatic     #32                 // Field jnr/unixsocket/UnixSocketChannel$1.$SwitchMap$jnr$constants$platform$Errno:[I
      29: aload_2
      30: invokevirtual #33                 // Method jnr/constants/platform/Errno.ordinal:()I
      33: iaload
      34: lookupswitch  { // 2
                     1: 60
                     2: 60
               default: 62
          }
      60: iconst_0
      61: ireturn
      62: new           #4                  // class java/io/IOException
      65: dup
      66: aload_2
      67: invokevirtual #34                 // Method jnr/constants/platform/Errno.toString:()Ljava/lang/String;
      70: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: iconst_1
      75: ireturn

  public boolean connect(jnr.unixsocket.UnixSocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
       5: aload_0
       6: aload_0
       7: getfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      10: invokevirtual #36                 // Method jnr/unixsocket/UnixSocketAddress.getStruct:()Ljnr/unixsocket/SockAddrUnix;
      13: invokespecial #37                 // Method doConnect:(Ljnr/unixsocket/SockAddrUnix;)Z
      16: ifne          56
      19: aload_0
      20: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      23: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      28: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      33: aload_0
      34: getstatic     #38                 // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTING:Ljnr/unixsocket/UnixSocketChannel$State;
      37: putfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      40: aload_0
      41: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      44: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      49: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      60: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      65: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      70: aload_0
      71: getstatic     #9                  // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTED:Ljnr/unixsocket/UnixSocketChannel$State;
      74: putfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      77: aload_0
      78: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      81: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      86: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      91: iconst_1
      92: ireturn

  boolean isBound();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bindHandler:Ljnr/unixsocket/BindHandler;
       4: invokevirtual #39                 // Method jnr/unixsocket/BindHandler.isBound:()Z
       7: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: getfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      18: getstatic     #9                  // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTED:Ljnr/unixsocket/UnixSocketChannel$State;
      21: if_acmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_1
      30: aload_0
      31: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      34: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: iload_1
      45: ireturn

  private boolean isIdle();
    Code:
       0: aload_0
       1: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: getfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      18: getstatic     #41                 // Field jnr/unixsocket/UnixSocketChannel$State.IDLE:Ljnr/unixsocket/UnixSocketChannel$State;
      21: if_acmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_1
      30: aload_0
      31: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      34: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: iload_1
      45: ireturn

  public boolean isConnectionPending();
    Code:
       0: aload_0
       1: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: getfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      18: getstatic     #38                 // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTING:Ljnr/unixsocket/UnixSocketChannel$State;
      21: if_acmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_1
      30: aload_0
      31: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      34: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: iload_1
      45: ireturn

  public boolean finishConnect() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: getstatic     #42                 // Field jnr/unixsocket/UnixSocketChannel$1.$SwitchMap$jnr$unixsocket$UnixSocketChannel$State:[I
      17: aload_0
      18: getfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
      21: invokevirtual #43                 // Method jnr/unixsocket/UnixSocketChannel$State.ordinal:()I
      24: iaload
      25: lookupswitch  { // 2
                     1: 52
                     2: 70
               default: 127
          }
      52: iconst_1
      53: istore_1
      54: aload_0
      55: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      58: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      63: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      68: iload_1
      69: ireturn
      70: aload_0
      71: aload_0
      72: getfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      75: invokevirtual #36                 // Method jnr/unixsocket/UnixSocketAddress.getStruct:()Ljnr/unixsocket/SockAddrUnix;
      78: invokespecial #37                 // Method doConnect:(Ljnr/unixsocket/SockAddrUnix;)Z
      81: ifne          102
      84: iconst_0
      85: istore_1
      86: aload_0
      87: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      90: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      95: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     100: iload_1
     101: ireturn
     102: aload_0
     103: getstatic     #9                  // Field jnr/unixsocket/UnixSocketChannel$State.CONNECTED:Ljnr/unixsocket/UnixSocketChannel$State;
     106: putfield      #21                 // Field state:Ljnr/unixsocket/UnixSocketChannel$State;
     109: iconst_1
     110: istore_1
     111: aload_0
     112: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
     115: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
     120: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     125: iload_1
     126: ireturn
     127: new           #44                 // class java/lang/IllegalStateException
     130: dup
     131: ldc           #45                 // String socket is not waiting for connect to complete
     133: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: astore_2
     138: aload_0
     139: getfield      #18                 // Field stateLock:Ljava/util/concurrent/locks/ReadWriteLock;
     142: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
     147: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     152: aload_2
     153: athrow
    Exception table:
       from    to  target type
          14    54   137   any
          70    86   137   any
         102   111   137   any
         127   138   137   any

  public final jnr.unixsocket.UnixSocketAddress getRemoteSocketAddress();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isConnected:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      13: ifnull        21
      16: aload_0
      17: getfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      20: areturn
      21: aload_0
      22: aload_0
      23: invokevirtual #26                 // Method getFD:()I
      26: invokestatic  #48                 // Method jnr/unixsocket/Common.getpeername:(I)Ljnr/unixsocket/UnixSocketAddress;
      29: putfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      32: aload_0
      33: getfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
      36: areturn

  public final jnr.unixsocket.UnixSocketAddress getLocalSocketAddress();
    Code:
       0: aload_0
       1: getfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
       4: ifnull        12
       7: aload_0
       8: getfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
      11: areturn
      12: aload_0
      13: aload_0
      14: invokevirtual #26                 // Method getFD:()I
      17: invokestatic  #49                 // Method jnr/unixsocket/Common.getsockname:(I)Ljnr/unixsocket/UnixSocketAddress;
      20: putfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
      23: aload_0
      24: getfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
      27: areturn

  public boolean connect(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #50                 // class jnr/unixsocket/UnixSocketAddress
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #50                 // class jnr/unixsocket/UnixSocketAddress
      12: invokevirtual #3                  // Method connect:(Ljnr/unixsocket/UnixSocketAddress;)Z
      15: ireturn
      16: new           #51                 // class java/nio/channels/UnsupportedAddressTypeException
      19: dup
      20: invokespecial #52                 // Method java/nio/channels/UnsupportedAddressTypeException."<init>":()V
      23: athrow

  public jnr.unixsocket.UnixSocket socket();
    Code:
       0: new           #53                 // class jnr/unixsocket/UnixSocket
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method jnr/unixsocket/UnixSocket."<init>":(Ljnr/unixsocket/UnixSocketChannel;)V
       8: areturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isConnected:()Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #55                 // Method jnr/unixsocket/impl/AbstractNativeSocketChannel.write:([Ljava/nio/ByteBuffer;II)J
      14: lreturn
      15: aload_0
      16: invokespecial #56                 // Method isIdle:()Z
      19: ifeq          24
      22: lconst_0
      23: lreturn
      24: new           #57                 // class java/nio/channels/ClosedChannelException
      27: dup
      28: invokespecial #58                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      31: athrow

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isConnected:()Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #59                 // Method jnr/unixsocket/impl/AbstractNativeSocketChannel.read:(Ljava/nio/ByteBuffer;)I
      12: ireturn
      13: aload_0
      14: invokespecial #56                 // Method isIdle:()Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: new           #57                 // class java/nio/channels/ClosedChannelException
      25: dup
      26: invokespecial #58                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      29: athrow

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isConnected:()Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #60                 // Method jnr/unixsocket/impl/AbstractNativeSocketChannel.write:(Ljava/nio/ByteBuffer;)I
      12: ireturn
      13: aload_0
      14: invokespecial #56                 // Method isIdle:()Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: new           #57                 // class java/nio/channels/ClosedChannelException
      25: dup
      26: invokespecial #58                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      29: athrow

  public java.net.SocketAddress getRemoteAddress() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field remoteAddress:Ljnr/unixsocket/UnixSocketAddress;
       4: areturn

  public java.net.SocketAddress getLocalAddress() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
       4: areturn

  public final java.util.Set<java.net.SocketOption<?>> supportedOptions();
    Code:
       0: getstatic     #61                 // Field jnr/unixsocket/UnixSocketChannel$DefaultOptionsHolder.defaultOptions:Ljava/util/Set;
       3: areturn

  public <T> T getOption(java.net.SocketOption<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method supportedOptions:()Ljava/util/Set;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifne          45
      13: new           #64                 // class java/lang/UnsupportedOperationException
      16: dup
      17: new           #65                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #67                 // String \'
      26: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #70                 // String \' not supported
      35: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #72                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: invokevirtual #26                 // Method getFD:()I
      49: aload_1
      50: invokestatic  #73                 // Method jnr/unixsocket/Common.getSocketOption:(ILjava/net/SocketOption;)Ljava/lang/Object;
      53: areturn

  public <T> java.nio.channels.SocketChannel setOption(java.net.SocketOption<T>, T) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #74                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #75                 // String name may not be null
      10: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #62                 // Method supportedOptions:()Ljava/util/Set;
      18: aload_1
      19: invokeinterface #63,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ifne          59
      27: new           #64                 // class java/lang/UnsupportedOperationException
      30: dup
      31: new           #65                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #67                 // String \'
      40: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #70                 // String \' not supported
      49: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #72                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: invokevirtual #26                 // Method getFD:()I
      63: aload_1
      64: aload_2
      65: invokestatic  #77                 // Method jnr/unixsocket/Common.setSocketOption:(ILjava/net/SocketOption;Ljava/lang/Object;)V
      68: aload_0
      69: areturn

  public synchronized jnr.unixsocket.UnixSocketChannel bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #24                 // Field bindHandler:Ljnr/unixsocket/BindHandler;
       5: aload_0
       6: invokevirtual #26                 // Method getFD:()I
       9: aload_1
      10: invokevirtual #78                 // Method jnr/unixsocket/BindHandler.bind:(ILjava/net/SocketAddress;)Ljnr/unixsocket/UnixSocketAddress;
      13: putfield      #15                 // Field localAddress:Ljnr/unixsocket/UnixSocketAddress;
      16: aload_0
      17: areturn

  public java.net.Socket socket();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method socket:()Ljnr/unixsocket/UnixSocket;
       4: areturn

  public java.nio.channels.SocketChannel bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method bind:(Ljava/net/SocketAddress;)Ljnr/unixsocket/UnixSocketChannel;
       5: areturn

  public java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #81                 // Method setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/SocketChannel;
       6: areturn

  public java.nio.channels.NetworkChannel bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method bind:(Ljava/net/SocketAddress;)Ljnr/unixsocket/UnixSocketChannel;
       5: areturn
}
