Compiled from "ValueNode.java"
public abstract class com.fasterxml.jackson.databind.node.ValueNode extends com.fasterxml.jackson.databind.node.BaseJsonNode {
  private static final long serialVersionUID;

  protected com.fasterxml.jackson.databind.node.ValueNode();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/node/BaseJsonNode."<init>":()V
       4: return

  protected com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer);
    Code:
       0: invokestatic  #2                  // Method com/fasterxml/jackson/databind/node/MissingNode.getInstance:()Lcom/fasterxml/jackson/databind/node/MissingNode;
       3: areturn

  public <T extends com.fasterxml.jackson.databind.JsonNode> T deepCopy();
    Code:
       0: aload_0
       1: areturn

  public abstract com.fasterxml.jackson.core.JsonToken asToken();

  public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_1
       2: aload_3
       3: aload_0
       4: aload_0
       5: invokevirtual #3                  // Method asToken:()Lcom/fasterxml/jackson/core/JsonToken;
       8: invokevirtual #4                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.typeId:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      11: invokevirtual #5                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      14: astore        4
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #6                  // Method serialize:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      22: aload_3
      23: aload_1
      24: aload         4
      26: invokevirtual #7                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      29: pop
      30: return

  public boolean isEmpty();
    Code:
       0: iconst_1
       1: ireturn

  public final com.fasterxml.jackson.databind.JsonNode get(int);
    Code:
       0: aconst_null
       1: areturn

  public final com.fasterxml.jackson.databind.JsonNode path(int);
    Code:
       0: invokestatic  #2                  // Method com/fasterxml/jackson/databind/node/MissingNode.getInstance:()Lcom/fasterxml/jackson/databind/node/MissingNode;
       3: areturn

  public final boolean has(int);
    Code:
       0: iconst_0
       1: ireturn

  public final boolean hasNonNull(int);
    Code:
       0: iconst_0
       1: ireturn

  public final com.fasterxml.jackson.databind.JsonNode get(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public final com.fasterxml.jackson.databind.JsonNode path(java.lang.String);
    Code:
       0: invokestatic  #2                  // Method com/fasterxml/jackson/databind/node/MissingNode.getInstance:()Lcom/fasterxml/jackson/databind/node/MissingNode;
       3: areturn

  public final boolean has(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public final boolean hasNonNull(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public final com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public final com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public final java.util.List<com.fasterxml.jackson.databind.JsonNode> findValues(java.lang.String, java.util.List<com.fasterxml.jackson.databind.JsonNode>);
    Code:
       0: aload_2
       1: areturn

  public final java.util.List<java.lang.String> findValuesAsText(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: areturn

  public final java.util.List<com.fasterxml.jackson.databind.JsonNode> findParents(java.lang.String, java.util.List<com.fasterxml.jackson.databind.JsonNode>);
    Code:
       0: aload_2
       1: areturn

  public com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method findParent:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       5: areturn

  public com.fasterxml.jackson.core.TreeNode path(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method path:(I)Lcom/fasterxml/jackson/databind/JsonNode;
       5: areturn

  public com.fasterxml.jackson.core.TreeNode path(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method path:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: areturn

  public com.fasterxml.jackson.core.TreeNode get(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #11                 // Method get:(I)Lcom/fasterxml/jackson/databind/JsonNode;
       5: areturn

  public com.fasterxml.jackson.core.TreeNode get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: areturn
}
