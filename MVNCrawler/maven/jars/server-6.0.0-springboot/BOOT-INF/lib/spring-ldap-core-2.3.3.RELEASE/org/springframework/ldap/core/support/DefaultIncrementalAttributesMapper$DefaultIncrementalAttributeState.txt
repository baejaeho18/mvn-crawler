Compiled from "DefaultIncrementalAttributesMapper.java"
final class org.springframework.ldap.core.support.DefaultIncrementalAttributesMapper$DefaultIncrementalAttributeState implements org.springframework.ldap.core.support.DefaultIncrementalAttributesMapper$IncrementalAttributeState {
  private final java.lang.String actualAttributeName;

  private java.util.List<java.lang.Object> values;

  private final int pageSize;

  boolean more;

  private org.springframework.ldap.core.support.RangeOption requestRange;

  private org.springframework.ldap.core.support.DefaultIncrementalAttributesMapper$DefaultIncrementalAttributeState(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field values:Ljava/util/List;
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field more:Z
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field actualAttributeName:Ljava/lang/String;
      19: aload_0
      20: iload_2
      21: putfield      #6                  // Field pageSize:I
      24: aload_0
      25: new           #7                  // class org/springframework/ldap/core/support/RangeOption
      28: dup
      29: iconst_0
      30: iload_2
      31: invokespecial #8                  // Method org/springframework/ldap/core/support/RangeOption."<init>":(II)V
      34: putfield      #9                  // Field requestRange:Lorg/springframework/ldap/core/support/RangeOption;
      37: return

  public boolean hasMore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field more:Z
       4: ireturn

  public java.lang.String getRequestedAttributeName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field actualAttributeName:Ljava/lang/String;
       4: areturn

  public void calculateNextRange(org.springframework.ldap.core.support.RangeOption);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field requestRange:Lorg/springframework/ldap/core/support/RangeOption;
       5: aload_1
       6: invokevirtual #10                 // Method org/springframework/ldap/core/support/RangeOption.compareTo:(Lorg/springframework/ldap/core/support/RangeOption;)I
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: putfield      #4                  // Field more:Z
      20: aload_0
      21: getfield      #4                  // Field more:Z
      24: ifeq          39
      27: aload_0
      28: aload_1
      29: aload_0
      30: getfield      #6                  // Field pageSize:I
      33: invokevirtual #11                 // Method org/springframework/ldap/core/support/RangeOption.nextRange:(I)Lorg/springframework/ldap/core/support/RangeOption;
      36: putfield      #9                  // Field requestRange:Lorg/springframework/ldap/core/support/RangeOption;
      39: return

  public java.lang.String getAttributeNameForQuery();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #5                  // Field actualAttributeName:Ljava/lang/String;
       8: invokespecial #13                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_0
      13: getfield      #9                  // Field requestRange:Lorg/springframework/ldap/core/support/RangeOption;
      16: invokevirtual #14                 // Method org/springframework/ldap/core/support/RangeOption.isFullRange:()Z
      19: ifne          37
      22: aload_1
      23: bipush        59
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: pop
      29: aload_0
      30: getfield      #9                  // Field requestRange:Lorg/springframework/ldap/core/support/RangeOption;
      33: aload_1
      34: invokevirtual #16                 // Method org/springframework/ldap/core/support/RangeOption.appendTo:(Ljava/lang/StringBuilder;)V
      37: aload_1
      38: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public void processValues(javax.naming.directory.Attributes, java.lang.String) throws javax.naming.NamingException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #18,  2           // InterfaceMethod javax/naming/directory/Attributes.get:(Ljava/lang/String;)Ljavax/naming/directory/Attribute;
       7: astore_3
       8: aload_3
       9: invokeinterface #19,  1           // InterfaceMethod javax/naming/directory/Attribute.getAll:()Ljavax/naming/NamingEnumeration;
      14: astore        4
      16: aload_0
      17: invokespecial #20                 // Method initValuesIfApplicable:()V
      20: aload         4
      22: invokeinterface #21,  1           // InterfaceMethod javax/naming/NamingEnumeration.hasMore:()Z
      27: ifeq          50
      30: aload_0
      31: getfield      #3                  // Field values:Ljava/util/List;
      34: aload         4
      36: invokeinterface #22,  1           // InterfaceMethod javax/naming/NamingEnumeration.next:()Ljava/lang/Object;
      41: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: goto          20
      50: return

  private void initValuesIfApplicable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field values:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #24                 // class java/util/LinkedList
      11: dup
      12: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
      15: putfield      #3                  // Field values:Ljava/util/List;
      18: return

  public java.util.List<java.lang.Object> getValues();
    Code:
       0: aload_0
       1: getfield      #3                  // Field values:Ljava/util/List;
       4: ifnull        19
       7: new           #26                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #3                  // Field values:Ljava/util/List;
      15: invokespecial #27                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: areturn
      19: aconst_null
      20: areturn

  org.springframework.ldap.core.support.DefaultIncrementalAttributesMapper$DefaultIncrementalAttributeState(java.lang.String, int, org.springframework.ldap.core.support.DefaultIncrementalAttributesMapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;I)V
       6: return
}
