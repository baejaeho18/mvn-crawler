Compiled from "ContextSourceTransactionManagerDelegate.java"
public class org.springframework.ldap.transaction.compensating.manager.ContextSourceTransactionManagerDelegate extends org.springframework.transaction.compensating.support.AbstractCompensatingTransactionManagerDelegate {
  private static final org.slf4j.Logger LOG;

  private org.springframework.ldap.core.ContextSource contextSource;

  private org.springframework.ldap.transaction.compensating.TempEntryRenamingStrategy renamingStrategy;

  public org.springframework.ldap.transaction.compensating.manager.ContextSourceTransactionManagerDelegate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/compensating/support/AbstractCompensatingTransactionManagerDelegate."<init>":()V
       4: return

  public void setContextSource(org.springframework.ldap.core.ContextSource);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/springframework/ldap/transaction/compensating/manager/TransactionAwareContextSourceProxy
       4: ifeq          23
       7: aload_1
       8: checkcast     #2                  // class org/springframework/ldap/transaction/compensating/manager/TransactionAwareContextSourceProxy
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #3                  // Method org/springframework/ldap/transaction/compensating/manager/TransactionAwareContextSourceProxy.getTarget:()Lorg/springframework/ldap/core/ContextSource;
      17: putfield      #4                  // Field contextSource:Lorg/springframework/ldap/core/ContextSource;
      20: goto          28
      23: aload_0
      24: aload_1
      25: putfield      #4                  // Field contextSource:Lorg/springframework/ldap/core/ContextSource;
      28: aload_1
      29: instanceof    #5                  // class org/springframework/ldap/core/support/AbstractContextSource
      32: ifeq          57
      35: aload_1
      36: checkcast     #5                  // class org/springframework/ldap/core/support/AbstractContextSource
      39: astore_2
      40: aload_2
      41: invokevirtual #6                  // Method org/springframework/ldap/core/support/AbstractContextSource.isAnonymousReadOnly:()Z
      44: ifeq          57
      47: new           #7                  // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #8                  // String Compensating LDAP transactions cannot be used when context-source is anonymous-read-only
      53: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: return

  public org.springframework.ldap.core.ContextSource getContextSource();
    Code:
       0: aload_0
       1: getfield      #4                  // Field contextSource:Lorg/springframework/ldap/core/ContextSource;
       4: areturn

  protected java.lang.Object getTransactionSynchronizationKey();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getContextSource:()Lorg/springframework/ldap/core/ContextSource;
       4: areturn

  protected org.springframework.transaction.compensating.support.CompensatingTransactionHolderSupport getNewHolder();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getContextSource:()Lorg/springframework/ldap/core/ContextSource;
       4: invokeinterface #11,  1           // InterfaceMethod org/springframework/ldap/core/ContextSource.getReadWriteContext:()Ljavax/naming/directory/DirContext;
       9: astore_1
      10: new           #12                 // class org/springframework/ldap/transaction/compensating/manager/DirContextHolder
      13: dup
      14: new           #13                 // class org/springframework/transaction/compensating/support/DefaultCompensatingTransactionOperationManager
      17: dup
      18: new           #14                 // class org/springframework/ldap/transaction/compensating/LdapCompensatingTransactionOperationFactory
      21: dup
      22: aload_0
      23: getfield      #15                 // Field renamingStrategy:Lorg/springframework/ldap/transaction/compensating/TempEntryRenamingStrategy;
      26: invokespecial #16                 // Method org/springframework/ldap/transaction/compensating/LdapCompensatingTransactionOperationFactory."<init>":(Lorg/springframework/ldap/transaction/compensating/TempEntryRenamingStrategy;)V
      29: invokespecial #17                 // Method org/springframework/transaction/compensating/support/DefaultCompensatingTransactionOperationManager."<init>":(Lorg/springframework/transaction/compensating/CompensatingTransactionOperationFactory;)V
      32: aload_1
      33: invokespecial #18                 // Method org/springframework/ldap/transaction/compensating/manager/DirContextHolder."<init>":(Lorg/springframework/transaction/compensating/CompensatingTransactionOperationManager;Ljavax/naming/directory/DirContext;)V
      36: areturn

  protected void closeTargetResource(org.springframework.transaction.compensating.support.CompensatingTransactionHolderSupport);
    Code:
       0: aload_1
       1: checkcast     #12                 // class org/springframework/ldap/transaction/compensating/manager/DirContextHolder
       4: astore_2
       5: aload_2
       6: invokevirtual #19                 // Method org/springframework/ldap/transaction/compensating/manager/DirContextHolder.getCtx:()Ljavax/naming/directory/DirContext;
       9: astore_3
      10: getstatic     #20                 // Field LOG:Lorg/slf4j/Logger;
      13: ldc           #21                 // String Closing target context
      15: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      20: aload_3
      21: invokeinterface #23,  1           // InterfaceMethod javax/naming/directory/DirContext.close:()V
      26: goto          43
      29: astore        4
      31: getstatic     #20                 // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #25                 // String Failed to close target context
      36: aload         4
      38: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: return
    Exception table:
       from    to  target type
          10    26    29   Class javax/naming/NamingException

  public void setRenamingStrategy(org.springframework.ldap.transaction.compensating.TempEntryRenamingStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field renamingStrategy:Lorg/springframework/ldap/transaction/compensating/TempEntryRenamingStrategy;
       5: return

  void checkRenamingStrategy();
    Code:
       0: aload_0
       1: getfield      #15                 // Field renamingStrategy:Lorg/springframework/ldap/transaction/compensating/TempEntryRenamingStrategy;
       4: ldc           #27                 // String RenamingStrategy must be specified
       6: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: return

  static {};
    Code:
       0: ldc           #29                 // class org/springframework/ldap/transaction/compensating/manager/ContextSourceTransactionManagerDelegate
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #20                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
