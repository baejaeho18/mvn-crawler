Compiled from "DefaultConditionCriteria.java"
class org.springframework.ldap.query.DefaultConditionCriteria implements org.springframework.ldap.query.ConditionCriteria {
  private final org.springframework.ldap.query.AppendableContainerCriteria parent;

  private final java.lang.String attribute;

  private boolean negated;

  org.springframework.ldap.query.DefaultConditionCriteria(org.springframework.ldap.query.AppendableContainerCriteria, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field negated:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field parent:Lorg/springframework/ldap/query/AppendableContainerCriteria;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field attribute:Ljava/lang/String;
      19: return

  public org.springframework.ldap.query.ContainerCriteria is(java.lang.String);
    Code:
       0: aload_0
       1: new           #5                  // class org/springframework/ldap/filter/EqualsFilter
       4: dup
       5: aload_0
       6: getfield      #4                  // Field attribute:Ljava/lang/String;
       9: aload_1
      10: invokespecial #6                  // Method org/springframework/ldap/filter/EqualsFilter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokespecial #7                  // Method appendToParent:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      16: areturn

  public org.springframework.ldap.query.ContainerCriteria gte(java.lang.String);
    Code:
       0: aload_0
       1: new           #8                  // class org/springframework/ldap/filter/GreaterThanOrEqualsFilter
       4: dup
       5: aload_0
       6: getfield      #4                  // Field attribute:Ljava/lang/String;
       9: aload_1
      10: invokespecial #9                  // Method org/springframework/ldap/filter/GreaterThanOrEqualsFilter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokespecial #7                  // Method appendToParent:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      16: areturn

  public org.springframework.ldap.query.ContainerCriteria lte(java.lang.String);
    Code:
       0: aload_0
       1: new           #10                 // class org/springframework/ldap/filter/LessThanOrEqualsFilter
       4: dup
       5: aload_0
       6: getfield      #4                  // Field attribute:Ljava/lang/String;
       9: aload_1
      10: invokespecial #11                 // Method org/springframework/ldap/filter/LessThanOrEqualsFilter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokespecial #7                  // Method appendToParent:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      16: areturn

  public org.springframework.ldap.query.ContainerCriteria like(java.lang.String);
    Code:
       0: aload_0
       1: new           #12                 // class org/springframework/ldap/filter/LikeFilter
       4: dup
       5: aload_0
       6: getfield      #4                  // Field attribute:Ljava/lang/String;
       9: aload_1
      10: invokespecial #13                 // Method org/springframework/ldap/filter/LikeFilter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokespecial #7                  // Method appendToParent:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      16: areturn

  public org.springframework.ldap.query.ContainerCriteria whitespaceWildcardsLike(java.lang.String);
    Code:
       0: aload_0
       1: new           #14                 // class org/springframework/ldap/filter/WhitespaceWildcardsFilter
       4: dup
       5: aload_0
       6: getfield      #4                  // Field attribute:Ljava/lang/String;
       9: aload_1
      10: invokespecial #15                 // Method org/springframework/ldap/filter/WhitespaceWildcardsFilter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokespecial #7                  // Method appendToParent:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      16: areturn

  public org.springframework.ldap.query.ContainerCriteria isPresent();
    Code:
       0: aload_0
       1: new           #16                 // class org/springframework/ldap/filter/PresentFilter
       4: dup
       5: aload_0
       6: getfield      #4                  // Field attribute:Ljava/lang/String;
       9: invokespecial #17                 // Method org/springframework/ldap/filter/PresentFilter."<init>":(Ljava/lang/String;)V
      12: invokespecial #7                  // Method appendToParent:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      15: areturn

  private org.springframework.ldap.query.ContainerCriteria appendToParent(org.springframework.ldap.filter.Filter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lorg/springframework/ldap/query/AppendableContainerCriteria;
       4: aload_0
       5: aload_1
       6: invokespecial #18                 // Method negateIfApplicable:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/filter/Filter;
       9: invokeinterface #19,  2           // InterfaceMethod org/springframework/ldap/query/AppendableContainerCriteria.append:(Lorg/springframework/ldap/filter/Filter;)Lorg/springframework/ldap/query/ContainerCriteria;
      14: areturn

  private org.springframework.ldap.filter.Filter negateIfApplicable(org.springframework.ldap.filter.Filter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negated:Z
       4: ifeq          16
       7: new           #20                 // class org/springframework/ldap/filter/NotFilter
      10: dup
      11: aload_1
      12: invokespecial #21                 // Method org/springframework/ldap/filter/NotFilter."<init>":(Lorg/springframework/ldap/filter/Filter;)V
      15: areturn
      16: aload_1
      17: areturn

  public org.springframework.ldap.query.DefaultConditionCriteria not();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field negated:Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putfield      #2                  // Field negated:Z
      16: aload_0
      17: areturn

  public org.springframework.ldap.query.ConditionCriteria not();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method not:()Lorg/springframework/ldap/query/DefaultConditionCriteria;
       4: areturn
}
