Compiled from "ValueObjectBinder.java"
abstract class org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<T> {
  private final java.lang.reflect.Constructor<T> constructor;

  protected org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject(java.lang.reflect.Constructor<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field constructor:Ljava/lang/reflect/Constructor;
       9: return

  T instantiate(java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field constructor:Ljava/lang/reflect/Constructor;
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      10: invokestatic  #4                  // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  abstract java.util.List<org.springframework.boot.context.properties.bind.ValueObjectBinder$ConstructorParameter> getConstructorParameters();

  static <T> org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<T> get(org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindConstructorProvider, org.springframework.boot.context.properties.bind.Binder$Context);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method org/springframework/boot/context/properties/bind/Bindable.getType:()Lorg/springframework/core/ResolvableType;
       4: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       7: astore_3
       8: aload_3
       9: ifnull        29
      12: aload_3
      13: invokevirtual #7                  // Method java/lang/Class.isEnum:()Z
      16: ifne          29
      19: aload_3
      20: invokevirtual #8                  // Method java/lang/Class.getModifiers:()I
      23: invokestatic  #9                  // Method java/lang/reflect/Modifier.isAbstract:(I)Z
      26: ifeq          31
      29: aconst_null
      30: areturn
      31: aload_1
      32: aload_0
      33: aload_2
      34: invokevirtual #10                 // Method org/springframework/boot/context/properties/bind/Binder$Context.isNestedConstructorBinding:()Z
      37: invokeinterface #11,  3           // InterfaceMethod org/springframework/boot/context/properties/bind/BindConstructorProvider.getBindConstructor:(Lorg/springframework/boot/context/properties/bind/Bindable;Z)Ljava/lang/reflect/Constructor;
      42: astore        4
      44: aload         4
      46: ifnonnull     51
      49: aconst_null
      50: areturn
      51: aload_3
      52: invokestatic  #12                 // Method org/springframework/core/KotlinDetector.isKotlinType:(Ljava/lang/Class;)Z
      55: ifeq          68
      58: aload         4
      60: aload_0
      61: invokevirtual #5                  // Method org/springframework/boot/context/properties/bind/Bindable.getType:()Lorg/springframework/core/ResolvableType;
      64: invokestatic  #13                 // Method org/springframework/boot/context/properties/bind/ValueObjectBinder$KotlinValueObject.get:(Ljava/lang/reflect/Constructor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;
      67: areturn
      68: aload         4
      70: aload_0
      71: invokevirtual #5                  // Method org/springframework/boot/context/properties/bind/Bindable.getType:()Lorg/springframework/core/ResolvableType;
      74: invokestatic  #14                 // Method org/springframework/boot/context/properties/bind/ValueObjectBinder$DefaultValueObject.get:(Ljava/lang/reflect/Constructor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;
      77: areturn
}
