Compiled from "Log4J2LoggingSystem.java"
public class org.springframework.boot.logging.log4j2.Log4J2LoggingSystem extends org.springframework.boot.logging.Slf4JLoggingSystem {
  private static final java.lang.String FILE_PROTOCOL;

  private static final org.springframework.boot.logging.AbstractLoggingSystem$LogLevels<org.apache.logging.log4j.Level> LEVELS;

  private static final org.apache.logging.log4j.core.Filter FILTER;

  public org.springframework.boot.logging.log4j2.Log4J2LoggingSystem(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/boot/logging/Slf4JLoggingSystem."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  protected java.lang.String[] getStandardConfigLocations();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getCurrentlySupportedConfigLocations:()[Ljava/lang/String;
       4: areturn

  private java.lang.String[] getCurrentlySupportedConfigLocations();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #6                  // Method addTestFiles:(Ljava/util/List;)V
      13: aload_1
      14: ldc           #7                  // String log4j2.properties
      16: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: ldc           #9                  // String com.fasterxml.jackson.dataformat.yaml.YAMLParser
      25: invokevirtual #10                 // Method isClassAvailable:(Ljava/lang/String;)Z
      28: ifeq          50
      31: aload_1
      32: iconst_2
      33: anewarray     #11                 // class java/lang/String
      36: dup
      37: iconst_0
      38: ldc           #12                 // String log4j2.yaml
      40: aastore
      41: dup
      42: iconst_1
      43: ldc           #13                 // String log4j2.yml
      45: aastore
      46: invokestatic  #14                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      49: pop
      50: aload_0
      51: ldc           #15                 // String com.fasterxml.jackson.databind.ObjectMapper
      53: invokevirtual #10                 // Method isClassAvailable:(Ljava/lang/String;)Z
      56: ifeq          78
      59: aload_1
      60: iconst_2
      61: anewarray     #11                 // class java/lang/String
      64: dup
      65: iconst_0
      66: ldc           #16                 // String log4j2.json
      68: aastore
      69: dup
      70: iconst_1
      71: ldc           #17                 // String log4j2.jsn
      73: aastore
      74: invokestatic  #14                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      77: pop
      78: aload_1
      79: ldc           #18                 // String log4j2.xml
      81: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: aload_1
      88: invokestatic  #19                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
      91: areturn

  private void addTestFiles(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #20                 // String log4j2-test.properties
       3: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: ldc           #9                  // String com.fasterxml.jackson.dataformat.yaml.YAMLParser
      12: invokevirtual #10                 // Method isClassAvailable:(Ljava/lang/String;)Z
      15: ifeq          37
      18: aload_1
      19: iconst_2
      20: anewarray     #11                 // class java/lang/String
      23: dup
      24: iconst_0
      25: ldc           #21                 // String log4j2-test.yaml
      27: aastore
      28: dup
      29: iconst_1
      30: ldc           #22                 // String log4j2-test.yml
      32: aastore
      33: invokestatic  #14                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      36: pop
      37: aload_0
      38: ldc           #15                 // String com.fasterxml.jackson.databind.ObjectMapper
      40: invokevirtual #10                 // Method isClassAvailable:(Ljava/lang/String;)Z
      43: ifeq          65
      46: aload_1
      47: iconst_2
      48: anewarray     #11                 // class java/lang/String
      51: dup
      52: iconst_0
      53: ldc           #23                 // String log4j2-test.json
      55: aastore
      56: dup
      57: iconst_1
      58: ldc           #24                 // String log4j2-test.jsn
      60: aastore
      61: invokestatic  #14                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      64: pop
      65: aload_1
      66: ldc           #25                 // String log4j2-test.xml
      68: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: return

  protected boolean isClassAvailable(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #26                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       5: invokestatic  #27                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
       8: ireturn

  public void beforeInitialize();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #28                 // Method isAlreadyInitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokespecial #29                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.beforeInitialize:()V
      18: aload_1
      19: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      22: getstatic     #31                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
      25: invokeinterface #32,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      30: return

  public void initialize(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: astore        4
       6: aload_0
       7: aload         4
       9: invokespecial #28                 // Method isAlreadyInitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)Z
      12: ifeq          16
      15: return
      16: aload         4
      18: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      21: getstatic     #31                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
      24: invokeinterface #33,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.removeFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokespecial #34                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      36: aload_0
      37: aload         4
      39: invokespecial #35                 // Method markAsInitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)V
      42: return

  protected void loadDefaults(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_2
       1: ifnull        18
       4: aload_0
       5: aload_0
       6: ldc           #36                 // String log4j2-file.xml
       8: invokevirtual #37                 // Method getPackagedConfigFile:(Ljava/lang/String;)Ljava/lang/String;
      11: aload_2
      12: invokevirtual #38                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      15: goto          29
      18: aload_0
      19: aload_0
      20: ldc           #18                 // String log4j2.xml
      22: invokevirtual #37                 // Method getPackagedConfigFile:(Ljava/lang/String;)Ljava/lang/String;
      25: aload_2
      26: invokevirtual #38                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      29: return

  protected void loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #39                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.loadConfiguration:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
       7: aload_0
       8: aload_2
       9: aload_3
      10: invokevirtual #38                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      13: return

  protected void loadConfiguration(java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_1
       1: ldc           #40                 // String Location must not be null
       3: invokestatic  #41                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      10: astore_3
      11: aload_1
      12: invokestatic  #42                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokespecial #43                 // Method getConfigurationSource:(Ljava/net/URL;)Lorg/apache/logging/log4j/core/config/ConfigurationSource;
      23: astore        5
      25: aload_3
      26: invokestatic  #44                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
      29: aload_3
      30: aload         5
      32: invokevirtual #45                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/LoggerContext;Lorg/apache/logging/log4j/core/config/ConfigurationSource;)Lorg/apache/logging/log4j/core/config/Configuration;
      35: invokevirtual #46                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      38: goto          70
      41: astore_3
      42: new           #48                 // class java/lang/IllegalStateException
      45: dup
      46: new           #49                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #51                 // String Could not initialize Log4J2 logging from
      55: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: aload_3
      66: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      69: athrow
      70: return
    Exception table:
       from    to  target type
           6    38    41   Class java/lang/Exception

  private org.apache.logging.log4j.core.config.ConfigurationSource getConfigurationSource(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_2
       5: ldc           #57                 // String file
       7: aload_1
       8: invokevirtual #58                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      11: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          30
      17: new           #60                 // class org/apache/logging/log4j/core/config/ConfigurationSource
      20: dup
      21: aload_2
      22: aload_1
      23: invokestatic  #61                 // Method org/springframework/util/ResourceUtils.getFile:(Ljava/net/URL;)Ljava/io/File;
      26: invokespecial #62                 // Method org/apache/logging/log4j/core/config/ConfigurationSource."<init>":(Ljava/io/InputStream;Ljava/io/File;)V
      29: areturn
      30: new           #60                 // class org/apache/logging/log4j/core/config/ConfigurationSource
      33: dup
      34: aload_2
      35: aload_1
      36: invokespecial #63                 // Method org/apache/logging/log4j/core/config/ConfigurationSource."<init>":(Ljava/io/InputStream;Ljava/net/URL;)V
      39: areturn

  protected void reinitialize(org.springframework.boot.logging.LoggingInitializationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: invokevirtual #64                 // Method org/apache/logging/log4j/core/LoggerContext.reconfigure:()V
       7: return

  public java.util.Set<org.springframework.boot.logging.LogLevel> getSupportedLogLevels();
    Code:
       0: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
       3: invokevirtual #66                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.getSupported:()Ljava/util/Set;
       6: areturn

  public void setLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
       3: aload_2
       4: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertSystemToNative:(Lorg/springframework/boot/logging/LogLevel;)Ljava/lang/Object;
       7: checkcast     #68                 // class org/apache/logging/log4j/Level
      10: astore_3
      11: aload_0
      12: aload_1
      13: invokespecial #69                 // Method getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      16: astore        4
      18: aload         4
      20: ifnonnull     53
      23: new           #70                 // class org/apache/logging/log4j/core/config/LoggerConfig
      26: dup
      27: aload_1
      28: aload_3
      29: iconst_1
      30: invokespecial #71                 // Method org/apache/logging/log4j/core/config/LoggerConfig."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Z)V
      33: astore        4
      35: aload_0
      36: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      39: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      42: aload_1
      43: aload         4
      45: invokeinterface #72,  3           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/LoggerConfig;)V
      50: goto          59
      53: aload         4
      55: aload_3
      56: invokevirtual #73                 // Method org/apache/logging/log4j/core/config/LoggerConfig.setLevel:(Lorg/apache/logging/log4j/Level;)V
      59: aload_0
      60: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      63: invokevirtual #74                 // Method org/apache/logging/log4j/core/LoggerContext.updateLoggers:()V
      66: return

  public java.util.List<org.springframework.boot.logging.LoggerConfiguration> getLoggerConfigurations();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #75                 // Method getAllLoggers:()Ljava/util/Map;
      12: aload_0
      13: aload_1
      14: invokedynamic #76,  0             // InvokeDynamic #0:accept:(Lorg/springframework/boot/logging/log4j2/Log4J2LoggingSystem;Ljava/util/List;)Ljava/util/function/BiConsumer;
      19: invokeinterface #77,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      24: aload_1
      25: getstatic     #78                 // Field CONFIGURATION_COMPARATOR:Ljava/util/Comparator;
      28: invokeinterface #79,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      33: aload_1
      34: areturn

  public org.springframework.boot.logging.LoggerConfiguration getLoggerConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #75                 // Method getAllLoggers:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #70                 // class org/apache/logging/log4j/core/config/LoggerConfig
      13: astore_2
      14: aload_2
      15: ifnull        27
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #81                 // Method convertLoggerConfig:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/LoggerConfig;)Lorg/springframework/boot/logging/LoggerConfiguration;
      24: goto          28
      27: aconst_null
      28: areturn

  private java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.LoggerConfig> getAllLoggers();
    Code:
       0: new           #82                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #83                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      12: invokevirtual #84                 // Method org/apache/logging/log4j/core/LoggerContext.getLoggers:()Ljava/util/Collection;
      15: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          52
      30: aload_2
      31: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #88                 // class org/apache/logging/log4j/core/Logger
      39: astore_3
      40: aload_0
      41: aload_1
      42: aload_3
      43: invokevirtual #89                 // Method org/apache/logging/log4j/core/Logger.getName:()Ljava/lang/String;
      46: invokespecial #90                 // Method addLogger:(Ljava/util/Map;Ljava/lang/String;)V
      49: goto          21
      52: aload_0
      53: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      56: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      59: invokeinterface #91,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggers:()Ljava/util/Map;
      64: invokeinterface #92,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      69: aload_0
      70: aload_1
      71: invokedynamic #93,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/logging/log4j2/Log4J2LoggingSystem;Ljava/util/Map;)Ljava/util/function/Consumer;
      76: invokeinterface #94,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      81: aload_1
      82: areturn

  private void addLogger(java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
       7: astore_3
       8: aload_2
       9: ifnull        40
      12: aload_1
      13: aload_2
      14: aload_3
      15: dup
      16: invokevirtual #95                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: pop
      20: invokedynamic #96,  0             // InvokeDynamic #2:apply:(Lorg/apache/logging/log4j/core/config/Configuration;)Ljava/util/function/Function;
      25: invokeinterface #97,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: aload_2
      33: invokespecial #98                 // Method getSubName:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_2
      37: goto          8
      40: return

  private java.lang.String getSubName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #99                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: bipush        36
      12: invokevirtual #100                // Method java/lang/String.lastIndexOf:(I)I
      15: istore_2
      16: iload_2
      17: iconst_m1
      18: if_icmpeq     30
      21: aload_1
      22: iconst_0
      23: iload_2
      24: invokevirtual #101                // Method java/lang/String.substring:(II)Ljava/lang/String;
      27: goto          34
      30: aload_1
      31: invokestatic  #102                // Method org/apache/logging/log4j/core/util/NameUtil.getSubName:(Ljava/lang/String;)Ljava/lang/String;
      34: areturn

  private org.springframework.boot.logging.LoggerConfiguration convertLoggerConfig(java.lang.String, org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
       9: aload_2
      10: invokevirtual #103                // Method org/apache/logging/log4j/core/config/LoggerConfig.getLevel:()Lorg/apache/logging/log4j/Level;
      13: invokevirtual #104                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertNativeToSystem:(Ljava/lang/Object;)Lorg/springframework/boot/logging/LogLevel;
      16: astore_3
      17: aload_1
      18: invokestatic  #105                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      21: ifeq          33
      24: ldc           #107                // String
      26: aload_1
      27: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          36
      33: ldc           #109                // String ROOT
      35: astore_1
      36: aload_2
      37: invokevirtual #110                // Method org/apache/logging/log4j/core/config/LoggerConfig.getName:()Ljava/lang/String;
      40: aload_1
      41: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: istore        4
      46: iload         4
      48: ifeq          55
      51: aload_3
      52: goto          56
      55: aconst_null
      56: astore        5
      58: new           #111                // class org/springframework/boot/logging/LoggerConfiguration
      61: dup
      62: aload_1
      63: aload         5
      65: aload_3
      66: invokespecial #112                // Method org/springframework/boot/logging/LoggerConfiguration."<init>":(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;Lorg/springframework/boot/logging/LogLevel;)V
      69: areturn

  public java.lang.Runnable getShutdownHandler();
    Code:
       0: new           #113                // class org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$ShutdownHandler
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #114                // Method org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$ShutdownHandler."<init>":(Lorg/springframework/boot/logging/log4j2/Log4J2LoggingSystem;Lorg/springframework/boot/logging/log4j2/Log4J2LoggingSystem$1;)V
       9: areturn

  public void cleanUp();
    Code:
       0: aload_0
       1: invokespecial #115                // Method org/springframework/boot/logging/Slf4JLoggingSystem.cleanUp:()V
       4: aload_0
       5: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #116                // Method markAsUninitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)V
      14: aload_1
      15: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      18: getstatic     #31                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
      21: invokeinterface #33,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.removeFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      26: return

  private org.apache.logging.log4j.core.config.LoggerConfig getLogger(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #105                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: ldc           #109                // String ROOT
       9: aload_1
      10: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: aload_0
      23: iload_2
      24: ifeq          32
      27: ldc           #107                // String
      29: goto          33
      32: aload_1
      33: invokespecial #117                // Method findLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      36: areturn

  private org.apache.logging.log4j.core.config.LoggerConfig findLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: invokevirtual #30                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
       7: astore_2
       8: aload_2
       9: instanceof    #118                // class org/apache/logging/log4j/core/config/AbstractConfiguration
      12: ifeq          24
      15: aload_2
      16: checkcast     #118                // class org/apache/logging/log4j/core/config/AbstractConfiguration
      19: aload_1
      20: invokevirtual #119                // Method org/apache/logging/log4j/core/config/AbstractConfiguration.getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      23: areturn
      24: aload_2
      25: invokeinterface #91,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggers:()Ljava/util/Map;
      30: aload_1
      31: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #70                 // class org/apache/logging/log4j/core/config/LoggerConfig
      39: areturn

  private org.apache.logging.log4j.core.LoggerContext getLoggerContext();
    Code:
       0: iconst_0
       1: invokestatic  #120                // Method org/apache/logging/log4j/LogManager.getContext:(Z)Lorg/apache/logging/log4j/spi/LoggerContext;
       4: checkcast     #121                // class org/apache/logging/log4j/core/LoggerContext
       7: areturn

  private boolean isAlreadyInitialized(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: ldc           #108                // class org/springframework/boot/logging/LoggingSystem
       2: invokevirtual #122                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #123                // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
       9: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ireturn

  private void markAsInitialized(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #108                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #122                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #124                // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
       9: return

  private void markAsUninitialized(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: aload_1
       1: aconst_null
       2: invokevirtual #124                // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
       5: return

  private void lambda$getAllLoggers$1(java.util.Map, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #90                 // Method addLogger:(Ljava/util/Map;Ljava/lang/String;)V
       6: return

  private void lambda$getLoggerConfigurations$0(java.util.List, java.lang.String, org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokespecial #81                 // Method convertLoggerConfig:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/LoggerConfig;)Lorg/springframework/boot/logging/LoggerConfiguration;
       7: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      12: pop
      13: return

  static org.apache.logging.log4j.core.LoggerContext access$100(org.springframework.boot.logging.log4j2.Log4J2LoggingSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: areturn

  static {};
    Code:
       0: new           #125                // class org/springframework/boot/logging/AbstractLoggingSystem$LogLevels
       3: dup
       4: invokespecial #126                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels."<init>":()V
       7: putstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      10: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      13: getstatic     #127                // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      16: getstatic     #128                // Field org/apache/logging/log4j/Level.TRACE:Lorg/apache/logging/log4j/Level;
      19: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      22: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      25: getstatic     #130                // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      28: getstatic     #131                // Field org/apache/logging/log4j/Level.DEBUG:Lorg/apache/logging/log4j/Level;
      31: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      34: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      37: getstatic     #132                // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
      40: getstatic     #133                // Field org/apache/logging/log4j/Level.INFO:Lorg/apache/logging/log4j/Level;
      43: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      46: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      49: getstatic     #134                // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
      52: getstatic     #135                // Field org/apache/logging/log4j/Level.WARN:Lorg/apache/logging/log4j/Level;
      55: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      58: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      61: getstatic     #136                // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
      64: getstatic     #137                // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      67: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      70: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      73: getstatic     #138                // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
      76: getstatic     #139                // Field org/apache/logging/log4j/Level.FATAL:Lorg/apache/logging/log4j/Level;
      79: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      82: getstatic     #65                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      85: getstatic     #140                // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      88: getstatic     #141                // Field org/apache/logging/log4j/Level.OFF:Lorg/apache/logging/log4j/Level;
      91: invokevirtual #129                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      94: new           #142                // class org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$1
      97: dup
      98: invokespecial #143                // Method org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$1."<init>":()V
     101: putstatic     #31                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
     104: return
}
