Compiled from "AccessLogHttpHandlerFactory.java"
class org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory implements org.springframework.boot.web.embedded.undertow.HttpHandlerFactory {
  private final java.io.File directory;

  private final java.lang.String pattern;

  private final java.lang.String prefix;

  private final java.lang.String suffix;

  private final boolean rotate;

  org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory(java.io.File, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field directory:Ljava/io/File;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field pattern:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field prefix:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field suffix:Ljava/lang/String;
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field rotate:Z
      31: return

  public io.undertow.server.HttpHandler getHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method createAccessLogDirectoryIfNecessary:()V
       4: aload_0
       5: invokespecial #8                  // Method createWorker:()Lorg/xnio/XnioWorker;
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field prefix:Ljava/lang/String;
      13: ifnull        23
      16: aload_0
      17: getfield      #4                  // Field prefix:Ljava/lang/String;
      20: goto          25
      23: ldc           #9                  // String access_log.
      25: astore_3
      26: aload_0
      27: getfield      #3                  // Field pattern:Ljava/lang/String;
      30: ifnull        40
      33: aload_0
      34: getfield      #3                  // Field pattern:Ljava/lang/String;
      37: goto          42
      40: ldc           #10                 // String common
      42: astore        4
      44: new           #11                 // class org/springframework/boot/web/embedded/undertow/AccessLogHttpHandlerFactory$ClosableAccessLogHandler
      47: dup
      48: aload_1
      49: aload_2
      50: new           #12                 // class io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver
      53: dup
      54: aload_2
      55: aload_0
      56: getfield      #2                  // Field directory:Ljava/io/File;
      59: aload_3
      60: aload_0
      61: getfield      #5                  // Field suffix:Ljava/lang/String;
      64: aload_0
      65: getfield      #6                  // Field rotate:Z
      68: invokespecial #13                 // Method io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver."<init>":(Ljava/util/concurrent/Executor;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V
      71: aload         4
      73: invokespecial #14                 // Method org/springframework/boot/web/embedded/undertow/AccessLogHttpHandlerFactory$ClosableAccessLogHandler."<init>":(Lio/undertow/server/HttpHandler;Lorg/xnio/XnioWorker;Lio/undertow/server/handlers/accesslog/DefaultAccessLogReceiver;Ljava/lang/String;)V
      76: areturn
      77: astore_2
      78: new           #16                 // class java/lang/IllegalStateException
      81: dup
      82: ldc           #17                 // String Failed to create AccessLogHandler
      84: aload_2
      85: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      88: athrow
    Exception table:
       from    to  target type
           0    76    77   Class java/io/IOException

  private void createAccessLogDirectoryIfNecessary();
    Code:
       0: aload_0
       1: getfield      #2                  // Field directory:Ljava/io/File;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String Access log directory is not set
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #2                  // Field directory:Ljava/io/File;
      21: invokevirtual #21                 // Method java/io/File.isDirectory:()Z
      24: ifne          72
      27: aload_0
      28: getfield      #2                  // Field directory:Ljava/io/File;
      31: invokevirtual #22                 // Method java/io/File.mkdirs:()Z
      34: ifne          72
      37: new           #16                 // class java/lang/IllegalStateException
      40: dup
      41: new           #23                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #25                 // String Failed to create access log directory \'
      50: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #2                  // Field directory:Ljava/io/File;
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #28                 // String \'
      62: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  private org.xnio.XnioWorker createWorker() throws java.io.IOException;
    Code:
       0: ldc           #31                 // class io/undertow/Undertow
       2: invokevirtual #32                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: invokestatic  #33                 // Method org/xnio/Xnio.getInstance:(Ljava/lang/ClassLoader;)Lorg/xnio/Xnio;
       8: astore_1
       9: aload_1
      10: invokestatic  #34                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      13: getstatic     #35                 // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
      16: iconst_1
      17: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      20: invokevirtual #37                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      23: invokevirtual #38                 // Method org/xnio/Xnio.createWorker:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
      26: areturn
}
