Compiled from "MapBinder.java"
class org.springframework.boot.context.properties.bind.MapBinder$EntryBinder {
  private final org.springframework.boot.context.properties.source.ConfigurationPropertyName root;

  private final org.springframework.boot.context.properties.bind.AggregateElementBinder elementBinder;

  private final org.springframework.core.ResolvableType mapType;

  private final org.springframework.core.ResolvableType keyType;

  private final org.springframework.core.ResolvableType valueType;

  final org.springframework.boot.context.properties.bind.MapBinder this$0;

  org.springframework.boot.context.properties.bind.MapBinder$EntryBinder(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<?>, org.springframework.boot.context.properties.bind.AggregateElementBinder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/context/properties/bind/MapBinder;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field root:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field elementBinder:Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;
      20: aload_0
      21: aload_3
      22: invokevirtual #5                  // Method org/springframework/boot/context/properties/bind/Bindable.getType:()Lorg/springframework/core/ResolvableType;
      25: invokevirtual #6                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      28: putfield      #7                  // Field mapType:Lorg/springframework/core/ResolvableType;
      31: aload_0
      32: aload_0
      33: getfield      #7                  // Field mapType:Lorg/springframework/core/ResolvableType;
      36: iconst_1
      37: newarray       int
      39: dup
      40: iconst_0
      41: iconst_0
      42: iastore
      43: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      46: putfield      #9                  // Field keyType:Lorg/springframework/core/ResolvableType;
      49: aload_0
      50: aload_0
      51: getfield      #7                  // Field mapType:Lorg/springframework/core/ResolvableType;
      54: iconst_1
      55: newarray       int
      57: dup
      58: iconst_0
      59: iconst_1
      60: iastore
      61: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      64: putfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
      67: return

  void bindEntries(org.springframework.boot.context.properties.source.ConfigurationPropertySource, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #11                 // class org/springframework/boot/context/properties/source/IterableConfigurationPropertySource
       4: ifeq          105
       7: aload_1
       8: checkcast     #11                 // class org/springframework/boot/context/properties/source/IterableConfigurationPropertySource
      11: invokeinterface #12,  1           // InterfaceMethod org/springframework/boot/context/properties/source/IterableConfigurationPropertySource.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          105
      26: aload_3
      27: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #15                 // class org/springframework/boot/context/properties/source/ConfigurationPropertyName
      35: astore        4
      37: aload_0
      38: aload         4
      40: invokespecial #16                 // Method getValueBindable:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/bind/Bindable;
      43: astore        5
      45: aload_0
      46: aload_1
      47: aload         4
      49: invokespecial #17                 // Method getEntryName:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      52: astore        6
      54: aload_0
      55: getfield      #1                  // Field this$0:Lorg/springframework/boot/context/properties/bind/MapBinder;
      58: invokevirtual #18                 // Method org/springframework/boot/context/properties/bind/MapBinder.getContext:()Lorg/springframework/boot/context/properties/bind/Binder$Context;
      61: invokevirtual #19                 // Method org/springframework/boot/context/properties/bind/Binder$Context.getConverter:()Lorg/springframework/boot/context/properties/bind/BindConverter;
      64: aload_0
      65: aload         6
      67: invokespecial #20                 // Method getKeyName:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/lang/String;
      70: aload_0
      71: getfield      #9                  // Field keyType:Lorg/springframework/core/ResolvableType;
      74: iconst_0
      75: anewarray     #21                 // class java/lang/annotation/Annotation
      78: invokevirtual #22                 // Method org/springframework/boot/context/properties/bind/BindConverter.convert:(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
      81: astore        7
      83: aload_2
      84: aload         7
      86: aload_0
      87: aload         6
      89: aload         5
      91: invokedynamic #23,  0             // InvokeDynamic #0:apply:(Lorg/springframework/boot/context/properties/bind/MapBinder$EntryBinder;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/util/function/Function;
      96: invokeinterface #24,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     101: pop
     102: goto          17
     105: return

  private org.springframework.boot.context.properties.bind.Bindable<?> getValueBindable(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: getfield      #3                  // Field root:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       4: aload_1
       5: invokevirtual #25                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.isParentOf:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z
       8: ifne          26
      11: aload_0
      12: invokespecial #26                 // Method isValueTreatedAsNestedMap:()Z
      15: ifeq          26
      18: aload_0
      19: getfield      #7                  // Field mapType:Lorg/springframework/core/ResolvableType;
      22: invokestatic  #27                 // Method org/springframework/boot/context/properties/bind/Bindable.of:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/Bindable;
      25: areturn
      26: aload_0
      27: getfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
      30: invokestatic  #27                 // Method org/springframework/boot/context/properties/bind/Bindable.of:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/Bindable;
      33: areturn

  private org.springframework.boot.context.properties.source.ConfigurationPropertyName getEntryName(org.springframework.boot.context.properties.source.ConfigurationPropertySource, org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: getfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
       4: ldc           #28                 // class java/lang/Object
       6: invokevirtual #29                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_3
      10: ldc           #30                 // class java/util/Collection
      12: aload_3
      13: invokevirtual #31                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      16: ifne          29
      19: aload_0
      20: getfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
      23: invokevirtual #32                 // Method org/springframework/core/ResolvableType.isArray:()Z
      26: ifeq          35
      29: aload_0
      30: aload_2
      31: invokespecial #33                 // Method chopNameAtNumericIndex:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      34: areturn
      35: aload_0
      36: getfield      #3                  // Field root:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      39: aload_2
      40: invokevirtual #25                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.isParentOf:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z
      43: ifne          76
      46: aload_0
      47: invokespecial #26                 // Method isValueTreatedAsNestedMap:()Z
      50: ifne          62
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokespecial #34                 // Method isScalarValue:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z
      59: ifne          76
      62: aload_2
      63: aload_0
      64: getfield      #3                  // Field root:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      67: invokevirtual #35                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.getNumberOfElements:()I
      70: iconst_1
      71: iadd
      72: invokevirtual #36                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.chop:(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      75: areturn
      76: aload_2
      77: areturn

  private org.springframework.boot.context.properties.source.ConfigurationPropertyName chopNameAtNumericIndex(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: getfield      #3                  // Field root:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       4: invokevirtual #35                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.getNumberOfElements:()I
       7: iconst_1
       8: iadd
       9: istore_2
      10: aload_1
      11: invokevirtual #35                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.getNumberOfElements:()I
      14: istore_3
      15: iload_2
      16: istore        4
      18: iload         4
      20: iload_3
      21: if_icmpge     46
      24: aload_1
      25: iload         4
      27: invokevirtual #37                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.isNumericIndex:(I)Z
      30: ifeq          40
      33: aload_1
      34: iload         4
      36: invokevirtual #36                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.chop:(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      39: areturn
      40: iinc          4, 1
      43: goto          18
      46: aload_1
      47: areturn

  private boolean isValueTreatedAsNestedMap();
    Code:
       0: ldc           #28                 // class java/lang/Object
       2: aload_0
       3: getfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
       6: ldc           #28                 // class java/lang/Object
       8: invokevirtual #29                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      11: invokevirtual #38                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ireturn

  private boolean isScalarValue(org.springframework.boot.context.properties.source.ConfigurationPropertySource, org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: getfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
       4: ldc           #28                 // class java/lang/Object
       6: invokevirtual #29                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_3
      10: aload_3
      11: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: ldc           #40                 // String java.lang
      16: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifne          31
      22: aload_3
      23: invokevirtual #42                 // Method java/lang/Class.isEnum:()Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_1
      32: aload_2
      33: invokeinterface #43,  2           // InterfaceMethod org/springframework/boot/context/properties/source/ConfigurationPropertySource.getConfigurationProperty:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
      38: astore        4
      40: aload         4
      42: ifnonnull     47
      45: iconst_0
      46: ireturn
      47: aload         4
      49: invokevirtual #44                 // Method org/springframework/boot/context/properties/source/ConfigurationProperty.getValue:()Ljava/lang/Object;
      52: astore        5
      54: aload_0
      55: getfield      #1                  // Field this$0:Lorg/springframework/boot/context/properties/bind/MapBinder;
      58: invokevirtual #18                 // Method org/springframework/boot/context/properties/bind/MapBinder.getContext:()Lorg/springframework/boot/context/properties/bind/Binder$Context;
      61: invokevirtual #45                 // Method org/springframework/boot/context/properties/bind/Binder$Context.getPlaceholdersResolver:()Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;
      64: aload         5
      66: invokeinterface #46,  2           // InterfaceMethod org/springframework/boot/context/properties/bind/PlaceholdersResolver.resolvePlaceholders:(Ljava/lang/Object;)Ljava/lang/Object;
      71: astore        5
      73: aload_0
      74: getfield      #1                  // Field this$0:Lorg/springframework/boot/context/properties/bind/MapBinder;
      77: invokevirtual #18                 // Method org/springframework/boot/context/properties/bind/MapBinder.getContext:()Lorg/springframework/boot/context/properties/bind/Binder$Context;
      80: invokevirtual #19                 // Method org/springframework/boot/context/properties/bind/Binder$Context.getConverter:()Lorg/springframework/boot/context/properties/bind/BindConverter;
      83: aload         5
      85: aload_0
      86: getfield      #10                 // Field valueType:Lorg/springframework/core/ResolvableType;
      89: iconst_0
      90: anewarray     #21                 // class java/lang/annotation/Annotation
      93: invokevirtual #47                 // Method org/springframework/boot/context/properties/bind/BindConverter.canConvert:(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)Z
      96: ireturn

  private java.lang.String getKeyName(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #3                  // Field root:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      12: invokevirtual #35                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.getNumberOfElements:()I
      15: istore_3
      16: iload_3
      17: aload_1
      18: invokevirtual #35                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.getNumberOfElements:()I
      21: if_icmpge     57
      24: aload_2
      25: invokevirtual #50                 // Method java/lang/StringBuilder.length:()I
      28: ifeq          38
      31: aload_2
      32: bipush        46
      34: invokevirtual #51                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      37: pop
      38: aload_2
      39: aload_1
      40: iload_3
      41: getstatic     #52                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$Form.ORIGINAL:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;
      44: invokevirtual #53                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.getElement:(ILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;)Ljava/lang/String;
      47: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: iinc          3, 1
      54: goto          16
      57: aload_2
      58: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  private java.lang.Object lambda$bindEntries$0(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field elementBinder:Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;
       4: aload_1
       5: aload_2
       6: invokeinterface #56,  3           // InterfaceMethod org/springframework/boot/context/properties/bind/AggregateElementBinder.bind:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/Object;
      11: areturn
}
