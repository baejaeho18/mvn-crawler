Compiled from "LoggingApplicationListener.java"
public class org.springframework.boot.context.logging.LoggingApplicationListener implements org.springframework.context.event.GenericApplicationListener {
  private static final org.springframework.boot.context.properties.source.ConfigurationPropertyName LOGGING_LEVEL;

  private static final org.springframework.boot.context.properties.source.ConfigurationPropertyName LOGGING_GROUP;

  private static final org.springframework.boot.context.properties.bind.Bindable<java.util.Map<java.lang.String, org.springframework.boot.logging.LogLevel>> STRING_LOGLEVEL_MAP;

  private static final org.springframework.boot.context.properties.bind.Bindable<java.util.Map<java.lang.String, java.util.List<java.lang.String>>> STRING_STRINGS_MAP;

  public static final int DEFAULT_ORDER;

  public static final java.lang.String CONFIG_PROPERTY;

  public static final java.lang.String REGISTER_SHUTDOWN_HOOK_PROPERTY;

  public static final java.lang.String LOGGING_SYSTEM_BEAN_NAME;

  public static final java.lang.String LOG_FILE_BEAN_NAME;

  public static final java.lang.String LOGGER_GROUPS_BEAN_NAME;

  private static final java.util.Map<java.lang.String, java.util.List<java.lang.String>> DEFAULT_GROUP_LOGGERS;

  private static final java.util.Map<org.springframework.boot.logging.LogLevel, java.util.List<java.lang.String>> SPRING_BOOT_LOGGING_LOGGERS;

  private static final java.lang.Class<?>[] EVENT_TYPES;

  private static final java.lang.Class<?>[] SOURCE_TYPES;

  private static final java.util.concurrent.atomic.AtomicBoolean shutdownHookRegistered;

  private final org.apache.commons.logging.Log logger;

  private org.springframework.boot.logging.LoggingSystem loggingSystem;

  private org.springframework.boot.logging.LogFile logFile;

  private org.springframework.boot.logging.LoggerGroups loggerGroups;

  private int order;

  private boolean parseArgs;

  private org.springframework.boot.logging.LogLevel springBootLogging;

  public org.springframework.boot.context.logging.LoggingApplicationListener();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #7                  // int -2147483628
      18: putfield      #8                  // Field order:I
      21: aload_0
      22: iconst_1
      23: putfield      #9                  // Field parseArgs:Z
      26: aload_0
      27: aconst_null
      28: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: return

  public boolean supportsEventType(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       5: getstatic     #12                 // Field EVENT_TYPES:[Ljava/lang/Class;
       8: invokespecial #13                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
      11: ireturn

  public boolean supportsSourceType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #14                 // Field SOURCE_TYPES:[Ljava/lang/Class;
       5: invokespecial #13                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
       8: ireturn

  private boolean isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_2
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     43
      20: aload_3
      21: iload         5
      23: aaload
      24: astore        6
      26: aload         6
      28: aload_1
      29: invokevirtual #15                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iinc          5, 1
      40: goto          13
      43: iconst_0
      44: ireturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
      12: invokespecial #17                 // Method onApplicationStartingEvent:(Lorg/springframework/boot/context/event/ApplicationStartingEvent;)V
      15: goto          94
      18: aload_1
      19: instanceof    #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      30: invokespecial #19                 // Method onApplicationEnvironmentPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
      33: goto          94
      36: aload_1
      37: instanceof    #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      40: ifeq          54
      43: aload_0
      44: aload_1
      45: checkcast     #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      48: invokespecial #21                 // Method onApplicationPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
      51: goto          94
      54: aload_1
      55: instanceof    #22                 // class org/springframework/context/event/ContextClosedEvent
      58: ifeq          83
      61: aload_1
      62: checkcast     #22                 // class org/springframework/context/event/ContextClosedEvent
      65: invokevirtual #23                 // Method org/springframework/context/event/ContextClosedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      68: invokeinterface #24,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getParent:()Lorg/springframework/context/ApplicationContext;
      73: ifnonnull     83
      76: aload_0
      77: invokespecial #25                 // Method onContextClosedEvent:()V
      80: goto          94
      83: aload_1
      84: instanceof    #26                 // class org/springframework/boot/context/event/ApplicationFailedEvent
      87: ifeq          94
      90: aload_0
      91: invokespecial #27                 // Method onApplicationFailedEvent:()V
      94: return

  private void onApplicationStartingEvent(org.springframework.boot.context.event.ApplicationStartingEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method org/springframework/boot/context/event/ApplicationStartingEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
       5: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #30                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      11: putfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      14: aload_0
      15: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      18: invokevirtual #32                 // Method org/springframework/boot/logging/LoggingSystem.beforeInitialize:()V
      21: return

  private void onApplicationEnvironmentPreparedEvent(org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent);
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnonnull     21
       7: aload_0
       8: aload_1
       9: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      12: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      15: invokestatic  #30                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      18: putfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      21: aload_0
      22: aload_1
      23: invokevirtual #34                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getEnvironment:()Lorg/springframework/core/env/ConfigurableEnvironment;
      26: aload_1
      27: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      30: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      33: invokevirtual #35                 // Method initialize:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/ClassLoader;)V
      36: return

  private void onApplicationPreparedEvent(org.springframework.boot.context.event.ApplicationPreparedEvent);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/springframework/boot/context/event/ApplicationPreparedEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: invokeinterface #37,  1           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       9: astore_2
      10: aload_2
      11: ldc           #38                 // String springBootLoggingSystem
      13: invokeinterface #39,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      18: ifne          33
      21: aload_2
      22: ldc           #38                 // String springBootLoggingSystem
      24: aload_0
      25: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      28: invokeinterface #40,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      37: ifnull        63
      40: aload_2
      41: ldc           #42                 // String springBootLogFile
      43: invokeinterface #39,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      48: ifne          63
      51: aload_2
      52: ldc           #42                 // String springBootLogFile
      54: aload_0
      55: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      58: invokeinterface #40,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      63: aload_0
      64: getfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
      67: ifnull        93
      70: aload_2
      71: ldc           #44                 // String springBootLoggerGroups
      73: invokeinterface #39,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      78: ifne          93
      81: aload_2
      82: ldc           #44                 // String springBootLoggerGroups
      84: aload_0
      85: getfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
      88: invokeinterface #40,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      93: return

  private void onContextClosedEvent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #45                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  private void onApplicationFailedEvent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #45                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  protected void initialize(org.springframework.core.env.ConfigurableEnvironment, java.lang.ClassLoader);
    Code:
       0: new           #46                 // class org/springframework/boot/logging/LoggingSystemProperties
       3: dup
       4: aload_1
       5: invokespecial #47                 // Method org/springframework/boot/logging/LoggingSystemProperties."<init>":(Lorg/springframework/core/env/Environment;)V
       8: invokevirtual #48                 // Method org/springframework/boot/logging/LoggingSystemProperties.apply:()V
      11: aload_0
      12: aload_1
      13: invokestatic  #49                 // Method org/springframework/boot/logging/LogFile.get:(Lorg/springframework/core/env/PropertyResolver;)Lorg/springframework/boot/logging/LogFile;
      16: putfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      19: aload_0
      20: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      23: ifnull        33
      26: aload_0
      27: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      30: invokevirtual #50                 // Method org/springframework/boot/logging/LogFile.applyToSystemProperties:()V
      33: aload_0
      34: new           #51                 // class org/springframework/boot/logging/LoggerGroups
      37: dup
      38: getstatic     #52                 // Field DEFAULT_GROUP_LOGGERS:Ljava/util/Map;
      41: invokespecial #53                 // Method org/springframework/boot/logging/LoggerGroups."<init>":(Ljava/util/Map;)V
      44: putfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
      47: aload_0
      48: aload_1
      49: invokespecial #54                 // Method initializeEarlyLoggingLevel:(Lorg/springframework/core/env/ConfigurableEnvironment;)V
      52: aload_0
      53: aload_1
      54: aload_0
      55: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      58: aload_0
      59: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      62: invokespecial #55                 // Method initializeSystem:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogFile;)V
      65: aload_0
      66: aload_1
      67: aload_0
      68: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      71: invokespecial #56                 // Method initializeFinalLoggingLevels:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;)V
      74: aload_0
      75: aload_1
      76: aload_0
      77: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      80: invokespecial #57                 // Method registerShutdownHookIfNecessary:(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/logging/LoggingSystem;)V
      83: return

  private void initializeEarlyLoggingLevel(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_0
       1: getfield      #9                  // Field parseArgs:Z
       4: ifeq          48
       7: aload_0
       8: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      11: ifnonnull     48
      14: aload_0
      15: aload_1
      16: ldc           #58                 // String debug
      18: invokespecial #59                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      21: ifeq          31
      24: aload_0
      25: getstatic     #60                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      28: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: aload_0
      32: aload_1
      33: ldc           #61                 // String trace
      35: invokespecial #59                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      38: ifeq          48
      41: aload_0
      42: getstatic     #62                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      45: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      48: return

  private boolean isSet(org.springframework.core.env.ConfigurableEnvironment, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #63,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_3
       8: aload_3
       9: ifnull        25
      12: aload_3
      13: ldc           #64                 // String false
      15: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private void initializeSystem(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogFile);
    Code:
       0: new           #66                 // class org/springframework/boot/logging/LoggingInitializationContext
       3: dup
       4: aload_1
       5: invokespecial #67                 // Method org/springframework/boot/logging/LoggingInitializationContext."<init>":(Lorg/springframework/core/env/ConfigurableEnvironment;)V
       8: astore        4
      10: aload_1
      11: ldc           #68                 // String logging.config
      13: invokeinterface #63,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokespecial #69                 // Method ignoreLogConfig:(Ljava/lang/String;)Z
      26: ifeq          40
      29: aload_2
      30: aload         4
      32: aconst_null
      33: aload_3
      34: invokevirtual #70                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      37: goto          144
      40: aload_2
      41: aload         4
      43: aload         5
      45: aload_3
      46: invokevirtual #70                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      49: goto          144
      52: astore        6
      54: aload         6
      56: astore        7
      58: aload         7
      60: ifnull        81
      63: aload         7
      65: instanceof    #72                 // class java/io/FileNotFoundException
      68: ifne          81
      71: aload         7
      73: invokevirtual #73                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      76: astore        7
      78: goto          58
      81: aload         7
      83: ifnull        91
      86: aload         7
      88: goto          93
      91: aload         6
      93: astore        7
      95: getstatic     #74                 // Field java/lang/System.err:Ljava/io/PrintStream;
      98: new           #75                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #77                 // String Logging system failed to initialize using configuration from \'
     107: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload         5
     112: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #79                 // String \'
     117: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokevirtual #81                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     126: aload         7
     128: getstatic     #74                 // Field java/lang/System.err:Ljava/io/PrintStream;
     131: invokevirtual #82                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
     134: new           #83                 // class java/lang/IllegalStateException
     137: dup
     138: aload         6
     140: invokespecial #84                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     143: athrow
     144: return
    Exception table:
       from    to  target type
          40    49    52   Class java/lang/Exception

  private boolean ignoreLogConfig(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #85                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: aload_1
       8: ldc           #86                 // String -D
      10: invokevirtual #87                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private void initializeFinalLoggingLevels(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #88                 // Method bindLoggerGroups:(Lorg/springframework/core/env/ConfigurableEnvironment;)V
       5: aload_0
       6: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       9: ifnull        21
      12: aload_0
      13: aload_2
      14: aload_0
      15: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      18: invokevirtual #89                 // Method initializeSpringBootLogging:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;)V
      21: aload_0
      22: aload_2
      23: aload_1
      24: invokevirtual #90                 // Method setLogLevels:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/ConfigurableEnvironment;)V
      27: return

  private void bindLoggerGroups(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_0
       1: getfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
       4: ifnull        39
       7: aload_1
       8: invokestatic  #91                 // Method org/springframework/boot/context/properties/bind/Binder.get:(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/bind/Binder;
      11: astore_2
      12: aload_2
      13: getstatic     #92                 // Field LOGGING_GROUP:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      16: getstatic     #93                 // Field STRING_STRINGS_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      19: invokevirtual #94                 // Method org/springframework/boot/context/properties/bind/Binder.bind:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
      22: aload_0
      23: getfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
      26: dup
      27: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: pop
      31: invokedynamic #95,  0             // InvokeDynamic #0:accept:(Lorg/springframework/boot/logging/LoggerGroups;)Ljava/util/function/Consumer;
      36: invokevirtual #96                 // Method org/springframework/boot/context/properties/bind/BindResult.ifBound:(Ljava/util/function/Consumer;)V
      39: return

  protected void initializeSpringBootLogging(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #97                 // Method getLogLevelConfigurer:(Lorg/springframework/boot/logging/LoggingSystem;)Ljava/util/function/BiConsumer;
       5: astore_3
       6: getstatic     #98                 // Field SPRING_BOOT_LOGGING_LOGGERS:Ljava/util/Map;
       9: aload_2
      10: invokestatic  #99                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      13: invokeinterface #100,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #101                // class java/util/List
      21: aload_0
      22: aload_2
      23: aload_3
      24: invokedynamic #102,  0            // InvokeDynamic #1:accept:(Lorg/springframework/boot/context/logging/LoggingApplicationListener;Lorg/springframework/boot/logging/LogLevel;Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      29: invokeinterface #103,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      34: return

  protected void setLogLevels(org.springframework.boot.logging.LoggingSystem, org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #97                 // Method getLogLevelConfigurer:(Lorg/springframework/boot/logging/LoggingSystem;)Ljava/util/function/BiConsumer;
       5: astore_3
       6: aload_2
       7: invokestatic  #91                 // Method org/springframework/boot/context/properties/bind/Binder.get:(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/bind/Binder;
      10: astore        4
      12: aload         4
      14: getstatic     #104                // Field LOGGING_LEVEL:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      17: getstatic     #105                // Field STRING_LOGLEVEL_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      20: invokevirtual #94                 // Method org/springframework/boot/context/properties/bind/Binder.bind:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
      23: invokedynamic #106,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      28: invokevirtual #107                // Method org/springframework/boot/context/properties/bind/BindResult.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      31: checkcast     #108                // class java/util/Map
      34: astore        5
      36: aload         5
      38: aload_0
      39: aload_3
      40: invokedynamic #109,  0            // InvokeDynamic #3:accept:(Lorg/springframework/boot/context/logging/LoggingApplicationListener;Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;
      45: invokeinterface #110,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      50: return

  private void configureLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel, java.util.function.BiConsumer<java.lang.String, org.springframework.boot.logging.LogLevel>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
       4: ifnull        38
       7: aload_0
       8: getfield      #43                 // Field loggerGroups:Lorg/springframework/boot/logging/LoggerGroups;
      11: aload_1
      12: invokevirtual #111                // Method org/springframework/boot/logging/LoggerGroups.get:(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerGroup;
      15: astore        4
      17: aload         4
      19: ifnull        38
      22: aload         4
      24: invokevirtual #112                // Method org/springframework/boot/logging/LoggerGroup.hasMembers:()Z
      27: ifeq          38
      30: aload         4
      32: aload_2
      33: aload_3
      34: invokevirtual #113                // Method org/springframework/boot/logging/LoggerGroup.configureLogLevel:(Lorg/springframework/boot/logging/LogLevel;Ljava/util/function/BiConsumer;)V
      37: return
      38: aload_3
      39: aload_1
      40: aload_2
      41: invokeinterface #114,  3          // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      46: return

  private java.util.function.BiConsumer<java.lang.String, org.springframework.boot.logging.LogLevel> getLogLevelConfigurer(org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #115,  0            // InvokeDynamic #4:accept:(Lorg/springframework/boot/context/logging/LoggingApplicationListener;Lorg/springframework/boot/logging/LoggingSystem;)Ljava/util/function/BiConsumer;
       7: areturn

  private void registerShutdownHookIfNecessary(org.springframework.core.env.Environment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_1
       1: ldc           #116                // String logging.register-shutdown-hook
       3: ldc           #117                // class java/lang/Boolean
       5: iconst_0
       6: invokestatic  #118                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #119,  4          // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #117                // class java/lang/Boolean
      17: invokevirtual #120                // Method java/lang/Boolean.booleanValue:()Z
      20: istore_3
      21: iload_3
      22: ifeq          60
      25: aload_2
      26: invokevirtual #121                // Method org/springframework/boot/logging/LoggingSystem.getShutdownHandler:()Ljava/lang/Runnable;
      29: astore        4
      31: aload         4
      33: ifnull        60
      36: getstatic     #122                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: iconst_0
      40: iconst_1
      41: invokevirtual #123                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      44: ifeq          60
      47: aload_0
      48: new           #124                // class java/lang/Thread
      51: dup
      52: aload         4
      54: invokespecial #125                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      57: invokevirtual #126                // Method registerShutdownHook:(Ljava/lang/Thread;)V
      60: return

  void registerShutdownHook(java.lang.Thread);
    Code:
       0: invokestatic  #127                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: aload_1
       4: invokevirtual #128                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
       7: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field order:I
       4: ireturn

  public void setSpringBootLogging(org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       5: return

  public void setParseArgs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field parseArgs:Z
       5: return

  private void lambda$getLogLevelConfigurer$2(org.springframework.boot.logging.LoggingSystem, java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_2
       1: ldc           #130                // String ROOT
       3: invokevirtual #131                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          13
       9: aconst_null
      10: goto          14
      13: aload_2
      14: astore_2
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #132                // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      21: goto          42
      24: astore        4
      26: aload_0
      27: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      30: ldc           #134                // String Cannot set level \'%s\' for \'%s\'
      32: aload_3
      33: aload_2
      34: invokestatic  #135                // Method org/springframework/core/log/LogMessage.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;
      37: invokeinterface #136,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      42: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/RuntimeException

  private void lambda$setLogLevels$1(java.util.function.BiConsumer, java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: invokespecial #137                // Method configureLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;Ljava/util/function/BiConsumer;)V
       7: return

  private void lambda$initializeSpringBootLogging$0(org.springframework.boot.logging.LogLevel, java.util.function.BiConsumer, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokespecial #137                // Method configureLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;Ljava/util/function/BiConsumer;)V
       7: return

  static {};
    Code:
       0: ldc           #138                // String logging.level
       2: invokestatic  #139                // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.of:(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       5: putstatic     #104                // Field LOGGING_LEVEL:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       8: ldc           #140                // String logging.group
      10: invokestatic  #139                // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.of:(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      13: putstatic     #92                 // Field LOGGING_GROUP:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      16: ldc           #141                // class java/lang/String
      18: ldc           #142                // class org/springframework/boot/logging/LogLevel
      20: invokestatic  #143                // Method org/springframework/boot/context/properties/bind/Bindable.mapOf:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
      23: putstatic     #105                // Field STRING_LOGLEVEL_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      26: ldc           #144                // class org/springframework/util/MultiValueMap
      28: iconst_2
      29: anewarray     #145                // class java/lang/Class
      32: dup
      33: iconst_0
      34: ldc           #141                // class java/lang/String
      36: aastore
      37: dup
      38: iconst_1
      39: ldc           #141                // class java/lang/String
      41: aastore
      42: invokestatic  #146                // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      45: invokevirtual #147                // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      48: invokestatic  #148                // Method org/springframework/boot/context/properties/bind/Bindable.of:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/Bindable;
      51: putstatic     #93                 // Field STRING_STRINGS_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      54: new           #149                // class org/springframework/util/LinkedMultiValueMap
      57: dup
      58: invokespecial #150                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      61: astore_0
      62: aload_0
      63: ldc           #151                // String web
      65: ldc           #152                // String org.springframework.core.codec
      67: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      72: aload_0
      73: ldc           #151                // String web
      75: ldc           #154                // String org.springframework.http
      77: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      82: aload_0
      83: ldc           #151                // String web
      85: ldc           #155                // String org.springframework.web
      87: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      92: aload_0
      93: ldc           #151                // String web
      95: ldc           #156                // String org.springframework.boot.actuate.endpoint.web
      97: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     102: aload_0
     103: ldc           #151                // String web
     105: ldc           #157                // String org.springframework.boot.web.servlet.ServletContextInitializerBeans
     107: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     112: aload_0
     113: ldc           #158                // String sql
     115: ldc           #159                // String org.springframework.jdbc.core
     117: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     122: aload_0
     123: ldc           #158                // String sql
     125: ldc           #160                // String org.hibernate.SQL
     127: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     132: aload_0
     133: ldc           #158                // String sql
     135: ldc           #161                // String org.jooq.tools.LoggerListener
     137: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     142: aload_0
     143: invokestatic  #162                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     146: putstatic     #52                 // Field DEFAULT_GROUP_LOGGERS:Ljava/util/Map;
     149: new           #149                // class org/springframework/util/LinkedMultiValueMap
     152: dup
     153: invokespecial #150                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
     156: astore_0
     157: aload_0
     158: getstatic     #60                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     161: ldc           #158                // String sql
     163: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     168: aload_0
     169: getstatic     #60                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     172: ldc           #151                // String web
     174: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     179: aload_0
     180: getstatic     #60                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     183: ldc           #163                // String org.springframework.boot
     185: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     190: aload_0
     191: getstatic     #62                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     194: ldc           #164                // String org.springframework
     196: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     201: aload_0
     202: getstatic     #62                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     205: ldc           #165                // String org.apache.tomcat
     207: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     212: aload_0
     213: getstatic     #62                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     216: ldc           #166                // String org.apache.catalina
     218: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     223: aload_0
     224: getstatic     #62                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     227: ldc           #167                // String org.eclipse.jetty
     229: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     234: aload_0
     235: getstatic     #62                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     238: ldc           #168                // String org.hibernate.tool.hbm2ddl
     240: invokeinterface #153,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     245: aload_0
     246: invokestatic  #162                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     249: putstatic     #98                 // Field SPRING_BOOT_LOGGING_LOGGERS:Ljava/util/Map;
     252: iconst_5
     253: anewarray     #145                // class java/lang/Class
     256: dup
     257: iconst_0
     258: ldc           #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
     260: aastore
     261: dup
     262: iconst_1
     263: ldc           #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
     265: aastore
     266: dup
     267: iconst_2
     268: ldc           #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
     270: aastore
     271: dup
     272: iconst_3
     273: ldc           #22                 // class org/springframework/context/event/ContextClosedEvent
     275: aastore
     276: dup
     277: iconst_4
     278: ldc           #26                 // class org/springframework/boot/context/event/ApplicationFailedEvent
     280: aastore
     281: putstatic     #12                 // Field EVENT_TYPES:[Ljava/lang/Class;
     284: iconst_2
     285: anewarray     #145                // class java/lang/Class
     288: dup
     289: iconst_0
     290: ldc           #169                // class org/springframework/boot/SpringApplication
     292: aastore
     293: dup
     294: iconst_1
     295: ldc           #170                // class org/springframework/context/ApplicationContext
     297: aastore
     298: putstatic     #14                 // Field SOURCE_TYPES:[Ljava/lang/Class;
     301: new           #171                // class java/util/concurrent/atomic/AtomicBoolean
     304: dup
     305: iconst_0
     306: invokespecial #172                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     309: putstatic     #122                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
     312: return
}
