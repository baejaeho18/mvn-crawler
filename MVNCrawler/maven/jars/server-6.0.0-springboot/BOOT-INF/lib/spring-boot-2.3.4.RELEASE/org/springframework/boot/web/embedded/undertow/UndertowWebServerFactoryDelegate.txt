Compiled from "UndertowWebServerFactoryDelegate.java"
class org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate {
  private java.util.Set<org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer> builderCustomizers;

  private java.lang.Integer bufferSize;

  private java.lang.Integer ioThreads;

  private java.lang.Integer workerThreads;

  private java.lang.Boolean directBuffers;

  private java.io.File accessLogDirectory;

  private java.lang.String accessLogPattern;

  private java.lang.String accessLogPrefix;

  private java.lang.String accessLogSuffix;

  private boolean accessLogEnabled;

  private boolean accessLogRotate;

  private boolean useForwardHeaders;

  org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field builderCustomizers:Ljava/util/Set;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field accessLogEnabled:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field accessLogRotate:Z
      25: return

  void setBuilderCustomizers(java.util.Collection<? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer>);
    Code:
       0: aload_1
       1: ldc           #7                  // String Customizers must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #2                  // class java/util/LinkedHashSet
      10: dup
      11: aload_1
      12: invokespecial #9                  // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      15: putfield      #4                  // Field builderCustomizers:Ljava/util/Set;
      18: return

  void addBuilderCustomizers(org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer...);
    Code:
       0: aload_1
       1: ldc           #7                  // String Customizers must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field builderCustomizers:Ljava/util/Set;
      10: aload_1
      11: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #11,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  java.util.Collection<org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer> getBuilderCustomizers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field builderCustomizers:Ljava/util/Set;
       4: areturn

  void setBufferSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field bufferSize:Ljava/lang/Integer;
       5: return

  void setIoThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field ioThreads:Ljava/lang/Integer;
       5: return

  void setWorkerThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field workerThreads:Ljava/lang/Integer;
       5: return

  void setUseDirectBuffers(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field directBuffers:Ljava/lang/Boolean;
       5: return

  void setAccessLogDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field accessLogDirectory:Ljava/io/File;
       5: return

  void setAccessLogPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field accessLogPattern:Ljava/lang/String;
       5: return

  void setAccessLogPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field accessLogPrefix:Ljava/lang/String;
       5: return

  java.lang.String getAccessLogPrefix();
    Code:
       0: aload_0
       1: getfield      #18                 // Field accessLogPrefix:Ljava/lang/String;
       4: areturn

  void setAccessLogSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field accessLogSuffix:Ljava/lang/String;
       5: return

  void setAccessLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field accessLogEnabled:Z
       5: return

  boolean isAccessLogEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field accessLogEnabled:Z
       4: ireturn

  void setAccessLogRotate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field accessLogRotate:Z
       5: return

  void setUseForwardHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field useForwardHeaders:Z
       5: return

  boolean isUseForwardHeaders();
    Code:
       0: aload_0
       1: getfield      #20                 // Field useForwardHeaders:Z
       4: ireturn

  io.undertow.Undertow$Builder createBuilder(org.springframework.boot.web.server.AbstractConfigurableWebServerFactory);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getSsl:()Lorg/springframework/boot/web/server/Ssl;
       4: astore_2
       5: aload_1
       6: invokevirtual #22                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getAddress:()Ljava/net/InetAddress;
       9: astore_3
      10: aload_1
      11: invokevirtual #23                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getPort:()I
      14: istore        4
      16: invokestatic  #24                 // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
      19: astore        5
      21: aload_0
      22: getfield      #12                 // Field bufferSize:Ljava/lang/Integer;
      25: ifnull        41
      28: aload         5
      30: aload_0
      31: getfield      #12                 // Field bufferSize:Ljava/lang/Integer;
      34: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      37: invokevirtual #26                 // Method io/undertow/Undertow$Builder.setBufferSize:(I)Lio/undertow/Undertow$Builder;
      40: pop
      41: aload_0
      42: getfield      #13                 // Field ioThreads:Ljava/lang/Integer;
      45: ifnull        61
      48: aload         5
      50: aload_0
      51: getfield      #13                 // Field ioThreads:Ljava/lang/Integer;
      54: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #27                 // Method io/undertow/Undertow$Builder.setIoThreads:(I)Lio/undertow/Undertow$Builder;
      60: pop
      61: aload_0
      62: getfield      #14                 // Field workerThreads:Ljava/lang/Integer;
      65: ifnull        81
      68: aload         5
      70: aload_0
      71: getfield      #14                 // Field workerThreads:Ljava/lang/Integer;
      74: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      77: invokevirtual #28                 // Method io/undertow/Undertow$Builder.setWorkerThreads:(I)Lio/undertow/Undertow$Builder;
      80: pop
      81: aload_0
      82: getfield      #15                 // Field directBuffers:Ljava/lang/Boolean;
      85: ifnull        101
      88: aload         5
      90: aload_0
      91: getfield      #15                 // Field directBuffers:Ljava/lang/Boolean;
      94: invokevirtual #29                 // Method java/lang/Boolean.booleanValue:()Z
      97: invokevirtual #30                 // Method io/undertow/Undertow$Builder.setDirectBuffers:(Z)Lio/undertow/Undertow$Builder;
     100: pop
     101: aload_2
     102: ifnull        165
     105: aload_2
     106: invokevirtual #31                 // Method org/springframework/boot/web/server/Ssl.isEnabled:()Z
     109: ifeq          165
     112: new           #32                 // class org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer
     115: dup
     116: aload_1
     117: invokevirtual #23                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getPort:()I
     120: aload_3
     121: aload_2
     122: aload_1
     123: invokevirtual #33                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getSslStoreProvider:()Lorg/springframework/boot/web/server/SslStoreProvider;
     126: invokespecial #34                 // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer."<init>":(ILjava/net/InetAddress;Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)V
     129: aload         5
     131: invokevirtual #35                 // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
     134: aload_1
     135: invokevirtual #36                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getHttp2:()Lorg/springframework/boot/web/server/Http2;
     138: astore        6
     140: aload         6
     142: ifnull        162
     145: aload         5
     147: getstatic     #37                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
     150: aload         6
     152: invokevirtual #38                 // Method org/springframework/boot/web/server/Http2.isEnabled:()Z
     155: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     158: invokevirtual #40                 // Method io/undertow/Undertow$Builder.setServerOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
     161: pop
     162: goto          186
     165: aload         5
     167: iload         4
     169: aload_3
     170: ifnull        180
     173: aload_3
     174: invokevirtual #41                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     177: goto          182
     180: ldc           #42                 // String 0.0.0.0
     182: invokevirtual #43                 // Method io/undertow/Undertow$Builder.addHttpListener:(ILjava/lang/String;)Lio/undertow/Undertow$Builder;
     185: pop
     186: aload         5
     188: getstatic     #44                 // Field io/undertow/UndertowOptions.SHUTDOWN_TIMEOUT:Lorg/xnio/Option;
     191: iconst_0
     192: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     195: invokevirtual #40                 // Method io/undertow/Undertow$Builder.setServerOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
     198: pop
     199: aload_0
     200: getfield      #4                  // Field builderCustomizers:Ljava/util/Set;
     203: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     208: astore        6
     210: aload         6
     212: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     217: ifeq          244
     220: aload         6
     222: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     227: checkcast     #49                 // class org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer
     230: astore        7
     232: aload         7
     234: aload         5
     236: invokeinterface #50,  2           // InterfaceMethod org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
     241: goto          210
     244: aload         5
     246: areturn

  java.util.List<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory> createHttpHandlerFactories(org.springframework.boot.web.server.AbstractConfigurableWebServerFactory, org.springframework.boot.web.embedded.undertow.HttpHandlerFactory...);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getCompression:()Lorg/springframework/boot/web/server/Compression;
       4: aload_0
       5: getfield      #20                 // Field useForwardHeaders:Z
       8: aload_1
       9: invokevirtual #52                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getServerHeader:()Ljava/lang/String;
      12: aload_1
      13: invokevirtual #53                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getShutdown:()Lorg/springframework/boot/web/server/Shutdown;
      16: aload_2
      17: invokestatic  #54                 // Method createHttpHandlerFactories:(Lorg/springframework/boot/web/server/Compression;ZLjava/lang/String;Lorg/springframework/boot/web/server/Shutdown;[Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;)Ljava/util/List;
      20: astore_3
      21: aload_0
      22: invokevirtual #55                 // Method isAccessLogEnabled:()Z
      25: ifeq          62
      28: aload_3
      29: new           #56                 // class org/springframework/boot/web/embedded/undertow/AccessLogHttpHandlerFactory
      32: dup
      33: aload_0
      34: getfield      #16                 // Field accessLogDirectory:Ljava/io/File;
      37: aload_0
      38: getfield      #17                 // Field accessLogPattern:Ljava/lang/String;
      41: aload_0
      42: getfield      #18                 // Field accessLogPrefix:Ljava/lang/String;
      45: aload_0
      46: getfield      #19                 // Field accessLogSuffix:Ljava/lang/String;
      49: aload_0
      50: getfield      #6                  // Field accessLogRotate:Z
      53: invokespecial #57                 // Method org/springframework/boot/web/embedded/undertow/AccessLogHttpHandlerFactory."<init>":(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      56: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_3
      63: areturn

  static java.util.List<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory> createHttpHandlerFactories(org.springframework.boot.web.server.Compression, boolean, java.lang.String, org.springframework.boot.web.server.Shutdown, org.springframework.boot.web.embedded.undertow.HttpHandlerFactory...);
    Code:
       0: new           #59                 // class java/util/ArrayList
       3: dup
       4: invokespecial #60                 // Method java/util/ArrayList."<init>":()V
       7: astore        5
       9: aload         5
      11: aload         4
      13: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      16: invokeinterface #61,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_0
      23: ifnull        49
      26: aload_0
      27: invokevirtual #62                 // Method org/springframework/boot/web/server/Compression.getEnabled:()Z
      30: ifeq          49
      33: aload         5
      35: new           #63                 // class org/springframework/boot/web/embedded/undertow/CompressionHttpHandlerFactory
      38: dup
      39: aload_0
      40: invokespecial #64                 // Method org/springframework/boot/web/embedded/undertow/CompressionHttpHandlerFactory."<init>":(Lorg/springframework/boot/web/server/Compression;)V
      43: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: iload_1
      50: ifeq          66
      53: aload         5
      55: invokedynamic #65,  0             // InvokeDynamic #0:getHandler:()Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;
      60: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_2
      67: invokestatic  #66                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      70: ifeq          87
      73: aload         5
      75: aload_2
      76: invokedynamic #67,  0             // InvokeDynamic #1:getHandler:(Ljava/lang/String;)Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;
      81: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: aload_3
      88: getstatic     #68                 // Field org/springframework/boot/web/server/Shutdown.GRACEFUL:Lorg/springframework/boot/web/server/Shutdown;
      91: if_acmpne     107
      94: aload         5
      96: invokedynamic #69,  0             // InvokeDynamic #2:getHandler:()Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;
     101: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     106: pop
     107: aload         5
     109: areturn

  private static io.undertow.server.HttpHandler lambda$createHttpHandlerFactories$0(java.lang.String, io.undertow.server.HttpHandler);
    Code:
       0: aload_1
       1: ldc           #70                 // String Server
       3: aload_0
       4: invokestatic  #71                 // Method io/undertow/Handlers.header:(Lio/undertow/server/HttpHandler;Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/handlers/SetHeaderHandler;
       7: areturn
}
