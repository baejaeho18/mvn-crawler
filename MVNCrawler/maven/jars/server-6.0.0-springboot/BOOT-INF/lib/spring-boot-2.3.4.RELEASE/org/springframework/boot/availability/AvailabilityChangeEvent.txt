Compiled from "AvailabilityChangeEvent.java"
public class org.springframework.boot.availability.AvailabilityChangeEvent<S extends org.springframework.boot.availability.AvailabilityState> extends org.springframework.context.PayloadApplicationEvent<S> {
  public org.springframework.boot.availability.AvailabilityChangeEvent(java.lang.Object, S);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/context/PayloadApplicationEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  public S getState();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getPayload:()Ljava/lang/Object;
       4: checkcast     #3                  // class org/springframework/boot/availability/AvailabilityState
       7: areturn

  public org.springframework.core.ResolvableType getResolvableType();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: iconst_1
       5: anewarray     #5                  // class java/lang/Class
       8: dup
       9: iconst_0
      10: aload_0
      11: invokespecial #6                  // Method getStateType:()Ljava/lang/Class;
      14: aastore
      15: invokestatic  #7                  // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      18: areturn

  private java.lang.Class<?> getStateType();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getState:()Lorg/springframework/boot/availability/AvailabilityState;
       4: astore_1
       5: aload_1
       6: instanceof    #9                  // class java/lang/Enum
       9: ifeq          20
      12: aload_1
      13: checkcast     #9                  // class java/lang/Enum
      16: invokevirtual #10                 // Method java/lang/Enum.getDeclaringClass:()Ljava/lang/Class;
      19: areturn
      20: aload_1
      21: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: areturn

  public static <S extends org.springframework.boot.availability.AvailabilityState> void publish(org.springframework.context.ApplicationContext, S);
    Code:
       0: aload_0
       1: ldc           #11                 // String Context must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokestatic  #13                 // Method publish:(Lorg/springframework/context/ApplicationEventPublisher;Ljava/lang/Object;Lorg/springframework/boot/availability/AvailabilityState;)V
      12: return

  public static <S extends org.springframework.boot.availability.AvailabilityState> void publish(org.springframework.context.ApplicationEventPublisher, java.lang.Object, S);
    Code:
       0: aload_0
       1: ldc           #14                 // String Publisher must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #15                 // class org/springframework/boot/availability/AvailabilityChangeEvent
      10: dup
      11: aload_1
      12: aload_2
      13: invokespecial #16                 // Method "<init>":(Ljava/lang/Object;Lorg/springframework/boot/availability/AvailabilityState;)V
      16: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      21: return
}
