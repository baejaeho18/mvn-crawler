Compiled from "LogbackLoggingSystem.java"
public class org.springframework.boot.logging.logback.LogbackLoggingSystem extends org.springframework.boot.logging.Slf4JLoggingSystem {
  private static final java.lang.String CONFIGURATION_FILE_PROPERTY;

  private static final org.springframework.boot.logging.AbstractLoggingSystem$LogLevels<ch.qos.logback.classic.Level> LEVELS;

  private static final ch.qos.logback.classic.turbo.TurboFilter FILTER;

  public org.springframework.boot.logging.logback.LogbackLoggingSystem(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/boot/logging/Slf4JLoggingSystem."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  protected java.lang.String[] getStandardConfigLocations();
    Code:
       0: iconst_4
       1: anewarray     #3                  // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #4                  // String logback-test.groovy
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #5                  // String logback-test.xml
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #6                  // String logback.groovy
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #7                  // String logback.xml
      23: aastore
      24: areturn

  public void beforeInitialize();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #8                  // Method isAlreadyInitialized:(Lch/qos/logback/classic/LoggerContext;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokespecial #9                  // Method org/springframework/boot/logging/Slf4JLoggingSystem.beforeInitialize:()V
      18: aload_1
      19: invokevirtual #10                 // Method ch/qos/logback/classic/LoggerContext.getTurboFilterList:()Lch/qos/logback/classic/spi/TurboFilterList;
      22: getstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
      25: invokevirtual #12                 // Method ch/qos/logback/classic/spi/TurboFilterList.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public void initialize(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore        4
       6: aload_0
       7: aload         4
       9: invokespecial #8                  // Method isAlreadyInitialized:(Lch/qos/logback/classic/LoggerContext;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokespecial #13                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      23: aload         4
      25: invokevirtual #10                 // Method ch/qos/logback/classic/LoggerContext.getTurboFilterList:()Lch/qos/logback/classic/spi/TurboFilterList;
      28: getstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
      31: invokevirtual #14                 // Method ch/qos/logback/classic/spi/TurboFilterList.remove:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: aload         4
      38: invokespecial #15                 // Method markAsInitialized:(Lch/qos/logback/classic/LoggerContext;)V
      41: ldc           #17                 // String logback.configurationFile
      43: invokestatic  #18                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      46: invokestatic  #19                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      49: ifeq          66
      52: aload_0
      53: ldc           #16                 // class org/springframework/boot/logging/logback/LogbackLoggingSystem
      55: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokespecial #21                 // Method getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      61: ldc           #22                 // String Ignoring \'logback.configurationFile\' system property. Please use \'logging.config\' instead.
      63: invokevirtual #23                 // Method ch/qos/logback/classic/Logger.warn:(Ljava/lang/String;)V
      66: return

  protected void loadDefaults(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokespecial #24                 // Method stopAndReset:(Lch/qos/logback/classic/LoggerContext;)V
      10: ldc           #25                 // String logback.debug
      12: invokestatic  #26                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      15: istore        4
      17: iload         4
      19: ifeq          33
      22: aload_3
      23: new           #27                 // class ch/qos/logback/core/status/OnConsoleStatusListener
      26: dup
      27: invokespecial #28                 // Method ch/qos/logback/core/status/OnConsoleStatusListener."<init>":()V
      30: invokestatic  #29                 // Method ch/qos/logback/core/util/StatusListenerConfigHelper.addOnConsoleListenerInstance:(Lch/qos/logback/core/Context;Lch/qos/logback/core/status/OnConsoleStatusListener;)V
      33: iload         4
      35: ifeq          49
      38: new           #30                 // class org/springframework/boot/logging/logback/DebugLogbackConfigurator
      41: dup
      42: aload_3
      43: invokespecial #31                 // Method org/springframework/boot/logging/logback/DebugLogbackConfigurator."<init>":(Lch/qos/logback/classic/LoggerContext;)V
      46: goto          57
      49: new           #32                 // class org/springframework/boot/logging/logback/LogbackConfigurator
      52: dup
      53: aload_3
      54: invokespecial #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator."<init>":(Lch/qos/logback/classic/LoggerContext;)V
      57: astore        5
      59: aload_1
      60: invokevirtual #34                 // Method org/springframework/boot/logging/LoggingInitializationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      63: astore        6
      65: aload_3
      66: ldc           #36                 // String LOG_LEVEL_PATTERN
      68: aload         6
      70: ldc           #37                 // String ${logging.pattern.level:${LOG_LEVEL_PATTERN:%5p}}
      72: invokeinterface #38,  2           // InterfaceMethod org/springframework/core/env/Environment.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      77: invokevirtual #39                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      80: aload_3
      81: ldc           #40                 // String LOG_DATEFORMAT_PATTERN
      83: aload         6
      85: ldc           #41                 // String ${logging.pattern.dateformat:${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}
      87: invokeinterface #38,  2           // InterfaceMethod org/springframework/core/env/Environment.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      92: invokevirtual #39                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      95: aload_3
      96: ldc           #42                 // String ROLLING_FILE_NAME_PATTERN
      98: aload         6
     100: ldc           #43                 // String ${logging.pattern.rolling-file-name:${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}
     102: invokeinterface #38,  2           // InterfaceMethod org/springframework/core/env/Environment.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
     107: invokevirtual #39                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
     110: new           #44                 // class org/springframework/boot/logging/logback/DefaultLogbackConfiguration
     113: dup
     114: aload_1
     115: aload_2
     116: invokespecial #45                 // Method org/springframework/boot/logging/logback/DefaultLogbackConfiguration."<init>":(Lorg/springframework/boot/logging/LoggingInitializationContext;Lorg/springframework/boot/logging/LogFile;)V
     119: aload         5
     121: invokevirtual #46                 // Method org/springframework/boot/logging/logback/DefaultLogbackConfiguration.apply:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
     124: aload_3
     125: iconst_1
     126: invokevirtual #47                 // Method ch/qos/logback/classic/LoggerContext.setPackagingDataEnabled:(Z)V
     129: return

  protected void loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #48                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.loadConfiguration:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
       7: aload_0
       8: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokespecial #24                 // Method stopAndReset:(Lch/qos/logback/classic/LoggerContext;)V
      19: aload_0
      20: aload_1
      21: aload         4
      23: aload_2
      24: invokestatic  #49                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      27: invokespecial #50                 // Method configureByResourceUrl:(Lorg/springframework/boot/logging/LoggingInitializationContext;Lch/qos/logback/classic/LoggerContext;Ljava/net/URL;)V
      30: goto          64
      33: astore        5
      35: new           #52                 // class java/lang/IllegalStateException
      38: dup
      39: new           #53                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #55                 // String Could not initialize Logback logging from
      48: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: aload         5
      60: invokespecial #58                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: athrow
      64: aload         4
      66: invokevirtual #59                 // Method ch/qos/logback/classic/LoggerContext.getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      69: invokeinterface #60,  1           // InterfaceMethod ch/qos/logback/core/status/StatusManager.getCopyOfStatusList:()Ljava/util/List;
      74: astore        5
      76: new           #53                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      83: astore        6
      85: aload         5
      87: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      92: astore        7
      94: aload         7
      96: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          169
     104: aload         7
     106: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #64                 // class ch/qos/logback/core/status/Status
     114: astore        8
     116: aload         8
     118: invokeinterface #65,  1           // InterfaceMethod ch/qos/logback/core/status/Status.getLevel:()I
     123: iconst_2
     124: if_icmpne     166
     127: aload         6
     129: aload         6
     131: invokevirtual #66                 // Method java/lang/StringBuilder.length:()I
     134: ifle          149
     137: ldc           #67                 // String %n
     139: iconst_0
     140: anewarray     #68                 // class java/lang/Object
     143: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     146: goto          151
     149: ldc           #70                 // String
     151: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: pop
     155: aload         6
     157: aload         8
     159: invokevirtual #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
     162: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: pop
     166: goto          94
     169: aload         6
     171: invokevirtual #66                 // Method java/lang/StringBuilder.length:()I
     174: ifle          199
     177: new           #52                 // class java/lang/IllegalStateException
     180: dup
     181: ldc           #72                 // String Logback configuration error detected: %n%s
     183: iconst_1
     184: anewarray     #68                 // class java/lang/Object
     187: dup
     188: iconst_0
     189: aload         6
     191: aastore
     192: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     195: invokespecial #73                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: return
    Exception table:
       from    to  target type
          19    30    33   Class java/lang/Exception

  private void configureByResourceUrl(org.springframework.boot.logging.LoggingInitializationContext, ch.qos.logback.classic.LoggerContext, java.net.URL) throws ch.qos.logback.core.joran.spi.JoranException;
    Code:
       0: aload_3
       1: invokevirtual #74                 // Method java/net/URL.toString:()Ljava/lang/String;
       4: ldc           #75                 // String xml
       6: invokevirtual #76                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ifeq          37
      12: new           #77                 // class org/springframework/boot/logging/logback/SpringBootJoranConfigurator
      15: dup
      16: aload_1
      17: invokespecial #78                 // Method org/springframework/boot/logging/logback/SpringBootJoranConfigurator."<init>":(Lorg/springframework/boot/logging/LoggingInitializationContext;)V
      20: astore        4
      22: aload         4
      24: aload_2
      25: invokevirtual #79                 // Method ch/qos/logback/classic/joran/JoranConfigurator.setContext:(Lch/qos/logback/core/Context;)V
      28: aload         4
      30: aload_3
      31: invokevirtual #80                 // Method ch/qos/logback/classic/joran/JoranConfigurator.doConfigure:(Ljava/net/URL;)V
      34: goto          49
      37: new           #81                 // class ch/qos/logback/classic/util/ContextInitializer
      40: dup
      41: aload_2
      42: invokespecial #82                 // Method ch/qos/logback/classic/util/ContextInitializer."<init>":(Lch/qos/logback/classic/LoggerContext;)V
      45: aload_3
      46: invokevirtual #83                 // Method ch/qos/logback/classic/util/ContextInitializer.configureByResource:(Ljava/net/URL;)V
      49: return

  private void stopAndReset(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: invokevirtual #84                 // Method ch/qos/logback/classic/LoggerContext.stop:()V
       4: aload_1
       5: invokevirtual #85                 // Method ch/qos/logback/classic/LoggerContext.reset:()V
       8: aload_0
       9: invokespecial #86                 // Method isBridgeHandlerInstalled:()Z
      12: ifeq          20
      15: aload_0
      16: aload_1
      17: invokespecial #87                 // Method addLevelChangePropagator:(Lch/qos/logback/classic/LoggerContext;)V
      20: return

  private boolean isBridgeHandlerInstalled();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method isBridgeHandlerAvailable:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: invokestatic  #89                 // Method java/util/logging/LogManager.getLogManager:()Ljava/util/logging/LogManager;
      12: ldc           #70                 // String
      14: invokevirtual #90                 // Method java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      17: astore_1
      18: aload_1
      19: invokevirtual #91                 // Method java/util/logging/Logger.getHandlers:()[Ljava/util/logging/Handler;
      22: astore_2
      23: aload_2
      24: arraylength
      25: iconst_1
      26: if_icmpne     42
      29: aload_2
      30: iconst_0
      31: aaload
      32: instanceof    #92                 // class org/slf4j/bridge/SLF4JBridgeHandler
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  private void addLevelChangePropagator(ch.qos.logback.classic.LoggerContext);
    Code:
       0: new           #93                 // class ch/qos/logback/classic/jul/LevelChangePropagator
       3: dup
       4: invokespecial #94                 // Method ch/qos/logback/classic/jul/LevelChangePropagator."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #95                 // Method ch/qos/logback/classic/jul/LevelChangePropagator.setResetJUL:(Z)V
      13: aload_2
      14: aload_1
      15: invokevirtual #96                 // Method ch/qos/logback/classic/jul/LevelChangePropagator.setContext:(Lch/qos/logback/core/Context;)V
      18: aload_1
      19: aload_2
      20: invokevirtual #97                 // Method ch/qos/logback/classic/LoggerContext.addListener:(Lch/qos/logback/classic/spi/LoggerContextListener;)V
      23: return

  public void cleanUp();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #98                 // Method markAsUninitialized:(Lch/qos/logback/classic/LoggerContext;)V
      10: aload_0
      11: invokespecial #99                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.cleanUp:()V
      14: aload_1
      15: invokevirtual #59                 // Method ch/qos/logback/classic/LoggerContext.getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      18: invokeinterface #100,  1          // InterfaceMethod ch/qos/logback/core/status/StatusManager.clear:()V
      23: aload_1
      24: invokevirtual #10                 // Method ch/qos/logback/classic/LoggerContext.getTurboFilterList:()Lch/qos/logback/classic/spi/TurboFilterList;
      27: getstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
      30: invokevirtual #14                 // Method ch/qos/logback/classic/spi/TurboFilterList.remove:(Ljava/lang/Object;)Z
      33: pop
      34: return

  protected void reinitialize(org.springframework.boot.logging.LoggingInitializationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: invokevirtual #85                 // Method ch/qos/logback/classic/LoggerContext.reset:()V
       7: aload_0
       8: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      11: invokevirtual #59                 // Method ch/qos/logback/classic/LoggerContext.getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      14: invokeinterface #100,  1          // InterfaceMethod ch/qos/logback/core/status/StatusManager.clear:()V
      19: aload_0
      20: aload_1
      21: aload_0
      22: invokevirtual #101                // Method getSelfInitializationConfig:()Ljava/lang/String;
      25: aconst_null
      26: invokevirtual #102                // Method loadConfiguration:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      29: return

  public java.util.List<org.springframework.boot.logging.LoggerConfiguration> getLoggerConfigurations();
    Code:
       0: new           #103                // class java/util/ArrayList
       3: dup
       4: invokespecial #104                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      12: invokevirtual #105                // Method ch/qos/logback/classic/LoggerContext.getLoggerList:()Ljava/util/List;
      15: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          55
      30: aload_2
      31: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #106                // class ch/qos/logback/classic/Logger
      39: astore_3
      40: aload_1
      41: aload_0
      42: aload_3
      43: invokespecial #107                // Method getLoggerConfiguration:(Lch/qos/logback/classic/Logger;)Lorg/springframework/boot/logging/LoggerConfiguration;
      46: invokeinterface #108,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          21
      55: aload_1
      56: getstatic     #109                // Field CONFIGURATION_COMPARATOR:Ljava/util/Comparator;
      59: invokeinterface #110,  2          // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      64: aload_1
      65: areturn

  public org.springframework.boot.logging.LoggerConfiguration getLoggerConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #111                // Method getLoggerName:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_2
      14: invokevirtual #112                // Method ch/qos/logback/classic/LoggerContext.exists:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      17: invokespecial #107                // Method getLoggerConfiguration:(Lch/qos/logback/classic/Logger;)Lorg/springframework/boot/logging/LoggerConfiguration;
      20: areturn

  private java.lang.String getLoggerName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #113                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: ldc           #115                // String ROOT
       9: aload_1
      10: invokevirtual #116                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          19
      16: ldc           #115                // String ROOT
      18: areturn
      19: aload_1
      20: areturn

  private org.springframework.boot.logging.LoggerConfiguration getLoggerConfiguration(ch.qos.logback.classic.Logger);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
       9: aload_1
      10: invokevirtual #119                // Method ch/qos/logback/classic/Logger.getLevel:()Lch/qos/logback/classic/Level;
      13: invokevirtual #120                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertNativeToSystem:(Ljava/lang/Object;)Lorg/springframework/boot/logging/LogLevel;
      16: astore_2
      17: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      20: aload_1
      21: invokevirtual #121                // Method ch/qos/logback/classic/Logger.getEffectiveLevel:()Lch/qos/logback/classic/Level;
      24: invokevirtual #120                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertNativeToSystem:(Ljava/lang/Object;)Lorg/springframework/boot/logging/LogLevel;
      27: astore_3
      28: aload_0
      29: aload_1
      30: invokevirtual #122                // Method ch/qos/logback/classic/Logger.getName:()Ljava/lang/String;
      33: invokespecial #111                // Method getLoggerName:(Ljava/lang/String;)Ljava/lang/String;
      36: astore        4
      38: new           #123                // class org/springframework/boot/logging/LoggerConfiguration
      41: dup
      42: aload         4
      44: aload_2
      45: aload_3
      46: invokespecial #124                // Method org/springframework/boot/logging/LoggerConfiguration."<init>":(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;Lorg/springframework/boot/logging/LogLevel;)V
      49: areturn

  public java.util.Set<org.springframework.boot.logging.LogLevel> getSupportedLogLevels();
    Code:
       0: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
       3: invokevirtual #125                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.getSupported:()Ljava/util/Set;
       6: areturn

  public void setLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
       5: astore_3
       6: aload_3
       7: ifnull        24
      10: aload_3
      11: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      14: aload_2
      15: invokevirtual #126                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertSystemToNative:(Lorg/springframework/boot/logging/LogLevel;)Ljava/lang/Object;
      18: checkcast     #127                // class ch/qos/logback/classic/Level
      21: invokevirtual #128                // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
      24: return

  public java.lang.Runnable getShutdownHandler();
    Code:
       0: new           #129                // class org/springframework/boot/logging/logback/LogbackLoggingSystem$ShutdownHandler
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #130                // Method org/springframework/boot/logging/logback/LogbackLoggingSystem$ShutdownHandler."<init>":(Lorg/springframework/boot/logging/logback/LogbackLoggingSystem;Lorg/springframework/boot/logging/logback/LogbackLoggingSystem$1;)V
       9: areturn

  private ch.qos.logback.classic.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_2
       5: aload_2
       6: aload_0
       7: aload_1
       8: invokespecial #111                // Method getLoggerName:(Ljava/lang/String;)Ljava/lang/String;
      11: invokevirtual #131                // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      14: areturn

  private ch.qos.logback.classic.LoggerContext getLoggerContext();
    Code:
       0: invokestatic  #132                // Method org/slf4j/impl/StaticLoggerBinder.getSingleton:()Lorg/slf4j/impl/StaticLoggerBinder;
       3: invokevirtual #133                // Method org/slf4j/impl/StaticLoggerBinder.getLoggerFactory:()Lorg/slf4j/ILoggerFactory;
       6: astore_1
       7: ldc           #134                // class ch/qos/logback/classic/LoggerContext
       9: aload_1
      10: ldc           #135                // String LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation (%s loaded from %s). If you are using WebLogic you will need to add \'org.slf4j\' to prefer-application-packages in WEB-INF/weblogic.xml
      12: iconst_2
      13: anewarray     #68                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: invokevirtual #136                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: aastore
      23: dup
      24: iconst_1
      25: aload_0
      26: aload_1
      27: invokespecial #137                // Method getLocation:(Lorg/slf4j/ILoggerFactory;)Ljava/lang/Object;
      30: aastore
      31: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokestatic  #138                // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      37: aload_1
      38: checkcast     #134                // class ch/qos/logback/classic/LoggerContext
      41: areturn

  private java.lang.Object getLocation(org.slf4j.ILoggerFactory);
    Code:
       0: aload_1
       1: invokevirtual #136                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #139                // Method java/lang/Class.getProtectionDomain:()Ljava/security/ProtectionDomain;
       7: astore_2
       8: aload_2
       9: invokevirtual #140                // Method java/security/ProtectionDomain.getCodeSource:()Ljava/security/CodeSource;
      12: astore_3
      13: aload_3
      14: ifnull        22
      17: aload_3
      18: invokevirtual #141                // Method java/security/CodeSource.getLocation:()Ljava/net/URL;
      21: areturn
      22: goto          26
      25: astore_2
      26: ldc           #143                // String unknown location
      28: areturn
    Exception table:
       from    to  target type
           0    21    25   Class java/lang/SecurityException

  private boolean isAlreadyInitialized(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #117                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #144                // Method ch/qos/logback/classic/LoggerContext.getObject:(Ljava/lang/String;)Ljava/lang/Object;
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void markAsInitialized(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #117                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: new           #68                 // class java/lang/Object
       9: dup
      10: invokespecial #145                // Method java/lang/Object."<init>":()V
      13: invokevirtual #146                // Method ch/qos/logback/classic/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)V
      16: return

  private void markAsUninitialized(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #117                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #147                // Method ch/qos/logback/classic/LoggerContext.removeObject:(Ljava/lang/String;)V
       9: return

  static ch.qos.logback.classic.LoggerContext access$100(org.springframework.boot.logging.logback.LogbackLoggingSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: areturn

  static {};
    Code:
       0: new           #148                // class org/springframework/boot/logging/AbstractLoggingSystem$LogLevels
       3: dup
       4: invokespecial #149                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels."<init>":()V
       7: putstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      10: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      13: getstatic     #150                // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      16: getstatic     #151                // Field ch/qos/logback/classic/Level.TRACE:Lch/qos/logback/classic/Level;
      19: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      22: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      25: getstatic     #150                // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      28: getstatic     #153                // Field ch/qos/logback/classic/Level.ALL:Lch/qos/logback/classic/Level;
      31: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      34: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      37: getstatic     #154                // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      40: getstatic     #155                // Field ch/qos/logback/classic/Level.DEBUG:Lch/qos/logback/classic/Level;
      43: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      46: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      49: getstatic     #156                // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
      52: getstatic     #157                // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      55: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      58: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      61: getstatic     #158                // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
      64: getstatic     #159                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      67: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      70: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      73: getstatic     #160                // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
      76: getstatic     #161                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      79: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      82: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      85: getstatic     #162                // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
      88: getstatic     #161                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      91: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      94: getstatic     #118                // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      97: getstatic     #163                // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
     100: getstatic     #164                // Field ch/qos/logback/classic/Level.OFF:Lch/qos/logback/classic/Level;
     103: invokevirtual #152                // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
     106: new           #165                // class org/springframework/boot/logging/logback/LogbackLoggingSystem$1
     109: dup
     110: invokespecial #166                // Method org/springframework/boot/logging/logback/LogbackLoggingSystem$1."<init>":()V
     113: putstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
     116: return
}
