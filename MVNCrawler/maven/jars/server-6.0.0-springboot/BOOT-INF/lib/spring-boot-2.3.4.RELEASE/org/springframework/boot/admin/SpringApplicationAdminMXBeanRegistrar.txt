Compiled from "SpringApplicationAdminMXBeanRegistrar.java"
public class org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar implements org.springframework.context.ApplicationContextAware,org.springframework.context.event.GenericApplicationListener,org.springframework.context.EnvironmentAware,org.springframework.beans.factory.InitializingBean,org.springframework.beans.factory.DisposableBean {
  private static final org.apache.commons.logging.Log logger;

  private org.springframework.context.ConfigurableApplicationContext applicationContext;

  private org.springframework.core.env.Environment environment;

  private final javax.management.ObjectName objectName;

  private boolean ready;

  private boolean embeddedWebApplication;

  public org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar(java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/springframework/core/env/StandardEnvironment
       8: dup
       9: invokespecial #8                  // Method org/springframework/core/env/StandardEnvironment."<init>":()V
      12: putfield      #3                  // Field environment:Lorg/springframework/core/env/Environment;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field ready:Z
      20: aload_0
      21: iconst_0
      22: putfield      #4                  // Field embeddedWebApplication:Z
      25: aload_0
      26: new           #9                  // class javax/management/ObjectName
      29: dup
      30: aload_1
      31: invokespecial #10                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      34: putfield      #11                 // Field objectName:Ljavax/management/ObjectName;
      37: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_1
       1: instanceof    #12                 // class org/springframework/context/ConfigurableApplicationContext
       4: ldc           #13                 // String ApplicationContext does not implement ConfigurableApplicationContext
       6: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_1
      11: checkcast     #12                 // class org/springframework/context/ConfigurableApplicationContext
      14: putfield      #1                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
      17: return

  public void setEnvironment(org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field environment:Lorg/springframework/core/env/Environment;
       5: return

  public boolean supportsEventType(org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: ldc           #16                 // class org/springframework/boot/context/event/ApplicationReadyEvent
      13: aload_2
      14: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifne          29
      20: ldc           #18                 // class org/springframework/boot/web/context/WebServerInitializedEvent
      22: aload_2
      23: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public boolean supportsSourceType(java.lang.Class<?>);
    Code:
       0: iconst_1
       1: ireturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/springframework/boot/context/event/ApplicationReadyEvent
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: checkcast     #16                 // class org/springframework/boot/context/event/ApplicationReadyEvent
      12: invokevirtual #19                 // Method onApplicationReadyEvent:(Lorg/springframework/boot/context/event/ApplicationReadyEvent;)V
      15: aload_1
      16: instanceof    #18                 // class org/springframework/boot/web/context/WebServerInitializedEvent
      19: ifeq          30
      22: aload_0
      23: aload_1
      24: checkcast     #18                 // class org/springframework/boot/web/context/WebServerInitializedEvent
      27: invokevirtual #20                 // Method onWebServerInitializedEvent:(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
      30: return

  public int getOrder();
    Code:
       0: ldc           #22                 // int -2147483648
       2: ireturn

  void onApplicationReadyEvent(org.springframework.boot.context.event.ApplicationReadyEvent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
       4: aload_1
       5: invokevirtual #23                 // Method org/springframework/boot/context/event/ApplicationReadyEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       8: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          19
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field ready:Z
      19: return

  void onWebServerInitializedEvent(org.springframework.boot.web.context.WebServerInitializedEvent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
       4: aload_1
       5: invokevirtual #25                 // Method org/springframework/boot/web/context/WebServerInitializedEvent.getApplicationContext:()Lorg/springframework/boot/web/context/WebServerApplicationContext;
       8: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          19
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field embeddedWebApplication:Z
      19: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: invokestatic  #26                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
       3: astore_1
       4: aload_1
       5: new           #27                 // class org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #28                 // Method org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin."<init>":(Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar;Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$1;)V
      14: aload_0
      15: getfield      #11                 // Field objectName:Ljavax/management/ObjectName;
      18: invokeinterface #29,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      23: pop
      24: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      27: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          70
      35: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      38: new           #31                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #33                 // String Application Admin MBean registered with name \'
      47: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #11                 // Field objectName:Ljavax/management/ObjectName;
      54: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #36                 // String \'
      59: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: return

  public void destroy() throws java.lang.Exception;
    Code:
       0: invokestatic  #26                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
       3: aload_0
       4: getfield      #11                 // Field objectName:Ljavax/management/ObjectName;
       7: invokeinterface #39,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      12: return

  static boolean access$100(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ready:Z
       4: ireturn

  static boolean access$200(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #4                  // Field embeddedWebApplication:Z
       4: ireturn

  static org.springframework.core.env.Environment access$300(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #3                  // Field environment:Lorg/springframework/core/env/Environment;
       4: areturn

  static org.apache.commons.logging.Log access$400();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static org.springframework.context.ConfigurableApplicationContext access$500(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
       4: areturn

  static {};
    Code:
       0: ldc           #27                 // class org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin
       2: invokestatic  #40                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
