Compiled from "NettyWebServer.java"
public class org.springframework.boot.web.embedded.netty.NettyWebServer implements org.springframework.boot.web.server.WebServer {
  private static final int ERROR_NO_EACCES;

  private static final java.util.function.Predicate<reactor.netty.http.server.HttpServerRequest> ALWAYS;

  private static final org.apache.commons.logging.Log logger;

  private final reactor.netty.http.server.HttpServer httpServer;

  private final java.util.function.BiFunction<? super reactor.netty.http.server.HttpServerRequest, ? super reactor.netty.http.server.HttpServerResponse, ? extends org.reactivestreams.Publisher<java.lang.Void>> handler;

  private final java.time.Duration lifecycleTimeout;

  private final org.springframework.boot.web.embedded.netty.GracefulShutdown gracefulShutdown;

  private java.util.List<org.springframework.boot.web.embedded.netty.NettyRouteProvider> routeProviders;

  private volatile reactor.netty.DisposableServer disposableServer;

  public org.springframework.boot.web.embedded.netty.NettyWebServer(reactor.netty.http.server.HttpServer, org.springframework.http.server.reactive.ReactorHttpHandlerAdapter, java.time.Duration, org.springframework.boot.web.server.Shutdown);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #3                  // Field routeProviders:Ljava/util/List;
      11: aload_1
      12: ldc           #4                  // String HttpServer must not be null
      14: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: ldc           #6                  // String HandlerAdapter must not be null
      20: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_3
      25: putfield      #7                  // Field lifecycleTimeout:Ljava/time/Duration;
      28: aload_0
      29: aload_2
      30: putfield      #8                  // Field handler:Ljava/util/function/BiFunction;
      33: aload_0
      34: aload_1
      35: new           #9                  // class io/netty/channel/group/DefaultChannelGroup
      38: dup
      39: new           #10                 // class io/netty/util/concurrent/DefaultEventExecutor
      42: dup
      43: invokespecial #11                 // Method io/netty/util/concurrent/DefaultEventExecutor."<init>":()V
      46: invokespecial #12                 // Method io/netty/channel/group/DefaultChannelGroup."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      49: invokevirtual #13                 // Method reactor/netty/http/server/HttpServer.channelGroup:(Lio/netty/channel/group/ChannelGroup;)Lreactor/netty/http/server/HttpServer;
      52: putfield      #14                 // Field httpServer:Lreactor/netty/http/server/HttpServer;
      55: aload_0
      56: aload         4
      58: getstatic     #15                 // Field org/springframework/boot/web/server/Shutdown.GRACEFUL:Lorg/springframework/boot/web/server/Shutdown;
      61: if_acmpne     80
      64: new           #16                 // class org/springframework/boot/web/embedded/netty/GracefulShutdown
      67: dup
      68: aload_0
      69: invokedynamic #17,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;)Ljava/util/function/Supplier;
      74: invokespecial #18                 // Method org/springframework/boot/web/embedded/netty/GracefulShutdown."<init>":(Ljava/util/function/Supplier;)V
      77: goto          81
      80: aconst_null
      81: putfield      #19                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      84: return

  public void setRouteProviders(java.util.List<org.springframework.boot.web.embedded.netty.NettyRouteProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field routeProviders:Ljava/util/List;
       5: return

  public void start() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: ifnonnull     81
       7: aload_0
       8: aload_0
       9: invokespecial #21                 // Method startHttpServer:()Lreactor/netty/DisposableServer;
      12: putfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
      15: goto          43
      18: astore_1
      19: aload_1
      20: ldc           #23                 // class reactor/netty/ChannelBindException
      22: aload_0
      23: aload_1
      24: invokedynamic #24,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;Ljava/lang/Exception;)Ljava/util/function/Consumer;
      29: invokestatic  #25                 // Method org/springframework/boot/web/server/PortInUseException.ifCausedBy:(Ljava/lang/Exception;Ljava/lang/Class;Ljava/util/function/Consumer;)V
      32: new           #26                 // class org/springframework/boot/web/server/WebServerException
      35: dup
      36: ldc           #27                 // String Unable to start Netty
      38: aload_1
      39: invokespecial #28                 // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      46: new           #30                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #32                 // String Netty started on port(s):
      55: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #34                 // Method getPort:()I
      62: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      73: aload_0
      74: aload_0
      75: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
      78: invokespecial #38                 // Method startDaemonAwaitThread:(Lreactor/netty/DisposableServer;)V
      81: return
    Exception table:
       from    to  target type
           7    15    18   Class java/lang/Exception

  private boolean isPermissionDenied(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #39                 // class io/netty/channel/unix/Errors$NativeIoException
       4: ifeq          25
       7: aload_1
       8: checkcast     #39                 // class io/netty/channel/unix/Errors$NativeIoException
      11: invokevirtual #40                 // Method io/netty/channel/unix/Errors$NativeIoException.expectedErr:()I
      14: bipush        -13
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn
      25: goto          29
      28: astore_2
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
           0    24    28   Class java/lang/Throwable

  public void shutDownGracefully(org.springframework.boot.web.server.GracefulShutdownCallback);
    Code:
       0: aload_0
       1: getfield      #19                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
       4: ifnonnull     17
       7: aload_1
       8: getstatic     #43                 // Field org/springframework/boot/web/server/GracefulShutdownResult.IMMEDIATE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      11: invokeinterface #44,  2           // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      16: return
      17: aload_0
      18: getfield      #19                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      21: aload_1
      22: invokevirtual #45                 // Method org/springframework/boot/web/embedded/netty/GracefulShutdown.shutDownGracefully:(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V
      25: return

  private reactor.netty.DisposableServer startHttpServer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field httpServer:Lreactor/netty/http/server/HttpServer;
       4: astore_1
       5: aload_0
       6: getfield      #3                  // Field routeProviders:Ljava/util/List;
       9: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifeq          29
      17: aload_1
      18: aload_0
      19: getfield      #8                  // Field handler:Ljava/util/function/BiFunction;
      22: invokevirtual #47                 // Method reactor/netty/http/server/HttpServer.handle:(Ljava/util/function/BiFunction;)Lreactor/netty/http/server/HttpServer;
      25: astore_1
      26: goto          40
      29: aload_1
      30: aload_0
      31: invokedynamic #48,  0             // InvokeDynamic #2:accept:(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;)Ljava/util/function/Consumer;
      36: invokevirtual #49                 // Method reactor/netty/http/server/HttpServer.route:(Ljava/util/function/Consumer;)Lreactor/netty/http/server/HttpServer;
      39: astore_1
      40: aload_0
      41: getfield      #7                  // Field lifecycleTimeout:Ljava/time/Duration;
      44: ifnull        56
      47: aload_1
      48: aload_0
      49: getfield      #7                  // Field lifecycleTimeout:Ljava/time/Duration;
      52: invokevirtual #50                 // Method reactor/netty/http/server/HttpServer.bindNow:(Ljava/time/Duration;)Lreactor/netty/DisposableServer;
      55: areturn
      56: aload_1
      57: invokevirtual #51                 // Method reactor/netty/http/server/HttpServer.bindNow:()Lreactor/netty/DisposableServer;
      60: areturn

  private void applyRouteProviders(reactor.netty.http.server.HttpServerRoutes);
    Code:
       0: aload_0
       1: getfield      #3                  // Field routeProviders:Ljava/util/List;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_2
      20: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #55                 // class org/springframework/boot/web/embedded/netty/NettyRouteProvider
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #56,  2           // InterfaceMethod org/springframework/boot/web/embedded/netty/NettyRouteProvider.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #57                 // class reactor/netty/http/server/HttpServerRoutes
      39: astore_1
      40: goto          10
      43: aload_1
      44: getstatic     #58                 // Field ALWAYS:Ljava/util/function/Predicate;
      47: aload_0
      48: getfield      #8                  // Field handler:Ljava/util/function/BiFunction;
      51: invokeinterface #59,  3           // InterfaceMethod reactor/netty/http/server/HttpServerRoutes.route:(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)Lreactor/netty/http/server/HttpServerRoutes;
      56: pop
      57: return

  private void startDaemonAwaitThread(reactor.netty.DisposableServer);
    Code:
       0: new           #60                 // class org/springframework/boot/web/embedded/netty/NettyWebServer$1
       3: dup
       4: aload_0
       5: ldc           #61                 // String server
       7: aload_1
       8: invokespecial #62                 // Method org/springframework/boot/web/embedded/netty/NettyWebServer$1."<init>":(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;Ljava/lang/String;Lreactor/netty/DisposableServer;)V
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #64                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      20: invokevirtual #65                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      23: aload_2
      24: iconst_0
      25: invokevirtual #66                 // Method java/lang/Thread.setDaemon:(Z)V
      28: aload_2
      29: invokevirtual #67                 // Method java/lang/Thread.start:()V
      32: return

  public void stop() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: ifnull        62
       7: aload_0
       8: getfield      #19                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      11: ifnull        21
      14: aload_0
      15: getfield      #19                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      18: invokevirtual #68                 // Method org/springframework/boot/web/embedded/netty/GracefulShutdown.abort:()V
      21: aload_0
      22: getfield      #7                  // Field lifecycleTimeout:Ljava/time/Duration;
      25: ifnull        44
      28: aload_0
      29: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
      32: aload_0
      33: getfield      #7                  // Field lifecycleTimeout:Ljava/time/Duration;
      36: invokeinterface #69,  2           // InterfaceMethod reactor/netty/DisposableServer.disposeNow:(Ljava/time/Duration;)V
      41: goto          53
      44: aload_0
      45: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
      48: invokeinterface #70,  1           // InterfaceMethod reactor/netty/DisposableServer.disposeNow:()V
      53: goto          57
      56: astore_1
      57: aload_0
      58: aconst_null
      59: putfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
      62: return
    Exception table:
       from    to  target type
          21    53    56   Class java/lang/IllegalStateException

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: ifnull        17
       7: aload_0
       8: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
      11: invokeinterface #72,  1           // InterfaceMethod reactor/netty/DisposableServer.port:()I
      16: ireturn
      17: iconst_0
      18: ireturn

  private void lambda$start$2(java.lang.Exception, reactor.netty.ChannelBindException);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #73                 // Method reactor/netty/ChannelBindException.getCause:()Ljava/lang/Throwable;
       5: invokespecial #74                 // Method isPermissionDenied:(Ljava/lang/Throwable;)Z
       8: ifne          24
      11: new           #75                 // class org/springframework/boot/web/server/PortInUseException
      14: dup
      15: aload_2
      16: invokevirtual #76                 // Method reactor/netty/ChannelBindException.localPort:()I
      19: aload_1
      20: invokespecial #77                 // Method org/springframework/boot/web/server/PortInUseException."<init>":(ILjava/lang/Throwable;)V
      23: athrow
      24: return

  private reactor.netty.DisposableServer lambda$new$1();
    Code:
       0: aload_0
       1: getfield      #20                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: areturn

  private static boolean lambda$static$0(reactor.netty.http.server.HttpServerRequest);
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: invokedynamic #78,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
       5: putstatic     #58                 // Field ALWAYS:Ljava/util/function/Predicate;
       8: ldc           #41                 // class org/springframework/boot/web/embedded/netty/NettyWebServer
      10: invokestatic  #79                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      13: putstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      16: return
}
