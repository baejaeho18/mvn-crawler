Compiled from "DefaultLogbackConfiguration.java"
class org.springframework.boot.logging.logback.DefaultLogbackConfiguration {
  private static final java.lang.String CONSOLE_LOG_PATTERN;

  private static final java.lang.String FILE_LOG_PATTERN;

  private static final org.springframework.util.unit.DataSize MAX_FILE_SIZE;

  private static final java.lang.Integer MAX_FILE_HISTORY;

  private final org.springframework.core.env.PropertyResolver patterns;

  private final org.springframework.boot.logging.LogFile logFile;

  org.springframework.boot.logging.logback.DefaultLogbackConfiguration(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method org/springframework/boot/logging/LoggingInitializationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      10: invokespecial #3                  // Method getPatternsResolver:(Lorg/springframework/core/env/Environment;)Lorg/springframework/core/env/PropertyResolver;
      13: putfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      21: return

  private org.springframework.core.env.PropertyResolver getPatternsResolver(org.springframework.core.env.Environment);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #6                  // class org/springframework/core/env/PropertySourcesPropertyResolver
       7: dup
       8: aconst_null
       9: invokespecial #7                  // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      12: areturn
      13: aload_1
      14: instanceof    #8                  // class org/springframework/core/env/ConfigurableEnvironment
      17: ifeq          44
      20: new           #6                  // class org/springframework/core/env/PropertySourcesPropertyResolver
      23: dup
      24: aload_1
      25: checkcast     #8                  // class org/springframework/core/env/ConfigurableEnvironment
      28: invokeinterface #9,  1            // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      33: invokespecial #7                  // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      36: astore_2
      37: aload_2
      38: iconst_1
      39: invokevirtual #10                 // Method org/springframework/core/env/PropertySourcesPropertyResolver.setIgnoreUnresolvableNestedPlaceholders:(Z)V
      42: aload_2
      43: areturn
      44: aload_1
      45: areturn

  void apply(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getConfigurationLock:()Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokespecial #12                 // Method base:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      12: aload_0
      13: aload_1
      14: invokespecial #13                 // Method consoleAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)Lch/qos/logback/core/Appender;
      17: astore_3
      18: aload_0
      19: getfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      22: ifnull        62
      25: aload_0
      26: aload_1
      27: aload_0
      28: getfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      31: invokevirtual #14                 // Method org/springframework/boot/logging/LogFile.toString:()Ljava/lang/String;
      34: invokespecial #15                 // Method fileAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Lch/qos/logback/core/Appender;
      37: astore        4
      39: aload_1
      40: getstatic     #16                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      43: iconst_2
      44: anewarray     #17                 // class ch/qos/logback/core/Appender
      47: dup
      48: iconst_0
      49: aload_3
      50: aastore
      51: dup
      52: iconst_1
      53: aload         4
      55: aastore
      56: invokevirtual #18                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      59: goto          77
      62: aload_1
      63: getstatic     #16                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      66: iconst_1
      67: anewarray     #17                 // class ch/qos/logback/core/Appender
      70: dup
      71: iconst_0
      72: aload_3
      73: aastore
      74: invokevirtual #18                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      77: aload_2
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_2
      85: monitorexit
      86: aload         5
      88: athrow
      89: return
    Exception table:
       from    to  target type
           7    79    82   any
          82    86    82   any

  private void base(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: ldc           #19                 // String clr
       3: ldc           #20                 // class org/springframework/boot/logging/logback/ColorConverter
       5: invokevirtual #21                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
       8: aload_1
       9: ldc           #22                 // String wex
      11: ldc           #23                 // class org/springframework/boot/logging/logback/WhitespaceThrowableProxyConverter
      13: invokevirtual #21                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_1
      17: ldc           #24                 // String wEx
      19: ldc           #25                 // class org/springframework/boot/logging/logback/ExtendedWhitespaceThrowableProxyConverter
      21: invokevirtual #21                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      24: aload_1
      25: ldc           #26                 // String org.apache.catalina.startup.DigesterFactory
      27: getstatic     #27                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      30: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      33: aload_1
      34: ldc           #29                 // String org.apache.catalina.util.LifecycleBase
      36: getstatic     #27                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      39: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      42: aload_1
      43: ldc           #30                 // String org.apache.coyote.http11.Http11NioProtocol
      45: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      48: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      51: aload_1
      52: ldc           #32                 // String org.apache.sshd.common.util.SecurityUtils
      54: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      57: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      60: aload_1
      61: ldc           #33                 // String org.apache.tomcat.util.net.NioSelectorPool
      63: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      66: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      69: aload_1
      70: ldc           #34                 // String org.eclipse.jetty.util.component.AbstractLifeCycle
      72: getstatic     #27                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      75: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      78: aload_1
      79: ldc           #35                 // String org.hibernate.validator.internal.util.Version
      81: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      84: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      87: aload_1
      88: ldc           #36                 // String org.springframework.boot.actuate.endpoint.jmx
      90: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      93: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      96: return

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> consoleAppender(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: new           #37                 // class ch/qos/logback/core/ConsoleAppender
       3: dup
       4: invokespecial #38                 // Method ch/qos/logback/core/ConsoleAppender."<init>":()V
       7: astore_2
       8: new           #39                 // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      11: dup
      12: invokespecial #40                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      15: astore_3
      16: aload_0
      17: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      20: ldc           #41                 // String logging.pattern.console
      22: ldc           #43                 // String %clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
      24: invokeinterface #44,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: astore        4
      31: aload_3
      32: aload         4
      34: aload_1
      35: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      38: invokestatic  #46                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      41: invokevirtual #47                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      44: aload_1
      45: aload_3
      46: invokevirtual #48                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      49: aload_2
      50: aload_3
      51: invokevirtual #49                 // Method ch/qos/logback/core/ConsoleAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      54: aload_1
      55: ldc           #50                 // String CONSOLE
      57: aload_2
      58: invokevirtual #51                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      61: aload_2
      62: areturn

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> fileAppender(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #52                 // class ch/qos/logback/core/rolling/RollingFileAppender
       3: dup
       4: invokespecial #53                 // Method ch/qos/logback/core/rolling/RollingFileAppender."<init>":()V
       7: astore_3
       8: new           #39                 // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      11: dup
      12: invokespecial #40                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      15: astore        4
      17: aload_0
      18: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      21: ldc           #54                 // String logging.pattern.file
      23: ldc           #55                 // String %d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
      25: invokeinterface #44,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: astore        5
      32: aload         4
      34: aload         5
      36: aload_1
      37: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      40: invokestatic  #46                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      43: invokevirtual #47                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      46: aload_3
      47: aload         4
      49: invokevirtual #56                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      52: aload_1
      53: aload         4
      55: invokevirtual #48                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      58: aload_3
      59: aload_2
      60: invokevirtual #57                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setFile:(Ljava/lang/String;)V
      63: aload_0
      64: aload_3
      65: aload_1
      66: aload_2
      67: invokespecial #58                 // Method setRollingPolicy:(Lch/qos/logback/core/rolling/RollingFileAppender;Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)V
      70: aload_1
      71: ldc           #59                 // String FILE
      73: aload_3
      74: invokevirtual #51                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      77: aload_3
      78: areturn

  private void setRollingPolicy(ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>, org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #60                 // class ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy
       3: dup
       4: invokespecial #61                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      15: invokevirtual #62                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setContext:(Lch/qos/logback/core/Context;)V
      18: aload         4
      20: aload_0
      21: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      24: ldc           #63                 // String logging.file.clean-history-on-start
      26: ldc           #64                 // class java/lang/Boolean
      28: iconst_0
      29: invokestatic  #65                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokeinterface #66,  4           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #64                 // class java/lang/Boolean
      40: invokevirtual #67                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #68                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setCleanHistoryOnStart:(Z)V
      46: aload         4
      48: aload_0
      49: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      52: ldc           #69                 // String logging.pattern.rolling-file-name
      54: new           #70                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_3
      62: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #73                 // String .%d{yyyy-MM-dd}.%i.gz
      67: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokeinterface #44,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      78: invokevirtual #75                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setFileNamePattern:(Ljava/lang/String;)V
      81: aload_0
      82: aload         4
      84: aload_0
      85: ldc           #76                 // String logging.file.max-size
      87: getstatic     #77                 // Field MAX_FILE_SIZE:Lorg/springframework/util/unit/DataSize;
      90: invokespecial #78                 // Method getDataSize:(Ljava/lang/String;Lorg/springframework/util/unit/DataSize;)Lorg/springframework/util/unit/DataSize;
      93: invokespecial #79                 // Method setMaxFileSize:(Lch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy;Lorg/springframework/util/unit/DataSize;)V
      96: aload         4
      98: aload_0
      99: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
     102: ldc           #80                 // String logging.file.max-history
     104: ldc           #81                 // class java/lang/Integer
     106: getstatic     #82                 // Field MAX_FILE_HISTORY:Ljava/lang/Integer;
     109: invokeinterface #66,  4           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
     114: checkcast     #81                 // class java/lang/Integer
     117: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
     120: invokevirtual #84                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxHistory:(I)V
     123: aload_0
     124: ldc           #85                 // String logging.file.total-size-cap
     126: lconst_0
     127: invokestatic  #87                 // Method org/springframework/util/unit/DataSize.ofBytes:(J)Lorg/springframework/util/unit/DataSize;
     130: invokespecial #78                 // Method getDataSize:(Ljava/lang/String;Lorg/springframework/util/unit/DataSize;)Lorg/springframework/util/unit/DataSize;
     133: astore        5
     135: aload         4
     137: new           #88                 // class ch/qos/logback/core/util/FileSize
     140: dup
     141: aload         5
     143: invokevirtual #89                 // Method org/springframework/util/unit/DataSize.toBytes:()J
     146: invokespecial #90                 // Method ch/qos/logback/core/util/FileSize."<init>":(J)V
     149: invokevirtual #91                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setTotalSizeCap:(Lch/qos/logback/core/util/FileSize;)V
     152: aload_1
     153: aload         4
     155: invokevirtual #92                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setRollingPolicy:(Lch/qos/logback/core/rolling/RollingPolicy;)V
     158: aload         4
     160: aload_1
     161: invokevirtual #93                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setParent:(Lch/qos/logback/core/FileAppender;)V
     164: aload_2
     165: aload         4
     167: invokevirtual #48                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
     170: return

  private void setMaxFileSize(ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy<ch.qos.logback.classic.spi.ILoggingEvent>, org.springframework.util.unit.DataSize);
    Code:
       0: aload_1
       1: new           #88                 // class ch/qos/logback/core/util/FileSize
       4: dup
       5: aload_2
       6: invokevirtual #89                 // Method org/springframework/util/unit/DataSize.toBytes:()J
       9: invokespecial #90                 // Method ch/qos/logback/core/util/FileSize."<init>":(J)V
      12: invokevirtual #94                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxFileSize:(Lch/qos/logback/core/util/FileSize;)V
      15: goto          58
      18: astore_3
      19: ldc           #60                 // class ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy
      21: ldc           #96                 // String setMaxFileSize
      23: iconst_1
      24: anewarray     #97                 // class java/lang/Class
      27: dup
      28: iconst_0
      29: ldc           #98                 // class java/lang/String
      31: aastore
      32: invokestatic  #99                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      35: astore        4
      37: aload         4
      39: aload_1
      40: iconst_1
      41: anewarray     #100                // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_2
      47: invokevirtual #89                 // Method org/springframework/util/unit/DataSize.toBytes:()J
      50: invokestatic  #101                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      53: aastore
      54: invokestatic  #102                // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NoSuchMethodError

  private org.springframework.util.unit.DataSize getDataSize(java.lang.String, org.springframework.util.unit.DataSize);
    Code:
       0: aload_0
       1: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
       4: aload_1
       5: invokeinterface #103,  2          // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aload_2
      16: areturn
      17: aload_3
      18: invokestatic  #104                // Method org/springframework/util/unit/DataSize.parse:(Ljava/lang/CharSequence;)Lorg/springframework/util/unit/DataSize;
      21: areturn
      22: astore        4
      24: aload_3
      25: invokestatic  #106                // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      28: astore        5
      30: aload         5
      32: invokevirtual #107                // Method ch/qos/logback/core/util/FileSize.getSize:()J
      35: invokestatic  #87                 // Method org/springframework/util/unit/DataSize.ofBytes:(J)Lorg/springframework/util/unit/DataSize;
      38: areturn
    Exception table:
       from    to  target type
          17    21    22   Class java/lang/IllegalArgumentException

  static {};
    Code:
       0: ldc2_w        #108                // long 10l
       3: invokestatic  #110                // Method org/springframework/util/unit/DataSize.ofMegabytes:(J)Lorg/springframework/util/unit/DataSize;
       6: putstatic     #77                 // Field MAX_FILE_SIZE:Lorg/springframework/util/unit/DataSize;
       9: bipush        7
      11: invokestatic  #111                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: putstatic     #82                 // Field MAX_FILE_HISTORY:Ljava/lang/Integer;
      17: return
}
