Compiled from "ResourceBanner.java"
public class org.springframework.boot.ResourceBanner implements org.springframework.boot.Banner {
  private static final org.apache.commons.logging.Log logger;

  private org.springframework.core.io.Resource resource;

  public org.springframework.boot.ResourceBanner(org.springframework.core.io.Resource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Resource must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: invokeinterface #4,  1            // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      16: ldc           #5                  // String Resource must exist
      18: invokestatic  #6                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field resource:Lorg/springframework/core/io/Resource;
      26: return

  public void printBanner(org.springframework.core.env.Environment, java.lang.Class<?>, java.io.PrintStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field resource:Lorg/springframework/core/io/Resource;
       4: invokeinterface #8,  1            // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
       9: aload_1
      10: ldc           #9                  // String spring.banner.charset
      12: ldc           #10                 // class java/nio/charset/Charset
      14: getstatic     #11                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      17: invokeinterface #12,  4           // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #10                 // class java/nio/charset/Charset
      25: invokestatic  #13                 // Method org/springframework/util/StreamUtils.copyToString:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;
      28: astore        4
      30: aload_0
      31: aload_1
      32: aload_2
      33: invokevirtual #14                 // Method getPropertyResolvers:(Lorg/springframework/core/env/Environment;Ljava/lang/Class;)Ljava/util/List;
      36: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore        5
      43: aload         5
      45: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          79
      53: aload         5
      55: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #18                 // class org/springframework/core/env/PropertyResolver
      63: astore        6
      65: aload         6
      67: aload         4
      69: invokeinterface #19,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      74: astore        4
      76: goto          43
      79: aload_3
      80: aload         4
      82: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      85: goto          119
      88: astore        4
      90: getstatic     #22                 // Field logger:Lorg/apache/commons/logging/Log;
      93: ldc           #23                 // String Banner not printable: %s (%s: \'%s\')
      95: aload_0
      96: getfield      #7                  // Field resource:Lorg/springframework/core/io/Resource;
      99: aload         4
     101: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     104: aload         4
     106: invokevirtual #25                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     109: invokestatic  #26                 // Method org/springframework/core/log/LogMessage.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;
     112: aload         4
     114: invokeinterface #27,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     119: return
    Exception table:
       from    to  target type
           0    85    88   Class java/lang/Exception

  protected java.util.List<org.springframework.core.env.PropertyResolver> getPropertyResolvers(org.springframework.core.env.Environment, java.lang.Class<?>);
    Code:
       0: new           #28                 // class java/util/ArrayList
       3: dup
       4: invokespecial #29                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_3
      17: aload_0
      18: aload_2
      19: invokespecial #31                 // Method getVersionResolver:(Ljava/lang/Class;)Lorg/springframework/core/env/PropertyResolver;
      22: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_3
      29: aload_0
      30: invokespecial #32                 // Method getAnsiResolver:()Lorg/springframework/core/env/PropertyResolver;
      33: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_3
      40: aload_0
      41: aload_2
      42: invokespecial #33                 // Method getTitleResolver:(Ljava/lang/Class;)Lorg/springframework/core/env/PropertyResolver;
      45: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_3
      52: areturn

  private org.springframework.core.env.PropertyResolver getVersionResolver(java.lang.Class<?>);
    Code:
       0: new           #34                 // class org/springframework/core/env/MutablePropertySources
       3: dup
       4: invokespecial #35                 // Method org/springframework/core/env/MutablePropertySources."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #36                 // class org/springframework/core/env/MapPropertySource
      12: dup
      13: ldc           #37                 // String version
      15: aload_0
      16: aload_1
      17: invokespecial #38                 // Method getVersionsMap:(Ljava/lang/Class;)Ljava/util/Map;
      20: invokespecial #39                 // Method org/springframework/core/env/MapPropertySource."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      23: invokevirtual #40                 // Method org/springframework/core/env/MutablePropertySources.addLast:(Lorg/springframework/core/env/PropertySource;)V
      26: new           #41                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      29: dup
      30: aload_2
      31: invokespecial #42                 // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      34: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getVersionsMap(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method getApplicationVersion:(Ljava/lang/Class;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: invokevirtual #44                 // Method getBootVersion:()Ljava/lang/String;
      10: astore_3
      11: new           #45                 // class java/util/HashMap
      14: dup
      15: invokespecial #46                 // Method java/util/HashMap."<init>":()V
      18: astore        4
      20: aload         4
      22: ldc           #47                 // String application.version
      24: aload_0
      25: aload_2
      26: iconst_0
      27: invokespecial #48                 // Method getVersionString:(Ljava/lang/String;Z)Ljava/lang/String;
      30: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload         4
      38: ldc           #50                 // String spring-boot.version
      40: aload_0
      41: aload_3
      42: iconst_0
      43: invokespecial #48                 // Method getVersionString:(Ljava/lang/String;Z)Ljava/lang/String;
      46: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload         4
      54: ldc           #51                 // String application.formatted-version
      56: aload_0
      57: aload_2
      58: iconst_1
      59: invokespecial #48                 // Method getVersionString:(Ljava/lang/String;Z)Ljava/lang/String;
      62: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload         4
      70: ldc           #52                 // String spring-boot.formatted-version
      72: aload_0
      73: aload_3
      74: iconst_1
      75: invokespecial #48                 // Method getVersionString:(Ljava/lang/String;Z)Ljava/lang/String;
      78: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload         4
      86: areturn

  protected java.lang.String getApplicationVersion(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #53                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       8: goto          12
      11: aconst_null
      12: astore_2
      13: aload_2
      14: ifnull        24
      17: aload_2
      18: invokevirtual #54                 // Method java/lang/Package.getImplementationVersion:()Ljava/lang/String;
      21: goto          25
      24: aconst_null
      25: areturn

  protected java.lang.String getBootVersion();
    Code:
       0: invokestatic  #55                 // Method org/springframework/boot/SpringBootVersion.getVersion:()Ljava/lang/String;
       3: areturn

  private java.lang.String getVersionString(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #56                 // String
       6: areturn
       7: iload_2
       8: ifeq          38
      11: new           #57                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #59                 // String  (v
      20: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #61                 // String )
      29: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: goto          39
      38: aload_1
      39: areturn

  private org.springframework.core.env.PropertyResolver getAnsiResolver();
    Code:
       0: new           #34                 // class org/springframework/core/env/MutablePropertySources
       3: dup
       4: invokespecial #35                 // Method org/springframework/core/env/MutablePropertySources."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #63                 // class org/springframework/boot/ansi/AnsiPropertySource
      12: dup
      13: ldc           #64                 // String ansi
      15: iconst_1
      16: invokespecial #65                 // Method org/springframework/boot/ansi/AnsiPropertySource."<init>":(Ljava/lang/String;Z)V
      19: invokevirtual #66                 // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
      22: new           #41                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      25: dup
      26: aload_1
      27: invokespecial #42                 // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      30: areturn

  private org.springframework.core.env.PropertyResolver getTitleResolver(java.lang.Class<?>);
    Code:
       0: new           #34                 // class org/springframework/core/env/MutablePropertySources
       3: dup
       4: invokespecial #35                 // Method org/springframework/core/env/MutablePropertySources."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokevirtual #67                 // Method getApplicationTitle:(Ljava/lang/Class;)Ljava/lang/String;
      13: astore_3
      14: ldc           #68                 // String application.title
      16: aload_3
      17: ifnull        24
      20: aload_3
      21: goto          26
      24: ldc           #56                 // String
      26: invokestatic  #69                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      29: astore        4
      31: aload_2
      32: new           #36                 // class org/springframework/core/env/MapPropertySource
      35: dup
      36: ldc           #70                 // String title
      38: aload         4
      40: invokespecial #39                 // Method org/springframework/core/env/MapPropertySource."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      43: invokevirtual #66                 // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
      46: new           #41                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      49: dup
      50: aload_2
      51: invokespecial #42                 // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      54: areturn

  protected java.lang.String getApplicationTitle(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #53                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       8: goto          12
      11: aconst_null
      12: astore_2
      13: aload_2
      14: ifnull        24
      17: aload_2
      18: invokevirtual #71                 // Method java/lang/Package.getImplementationTitle:()Ljava/lang/String;
      21: goto          25
      24: aconst_null
      25: areturn

  static {};
    Code:
       0: ldc           #72                 // class org/springframework/boot/ResourceBanner
       2: invokestatic  #73                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #22                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
