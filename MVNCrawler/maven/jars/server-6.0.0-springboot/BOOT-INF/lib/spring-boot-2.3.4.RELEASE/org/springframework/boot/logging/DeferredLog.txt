Compiled from "DeferredLog.java"
public class org.springframework.boot.logging.DeferredLog implements org.apache.commons.logging.Log {
  private volatile org.apache.commons.logging.Log destination;

  private final java.util.List<org.springframework.boot.logging.DeferredLog$Line> lines;

  public org.springframework.boot.logging.DeferredLog();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field lines:Ljava/util/List;
      15: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isFatalEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isFatalEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void debug(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void info(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void warn(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void error(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #17                 // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #17                 // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void fatal(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokespecial #13                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  private void log(org.springframework.boot.logging.LogLevel, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      12: ifnull        28
      15: aload_0
      16: getfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokestatic  #19                 // Method logTo:(Lorg/apache/commons/logging/Log;Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: goto          48
      28: aload_0
      29: getfield      #4                  // Field lines:Ljava/util/List;
      32: new           #20                 // class org/springframework/boot/logging/DeferredLog$Line
      35: dup
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokespecial #21                 // Method org/springframework/boot/logging/DeferredLog$Line."<init>":(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
      42: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload         4
      50: monitorexit
      51: goto          62
      54: astore        5
      56: aload         4
      58: monitorexit
      59: aload         5
      61: athrow
      62: return
    Exception table:
       from    to  target type
           8    51    54   any
          54    59    54   any

  public void switchTo(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokevirtual #24                 // Method switchTo:(Lorg/apache/commons/logging/Log;)V
       8: return

  public void switchTo(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokevirtual #25                 // Method replayTo:(Lorg/apache/commons/logging/Log;)V
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field destination:Lorg/apache/commons/logging/Log;
      17: aload_2
      18: monitorexit
      19: goto          27
      22: astore_3
      23: aload_2
      24: monitorexit
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any

  public void replayTo(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokevirtual #25                 // Method replayTo:(Lorg/apache/commons/logging/Log;)V
       8: return

  public void replayTo(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field lines:Ljava/util/List;
      11: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          59
      26: aload_3
      27: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #20                 // class org/springframework/boot/logging/DeferredLog$Line
      35: astore        4
      37: aload_1
      38: aload         4
      40: invokevirtual #29                 // Method org/springframework/boot/logging/DeferredLog$Line.getLevel:()Lorg/springframework/boot/logging/LogLevel;
      43: aload         4
      45: invokevirtual #30                 // Method org/springframework/boot/logging/DeferredLog$Line.getMessage:()Ljava/lang/Object;
      48: aload         4
      50: invokevirtual #31                 // Method org/springframework/boot/logging/DeferredLog$Line.getThrowable:()Ljava/lang/Throwable;
      53: invokestatic  #19                 // Method logTo:(Lorg/apache/commons/logging/Log;Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
      56: goto          17
      59: aload_0
      60: getfield      #4                  // Field lines:Ljava/util/List;
      63: invokeinterface #32,  1           // InterfaceMethod java/util/List.clear:()V
      68: aload_2
      69: monitorexit
      70: goto          80
      73: astore        5
      75: aload_2
      76: monitorexit
      77: aload         5
      79: athrow
      80: return
    Exception table:
       from    to  target type
           7    70    73   any
          73    77    73   any

  public static org.apache.commons.logging.Log replay(org.apache.commons.logging.Log, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokestatic  #33                 // Method replay:(Lorg/apache/commons/logging/Log;Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
       8: areturn

  public static org.apache.commons.logging.Log replay(org.apache.commons.logging.Log, org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: instanceof    #34                 // class org/springframework/boot/logging/DeferredLog
       4: ifeq          15
       7: aload_0
       8: checkcast     #34                 // class org/springframework/boot/logging/DeferredLog
      11: aload_1
      12: invokevirtual #25                 // Method replayTo:(Lorg/apache/commons/logging/Log;)V
      15: aload_1
      16: areturn

  private static void logTo(org.apache.commons.logging.Log, org.springframework.boot.logging.LogLevel, java.lang.Object, java.lang.Throwable);
    Code:
       0: getstatic     #35                 // Field org/springframework/boot/logging/DeferredLog$1.$SwitchMap$org$springframework$boot$logging$LogLevel:[I
       3: aload_1
       4: invokevirtual #36                 // Method org/springframework/boot/logging/LogLevel.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 6
                     1: 48
                     2: 57
                     3: 66
                     4: 75
                     5: 84
                     6: 93
               default: 101
          }
      48: aload_0
      49: aload_2
      50: aload_3
      51: invokeinterface #37,  3           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      56: return
      57: aload_0
      58: aload_2
      59: aload_3
      60: invokeinterface #38,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      65: return
      66: aload_0
      67: aload_2
      68: aload_3
      69: invokeinterface #39,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      74: return
      75: aload_0
      76: aload_2
      77: aload_3
      78: invokeinterface #40,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      83: return
      84: aload_0
      85: aload_2
      86: aload_3
      87: invokeinterface #41,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      92: return
      93: aload_0
      94: aload_2
      95: aload_3
      96: invokeinterface #42,  3           // InterfaceMethod org/apache/commons/logging/Log.fatal:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     101: return
}
