Compiled from "UndertowWebServer.java"
public class org.springframework.boot.web.embedded.undertow.UndertowWebServer implements org.springframework.boot.web.server.WebServer {
  private static final org.apache.commons.logging.Log logger;

  private final java.util.concurrent.atomic.AtomicReference<org.springframework.boot.web.server.GracefulShutdownCallback> gracefulShutdownCallback;

  private final java.lang.Object monitor;

  private final io.undertow.Undertow$Builder builder;

  private final java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory> httpHandlerFactories;

  private final boolean autoStart;

  private io.undertow.Undertow undertow;

  private volatile boolean started;

  private volatile io.undertow.server.handlers.GracefulShutdownHandler gracefulShutdown;

  private volatile java.util.List<java.io.Closeable> closeables;

  public org.springframework.boot.web.embedded.undertow.UndertowWebServer(io.undertow.Undertow$Builder, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Lio/undertow/Undertow$Builder;ZLjava/io/Closeable;)V
       7: return

  public org.springframework.boot.web.embedded.undertow.UndertowWebServer(io.undertow.Undertow$Builder, boolean, java.io.Closeable);
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$CloseableHttpHandlerFactory
       5: dup
       6: aload_3
       7: aconst_null
       8: invokespecial #3                  // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$CloseableHttpHandlerFactory."<init>":(Ljava/io/Closeable;Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$1;)V
      11: invokestatic  #4                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: iload_2
      15: invokespecial #5                  // Method "<init>":(Lio/undertow/Undertow$Builder;Ljava/lang/Iterable;Z)V
      18: return

  public org.springframework.boot.web.embedded.undertow.UndertowWebServer(io.undertow.Undertow$Builder, java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #9                  // Field gracefulShutdownCallback:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #10                 // class java/lang/Object
      19: dup
      20: invokespecial #6                  // Method java/lang/Object."<init>":()V
      23: putfield      #11                 // Field monitor:Ljava/lang/Object;
      26: aload_0
      27: iconst_0
      28: putfield      #12                 // Field started:Z
      31: aload_0
      32: aload_1
      33: putfield      #13                 // Field builder:Lio/undertow/Undertow$Builder;
      36: aload_0
      37: aload_2
      38: putfield      #14                 // Field httpHandlerFactories:Ljava/lang/Iterable;
      41: aload_0
      42: iload_3
      43: putfield      #15                 // Field autoStart:Z
      46: return

  public void start() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field started:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: getfield      #15                 // Field autoStart:Z
      21: ifne          27
      24: aload_1
      25: monitorexit
      26: return
      27: aload_0
      28: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
      31: ifnonnull     42
      34: aload_0
      35: aload_0
      36: invokespecial #17                 // Method createUndertowServer:()Lio/undertow/Undertow;
      39: putfield      #16                 // Field undertow:Lio/undertow/Undertow;
      42: aload_0
      43: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
      46: invokevirtual #18                 // Method io/undertow/Undertow.start:()V
      49: aload_0
      50: iconst_1
      51: putfield      #12                 // Field started:Z
      54: aload_0
      55: invokevirtual #19                 // Method getStartLogMessage:()Ljava/lang/String;
      58: astore_2
      59: getstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
      62: aload_2
      63: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      68: goto          100
      71: astore_2
      72: aload_2
      73: aload_0
      74: invokedynamic #23,  0             // InvokeDynamic #0:accept:(Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer;)Ljava/util/function/Consumer;
      79: invokestatic  #24                 // Method org/springframework/boot/web/server/PortInUseException.ifPortBindingException:(Ljava/lang/Exception;Ljava/util/function/Consumer;)V
      82: new           #25                 // class org/springframework/boot/web/server/WebServerException
      85: dup
      86: ldc           #26                 // String Unable to start embedded Undertow
      88: aload_2
      89: invokespecial #27                 // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
      93: astore_3
      94: aload_0
      95: invokespecial #28                 // Method stopSilently:()V
      98: aload_3
      99: athrow
     100: aload_1
     101: monitorexit
     102: goto          112
     105: astore        4
     107: aload_1
     108: monitorexit
     109: aload         4
     111: athrow
     112: return
    Exception table:
       from    to  target type
          17    24    71   Class java/lang/Exception
          27    68    71   Class java/lang/Exception
          72    94    93   any
           7    16   105   any
          17    26   105   any
          27   102   105   any
         105   109   105   any

  private void stopSilently();
    Code:
       0: aload_0
       1: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
       4: ifnull        29
       7: aload_0
       8: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
      11: invokevirtual #29                 // Method io/undertow/Undertow.stop:()V
      14: aload_0
      15: getfield      #30                 // Field closeables:Ljava/util/List;
      18: aload_0
      19: invokedynamic #31,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer;)Ljava/util/function/Consumer;
      24: invokeinterface #32,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      29: goto          33
      32: astore_1
      33: return
    Exception table:
       from    to  target type
           0    29    32   Class java/lang/Exception

  private void closeSilently(java.io.Closeable);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod java/io/Closeable.close:()V
       6: goto          10
       9: astore_2
      10: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  private io.undertow.Undertow createUndertowServer();
    Code:
       0: aload_0
       1: new           #34                 // class java/util/ArrayList
       4: dup
       5: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       8: putfield      #30                 // Field closeables:Ljava/util/List;
      11: aload_0
      12: aconst_null
      13: putfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      16: aload_0
      17: invokevirtual #37                 // Method createHttpHandler:()Lio/undertow/server/HttpHandler;
      20: astore_1
      21: aload_0
      22: getfield      #13                 // Field builder:Lio/undertow/Undertow$Builder;
      25: aload_1
      26: invokevirtual #38                 // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      29: pop
      30: aload_0
      31: getfield      #13                 // Field builder:Lio/undertow/Undertow$Builder;
      34: invokevirtual #39                 // Method io/undertow/Undertow$Builder.build:()Lio/undertow/Undertow;
      37: areturn

  protected io.undertow.server.HttpHandler createHttpHandler();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #14                 // Field httpHandlerFactories:Ljava/lang/Iterable;
       6: invokeinterface #40,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          87
      21: aload_2
      22: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #43                 // class org/springframework/boot/web/embedded/undertow/HttpHandlerFactory
      30: astore_3
      31: aload_3
      32: aload_1
      33: invokeinterface #44,  2           // InterfaceMethod org/springframework/boot/web/embedded/undertow/HttpHandlerFactory.getHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpHandler;
      38: astore_1
      39: aload_1
      40: instanceof    #45                 // class java/io/Closeable
      43: ifeq          60
      46: aload_0
      47: getfield      #30                 // Field closeables:Ljava/util/List;
      50: aload_1
      51: checkcast     #45                 // class java/io/Closeable
      54: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_1
      61: instanceof    #47                 // class io/undertow/server/handlers/GracefulShutdownHandler
      64: ifeq          84
      67: aload_0
      68: getfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      71: ldc           #48                 // String Only a single GracefulShutdownHandler can be defined
      73: invokestatic  #49                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      76: aload_0
      77: aload_1
      78: checkcast     #47                 // class io/undertow/server/handlers/GracefulShutdownHandler
      81: putfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      84: goto          12
      87: aload_1
      88: areturn

  private java.lang.String getPortsDescription();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method getActualPorts:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          21
      14: aload_1
      15: ldc           #52                 // String
      17: invokestatic  #53                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      20: areturn
      21: ldc           #54                 // String unknown
      23: areturn

  private java.util.List<org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port> getActualPorts();
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #15                 // Field autoStart:Z
      12: ifne          36
      15: aload_1
      16: new           #55                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      19: dup
      20: iconst_m1
      21: ldc           #54                 // String unknown
      23: aconst_null
      24: invokespecial #56                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port."<init>":(ILjava/lang/String;Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$1;)V
      27: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: goto          80
      36: aload_0
      37: invokespecial #57                 // Method extractChannels:()Ljava/util/List;
      40: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_2
      46: aload_2
      47: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          80
      55: aload_2
      56: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #59                 // class org/xnio/channels/BoundChannel
      64: astore_3
      65: aload_1
      66: aload_0
      67: aload_3
      68: invokespecial #60                 // Method getPortFromChannel:(Lorg/xnio/channels/BoundChannel;)Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$Port;
      71: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: goto          46
      80: goto          84
      83: astore_2
      84: aload_1
      85: areturn
    Exception table:
       from    to  target type
           8    80    83   Class java/lang/Exception

  private java.util.List<org.xnio.channels.BoundChannel> extractChannels();
    Code:
       0: ldc           #61                 // class io/undertow/Undertow
       2: ldc           #62                 // String channels
       4: invokestatic  #63                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: invokestatic  #64                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      12: aload_1
      13: aload_0
      14: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
      17: invokestatic  #65                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #66                 // class java/util/List
      23: areturn

  private org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port getPortFromChannel(org.xnio.channels.BoundChannel);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod org/xnio/channels/BoundChannel.getLocalAddress:()Ljava/net/SocketAddress;
       6: astore_2
       7: aload_2
       8: instanceof    #68                 // class java/net/InetSocketAddress
      11: ifeq          55
      14: aload_1
      15: invokevirtual #69                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: ldc           #70                 // String ssl
      20: invokestatic  #63                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      23: astore_3
      24: aload_3
      25: ifnull        33
      28: ldc           #71                 // String https
      30: goto          35
      33: ldc           #72                 // String http
      35: astore        4
      37: new           #55                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      40: dup
      41: aload_2
      42: checkcast     #68                 // class java/net/InetSocketAddress
      45: invokevirtual #73                 // Method java/net/InetSocketAddress.getPort:()I
      48: aload         4
      50: aconst_null
      51: invokespecial #56                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port."<init>":(ILjava/lang/String;Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$1;)V
      54: areturn
      55: aconst_null
      56: areturn

  private java.util.List<org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port> getConfiguredPorts();
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #74                 // Method extractListeners:()Ljava/util/List;
      12: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          66
      27: aload_2
      28: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore_3
      34: aload_0
      35: aload_3
      36: invokespecial #75                 // Method getPortFromListener:(Ljava/lang/Object;)Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$Port;
      39: astore        4
      41: aload         4
      43: invokevirtual #76                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port.getNumber:()I
      46: ifeq          58
      49: aload_1
      50: aload         4
      52: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          63
      61: astore        4
      63: goto          18
      66: aload_1
      67: areturn
    Exception table:
       from    to  target type
          34    58    61   Class java/lang/Exception

  private java.util.List<java.lang.Object> extractListeners();
    Code:
       0: ldc           #61                 // class io/undertow/Undertow
       2: ldc           #77                 // String listeners
       4: invokestatic  #63                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: invokestatic  #64                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      12: aload_1
      13: aload_0
      14: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
      17: invokestatic  #65                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #66                 // class java/util/List
      23: areturn

  private org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port getPortFromListener(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #69                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #78                 // String type
       6: invokestatic  #63                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       9: astore_2
      10: aload_2
      11: invokestatic  #64                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      14: aload_2
      15: aload_1
      16: invokestatic  #65                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      19: invokevirtual #79                 // Method java/lang/Object.toString:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: invokevirtual #69                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: ldc           #80                 // String port
      29: invokestatic  #63                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      32: astore        4
      34: aload         4
      36: invokestatic  #64                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      39: aload         4
      41: aload_1
      42: invokestatic  #65                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #81                 // class java/lang/Integer
      48: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      51: istore        5
      53: new           #55                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      56: dup
      57: iload         5
      59: aload_3
      60: aconst_null
      61: invokespecial #56                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port."<init>":(ILjava/lang/String;Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$1;)V
      64: areturn

  public void stop() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field started:Z
      11: ifne          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_0
      19: putfield      #12                 // Field started:Z
      22: aload_0
      23: getfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      26: ifnull        34
      29: aload_0
      30: iconst_0
      31: invokespecial #83                 // Method notifyGracefulCallback:(Z)V
      34: aload_0
      35: getfield      #16                 // Field undertow:Lio/undertow/Undertow;
      38: invokevirtual #29                 // Method io/undertow/Undertow.stop:()V
      41: aload_0
      42: getfield      #30                 // Field closeables:Ljava/util/List;
      45: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore_2
      51: aload_2
      52: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          79
      60: aload_2
      61: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #45                 // class java/io/Closeable
      69: astore_3
      70: aload_3
      71: invokeinterface #33,  1           // InterfaceMethod java/io/Closeable.close:()V
      76: goto          51
      79: goto          94
      82: astore_2
      83: new           #25                 // class org/springframework/boot/web/server/WebServerException
      86: dup
      87: ldc           #84                 // String Unable to stop undertow
      89: aload_2
      90: invokespecial #27                 // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: athrow
      94: aload_1
      95: monitorexit
      96: goto          106
      99: astore        4
     101: aload_1
     102: monitorexit
     103: aload         4
     105: athrow
     106: return
    Exception table:
       from    to  target type
          34    79    82   Class java/lang/Exception
           7    16    99   any
          17    96    99   any
          99   103    99   any

  public int getPort();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method getActualPorts:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: iconst_0
      18: invokeinterface #85,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #55                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      26: invokevirtual #76                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port.getNumber:()I
      29: ireturn

  public void shutDownGracefully(org.springframework.boot.web.server.GracefulShutdownCallback);
    Code:
       0: aload_0
       1: getfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
       4: ifnonnull     17
       7: aload_1
       8: getstatic     #86                 // Field org/springframework/boot/web/server/GracefulShutdownResult.IMMEDIATE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      11: invokeinterface #87,  2           // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      16: return
      17: getstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
      20: ldc           #88                 // String Commencing graceful shutdown. Waiting for active requests to complete
      22: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #9                  // Field gracefulShutdownCallback:Ljava/util/concurrent/atomic/AtomicReference;
      31: aload_1
      32: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      39: invokevirtual #90                 // Method io/undertow/server/handlers/GracefulShutdownHandler.shutdown:()V
      42: aload_0
      43: getfield      #36                 // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      46: aload_0
      47: invokedynamic #91,  0             // InvokeDynamic #2:shutdown:(Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer;)Lio/undertow/server/handlers/GracefulShutdownHandler$ShutdownListener;
      52: invokevirtual #92                 // Method io/undertow/server/handlers/GracefulShutdownHandler.addShutdownListener:(Lio/undertow/server/handlers/GracefulShutdownHandler$ShutdownListener;)V
      55: return

  private void notifyGracefulCallback(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field gracefulShutdownCallback:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #94                 // class org/springframework/boot/web/server/GracefulShutdownCallback
      11: astore_2
      12: aload_2
      13: ifnull        61
      16: iload_1
      17: ifeq          42
      20: getstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #95                 // String Graceful shutdown complete
      25: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      30: aload_2
      31: getstatic     #96                 // Field org/springframework/boot/web/server/GracefulShutdownResult.IDLE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      34: invokeinterface #87,  2           // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      39: goto          61
      42: getstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #97                 // String Graceful shutdown aborted with one or more requests still active
      47: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      52: aload_2
      53: getstatic     #98                 // Field org/springframework/boot/web/server/GracefulShutdownResult.REQUESTS_ACTIVE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      56: invokeinterface #87,  2           // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      61: return

  protected java.lang.String getStartLogMessage();
    Code:
       0: new           #99                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #101                // String Undertow started on port(s)
       9: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokespecial #103                // Method getPortsDescription:()Ljava/lang/String;
      16: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  private void lambda$shutDownGracefully$1(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #83                 // Method notifyGracefulCallback:(Z)V
       5: return

  private void lambda$start$0(java.net.BindException);
    Code:
       0: aload_0
       1: invokespecial #105                // Method getConfiguredPorts:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokespecial #50                 // Method getActualPorts:()Ljava/util/List;
      10: invokeinterface #106,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      15: pop
      16: aload_2
      17: invokeinterface #107,  1          // InterfaceMethod java/util/List.size:()I
      22: iconst_1
      23: if_icmpne     47
      26: new           #108                // class org/springframework/boot/web/server/PortInUseException
      29: dup
      30: aload_2
      31: iconst_0
      32: invokeinterface #85,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #55                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      40: invokevirtual #76                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port.getNumber:()I
      43: invokespecial #109                // Method org/springframework/boot/web/server/PortInUseException."<init>":(I)V
      46: athrow
      47: return

  static {};
    Code:
       0: ldc           #110                // class org/springframework/boot/web/embedded/undertow/UndertowWebServer
       2: invokestatic  #111                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
