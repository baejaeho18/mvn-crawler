Compiled from "DynamicRegistrationBean.java"
public abstract class org.springframework.boot.web.servlet.DynamicRegistrationBean<D extends javax.servlet.Registration$Dynamic> extends org.springframework.boot.web.servlet.RegistrationBean {
  private static final org.apache.commons.logging.Log logger;

  private java.lang.String name;

  private boolean asyncSupported;

  private java.util.Map<java.lang.String, java.lang.String> initParameters;

  public org.springframework.boot.web.servlet.DynamicRegistrationBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/web/servlet/RegistrationBean."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field asyncSupported:Z
       9: aload_0
      10: new           #3                  // class java/util/LinkedHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      17: putfield      #5                  // Field initParameters:Ljava/util/Map;
      20: return

  public void setName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #6                  // String Name must not be empty
       3: invokestatic  #7                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #8                  // Field name:Ljava/lang/String;
      11: return

  public void setAsyncSupported(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field asyncSupported:Z
       5: return

  public boolean isAsyncSupported();
    Code:
       0: aload_0
       1: getfield      #2                  // Field asyncSupported:Z
       4: ireturn

  public void setInitParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #9                  // String InitParameters must not be null
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #3                  // class java/util/LinkedHashMap
      10: dup
      11: aload_1
      12: invokespecial #11                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      15: putfield      #5                  // Field initParameters:Ljava/util/Map;
      18: return

  public java.util.Map<java.lang.String, java.lang.String> getInitParameters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field initParameters:Ljava/util/Map;
       4: areturn

  public void addInitParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #12                 // String Name must not be null
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field initParameters:Ljava/util/Map;
      10: aload_1
      11: aload_2
      12: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  protected final void register(java.lang.String, javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method addRegistration:(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/servlet/Registration$Dynamic;
       6: astore_3
       7: aload_3
       8: ifnonnull     42
      11: getstatic     #15                 // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #16                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_1
      22: invokestatic  #18                 // Method org/springframework/util/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
      25: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #20                 // String  was not registered (possibly already registered?)
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      41: return
      42: aload_0
      43: aload_3
      44: invokevirtual #23                 // Method configure:(Ljavax/servlet/Registration$Dynamic;)V
      47: return

  protected abstract D addRegistration(java.lang.String, javax.servlet.ServletContext);

  protected void configure(D);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field asyncSupported:Z
       5: invokeinterface #24,  2           // InterfaceMethod javax/servlet/Registration$Dynamic.setAsyncSupported:(Z)V
      10: aload_0
      11: getfield      #5                  // Field initParameters:Ljava/util/Map;
      14: invokeinterface #25,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      19: ifne          33
      22: aload_1
      23: aload_0
      24: getfield      #5                  // Field initParameters:Ljava/util/Map;
      27: invokeinterface #26,  2           // InterfaceMethod javax/servlet/Registration$Dynamic.setInitParameters:(Ljava/util/Map;)Ljava/util/Set;
      32: pop
      33: return

  protected final java.lang.String getOrDeduceName(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #8                  // Field name:Ljava/lang/String;
      11: goto          18
      14: aload_1
      15: invokestatic  #27                 // Method org/springframework/core/Conventions.getVariableName:(Ljava/lang/Object;)Ljava/lang/String;
      18: areturn

  static {};
    Code:
       0: ldc           #28                 // class org/springframework/boot/web/servlet/RegistrationBean
       2: invokestatic  #29                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #15                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
