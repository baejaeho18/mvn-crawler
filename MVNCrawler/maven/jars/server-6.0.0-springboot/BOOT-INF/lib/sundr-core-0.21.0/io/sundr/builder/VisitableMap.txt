Compiled from "VisitableMap.java"
public class io.sundr.builder.VisitableMap extends java.util.HashMap<java.lang.String, java.util.List<io.sundr.builder.Visitable>> implements java.lang.Iterable<io.sundr.builder.Visitable> {
  public io.sundr.builder.VisitableMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/HashMap."<init>":()V
       4: return

  public java.util.List<io.sundr.builder.Visitable> get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method containsKey:(Ljava/lang/Object;)Z
       5: ifne          24
       8: aload_0
       9: aload_1
      10: invokestatic  #3                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      13: new           #4                  // class java/util/ArrayList
      16: dup
      17: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      20: invokevirtual #6                  // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: aload_1
      26: invokespecial #7                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #8                  // class java/util/List
      32: areturn

  public java.util.List<io.sundr.builder.Visitable> aggregate();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #9                  // Method values:()Ljava/util/Collection;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          46
      27: aload_2
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #13                 // class java/util/Collection
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #14                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      42: pop
      43: goto          18
      46: aload_1
      47: areturn

  public java.util.Iterator<io.sundr.builder.Visitable> iterator();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method aggregate:()Ljava/util/List;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public void forEach(java.util.function.Consumer<? super io.sundr.builder.Visitable>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method aggregate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      10: return

  public java.util.Spliterator<io.sundr.builder.Visitable> spliterator();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method aggregate:()Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.spliterator:()Ljava/util/Spliterator;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn
}
