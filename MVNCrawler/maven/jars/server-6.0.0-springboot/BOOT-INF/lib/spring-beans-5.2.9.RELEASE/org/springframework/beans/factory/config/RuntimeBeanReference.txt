Compiled from "RuntimeBeanReference.java"
public class org.springframework.beans.factory.config.RuntimeBeanReference implements org.springframework.beans.factory.config.BeanReference {
  private final java.lang.String beanName;

  private final java.lang.Class<?> beanType;

  private final boolean toParent;

  private java.lang.Object source;

  public org.springframework.beans.factory.config.RuntimeBeanReference(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public org.springframework.beans.factory.config.RuntimeBeanReference(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String \'beanName\' must not be empty
       7: invokestatic  #4                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field beanName:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field beanType:Ljava/lang/Class;
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field toParent:Z
      25: return

  public org.springframework.beans.factory.config.RuntimeBeanReference(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #8                  // Method "<init>":(Ljava/lang/Class;Z)V
       6: return

  public org.springframework.beans.factory.config.RuntimeBeanReference(java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #9                  // String \'beanType\' must not be empty
       7: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      15: putfield      #5                  // Field beanName:Ljava/lang/String;
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field beanType:Ljava/lang/Class;
      23: aload_0
      24: iload_2
      25: putfield      #7                  // Field toParent:Z
      28: return

  public java.lang.String getBeanName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanName:Ljava/lang/String;
       4: areturn

  public java.lang.Class<?> getBeanType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field beanType:Ljava/lang/Class;
       4: areturn

  public boolean isToParent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field toParent:Z
       4: ireturn

  public void setSource(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field source:Ljava/lang/Object;
       5: return

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #12                 // Field source:Ljava/lang/Object;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class org/springframework/beans/factory/config/RuntimeBeanReference
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #13                 // class org/springframework/beans/factory/config/RuntimeBeanReference
      20: astore_2
      21: aload_0
      22: getfield      #5                  // Field beanName:Ljava/lang/String;
      25: aload_2
      26: getfield      #5                  // Field beanName:Ljava/lang/String;
      29: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          61
      35: aload_0
      36: getfield      #6                  // Field beanType:Ljava/lang/Class;
      39: aload_2
      40: getfield      #6                  // Field beanType:Ljava/lang/Class;
      43: if_acmpne     61
      46: aload_0
      47: getfield      #7                  // Field toParent:Z
      50: aload_2
      51: getfield      #7                  // Field toParent:Z
      54: if_icmpne     61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanName:Ljava/lang/String;
       4: invokevirtual #15                 // Method java/lang/String.hashCode:()I
       7: istore_1
       8: bipush        29
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #7                  // Field toParent:Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: iadd
      25: istore_1
      26: iload_1
      27: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        60
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #19                 // Method getBeanName:()Ljava/lang/String;
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        62
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
