Compiled from "Yaml.java"
public class io.kubernetes.client.util.Yaml$CustomRepresenter extends org.yaml.snakeyaml.representer.Representer {
  public io.kubernetes.client.util.Yaml$CustomRepresenter();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/yaml/snakeyaml/representer/Representer."<init>":()V
       4: aload_0
       5: getstatic     #5                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       8: invokevirtual #6                  // Method setDefaultFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      11: aload_0
      12: getfield      #7                  // Field representers:Ljava/util/Map;
      15: ldc           #8                  // class io/kubernetes/client/custom/IntOrString
      17: new           #9                  // class io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentIntOrString
      20: dup
      21: aload_0
      22: aconst_null
      23: invokespecial #10                 // Method io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentIntOrString."<init>":(Lio/kubernetes/client/util/Yaml$CustomRepresenter;Lio/kubernetes/client/util/Yaml$1;)V
      26: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: getfield      #7                  // Field representers:Ljava/util/Map;
      36: ldc           #12                 // class "[B"
      38: new           #13                 // class io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentByteArray
      41: dup
      42: aload_0
      43: aconst_null
      44: invokespecial #14                 // Method io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentByteArray."<init>":(Lio/kubernetes/client/util/Yaml$CustomRepresenter;Lio/kubernetes/client/util/Yaml$1;)V
      47: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_0
      54: getfield      #7                  // Field representers:Ljava/util/Map;
      57: ldc           #15                 // class io/kubernetes/client/custom/Quantity
      59: new           #16                 // class io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentQuantity
      62: dup
      63: aload_0
      64: aconst_null
      65: invokespecial #17                 // Method io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentQuantity."<init>":(Lio/kubernetes/client/util/Yaml$CustomRepresenter;Lio/kubernetes/client/util/Yaml$1;)V
      68: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload_0
      75: getfield      #7                  // Field representers:Ljava/util/Map;
      78: ldc           #18                 // class org/joda/time/DateTime
      80: new           #19                 // class io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentDateTime
      83: dup
      84: aload_0
      85: aconst_null
      86: invokespecial #20                 // Method io/kubernetes/client/util/Yaml$CustomRepresenter$RepresentDateTime."<init>":(Lio/kubernetes/client/util/Yaml$CustomRepresenter;Lio/kubernetes/client/util/Yaml$1;)V
      89: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: return

  private int getPropertyPosition(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_m1
       3: istore_3
       4: aload_2
       5: invokevirtual #21                 // Method java/lang/String.hashCode:()I
       8: lookupswitch  { // 5
           -2125624994: 60
            -450004177: 88
               3292052: 74
               3536827: 102
               3575610: 116
               default: 127
          }
      60: aload_2
      61: ldc           #22                 // String apiVersion
      63: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          127
      69: iconst_0
      70: istore_3
      71: goto          127
      74: aload_2
      75: ldc           #24                 // String kind
      77: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifeq          127
      83: iconst_1
      84: istore_3
      85: goto          127
      88: aload_2
      89: ldc           #25                 // String metadata
      91: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          127
      97: iconst_2
      98: istore_3
      99: goto          127
     102: aload_2
     103: ldc           #26                 // String spec
     105: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     108: ifeq          127
     111: iconst_3
     112: istore_3
     113: goto          127
     116: aload_2
     117: ldc           #27                 // String type
     119: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     122: ifeq          127
     125: iconst_4
     126: istore_3
     127: iload_3
     128: tableswitch   { // 0 to 4
                     0: 164
                     1: 166
                     2: 168
                     3: 170
                     4: 172
               default: 174
          }
     164: iconst_0
     165: ireturn
     166: iconst_1
     167: ireturn
     168: iconst_2
     169: ireturn
     170: iconst_3
     171: ireturn
     172: iconst_4
     173: ireturn
     174: ldc           #29                 // int 2147483647
     176: ireturn

  protected org.yaml.snakeyaml.nodes.MappingNode representJavaBean(java.util.Set<org.yaml.snakeyaml.introspector.Property>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #30                 // Method org/yaml/snakeyaml/representer/Representer.representJavaBean:(Ljava/util/Set;Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/MappingNode;
       6: astore_3
       7: aload_3
       8: getstatic     #31                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
      11: invokevirtual #32                 // Method org/yaml/snakeyaml/nodes/MappingNode.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      14: aload_3
      15: invokevirtual #33                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
      18: new           #34                 // class io/kubernetes/client/util/Yaml$CustomRepresenter$1
      21: dup
      22: aload_0
      23: invokespecial #35                 // Method io/kubernetes/client/util/Yaml$CustomRepresenter$1."<init>":(Lio/kubernetes/client/util/Yaml$CustomRepresenter;)V
      26: invokestatic  #36                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      29: aload_3
      30: areturn

  protected org.yaml.snakeyaml.nodes.NodeTuple representJavaBeanProperty(java.lang.Object, org.yaml.snakeyaml.introspector.Property, java.lang.Object, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_3
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokespecial #37                 // Method org/yaml/snakeyaml/representer/Representer.representJavaBeanProperty:(Ljava/lang/Object;Lorg/yaml/snakeyaml/introspector/Property;Ljava/lang/Object;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/NodeTuple;
      15: areturn

  static org.yaml.snakeyaml.nodes.Node access$400(io.kubernetes.client.util.Yaml$CustomRepresenter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       5: areturn

  static org.yaml.snakeyaml.nodes.Node access$500(io.kubernetes.client.util.Yaml$CustomRepresenter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       5: areturn

  static org.yaml.snakeyaml.nodes.Node access$600(io.kubernetes.client.util.Yaml$CustomRepresenter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       5: areturn

  static org.yaml.snakeyaml.nodes.Node access$700(io.kubernetes.client.util.Yaml$CustomRepresenter, org.yaml.snakeyaml.nodes.Tag, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2                  // Method representScalar:(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/Node;
       6: areturn

  static org.yaml.snakeyaml.nodes.Node access$800(io.kubernetes.client.util.Yaml$CustomRepresenter, org.yaml.snakeyaml.nodes.Tag, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2                  // Method representScalar:(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/Node;
       6: areturn

  static int access$900(io.kubernetes.client.util.Yaml$CustomRepresenter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method getPropertyPosition:(Ljava/lang/String;)I
       5: ireturn
}
