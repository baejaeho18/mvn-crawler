Compiled from "SSLUtils.java"
public class io.kubernetes.client.util.SSLUtils {
  public io.kubernetes.client.util.SSLUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isNotNullOrEmpty(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/String.length:()I
       8: ifle          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static javax.net.ssl.KeyManager[] keyManagers(byte[], byte[], java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException, java.security.KeyStoreException, java.security.cert.CertificateException, java.security.spec.InvalidKeySpecException, java.io.IOException;
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: ifnull        50
       7: aload_1
       8: ifnull        50
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: aload         4
      17: aload         5
      19: invokestatic  #3                  // Method createKeyStore:([B[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      22: astore        7
      24: invokestatic  #4                  // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      27: invokestatic  #5                  // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      30: astore        8
      32: aload         8
      34: aload         7
      36: aload_3
      37: invokevirtual #6                  // Method java/lang/String.toCharArray:()[C
      40: invokevirtual #7                  // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      43: aload         8
      45: invokevirtual #8                  // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      48: astore        6
      50: aload         6
      52: areturn

  public static java.security.KeyStore createKeyStore(byte[], byte[], java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.security.KeyStoreException;
    Code:
       0: new           #9                  // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method java/io/ByteArrayInputStream."<init>":([B)V
       8: astore        6
      10: aconst_null
      11: astore        7
      13: new           #9                  // class java/io/ByteArrayInputStream
      16: dup
      17: aload_1
      18: invokespecial #10                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      21: astore        8
      23: aconst_null
      24: astore        9
      26: aload         6
      28: aload         8
      30: aload_2
      31: aload_3
      32: ifnull        42
      35: aload_3
      36: invokevirtual #6                  // Method java/lang/String.toCharArray:()[C
      39: goto          43
      42: aconst_null
      43: aload         4
      45: aload         5
      47: invokestatic  #11                 // Method getKeyStorePassphrase:(Ljava/lang/String;)[C
      50: invokestatic  #12                 // Method createKeyStore:(Ljava/io/InputStream;Ljava/io/InputStream;Ljava/lang/String;[CLjava/lang/String;[C)Ljava/security/KeyStore;
      53: astore        10
      55: aload         8
      57: ifnull        90
      60: aload         9
      62: ifnull        85
      65: aload         8
      67: invokevirtual #13                 // Method java/io/InputStream.close:()V
      70: goto          90
      73: astore        11
      75: aload         9
      77: aload         11
      79: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: goto          90
      85: aload         8
      87: invokevirtual #13                 // Method java/io/InputStream.close:()V
      90: aload         6
      92: ifnull        125
      95: aload         7
      97: ifnull        120
     100: aload         6
     102: invokevirtual #13                 // Method java/io/InputStream.close:()V
     105: goto          125
     108: astore        11
     110: aload         7
     112: aload         11
     114: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     117: goto          125
     120: aload         6
     122: invokevirtual #13                 // Method java/io/InputStream.close:()V
     125: aload         10
     127: areturn
     128: astore        10
     130: aload         10
     132: astore        9
     134: aload         10
     136: athrow
     137: astore        12
     139: aload         8
     141: ifnull        174
     144: aload         9
     146: ifnull        169
     149: aload         8
     151: invokevirtual #13                 // Method java/io/InputStream.close:()V
     154: goto          174
     157: astore        13
     159: aload         9
     161: aload         13
     163: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     166: goto          174
     169: aload         8
     171: invokevirtual #13                 // Method java/io/InputStream.close:()V
     174: aload         12
     176: athrow
     177: astore        8
     179: aload         8
     181: astore        7
     183: aload         8
     185: athrow
     186: astore        14
     188: aload         6
     190: ifnull        223
     193: aload         7
     195: ifnull        218
     198: aload         6
     200: invokevirtual #13                 // Method java/io/InputStream.close:()V
     203: goto          223
     206: astore        15
     208: aload         7
     210: aload         15
     212: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     215: goto          223
     218: aload         6
     220: invokevirtual #13                 // Method java/io/InputStream.close:()V
     223: aload         14
     225: athrow
    Exception table:
       from    to  target type
          65    70    73   Class java/lang/Throwable
         100   105   108   Class java/lang/Throwable
          26    55   128   Class java/lang/Throwable
          26    55   137   any
         149   154   157   Class java/lang/Throwable
         128   139   137   any
          13    90   177   Class java/lang/Throwable
         128   177   177   Class java/lang/Throwable
          13    90   186   any
         198   203   206   Class java/lang/Throwable
         128   188   186   any

  private static java.security.PrivateKey loadKey(java.io.InputStream, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException;
    Code:
       0: aload_1
       1: ldc           #16                 // String EC
       3: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          70
       9: new           #18                 // class org/bouncycastle/jce/provider/BouncyCastleProvider
      12: dup
      13: invokespecial #19                 // Method org/bouncycastle/jce/provider/BouncyCastleProvider."<init>":()V
      16: invokestatic  #20                 // Method java/security/Security.addProvider:(Ljava/security/Provider;)I
      19: pop
      20: new           #21                 // class org/bouncycastle/openssl/PEMParser
      23: dup
      24: new           #22                 // class java/io/InputStreamReader
      27: dup
      28: aload_0
      29: invokespecial #23                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      32: invokespecial #24                 // Method org/bouncycastle/openssl/PEMParser."<init>":(Ljava/io/Reader;)V
      35: astore_2
      36: aload_2
      37: invokevirtual #25                 // Method org/bouncycastle/openssl/PEMParser.readObject:()Ljava/lang/Object;
      40: dup
      41: astore_3
      42: ifnull        70
      45: aload_3
      46: instanceof    #26                 // class org/bouncycastle/openssl/PEMKeyPair
      49: ifeq          36
      52: new           #27                 // class org/bouncycastle/openssl/jcajce/JcaPEMKeyConverter
      55: dup
      56: invokespecial #28                 // Method org/bouncycastle/openssl/jcajce/JcaPEMKeyConverter."<init>":()V
      59: aload_3
      60: checkcast     #26                 // class org/bouncycastle/openssl/PEMKeyPair
      63: invokevirtual #29                 // Method org/bouncycastle/openssl/jcajce/JcaPEMKeyConverter.getKeyPair:(Lorg/bouncycastle/openssl/PEMKeyPair;)Ljava/security/KeyPair;
      66: invokevirtual #30                 // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      69: areturn
      70: aload_0
      71: invokestatic  #31                 // Method decodePem:(Ljava/io/InputStream;)[B
      74: astore_2
      75: aload_1
      76: ldc           #32                 // String RSA
      78: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          99
      84: aload_2
      85: invokestatic  #33                 // Method decodePKCS1:([B)Ljava/security/spec/RSAPrivateCrtKeySpec;
      88: astore_3
      89: ldc           #32                 // String RSA
      91: invokestatic  #34                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      94: aload_3
      95: invokevirtual #35                 // Method java/security/KeyFactory.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;
      98: areturn
      99: new           #36                 // class java/security/spec/PKCS8EncodedKeySpec
     102: dup
     103: aload_2
     104: invokespecial #37                 // Method java/security/spec/PKCS8EncodedKeySpec."<init>":([B)V
     107: astore_3
     108: ldc           #32                 // String RSA
     110: invokestatic  #34                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
     113: aload_3
     114: invokevirtual #35                 // Method java/security/KeyFactory.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;
     117: areturn
     118: astore        4
     120: ldc           #39                 // String ECDSA
     122: invokestatic  #34                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
     125: aload_3
     126: invokevirtual #35                 // Method java/security/KeyFactory.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;
     129: areturn
     130: astore        4
     132: new           #38                 // class java/security/spec/InvalidKeySpecException
     135: dup
     136: ldc           #40                 // String Unknown type of PKCS8 Private Key, tried RSA and ECDSA
     138: invokespecial #41                 // Method java/security/spec/InvalidKeySpecException."<init>":(Ljava/lang/String;)V
     141: athrow
    Exception table:
       from    to  target type
         108   117   118   Class java/security/spec/InvalidKeySpecException
         120   129   130   Class java/security/spec/InvalidKeySpecException

  public static java.security.KeyStore createKeyStore(java.io.InputStream, java.io.InputStream, java.lang.String, char[], java.lang.String, char[]) throws java.io.IOException, java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.security.KeyStoreException;
    Code:
       0: ldc           #42                 // String X509
       2: invokestatic  #43                 // Method java/security/cert/CertificateFactory.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;
       5: astore        6
       7: aload         6
       9: aload_0
      10: invokevirtual #44                 // Method java/security/cert/CertificateFactory.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;
      13: checkcast     #45                 // class java/security/cert/X509Certificate
      16: astore        7
      18: aload_1
      19: aload_2
      20: invokestatic  #46                 // Method loadKey:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/PrivateKey;
      23: astore        8
      25: ldc           #47                 // String JKS
      27: invokestatic  #48                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      30: astore        9
      32: aload         4
      34: ifnull        64
      37: aload         4
      39: invokevirtual #2                  // Method java/lang/String.length:()I
      42: ifle          64
      45: aload         9
      47: new           #49                 // class java/io/FileInputStream
      50: dup
      51: aload         4
      53: invokespecial #50                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      56: aload         5
      58: invokevirtual #51                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      61: goto          71
      64: aload         9
      66: aload         5
      68: invokestatic  #52                 // Method loadDefaultKeyStoreFile:(Ljava/security/KeyStore;[C)V
      71: aload         7
      73: invokevirtual #53                 // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
      76: invokevirtual #54                 // Method javax/security/auth/x500/X500Principal.getName:()Ljava/lang/String;
      79: astore        10
      81: aload         9
      83: aload         10
      85: aload         8
      87: aload_3
      88: iconst_1
      89: anewarray     #45                 // class java/security/cert/X509Certificate
      92: dup
      93: iconst_0
      94: aload         7
      96: aastore
      97: invokevirtual #55                 // Method java/security/KeyStore.setKeyEntry:(Ljava/lang/String;Ljava/security/Key;[C[Ljava/security/cert/Certificate;)V
     100: aload         9
     102: areturn

  private static byte[] decodePem(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #56                 // class java/io/BufferedReader
       3: dup
       4: new           #22                 // class java/io/InputStreamReader
       7: dup
       8: aload_0
       9: invokespecial #23                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      12: invokespecial #57                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      15: astore_1
      16: aload_1
      17: invokevirtual #58                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      20: dup
      21: astore_2
      22: ifnull        56
      25: aload_2
      26: ldc           #59                 // String -----BEGIN
      28: invokevirtual #60                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      31: ifeq          16
      34: aload_1
      35: aload_2
      36: invokevirtual #61                 // Method java/lang/String.trim:()Ljava/lang/String;
      39: ldc           #62                 // String BEGIN
      41: ldc           #63                 // String END
      43: invokevirtual #64                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      46: invokestatic  #65                 // Method readBytes:(Ljava/io/BufferedReader;Ljava/lang/String;)[B
      49: astore_3
      50: aload_1
      51: invokevirtual #66                 // Method java/io/BufferedReader.close:()V
      54: aload_3
      55: areturn
      56: new           #67                 // class java/io/IOException
      59: dup
      60: ldc           #68                 // String PEM is invalid: no begin marker
      62: invokespecial #69                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: astore        4
      68: aload_1
      69: invokevirtual #66                 // Method java/io/BufferedReader.close:()V
      72: aload         4
      74: athrow
    Exception table:
       from    to  target type
          16    50    66   any
          56    68    66   any

  private static byte[] readBytes(java.io.BufferedReader, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #70                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #71                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #58                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      12: dup
      13: astore_2
      14: ifnull        46
      17: aload_2
      18: aload_1
      19: invokevirtual #72                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      22: iconst_m1
      23: if_icmpeq     34
      26: aload_3
      27: invokevirtual #73                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      30: invokestatic  #74                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:(Ljava/lang/String;)[B
      33: areturn
      34: aload_3
      35: aload_2
      36: invokevirtual #61                 // Method java/lang/String.trim:()Ljava/lang/String;
      39: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: pop
      43: goto          8
      46: new           #67                 // class java/io/IOException
      49: dup
      50: ldc           #76                 // String PEM is invalid : No end marker
      52: invokespecial #69                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      55: athrow

  public static java.security.spec.RSAPrivateCrtKeySpec decodePKCS1(byte[]) throws java.io.IOException;
    Code:
       0: new           #77                 // class io/kubernetes/client/util/SSLUtils$DerParser
       3: dup
       4: aload_0
       5: invokespecial #78                 // Method io/kubernetes/client/util/SSLUtils$DerParser."<init>":([B)V
       8: astore_1
       9: aload_1
      10: invokevirtual #79                 // Method io/kubernetes/client/util/SSLUtils$DerParser.read:()Lio/kubernetes/client/util/SSLUtils$Asn1Object;
      13: astore_2
      14: aload_2
      15: invokevirtual #80                 // Method io/kubernetes/client/util/SSLUtils$Asn1Object.validateSequence:()V
      18: new           #77                 // class io/kubernetes/client/util/SSLUtils$DerParser
      21: dup
      22: aload_2
      23: invokevirtual #81                 // Method io/kubernetes/client/util/SSLUtils$Asn1Object.getValue:()[B
      26: invokespecial #78                 // Method io/kubernetes/client/util/SSLUtils$DerParser."<init>":([B)V
      29: astore_1
      30: aload_1
      31: invokevirtual #79                 // Method io/kubernetes/client/util/SSLUtils$DerParser.read:()Lio/kubernetes/client/util/SSLUtils$Asn1Object;
      34: pop
      35: new           #82                 // class java/security/spec/RSAPrivateCrtKeySpec
      38: dup
      39: aload_1
      40: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      43: aload_1
      44: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      47: aload_1
      48: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      51: aload_1
      52: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      55: aload_1
      56: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      59: aload_1
      60: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      63: aload_1
      64: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      67: aload_1
      68: invokestatic  #83                 // Method next:(Lio/kubernetes/client/util/SSLUtils$DerParser;)Ljava/math/BigInteger;
      71: invokespecial #84                 // Method java/security/spec/RSAPrivateCrtKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      74: areturn

  private static java.math.BigInteger next(io.kubernetes.client.util.SSLUtils$DerParser) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method io/kubernetes/client/util/SSLUtils$DerParser.read:()Lio/kubernetes/client/util/SSLUtils$Asn1Object;
       4: invokevirtual #85                 // Method io/kubernetes/client/util/SSLUtils$Asn1Object.getInteger:()Ljava/math/BigInteger;
       7: areturn

  private static void loadDefaultKeyStoreFile(java.security.KeyStore, char[]) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.io.IOException;
    Code:
       0: ldc           #86                 // String javax.net.ssl.keyStore
       2: invokestatic  #87                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        36
      10: aload_2
      11: invokevirtual #2                  // Method java/lang/String.length:()I
      14: ifle          36
      17: new           #88                 // class java/io/File
      20: dup
      21: aload_2
      22: invokespecial #89                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      25: astore_3
      26: aload_0
      27: aload_3
      28: aload_1
      29: invokestatic  #90                 // Method loadDefaultStoreFile:(Ljava/security/KeyStore;Ljava/io/File;[C)Z
      32: ifeq          36
      35: return
      36: aload_0
      37: aconst_null
      38: invokevirtual #91                 // Method java/security/KeyStore.load:(Ljava/security/KeyStore$LoadStoreParameter;)V
      41: return

  private static boolean loadDefaultStoreFile(java.security.KeyStore, java.io.File, char[]) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method java/io/File.exists:()Z
       4: ifeq          124
       7: aload_1
       8: invokevirtual #93                 // Method java/io/File.isFile:()Z
      11: ifeq          124
      14: aload_1
      15: invokevirtual #94                 // Method java/io/File.length:()J
      18: lconst_0
      19: lcmp
      20: ifle          124
      23: new           #49                 // class java/io/FileInputStream
      26: dup
      27: aload_1
      28: invokespecial #95                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      31: astore_3
      32: aconst_null
      33: astore        4
      35: aload_0
      36: aload_3
      37: aload_2
      38: invokevirtual #51                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      41: aload_3
      42: ifnull        122
      45: aload         4
      47: ifnull        69
      50: aload_3
      51: invokevirtual #96                 // Method java/io/FileInputStream.close:()V
      54: goto          122
      57: astore        5
      59: aload         4
      61: aload         5
      63: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: goto          122
      69: aload_3
      70: invokevirtual #96                 // Method java/io/FileInputStream.close:()V
      73: goto          122
      76: astore        5
      78: aload         5
      80: astore        4
      82: aload         5
      84: athrow
      85: astore        6
      87: aload_3
      88: ifnull        119
      91: aload         4
      93: ifnull        115
      96: aload_3
      97: invokevirtual #96                 // Method java/io/FileInputStream.close:()V
     100: goto          119
     103: astore        7
     105: aload         4
     107: aload         7
     109: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     112: goto          119
     115: aload_3
     116: invokevirtual #96                 // Method java/io/FileInputStream.close:()V
     119: aload         6
     121: athrow
     122: iconst_1
     123: ireturn
     124: iconst_0
     125: ireturn
    Exception table:
       from    to  target type
          50    54    57   Class java/lang/Throwable
          35    41    76   Class java/lang/Throwable
          35    41    85   any
          96   100   103   Class java/lang/Throwable
          76    87    85   any

  private static char[] getKeyStorePassphrase(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/String.length:()I
       8: ifne          22
      11: ldc           #97                 // String javax.net.ssl.keyStorePassword
      13: ldc           #98                 // String changeit
      15: invokestatic  #99                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: invokevirtual #6                  // Method java/lang/String.toCharArray:()[C
      21: areturn
      22: aload_0
      23: invokevirtual #6                  // Method java/lang/String.toCharArray:()[C
      26: areturn

  static {};
    Code:
       0: new           #18                 // class org/bouncycastle/jce/provider/BouncyCastleProvider
       3: dup
       4: invokespecial #19                 // Method org/bouncycastle/jce/provider/BouncyCastleProvider."<init>":()V
       7: invokestatic  #20                 // Method java/security/Security.addProvider:(Ljava/security/Provider;)I
      10: pop
      11: return
}
