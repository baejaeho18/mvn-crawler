Compiled from "AbstractPatriciaTrie.java"
abstract class org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap extends java.util.AbstractMap<K, V> implements java.util.SortedMap<K, V> {
  private volatile transient java.util.Set<java.util.Map$Entry<K, V>> entrySet;

  final org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0;

  private org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap(org.apache.commons.collections4.trie.AbstractPatriciaTrie);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
       5: aload_0
       6: invokespecial #3                  // Method java/util/AbstractMap."<init>":()V
       9: return

  protected abstract java.util.Set<java.util.Map$Entry<K, V>> createEntrySet();

  protected abstract K getFromKey();

  protected abstract boolean isFromInclusive();

  protected abstract K getToKey();

  protected abstract boolean isToInclusive();

  public java.util.Comparator<? super K> comparator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
       4: invokevirtual #4                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.comparator:()Ljava/util/Comparator;
       7: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
       5: aload_1
       6: invokevirtual #5                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.castKey:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokevirtual #6                  // Method inRange:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
      21: aload_1
      22: invokevirtual #7                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.containsKey:(Ljava/lang/Object;)Z
      25: ireturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
       5: aload_1
       6: invokevirtual #5                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.castKey:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokevirtual #6                  // Method inRange:(Ljava/lang/Object;)Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
      21: aload_1
      22: invokevirtual #8                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
       5: aload_1
       6: invokevirtual #5                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.castKey:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokevirtual #6                  // Method inRange:(Ljava/lang/Object;)Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
      21: aload_1
      22: invokevirtual #9                  // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method inRange:(Ljava/lang/Object;)Z
       5: ifne          35
       8: new           #10                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #11                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #13                 // String Key is out of range:
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
      39: aload_1
      40: aload_2
      41: invokevirtual #18                 // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field entrySet:Ljava/util/Set;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #20                 // Method createEntrySet:()Ljava/util/Set;
      12: putfield      #19                 // Field entrySet:Ljava/util/Set;
      15: aload_0
      16: getfield      #19                 // Field entrySet:Ljava/util/Set;
      19: areturn

  public java.util.SortedMap<K, V> subMap(K, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method inRange2:(Ljava/lang/Object;)Z
       5: ifne          35
       8: new           #10                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #11                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #22                 // String FromKey is out of range:
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_2
      37: invokevirtual #21                 // Method inRange2:(Ljava/lang/Object;)Z
      40: ifne          70
      43: new           #10                 // class java/lang/IllegalArgumentException
      46: dup
      47: new           #11                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #23                 // String ToKey is out of range:
      56: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: aload_1
      72: aload_0
      73: invokevirtual #24                 // Method isFromInclusive:()Z
      76: aload_2
      77: aload_0
      78: invokevirtual #25                 // Method isToInclusive:()Z
      81: invokevirtual #26                 // Method createRangeMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;
      84: areturn

  public java.util.SortedMap<K, V> headMap(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method inRange2:(Ljava/lang/Object;)Z
       5: ifne          35
       8: new           #10                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #11                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #23                 // String ToKey is out of range:
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_0
      37: invokevirtual #27                 // Method getFromKey:()Ljava/lang/Object;
      40: aload_0
      41: invokevirtual #24                 // Method isFromInclusive:()Z
      44: aload_1
      45: aload_0
      46: invokevirtual #25                 // Method isToInclusive:()Z
      49: invokevirtual #26                 // Method createRangeMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;
      52: areturn

  public java.util.SortedMap<K, V> tailMap(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method inRange2:(Ljava/lang/Object;)Z
       5: ifne          35
       8: new           #10                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #11                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #22                 // String FromKey is out of range:
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: aload_0
      38: invokevirtual #24                 // Method isFromInclusive:()Z
      41: aload_0
      42: invokevirtual #28                 // Method getToKey:()Ljava/lang/Object;
      45: aload_0
      46: invokevirtual #25                 // Method isToInclusive:()Z
      49: invokevirtual #26                 // Method createRangeMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;
      52: areturn

  protected boolean inRange(K);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getFromKey:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokevirtual #28                 // Method getToKey:()Ljava/lang/Object;
       9: astore_3
      10: aload_2
      11: ifnull        23
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokevirtual #29                 // Method inFromRange:(Ljava/lang/Object;Z)Z
      20: ifeq          40
      23: aload_3
      24: ifnull        36
      27: aload_0
      28: aload_1
      29: iconst_0
      30: invokevirtual #30                 // Method inToRange:(Ljava/lang/Object;Z)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  protected boolean inRange2(K);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getFromKey:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokevirtual #28                 // Method getToKey:()Ljava/lang/Object;
       9: astore_3
      10: aload_2
      11: ifnull        23
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokevirtual #29                 // Method inFromRange:(Ljava/lang/Object;Z)Z
      20: ifeq          40
      23: aload_3
      24: ifnull        36
      27: aload_0
      28: aload_1
      29: iconst_1
      30: invokevirtual #30                 // Method inToRange:(Ljava/lang/Object;Z)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  protected boolean inFromRange(K, boolean);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getFromKey:()Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: invokevirtual #24                 // Method isFromInclusive:()Z
       9: istore        4
      11: aload_0
      12: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
      15: invokevirtual #31                 // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.getKeyAnalyzer:()Lorg/apache/commons/collections4/trie/KeyAnalyzer;
      18: aload_1
      19: aload_3
      20: invokevirtual #32                 // Method org/apache/commons/collections4/trie/KeyAnalyzer.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      23: istore        5
      25: iload         4
      27: ifne          34
      30: iload_2
      31: ifeq          45
      34: iload         5
      36: iflt          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: iload         5
      47: ifle          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  protected boolean inToRange(K, boolean);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getToKey:()Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: invokevirtual #25                 // Method isToInclusive:()Z
       9: istore        4
      11: aload_0
      12: getfield      #2                  // Field this$0:Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;
      15: invokevirtual #31                 // Method org/apache/commons/collections4/trie/AbstractPatriciaTrie.getKeyAnalyzer:()Lorg/apache/commons/collections4/trie/KeyAnalyzer;
      18: aload_1
      19: aload_3
      20: invokevirtual #32                 // Method org/apache/commons/collections4/trie/KeyAnalyzer.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      23: istore        5
      25: iload         4
      27: ifne          34
      30: iload_2
      31: ifeq          45
      34: iload         5
      36: ifgt          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: iload         5
      47: ifge          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  protected abstract java.util.SortedMap<K, V> createRangeMap(K, boolean, K, boolean);

  org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap(org.apache.commons.collections4.trie.AbstractPatriciaTrie, org.apache.commons.collections4.trie.AbstractPatriciaTrie$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;)V
       5: return
}
