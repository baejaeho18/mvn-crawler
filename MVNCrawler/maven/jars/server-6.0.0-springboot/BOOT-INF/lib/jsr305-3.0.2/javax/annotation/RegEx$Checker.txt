Compiled from "RegEx.java"
public class javax.annotation.RegEx$Checker implements javax.annotation.meta.TypeQualifierValidator<javax.annotation.RegEx> {
  public javax.annotation.RegEx$Checker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public javax.annotation.meta.When forConstantValue(javax.annotation.RegEx, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #2                  // class java/lang/String
       4: ifne          11
       7: getstatic     #3                  // Field javax/annotation/meta/When.NEVER:Ljavax/annotation/meta/When;
      10: areturn
      11: aload_2
      12: checkcast     #2                  // class java/lang/String
      15: invokestatic  #4                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      18: pop
      19: goto          27
      22: astore_3
      23: getstatic     #3                  // Field javax/annotation/meta/When.NEVER:Ljavax/annotation/meta/When;
      26: areturn
      27: getstatic     #6                  // Field javax/annotation/meta/When.ALWAYS:Ljavax/annotation/meta/When;
      30: areturn
    Exception table:
       from    to  target type
          11    19    22   Class java/util/regex/PatternSyntaxException

  public javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class javax/annotation/RegEx
       5: aload_2
       6: invokevirtual #8                  // Method forConstantValue:(Ljavax/annotation/RegEx;Ljava/lang/Object;)Ljavax/annotation/meta/When;
       9: areturn
}
