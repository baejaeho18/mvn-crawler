public class dk.brics.automaton.AutomatonMatcher implements java.util.regex.MatchResult {
  private final dk.brics.automaton.RunAutomaton automaton;

  private final java.lang.CharSequence chars;

  private int matchStart;

  private int matchEnd;

  dk.brics.automaton.AutomatonMatcher(java.lang.CharSequence, dk.brics.automaton.RunAutomaton);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field matchStart:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field matchEnd:I
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field chars:Ljava/lang/CharSequence;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
      24: return

  public boolean find();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getMatchStart:()I
       4: lookupswitch  { // 2
                    -2: 32
                    -1: 34
               default: 39
          }
      32: iconst_0
      33: ireturn
      34: iconst_0
      35: istore_1
      36: goto          78
      39: aload_0
      40: invokespecial #7                  // Method getMatchEnd:()I
      43: istore_1
      44: iload_1
      45: aload_0
      46: invokespecial #6                  // Method getMatchStart:()I
      49: if_icmpne     78
      52: iinc          1, 1
      55: iload_1
      56: aload_0
      57: invokespecial #8                  // Method getChars:()Ljava/lang/CharSequence;
      60: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      65: if_icmple     78
      68: aload_0
      69: bipush        -2
      71: bipush        -2
      73: invokespecial #10                 // Method setMatch:(II)V
      76: iconst_0
      77: ireturn
      78: aload_0
      79: getfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
      82: aload_0
      83: getfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
      86: invokevirtual #11                 // Method dk/brics/automaton/RunAutomaton.getInitialState:()I
      89: invokevirtual #12                 // Method dk/brics/automaton/RunAutomaton.isAccept:(I)Z
      92: ifeq          102
      95: iload_1
      96: istore_2
      97: iload_1
      98: istore_3
      99: goto          106
     102: iconst_m1
     103: istore_2
     104: iconst_m1
     105: istore_3
     106: aload_0
     107: invokespecial #8                  // Method getChars:()Ljava/lang/CharSequence;
     110: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I
     115: istore        4
     117: iload_1
     118: iload         4
     120: if_icmpge     221
     123: aload_0
     124: getfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
     127: invokevirtual #11                 // Method dk/brics/automaton/RunAutomaton.getInitialState:()I
     130: istore        5
     132: iload_1
     133: istore        6
     135: iload         6
     137: iload         4
     139: if_icmpge     202
     142: aload_0
     143: getfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
     146: iload         5
     148: aload_0
     149: invokespecial #8                  // Method getChars:()Ljava/lang/CharSequence;
     152: iload         6
     154: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     159: invokevirtual #14                 // Method dk/brics/automaton/RunAutomaton.step:(IC)I
     162: istore        7
     164: iload         7
     166: iconst_m1
     167: if_icmpne     173
     170: goto          202
     173: aload_0
     174: getfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
     177: iload         7
     179: invokevirtual #12                 // Method dk/brics/automaton/RunAutomaton.isAccept:(I)Z
     182: ifeq          192
     185: iload_1
     186: istore_2
     187: iload         6
     189: iconst_1
     190: iadd
     191: istore_3
     192: iload         7
     194: istore        5
     196: iinc          6, 1
     199: goto          135
     202: iload_2
     203: iconst_m1
     204: if_icmpeq     215
     207: aload_0
     208: iload_2
     209: iload_3
     210: invokespecial #10                 // Method setMatch:(II)V
     213: iconst_1
     214: ireturn
     215: iinc          1, 1
     218: goto          117
     221: iload_2
     222: iconst_m1
     223: if_icmpeq     234
     226: aload_0
     227: iload_2
     228: iload_3
     229: invokespecial #10                 // Method setMatch:(II)V
     232: iconst_1
     233: ireturn
     234: aload_0
     235: bipush        -2
     237: bipush        -2
     239: invokespecial #10                 // Method setMatch:(II)V
     242: iconst_0
     243: ireturn

  private void setMatch(int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmple     41
       5: new           #15                 // class java/lang/IllegalArgumentException
       8: dup
       9: new           #16                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #18                 // String Start must be less than or equal to end:
      18: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_1
      22: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #21                 // String ,
      27: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_2
      31: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: iload_1
      43: putfield      #2                  // Field matchStart:I
      46: aload_0
      47: iload_2
      48: putfield      #3                  // Field matchEnd:I
      51: return

  private int getMatchStart();
    Code:
       0: aload_0
       1: getfield      #2                  // Field matchStart:I
       4: ireturn

  private int getMatchEnd();
    Code:
       0: aload_0
       1: getfield      #3                  // Field matchEnd:I
       4: ireturn

  private java.lang.CharSequence getChars();
    Code:
       0: aload_0
       1: getfield      #4                  // Field chars:Ljava/lang/CharSequence;
       4: areturn

  public int end() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method matchGood:()V
       4: aload_0
       5: getfield      #3                  // Field matchEnd:I
       8: ireturn

  public int end(int) throws java.lang.IndexOutOfBoundsException, java.lang.IllegalStateException;
    Code:
       0: iload_1
       1: invokestatic  #25                 // Method onlyZero:(I)V
       4: aload_0
       5: invokevirtual #26                 // Method end:()I
       8: ireturn

  public java.lang.String group() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method matchGood:()V
       4: aload_0
       5: getfield      #4                  // Field chars:Ljava/lang/CharSequence;
       8: aload_0
       9: getfield      #2                  // Field matchStart:I
      12: aload_0
      13: getfield      #3                  // Field matchEnd:I
      16: invokeinterface #27,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      21: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      24: areturn

  public java.lang.String group(int) throws java.lang.IndexOutOfBoundsException, java.lang.IllegalStateException;
    Code:
       0: iload_1
       1: invokestatic  #25                 // Method onlyZero:(I)V
       4: aload_0
       5: invokevirtual #29                 // Method group:()Ljava/lang/String;
       8: areturn

  public int groupCount();
    Code:
       0: iconst_0
       1: ireturn

  public int start() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method matchGood:()V
       4: aload_0
       5: getfield      #2                  // Field matchStart:I
       8: ireturn

  public int start(int) throws java.lang.IndexOutOfBoundsException, java.lang.IllegalStateException;
    Code:
       0: iload_1
       1: invokestatic  #25                 // Method onlyZero:(I)V
       4: aload_0
       5: invokevirtual #30                 // Method start:()I
       8: ireturn

  public java.util.regex.MatchResult toMatchResult();
    Code:
       0: new           #31                 // class dk/brics/automaton/AutomatonMatcher
       3: dup
       4: aload_0
       5: getfield      #4                  // Field chars:Ljava/lang/CharSequence;
       8: aload_0
       9: getfield      #5                  // Field automaton:Ldk/brics/automaton/RunAutomaton;
      12: invokespecial #32                 // Method "<init>":(Ljava/lang/CharSequence;Ldk/brics/automaton/RunAutomaton;)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field matchStart:I
      21: putfield      #2                  // Field matchStart:I
      24: aload_1
      25: aload_0
      26: getfield      #3                  // Field matchEnd:I
      29: putfield      #3                  // Field matchEnd:I
      32: aload_1
      33: areturn

  private static void onlyZero(int) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: iload_0
       1: ifeq          14
       4: new           #33                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: ldc           #34                 // String The only group supported is 0.
      10: invokespecial #35                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  private void matchGood() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field matchStart:I
       4: iflt          14
       7: aload_0
       8: getfield      #3                  // Field matchEnd:I
      11: ifge          24
      14: new           #36                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #37                 // String There was no available match.
      20: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return
}
