Compiled from "SegmentPool.java"
final class okio.SegmentPool {
  static final long MAX_SIZE;

  static okio.Segment next;

  static long byteCount;

  private okio.SegmentPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static okio.Segment take();
    Code:
       0: ldc           #2                  // class okio/SegmentPool
       2: dup
       3: astore_0
       4: monitorenter
       5: getstatic     #3                  // Field next:Lokio/Segment;
       8: ifnull        41
      11: getstatic     #3                  // Field next:Lokio/Segment;
      14: astore_1
      15: aload_1
      16: getfield      #4                  // Field okio/Segment.next:Lokio/Segment;
      19: putstatic     #3                  // Field next:Lokio/Segment;
      22: aload_1
      23: aconst_null
      24: putfield      #4                  // Field okio/Segment.next:Lokio/Segment;
      27: getstatic     #5                  // Field byteCount:J
      30: ldc2_w        #7                  // long 8192l
      33: lsub
      34: putstatic     #5                  // Field byteCount:J
      37: aload_1
      38: aload_0
      39: monitorexit
      40: areturn
      41: aload_0
      42: monitorexit
      43: goto          51
      46: astore_2
      47: aload_0
      48: monitorexit
      49: aload_2
      50: athrow
      51: new           #6                  // class okio/Segment
      54: dup
      55: invokespecial #9                  // Method okio/Segment."<init>":()V
      58: areturn
    Exception table:
       from    to  target type
           5    40    46   any
          41    43    46   any
          46    49    46   any

  static void recycle(okio.Segment);
    Code:
       0: aload_0
       1: getfield      #4                  // Field okio/Segment.next:Lokio/Segment;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #10                 // Field okio/Segment.prev:Lokio/Segment;
      11: ifnull        22
      14: new           #11                 // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #13                 // Field okio/Segment.shared:Z
      26: ifeq          30
      29: return
      30: ldc           #2                  // class okio/SegmentPool
      32: dup
      33: astore_1
      34: monitorenter
      35: getstatic     #5                  // Field byteCount:J
      38: ldc2_w        #7                  // long 8192l
      41: ladd
      42: ldc2_w        #14                 // long 65536l
      45: lcmp
      46: ifle          52
      49: aload_1
      50: monitorexit
      51: return
      52: getstatic     #5                  // Field byteCount:J
      55: ldc2_w        #7                  // long 8192l
      58: ladd
      59: putstatic     #5                  // Field byteCount:J
      62: aload_0
      63: getstatic     #3                  // Field next:Lokio/Segment;
      66: putfield      #4                  // Field okio/Segment.next:Lokio/Segment;
      69: aload_0
      70: aload_0
      71: iconst_0
      72: dup_x1
      73: putfield      #16                 // Field okio/Segment.limit:I
      76: putfield      #17                 // Field okio/Segment.pos:I
      79: aload_0
      80: putstatic     #3                  // Field next:Lokio/Segment;
      83: aload_1
      84: monitorexit
      85: goto          93
      88: astore_2
      89: aload_1
      90: monitorexit
      91: aload_2
      92: athrow
      93: return
    Exception table:
       from    to  target type
          35    51    88   any
          52    85    88   any
          88    91    88   any
}
