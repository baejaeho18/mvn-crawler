Compiled from "SegmentedByteString.java"
final class okio.SegmentedByteString extends okio.ByteString {
  final transient byte[][] segments;

  final transient int[] directory;

  okio.SegmentedByteString(okio.Buffer, int);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method okio/ByteString."<init>":([B)V
       5: aload_1
       6: getfield      #2                  // Field okio/Buffer.size:J
       9: lconst_0
      10: iload_2
      11: i2l
      12: invokestatic  #3                  // Method okio/Util.checkOffsetAndCount:(JJJ)V
      15: iconst_0
      16: istore_3
      17: iconst_0
      18: istore        4
      20: aload_1
      21: getfield      #4                  // Field okio/Buffer.head:Lokio/Segment;
      24: astore        5
      26: iload_3
      27: iload_2
      28: if_icmpge     81
      31: aload         5
      33: getfield      #5                  // Field okio/Segment.limit:I
      36: aload         5
      38: getfield      #6                  // Field okio/Segment.pos:I
      41: if_icmpne     54
      44: new           #7                  // class java/lang/AssertionError
      47: dup
      48: ldc           #8                  // String s.limit == s.pos
      50: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      53: athrow
      54: iload_3
      55: aload         5
      57: getfield      #5                  // Field okio/Segment.limit:I
      60: aload         5
      62: getfield      #6                  // Field okio/Segment.pos:I
      65: isub
      66: iadd
      67: istore_3
      68: iinc          4, 1
      71: aload         5
      73: getfield      #10                 // Field okio/Segment.next:Lokio/Segment;
      76: astore        5
      78: goto          26
      81: aload_0
      82: iload         4
      84: anewarray     #11                 // class "[B"
      87: putfield      #12                 // Field segments:[[B
      90: aload_0
      91: iload         4
      93: iconst_2
      94: imul
      95: newarray       int
      97: putfield      #13                 // Field directory:[I
     100: iconst_0
     101: istore_3
     102: iconst_0
     103: istore        4
     105: aload_1
     106: getfield      #4                  // Field okio/Buffer.head:Lokio/Segment;
     109: astore        5
     111: iload_3
     112: iload_2
     113: if_icmpge     194
     116: aload_0
     117: getfield      #12                 // Field segments:[[B
     120: iload         4
     122: aload         5
     124: getfield      #14                 // Field okio/Segment.data:[B
     127: aastore
     128: iload_3
     129: aload         5
     131: getfield      #5                  // Field okio/Segment.limit:I
     134: aload         5
     136: getfield      #6                  // Field okio/Segment.pos:I
     139: isub
     140: iadd
     141: istore_3
     142: iload_3
     143: iload_2
     144: if_icmple     149
     147: iload_2
     148: istore_3
     149: aload_0
     150: getfield      #13                 // Field directory:[I
     153: iload         4
     155: iload_3
     156: iastore
     157: aload_0
     158: getfield      #13                 // Field directory:[I
     161: iload         4
     163: aload_0
     164: getfield      #12                 // Field segments:[[B
     167: arraylength
     168: iadd
     169: aload         5
     171: getfield      #6                  // Field okio/Segment.pos:I
     174: iastore
     175: aload         5
     177: iconst_1
     178: putfield      #15                 // Field okio/Segment.shared:Z
     181: iinc          4, 1
     184: aload         5
     186: getfield      #10                 // Field okio/Segment.next:Lokio/Segment;
     189: astore        5
     191: goto          111
     194: return

  public java.lang.String utf8();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #17                 // Method okio/ByteString.utf8:()Ljava/lang/String;
       7: areturn

  public java.lang.String string(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: aload_1
       5: invokevirtual #18                 // Method okio/ByteString.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;
       8: areturn

  public java.lang.String base64();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #19                 // Method okio/ByteString.base64:()Ljava/lang/String;
       7: areturn

  public java.lang.String hex();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #20                 // Method okio/ByteString.hex:()Ljava/lang/String;
       7: areturn

  public okio.ByteString toAsciiLowercase();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #21                 // Method okio/ByteString.toAsciiLowercase:()Lokio/ByteString;
       7: areturn

  public okio.ByteString toAsciiUppercase();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #22                 // Method okio/ByteString.toAsciiUppercase:()Lokio/ByteString;
       7: areturn

  public okio.ByteString md5();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #23                 // Method okio/ByteString.md5:()Lokio/ByteString;
       7: areturn

  public okio.ByteString sha1();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #24                 // Method okio/ByteString.sha1:()Lokio/ByteString;
       7: areturn

  public okio.ByteString sha256();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #25                 // Method okio/ByteString.sha256:()Lokio/ByteString;
       7: areturn

  public okio.ByteString hmacSha1(okio.ByteString);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: aload_1
       5: invokevirtual #26                 // Method okio/ByteString.hmacSha1:(Lokio/ByteString;)Lokio/ByteString;
       8: areturn

  public okio.ByteString hmacSha256(okio.ByteString);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: aload_1
       5: invokevirtual #27                 // Method okio/ByteString.hmacSha256:(Lokio/ByteString;)Lokio/ByteString;
       8: areturn

  public java.lang.String base64Url();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #28                 // Method okio/ByteString.base64Url:()Ljava/lang/String;
       7: areturn

  public okio.ByteString substring(int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: iload_1
       5: invokevirtual #29                 // Method okio/ByteString.substring:(I)Lokio/ByteString;
       8: areturn

  public okio.ByteString substring(int, int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: iload_1
       5: iload_2
       6: invokevirtual #30                 // Method okio/ByteString.substring:(II)Lokio/ByteString;
       9: areturn

  public byte getByte(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field directory:[I
       4: aload_0
       5: getfield      #12                 // Field segments:[[B
       8: arraylength
       9: iconst_1
      10: isub
      11: iaload
      12: i2l
      13: iload_1
      14: i2l
      15: lconst_1
      16: invokestatic  #3                  // Method okio/Util.checkOffsetAndCount:(JJJ)V
      19: aload_0
      20: iload_1
      21: invokespecial #31                 // Method segment:(I)I
      24: istore_2
      25: iload_2
      26: ifne          33
      29: iconst_0
      30: goto          41
      33: aload_0
      34: getfield      #13                 // Field directory:[I
      37: iload_2
      38: iconst_1
      39: isub
      40: iaload
      41: istore_3
      42: aload_0
      43: getfield      #13                 // Field directory:[I
      46: iload_2
      47: aload_0
      48: getfield      #12                 // Field segments:[[B
      51: arraylength
      52: iadd
      53: iaload
      54: istore        4
      56: aload_0
      57: getfield      #12                 // Field segments:[[B
      60: iload_2
      61: aaload
      62: iload_1
      63: iload_3
      64: isub
      65: iload         4
      67: iadd
      68: baload
      69: ireturn

  private int segment(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field directory:[I
       4: iconst_0
       5: aload_0
       6: getfield      #12                 // Field segments:[[B
       9: arraylength
      10: iload_1
      11: iconst_1
      12: iadd
      13: invokestatic  #32                 // Method java/util/Arrays.binarySearch:([IIII)I
      16: istore_2
      17: iload_2
      18: iflt          25
      21: iload_2
      22: goto          28
      25: iload_2
      26: iconst_m1
      27: ixor
      28: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #13                 // Field directory:[I
       4: aload_0
       5: getfield      #12                 // Field segments:[[B
       8: arraylength
       9: iconst_1
      10: isub
      11: iaload
      12: ireturn

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #13                 // Field directory:[I
       4: aload_0
       5: getfield      #12                 // Field segments:[[B
       8: arraylength
       9: iconst_1
      10: isub
      11: iaload
      12: newarray       byte
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iconst_0
      18: istore_3
      19: aload_0
      20: getfield      #12                 // Field segments:[[B
      23: arraylength
      24: istore        4
      26: iload_3
      27: iload         4
      29: if_icmpge     77
      32: aload_0
      33: getfield      #13                 // Field directory:[I
      36: iload         4
      38: iload_3
      39: iadd
      40: iaload
      41: istore        5
      43: aload_0
      44: getfield      #13                 // Field directory:[I
      47: iload_3
      48: iaload
      49: istore        6
      51: aload_0
      52: getfield      #12                 // Field segments:[[B
      55: iload_3
      56: aaload
      57: iload         5
      59: aload_1
      60: iload_2
      61: iload         6
      63: iload_2
      64: isub
      65: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: iload         6
      70: istore_2
      71: iinc          3, 1
      74: goto          26
      77: aload_1
      78: areturn

  public java.nio.ByteBuffer asByteBuffer();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method toByteArray:()[B
       4: invokestatic  #35                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       7: invokevirtual #36                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
      10: areturn

  public void write(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #37                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #38                 // String out == null
      10: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #12                 // Field segments:[[B
      22: arraylength
      23: istore        4
      25: iload_3
      26: iload         4
      28: if_icmpge     75
      31: aload_0
      32: getfield      #13                 // Field directory:[I
      35: iload         4
      37: iload_3
      38: iadd
      39: iaload
      40: istore        5
      42: aload_0
      43: getfield      #13                 // Field directory:[I
      46: iload_3
      47: iaload
      48: istore        6
      50: aload_1
      51: aload_0
      52: getfield      #12                 // Field segments:[[B
      55: iload_3
      56: aaload
      57: iload         5
      59: iload         6
      61: iload_2
      62: isub
      63: invokevirtual #40                 // Method java/io/OutputStream.write:([BII)V
      66: iload         6
      68: istore_2
      69: iinc          3, 1
      72: goto          25
      75: return

  void write(okio.Buffer);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: getfield      #12                 // Field segments:[[B
       8: arraylength
       9: istore        4
      11: iload_3
      12: iload         4
      14: if_icmpge     112
      17: aload_0
      18: getfield      #13                 // Field directory:[I
      21: iload         4
      23: iload_3
      24: iadd
      25: iaload
      26: istore        5
      28: aload_0
      29: getfield      #13                 // Field directory:[I
      32: iload_3
      33: iaload
      34: istore        6
      36: new           #41                 // class okio/Segment
      39: dup
      40: aload_0
      41: getfield      #12                 // Field segments:[[B
      44: iload_3
      45: aaload
      46: iload         5
      48: iload         5
      50: iload         6
      52: iadd
      53: iload_2
      54: isub
      55: iconst_1
      56: iconst_0
      57: invokespecial #42                 // Method okio/Segment."<init>":([BIIZZ)V
      60: astore        7
      62: aload_1
      63: getfield      #4                  // Field okio/Buffer.head:Lokio/Segment;
      66: ifnonnull     90
      69: aload_1
      70: aload         7
      72: aload         7
      74: aload         7
      76: dup_x1
      77: putfield      #43                 // Field okio/Segment.prev:Lokio/Segment;
      80: dup_x1
      81: putfield      #10                 // Field okio/Segment.next:Lokio/Segment;
      84: putfield      #4                  // Field okio/Buffer.head:Lokio/Segment;
      87: goto          103
      90: aload_1
      91: getfield      #4                  // Field okio/Buffer.head:Lokio/Segment;
      94: getfield      #43                 // Field okio/Segment.prev:Lokio/Segment;
      97: aload         7
      99: invokevirtual #44                 // Method okio/Segment.push:(Lokio/Segment;)Lokio/Segment;
     102: pop
     103: iload         6
     105: istore_2
     106: iinc          3, 1
     109: goto          11
     112: aload_1
     113: dup
     114: getfield      #2                  // Field okio/Buffer.size:J
     117: iload_2
     118: i2l
     119: ladd
     120: putfield      #2                  // Field okio/Buffer.size:J
     123: return

  public boolean rangeEquals(int, okio.ByteString, int, int);
    Code:
       0: iload_1
       1: iflt          15
       4: iload_1
       5: aload_0
       6: invokevirtual #45                 // Method size:()I
       9: iload         4
      11: isub
      12: if_icmple     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: iload_1
      19: invokespecial #31                 // Method segment:(I)I
      22: istore        5
      24: iload         4
      26: ifle          143
      29: iload         5
      31: ifne          38
      34: iconst_0
      35: goto          47
      38: aload_0
      39: getfield      #13                 // Field directory:[I
      42: iload         5
      44: iconst_1
      45: isub
      46: iaload
      47: istore        6
      49: aload_0
      50: getfield      #13                 // Field directory:[I
      53: iload         5
      55: iaload
      56: iload         6
      58: isub
      59: istore        7
      61: iload         4
      63: iload         6
      65: iload         7
      67: iadd
      68: iload_1
      69: isub
      70: invokestatic  #46                 // Method java/lang/Math.min:(II)I
      73: istore        8
      75: aload_0
      76: getfield      #13                 // Field directory:[I
      79: aload_0
      80: getfield      #12                 // Field segments:[[B
      83: arraylength
      84: iload         5
      86: iadd
      87: iaload
      88: istore        9
      90: iload_1
      91: iload         6
      93: isub
      94: iload         9
      96: iadd
      97: istore        10
      99: aload_2
     100: iload_3
     101: aload_0
     102: getfield      #12                 // Field segments:[[B
     105: iload         5
     107: aaload
     108: iload         10
     110: iload         8
     112: invokevirtual #47                 // Method okio/ByteString.rangeEquals:(I[BII)Z
     115: ifne          120
     118: iconst_0
     119: ireturn
     120: iload_1
     121: iload         8
     123: iadd
     124: istore_1
     125: iload_3
     126: iload         8
     128: iadd
     129: istore_3
     130: iload         4
     132: iload         8
     134: isub
     135: istore        4
     137: iinc          5, 1
     140: goto          24
     143: iconst_1
     144: ireturn

  public boolean rangeEquals(int, byte[], int, int);
    Code:
       0: iload_1
       1: iflt          28
       4: iload_1
       5: aload_0
       6: invokevirtual #45                 // Method size:()I
       9: iload         4
      11: isub
      12: if_icmpgt     28
      15: iload_3
      16: iflt          28
      19: iload_3
      20: aload_2
      21: arraylength
      22: iload         4
      24: isub
      25: if_icmple     30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: iload_1
      32: invokespecial #31                 // Method segment:(I)I
      35: istore        5
      37: iload         4
      39: ifle          156
      42: iload         5
      44: ifne          51
      47: iconst_0
      48: goto          60
      51: aload_0
      52: getfield      #13                 // Field directory:[I
      55: iload         5
      57: iconst_1
      58: isub
      59: iaload
      60: istore        6
      62: aload_0
      63: getfield      #13                 // Field directory:[I
      66: iload         5
      68: iaload
      69: iload         6
      71: isub
      72: istore        7
      74: iload         4
      76: iload         6
      78: iload         7
      80: iadd
      81: iload_1
      82: isub
      83: invokestatic  #46                 // Method java/lang/Math.min:(II)I
      86: istore        8
      88: aload_0
      89: getfield      #13                 // Field directory:[I
      92: aload_0
      93: getfield      #12                 // Field segments:[[B
      96: arraylength
      97: iload         5
      99: iadd
     100: iaload
     101: istore        9
     103: iload_1
     104: iload         6
     106: isub
     107: iload         9
     109: iadd
     110: istore        10
     112: aload_0
     113: getfield      #12                 // Field segments:[[B
     116: iload         5
     118: aaload
     119: iload         10
     121: aload_2
     122: iload_3
     123: iload         8
     125: invokestatic  #48                 // Method okio/Util.arrayRangeEquals:([BI[BII)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: iload_1
     134: iload         8
     136: iadd
     137: istore_1
     138: iload_3
     139: iload         8
     141: iadd
     142: istore_3
     143: iload         4
     145: iload         8
     147: isub
     148: istore        4
     150: iinc          5, 1
     153: goto          37
     156: iconst_1
     157: ireturn

  public int indexOf(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: aload_1
       5: iload_2
       6: invokevirtual #49                 // Method okio/ByteString.indexOf:([BI)I
       9: ireturn

  public int lastIndexOf(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: aload_1
       5: iload_2
       6: invokevirtual #50                 // Method okio/ByteString.lastIndexOf:([BI)I
       9: ireturn

  private okio.ByteString toByteString();
    Code:
       0: new           #51                 // class okio/ByteString
       3: dup
       4: aload_0
       5: invokevirtual #34                 // Method toByteArray:()[B
       8: invokespecial #1                  // Method okio/ByteString."<init>":([B)V
      11: areturn

  byte[] internalArray();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method toByteArray:()[B
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #51                 // class okio/ByteString
      11: ifeq          49
      14: aload_1
      15: checkcast     #51                 // class okio/ByteString
      18: invokevirtual #52                 // Method okio/ByteString.size:()I
      21: aload_0
      22: invokevirtual #45                 // Method size:()I
      25: if_icmpne     49
      28: aload_0
      29: iconst_0
      30: aload_1
      31: checkcast     #51                 // class okio/ByteString
      34: iconst_0
      35: aload_0
      36: invokevirtual #45                 // Method size:()I
      39: invokevirtual #53                 // Method rangeEquals:(ILokio/ByteString;II)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #54                 // Field hashCode:I
       4: istore_1
       5: iload_1
       6: ifeq          11
       9: iload_1
      10: ireturn
      11: iconst_1
      12: istore_1
      13: iconst_0
      14: istore_2
      15: iconst_0
      16: istore_3
      17: aload_0
      18: getfield      #12                 // Field segments:[[B
      21: arraylength
      22: istore        4
      24: iload_3
      25: iload         4
      27: if_icmpge     107
      30: aload_0
      31: getfield      #12                 // Field segments:[[B
      34: iload_3
      35: aaload
      36: astore        5
      38: aload_0
      39: getfield      #13                 // Field directory:[I
      42: iload         4
      44: iload_3
      45: iadd
      46: iaload
      47: istore        6
      49: aload_0
      50: getfield      #13                 // Field directory:[I
      53: iload_3
      54: iaload
      55: istore        7
      57: iload         7
      59: iload_2
      60: isub
      61: istore        8
      63: iload         6
      65: istore        9
      67: iload         6
      69: iload         8
      71: iadd
      72: istore        10
      74: iload         9
      76: iload         10
      78: if_icmpge     98
      81: bipush        31
      83: iload_1
      84: imul
      85: aload         5
      87: iload         9
      89: baload
      90: iadd
      91: istore_1
      92: iinc          9, 1
      95: goto          74
      98: iload         7
     100: istore_2
     101: iinc          3, 1
     104: goto          24
     107: aload_0
     108: iload_1
     109: dup_x1
     110: putfield      #54                 // Field hashCode:I
     113: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: invokevirtual #55                 // Method okio/ByteString.toString:()Ljava/lang/String;
       7: areturn

  private java.lang.Object writeReplace();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method toByteString:()Lokio/ByteString;
       4: areturn
}
