Compiled from "Buffer.java"
public final class okio.Buffer$UnsafeCursor implements java.io.Closeable {
  public okio.Buffer buffer;

  public boolean readWrite;

  private okio.Segment segment;

  public long offset;

  public byte[] data;

  public int start;

  public int end;

  public okio.Buffer$UnsafeCursor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field offset:J
      11: aload_0
      12: iconst_m1
      13: putfield      #5                  // Field start:I
      16: aload_0
      17: iconst_m1
      18: putfield      #6                  // Field end:I
      21: return

  public final int next();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:J
       4: aload_0
       5: getfield      #7                  // Field buffer:Lokio/Buffer;
       8: getfield      #8                  // Field okio/Buffer.size:J
      11: lcmp
      12: ifne          23
      15: new           #9                  // class java/lang/IllegalStateException
      18: dup
      19: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":()V
      22: athrow
      23: aload_0
      24: getfield      #4                  // Field offset:J
      27: ldc2_w        #2                  // long -1l
      30: lcmp
      31: ifne          40
      34: aload_0
      35: lconst_0
      36: invokevirtual #11                 // Method seek:(J)I
      39: ireturn
      40: aload_0
      41: aload_0
      42: getfield      #4                  // Field offset:J
      45: aload_0
      46: getfield      #6                  // Field end:I
      49: aload_0
      50: getfield      #5                  // Field start:I
      53: isub
      54: i2l
      55: ladd
      56: invokevirtual #11                 // Method seek:(J)I
      59: ireturn

  public final int seek(long);
    Code:
       0: lload_1
       1: ldc2_w        #2                  // long -1l
       4: lcmp
       5: iflt          20
       8: lload_1
       9: aload_0
      10: getfield      #7                  // Field buffer:Lokio/Buffer;
      13: getfield      #8                  // Field okio/Buffer.size:J
      16: lcmp
      17: ifle          57
      20: new           #12                 // class java/lang/ArrayIndexOutOfBoundsException
      23: dup
      24: ldc           #13                 // String offset=%s > size=%s
      26: iconst_2
      27: anewarray     #14                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: lload_1
      33: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: getfield      #7                  // Field buffer:Lokio/Buffer;
      43: getfield      #8                  // Field okio/Buffer.size:J
      46: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: aastore
      50: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      53: invokespecial #17                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: lload_1
      58: ldc2_w        #2                  // long -1l
      61: lcmp
      62: ifeq          77
      65: lload_1
      66: aload_0
      67: getfield      #7                  // Field buffer:Lokio/Buffer;
      70: getfield      #8                  // Field okio/Buffer.size:J
      73: lcmp
      74: ifne          104
      77: aload_0
      78: aconst_null
      79: putfield      #18                 // Field segment:Lokio/Segment;
      82: aload_0
      83: lload_1
      84: putfield      #4                  // Field offset:J
      87: aload_0
      88: aconst_null
      89: putfield      #19                 // Field data:[B
      92: aload_0
      93: iconst_m1
      94: putfield      #5                  // Field start:I
      97: aload_0
      98: iconst_m1
      99: putfield      #6                  // Field end:I
     102: iconst_m1
     103: ireturn
     104: lconst_0
     105: lstore_3
     106: aload_0
     107: getfield      #7                  // Field buffer:Lokio/Buffer;
     110: getfield      #8                  // Field okio/Buffer.size:J
     113: lstore        5
     115: aload_0
     116: getfield      #7                  // Field buffer:Lokio/Buffer;
     119: getfield      #20                 // Field okio/Buffer.head:Lokio/Segment;
     122: astore        7
     124: aload_0
     125: getfield      #7                  // Field buffer:Lokio/Buffer;
     128: getfield      #20                 // Field okio/Buffer.head:Lokio/Segment;
     131: astore        8
     133: aload_0
     134: getfield      #18                 // Field segment:Lokio/Segment;
     137: ifnull        189
     140: aload_0
     141: getfield      #4                  // Field offset:J
     144: aload_0
     145: getfield      #5                  // Field start:I
     148: aload_0
     149: getfield      #18                 // Field segment:Lokio/Segment;
     152: getfield      #21                 // Field okio/Segment.pos:I
     155: isub
     156: i2l
     157: lsub
     158: lstore        9
     160: lload         9
     162: lload_1
     163: lcmp
     164: ifle          180
     167: lload         9
     169: lstore        5
     171: aload_0
     172: getfield      #18                 // Field segment:Lokio/Segment;
     175: astore        8
     177: goto          189
     180: lload         9
     182: lstore_3
     183: aload_0
     184: getfield      #18                 // Field segment:Lokio/Segment;
     187: astore        7
     189: lload         5
     191: lload_1
     192: lsub
     193: lload_1
     194: lload_3
     195: lsub
     196: lcmp
     197: ifle          254
     200: aload         7
     202: astore        9
     204: lload_3
     205: lstore        10
     207: lload_1
     208: lload         10
     210: aload         9
     212: getfield      #22                 // Field okio/Segment.limit:I
     215: aload         9
     217: getfield      #21                 // Field okio/Segment.pos:I
     220: isub
     221: i2l
     222: ladd
     223: lcmp
     224: iflt          296
     227: lload         10
     229: aload         9
     231: getfield      #22                 // Field okio/Segment.limit:I
     234: aload         9
     236: getfield      #21                 // Field okio/Segment.pos:I
     239: isub
     240: i2l
     241: ladd
     242: lstore        10
     244: aload         9
     246: getfield      #23                 // Field okio/Segment.next:Lokio/Segment;
     249: astore        9
     251: goto          207
     254: aload         8
     256: astore        9
     258: lload         5
     260: lstore        10
     262: lload         10
     264: lload_1
     265: lcmp
     266: ifle          296
     269: aload         9
     271: getfield      #24                 // Field okio/Segment.prev:Lokio/Segment;
     274: astore        9
     276: lload         10
     278: aload         9
     280: getfield      #22                 // Field okio/Segment.limit:I
     283: aload         9
     285: getfield      #21                 // Field okio/Segment.pos:I
     288: isub
     289: i2l
     290: lsub
     291: lstore        10
     293: goto          262
     296: aload_0
     297: getfield      #25                 // Field readWrite:Z
     300: ifeq          357
     303: aload         9
     305: getfield      #26                 // Field okio/Segment.shared:Z
     308: ifeq          357
     311: aload         9
     313: invokevirtual #27                 // Method okio/Segment.unsharedCopy:()Lokio/Segment;
     316: astore        12
     318: aload_0
     319: getfield      #7                  // Field buffer:Lokio/Buffer;
     322: getfield      #20                 // Field okio/Buffer.head:Lokio/Segment;
     325: aload         9
     327: if_acmpne     339
     330: aload_0
     331: getfield      #7                  // Field buffer:Lokio/Buffer;
     334: aload         12
     336: putfield      #20                 // Field okio/Buffer.head:Lokio/Segment;
     339: aload         9
     341: aload         12
     343: invokevirtual #28                 // Method okio/Segment.push:(Lokio/Segment;)Lokio/Segment;
     346: astore        9
     348: aload         9
     350: getfield      #24                 // Field okio/Segment.prev:Lokio/Segment;
     353: invokevirtual #29                 // Method okio/Segment.pop:()Lokio/Segment;
     356: pop
     357: aload_0
     358: aload         9
     360: putfield      #18                 // Field segment:Lokio/Segment;
     363: aload_0
     364: lload_1
     365: putfield      #4                  // Field offset:J
     368: aload_0
     369: aload         9
     371: getfield      #30                 // Field okio/Segment.data:[B
     374: putfield      #19                 // Field data:[B
     377: aload_0
     378: aload         9
     380: getfield      #21                 // Field okio/Segment.pos:I
     383: lload_1
     384: lload         10
     386: lsub
     387: l2i
     388: iadd
     389: putfield      #5                  // Field start:I
     392: aload_0
     393: aload         9
     395: getfield      #22                 // Field okio/Segment.limit:I
     398: putfield      #6                  // Field end:I
     401: aload_0
     402: getfield      #6                  // Field end:I
     405: aload_0
     406: getfield      #5                  // Field start:I
     409: isub
     410: ireturn

  public final long resizeBuffer(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Lokio/Buffer;
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String not attached to a buffer
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #25                 // Field readWrite:Z
      21: ifne          34
      24: new           #9                  // class java/lang/IllegalStateException
      27: dup
      28: ldc           #33                 // String resizeBuffer() only permitted for read/write buffers
      30: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #7                  // Field buffer:Lokio/Buffer;
      38: getfield      #8                  // Field okio/Buffer.size:J
      41: lstore_3
      42: lload_1
      43: lload_3
      44: lcmp
      45: ifgt          203
      48: lload_1
      49: lconst_0
      50: lcmp
      51: ifge          81
      54: new           #34                 // class java/lang/IllegalArgumentException
      57: dup
      58: new           #35                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #37                 // String newSize < 0:
      67: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: lload_1
      71: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      74: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: lload_3
      82: lload_1
      83: lsub
      84: lstore        5
      86: lload         5
      88: lconst_0
      89: lcmp
      90: ifle          175
      93: aload_0
      94: getfield      #7                  // Field buffer:Lokio/Buffer;
      97: getfield      #20                 // Field okio/Buffer.head:Lokio/Segment;
     100: getfield      #24                 // Field okio/Segment.prev:Lokio/Segment;
     103: astore        7
     105: aload         7
     107: getfield      #22                 // Field okio/Segment.limit:I
     110: aload         7
     112: getfield      #21                 // Field okio/Segment.pos:I
     115: isub
     116: istore        8
     118: iload         8
     120: i2l
     121: lload         5
     123: lcmp
     124: ifgt          155
     127: aload_0
     128: getfield      #7                  // Field buffer:Lokio/Buffer;
     131: aload         7
     133: invokevirtual #29                 // Method okio/Segment.pop:()Lokio/Segment;
     136: putfield      #20                 // Field okio/Buffer.head:Lokio/Segment;
     139: aload         7
     141: invokestatic  #42                 // Method okio/SegmentPool.recycle:(Lokio/Segment;)V
     144: lload         5
     146: iload         8
     148: i2l
     149: lsub
     150: lstore        5
     152: goto          172
     155: aload         7
     157: dup
     158: getfield      #22                 // Field okio/Segment.limit:I
     161: i2l
     162: lload         5
     164: lsub
     165: l2i
     166: putfield      #22                 // Field okio/Segment.limit:I
     169: goto          175
     172: goto          86
     175: aload_0
     176: aconst_null
     177: putfield      #18                 // Field segment:Lokio/Segment;
     180: aload_0
     181: lload_1
     182: putfield      #4                  // Field offset:J
     185: aload_0
     186: aconst_null
     187: putfield      #19                 // Field data:[B
     190: aload_0
     191: iconst_m1
     192: putfield      #5                  // Field start:I
     195: aload_0
     196: iconst_m1
     197: putfield      #6                  // Field end:I
     200: goto          324
     203: lload_1
     204: lload_3
     205: lcmp
     206: ifle          324
     209: iconst_1
     210: istore        5
     212: lload_1
     213: lload_3
     214: lsub
     215: lstore        6
     217: lload         6
     219: lconst_0
     220: lcmp
     221: ifle          324
     224: aload_0
     225: getfield      #7                  // Field buffer:Lokio/Buffer;
     228: iconst_1
     229: invokevirtual #43                 // Method okio/Buffer.writableSegment:(I)Lokio/Segment;
     232: astore        8
     234: lload         6
     236: sipush        8192
     239: aload         8
     241: getfield      #22                 // Field okio/Segment.limit:I
     244: isub
     245: i2l
     246: invokestatic  #45                 // Method java/lang/Math.min:(JJ)J
     249: l2i
     250: istore        9
     252: aload         8
     254: dup
     255: getfield      #22                 // Field okio/Segment.limit:I
     258: iload         9
     260: iadd
     261: putfield      #22                 // Field okio/Segment.limit:I
     264: lload         6
     266: iload         9
     268: i2l
     269: lsub
     270: lstore        6
     272: iload         5
     274: ifeq          321
     277: aload_0
     278: aload         8
     280: putfield      #18                 // Field segment:Lokio/Segment;
     283: aload_0
     284: lload_3
     285: putfield      #4                  // Field offset:J
     288: aload_0
     289: aload         8
     291: getfield      #30                 // Field okio/Segment.data:[B
     294: putfield      #19                 // Field data:[B
     297: aload_0
     298: aload         8
     300: getfield      #22                 // Field okio/Segment.limit:I
     303: iload         9
     305: isub
     306: putfield      #5                  // Field start:I
     309: aload_0
     310: aload         8
     312: getfield      #22                 // Field okio/Segment.limit:I
     315: putfield      #6                  // Field end:I
     318: iconst_0
     319: istore        5
     321: goto          217
     324: aload_0
     325: getfield      #7                  // Field buffer:Lokio/Buffer;
     328: lload_1
     329: putfield      #8                  // Field okio/Buffer.size:J
     332: lload_3
     333: lreturn

  public final long expandBuffer(int);
    Code:
       0: iload_1
       1: ifgt          31
       4: new           #34                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #35                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #46                 // String minByteCount <= 0:
      17: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_1
      32: sipush        8192
      35: if_icmple     65
      38: new           #34                 // class java/lang/IllegalArgumentException
      41: dup
      42: new           #35                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #48                 // String minByteCount > Segment.SIZE:
      51: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_1
      55: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: getfield      #7                  // Field buffer:Lokio/Buffer;
      69: ifnonnull     82
      72: new           #9                  // class java/lang/IllegalStateException
      75: dup
      76: ldc           #31                 // String not attached to a buffer
      78: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: getfield      #25                 // Field readWrite:Z
      86: ifne          99
      89: new           #9                  // class java/lang/IllegalStateException
      92: dup
      93: ldc           #49                 // String expandBuffer() only permitted for read/write buffers
      95: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: getfield      #7                  // Field buffer:Lokio/Buffer;
     103: getfield      #8                  // Field okio/Buffer.size:J
     106: lstore_2
     107: aload_0
     108: getfield      #7                  // Field buffer:Lokio/Buffer;
     111: iload_1
     112: invokevirtual #43                 // Method okio/Buffer.writableSegment:(I)Lokio/Segment;
     115: astore        4
     117: sipush        8192
     120: aload         4
     122: getfield      #22                 // Field okio/Segment.limit:I
     125: isub
     126: istore        5
     128: aload         4
     130: sipush        8192
     133: putfield      #22                 // Field okio/Segment.limit:I
     136: aload_0
     137: getfield      #7                  // Field buffer:Lokio/Buffer;
     140: lload_2
     141: iload         5
     143: i2l
     144: ladd
     145: putfield      #8                  // Field okio/Buffer.size:J
     148: aload_0
     149: aload         4
     151: putfield      #18                 // Field segment:Lokio/Segment;
     154: aload_0
     155: lload_2
     156: putfield      #4                  // Field offset:J
     159: aload_0
     160: aload         4
     162: getfield      #30                 // Field okio/Segment.data:[B
     165: putfield      #19                 // Field data:[B
     168: aload_0
     169: sipush        8192
     172: iload         5
     174: isub
     175: putfield      #5                  // Field start:I
     178: aload_0
     179: sipush        8192
     182: putfield      #6                  // Field end:I
     185: iload         5
     187: i2l
     188: lreturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Lokio/Buffer;
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String not attached to a buffer
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aconst_null
      19: putfield      #7                  // Field buffer:Lokio/Buffer;
      22: aload_0
      23: aconst_null
      24: putfield      #18                 // Field segment:Lokio/Segment;
      27: aload_0
      28: ldc2_w        #2                  // long -1l
      31: putfield      #4                  // Field offset:J
      34: aload_0
      35: aconst_null
      36: putfield      #19                 // Field data:[B
      39: aload_0
      40: iconst_m1
      41: putfield      #5                  // Field start:I
      44: aload_0
      45: iconst_m1
      46: putfield      #6                  // Field end:I
      49: return
}
