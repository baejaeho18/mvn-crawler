Compiled from "PushableTimeout.java"
final class okio.PushableTimeout extends okio.Timeout {
  private okio.Timeout pushed;

  private boolean originalHasDeadline;

  private long originalDeadlineNanoTime;

  private long originalTimeoutNanos;

  okio.PushableTimeout();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method okio/Timeout."<init>":()V
       4: return

  void push(okio.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field pushed:Lokio/Timeout;
       5: aload_0
       6: aload_1
       7: invokevirtual #3                  // Method okio/Timeout.hasDeadline:()Z
      10: putfield      #4                  // Field originalHasDeadline:Z
      13: aload_0
      14: aload_0
      15: getfield      #4                  // Field originalHasDeadline:Z
      18: ifeq          28
      21: aload_1
      22: invokevirtual #5                  // Method okio/Timeout.deadlineNanoTime:()J
      25: goto          31
      28: ldc2_w        #6                  // long -1l
      31: putfield      #8                  // Field originalDeadlineNanoTime:J
      34: aload_0
      35: aload_1
      36: invokevirtual #9                  // Method okio/Timeout.timeoutNanos:()J
      39: putfield      #10                 // Field originalTimeoutNanos:J
      42: aload_1
      43: aload_0
      44: getfield      #10                 // Field originalTimeoutNanos:J
      47: aload_0
      48: invokevirtual #11                 // Method timeoutNanos:()J
      51: invokestatic  #12                 // Method minTimeout:(JJ)J
      54: getstatic     #13                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      57: invokevirtual #14                 // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      60: pop
      61: aload_0
      62: getfield      #4                  // Field originalHasDeadline:Z
      65: ifeq          94
      68: aload_0
      69: invokevirtual #15                 // Method hasDeadline:()Z
      72: ifeq          94
      75: aload_1
      76: aload_0
      77: invokevirtual #16                 // Method deadlineNanoTime:()J
      80: aload_0
      81: getfield      #8                  // Field originalDeadlineNanoTime:J
      84: invokestatic  #17                 // Method java/lang/Math.min:(JJ)J
      87: invokevirtual #18                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
      90: pop
      91: goto          110
      94: aload_0
      95: invokevirtual #15                 // Method hasDeadline:()Z
      98: ifeq          110
     101: aload_1
     102: aload_0
     103: invokevirtual #16                 // Method deadlineNanoTime:()J
     106: invokevirtual #18                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     109: pop
     110: return

  void pop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pushed:Lokio/Timeout;
       4: aload_0
       5: getfield      #10                 // Field originalTimeoutNanos:J
       8: getstatic     #13                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #14                 // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      14: pop
      15: aload_0
      16: getfield      #4                  // Field originalHasDeadline:Z
      19: ifeq          37
      22: aload_0
      23: getfield      #2                  // Field pushed:Lokio/Timeout;
      26: aload_0
      27: getfield      #8                  // Field originalDeadlineNanoTime:J
      30: invokevirtual #18                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
      33: pop
      34: goto          45
      37: aload_0
      38: getfield      #2                  // Field pushed:Lokio/Timeout;
      41: invokevirtual #19                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
      44: pop
      45: return
}
