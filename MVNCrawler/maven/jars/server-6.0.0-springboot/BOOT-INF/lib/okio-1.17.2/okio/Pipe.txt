Compiled from "Pipe.java"
public final class okio.Pipe {
  final long maxBufferSize;

  final okio.Buffer buffer;

  boolean sinkClosed;

  boolean sourceClosed;

  private final okio.Sink sink;

  private final okio.Source source;

  private okio.Sink foldedSink;

  public okio.Pipe(long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class okio/Buffer
       8: dup
       9: invokespecial #4                  // Method okio/Buffer."<init>":()V
      12: putfield      #5                  // Field buffer:Lokio/Buffer;
      15: aload_0
      16: new           #6                  // class okio/Pipe$PipeSink
      19: dup
      20: aload_0
      21: invokespecial #7                  // Method okio/Pipe$PipeSink."<init>":(Lokio/Pipe;)V
      24: putfield      #8                  // Field sink:Lokio/Sink;
      27: aload_0
      28: new           #9                  // class okio/Pipe$PipeSource
      31: dup
      32: aload_0
      33: invokespecial #10                 // Method okio/Pipe$PipeSource."<init>":(Lokio/Pipe;)V
      36: putfield      #11                 // Field source:Lokio/Source;
      39: lload_1
      40: lconst_1
      41: lcmp
      42: ifge          72
      45: new           #12                 // class java/lang/IllegalArgumentException
      48: dup
      49: new           #13                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #15                 // String maxBufferSize < 1:
      58: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: lload_1
      62: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      65: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: lload_1
      74: putfield      #20                 // Field maxBufferSize:J
      77: return

  public final okio.Source source();
    Code:
       0: aload_0
       1: getfield      #11                 // Field source:Lokio/Source;
       4: areturn

  public final okio.Sink sink();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sink:Lokio/Sink;
       4: areturn

  public void fold(okio.Sink) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Lokio/Buffer;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #1                  // Field foldedSink:Lokio/Sink;
      11: ifnull        24
      14: new           #21                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #22                 // String sink already folded
      20: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #5                  // Field buffer:Lokio/Buffer;
      28: invokevirtual #24                 // Method okio/Buffer.exhausted:()Z
      31: ifeq          47
      34: aload_0
      35: iconst_1
      36: putfield      #25                 // Field sourceClosed:Z
      39: aload_0
      40: aload_1
      41: putfield      #1                  // Field foldedSink:Lokio/Sink;
      44: aload_3
      45: monitorexit
      46: return
      47: new           #3                  // class okio/Buffer
      50: dup
      51: invokespecial #4                  // Method okio/Buffer."<init>":()V
      54: astore_2
      55: aload_2
      56: aload_0
      57: getfield      #5                  // Field buffer:Lokio/Buffer;
      60: aload_0
      61: getfield      #5                  // Field buffer:Lokio/Buffer;
      64: getfield      #26                 // Field okio/Buffer.size:J
      67: invokevirtual #27                 // Method okio/Buffer.write:(Lokio/Buffer;J)V
      70: aload_0
      71: getfield      #5                  // Field buffer:Lokio/Buffer;
      74: invokevirtual #28                 // Method java/lang/Object.notifyAll:()V
      77: aload_3
      78: monitorexit
      79: goto          89
      82: astore        4
      84: aload_3
      85: monitorexit
      86: aload         4
      88: athrow
      89: iconst_0
      90: istore_3
      91: aload_1
      92: aload_2
      93: aload_2
      94: getfield      #26                 // Field okio/Buffer.size:J
      97: invokeinterface #29,  4           // InterfaceMethod okio/Sink.write:(Lokio/Buffer;J)V
     102: aload_1
     103: invokeinterface #30,  1           // InterfaceMethod okio/Sink.flush:()V
     108: iconst_1
     109: istore_3
     110: iload_3
     111: ifne          194
     114: aload_0
     115: getfield      #5                  // Field buffer:Lokio/Buffer;
     118: dup
     119: astore        4
     121: monitorenter
     122: aload_0
     123: iconst_1
     124: putfield      #25                 // Field sourceClosed:Z
     127: aload_0
     128: getfield      #5                  // Field buffer:Lokio/Buffer;
     131: invokevirtual #28                 // Method java/lang/Object.notifyAll:()V
     134: aload         4
     136: monitorexit
     137: goto          148
     140: astore        5
     142: aload         4
     144: monitorexit
     145: aload         5
     147: athrow
     148: goto          194
     151: astore        6
     153: iload_3
     154: ifne          191
     157: aload_0
     158: getfield      #5                  // Field buffer:Lokio/Buffer;
     161: dup
     162: astore        7
     164: monitorenter
     165: aload_0
     166: iconst_1
     167: putfield      #25                 // Field sourceClosed:Z
     170: aload_0
     171: getfield      #5                  // Field buffer:Lokio/Buffer;
     174: invokevirtual #28                 // Method java/lang/Object.notifyAll:()V
     177: aload         7
     179: monitorexit
     180: goto          191
     183: astore        8
     185: aload         7
     187: monitorexit
     188: aload         8
     190: athrow
     191: aload         6
     193: athrow
     194: goto          0
    Exception table:
       from    to  target type
           7    46    82   any
          47    79    82   any
          82    86    82   any
         122   137   140   any
         140   145   140   any
          91   110   151   any
         165   180   183   any
         183   188   183   any
         151   153   151   any

  static okio.Sink access$000(okio.Pipe);
    Code:
       0: aload_0
       1: getfield      #1                  // Field foldedSink:Lokio/Sink;
       4: areturn
}
