Compiled from "Network.java"
public interface com.google.common.graph.Network<N, E> extends com.google.common.graph.SuccessorsFunction<N>, com.google.common.graph.PredecessorsFunction<N> {
  public abstract java.util.Set<N> nodes();

  public abstract java.util.Set<E> edges();

  public abstract com.google.common.graph.Graph<N> asGraph();

  public abstract boolean isDirected();

  public abstract boolean allowsParallelEdges();

  public abstract boolean allowsSelfLoops();

  public abstract com.google.common.graph.ElementOrder<N> nodeOrder();

  public abstract com.google.common.graph.ElementOrder<E> edgeOrder();

  public abstract java.util.Set<N> adjacentNodes(N);

  public abstract java.util.Set<N> predecessors(N);

  public abstract java.util.Set<N> successors(N);

  public abstract java.util.Set<E> incidentEdges(N);

  public abstract java.util.Set<E> inEdges(N);

  public abstract java.util.Set<E> outEdges(N);

  public abstract int degree(N);

  public abstract int inDegree(N);

  public abstract int outDegree(N);

  public abstract com.google.common.graph.EndpointPair<N> incidentNodes(E);

  public abstract java.util.Set<E> adjacentEdges(E);

  public abstract java.util.Set<E> edgesConnecting(N, N);

  public abstract java.util.Optional<E> edgeConnecting(N, N);

  public abstract E edgeConnectingOrNull(N, N);

  public abstract boolean hasEdgeConnecting(N, N);

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public default java.lang.Iterable successors(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod successors:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn

  public default java.lang.Iterable predecessors(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  2            // InterfaceMethod predecessors:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn
}
