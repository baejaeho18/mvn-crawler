Compiled from "FuturesGetChecked.java"
final class com.google.common.util.concurrent.FuturesGetChecked {
  private static final com.google.common.collect.Ordering<java.lang.reflect.Constructor<?>> WITH_STRING_PARAM_FIRST;

  static <V, X extends java.lang.Exception> V getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>) throws X;
    Code:
       0: invokestatic  #1                  // Method bestGetCheckedTypeValidator:()Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;
       3: aload_0
       4: aload_1
       5: invokestatic  #2                  // Method getChecked:(Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;
       8: areturn

  static <V, X extends java.lang.Exception> V getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator, java.util.concurrent.Future<V>, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #3,  2            // InterfaceMethod com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator.validateClass:(Ljava/lang/Class;)V
       7: aload_1
       8: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      13: areturn
      14: astore_3
      15: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #7                  // Method java/lang/Thread.interrupt:()V
      21: aload_2
      22: aload_3
      23: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      26: athrow
      27: astore_3
      28: aload_3
      29: invokevirtual #10                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      32: aload_2
      33: invokestatic  #11                 // Method wrapAndThrowExceptionOrError:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      36: new           #12                 // class java/lang/AssertionError
      39: dup
      40: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      43: athrow
    Exception table:
       from    to  target type
           7    13    14   Class java/lang/InterruptedException
           7    13    27   Class java/util/concurrent/ExecutionException

  static <V, X extends java.lang.Exception> V getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>, long, java.util.concurrent.TimeUnit) throws X;
    Code:
       0: invokestatic  #1                  // Method bestGetCheckedTypeValidator:()Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;
       3: aload_1
       4: invokeinterface #3,  2            // InterfaceMethod com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator.validateClass:(Ljava/lang/Class;)V
       9: aload_0
      10: lload_2
      11: aload         4
      13: invokeinterface #14,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      18: areturn
      19: astore        5
      21: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      24: invokevirtual #7                  // Method java/lang/Thread.interrupt:()V
      27: aload_1
      28: aload         5
      30: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      33: athrow
      34: astore        5
      36: aload_1
      37: aload         5
      39: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      42: athrow
      43: astore        5
      45: aload         5
      47: invokevirtual #10                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      50: aload_1
      51: invokestatic  #11                 // Method wrapAndThrowExceptionOrError:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      54: new           #12                 // class java/lang/AssertionError
      57: dup
      58: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      61: athrow
    Exception table:
       from    to  target type
           9    18    19   Class java/lang/InterruptedException
           9    18    34   Class java/util/concurrent/TimeoutException
           9    18    43   Class java/util/concurrent/ExecutionException

  private static com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator bestGetCheckedTypeValidator();
    Code:
       0: getstatic     #16                 // Field com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder.BEST_VALIDATOR:Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;
       3: areturn

  static com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator();
    Code:
       0: getstatic     #17                 // Field com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator.INSTANCE:Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator;
       3: areturn

  static com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator();
    Code:
       0: getstatic     #18                 // Field com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator.INSTANCE:Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator;
       3: areturn

  private static <X extends java.lang.Exception> void wrapAndThrowExceptionOrError(java.lang.Throwable, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: instanceof    #19                 // class java/lang/Error
       4: ifeq          19
       7: new           #20                 // class com/google/common/util/concurrent/ExecutionError
      10: dup
      11: aload_0
      12: checkcast     #19                 // class java/lang/Error
      15: invokespecial #21                 // Method com/google/common/util/concurrent/ExecutionError."<init>":(Ljava/lang/Error;)V
      18: athrow
      19: aload_0
      20: instanceof    #22                 // class java/lang/RuntimeException
      23: ifeq          35
      26: new           #23                 // class com/google/common/util/concurrent/UncheckedExecutionException
      29: dup
      30: aload_0
      31: invokespecial #24                 // Method com/google/common/util/concurrent/UncheckedExecutionException."<init>":(Ljava/lang/Throwable;)V
      34: athrow
      35: aload_1
      36: aload_0
      37: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      40: athrow

  private static boolean hasConstructorUsableByGetChecked(java.lang.Class<? extends java.lang.Exception>);
    Code:
       0: aload_0
       1: new           #25                 // class java/lang/Exception
       4: dup
       5: invokespecial #26                 // Method java/lang/Exception."<init>":()V
       8: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      11: astore_1
      12: iconst_1
      13: ireturn
      14: astore_1
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/Exception

  private static <X extends java.lang.Exception> X newWithCause(java.lang.Class<X>, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/lang/Class.getConstructors:()[Ljava/lang/reflect/Constructor;
       4: invokestatic  #28                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokestatic  #29                 // Method preferringStrings:(Ljava/util/List;)Ljava/util/List;
      12: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          75
      27: aload_3
      28: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #33                 // class java/lang/reflect/Constructor
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokestatic  #34                 // Method newFromConstructor:(Ljava/lang/reflect/Constructor;Ljava/lang/Throwable;)Ljava/lang/Object;
      44: checkcast     #25                 // class java/lang/Exception
      47: astore        5
      49: aload         5
      51: ifnull        72
      54: aload         5
      56: invokevirtual #35                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
      59: ifnonnull     69
      62: aload         5
      64: aload_1
      65: invokevirtual #36                 // Method java/lang/Exception.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      68: pop
      69: aload         5
      71: areturn
      72: goto          18
      75: new           #37                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #38                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #40                 // String No appropriate constructor for exception of type
      88: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: ldc           #43                 // String  in response to chained exception
      97: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aload_1
     104: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     107: athrow

  private static <X extends java.lang.Exception> java.util.List<java.lang.reflect.Constructor<X>> preferringStrings(java.util.List<java.lang.reflect.Constructor<X>>);
    Code:
       0: getstatic     #46                 // Field WITH_STRING_PARAM_FIRST:Lcom/google/common/collect/Ordering;
       3: aload_0
       4: invokevirtual #47                 // Method com/google/common/collect/Ordering.sortedCopy:(Ljava/lang/Iterable;)Ljava/util/List;
       7: areturn

  private static <X> X newFromConstructor(java.lang.reflect.Constructor<X>, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: arraylength
       7: anewarray     #49                 // class java/lang/Object
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: aload_2
      17: arraylength
      18: if_icmpge     74
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: ldc           #50                 // class java/lang/String
      31: invokevirtual #51                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ifeq          48
      37: aload_3
      38: iload         4
      40: aload_1
      41: invokevirtual #52                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
      44: aastore
      45: goto          68
      48: aload         5
      50: ldc           #53                 // class java/lang/Throwable
      52: invokevirtual #51                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          66
      58: aload_3
      59: iload         4
      61: aload_1
      62: aastore
      63: goto          68
      66: aconst_null
      67: areturn
      68: iinc          4, 1
      71: goto          14
      74: aload_0
      75: aload_3
      76: invokevirtual #54                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      79: areturn
      80: astore        4
      82: aconst_null
      83: areturn
    Exception table:
       from    to  target type
          74    79    80   Class java/lang/IllegalArgumentException
          74    79    80   Class java/lang/InstantiationException
          74    79    80   Class java/lang/IllegalAccessException
          74    79    80   Class java/lang/reflect/InvocationTargetException

  static boolean isCheckedException(java.lang.Class<? extends java.lang.Exception>);
    Code:
       0: ldc           #22                 // class java/lang/RuntimeException
       2: aload_0
       3: invokevirtual #58                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static void checkExceptionClassValidity(java.lang.Class<? extends java.lang.Exception>);
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method isCheckedException:(Ljava/lang/Class;)Z
       4: ldc           #60                 // String Futures.getChecked exception type (%s) must not be a RuntimeException
       6: aload_0
       7: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokestatic  #62                 // Method hasConstructorUsableByGetChecked:(Ljava/lang/Class;)Z
      14: ldc           #63                 // String Futures.getChecked exception type (%s) must be an accessible class with an accessible constructor whose parameters (if any) must be of type String and/or Throwable
      16: aload_0
      17: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      20: return

  private com.google.common.util.concurrent.FuturesGetChecked();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: invokestatic  #65                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       3: new           #66                 // class com/google/common/util/concurrent/FuturesGetChecked$1
       6: dup
       7: invokespecial #67                 // Method com/google/common/util/concurrent/FuturesGetChecked$1."<init>":()V
      10: invokevirtual #68                 // Method com/google/common/collect/Ordering.onResultOf:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Ordering;
      13: invokevirtual #69                 // Method com/google/common/collect/Ordering.reverse:()Lcom/google/common/collect/Ordering;
      16: putstatic     #46                 // Field WITH_STRING_PARAM_FIRST:Lcom/google/common/collect/Ordering;
      19: return
}
