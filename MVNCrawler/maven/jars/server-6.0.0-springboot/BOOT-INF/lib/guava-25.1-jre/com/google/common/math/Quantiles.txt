Compiled from "Quantiles.java"
public final class com.google.common.math.Quantiles {
  public com.google.common.math.Quantiles();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.common.math.Quantiles$ScaleAndIndex median();
    Code:
       0: iconst_2
       1: invokestatic  #10                 // Method scale:(I)Lcom/google/common/math/Quantiles$Scale;
       4: iconst_1
       5: invokevirtual #11                 // Method com/google/common/math/Quantiles$Scale.index:(I)Lcom/google/common/math/Quantiles$ScaleAndIndex;
       8: areturn

  public static com.google.common.math.Quantiles$Scale quartiles();
    Code:
       0: iconst_4
       1: invokestatic  #10                 // Method scale:(I)Lcom/google/common/math/Quantiles$Scale;
       4: areturn

  public static com.google.common.math.Quantiles$Scale percentiles();
    Code:
       0: bipush        100
       2: invokestatic  #10                 // Method scale:(I)Lcom/google/common/math/Quantiles$Scale;
       5: areturn

  public static com.google.common.math.Quantiles$Scale scale(int);
    Code:
       0: new           #12                 // class com/google/common/math/Quantiles$Scale
       3: dup
       4: iload_0
       5: aconst_null
       6: invokespecial #13                 // Method com/google/common/math/Quantiles$Scale."<init>":(ILcom/google/common/math/Quantiles$1;)V
       9: areturn

  private static boolean containsNaN(double...);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     33
      12: aload_1
      13: iload_3
      14: daload
      15: dstore        4
      17: dload         4
      19: invokestatic  #14                 // Method java/lang/Double.isNaN:(D)Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: iinc          3, 1
      30: goto          7
      33: iconst_0
      34: ireturn

  private static double interpolate(double, double, double, double);
    Code:
       0: dload_0
       1: ldc2_w        #15                 // double -Infinityd
       4: dcmpl
       5: ifne          24
       8: dload_2
       9: ldc2_w        #17                 // double Infinityd
      12: dcmpl
      13: ifne          20
      16: ldc2_w        #19                 // double NaNd
      19: dreturn
      20: ldc2_w        #15                 // double -Infinityd
      23: dreturn
      24: dload_2
      25: ldc2_w        #17                 // double Infinityd
      28: dcmpl
      29: ifne          36
      32: ldc2_w        #17                 // double Infinityd
      35: dreturn
      36: dload_0
      37: dload_2
      38: dload_0
      39: dsub
      40: dload         4
      42: dmul
      43: dload         6
      45: ddiv
      46: dadd
      47: dreturn

  private static void checkIndex(int, int);
    Code:
       0: iload_0
       1: iflt          9
       4: iload_0
       5: iload_1
       6: if_icmple     36
       9: new           #21                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #22                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #24                 // String Quantile indexes must be between 0 and the scale, which is
      22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  private static double[] longsToDoubles(long[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: iload_1
       4: newarray       double
       6: astore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_1
      11: if_icmpge     27
      14: aload_2
      15: iload_3
      16: aload_0
      17: iload_3
      18: laload
      19: l2d
      20: dastore
      21: iinc          3, 1
      24: goto          9
      27: aload_2
      28: areturn

  private static double[] intsToDoubles(int[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: iload_1
       4: newarray       double
       6: astore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_1
      11: if_icmpge     27
      14: aload_2
      15: iload_3
      16: aload_0
      17: iload_3
      18: iaload
      19: i2d
      20: dastore
      21: iinc          3, 1
      24: goto          9
      27: aload_2
      28: areturn

  private static void selectInPlace(int, double[], int, int);
    Code:
       0: iload_0
       1: iload_2
       2: if_icmpne     55
       5: iload_2
       6: istore        4
       8: iload_2
       9: iconst_1
      10: iadd
      11: istore        5
      13: iload         5
      15: iload_3
      16: if_icmpgt     41
      19: aload_1
      20: iload         4
      22: daload
      23: aload_1
      24: iload         5
      26: daload
      27: dcmpl
      28: ifle          35
      31: iload         5
      33: istore        4
      35: iinc          5, 1
      38: goto          13
      41: iload         4
      43: iload_2
      44: if_icmpeq     54
      47: aload_1
      48: iload         4
      50: iload_2
      51: invokestatic  #29                 // Method swap:([DII)V
      54: return
      55: iload_3
      56: iload_2
      57: if_icmple     93
      60: aload_1
      61: iload_2
      62: iload_3
      63: invokestatic  #30                 // Method partition:([DII)I
      66: istore        4
      68: iload         4
      70: iload_0
      71: if_icmplt     79
      74: iload         4
      76: iconst_1
      77: isub
      78: istore_3
      79: iload         4
      81: iload_0
      82: if_icmpgt     90
      85: iload         4
      87: iconst_1
      88: iadd
      89: istore_2
      90: goto          55
      93: return

  private static int partition(double[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #31                 // Method movePivotToStartOfSlice:([DII)V
       6: aload_0
       7: iload_1
       8: daload
       9: dstore_3
      10: iload_2
      11: istore        5
      13: iload_2
      14: istore        6
      16: iload         6
      18: iload_1
      19: if_icmple     48
      22: aload_0
      23: iload         6
      25: daload
      26: dload_3
      27: dcmpl
      28: ifle          42
      31: aload_0
      32: iload         5
      34: iload         6
      36: invokestatic  #29                 // Method swap:([DII)V
      39: iinc          5, -1
      42: iinc          6, -1
      45: goto          16
      48: aload_0
      49: iload_1
      50: iload         5
      52: invokestatic  #29                 // Method swap:([DII)V
      55: iload         5
      57: ireturn

  private static void movePivotToStartOfSlice(double[], int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: iconst_1
       4: iushr
       5: istore_3
       6: aload_0
       7: iload_2
       8: daload
       9: aload_0
      10: iload_3
      11: daload
      12: dcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore        4
      23: aload_0
      24: iload_3
      25: daload
      26: aload_0
      27: iload_1
      28: daload
      29: dcmpg
      30: ifge          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore        5
      40: aload_0
      41: iload_2
      42: daload
      43: aload_0
      44: iload_1
      45: daload
      46: dcmpg
      47: ifge          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore        6
      57: iload         4
      59: iload         5
      61: if_icmpne     73
      64: aload_0
      65: iload_3
      66: iload_1
      67: invokestatic  #29                 // Method swap:([DII)V
      70: goto          86
      73: iload         4
      75: iload         6
      77: if_icmpeq     86
      80: aload_0
      81: iload_1
      82: iload_2
      83: invokestatic  #29                 // Method swap:([DII)V
      86: return

  private static void selectAllInPlace(int[], int, int, double[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload         4
       5: iload         5
       7: invokestatic  #32                 // Method chooseNextSelection:([IIIII)I
      10: istore        6
      12: aload_0
      13: iload         6
      15: iaload
      16: istore        7
      18: iload         7
      20: aload_3
      21: iload         4
      23: iload         5
      25: invokestatic  #4                  // Method selectInPlace:(I[DII)V
      28: iload         6
      30: iconst_1
      31: isub
      32: istore        8
      34: iload         8
      36: iload_1
      37: if_icmplt     55
      40: aload_0
      41: iload         8
      43: iaload
      44: iload         7
      46: if_icmpne     55
      49: iinc          8, -1
      52: goto          34
      55: iload         8
      57: iload_1
      58: if_icmplt     75
      61: aload_0
      62: iload_1
      63: iload         8
      65: aload_3
      66: iload         4
      68: iload         7
      70: iconst_1
      71: isub
      72: invokestatic  #2                  // Method selectAllInPlace:([III[DII)V
      75: iload         6
      77: iconst_1
      78: iadd
      79: istore        9
      81: iload         9
      83: iload_2
      84: if_icmpgt     102
      87: aload_0
      88: iload         9
      90: iaload
      91: iload         7
      93: if_icmpne     102
      96: iinc          9, 1
      99: goto          81
     102: iload         9
     104: iload_2
     105: if_icmpgt     122
     108: aload_0
     109: iload         9
     111: iload_2
     112: aload_3
     113: iload         7
     115: iconst_1
     116: iadd
     117: iload         5
     119: invokestatic  #2                  // Method selectAllInPlace:([III[DII)V
     122: return

  private static int chooseNextSelection(int[], int, int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpne     7
       5: iload_1
       6: ireturn
       7: iload_3
       8: iload         4
      10: iadd
      11: iconst_1
      12: iushr
      13: istore        5
      15: iload_1
      16: istore        6
      18: iload_2
      19: istore        7
      21: iload         7
      23: iload         6
      25: iconst_1
      26: iadd
      27: if_icmple     77
      30: iload         6
      32: iload         7
      34: iadd
      35: iconst_1
      36: iushr
      37: istore        8
      39: aload_0
      40: iload         8
      42: iaload
      43: iload         5
      45: if_icmple     55
      48: iload         8
      50: istore        7
      52: goto          74
      55: aload_0
      56: iload         8
      58: iaload
      59: iload         5
      61: if_icmpge     71
      64: iload         8
      66: istore        6
      68: goto          74
      71: iload         8
      73: ireturn
      74: goto          21
      77: iload_3
      78: iload         4
      80: iadd
      81: aload_0
      82: iload         6
      84: iaload
      85: isub
      86: aload_0
      87: iload         7
      89: iaload
      90: isub
      91: ifle          97
      94: iload         7
      96: ireturn
      97: iload         6
      99: ireturn

  private static void swap(double[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: daload
       3: dstore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: iload_2
       8: daload
       9: dastore
      10: aload_0
      11: iload_2
      12: dload_3
      13: dastore
      14: return

  static void access$300(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #8                  // Method checkIndex:(II)V
       5: return

  static double[] access$400(long[]);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method longsToDoubles:([J)[D
       4: areturn

  static double[] access$500(int[]);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method intsToDoubles:([I)[D
       4: areturn

  static boolean access$600(double[]);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method containsNaN:([D)Z
       4: ireturn

  static void access$700(int, double[], int, int);
    Code:
       0: iload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #4                  // Method selectInPlace:(I[DII)V
       7: return

  static double access$800(double, double, double, double);
    Code:
       0: dload_0
       1: dload_2
       2: dload         4
       4: dload         6
       6: invokestatic  #3                  // Method interpolate:(DDDD)D
       9: dreturn

  static void access$900(int[], int, int, double[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokestatic  #2                  // Method selectAllInPlace:([III[DII)V
      11: return
}
