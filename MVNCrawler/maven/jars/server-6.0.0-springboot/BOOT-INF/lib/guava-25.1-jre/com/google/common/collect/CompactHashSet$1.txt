Compiled from "CompactHashSet.java"
class com.google.common.collect.CompactHashSet$1 implements java.util.Iterator<E> {
  int expectedModCount;

  int index;

  int indexToRemove;

  final com.google.common.collect.CompactHashSet this$0;

  com.google.common.collect.CompactHashSet$1(com.google.common.collect.CompactHashSet);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      14: getfield      #3                  // Field com/google/common/collect/CompactHashSet.modCount:I
      17: putfield      #4                  // Field expectedModCount:I
      20: aload_0
      21: aload_0
      22: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      25: invokevirtual #5                  // Method com/google/common/collect/CompactHashSet.firstEntryIndex:()I
      28: putfield      #6                  // Field index:I
      31: aload_0
      32: iconst_m1
      33: putfield      #7                  // Field indexToRemove:I
      36: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field index:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public E next();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkForConcurrentModification:()V
       4: aload_0
       5: invokevirtual #9                  // Method hasNext:()Z
       8: ifne          19
      11: new           #10                 // class java/util/NoSuchElementException
      14: dup
      15: invokespecial #11                 // Method java/util/NoSuchElementException."<init>":()V
      18: athrow
      19: aload_0
      20: aload_0
      21: getfield      #6                  // Field index:I
      24: putfield      #7                  // Field indexToRemove:I
      27: aload_0
      28: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      31: getfield      #12                 // Field com/google/common/collect/CompactHashSet.elements:[Ljava/lang/Object;
      34: aload_0
      35: getfield      #6                  // Field index:I
      38: aaload
      39: astore_1
      40: aload_0
      41: aload_0
      42: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      45: aload_0
      46: getfield      #6                  // Field index:I
      49: invokevirtual #13                 // Method com/google/common/collect/CompactHashSet.getSuccessor:(I)I
      52: putfield      #6                  // Field index:I
      55: aload_1
      56: areturn

  public void remove();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkForConcurrentModification:()V
       4: aload_0
       5: getfield      #7                  // Field indexToRemove:I
       8: iflt          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokestatic  #14                 // Method com/google/common/collect/CollectPreconditions.checkRemove:(Z)V
      19: aload_0
      20: dup
      21: getfield      #4                  // Field expectedModCount:I
      24: iconst_1
      25: iadd
      26: putfield      #4                  // Field expectedModCount:I
      29: aload_0
      30: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      33: aload_0
      34: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      37: getfield      #12                 // Field com/google/common/collect/CompactHashSet.elements:[Ljava/lang/Object;
      40: aload_0
      41: getfield      #7                  // Field indexToRemove:I
      44: aaload
      45: aload_0
      46: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      49: invokestatic  #15                 // Method com/google/common/collect/CompactHashSet.access$000:(Lcom/google/common/collect/CompactHashSet;)[J
      52: aload_0
      53: getfield      #7                  // Field indexToRemove:I
      56: laload
      57: invokestatic  #16                 // Method com/google/common/collect/CompactHashSet.access$100:(J)I
      60: invokestatic  #17                 // Method com/google/common/collect/CompactHashSet.access$200:(Lcom/google/common/collect/CompactHashSet;Ljava/lang/Object;I)Z
      63: pop
      64: aload_0
      65: aload_0
      66: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
      69: aload_0
      70: getfield      #6                  // Field index:I
      73: aload_0
      74: getfield      #7                  // Field indexToRemove:I
      77: invokevirtual #18                 // Method com/google/common/collect/CompactHashSet.adjustAfterRemove:(II)I
      80: putfield      #6                  // Field index:I
      83: aload_0
      84: iconst_m1
      85: putfield      #7                  // Field indexToRemove:I
      88: return

  private void checkForConcurrentModification();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/CompactHashSet;
       4: getfield      #3                  // Field com/google/common/collect/CompactHashSet.modCount:I
       7: aload_0
       8: getfield      #4                  // Field expectedModCount:I
      11: if_icmpeq     22
      14: new           #19                 // class java/util/ConcurrentModificationException
      17: dup
      18: invokespecial #20                 // Method java/util/ConcurrentModificationException."<init>":()V
      21: athrow
      22: return
}
