Compiled from "Iterables.java"
final class com.google.common.collect.Iterables$6 extends com.google.common.collect.FluentIterable<T> {
  final java.lang.Iterable val$iterable;

  final int val$numberToSkip;

  com.google.common.collect.Iterables$6(java.lang.Iterable, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$numberToSkip:I
      10: aload_0
      11: invokespecial #3                  // Method com/google/common/collect/FluentIterable."<init>":()V
      14: return

  public java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
       4: instanceof    #4                  // class java/util/List
       7: ifeq          51
      10: aload_0
      11: getfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
      14: checkcast     #4                  // class java/util/List
      17: astore_1
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      24: aload_0
      25: getfield      #2                  // Field val$numberToSkip:I
      28: invokestatic  #6                  // Method java/lang/Math.min:(II)I
      31: istore_2
      32: aload_1
      33: iload_2
      34: aload_1
      35: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      40: invokeinterface #7,  3            // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      45: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: areturn
      51: aload_0
      52: getfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
      55: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      60: astore_1
      61: aload_1
      62: aload_0
      63: getfield      #2                  // Field val$numberToSkip:I
      66: invokestatic  #10                 // Method com/google/common/collect/Iterators.advance:(Ljava/util/Iterator;I)I
      69: pop
      70: new           #11                 // class com/google/common/collect/Iterables$6$1
      73: dup
      74: aload_0
      75: aload_1
      76: invokespecial #12                 // Method com/google/common/collect/Iterables$6$1."<init>":(Lcom/google/common/collect/Iterables$6;Ljava/util/Iterator;)V
      79: areturn

  public java.util.Spliterator<T> spliterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
       4: instanceof    #4                  // class java/util/List
       7: ifeq          51
      10: aload_0
      11: getfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
      14: checkcast     #4                  // class java/util/List
      17: astore_1
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      24: aload_0
      25: getfield      #2                  // Field val$numberToSkip:I
      28: invokestatic  #6                  // Method java/lang/Math.min:(II)I
      31: istore_2
      32: aload_1
      33: iload_2
      34: aload_1
      35: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      40: invokeinterface #7,  3            // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      45: invokeinterface #13,  1           // InterfaceMethod java/util/List.spliterator:()Ljava/util/Spliterator;
      50: areturn
      51: aload_0
      52: getfield      #1                  // Field val$iterable:Ljava/lang/Iterable;
      55: invokestatic  #14                 // Method com/google/common/collect/Streams.stream:(Ljava/lang/Iterable;)Ljava/util/stream/Stream;
      58: aload_0
      59: getfield      #2                  // Field val$numberToSkip:I
      62: i2l
      63: invokeinterface #15,  3           // InterfaceMethod java/util/stream/Stream.skip:(J)Ljava/util/stream/Stream;
      68: invokeinterface #16,  1           // InterfaceMethod java/util/stream/Stream.spliterator:()Ljava/util/Spliterator;
      73: areturn
}
