Compiled from "AbstractMapBasedMultiset.java"
abstract class com.google.common.collect.AbstractMapBasedMultiset<E> extends com.google.common.collect.AbstractMultiset<E> implements java.io.Serializable {
  private transient java.util.Map<E, com.google.common.collect.Count> backingMap;

  private transient long size;

  private static final long serialVersionUID;

  protected com.google.common.collect.AbstractMapBasedMultiset(java.util.Map<E, com.google.common.collect.Count>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/google/common/collect/AbstractMultiset."<init>":()V
       4: aload_1
       5: invokeinterface #4,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      10: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      13: aload_0
      14: aload_1
      15: putfield      #1                  // Field backingMap:Ljava/util/Map;
      18: return

  void setBackingMap(java.util.Map<E, com.google.common.collect.Count>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field backingMap:Ljava/util/Map;
       5: return

  public java.util.Set<com.google.common.collect.Multiset$Entry<E>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method com/google/common/collect/AbstractMultiset.entrySet:()Ljava/util/Set;
       4: areturn

  java.util.Iterator<E> elementIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: new           #9                  // class com/google/common/collect/AbstractMapBasedMultiset$1
      18: dup
      19: aload_0
      20: aload_1
      21: invokespecial #10                 // Method com/google/common/collect/AbstractMapBasedMultiset$1."<init>":(Lcom/google/common/collect/AbstractMapBasedMultiset;Ljava/util/Iterator;)V
      24: areturn

  java.util.Iterator<com.google.common.collect.Multiset$Entry<E>> entryIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: new           #11                 // class com/google/common/collect/AbstractMapBasedMultiset$2
      18: dup
      19: aload_0
      20: aload_1
      21: invokespecial #12                 // Method com/google/common/collect/AbstractMapBasedMultiset$2."<init>":(Lcom/google/common/collect/AbstractMapBasedMultiset;Ljava/util/Iterator;)V
      24: areturn

  public void forEachEntry(java.util.function.ObjIntConsumer<? super E>);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #1                  // Field backingMap:Ljava/util/Map;
       9: aload_1
      10: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Ljava/util/function/ObjIntConsumer;)Ljava/util/function/BiConsumer;
      15: invokeinterface #15,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      20: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_1
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #20                 // class com/google/common/collect/Count
      33: astore_2
      34: aload_2
      35: iconst_0
      36: invokevirtual #21                 // Method com/google/common/collect/Count.set:(I)V
      39: goto          15
      42: aload_0
      43: getfield      #1                  // Field backingMap:Ljava/util/Map;
      46: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
      51: aload_0
      52: lconst_0
      53: putfield      #2                  // Field size:J
      56: return

  int distinctElements();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:J
       4: invokestatic  #24                 // Method com/google/common/primitives/Ints.saturatedCast:(J)I
       7: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #25                 // class com/google/common/collect/AbstractMapBasedMultiset$MapBasedMultisetIterator
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method com/google/common/collect/AbstractMapBasedMultiset$MapBasedMultisetIterator."<init>":(Lcom/google/common/collect/AbstractMapBasedMultiset;)V
       8: areturn

  public int count(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #27                 // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #20                 // class com/google/common/collect/Count
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #28                 // Method com/google/common/collect/Count.get:()I
      24: ireturn

  public int add(E, int);
    Code:
       0: iload_2
       1: ifne          10
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method count:(Ljava/lang/Object;)I
       9: ireturn
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #30                 // String occurrences cannot be negative: %s
      21: iload_2
      22: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      25: aload_0
      26: getfield      #1                  // Field backingMap:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #20                 // class com/google/common/collect/Count
      38: astore_3
      39: aload_3
      40: ifnonnull     68
      43: iconst_0
      44: istore        4
      46: aload_0
      47: getfield      #1                  // Field backingMap:Ljava/util/Map;
      50: aload_1
      51: new           #20                 // class com/google/common/collect/Count
      54: dup
      55: iload_2
      56: invokespecial #33                 // Method com/google/common/collect/Count."<init>":(I)V
      59: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          108
      68: aload_3
      69: invokevirtual #28                 // Method com/google/common/collect/Count.get:()I
      72: istore        4
      74: iload         4
      76: i2l
      77: iload_2
      78: i2l
      79: ladd
      80: lstore        5
      82: lload         5
      84: ldc2_w        #36                 // long 2147483647l
      87: lcmp
      88: ifgt          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: ldc           #38                 // String too many occurrences: %s
      98: lload         5
     100: invokestatic  #39                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;J)V
     103: aload_3
     104: iload_2
     105: invokevirtual #40                 // Method com/google/common/collect/Count.add:(I)V
     108: aload_0
     109: dup
     110: getfield      #2                  // Field size:J
     113: iload_2
     114: i2l
     115: ladd
     116: putfield      #2                  // Field size:J
     119: iload         4
     121: ireturn

  public int remove(java.lang.Object, int);
    Code:
       0: iload_2
       1: ifne          10
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method count:(Ljava/lang/Object;)I
       9: ireturn
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #30                 // String occurrences cannot be negative: %s
      21: iload_2
      22: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      25: aload_0
      26: getfield      #1                  // Field backingMap:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #20                 // class com/google/common/collect/Count
      38: astore_3
      39: aload_3
      40: ifnonnull     45
      43: iconst_0
      44: ireturn
      45: aload_3
      46: invokevirtual #28                 // Method com/google/common/collect/Count.get:()I
      49: istore        4
      51: iload         4
      53: iload_2
      54: if_icmple     63
      57: iload_2
      58: istore        5
      60: goto          78
      63: iload         4
      65: istore        5
      67: aload_0
      68: getfield      #1                  // Field backingMap:Ljava/util/Map;
      71: aload_1
      72: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: aload_3
      79: iload         5
      81: ineg
      82: invokevirtual #40                 // Method com/google/common/collect/Count.add:(I)V
      85: aload_0
      86: dup
      87: getfield      #2                  // Field size:J
      90: iload         5
      92: i2l
      93: lsub
      94: putfield      #2                  // Field size:J
      97: iload         4
      99: ireturn

  public int setCount(E, int);
    Code:
       0: iload_2
       1: ldc           #42                 // String count
       3: invokestatic  #43                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
       6: pop
       7: iload_2
       8: ifne          35
      11: aload_0
      12: getfield      #1                  // Field backingMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #20                 // class com/google/common/collect/Count
      24: astore_3
      25: aload_3
      26: iload_2
      27: invokestatic  #44                 // Method getAndSet:(Lcom/google/common/collect/Count;I)I
      30: istore        4
      32: goto          79
      35: aload_0
      36: getfield      #1                  // Field backingMap:Ljava/util/Map;
      39: aload_1
      40: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #20                 // class com/google/common/collect/Count
      48: astore_3
      49: aload_3
      50: iload_2
      51: invokestatic  #44                 // Method getAndSet:(Lcom/google/common/collect/Count;I)I
      54: istore        4
      56: aload_3
      57: ifnonnull     79
      60: aload_0
      61: getfield      #1                  // Field backingMap:Ljava/util/Map;
      64: aload_1
      65: new           #20                 // class com/google/common/collect/Count
      68: dup
      69: iload_2
      70: invokespecial #33                 // Method com/google/common/collect/Count."<init>":(I)V
      73: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: dup
      81: getfield      #2                  // Field size:J
      84: iload_2
      85: iload         4
      87: isub
      88: i2l
      89: ladd
      90: putfield      #2                  // Field size:J
      93: iload         4
      95: ireturn

  private static int getAndSet(com.google.common.collect.Count, int);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: iload_1
       8: invokevirtual #45                 // Method com/google/common/collect/Count.getAndSet:(I)I
      11: ireturn

  private void readObjectNoData() throws java.io.ObjectStreamException;
    Code:
       0: new           #46                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #47                 // String Stream data required
       6: invokespecial #48                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  private static void lambda$forEachEntry$0(java.util.function.ObjIntConsumer, java.lang.Object, com.google.common.collect.Count);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #28                 // Method com/google/common/collect/Count.get:()I
       6: invokeinterface #49,  3           // InterfaceMethod java/util/function/ObjIntConsumer.accept:(Ljava/lang/Object;I)V
      11: return

  static long access$000(com.google.common.collect.AbstractMapBasedMultiset);
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:J
       4: lreturn

  static long access$002(com.google.common.collect.AbstractMapBasedMultiset, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #2                  // Field size:J
       6: lreturn

  static java.util.Map access$100(com.google.common.collect.AbstractMapBasedMultiset);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingMap:Ljava/util/Map;
       4: areturn

  static long access$010(com.google.common.collect.AbstractMapBasedMultiset);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field size:J
       5: dup2_x1
       6: lconst_1
       7: lsub
       8: putfield      #2                  // Field size:J
      11: lreturn
}
