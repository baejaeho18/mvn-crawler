Compiled from "HostAndPort.java"
public final class com.google.common.net.HostAndPort implements java.io.Serializable {
  private static final int NO_PORT;

  private final java.lang.String host;

  private final int port;

  private final boolean hasBracketlessColons;

  private static final long serialVersionUID;

  private com.google.common.net.HostAndPort(java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field host:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field hasBracketlessColons:Z
      19: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field host:Ljava/lang/String;
       4: areturn

  public boolean hasPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field port:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int getPort();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: ireturn

  public int getPortOrDefault(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: goto          15
      14: iload_1
      15: ireturn

  public static com.google.common.net.HostAndPort fromParts(java.lang.String, int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: ldc           #8                  // String Port out of range: %s
       6: iload_1
       7: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      10: aload_0
      11: invokestatic  #10                 // Method fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;
      14: astore_2
      15: aload_2
      16: invokevirtual #5                  // Method hasPort:()Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #11                 // String Host has a port: %s
      29: aload_0
      30: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      33: new           #13                 // class com/google/common/net/HostAndPort
      36: dup
      37: aload_2
      38: getfield      #2                  // Field host:Ljava/lang/String;
      41: iload_1
      42: aload_2
      43: getfield      #4                  // Field hasBracketlessColons:Z
      46: invokespecial #14                 // Method "<init>":(Ljava/lang/String;IZ)V
      49: areturn

  public static com.google.common.net.HostAndPort fromHost(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;
       4: astore_1
       5: aload_1
       6: invokevirtual #5                  // Method hasPort:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #11                 // String Host has a port: %s
      19: aload_0
      20: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      23: aload_1
      24: areturn

  public static com.google.common.net.HostAndPort fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aconst_null
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: ldc           #16                 // String [
      12: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifeq          37
      18: aload_0
      19: invokestatic  #18                 // Method getHostAndPortFromBracketedHost:(Ljava/lang/String;)[Ljava/lang/String;
      22: astore        4
      24: aload         4
      26: iconst_0
      27: aaload
      28: astore_1
      29: aload         4
      31: iconst_1
      32: aaload
      33: astore_2
      34: goto          97
      37: aload_0
      38: bipush        58
      40: invokevirtual #19                 // Method java/lang/String.indexOf:(I)I
      43: istore        4
      45: iload         4
      47: iflt          84
      50: aload_0
      51: bipush        58
      53: iload         4
      55: iconst_1
      56: iadd
      57: invokevirtual #20                 // Method java/lang/String.indexOf:(II)I
      60: iconst_m1
      61: if_icmpne     84
      64: aload_0
      65: iconst_0
      66: iload         4
      68: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      71: astore_1
      72: aload_0
      73: iload         4
      75: iconst_1
      76: iadd
      77: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      80: astore_2
      81: goto          97
      84: aload_0
      85: astore_1
      86: iload         4
      88: iflt          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore_3
      97: iconst_m1
      98: istore        4
     100: aload_2
     101: invokestatic  #23                 // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
     104: ifne          176
     107: aload_2
     108: ldc           #24                 // String +
     110: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     113: ifne          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: ldc           #25                 // String Unparseable port number: %s
     123: aload_0
     124: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     127: aload_2
     128: invokestatic  #26                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     131: istore        4
     133: goto          165
     136: astore        5
     138: new           #28                 // class java/lang/IllegalArgumentException
     141: dup
     142: new           #29                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #31                 // String Unparseable port number:
     151: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_0
     155: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     164: athrow
     165: iload         4
     167: invokestatic  #7                  // Method isValidPort:(I)Z
     170: ldc           #35                 // String Port number out of range: %s
     172: aload_0
     173: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     176: new           #13                 // class com/google/common/net/HostAndPort
     179: dup
     180: aload_1
     181: iload         4
     183: iload_3
     184: invokespecial #14                 // Method "<init>":(Ljava/lang/String;IZ)V
     187: areturn
    Exception table:
       from    to  target type
         127   133   136   Class java/lang/NumberFormatException

  private static java.lang.String[] getHostAndPortFromBracketedHost(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: iconst_0
       6: invokevirtual #36                 // Method java/lang/String.charAt:(I)C
       9: bipush        91
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #37                 // String Bracketed host-port string must start with a bracket: %s
      21: aload_0
      22: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: bipush        58
      28: invokevirtual #19                 // Method java/lang/String.indexOf:(I)I
      31: istore_1
      32: aload_0
      33: bipush        93
      35: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I
      38: istore_2
      39: iload_1
      40: iconst_m1
      41: if_icmple     53
      44: iload_2
      45: iload_1
      46: if_icmple     53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #39                 // String Invalid bracketed host/port: %s
      56: aload_0
      57: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      60: aload_0
      61: iconst_1
      62: iload_2
      63: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      66: astore_3
      67: iload_2
      68: iconst_1
      69: iadd
      70: aload_0
      71: invokevirtual #40                 // Method java/lang/String.length:()I
      74: if_icmpne     91
      77: iconst_2
      78: anewarray     #41                 // class java/lang/String
      81: dup
      82: iconst_0
      83: aload_3
      84: aastore
      85: dup
      86: iconst_1
      87: ldc           #42                 // String
      89: aastore
      90: areturn
      91: aload_0
      92: iload_2
      93: iconst_1
      94: iadd
      95: invokevirtual #36                 // Method java/lang/String.charAt:(I)C
      98: bipush        58
     100: if_icmpne     107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ldc           #43                 // String Only a colon may follow a close bracket: %s
     110: aload_0
     111: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     114: iload_2
     115: iconst_2
     116: iadd
     117: istore        4
     119: iload         4
     121: aload_0
     122: invokevirtual #40                 // Method java/lang/String.length:()I
     125: if_icmpge     149
     128: aload_0
     129: iload         4
     131: invokevirtual #36                 // Method java/lang/String.charAt:(I)C
     134: invokestatic  #44                 // Method java/lang/Character.isDigit:(C)Z
     137: ldc           #45                 // String Port must be numeric: %s
     139: aload_0
     140: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     143: iinc          4, 1
     146: goto          119
     149: iconst_2
     150: anewarray     #41                 // class java/lang/String
     153: dup
     154: iconst_0
     155: aload_3
     156: aastore
     157: dup
     158: iconst_1
     159: aload_0
     160: iload_2
     161: iconst_2
     162: iadd
     163: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     166: aastore
     167: areturn

  public com.google.common.net.HostAndPort withDefaultPort(int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_0
       8: invokevirtual #5                  // Method hasPort:()Z
      11: ifeq          16
      14: aload_0
      15: areturn
      16: new           #13                 // class com/google/common/net/HostAndPort
      19: dup
      20: aload_0
      21: getfield      #2                  // Field host:Ljava/lang/String;
      24: iload_1
      25: aload_0
      26: getfield      #4                  // Field hasBracketlessColons:Z
      29: invokespecial #14                 // Method "<init>":(Ljava/lang/String;IZ)V
      32: areturn

  public com.google.common.net.HostAndPort requireBracketsForIPv6();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasBracketlessColons:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #47                 // String Possible bracketless IPv6 literal: %s
      14: aload_0
      15: getfield      #2                  // Field host:Ljava/lang/String;
      18: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class com/google/common/net/HostAndPort
      11: ifeq          61
      14: aload_1
      15: checkcast     #13                 // class com/google/common/net/HostAndPort
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field host:Ljava/lang/String;
      23: aload_2
      24: getfield      #2                  // Field host:Ljava/lang/String;
      27: invokestatic  #48                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          59
      33: aload_0
      34: getfield      #3                  // Field port:I
      37: aload_2
      38: getfield      #3                  // Field port:I
      41: if_icmpne     59
      44: aload_0
      45: getfield      #4                  // Field hasBracketlessColons:Z
      48: aload_2
      49: getfield      #4                  // Field hasBracketlessColons:Z
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #49                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field host:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field port:I
      17: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #4                  // Field hasBracketlessColons:Z
      27: invokestatic  #51                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      30: aastore
      31: invokestatic  #52                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      34: ireturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #2                  // Field host:Ljava/lang/String;
       8: invokevirtual #40                 // Method java/lang/String.length:()I
      11: bipush        8
      13: iadd
      14: invokespecial #53                 // Method java/lang/StringBuilder."<init>":(I)V
      17: astore_1
      18: aload_0
      19: getfield      #2                  // Field host:Ljava/lang/String;
      22: bipush        58
      24: invokevirtual #19                 // Method java/lang/String.indexOf:(I)I
      27: iflt          52
      30: aload_1
      31: bipush        91
      33: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field host:Ljava/lang/String;
      40: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        93
      45: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: pop
      49: goto          61
      52: aload_1
      53: aload_0
      54: getfield      #2                  // Field host:Ljava/lang/String;
      57: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: invokevirtual #5                  // Method hasPort:()Z
      65: ifeq          82
      68: aload_1
      69: bipush        58
      71: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #3                  // Field port:I
      78: invokevirtual #55                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: pop
      82: aload_1
      83: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn

  private static boolean isValidPort(int);
    Code:
       0: iload_0
       1: iflt          14
       4: iload_0
       5: ldc           #56                 // int 65535
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
