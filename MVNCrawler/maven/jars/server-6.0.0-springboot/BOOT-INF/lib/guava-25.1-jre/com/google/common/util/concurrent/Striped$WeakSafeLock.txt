Compiled from "Striped.java"
final class com.google.common.util.concurrent.Striped$WeakSafeLock extends com.google.common.util.concurrent.ForwardingLock {
  private final java.util.concurrent.locks.Lock delegate;

  private final com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference;

  com.google.common.util.concurrent.Striped$WeakSafeLock(java.util.concurrent.locks.Lock, com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/util/concurrent/ForwardingLock."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Ljava/util/concurrent/locks/Lock;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field strongReference:Lcom/google/common/util/concurrent/Striped$WeakSafeReadWriteLock;
      14: return

  java.util.concurrent.locks.Lock delegate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/util/concurrent/locks/Lock;
       4: areturn

  public java.util.concurrent.locks.Condition newCondition();
    Code:
       0: new           #4                  // class com/google/common/util/concurrent/Striped$WeakSafeCondition
       3: dup
       4: aload_0
       5: getfield      #2                  // Field delegate:Ljava/util/concurrent/locks/Lock;
       8: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      13: aload_0
      14: getfield      #3                  // Field strongReference:Lcom/google/common/util/concurrent/Striped$WeakSafeReadWriteLock;
      17: invokespecial #6                  // Method com/google/common/util/concurrent/Striped$WeakSafeCondition."<init>":(Ljava/util/concurrent/locks/Condition;Lcom/google/common/util/concurrent/Striped$WeakSafeReadWriteLock;)V
      20: areturn
}
