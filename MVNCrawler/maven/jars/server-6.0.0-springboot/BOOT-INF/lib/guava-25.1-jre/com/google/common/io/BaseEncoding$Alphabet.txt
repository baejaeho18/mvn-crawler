Compiled from "BaseEncoding.java"
final class com.google.common.io.BaseEncoding$Alphabet {
  private final java.lang.String name;

  private final char[] chars;

  final int mask;

  final int bitsPerChar;

  final int charsPerChunk;

  final int bytesPerChunk;

  private final byte[] decodabet;

  private final boolean[] validPadding;

  com.google.common.io.BaseEncoding$Alphabet(java.lang.String, char[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/lang/String
      12: putfield      #5                  // Field name:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class "[C"
      23: putfield      #1                  // Field chars:[C
      26: aload_0
      27: aload_2
      28: arraylength
      29: getstatic     #7                  // Field java/math/RoundingMode.UNNECESSARY:Ljava/math/RoundingMode;
      32: invokestatic  #8                  // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
      35: putfield      #9                  // Field bitsPerChar:I
      38: goto          71
      41: astore_3
      42: new           #11                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #12                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #14                 // String Illegal alphabet length
      55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: arraylength
      60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: aload_3
      67: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: bipush        8
      73: aload_0
      74: getfield      #9                  // Field bitsPerChar:I
      77: invokestatic  #19                 // Method java/lang/Integer.lowestOneBit:(I)I
      80: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      83: istore_3
      84: aload_0
      85: bipush        8
      87: iload_3
      88: idiv
      89: putfield      #21                 // Field charsPerChunk:I
      92: aload_0
      93: aload_0
      94: getfield      #9                  // Field bitsPerChar:I
      97: iload_3
      98: idiv
      99: putfield      #22                 // Field bytesPerChunk:I
     102: goto          143
     105: astore        4
     107: new           #11                 // class java/lang/IllegalArgumentException
     110: dup
     111: new           #12                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #23                 // String Illegal alphabet
     120: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: new           #4                  // class java/lang/String
     126: dup
     127: aload_2
     128: invokespecial #24                 // Method java/lang/String."<init>":([C)V
     131: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: aload         4
     139: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     142: athrow
     143: aload_0
     144: aload_2
     145: arraylength
     146: iconst_1
     147: isub
     148: putfield      #25                 // Field mask:I
     151: sipush        128
     154: newarray       byte
     156: astore        4
     158: aload         4
     160: iconst_m1
     161: invokestatic  #27                 // Method java/util/Arrays.fill:([BB)V
     164: iconst_0
     165: istore        5
     167: iload         5
     169: aload_2
     170: arraylength
     171: if_icmpge     235
     174: aload_2
     175: iload         5
     177: caload
     178: istore        6
     180: iload         6
     182: aload         4
     184: arraylength
     185: if_icmpge     192
     188: iconst_1
     189: goto          193
     192: iconst_0
     193: ldc           #28                 // String Non-ASCII character: %s
     195: iload         6
     197: invokestatic  #29                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;C)V
     200: aload         4
     202: iload         6
     204: baload
     205: iconst_m1
     206: if_icmpne     213
     209: iconst_1
     210: goto          214
     213: iconst_0
     214: ldc           #30                 // String Duplicate character: %s
     216: iload         6
     218: invokestatic  #29                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;C)V
     221: aload         4
     223: iload         6
     225: iload         5
     227: i2b
     228: bastore
     229: iinc          5, 1
     232: goto          167
     235: aload_0
     236: aload         4
     238: putfield      #31                 // Field decodabet:[B
     241: aload_0
     242: getfield      #21                 // Field charsPerChunk:I
     245: newarray       boolean
     247: astore        5
     249: iconst_0
     250: istore        6
     252: iload         6
     254: aload_0
     255: getfield      #22                 // Field bytesPerChunk:I
     258: if_icmpge     286
     261: aload         5
     263: iload         6
     265: bipush        8
     267: imul
     268: aload_0
     269: getfield      #9                  // Field bitsPerChar:I
     272: getstatic     #32                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
     275: invokestatic  #33                 // Method com/google/common/math/IntMath.divide:(IILjava/math/RoundingMode;)I
     278: iconst_1
     279: bastore
     280: iinc          6, 1
     283: goto          252
     286: aload_0
     287: aload         5
     289: putfield      #34                 // Field validPadding:[Z
     292: return
    Exception table:
       from    to  target type
          26    38    41   Class java/lang/ArithmeticException
          84   102   105   Class java/lang/ArithmeticException

  char encode(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: iload_1
       5: caload
       6: ireturn

  boolean isValidPaddingStartPosition(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field validPadding:[Z
       4: iload_1
       5: aload_0
       6: getfield      #21                 // Field charsPerChunk:I
       9: irem
      10: baload
      11: ireturn

  boolean canDecode(char);
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpgt     20
       6: aload_0
       7: getfield      #31                 // Field decodabet:[B
      10: iload_1
      11: baload
      12: iconst_m1
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  int decode(char) throws com.google.common.io.BaseEncoding$DecodingException;
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmple     36
       6: new           #35                 // class com/google/common/io/BaseEncoding$DecodingException
       9: dup
      10: new           #12                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #36                 // String Unrecognized character: 0x
      19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_1
      23: invokestatic  #37                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #38                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #31                 // Field decodabet:[B
      40: iload_1
      41: baload
      42: istore_2
      43: iload_2
      44: iconst_m1
      45: if_icmpne     117
      48: iload_1
      49: bipush        32
      51: if_icmple     60
      54: iload_1
      55: bipush        127
      57: if_icmpne     90
      60: new           #35                 // class com/google/common/io/BaseEncoding$DecodingException
      63: dup
      64: new           #12                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #36                 // String Unrecognized character: 0x
      73: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: iload_1
      77: invokestatic  #37                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      80: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #38                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: new           #35                 // class com/google/common/io/BaseEncoding$DecodingException
      93: dup
      94: new           #12                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #39                 // String Unrecognized character:
     103: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: iload_1
     107: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     110: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #38                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: iload_2
     118: ireturn

  private boolean hasLowerCase();
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #41                 // Method com/google/common/base/Ascii.isLowerCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  private boolean hasUpperCase();
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #42                 // Method com/google/common/base/Ascii.isUpperCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  com.google.common.io.BaseEncoding$Alphabet upperCase();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method hasLowerCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #44                 // Method hasUpperCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #45                 // String Cannot call upperCase() on a mixed-case alphabet
      23: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #1                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #1                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #1                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #47                 // Method com/google/common/base/Ascii.toUpperCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #48                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: new           #12                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      74: aload_0
      75: getfield      #5                  // Field name:Ljava/lang/String;
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #49                 // String .upperCase()
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_1
      90: invokespecial #50                 // Method "<init>":(Ljava/lang/String;[C)V
      93: areturn

  com.google.common.io.BaseEncoding$Alphabet lowerCase();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method hasUpperCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #43                 // Method hasLowerCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #51                 // String Cannot call lowerCase() on a mixed-case alphabet
      23: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #1                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #1                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #1                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #52                 // Method com/google/common/base/Ascii.toLowerCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #48                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: new           #12                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      74: aload_0
      75: getfield      #5                  // Field name:Ljava/lang/String;
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #53                 // String .lowerCase()
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_1
      90: invokespecial #50                 // Method "<init>":(Ljava/lang/String;[C)V
      93: areturn

  public boolean matches(char);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #31                 // Field decodabet:[B
       5: arraylength
       6: if_icmpge     23
       9: aload_0
      10: getfield      #31                 // Field decodabet:[B
      13: iload_1
      14: baload
      15: iconst_m1
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #48                 // class com/google/common/io/BaseEncoding$Alphabet
       4: ifeq          24
       7: aload_1
       8: checkcast     #48                 // class com/google/common/io/BaseEncoding$Alphabet
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field chars:[C
      16: aload_2
      17: getfield      #1                  // Field chars:[C
      20: invokestatic  #54                 // Method java/util/Arrays.equals:([C[C)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: invokestatic  #55                 // Method java/util/Arrays.hashCode:([C)I
       7: ireturn

  static char[] access$000(com.google.common.io.BaseEncoding$Alphabet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: areturn
}
