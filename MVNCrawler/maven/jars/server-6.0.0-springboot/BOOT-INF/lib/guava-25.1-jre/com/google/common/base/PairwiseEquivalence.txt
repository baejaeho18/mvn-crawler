Compiled from "PairwiseEquivalence.java"
final class com.google.common.base.PairwiseEquivalence<T> extends com.google.common.base.Equivalence<java.lang.Iterable<T>> implements java.io.Serializable {
  final com.google.common.base.Equivalence<? super T> elementEquivalence;

  private static final long serialVersionUID;

  com.google.common.base.PairwiseEquivalence(com.google.common.base.Equivalence<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/base/Equivalence."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class com/google/common/base/Equivalence
      12: putfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
      15: return

  protected boolean doEquivalent(java.lang.Iterable<T>, java.lang.Iterable<T>);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_2
       8: invokeinterface #5,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload_3
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          59
      24: aload         4
      26: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          59
      34: aload_0
      35: getfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
      38: aload_3
      39: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: aload         4
      46: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: invokevirtual #8                  // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifne          15
      57: iconst_0
      58: ireturn
      59: aload_3
      60: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifne          82
      68: aload         4
      70: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifne          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ireturn

  protected int doHash(java.lang.Iterable<T>);
    Code:
       0: ldc           #9                  // int 78721
       2: istore_2
       3: aload_1
       4: invokeinterface #5,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_3
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore        4
      27: iload_2
      28: sipush        24943
      31: imul
      32: aload_0
      33: getfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
      36: aload         4
      38: invokevirtual #10                 // Method com/google/common/base/Equivalence.hash:(Ljava/lang/Object;)I
      41: iadd
      42: istore_2
      43: goto          10
      46: iload_2
      47: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #11                 // class com/google/common/base/PairwiseEquivalence
       4: ifeq          24
       7: aload_1
       8: checkcast     #11                 // class com/google/common/base/PairwiseEquivalence
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
      16: aload_2
      17: getfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
      20: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
       4: invokevirtual #13                 // Method java/lang/Object.hashCode:()I
       7: ldc           #14                 // int 1185147655
       9: ixor
      10: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #4                  // Field elementEquivalence:Lcom/google/common/base/Equivalence;
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #18                 // String .pairwise()
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  protected int doHash(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class java/lang/Iterable
       5: invokevirtual #22                 // Method doHash:(Ljava/lang/Iterable;)I
       8: ireturn

  protected boolean doEquivalent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class java/lang/Iterable
       5: aload_2
       6: checkcast     #21                 // class java/lang/Iterable
       9: invokevirtual #23                 // Method doEquivalent:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Z
      12: ireturn
}
