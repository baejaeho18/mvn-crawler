Compiled from "LongMath.java"
public final class com.google.common.math.LongMath {
  static final long MAX_SIGNED_POWER_OF_TWO;

  static final long MAX_POWER_OF_SQRT2_UNSIGNED;

  static final byte[] maxLog10ForLeadingZeros;

  static final long[] powersOf10;

  static final long[] halfPowersOf10;

  static final long FLOOR_SQRT_MAX_LONG;

  static final long[] factorials;

  static final int[] biggestBinomials;

  static final int[] biggestSimpleBinomials;

  private static final int SIEVE_30;

  private static final long[][] millerRabinBaseSets;

  public static long ceilingPowerOfTwo(long);
    Code:
       0: ldc           #2                  // String x
       2: lload_0
       3: invokestatic  #3                  // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;J)J
       6: pop2
       7: lload_0
       8: ldc2_w        #5                  // long 4611686018427387904l
      11: lcmp
      12: ifle          47
      15: new           #7                  // class java/lang/ArithmeticException
      18: dup
      19: new           #8                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #10                 // String ceilingPowerOfTwo(
      28: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: lload_0
      32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      35: ldc           #13                 // String ) is not representable as a long
      37: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #15                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: lconst_1
      48: lload_0
      49: lconst_1
      50: lsub
      51: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      54: ineg
      55: lshl
      56: lreturn

  public static long floorPowerOfTwo(long);
    Code:
       0: ldc           #2                  // String x
       2: lload_0
       3: invokestatic  #3                  // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;J)J
       6: pop2
       7: lconst_1
       8: bipush        63
      10: lload_0
      11: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      14: isub
      15: lshl
      16: lreturn

  public static boolean isPowerOfTwo(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: lload_0
      12: lload_0
      13: lconst_1
      14: lsub
      15: land
      16: lconst_0
      17: lcmp
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: iand
      27: ireturn

  static int lessThanBranchFree(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lsub
       3: ldc2_w        #17                 // long -1l
       6: lxor
       7: ldc2_w        #17                 // long -1l
      10: lxor
      11: bipush        63
      13: lushr
      14: l2i
      15: ireturn

  public static int log2(long, java.math.RoundingMode);
    Code:
       0: ldc           #2                  // String x
       2: lload_0
       3: invokestatic  #3                  // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;J)J
       6: pop2
       7: getstatic     #19                 // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      10: aload_2
      11: invokevirtual #20                 // Method java/math/RoundingMode.ordinal:()I
      14: iaload
      15: tableswitch   { // 1 to 8
                     1: 60
                     2: 67
                     3: 67
                     4: 75
                     5: 75
                     6: 85
                     7: 85
                     8: 85
               default: 113
          }
      60: lload_0
      61: invokestatic  #21                 // Method isPowerOfTwo:(J)Z
      64: invokestatic  #22                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      67: bipush        63
      69: lload_0
      70: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      73: isub
      74: ireturn
      75: bipush        64
      77: lload_0
      78: lconst_1
      79: lsub
      80: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      83: isub
      84: ireturn
      85: lload_0
      86: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      89: istore_3
      90: ldc2_w        #23                 // long -5402926248376769404l
      93: iload_3
      94: lushr
      95: lstore        4
      97: bipush        63
      99: iload_3
     100: isub
     101: istore        6
     103: iload         6
     105: lload         4
     107: lload_0
     108: invokestatic  #25                 // Method lessThanBranchFree:(JJ)I
     111: iadd
     112: ireturn
     113: new           #26                 // class java/lang/AssertionError
     116: dup
     117: ldc           #27                 // String impossible
     119: invokespecial #28                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     122: athrow

  public static int log10(long, java.math.RoundingMode);
    Code:
       0: ldc           #2                  // String x
       2: lload_0
       3: invokestatic  #3                  // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;J)J
       6: pop2
       7: lload_0
       8: invokestatic  #29                 // Method log10Floor:(J)I
      11: istore_3
      12: getstatic     #30                 // Field powersOf10:[J
      15: iload_3
      16: laload
      17: lstore        4
      19: getstatic     #19                 // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      22: aload_2
      23: invokevirtual #20                 // Method java/math/RoundingMode.ordinal:()I
      26: iaload
      27: tableswitch   { // 1 to 8
                     1: 72
                     2: 87
                     3: 87
                     4: 89
                     5: 89
                     6: 98
                     7: 98
                     8: 98
               default: 110
          }
      72: lload_0
      73: lload         4
      75: lcmp
      76: ifne          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: invokestatic  #22                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      87: iload_3
      88: ireturn
      89: iload_3
      90: lload         4
      92: lload_0
      93: invokestatic  #25                 // Method lessThanBranchFree:(JJ)I
      96: iadd
      97: ireturn
      98: iload_3
      99: getstatic     #31                 // Field halfPowersOf10:[J
     102: iload_3
     103: laload
     104: lload_0
     105: invokestatic  #25                 // Method lessThanBranchFree:(JJ)I
     108: iadd
     109: ireturn
     110: new           #26                 // class java/lang/AssertionError
     113: dup
     114: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     117: athrow

  static int log10Floor(long);
    Code:
       0: getstatic     #33                 // Field maxLog10ForLeadingZeros:[B
       3: lload_0
       4: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
       7: baload
       8: istore_2
       9: iload_2
      10: lload_0
      11: getstatic     #30                 // Field powersOf10:[J
      14: iload_2
      15: laload
      16: invokestatic  #25                 // Method lessThanBranchFree:(JJ)I
      19: isub
      20: ireturn

  public static long pow(long, int);
    Code:
       0: ldc           #34                 // String exponent
       2: iload_2
       3: invokestatic  #35                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc2_w        #36                 // long -2l
      10: lload_0
      11: lcmp
      12: ifgt          133
      15: lload_0
      16: ldc2_w        #38                 // long 2l
      19: lcmp
      20: ifgt          133
      23: lload_0
      24: l2i
      25: tableswitch   { // -2 to 2
                    -2: 100
                    -1: 72
                     0: 60
                     1: 70
                     2: 86
               default: 125
          }
      60: iload_2
      61: ifne          68
      64: lconst_1
      65: goto          69
      68: lconst_0
      69: lreturn
      70: lconst_1
      71: lreturn
      72: iload_2
      73: iconst_1
      74: iand
      75: ifne          82
      78: lconst_1
      79: goto          85
      82: ldc2_w        #17                 // long -1l
      85: lreturn
      86: iload_2
      87: bipush        64
      89: if_icmpge     98
      92: lconst_1
      93: iload_2
      94: lshl
      95: goto          99
      98: lconst_0
      99: lreturn
     100: iload_2
     101: bipush        64
     103: if_icmpge     123
     106: iload_2
     107: iconst_1
     108: iand
     109: ifne          118
     112: lconst_1
     113: iload_2
     114: lshl
     115: goto          122
     118: lconst_1
     119: iload_2
     120: lshl
     121: lneg
     122: lreturn
     123: lconst_0
     124: lreturn
     125: new           #26                 // class java/lang/AssertionError
     128: dup
     129: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     132: athrow
     133: lconst_1
     134: lstore_3
     135: iload_2
     136: lookupswitch  { // 2
                     0: 164
                     1: 166
               default: 170
          }
     164: lload_3
     165: lreturn
     166: lload_3
     167: lload_0
     168: lmul
     169: lreturn
     170: lload_3
     171: iload_2
     172: iconst_1
     173: iand
     174: ifne          181
     177: lconst_1
     178: goto          182
     181: lload_0
     182: lmul
     183: lstore_3
     184: lload_0
     185: lload_0
     186: lmul
     187: lstore_0
     188: iload_2
     189: iconst_1
     190: ishr
     191: istore_2
     192: goto          135

  public static long sqrt(long, java.math.RoundingMode);
    Code:
       0: ldc           #2                  // String x
       2: lload_0
       3: invokestatic  #40                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
       6: pop2
       7: lload_0
       8: invokestatic  #41                 // Method fitsInInt:(J)Z
      11: ifeq          22
      14: lload_0
      15: l2i
      16: aload_2
      17: invokestatic  #42                 // Method com/google/common/math/IntMath.sqrt:(ILjava/math/RoundingMode;)I
      20: i2l
      21: lreturn
      22: lload_0
      23: l2d
      24: invokestatic  #43                 // Method java/lang/Math.sqrt:(D)D
      27: d2l
      28: lstore_3
      29: lload_3
      30: lload_3
      31: lmul
      32: lstore        5
      34: getstatic     #19                 // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      37: aload_2
      38: invokevirtual #20                 // Method java/math/RoundingMode.ordinal:()I
      41: iaload
      42: tableswitch   { // 1 to 8
                     1: 88
                     2: 105
                     3: 105
                     4: 118
                     5: 118
                     6: 131
                     7: 131
                     8: 131
               default: 169
          }
      88: lload         5
      90: lload_0
      91: lcmp
      92: ifne          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokestatic  #22                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
     103: lload_3
     104: lreturn
     105: lload_0
     106: lload         5
     108: lcmp
     109: ifge          116
     112: lload_3
     113: lconst_1
     114: lsub
     115: lreturn
     116: lload_3
     117: lreturn
     118: lload_0
     119: lload         5
     121: lcmp
     122: ifle          129
     125: lload_3
     126: lconst_1
     127: ladd
     128: lreturn
     129: lload_3
     130: lreturn
     131: lload_3
     132: lload_0
     133: lload         5
     135: lcmp
     136: ifge          143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: i2l
     145: lsub
     146: lstore        7
     148: lload         7
     150: lload         7
     152: lmul
     153: lload         7
     155: ladd
     156: lstore        9
     158: lload         7
     160: lload         9
     162: lload_0
     163: invokestatic  #25                 // Method lessThanBranchFree:(JJ)I
     166: i2l
     167: ladd
     168: lreturn
     169: new           #26                 // class java/lang/AssertionError
     172: dup
     173: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     176: athrow

  public static long divide(long, long, java.math.RoundingMode);
    Code:
       0: aload         4
       2: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: lload_0
       7: lload_2
       8: ldiv
       9: lstore        5
      11: lload_0
      12: lload_2
      13: lload         5
      15: lmul
      16: lsub
      17: lstore        7
      19: lload         7
      21: lconst_0
      22: lcmp
      23: ifne          29
      26: lload         5
      28: lreturn
      29: iconst_1
      30: lload_0
      31: lload_2
      32: lxor
      33: bipush        63
      35: lshr
      36: l2i
      37: ior
      38: istore        9
      40: getstatic     #19                 // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      43: aload         4
      45: invokevirtual #20                 // Method java/math/RoundingMode.ordinal:()I
      48: iaload
      49: tableswitch   { // 1 to 8
                     1: 96
                     2: 111
                     3: 138
                     4: 117
                     5: 123
                     6: 153
                     7: 153
                     8: 153
               default: 243
          }
      96: lload         7
      98: lconst_0
      99: lcmp
     100: ifne          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: invokestatic  #22                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
     111: iconst_0
     112: istore        10
     114: goto          251
     117: iconst_1
     118: istore        10
     120: goto          251
     123: iload         9
     125: ifle          132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: istore        10
     135: goto          251
     138: iload         9
     140: ifge          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: istore        10
     150: goto          251
     153: lload         7
     155: invokestatic  #45                 // Method java/lang/Math.abs:(J)J
     158: lstore        11
     160: lload         11
     162: lload_2
     163: invokestatic  #45                 // Method java/lang/Math.abs:(J)J
     166: lload         11
     168: lsub
     169: lsub
     170: lstore        13
     172: lload         13
     174: lconst_0
     175: lcmp
     176: ifne          226
     179: aload         4
     181: getstatic     #46                 // Field java/math/RoundingMode.HALF_UP:Ljava/math/RoundingMode;
     184: if_acmpne     191
     187: iconst_1
     188: goto          192
     191: iconst_0
     192: aload         4
     194: getstatic     #47                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
     197: if_acmpne     204
     200: iconst_1
     201: goto          205
     204: iconst_0
     205: lload         5
     207: lconst_1
     208: land
     209: lconst_0
     210: lcmp
     211: ifeq          218
     214: iconst_1
     215: goto          219
     218: iconst_0
     219: iand
     220: ior
     221: istore        10
     223: goto          251
     226: lload         13
     228: lconst_0
     229: lcmp
     230: ifle          237
     233: iconst_1
     234: goto          238
     237: iconst_0
     238: istore        10
     240: goto          251
     243: new           #26                 // class java/lang/AssertionError
     246: dup
     247: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     250: athrow
     251: iload         10
     253: ifeq          265
     256: lload         5
     258: iload         9
     260: i2l
     261: ladd
     262: goto          267
     265: lload         5
     267: lreturn

  public static int mod(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: i2l
       3: invokestatic  #48                 // Method mod:(JJ)J
       6: l2i
       7: ireturn

  public static long mod(long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifgt          16
       6: new           #7                  // class java/lang/ArithmeticException
       9: dup
      10: ldc           #49                 // String Modulus must be positive
      12: invokespecial #15                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: lload_0
      17: lload_2
      18: lrem
      19: lstore        4
      21: lload         4
      23: lconst_0
      24: lcmp
      25: iflt          33
      28: lload         4
      30: goto          37
      33: lload         4
      35: lload_2
      36: ladd
      37: lreturn

  public static long gcd(long, long);
    Code:
       0: ldc           #50                 // String a
       2: lload_0
       3: invokestatic  #40                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
       6: pop2
       7: ldc           #51                 // String b
       9: lload_2
      10: invokestatic  #40                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
      13: pop2
      14: lload_0
      15: lconst_0
      16: lcmp
      17: ifne          22
      20: lload_2
      21: lreturn
      22: lload_2
      23: lconst_0
      24: lcmp
      25: ifne          30
      28: lload_0
      29: lreturn
      30: lload_0
      31: invokestatic  #52                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      34: istore        4
      36: lload_0
      37: iload         4
      39: lshr
      40: lstore_0
      41: lload_2
      42: invokestatic  #52                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      45: istore        5
      47: lload_2
      48: iload         5
      50: lshr
      51: lstore_2
      52: lload_0
      53: lload_2
      54: lcmp
      55: ifeq          97
      58: lload_0
      59: lload_2
      60: lsub
      61: lstore        6
      63: lload         6
      65: lload         6
      67: bipush        63
      69: lshr
      70: land
      71: lstore        8
      73: lload         6
      75: lload         8
      77: lsub
      78: lload         8
      80: lsub
      81: lstore_0
      82: lload_2
      83: lload         8
      85: ladd
      86: lstore_2
      87: lload_0
      88: lload_0
      89: invokestatic  #52                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      92: lshr
      93: lstore_0
      94: goto          52
      97: lload_0
      98: iload         4
     100: iload         5
     102: invokestatic  #53                 // Method java/lang/Math.min:(II)I
     105: lshl
     106: lreturn

  public static long checkedAdd(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ladd
       3: lstore        4
       5: lload_0
       6: lload_2
       7: lxor
       8: lconst_0
       9: lcmp
      10: ifge          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: lload_0
      19: lload         4
      21: lxor
      22: lconst_0
      23: lcmp
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ior
      33: ldc           #54                 // String checkedAdd
      35: lload_0
      36: lload_2
      37: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
      40: lload         4
      42: lreturn

  public static long checkedSubtract(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lsub
       3: lstore        4
       5: lload_0
       6: lload_2
       7: lxor
       8: lconst_0
       9: lcmp
      10: iflt          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: lload_0
      19: lload         4
      21: lxor
      22: lconst_0
      23: lcmp
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ior
      33: ldc           #56                 // String checkedSubtract
      35: lload_0
      36: lload_2
      37: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
      40: lload         4
      42: lreturn

  public static long checkedMultiply(long, long);
    Code:
       0: lload_0
       1: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
       4: lload_0
       5: ldc2_w        #17                 // long -1l
       8: lxor
       9: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      12: iadd
      13: lload_2
      14: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      17: iadd
      18: lload_2
      19: ldc2_w        #17                 // long -1l
      22: lxor
      23: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      26: iadd
      27: istore        4
      29: iload         4
      31: bipush        65
      33: if_icmple     40
      36: lload_0
      37: lload_2
      38: lmul
      39: lreturn
      40: iload         4
      42: bipush        64
      44: if_icmplt     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ldc           #57                 // String checkedMultiply
      54: lload_0
      55: lload_2
      56: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
      59: lload_0
      60: lconst_0
      61: lcmp
      62: iflt          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: lload_2
      71: ldc2_w        #58                 // long -9223372036854775808l
      74: lcmp
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ior
      84: ldc           #57                 // String checkedMultiply
      86: lload_0
      87: lload_2
      88: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
      91: lload_0
      92: lload_2
      93: lmul
      94: lstore        5
      96: lload_0
      97: lconst_0
      98: lcmp
      99: ifeq          111
     102: lload         5
     104: lload_0
     105: ldiv
     106: lload_2
     107: lcmp
     108: ifne          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: ldc           #57                 // String checkedMultiply
     118: lload_0
     119: lload_2
     120: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
     123: lload         5
     125: lreturn

  public static long checkedPow(long, int);
    Code:
       0: ldc           #34                 // String exponent
       2: iload_2
       3: invokestatic  #35                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: lload_0
       8: ldc2_w        #36                 // long -2l
      11: lcmp
      12: iflt          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: lload_0
      21: ldc2_w        #38                 // long 2l
      24: lcmp
      25: ifgt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: iand
      34: ifeq          166
      37: lload_0
      38: l2i
      39: tableswitch   { // -2 to 2
                    -2: 121
                    -1: 84
                     0: 72
                     1: 82
                     2: 98
               default: 158
          }
      72: iload_2
      73: ifne          80
      76: lconst_1
      77: goto          81
      80: lconst_0
      81: lreturn
      82: lconst_1
      83: lreturn
      84: iload_2
      85: iconst_1
      86: iand
      87: ifne          94
      90: lconst_1
      91: goto          97
      94: ldc2_w        #17                 // long -1l
      97: lreturn
      98: iload_2
      99: bipush        63
     101: if_icmpge     108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ldc           #60                 // String checkedPow
     111: lload_0
     112: iload_2
     113: i2l
     114: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
     117: lconst_1
     118: iload_2
     119: lshl
     120: lreturn
     121: iload_2
     122: bipush        64
     124: if_icmpge     131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: ldc           #60                 // String checkedPow
     134: lload_0
     135: iload_2
     136: i2l
     137: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
     140: iload_2
     141: iconst_1
     142: iand
     143: ifne          152
     146: lconst_1
     147: iload_2
     148: lshl
     149: goto          157
     152: ldc2_w        #17                 // long -1l
     155: iload_2
     156: lshl
     157: lreturn
     158: new           #26                 // class java/lang/AssertionError
     161: dup
     162: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     165: athrow
     166: lconst_1
     167: lstore_3
     168: iload_2
     169: lookupswitch  { // 2
                     0: 196
                     1: 198
               default: 204
          }
     196: lload_3
     197: lreturn
     198: lload_3
     199: lload_0
     200: invokestatic  #61                 // Method checkedMultiply:(JJ)J
     203: lreturn
     204: iload_2
     205: iconst_1
     206: iand
     207: ifeq          216
     210: lload_3
     211: lload_0
     212: invokestatic  #61                 // Method checkedMultiply:(JJ)J
     215: lstore_3
     216: iload_2
     217: iconst_1
     218: ishr
     219: istore_2
     220: iload_2
     221: ifle          168
     224: ldc2_w        #62                 // long -3037000499l
     227: lload_0
     228: lcmp
     229: ifgt          244
     232: lload_0
     233: ldc2_w        #64                 // long 3037000499l
     236: lcmp
     237: ifgt          244
     240: iconst_1
     241: goto          245
     244: iconst_0
     245: ldc           #60                 // String checkedPow
     247: lload_0
     248: iload_2
     249: i2l
     250: invokestatic  #55                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;JJ)V
     253: lload_0
     254: lload_0
     255: lmul
     256: lstore_0
     257: goto          168

  public static long saturatedAdd(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ladd
       3: lstore        4
       5: lload_0
       6: lload_2
       7: lxor
       8: lconst_0
       9: lcmp
      10: ifge          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: lload_0
      19: lload         4
      21: lxor
      22: lconst_0
      23: lcmp
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ior
      33: ifeq          39
      36: lload         4
      38: lreturn
      39: ldc2_w        #66                 // long 9223372036854775807l
      42: lload         4
      44: bipush        63
      46: lushr
      47: lconst_1
      48: lxor
      49: ladd
      50: lreturn

  public static long saturatedSubtract(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lsub
       3: lstore        4
       5: lload_0
       6: lload_2
       7: lxor
       8: lconst_0
       9: lcmp
      10: iflt          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: lload_0
      19: lload         4
      21: lxor
      22: lconst_0
      23: lcmp
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ior
      33: ifeq          39
      36: lload         4
      38: lreturn
      39: ldc2_w        #66                 // long 9223372036854775807l
      42: lload         4
      44: bipush        63
      46: lushr
      47: lconst_1
      48: lxor
      49: ladd
      50: lreturn

  public static long saturatedMultiply(long, long);
    Code:
       0: lload_0
       1: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
       4: lload_0
       5: ldc2_w        #17                 // long -1l
       8: lxor
       9: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      12: iadd
      13: lload_2
      14: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      17: iadd
      18: lload_2
      19: ldc2_w        #17                 // long -1l
      22: lxor
      23: invokestatic  #16                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      26: iadd
      27: istore        4
      29: iload         4
      31: bipush        65
      33: if_icmple     40
      36: lload_0
      37: lload_2
      38: lmul
      39: lreturn
      40: ldc2_w        #66                 // long 9223372036854775807l
      43: lload_0
      44: lload_2
      45: lxor
      46: bipush        63
      48: lushr
      49: ladd
      50: lstore        5
      52: iload         4
      54: bipush        64
      56: if_icmpge     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: lload_0
      65: lconst_0
      66: lcmp
      67: ifge          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: lload_2
      76: ldc2_w        #58                 // long -9223372036854775808l
      79: lcmp
      80: ifne          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: iand
      89: ior
      90: ifeq          96
      93: lload         5
      95: lreturn
      96: lload_0
      97: lload_2
      98: lmul
      99: lstore        7
     101: lload_0
     102: lconst_0
     103: lcmp
     104: ifeq          116
     107: lload         7
     109: lload_0
     110: ldiv
     111: lload_2
     112: lcmp
     113: ifne          119
     116: lload         7
     118: lreturn
     119: lload         5
     121: lreturn

  public static long saturatedPow(long, int);
    Code:
       0: ldc           #34                 // String exponent
       2: iload_2
       3: invokestatic  #35                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: lload_0
       8: ldc2_w        #36                 // long -2l
      11: lcmp
      12: iflt          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: lload_0
      21: ldc2_w        #38                 // long 2l
      24: lcmp
      25: ifgt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: iand
      34: ifeq          153
      37: lload_0
      38: l2i
      39: tableswitch   { // -2 to 2
                    -2: 112
                    -1: 84
                     0: 72
                     1: 82
                     2: 98
               default: 145
          }
      72: iload_2
      73: ifne          80
      76: lconst_1
      77: goto          81
      80: lconst_0
      81: lreturn
      82: lconst_1
      83: lreturn
      84: iload_2
      85: iconst_1
      86: iand
      87: ifne          94
      90: lconst_1
      91: goto          97
      94: ldc2_w        #17                 // long -1l
      97: lreturn
      98: iload_2
      99: bipush        63
     101: if_icmplt     108
     104: ldc2_w        #66                 // long 9223372036854775807l
     107: lreturn
     108: lconst_1
     109: iload_2
     110: lshl
     111: lreturn
     112: iload_2
     113: bipush        64
     115: if_icmplt     127
     118: ldc2_w        #66                 // long 9223372036854775807l
     121: iload_2
     122: iconst_1
     123: iand
     124: i2l
     125: ladd
     126: lreturn
     127: iload_2
     128: iconst_1
     129: iand
     130: ifne          139
     133: lconst_1
     134: iload_2
     135: lshl
     136: goto          144
     139: ldc2_w        #17                 // long -1l
     142: iload_2
     143: lshl
     144: lreturn
     145: new           #26                 // class java/lang/AssertionError
     148: dup
     149: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     152: athrow
     153: lconst_1
     154: lstore_3
     155: ldc2_w        #66                 // long 9223372036854775807l
     158: lload_0
     159: bipush        63
     161: lushr
     162: iload_2
     163: iconst_1
     164: iand
     165: i2l
     166: land
     167: ladd
     168: lstore        5
     170: iload_2
     171: lookupswitch  { // 2
                     0: 196
                     1: 198
               default: 204
          }
     196: lload_3
     197: lreturn
     198: lload_3
     199: lload_0
     200: invokestatic  #68                 // Method saturatedMultiply:(JJ)J
     203: lreturn
     204: iload_2
     205: iconst_1
     206: iand
     207: ifeq          216
     210: lload_3
     211: lload_0
     212: invokestatic  #68                 // Method saturatedMultiply:(JJ)J
     215: lstore_3
     216: iload_2
     217: iconst_1
     218: ishr
     219: istore_2
     220: iload_2
     221: ifle          170
     224: ldc2_w        #62                 // long -3037000499l
     227: lload_0
     228: lcmp
     229: ifle          236
     232: iconst_1
     233: goto          237
     236: iconst_0
     237: lload_0
     238: ldc2_w        #64                 // long 3037000499l
     241: lcmp
     242: ifle          249
     245: iconst_1
     246: goto          250
     249: iconst_0
     250: ior
     251: ifeq          257
     254: lload         5
     256: lreturn
     257: lload_0
     258: lload_0
     259: lmul
     260: lstore_0
     261: goto          170

  public static long factorial(int);
    Code:
       0: ldc           #69                 // String n
       2: iload_0
       3: invokestatic  #35                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: getstatic     #70                 // Field factorials:[J
      11: arraylength
      12: if_icmpge     23
      15: getstatic     #70                 // Field factorials:[J
      18: iload_0
      19: laload
      20: goto          26
      23: ldc2_w        #66                 // long 9223372036854775807l
      26: lreturn

  public static long binomial(int, int);
    Code:
       0: ldc           #69                 // String n
       2: iload_0
       3: invokestatic  #35                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc           #71                 // String k
       9: iload_1
      10: invokestatic  #35                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
      13: pop
      14: iload_1
      15: iload_0
      16: if_icmpgt     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #72                 // String k (%s) > n (%s)
      26: iload_1
      27: iload_0
      28: invokestatic  #73                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;II)V
      31: iload_1
      32: iload_0
      33: iconst_1
      34: ishr
      35: if_icmple     42
      38: iload_0
      39: iload_1
      40: isub
      41: istore_1
      42: iload_1
      43: lookupswitch  { // 2
                     0: 68
                     1: 70
               default: 73
          }
      68: lconst_1
      69: lreturn
      70: iload_0
      71: i2l
      72: lreturn
      73: iload_0
      74: getstatic     #70                 // Field factorials:[J
      77: arraylength
      78: if_icmpge     101
      81: getstatic     #70                 // Field factorials:[J
      84: iload_0
      85: laload
      86: getstatic     #70                 // Field factorials:[J
      89: iload_1
      90: laload
      91: getstatic     #70                 // Field factorials:[J
      94: iload_0
      95: iload_1
      96: isub
      97: laload
      98: lmul
      99: ldiv
     100: lreturn
     101: iload_1
     102: getstatic     #74                 // Field biggestBinomials:[I
     105: arraylength
     106: if_icmpge     118
     109: iload_0
     110: getstatic     #74                 // Field biggestBinomials:[I
     113: iload_1
     114: iaload
     115: if_icmple     122
     118: ldc2_w        #66                 // long 9223372036854775807l
     121: lreturn
     122: iload_1
     123: getstatic     #75                 // Field biggestSimpleBinomials:[I
     126: arraylength
     127: if_icmpge     176
     130: iload_0
     131: getstatic     #75                 // Field biggestSimpleBinomials:[I
     134: iload_1
     135: iaload
     136: if_icmpgt     176
     139: iload_0
     140: iinc          0, -1
     143: i2l
     144: lstore_2
     145: iconst_2
     146: istore        4
     148: iload         4
     150: iload_1
     151: if_icmpgt     174
     154: lload_2
     155: iload_0
     156: i2l
     157: lmul
     158: lstore_2
     159: lload_2
     160: iload         4
     162: i2l
     163: ldiv
     164: lstore_2
     165: iinc          0, -1
     168: iinc          4, 1
     171: goto          148
     174: lload_2
     175: lreturn
     176: iload_0
     177: i2l
     178: getstatic     #76                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
     181: invokestatic  #77                 // Method log2:(JLjava/math/RoundingMode;)I
     184: istore_2
     185: lconst_1
     186: lstore_3
     187: iload_0
     188: iinc          0, -1
     191: i2l
     192: lstore        5
     194: lconst_1
     195: lstore        7
     197: iload_2
     198: istore        9
     200: iconst_2
     201: istore        10
     203: iload         10
     205: iload_1
     206: if_icmpgt     272
     209: iload         9
     211: iload_2
     212: iadd
     213: bipush        63
     215: if_icmpge     242
     218: lload         5
     220: iload_0
     221: i2l
     222: lmul
     223: lstore        5
     225: lload         7
     227: iload         10
     229: i2l
     230: lmul
     231: lstore        7
     233: iload         9
     235: iload_2
     236: iadd
     237: istore        9
     239: goto          263
     242: lload_3
     243: lload         5
     245: lload         7
     247: invokestatic  #78                 // Method multiplyFraction:(JJJ)J
     250: lstore_3
     251: iload_0
     252: i2l
     253: lstore        5
     255: iload         10
     257: i2l
     258: lstore        7
     260: iload_2
     261: istore        9
     263: iinc          10, 1
     266: iinc          0, -1
     269: goto          203
     272: lload_3
     273: lload         5
     275: lload         7
     277: invokestatic  #78                 // Method multiplyFraction:(JJJ)J
     280: lreturn

  static long multiplyFraction(long, long, long);
    Code:
       0: lload_0
       1: lconst_1
       2: lcmp
       3: ifne          11
       6: lload_2
       7: lload         4
       9: ldiv
      10: lreturn
      11: lload_0
      12: lload         4
      14: invokestatic  #79                 // Method gcd:(JJ)J
      17: lstore        6
      19: lload_0
      20: lload         6
      22: ldiv
      23: lstore_0
      24: lload         4
      26: lload         6
      28: ldiv
      29: lstore        4
      31: lload_0
      32: lload_2
      33: lload         4
      35: ldiv
      36: lmul
      37: lreturn

  static boolean fitsInInt(long);
    Code:
       0: lload_0
       1: l2i
       2: i2l
       3: lload_0
       4: lcmp
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static long mean(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: land
       3: lload_0
       4: lload_2
       5: lxor
       6: iconst_1
       7: lshr
       8: ladd
       9: lreturn

  public static boolean isPrime(long);
    Code:
       0: lload_0
       1: ldc2_w        #38                 // long 2l
       4: lcmp
       5: ifge          17
       8: ldc           #69                 // String n
      10: lload_0
      11: invokestatic  #40                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
      14: pop2
      15: iconst_0
      16: ireturn
      17: lload_0
      18: ldc2_w        #38                 // long 2l
      21: lcmp
      22: ifeq          65
      25: lload_0
      26: ldc2_w        #80                 // long 3l
      29: lcmp
      30: ifeq          65
      33: lload_0
      34: ldc2_w        #82                 // long 5l
      37: lcmp
      38: ifeq          65
      41: lload_0
      42: ldc2_w        #84                 // long 7l
      45: lcmp
      46: ifeq          65
      49: lload_0
      50: ldc2_w        #86                 // long 11l
      53: lcmp
      54: ifeq          65
      57: lload_0
      58: ldc2_w        #88                 // long 13l
      61: lcmp
      62: ifne          67
      65: iconst_1
      66: ireturn
      67: ldc           #90                 // int -545925251
      69: iconst_1
      70: lload_0
      71: ldc2_w        #91                 // long 30l
      74: lrem
      75: l2i
      76: ishl
      77: iand
      78: ifeq          83
      81: iconst_0
      82: ireturn
      83: lload_0
      84: ldc2_w        #84                 // long 7l
      87: lrem
      88: lconst_0
      89: lcmp
      90: ifeq          113
      93: lload_0
      94: ldc2_w        #86                 // long 11l
      97: lrem
      98: lconst_0
      99: lcmp
     100: ifeq          113
     103: lload_0
     104: ldc2_w        #88                 // long 13l
     107: lrem
     108: lconst_0
     109: lcmp
     110: ifne          115
     113: iconst_0
     114: ireturn
     115: lload_0
     116: ldc2_w        #93                 // long 289l
     119: lcmp
     120: ifge          125
     123: iconst_1
     124: ireturn
     125: getstatic     #95                 // Field millerRabinBaseSets:[[J
     128: astore_2
     129: aload_2
     130: arraylength
     131: istore_3
     132: iconst_0
     133: istore        4
     135: iload         4
     137: iload_3
     138: if_icmpge     195
     141: aload_2
     142: iload         4
     144: aaload
     145: astore        5
     147: lload_0
     148: aload         5
     150: iconst_0
     151: laload
     152: lcmp
     153: ifgt          189
     156: iconst_1
     157: istore        6
     159: iload         6
     161: aload         5
     163: arraylength
     164: if_icmpge     187
     167: aload         5
     169: iload         6
     171: laload
     172: lload_0
     173: invokestatic  #96                 // Method com/google/common/math/LongMath$MillerRabinTester.test:(JJ)Z
     176: ifne          181
     179: iconst_0
     180: ireturn
     181: iinc          6, 1
     184: goto          159
     187: iconst_1
     188: ireturn
     189: iinc          4, 1
     192: goto          135
     195: new           #26                 // class java/lang/AssertionError
     198: dup
     199: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
     202: athrow

  private com.google.common.math.LongMath();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: bipush        64
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        19
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        18
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        18
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        18
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        18
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        17
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        17
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        17
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        16
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        16
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        16
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        15
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        15
      75: bastore
      76: dup
      77: bipush        13
      79: bipush        15
      81: bastore
      82: dup
      83: bipush        14
      85: bipush        15
      87: bastore
      88: dup
      89: bipush        15
      91: bipush        14
      93: bastore
      94: dup
      95: bipush        16
      97: bipush        14
      99: bastore
     100: dup
     101: bipush        17
     103: bipush        14
     105: bastore
     106: dup
     107: bipush        18
     109: bipush        13
     111: bastore
     112: dup
     113: bipush        19
     115: bipush        13
     117: bastore
     118: dup
     119: bipush        20
     121: bipush        13
     123: bastore
     124: dup
     125: bipush        21
     127: bipush        12
     129: bastore
     130: dup
     131: bipush        22
     133: bipush        12
     135: bastore
     136: dup
     137: bipush        23
     139: bipush        12
     141: bastore
     142: dup
     143: bipush        24
     145: bipush        12
     147: bastore
     148: dup
     149: bipush        25
     151: bipush        11
     153: bastore
     154: dup
     155: bipush        26
     157: bipush        11
     159: bastore
     160: dup
     161: bipush        27
     163: bipush        11
     165: bastore
     166: dup
     167: bipush        28
     169: bipush        10
     171: bastore
     172: dup
     173: bipush        29
     175: bipush        10
     177: bastore
     178: dup
     179: bipush        30
     181: bipush        10
     183: bastore
     184: dup
     185: bipush        31
     187: bipush        9
     189: bastore
     190: dup
     191: bipush        32
     193: bipush        9
     195: bastore
     196: dup
     197: bipush        33
     199: bipush        9
     201: bastore
     202: dup
     203: bipush        34
     205: bipush        9
     207: bastore
     208: dup
     209: bipush        35
     211: bipush        8
     213: bastore
     214: dup
     215: bipush        36
     217: bipush        8
     219: bastore
     220: dup
     221: bipush        37
     223: bipush        8
     225: bastore
     226: dup
     227: bipush        38
     229: bipush        7
     231: bastore
     232: dup
     233: bipush        39
     235: bipush        7
     237: bastore
     238: dup
     239: bipush        40
     241: bipush        7
     243: bastore
     244: dup
     245: bipush        41
     247: bipush        6
     249: bastore
     250: dup
     251: bipush        42
     253: bipush        6
     255: bastore
     256: dup
     257: bipush        43
     259: bipush        6
     261: bastore
     262: dup
     263: bipush        44
     265: bipush        6
     267: bastore
     268: dup
     269: bipush        45
     271: iconst_5
     272: bastore
     273: dup
     274: bipush        46
     276: iconst_5
     277: bastore
     278: dup
     279: bipush        47
     281: iconst_5
     282: bastore
     283: dup
     284: bipush        48
     286: iconst_4
     287: bastore
     288: dup
     289: bipush        49
     291: iconst_4
     292: bastore
     293: dup
     294: bipush        50
     296: iconst_4
     297: bastore
     298: dup
     299: bipush        51
     301: iconst_3
     302: bastore
     303: dup
     304: bipush        52
     306: iconst_3
     307: bastore
     308: dup
     309: bipush        53
     311: iconst_3
     312: bastore
     313: dup
     314: bipush        54
     316: iconst_3
     317: bastore
     318: dup
     319: bipush        55
     321: iconst_2
     322: bastore
     323: dup
     324: bipush        56
     326: iconst_2
     327: bastore
     328: dup
     329: bipush        57
     331: iconst_2
     332: bastore
     333: dup
     334: bipush        58
     336: iconst_1
     337: bastore
     338: dup
     339: bipush        59
     341: iconst_1
     342: bastore
     343: dup
     344: bipush        60
     346: iconst_1
     347: bastore
     348: dup
     349: bipush        61
     351: iconst_0
     352: bastore
     353: dup
     354: bipush        62
     356: iconst_0
     357: bastore
     358: dup
     359: bipush        63
     361: iconst_0
     362: bastore
     363: putstatic     #33                 // Field maxLog10ForLeadingZeros:[B
     366: bipush        19
     368: newarray       long
     370: dup
     371: iconst_0
     372: lconst_1
     373: lastore
     374: dup
     375: iconst_1
     376: ldc2_w        #98                 // long 10l
     379: lastore
     380: dup
     381: iconst_2
     382: ldc2_w        #100                // long 100l
     385: lastore
     386: dup
     387: iconst_3
     388: ldc2_w        #102                // long 1000l
     391: lastore
     392: dup
     393: iconst_4
     394: ldc2_w        #104                // long 10000l
     397: lastore
     398: dup
     399: iconst_5
     400: ldc2_w        #106                // long 100000l
     403: lastore
     404: dup
     405: bipush        6
     407: ldc2_w        #108                // long 1000000l
     410: lastore
     411: dup
     412: bipush        7
     414: ldc2_w        #110                // long 10000000l
     417: lastore
     418: dup
     419: bipush        8
     421: ldc2_w        #112                // long 100000000l
     424: lastore
     425: dup
     426: bipush        9
     428: ldc2_w        #114                // long 1000000000l
     431: lastore
     432: dup
     433: bipush        10
     435: ldc2_w        #116                // long 10000000000l
     438: lastore
     439: dup
     440: bipush        11
     442: ldc2_w        #118                // long 100000000000l
     445: lastore
     446: dup
     447: bipush        12
     449: ldc2_w        #120                // long 1000000000000l
     452: lastore
     453: dup
     454: bipush        13
     456: ldc2_w        #122                // long 10000000000000l
     459: lastore
     460: dup
     461: bipush        14
     463: ldc2_w        #124                // long 100000000000000l
     466: lastore
     467: dup
     468: bipush        15
     470: ldc2_w        #126                // long 1000000000000000l
     473: lastore
     474: dup
     475: bipush        16
     477: ldc2_w        #128                // long 10000000000000000l
     480: lastore
     481: dup
     482: bipush        17
     484: ldc2_w        #130                // long 100000000000000000l
     487: lastore
     488: dup
     489: bipush        18
     491: ldc2_w        #132                // long 1000000000000000000l
     494: lastore
     495: putstatic     #30                 // Field powersOf10:[J
     498: bipush        19
     500: newarray       long
     502: dup
     503: iconst_0
     504: ldc2_w        #80                 // long 3l
     507: lastore
     508: dup
     509: iconst_1
     510: ldc2_w        #134                // long 31l
     513: lastore
     514: dup
     515: iconst_2
     516: ldc2_w        #136                // long 316l
     519: lastore
     520: dup
     521: iconst_3
     522: ldc2_w        #138                // long 3162l
     525: lastore
     526: dup
     527: iconst_4
     528: ldc2_w        #140                // long 31622l
     531: lastore
     532: dup
     533: iconst_5
     534: ldc2_w        #142                // long 316227l
     537: lastore
     538: dup
     539: bipush        6
     541: ldc2_w        #144                // long 3162277l
     544: lastore
     545: dup
     546: bipush        7
     548: ldc2_w        #146                // long 31622776l
     551: lastore
     552: dup
     553: bipush        8
     555: ldc2_w        #148                // long 316227766l
     558: lastore
     559: dup
     560: bipush        9
     562: ldc2_w        #150                // long 3162277660l
     565: lastore
     566: dup
     567: bipush        10
     569: ldc2_w        #152                // long 31622776601l
     572: lastore
     573: dup
     574: bipush        11
     576: ldc2_w        #154                // long 316227766016l
     579: lastore
     580: dup
     581: bipush        12
     583: ldc2_w        #156                // long 3162277660168l
     586: lastore
     587: dup
     588: bipush        13
     590: ldc2_w        #158                // long 31622776601683l
     593: lastore
     594: dup
     595: bipush        14
     597: ldc2_w        #160                // long 316227766016837l
     600: lastore
     601: dup
     602: bipush        15
     604: ldc2_w        #162                // long 3162277660168379l
     607: lastore
     608: dup
     609: bipush        16
     611: ldc2_w        #164                // long 31622776601683793l
     614: lastore
     615: dup
     616: bipush        17
     618: ldc2_w        #166                // long 316227766016837933l
     621: lastore
     622: dup
     623: bipush        18
     625: ldc2_w        #168                // long 3162277660168379331l
     628: lastore
     629: putstatic     #31                 // Field halfPowersOf10:[J
     632: bipush        21
     634: newarray       long
     636: dup
     637: iconst_0
     638: lconst_1
     639: lastore
     640: dup
     641: iconst_1
     642: lconst_1
     643: lastore
     644: dup
     645: iconst_2
     646: ldc2_w        #38                 // long 2l
     649: lastore
     650: dup
     651: iconst_3
     652: ldc2_w        #170                // long 6l
     655: lastore
     656: dup
     657: iconst_4
     658: ldc2_w        #172                // long 24l
     661: lastore
     662: dup
     663: iconst_5
     664: ldc2_w        #174                // long 120l
     667: lastore
     668: dup
     669: bipush        6
     671: ldc2_w        #176                // long 720l
     674: lastore
     675: dup
     676: bipush        7
     678: ldc2_w        #178                // long 5040l
     681: lastore
     682: dup
     683: bipush        8
     685: ldc2_w        #180                // long 40320l
     688: lastore
     689: dup
     690: bipush        9
     692: ldc2_w        #182                // long 362880l
     695: lastore
     696: dup
     697: bipush        10
     699: ldc2_w        #184                // long 3628800l
     702: lastore
     703: dup
     704: bipush        11
     706: ldc2_w        #186                // long 39916800l
     709: lastore
     710: dup
     711: bipush        12
     713: ldc2_w        #188                // long 479001600l
     716: lastore
     717: dup
     718: bipush        13
     720: ldc2_w        #190                // long 6227020800l
     723: lastore
     724: dup
     725: bipush        14
     727: ldc2_w        #192                // long 87178291200l
     730: lastore
     731: dup
     732: bipush        15
     734: ldc2_w        #194                // long 1307674368000l
     737: lastore
     738: dup
     739: bipush        16
     741: ldc2_w        #196                // long 20922789888000l
     744: lastore
     745: dup
     746: bipush        17
     748: ldc2_w        #198                // long 355687428096000l
     751: lastore
     752: dup
     753: bipush        18
     755: ldc2_w        #200                // long 6402373705728000l
     758: lastore
     759: dup
     760: bipush        19
     762: ldc2_w        #202                // long 121645100408832000l
     765: lastore
     766: dup
     767: bipush        20
     769: ldc2_w        #204                // long 2432902008176640000l
     772: lastore
     773: putstatic     #70                 // Field factorials:[J
     776: bipush        34
     778: newarray       int
     780: dup
     781: iconst_0
     782: ldc           #207                // int 2147483647
     784: iastore
     785: dup
     786: iconst_1
     787: ldc           #207                // int 2147483647
     789: iastore
     790: dup
     791: iconst_2
     792: ldc           #207                // int 2147483647
     794: iastore
     795: dup
     796: iconst_3
     797: ldc           #208                // int 3810779
     799: iastore
     800: dup
     801: iconst_4
     802: ldc           #209                // int 121977
     804: iastore
     805: dup
     806: iconst_5
     807: sipush        16175
     810: iastore
     811: dup
     812: bipush        6
     814: sipush        4337
     817: iastore
     818: dup
     819: bipush        7
     821: sipush        1733
     824: iastore
     825: dup
     826: bipush        8
     828: sipush        887
     831: iastore
     832: dup
     833: bipush        9
     835: sipush        534
     838: iastore
     839: dup
     840: bipush        10
     842: sipush        361
     845: iastore
     846: dup
     847: bipush        11
     849: sipush        265
     852: iastore
     853: dup
     854: bipush        12
     856: sipush        206
     859: iastore
     860: dup
     861: bipush        13
     863: sipush        169
     866: iastore
     867: dup
     868: bipush        14
     870: sipush        143
     873: iastore
     874: dup
     875: bipush        15
     877: bipush        125
     879: iastore
     880: dup
     881: bipush        16
     883: bipush        111
     885: iastore
     886: dup
     887: bipush        17
     889: bipush        101
     891: iastore
     892: dup
     893: bipush        18
     895: bipush        94
     897: iastore
     898: dup
     899: bipush        19
     901: bipush        88
     903: iastore
     904: dup
     905: bipush        20
     907: bipush        83
     909: iastore
     910: dup
     911: bipush        21
     913: bipush        79
     915: iastore
     916: dup
     917: bipush        22
     919: bipush        76
     921: iastore
     922: dup
     923: bipush        23
     925: bipush        74
     927: iastore
     928: dup
     929: bipush        24
     931: bipush        72
     933: iastore
     934: dup
     935: bipush        25
     937: bipush        70
     939: iastore
     940: dup
     941: bipush        26
     943: bipush        69
     945: iastore
     946: dup
     947: bipush        27
     949: bipush        68
     951: iastore
     952: dup
     953: bipush        28
     955: bipush        67
     957: iastore
     958: dup
     959: bipush        29
     961: bipush        67
     963: iastore
     964: dup
     965: bipush        30
     967: bipush        66
     969: iastore
     970: dup
     971: bipush        31
     973: bipush        66
     975: iastore
     976: dup
     977: bipush        32
     979: bipush        66
     981: iastore
     982: dup
     983: bipush        33
     985: bipush        66
     987: iastore
     988: putstatic     #74                 // Field biggestBinomials:[I
     991: bipush        31
     993: newarray       int
     995: dup
     996: iconst_0
     997: ldc           #207                // int 2147483647
     999: iastore
    1000: dup
    1001: iconst_1
    1002: ldc           #207                // int 2147483647
    1004: iastore
    1005: dup
    1006: iconst_2
    1007: ldc           #207                // int 2147483647
    1009: iastore
    1010: dup
    1011: iconst_3
    1012: ldc           #210                // int 2642246
    1014: iastore
    1015: dup
    1016: iconst_4
    1017: ldc           #211                // int 86251
    1019: iastore
    1020: dup
    1021: iconst_5
    1022: sipush        11724
    1025: iastore
    1026: dup
    1027: bipush        6
    1029: sipush        3218
    1032: iastore
    1033: dup
    1034: bipush        7
    1036: sipush        1313
    1039: iastore
    1040: dup
    1041: bipush        8
    1043: sipush        684
    1046: iastore
    1047: dup
    1048: bipush        9
    1050: sipush        419
    1053: iastore
    1054: dup
    1055: bipush        10
    1057: sipush        287
    1060: iastore
    1061: dup
    1062: bipush        11
    1064: sipush        214
    1067: iastore
    1068: dup
    1069: bipush        12
    1071: sipush        169
    1074: iastore
    1075: dup
    1076: bipush        13
    1078: sipush        139
    1081: iastore
    1082: dup
    1083: bipush        14
    1085: bipush        119
    1087: iastore
    1088: dup
    1089: bipush        15
    1091: bipush        105
    1093: iastore
    1094: dup
    1095: bipush        16
    1097: bipush        95
    1099: iastore
    1100: dup
    1101: bipush        17
    1103: bipush        87
    1105: iastore
    1106: dup
    1107: bipush        18
    1109: bipush        81
    1111: iastore
    1112: dup
    1113: bipush        19
    1115: bipush        76
    1117: iastore
    1118: dup
    1119: bipush        20
    1121: bipush        73
    1123: iastore
    1124: dup
    1125: bipush        21
    1127: bipush        70
    1129: iastore
    1130: dup
    1131: bipush        22
    1133: bipush        68
    1135: iastore
    1136: dup
    1137: bipush        23
    1139: bipush        66
    1141: iastore
    1142: dup
    1143: bipush        24
    1145: bipush        64
    1147: iastore
    1148: dup
    1149: bipush        25
    1151: bipush        63
    1153: iastore
    1154: dup
    1155: bipush        26
    1157: bipush        62
    1159: iastore
    1160: dup
    1161: bipush        27
    1163: bipush        62
    1165: iastore
    1166: dup
    1167: bipush        28
    1169: bipush        61
    1171: iastore
    1172: dup
    1173: bipush        29
    1175: bipush        61
    1177: iastore
    1178: dup
    1179: bipush        30
    1181: bipush        61
    1183: iastore
    1184: putstatic     #75                 // Field biggestSimpleBinomials:[I
    1187: bipush        7
    1189: anewarray     #212                // class "[J"
    1192: dup
    1193: iconst_0
    1194: iconst_2
    1195: newarray       long
    1197: dup
    1198: iconst_0
    1199: ldc2_w        #213                // long 291830l
    1202: lastore
    1203: dup
    1204: iconst_1
    1205: ldc2_w        #215                // long 126401071349994536l
    1208: lastore
    1209: aastore
    1210: dup
    1211: iconst_1
    1212: iconst_3
    1213: newarray       long
    1215: dup
    1216: iconst_0
    1217: ldc2_w        #217                // long 885594168l
    1220: lastore
    1221: dup
    1222: iconst_1
    1223: ldc2_w        #219                // long 725270293939359937l
    1226: lastore
    1227: dup
    1228: iconst_2
    1229: ldc2_w        #221                // long 3569819667048198375l
    1232: lastore
    1233: aastore
    1234: dup
    1235: iconst_2
    1236: iconst_4
    1237: newarray       long
    1239: dup
    1240: iconst_0
    1241: ldc2_w        #223                // long 273919523040l
    1244: lastore
    1245: dup
    1246: iconst_1
    1247: ldc2_w        #225                // long 15l
    1250: lastore
    1251: dup
    1252: iconst_2
    1253: ldc2_w        #227                // long 7363882082l
    1256: lastore
    1257: dup
    1258: iconst_3
    1259: ldc2_w        #229                // long 992620450144556l
    1262: lastore
    1263: aastore
    1264: dup
    1265: iconst_3
    1266: iconst_5
    1267: newarray       long
    1269: dup
    1270: iconst_0
    1271: ldc2_w        #231                // long 47636622961200l
    1274: lastore
    1275: dup
    1276: iconst_1
    1277: ldc2_w        #38                 // long 2l
    1280: lastore
    1281: dup
    1282: iconst_2
    1283: ldc2_w        #233                // long 2570940l
    1286: lastore
    1287: dup
    1288: iconst_3
    1289: ldc2_w        #235                // long 211991001l
    1292: lastore
    1293: dup
    1294: iconst_4
    1295: ldc2_w        #237                // long 3749873356l
    1298: lastore
    1299: aastore
    1300: dup
    1301: iconst_4
    1302: bipush        6
    1304: newarray       long
    1306: dup
    1307: iconst_0
    1308: ldc2_w        #239                // long 7999252175582850l
    1311: lastore
    1312: dup
    1313: iconst_1
    1314: ldc2_w        #38                 // long 2l
    1317: lastore
    1318: dup
    1319: iconst_2
    1320: ldc2_w        #241                // long 4130806001517l
    1323: lastore
    1324: dup
    1325: iconst_3
    1326: ldc2_w        #243                // long 149795463772692060l
    1329: lastore
    1330: dup
    1331: iconst_4
    1332: ldc2_w        #245                // long 186635894390467037l
    1335: lastore
    1336: dup
    1337: iconst_5
    1338: ldc2_w        #247                // long 3967304179347715805l
    1341: lastore
    1342: aastore
    1343: dup
    1344: iconst_5
    1345: bipush        7
    1347: newarray       long
    1349: dup
    1350: iconst_0
    1351: ldc2_w        #249                // long 585226005592931976l
    1354: lastore
    1355: dup
    1356: iconst_1
    1357: ldc2_w        #38                 // long 2l
    1360: lastore
    1361: dup
    1362: iconst_2
    1363: ldc2_w        #251                // long 123635709730000l
    1366: lastore
    1367: dup
    1368: iconst_3
    1369: ldc2_w        #253                // long 9233062284813009l
    1372: lastore
    1373: dup
    1374: iconst_4
    1375: ldc2_w        #255                // long 43835965440333360l
    1378: lastore
    1379: dup
    1380: iconst_5
    1381: ldc2_w        #257                // long 761179012939631437l
    1384: lastore
    1385: dup
    1386: bipush        6
    1388: ldc2_w        #259                // long 1263739024124850375l
    1391: lastore
    1392: aastore
    1393: dup
    1394: bipush        6
    1396: bipush        8
    1398: newarray       long
    1400: dup
    1401: iconst_0
    1402: ldc2_w        #66                 // long 9223372036854775807l
    1405: lastore
    1406: dup
    1407: iconst_1
    1408: ldc2_w        #38                 // long 2l
    1411: lastore
    1412: dup
    1413: iconst_2
    1414: ldc2_w        #261                // long 325l
    1417: lastore
    1418: dup
    1419: iconst_3
    1420: ldc2_w        #263                // long 9375l
    1423: lastore
    1424: dup
    1425: iconst_4
    1426: ldc2_w        #265                // long 28178l
    1429: lastore
    1430: dup
    1431: iconst_5
    1432: ldc2_w        #267                // long 450775l
    1435: lastore
    1436: dup
    1437: bipush        6
    1439: ldc2_w        #269                // long 9780504l
    1442: lastore
    1443: dup
    1444: bipush        7
    1446: ldc2_w        #271                // long 1795265022l
    1449: lastore
    1450: aastore
    1451: putstatic     #95                 // Field millerRabinBaseSets:[[J
    1454: return
}
