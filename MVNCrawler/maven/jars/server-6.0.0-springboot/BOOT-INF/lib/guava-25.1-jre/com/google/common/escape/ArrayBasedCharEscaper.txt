Compiled from "ArrayBasedCharEscaper.java"
public abstract class com.google.common.escape.ArrayBasedCharEscaper extends com.google.common.escape.CharEscaper {
  private final char[][] replacements;

  private final int replacementsLength;

  private final char safeMin;

  private final char safeMax;

  protected com.google.common.escape.ArrayBasedCharEscaper(java.util.Map<java.lang.Character, java.lang.String>, char, char);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method com/google/common/escape/ArrayBasedEscaperMap.create:(Ljava/util/Map;)Lcom/google/common/escape/ArrayBasedEscaperMap;
       5: iload_2
       6: iload_3
       7: invokespecial #2                  // Method "<init>":(Lcom/google/common/escape/ArrayBasedEscaperMap;CC)V
      10: return

  protected com.google.common.escape.ArrayBasedCharEscaper(com.google.common.escape.ArrayBasedEscaperMap, char, char);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/google/common/escape/CharEscaper."<init>":()V
       4: aload_1
       5: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_1
      11: invokevirtual #5                  // Method com/google/common/escape/ArrayBasedEscaperMap.getReplacementArray:()[[C
      14: putfield      #6                  // Field replacements:[[C
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field replacements:[[C
      22: arraylength
      23: putfield      #7                  // Field replacementsLength:I
      26: iload_3
      27: iload_2
      28: if_icmpge     36
      31: iconst_0
      32: istore_3
      33: ldc           #9                  // int 65535
      35: istore_2
      36: aload_0
      37: iload_2
      38: putfield      #10                 // Field safeMin:C
      41: aload_0
      42: iload_3
      43: putfield      #11                 // Field safeMax:C
      46: return

  public final java.lang.String escape(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: invokevirtual #12                 // Method java/lang/String.length:()I
      12: if_icmpge     67
      15: aload_1
      16: iload_2
      17: invokevirtual #13                 // Method java/lang/String.charAt:(I)C
      20: istore_3
      21: iload_3
      22: aload_0
      23: getfield      #7                  // Field replacementsLength:I
      26: if_icmpge     38
      29: aload_0
      30: getfield      #6                  // Field replacements:[[C
      33: iload_3
      34: aaload
      35: ifnonnull     54
      38: iload_3
      39: aload_0
      40: getfield      #11                 // Field safeMax:C
      43: if_icmpgt     54
      46: iload_3
      47: aload_0
      48: getfield      #10                 // Field safeMin:C
      51: if_icmpge     61
      54: aload_0
      55: aload_1
      56: iload_2
      57: invokevirtual #14                 // Method escapeSlow:(Ljava/lang/String;I)Ljava/lang/String;
      60: areturn
      61: iinc          2, 1
      64: goto          7
      67: aload_1
      68: areturn

  protected final char[] escape(char);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field replacementsLength:I
       5: if_icmpge     21
       8: aload_0
       9: getfield      #6                  // Field replacements:[[C
      12: iload_1
      13: aaload
      14: astore_2
      15: aload_2
      16: ifnull        21
      19: aload_2
      20: areturn
      21: iload_1
      22: aload_0
      23: getfield      #10                 // Field safeMin:C
      26: if_icmplt     39
      29: iload_1
      30: aload_0
      31: getfield      #11                 // Field safeMax:C
      34: if_icmpgt     39
      37: aconst_null
      38: areturn
      39: aload_0
      40: iload_1
      41: invokevirtual #15                 // Method escapeUnsafe:(C)[C
      44: areturn

  protected abstract char[] escapeUnsafe(char);
}
