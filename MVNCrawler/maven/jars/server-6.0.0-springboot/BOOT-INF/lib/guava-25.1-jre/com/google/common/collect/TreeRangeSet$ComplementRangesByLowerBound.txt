Compiled from "TreeRangeSet.java"
final class com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound<C extends java.lang.Comparable<?>> extends com.google.common.collect.AbstractNavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> {
  private final java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> positiveRangesByLowerBound;

  private final java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> positiveRangesByUpperBound;

  private final com.google.common.collect.Range<com.google.common.collect.Cut<C>> complementLowerBoundWindow;

  com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound(java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method com/google/common/collect/Range.all:()Lcom/google/common/collect/Range;
       5: invokespecial #3                  // Method "<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Range;)V
       8: return

  private com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound(java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>, com.google.common.collect.Range<com.google.common.collect.Cut<C>>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/common/collect/AbstractNavigableMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field positiveRangesByLowerBound:Ljava/util/NavigableMap;
       9: aload_0
      10: new           #6                  // class com/google/common/collect/TreeRangeSet$RangesByUpperBound
      13: dup
      14: aload_1
      15: invokespecial #7                  // Method com/google/common/collect/TreeRangeSet$RangesByUpperBound."<init>":(Ljava/util/NavigableMap;)V
      18: putfield      #8                  // Field positiveRangesByUpperBound:Ljava/util/NavigableMap;
      21: aload_0
      22: aload_2
      23: putfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      26: return

  private java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> subMap(com.google.common.collect.Range<com.google.common.collect.Cut<C>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
       4: aload_1
       5: invokevirtual #9                  // Method com/google/common/collect/Range.isConnected:(Lcom/google/common/collect/Range;)Z
       8: ifne          15
      11: invokestatic  #10                 // Method com/google/common/collect/ImmutableSortedMap.of:()Lcom/google/common/collect/ImmutableSortedMap;
      14: areturn
      15: aload_1
      16: aload_0
      17: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      20: invokevirtual #11                 // Method com/google/common/collect/Range.intersection:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;
      23: astore_1
      24: new           #12                 // class com/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound
      27: dup
      28: aload_0
      29: getfield      #5                  // Field positiveRangesByLowerBound:Ljava/util/NavigableMap;
      32: aload_1
      33: invokespecial #3                  // Method "<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Range;)V
      36: areturn

  public java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> subMap(com.google.common.collect.Cut<C>, boolean, com.google.common.collect.Cut<C>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #13                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
       6: aload_3
       7: iload         4
       9: invokestatic  #13                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
      12: invokestatic  #14                 // Method com/google/common/collect/Range.range:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;
      15: invokespecial #15                 // Method subMap:(Lcom/google/common/collect/Range;)Ljava/util/NavigableMap;
      18: areturn

  public java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> headMap(com.google.common.collect.Cut<C>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #13                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
       6: invokestatic  #16                 // Method com/google/common/collect/Range.upTo:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;
       9: invokespecial #15                 // Method subMap:(Lcom/google/common/collect/Range;)Ljava/util/NavigableMap;
      12: areturn

  public java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> tailMap(com.google.common.collect.Cut<C>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #13                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
       6: invokestatic  #17                 // Method com/google/common/collect/Range.downTo:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;
       9: invokespecial #15                 // Method subMap:(Lcom/google/common/collect/Range;)Ljava/util/NavigableMap;
      12: areturn

  public java.util.Comparator<? super com.google.common.collect.Cut<C>> comparator();
    Code:
       0: invokestatic  #18                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       3: areturn

  java.util.Iterator<java.util.Map$Entry<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>> entryIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
       4: invokevirtual #19                 // Method com/google/common/collect/Range.hasLowerBound:()Z
       7: ifeq          53
      10: aload_0
      11: getfield      #8                  // Field positiveRangesByUpperBound:Ljava/util/NavigableMap;
      14: aload_0
      15: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      18: invokevirtual #20                 // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      21: aload_0
      22: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      25: invokevirtual #21                 // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
      28: getstatic     #22                 // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
      31: if_acmpne     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokeinterface #23,  3           // InterfaceMethod java/util/NavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
      44: invokeinterface #24,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      49: astore_1
      50: goto          63
      53: aload_0
      54: getfield      #8                  // Field positiveRangesByUpperBound:Ljava/util/NavigableMap;
      57: invokeinterface #24,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      62: astore_1
      63: aload_1
      64: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      69: invokestatic  #26                 // Method com/google/common/collect/Iterators.peekingIterator:(Ljava/util/Iterator;)Lcom/google/common/collect/PeekingIterator;
      72: astore_2
      73: aload_0
      74: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      77: invokestatic  #27                 // Method com/google/common/collect/Cut.belowAll:()Lcom/google/common/collect/Cut;
      80: invokevirtual #28                 // Method com/google/common/collect/Range.contains:(Ljava/lang/Comparable;)Z
      83: ifeq          120
      86: aload_2
      87: invokeinterface #29,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.hasNext:()Z
      92: ifeq          113
      95: aload_2
      96: invokeinterface #30,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.peek:()Ljava/lang/Object;
     101: checkcast     #31                 // class com/google/common/collect/Range
     104: getfield      #32                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
     107: invokestatic  #27                 // Method com/google/common/collect/Cut.belowAll:()Lcom/google/common/collect/Cut;
     110: if_acmpeq     120
     113: invokestatic  #27                 // Method com/google/common/collect/Cut.belowAll:()Lcom/google/common/collect/Cut;
     116: astore_3
     117: goto          149
     120: aload_2
     121: invokeinterface #29,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.hasNext:()Z
     126: ifeq          145
     129: aload_2
     130: invokeinterface #33,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.next:()Ljava/lang/Object;
     135: checkcast     #31                 // class com/google/common/collect/Range
     138: getfield      #34                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     141: astore_3
     142: goto          149
     145: invokestatic  #35                 // Method com/google/common/collect/Iterators.emptyIterator:()Lcom/google/common/collect/UnmodifiableIterator;
     148: areturn
     149: new           #36                 // class com/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound$1
     152: dup
     153: aload_0
     154: aload_3
     155: aload_2
     156: invokespecial #37                 // Method com/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound$1."<init>":(Lcom/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound;Lcom/google/common/collect/Cut;Lcom/google/common/collect/PeekingIterator;)V
     159: areturn

  java.util.Iterator<java.util.Map$Entry<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>> descendingEntryIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
       4: invokevirtual #38                 // Method com/google/common/collect/Range.hasUpperBound:()Z
       7: ifeq          23
      10: aload_0
      11: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      14: invokevirtual #39                 // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
      17: checkcast     #40                 // class com/google/common/collect/Cut
      20: goto          26
      23: invokestatic  #41                 // Method com/google/common/collect/Cut.aboveAll:()Lcom/google/common/collect/Cut;
      26: astore_1
      27: aload_0
      28: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      31: invokevirtual #38                 // Method com/google/common/collect/Range.hasUpperBound:()Z
      34: ifeq          54
      37: aload_0
      38: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
      41: invokevirtual #42                 // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
      44: getstatic     #22                 // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
      47: if_acmpne     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore_2
      56: aload_0
      57: getfield      #8                  // Field positiveRangesByUpperBound:Ljava/util/NavigableMap;
      60: aload_1
      61: iload_2
      62: invokeinterface #43,  3           // InterfaceMethod java/util/NavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
      67: invokeinterface #44,  1           // InterfaceMethod java/util/NavigableMap.descendingMap:()Ljava/util/NavigableMap;
      72: invokeinterface #24,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      77: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      82: invokestatic  #26                 // Method com/google/common/collect/Iterators.peekingIterator:(Ljava/util/Iterator;)Lcom/google/common/collect/PeekingIterator;
      85: astore_3
      86: aload_3
      87: invokeinterface #29,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.hasNext:()Z
      92: ifeq          157
      95: aload_3
      96: invokeinterface #30,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.peek:()Ljava/lang/Object;
     101: checkcast     #31                 // class com/google/common/collect/Range
     104: getfield      #34                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     107: invokestatic  #41                 // Method com/google/common/collect/Cut.aboveAll:()Lcom/google/common/collect/Cut;
     110: if_acmpne     128
     113: aload_3
     114: invokeinterface #33,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.next:()Ljava/lang/Object;
     119: checkcast     #31                 // class com/google/common/collect/Range
     122: getfield      #32                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
     125: goto          152
     128: aload_0
     129: getfield      #5                  // Field positiveRangesByLowerBound:Ljava/util/NavigableMap;
     132: aload_3
     133: invokeinterface #30,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.peek:()Ljava/lang/Object;
     138: checkcast     #31                 // class com/google/common/collect/Range
     141: getfield      #34                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     144: invokeinterface #45,  2           // InterfaceMethod java/util/NavigableMap.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #40                 // class com/google/common/collect/Cut
     152: astore        4
     154: goto          206
     157: aload_0
     158: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
     161: invokestatic  #27                 // Method com/google/common/collect/Cut.belowAll:()Lcom/google/common/collect/Cut;
     164: invokevirtual #28                 // Method com/google/common/collect/Range.contains:(Ljava/lang/Comparable;)Z
     167: ifeq          185
     170: aload_0
     171: getfield      #5                  // Field positiveRangesByLowerBound:Ljava/util/NavigableMap;
     174: invokestatic  #27                 // Method com/google/common/collect/Cut.belowAll:()Lcom/google/common/collect/Cut;
     177: invokeinterface #46,  2           // InterfaceMethod java/util/NavigableMap.containsKey:(Ljava/lang/Object;)Z
     182: ifeq          189
     185: invokestatic  #35                 // Method com/google/common/collect/Iterators.emptyIterator:()Lcom/google/common/collect/UnmodifiableIterator;
     188: areturn
     189: aload_0
     190: getfield      #5                  // Field positiveRangesByLowerBound:Ljava/util/NavigableMap;
     193: invokestatic  #27                 // Method com/google/common/collect/Cut.belowAll:()Lcom/google/common/collect/Cut;
     196: invokeinterface #45,  2           // InterfaceMethod java/util/NavigableMap.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;
     201: checkcast     #40                 // class com/google/common/collect/Cut
     204: astore        4
     206: aload         4
     208: invokestatic  #41                 // Method com/google/common/collect/Cut.aboveAll:()Lcom/google/common/collect/Cut;
     211: invokestatic  #47                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     214: checkcast     #40                 // class com/google/common/collect/Cut
     217: astore        5
     219: new           #48                 // class com/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound$2
     222: dup
     223: aload_0
     224: aload         5
     226: aload_3
     227: invokespecial #49                 // Method com/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound$2."<init>":(Lcom/google/common/collect/TreeRangeSet$ComplementRangesByLowerBound;Lcom/google/common/collect/Cut;Lcom/google/common/collect/PeekingIterator;)V
     230: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method entryIterator:()Ljava/util/Iterator;
       4: invokestatic  #51                 // Method com/google/common/collect/Iterators.size:(Ljava/util/Iterator;)I
       7: ireturn

  public com.google.common.collect.Range<C> get(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #40                 // class com/google/common/collect/Cut
       4: ifeq          60
       7: aload_1
       8: checkcast     #40                 // class com/google/common/collect/Cut
      11: astore_2
      12: aload_0
      13: aload_2
      14: iconst_1
      15: invokevirtual #52                 // Method tailMap:(Lcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
      18: invokeinterface #53,  1           // InterfaceMethod java/util/NavigableMap.firstEntry:()Ljava/util/Map$Entry;
      23: astore_3
      24: aload_3
      25: ifnull        54
      28: aload_3
      29: invokeinterface #54,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      34: checkcast     #40                 // class com/google/common/collect/Cut
      37: aload_2
      38: invokevirtual #55                 // Method com/google/common/collect/Cut.equals:(Ljava/lang/Object;)Z
      41: ifeq          54
      44: aload_3
      45: invokeinterface #56,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: checkcast     #57                 // class com/google/common/collect/Range
      53: areturn
      54: goto          60
      57: astore_2
      58: aconst_null
      59: areturn
      60: aconst_null
      61: areturn
    Exception table:
       from    to  target type
           7    53    57   Class java/lang/ClassCastException

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method get:(Ljava/lang/Object;)Lcom/google/common/collect/Range;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method get:(Ljava/lang/Object;)Lcom/google/common/collect/Range;
       5: areturn

  public java.util.NavigableMap tailMap(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class com/google/common/collect/Cut
       5: iload_2
       6: invokevirtual #52                 // Method tailMap:(Lcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
       9: areturn

  public java.util.NavigableMap headMap(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class com/google/common/collect/Cut
       5: iload_2
       6: invokevirtual #60                 // Method headMap:(Lcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
       9: areturn

  public java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class com/google/common/collect/Cut
       5: iload_2
       6: aload_3
       7: checkcast     #40                 // class com/google/common/collect/Cut
      10: iload         4
      12: invokevirtual #61                 // Method subMap:(Lcom/google/common/collect/Cut;ZLcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
      15: areturn

  static com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound);
    Code:
       0: aload_0
       1: getfield      #1                  // Field complementLowerBoundWindow:Lcom/google/common/collect/Range;
       4: areturn
}
