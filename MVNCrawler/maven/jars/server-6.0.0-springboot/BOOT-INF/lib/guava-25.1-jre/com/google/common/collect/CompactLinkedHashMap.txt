Compiled from "CompactLinkedHashMap.java"
class com.google.common.collect.CompactLinkedHashMap<K, V> extends com.google.common.collect.CompactHashMap<K, V> {
  private static final int ENDPOINT;

  transient long[] links;

  private transient int firstEntry;

  private transient int lastEntry;

  private final boolean accessOrder;

  public static <K, V> com.google.common.collect.CompactLinkedHashMap<K, V> create();
    Code:
       0: new           #2                  // class com/google/common/collect/CompactLinkedHashMap
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.CompactLinkedHashMap<K, V> createWithExpectedSize(int);
    Code:
       0: new           #2                  // class com/google/common/collect/CompactLinkedHashMap
       3: dup
       4: iload_0
       5: invokespecial #4                  // Method "<init>":(I)V
       8: areturn

  com.google.common.collect.CompactLinkedHashMap();
    Code:
       0: aload_0
       1: iconst_3
       2: invokespecial #4                  // Method "<init>":(I)V
       5: return

  com.google.common.collect.CompactLinkedHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: fconst_1
       3: iconst_0
       4: invokespecial #6                  // Method "<init>":(IFZ)V
       7: return

  com.google.common.collect.CompactLinkedHashMap(int, float, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: invokespecial #7                  // Method com/google/common/collect/CompactHashMap."<init>":(IF)V
       6: aload_0
       7: iload_3
       8: putfield      #8                  // Field accessOrder:Z
      11: return

  void init(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: invokespecial #9                  // Method com/google/common/collect/CompactHashMap.init:(IF)V
       6: aload_0
       7: bipush        -2
       9: putfield      #1                  // Field firstEntry:I
      12: aload_0
      13: bipush        -2
      15: putfield      #10                 // Field lastEntry:I
      18: aload_0
      19: iload_1
      20: newarray       long
      22: putfield      #11                 // Field links:[J
      25: aload_0
      26: getfield      #11                 // Field links:[J
      29: ldc2_w        #12                 // long -1l
      32: invokestatic  #14                 // Method java/util/Arrays.fill:([JJ)V
      35: return

  private int getPredecessor(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field links:[J
       4: iload_1
       5: laload
       6: bipush        32
       8: lushr
       9: l2i
      10: ireturn

  int getSuccessor(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field links:[J
       4: iload_1
       5: laload
       6: l2i
       7: ireturn

  private void setSuccessor(int, int);
    Code:
       0: ldc2_w        #15                 // long 4294967295l
       3: lstore_3
       4: aload_0
       5: getfield      #11                 // Field links:[J
       8: iload_1
       9: aload_0
      10: getfield      #11                 // Field links:[J
      13: iload_1
      14: laload
      15: lload_3
      16: ldc2_w        #12                 // long -1l
      19: lxor
      20: land
      21: iload_2
      22: i2l
      23: lload_3
      24: land
      25: lor
      26: lastore
      27: return

  private void setPredecessor(int, int);
    Code:
       0: ldc2_w        #17                 // long -4294967296l
       3: lstore_3
       4: aload_0
       5: getfield      #11                 // Field links:[J
       8: iload_1
       9: aload_0
      10: getfield      #11                 // Field links:[J
      13: iload_1
      14: laload
      15: lload_3
      16: ldc2_w        #12                 // long -1l
      19: lxor
      20: land
      21: iload_2
      22: i2l
      23: bipush        32
      25: lshl
      26: lor
      27: lastore
      28: return

  private void setSucceeds(int, int);
    Code:
       0: iload_1
       1: bipush        -2
       3: if_icmpne     14
       6: aload_0
       7: iload_2
       8: putfield      #1                  // Field firstEntry:I
      11: goto          20
      14: aload_0
      15: iload_1
      16: iload_2
      17: invokespecial #19                 // Method setSuccessor:(II)V
      20: iload_2
      21: bipush        -2
      23: if_icmpne     34
      26: aload_0
      27: iload_1
      28: putfield      #10                 // Field lastEntry:I
      31: goto          40
      34: aload_0
      35: iload_2
      36: iload_1
      37: invokespecial #20                 // Method setPredecessor:(II)V
      40: return

  void insertEntry(int, K, V, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #21                 // Method com/google/common/collect/CompactHashMap.insertEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       9: aload_0
      10: aload_0
      11: getfield      #10                 // Field lastEntry:I
      14: iload_1
      15: invokespecial #22                 // Method setSucceeds:(II)V
      18: aload_0
      19: iload_1
      20: bipush        -2
      22: invokespecial #22                 // Method setSucceeds:(II)V
      25: return

  void accessEntry(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field accessOrder:Z
       4: ifeq          47
       7: aload_0
       8: aload_0
       9: iload_1
      10: invokespecial #23                 // Method getPredecessor:(I)I
      13: aload_0
      14: iload_1
      15: invokevirtual #24                 // Method getSuccessor:(I)I
      18: invokespecial #22                 // Method setSucceeds:(II)V
      21: aload_0
      22: aload_0
      23: getfield      #10                 // Field lastEntry:I
      26: iload_1
      27: invokespecial #22                 // Method setSucceeds:(II)V
      30: aload_0
      31: iload_1
      32: bipush        -2
      34: invokespecial #22                 // Method setSucceeds:(II)V
      37: aload_0
      38: dup
      39: getfield      #25                 // Field modCount:I
      42: iconst_1
      43: iadd
      44: putfield      #25                 // Field modCount:I
      47: return

  void moveLastEntry(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method size:()I
       4: iconst_1
       5: isub
       6: istore_2
       7: aload_0
       8: aload_0
       9: iload_1
      10: invokespecial #23                 // Method getPredecessor:(I)I
      13: aload_0
      14: iload_1
      15: invokevirtual #24                 // Method getSuccessor:(I)I
      18: invokespecial #22                 // Method setSucceeds:(II)V
      21: iload_1
      22: iload_2
      23: if_icmpge     46
      26: aload_0
      27: aload_0
      28: iload_2
      29: invokespecial #23                 // Method getPredecessor:(I)I
      32: iload_1
      33: invokespecial #22                 // Method setSucceeds:(II)V
      36: aload_0
      37: iload_1
      38: aload_0
      39: iload_2
      40: invokevirtual #24                 // Method getSuccessor:(I)I
      43: invokespecial #22                 // Method setSucceeds:(II)V
      46: aload_0
      47: iload_1
      48: invokespecial #27                 // Method com/google/common/collect/CompactHashMap.moveLastEntry:(I)V
      51: return

  void resizeEntries(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #28                 // Method com/google/common/collect/CompactHashMap.resizeEntries:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field links:[J
      10: iload_1
      11: invokestatic  #29                 // Method java/util/Arrays.copyOf:([JI)[J
      14: putfield      #11                 // Field links:[J
      17: return

  int firstEntryIndex();
    Code:
       0: aload_0
       1: getfield      #1                  // Field firstEntry:I
       4: ireturn

  int adjustAfterRemove(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #26                 // Method size:()I
       5: if_icmplt     12
       8: iload_2
       9: goto          13
      12: iload_1
      13: ireturn

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_1
       1: invokestatic  #30                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #1                  // Field firstEntry:I
       9: istore_2
      10: iload_2
      11: bipush        -2
      13: if_icmpeq     43
      16: aload_1
      17: aload_0
      18: getfield      #31                 // Field keys:[Ljava/lang/Object;
      21: iload_2
      22: aaload
      23: aload_0
      24: getfield      #32                 // Field values:[Ljava/lang/Object;
      27: iload_2
      28: aaload
      29: invokeinterface #33,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      34: aload_0
      35: iload_2
      36: invokevirtual #24                 // Method getSuccessor:(I)I
      39: istore_2
      40: goto          10
      43: return

  java.util.Set<java.util.Map$Entry<K, V>> createEntrySet();
    Code:
       0: new           #34                 // class com/google/common/collect/CompactLinkedHashMap$1EntrySetImpl
       3: dup
       4: aload_0
       5: invokespecial #35                 // Method com/google/common/collect/CompactLinkedHashMap$1EntrySetImpl."<init>":(Lcom/google/common/collect/CompactLinkedHashMap;)V
       8: areturn

  java.util.Set<K> createKeySet();
    Code:
       0: new           #36                 // class com/google/common/collect/CompactLinkedHashMap$1KeySetImpl
       3: dup
       4: aload_0
       5: invokespecial #37                 // Method com/google/common/collect/CompactLinkedHashMap$1KeySetImpl."<init>":(Lcom/google/common/collect/CompactLinkedHashMap;)V
       8: areturn

  java.util.Collection<V> createValues();
    Code:
       0: new           #38                 // class com/google/common/collect/CompactLinkedHashMap$1ValuesImpl
       3: dup
       4: aload_0
       5: invokespecial #39                 // Method com/google/common/collect/CompactLinkedHashMap$1ValuesImpl."<init>":(Lcom/google/common/collect/CompactLinkedHashMap;)V
       8: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method com/google/common/collect/CompactHashMap.clear:()V
       4: aload_0
       5: bipush        -2
       7: putfield      #1                  // Field firstEntry:I
      10: aload_0
      11: bipush        -2
      13: putfield      #10                 // Field lastEntry:I
      16: return

  static int access$000(com.google.common.collect.CompactLinkedHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field firstEntry:I
       4: ireturn
}
