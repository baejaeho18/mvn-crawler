Compiled from "MoreExecutors.java"
final class com.google.common.util.concurrent.MoreExecutors$3 extends com.google.common.util.concurrent.WrappingExecutorService {
  final com.google.common.base.Supplier val$nameSupplier;

  com.google.common.util.concurrent.MoreExecutors$3(java.util.concurrent.ExecutorService, com.google.common.base.Supplier);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #1                  // Field val$nameSupplier:Lcom/google/common/base/Supplier;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method com/google/common/util/concurrent/WrappingExecutorService."<init>":(Ljava/util/concurrent/ExecutorService;)V
      10: return

  protected <T> java.util.concurrent.Callable<T> wrapTask(java.util.concurrent.Callable<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field val$nameSupplier:Lcom/google/common/base/Supplier;
       5: invokestatic  #3                  // Method com/google/common/util/concurrent/Callables.threadRenaming:(Ljava/util/concurrent/Callable;Lcom/google/common/base/Supplier;)Ljava/util/concurrent/Callable;
       8: areturn

  protected java.lang.Runnable wrapTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field val$nameSupplier:Lcom/google/common/base/Supplier;
       5: invokestatic  #4                  // Method com/google/common/util/concurrent/Callables.threadRenaming:(Ljava/lang/Runnable;Lcom/google/common/base/Supplier;)Ljava/lang/Runnable;
       8: areturn
}
