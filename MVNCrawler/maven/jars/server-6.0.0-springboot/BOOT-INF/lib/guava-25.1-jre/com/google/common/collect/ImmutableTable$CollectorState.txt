Compiled from "ImmutableTable.java"
final class com.google.common.collect.ImmutableTable$CollectorState<R, C, V> {
  final java.util.List<com.google.common.collect.ImmutableTable$MutableCell<R, C, V>> insertionOrder;

  final com.google.common.collect.Table<R, C, com.google.common.collect.ImmutableTable$MutableCell<R, C, V>> table;

  private com.google.common.collect.ImmutableTable$CollectorState();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field insertionOrder:Ljava/util/List;
      15: aload_0
      16: invokestatic  #6                  // Method com/google/common/collect/HashBasedTable.create:()Lcom/google/common/collect/HashBasedTable;
      19: putfield      #7                  // Field table:Lcom/google/common/collect/Table;
      22: return

  void put(R, C, V, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field table:Lcom/google/common/collect/Table;
       4: aload_1
       5: aload_2
       6: invokeinterface #8,  3            // InterfaceMethod com/google/common/collect/Table.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #9                  // class com/google/common/collect/ImmutableTable$MutableCell
      14: astore        5
      16: aload         5
      18: ifnonnull     62
      21: new           #9                  // class com/google/common/collect/ImmutableTable$MutableCell
      24: dup
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokespecial #10                 // Method com/google/common/collect/ImmutableTable$MutableCell."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      31: astore        6
      33: aload_0
      34: getfield      #5                  // Field insertionOrder:Ljava/util/List;
      37: aload         6
      39: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_0
      46: getfield      #7                  // Field table:Lcom/google/common/collect/Table;
      49: aload_1
      50: aload_2
      51: aload         6
      53: invokeinterface #12,  4           // InterfaceMethod com/google/common/collect/Table.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: goto          70
      62: aload         5
      64: aload_3
      65: aload         4
      67: invokevirtual #13                 // Method com/google/common/collect/ImmutableTable$MutableCell.merge:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)V
      70: return

  com.google.common.collect.ImmutableTable$CollectorState<R, C, V> combine(com.google.common.collect.ImmutableTable$CollectorState<R, C, V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_1
       1: getfield      #5                  // Field insertionOrder:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_3
      20: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class com/google/common/collect/ImmutableTable$MutableCell
      28: astore        4
      30: aload_0
      31: aload         4
      33: invokevirtual #17                 // Method com/google/common/collect/ImmutableTable$MutableCell.getRowKey:()Ljava/lang/Object;
      36: aload         4
      38: invokevirtual #18                 // Method com/google/common/collect/ImmutableTable$MutableCell.getColumnKey:()Ljava/lang/Object;
      41: aload         4
      43: invokevirtual #19                 // Method com/google/common/collect/ImmutableTable$MutableCell.getValue:()Ljava/lang/Object;
      46: aload_2
      47: invokevirtual #20                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BinaryOperator;)V
      50: goto          10
      53: aload_0
      54: areturn

  com.google.common.collect.ImmutableTable<R, C, V> toTable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field insertionOrder:Ljava/util/List;
       4: invokestatic  #21                 // Method com/google/common/collect/ImmutableTable.access$000:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableTable;
       7: areturn

  com.google.common.collect.ImmutableTable$CollectorState(com.google.common.collect.ImmutableTable$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
