Compiled from "ImmutableMap.java"
public abstract class com.google.common.collect.ImmutableMap<K, V> implements java.util.Map<K, V>, java.io.Serializable {
  static final java.util.Map$Entry<?, ?>[] EMPTY_ENTRY_ARRAY;

  private transient com.google.common.collect.ImmutableSet<java.util.Map$Entry<K, V>> entrySet;

  private transient com.google.common.collect.ImmutableSet<K> keySet;

  private transient com.google.common.collect.ImmutableCollection<V> values;

  private transient com.google.common.collect.ImmutableSetMultimap<K, V> multimapView;

  public static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method com/google/common/collect/CollectCollectors.toImmutableMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
       5: areturn

  public static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #3,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      23: invokestatic  #4                  // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      26: invokedynamic #5,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      31: invokestatic  #6                  // Method java/util/stream/Collectors.collectingAndThen:(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      34: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> of();
    Code:
       0: getstatic     #7                  // Field com/google/common/collect/RegularImmutableMap.EMPTY:Lcom/google/common/collect/ImmutableMap;
       3: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> of(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method com/google/common/collect/ImmutableBiMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableBiMap;
       5: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> of(K, V, K, V);
    Code:
       0: iconst_2
       1: anewarray     #9                  // class java/util/Map$Entry
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aload_3
      16: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      19: aastore
      20: invokestatic  #11                 // Method com/google/common/collect/RegularImmutableMap.fromEntries:([Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMap;
      23: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> of(K, V, K, V, K, V);
    Code:
       0: iconst_3
       1: anewarray     #9                  // class java/util/Map$Entry
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aload_3
      16: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      19: aastore
      20: dup
      21: iconst_2
      22: aload         4
      24: aload         5
      26: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      29: aastore
      30: invokestatic  #11                 // Method com/google/common/collect/RegularImmutableMap.fromEntries:([Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMap;
      33: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> of(K, V, K, V, K, V, K, V);
    Code:
       0: iconst_4
       1: anewarray     #9                  // class java/util/Map$Entry
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aload_3
      16: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      19: aastore
      20: dup
      21: iconst_2
      22: aload         4
      24: aload         5
      26: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      29: aastore
      30: dup
      31: iconst_3
      32: aload         6
      34: aload         7
      36: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      39: aastore
      40: invokestatic  #11                 // Method com/google/common/collect/RegularImmutableMap.fromEntries:([Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMap;
      43: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> of(K, V, K, V, K, V, K, V, K, V);
    Code:
       0: iconst_5
       1: anewarray     #9                  // class java/util/Map$Entry
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aload_3
      16: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      19: aastore
      20: dup
      21: iconst_2
      22: aload         4
      24: aload         5
      26: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      29: aastore
      30: dup
      31: iconst_3
      32: aload         6
      34: aload         7
      36: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      39: aastore
      40: dup
      41: iconst_4
      42: aload         8
      44: aload         9
      46: invokestatic  #10                 // Method entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      49: aastore
      50: invokestatic  #11                 // Method com/google/common/collect/RegularImmutableMap.fromEntries:([Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMap;
      53: areturn

  static <K, V> java.util.Map$Entry<K, V> entryOf(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method com/google/common/collect/CollectPreconditions.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V
       5: new           #13                 // class java/util/AbstractMap$SimpleImmutableEntry
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #14                 // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      14: areturn

  public static <K, V> com.google.common.collect.ImmutableMap$Builder<K, V> builder();
    Code:
       0: new           #15                 // class com/google/common/collect/ImmutableMap$Builder
       3: dup
       4: invokespecial #16                 // Method com/google/common/collect/ImmutableMap$Builder."<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.ImmutableMap$Builder<K, V> builderWithExpectedSize(int);
    Code:
       0: iload_0
       1: ldc           #17                 // String expectedSize
       3: invokestatic  #18                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
       6: pop
       7: new           #15                 // class com/google/common/collect/ImmutableMap$Builder
      10: dup
      11: iload_0
      12: invokespecial #19                 // Method com/google/common/collect/ImmutableMap$Builder."<init>":(I)V
      15: areturn

  static void checkNoConflict(boolean, java.lang.String, java.util.Map$Entry<?, ?>, java.util.Map$Entry<?, ?>);
    Code:
       0: iload_0
       1: ifne          11
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #20                 // Method conflictException:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;
      10: athrow
      11: return

  static java.lang.IllegalArgumentException conflictException(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: new           #21                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #22                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #24                 // String Multiple entries with same
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #26                 // String :
      22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #28                 // String  and
      31: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> copyOf(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #31                 // class com/google/common/collect/ImmutableMap
       4: ifeq          31
       7: aload_0
       8: instanceof    #32                 // class java/util/SortedMap
      11: ifne          31
      14: aload_0
      15: checkcast     #31                 // class com/google/common/collect/ImmutableMap
      18: astore_1
      19: aload_1
      20: invokevirtual #33                 // Method isPartialView:()Z
      23: ifne          28
      26: aload_1
      27: areturn
      28: goto          48
      31: aload_0
      32: instanceof    #34                 // class java/util/EnumMap
      35: ifeq          48
      38: aload_0
      39: checkcast     #34                 // class java/util/EnumMap
      42: invokestatic  #35                 // Method copyOfEnumMap:(Ljava/util/EnumMap;)Lcom/google/common/collect/ImmutableMap;
      45: astore_1
      46: aload_1
      47: areturn
      48: aload_0
      49: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      54: invokestatic  #37                 // Method copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;
      57: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>>);
    Code:
       0: aload_0
       1: getstatic     #38                 // Field EMPTY_ENTRY_ARRAY:[Ljava/util/Map$Entry;
       4: invokestatic  #39                 // Method com/google/common/collect/Iterables.toArray:(Ljava/lang/Iterable;[Ljava/lang/Object;)[Ljava/lang/Object;
       7: checkcast     #40                 // class "[Ljava/util/Map$Entry;"
      10: checkcast     #40                 // class "[Ljava/util/Map$Entry;"
      13: astore_1
      14: aload_1
      15: arraylength
      16: lookupswitch  { // 2
                     0: 44
                     1: 48
               default: 68
          }
      44: invokestatic  #41                 // Method of:()Lcom/google/common/collect/ImmutableMap;
      47: areturn
      48: aload_1
      49: iconst_0
      50: aaload
      51: astore_2
      52: aload_2
      53: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: aload_2
      59: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: invokestatic  #44                 // Method of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      67: areturn
      68: aload_1
      69: invokestatic  #11                 // Method com/google/common/collect/RegularImmutableMap.fromEntries:([Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMap;
      72: areturn

  private static <K extends java.lang.Enum<K>, V> com.google.common.collect.ImmutableMap<K, V> copyOfEnumMap(java.util.EnumMap<K, ? extends V>);
    Code:
       0: new           #34                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method java/util/EnumMap."<init>":(Ljava/util/EnumMap;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #46                 // Method java/util/EnumMap.entrySet:()Ljava/util/Set;
      13: invokeinterface #47,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          56
      28: aload_2
      29: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #9                  // class java/util/Map$Entry
      37: astore_3
      38: aload_3
      39: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      44: aload_3
      45: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: invokestatic  #12                 // Method com/google/common/collect/CollectPreconditions.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V
      53: goto          19
      56: aload_1
      57: invokestatic  #50                 // Method com/google/common/collect/ImmutableEnumMap.asImmutable:(Ljava/util/EnumMap;)Lcom/google/common/collect/ImmutableMap;
      60: areturn

  com.google.common.collect.ImmutableMap();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: return

  public final V put(K, V);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V putIfAbsent(K, V);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final boolean replace(K, V, V);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V replace(K, V);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V computeIfPresent(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V compute(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V merge(K, V, java.util.function.BiFunction<? super V, ? super V, ? extends V>);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V remove(java.lang.Object);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final void clear();
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method values:()Lcom/google/common/collect/ImmutableCollection;
       4: aload_1
       5: invokevirtual #57                 // Method com/google/common/collect/ImmutableCollection.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public abstract V get(java.lang.Object);

  public final V getOrDefault(java.lang.Object, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnull        14
      10: aload_3
      11: goto          15
      14: aload_2
      15: areturn

  public com.google.common.collect.ImmutableSet<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #58                 // Field entrySet:Lcom/google/common/collect/ImmutableSet;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokevirtual #59                 // Method createEntrySet:()Lcom/google/common/collect/ImmutableSet;
      14: dup_x1
      15: putfield      #58                 // Field entrySet:Lcom/google/common/collect/ImmutableSet;
      18: goto          22
      21: aload_1
      22: areturn

  abstract com.google.common.collect.ImmutableSet<java.util.Map$Entry<K, V>> createEntrySet();

  public com.google.common.collect.ImmutableSet<K> keySet();
    Code:
       0: aload_0
       1: getfield      #60                 // Field keySet:Lcom/google/common/collect/ImmutableSet;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokevirtual #61                 // Method createKeySet:()Lcom/google/common/collect/ImmutableSet;
      14: dup_x1
      15: putfield      #60                 // Field keySet:Lcom/google/common/collect/ImmutableSet;
      18: goto          22
      21: aload_1
      22: areturn

  abstract com.google.common.collect.ImmutableSet<K> createKeySet();

  com.google.common.collect.UnmodifiableIterator<K> keyIterator();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method entrySet:()Lcom/google/common/collect/ImmutableSet;
       4: invokevirtual #63                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       7: astore_1
       8: new           #64                 // class com/google/common/collect/ImmutableMap$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #65                 // Method com/google/common/collect/ImmutableMap$1."<init>":(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/UnmodifiableIterator;)V
      17: areturn

  java.util.Spliterator<K> keySpliterator();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method entrySet:()Lcom/google/common/collect/ImmutableSet;
       4: invokevirtual #66                 // Method com/google/common/collect/ImmutableSet.spliterator:()Ljava/util/Spliterator;
       7: invokedynamic #67,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      12: invokestatic  #68                 // Method com/google/common/collect/CollectSpliterators.map:(Ljava/util/Spliterator;Ljava/util/function/Function;)Ljava/util/Spliterator;
      15: areturn

  public com.google.common.collect.ImmutableCollection<V> values();
    Code:
       0: aload_0
       1: getfield      #69                 // Field values:Lcom/google/common/collect/ImmutableCollection;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokevirtual #70                 // Method createValues:()Lcom/google/common/collect/ImmutableCollection;
      14: dup_x1
      15: putfield      #69                 // Field values:Lcom/google/common/collect/ImmutableCollection;
      18: goto          22
      21: aload_1
      22: areturn

  abstract com.google.common.collect.ImmutableCollection<V> createValues();

  public com.google.common.collect.ImmutableSetMultimap<K, V> asMultimap();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #72                 // Method com/google/common/collect/ImmutableSetMultimap.of:()Lcom/google/common/collect/ImmutableSetMultimap;
      10: areturn
      11: aload_0
      12: getfield      #73                 // Field multimapView:Lcom/google/common/collect/ImmutableSetMultimap;
      15: astore_1
      16: aload_1
      17: ifnonnull     49
      20: aload_0
      21: new           #74                 // class com/google/common/collect/ImmutableSetMultimap
      24: dup
      25: new           #75                 // class com/google/common/collect/ImmutableMap$MapViewOfValuesAsSingletonSets
      28: dup
      29: aload_0
      30: aconst_null
      31: invokespecial #76                 // Method com/google/common/collect/ImmutableMap$MapViewOfValuesAsSingletonSets."<init>":(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableMap$1;)V
      34: aload_0
      35: invokevirtual #54                 // Method size:()I
      38: aconst_null
      39: invokespecial #77                 // Method com/google/common/collect/ImmutableSetMultimap."<init>":(Lcom/google/common/collect/ImmutableMap;ILjava/util/Comparator;)V
      42: dup_x1
      43: putfield      #73                 // Field multimapView:Lcom/google/common/collect/ImmutableSetMultimap;
      46: goto          50
      49: aload_1
      50: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method com/google/common/collect/Maps.equalsImpl:(Ljava/util/Map;Ljava/lang/Object;)Z
       5: ireturn

  abstract boolean isPartialView();

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method entrySet:()Lcom/google/common/collect/ImmutableSet;
       4: invokestatic  #79                 // Method com/google/common/collect/Sets.hashCodeImpl:(Ljava/util/Set;)I
       7: ireturn

  boolean isHashCodeFast();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method com/google/common/collect/Maps.toStringImpl:(Ljava/util/Map;)Ljava/lang/String;
       4: areturn

  java.lang.Object writeReplace();
    Code:
       0: new           #81                 // class com/google/common/collect/ImmutableMap$SerializedForm
       3: dup
       4: aload_0
       5: invokespecial #82                 // Method com/google/common/collect/ImmutableMap$SerializedForm."<init>":(Lcom/google/common/collect/ImmutableMap;)V
       8: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method entrySet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method values:()Lcom/google/common/collect/ImmutableCollection;
       4: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method keySet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #9                  // class java/util/Map$Entry
       4: putstatic     #38                 // Field EMPTY_ENTRY_ARRAY:[Ljava/util/Map$Entry;
       7: return
}
