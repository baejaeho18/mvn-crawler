Compiled from "RsaUsingShaAlgorithm.java"
public class org.jose4j.jws.RsaUsingShaAlgorithm extends org.jose4j.jws.BaseSignatureAlgorithm implements org.jose4j.jws.JsonWebSignatureAlgorithm {
  static final int TRAILER;

  static final java.lang.String MGF1;

  public static final java.lang.String RSASSA_PSS;

  public org.jose4j.jws.RsaUsingShaAlgorithm(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String RSA
       5: invokespecial #2                  // Method org/jose4j/jws/BaseSignatureAlgorithm."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       8: return

  public void validatePublicKey(java.security.PublicKey) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method org/jose4j/jwx/KeyValidationSupport.checkRsaKeySize:(Ljava/security/Key;)V
       4: return

  public void validatePrivateKey(java.security.PrivateKey) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method org/jose4j/jwx/KeyValidationSupport.checkRsaKeySize:(Ljava/security/Key;)V
       4: return

  static java.lang.String choosePssAlgorithmName(java.lang.String);
    Code:
       0: ldc           #4                  // String Signature
       2: invokestatic  #5                  // Method java/security/Security.getAlgorithms:(Ljava/lang/String;)Ljava/util/Set;
       5: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: astore_1
      11: aload_1
      12: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          44
      20: aload_1
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #9                  // class java/lang/String
      29: astore_2
      30: ldc           #10                 // String RSASSA-PSS
      32: aload_2
      33: invokevirtual #11                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      36: ifeq          41
      39: aload_2
      40: areturn
      41: goto          11
      44: aload_0
      45: areturn
}
