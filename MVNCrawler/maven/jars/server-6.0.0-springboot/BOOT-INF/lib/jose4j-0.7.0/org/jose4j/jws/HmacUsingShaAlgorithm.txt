Compiled from "HmacUsingShaAlgorithm.java"
public class org.jose4j.jws.HmacUsingShaAlgorithm extends org.jose4j.jwa.AlgorithmInfo implements org.jose4j.jws.JsonWebSignatureAlgorithm {
  private int minimumKeyLength;

  public org.jose4j.jws.HmacUsingShaAlgorithm(java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jose4j/jwa/AlgorithmInfo."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setAlgorithmIdentifier:(Ljava/lang/String;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method setJavaAlgorithm:(Ljava/lang/String;)V
      14: aload_0
      15: getstatic     #4                  // Field org/jose4j/keys/KeyPersuasion.SYMMETRIC:Lorg/jose4j/keys/KeyPersuasion;
      18: invokevirtual #5                  // Method setKeyPersuasion:(Lorg/jose4j/keys/KeyPersuasion;)V
      21: aload_0
      22: ldc           #6                  // String oct
      24: invokevirtual #7                  // Method setKeyType:(Ljava/lang/String;)V
      27: aload_0
      28: iload_3
      29: putfield      #8                  // Field minimumKeyLength:I
      32: return

  public boolean verifySignature(byte[], java.security.Key, byte[], org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_2
       1: instanceof    #9                  // class javax/crypto/SecretKey
       4: ifne          37
       7: new           #10                 // class org/jose4j/lang/InvalidKeyException
      10: dup
      11: new           #11                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_2
      19: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #15                 // String  cannot be used for HMAC verification.
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #18                 // Method org/jose4j/lang/InvalidKeyException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_2
      39: aload         4
      41: invokespecial #19                 // Method getMacInstance:(Ljava/security/Key;Lorg/jose4j/jca/ProviderContext;)Ljavax/crypto/Mac;
      44: astore        5
      46: aload         5
      48: aload_3
      49: invokevirtual #20                 // Method javax/crypto/Mac.doFinal:([B)[B
      52: astore        6
      54: aload_1
      55: aload         6
      57: invokestatic  #21                 // Method org/jose4j/lang/ByteUtil.secureEquals:([B[B)Z
      60: ireturn

  public byte[] sign(java.security.Key, byte[], org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #19                 // Method getMacInstance:(Ljava/security/Key;Lorg/jose4j/jca/ProviderContext;)Ljavax/crypto/Mac;
       6: astore        4
       8: aload         4
      10: aload_2
      11: invokevirtual #20                 // Method javax/crypto/Mac.doFinal:([B)[B
      14: areturn

  private javax.crypto.Mac getMacInstance(java.security.Key, org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_2
       1: invokevirtual #22                 // Method org/jose4j/jca/ProviderContext.getSuppliedKeyProviderContext:()Lorg/jose4j/jca/ProviderContext$Context;
       4: invokevirtual #23                 // Method org/jose4j/jca/ProviderContext$Context.getMacProvider:()Ljava/lang/String;
       7: astore_3
       8: aload_0
       9: invokevirtual #24                 // Method getJavaAlgorithm:()Ljava/lang/String;
      12: aload_1
      13: aload_3
      14: invokestatic  #25                 // Method org/jose4j/mac/MacUtil.getInitializedMac:(Ljava/lang/String;Ljava/security/Key;Ljava/lang/String;)Ljavax/crypto/Mac;
      17: areturn

  void validateKey(java.security.Key) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #10                 // class org/jose4j/lang/InvalidKeyException
       7: dup
       8: ldc           #26                 // String key is null
      10: invokespecial #18                 // Method org/jose4j/lang/InvalidKeyException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokeinterface #27,  1           // InterfaceMethod java/security/Key.getEncoded:()[B
      20: ifnull        97
      23: aload_1
      24: invokeinterface #27,  1           // InterfaceMethod java/security/Key.getEncoded:()[B
      29: invokestatic  #28                 // Method org/jose4j/lang/ByteUtil.bitLength:([B)I
      32: istore_2
      33: iload_2
      34: aload_0
      35: getfield      #8                  // Field minimumKeyLength:I
      38: if_icmpge     97
      41: new           #10                 // class org/jose4j/lang/InvalidKeyException
      44: dup
      45: new           #11                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #29                 // String A key of the same size as the hash output (i.e.
      54: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #8                  // Field minimumKeyLength:I
      61: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #31                 // String  bits for
      66: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: invokevirtual #32                 // Method getAlgorithmIdentifier:()Ljava/lang/String;
      73: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #33                 // String ) or larger MUST be used with the HMAC SHA algorithms but this key is only
      78: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload_2
      82: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #34                 // String  bits
      87: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #18                 // Method org/jose4j/lang/InvalidKeyException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: return

  public void validateSigningKey(java.security.Key) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method validateKey:(Ljava/security/Key;)V
       5: return

  public void validateVerificationKey(java.security.Key) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method validateKey:(Ljava/security/Key;)V
       5: return

  public boolean isAvailable();
    Code:
       0: ldc           #36                 // String Mac
       2: aload_0
       3: invokevirtual #24                 // Method getJavaAlgorithm:()Ljava/lang/String;
       6: invokestatic  #37                 // Method org/jose4j/jwa/AlgorithmAvailability.isAvailable:(Ljava/lang/String;Ljava/lang/String;)Z
       9: ireturn
}
