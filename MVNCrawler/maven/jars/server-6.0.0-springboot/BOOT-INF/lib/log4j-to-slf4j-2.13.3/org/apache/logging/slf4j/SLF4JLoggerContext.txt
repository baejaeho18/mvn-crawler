Compiled from "SLF4JLoggerContext.java"
public class org.apache.logging.slf4j.SLF4JLoggerContext implements org.apache.logging.log4j.spi.LoggerContext {
  private final org.apache.logging.log4j.spi.LoggerRegistry<org.apache.logging.log4j.spi.ExtendedLogger> loggerRegistry;

  public org.apache.logging.slf4j.SLF4JLoggerContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/logging/log4j/spi/LoggerRegistry
       8: dup
       9: invokespecial #3                  // Method org/apache/logging/log4j/spi/LoggerRegistry."<init>":()V
      12: putfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      15: return

  public java.lang.Object getExternalContext();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: invokevirtual #5                  // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;)Z
       8: ifne          32
      11: aload_0
      12: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      15: aload_1
      16: aconst_null
      17: new           #6                  // class org/apache/logging/slf4j/SLF4JLogger
      20: dup
      21: aload_1
      22: aload_1
      23: invokestatic  #7                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      26: invokespecial #8                  // Method org/apache/logging/slf4j/SLF4JLogger."<init>":(Ljava/lang/String;Lorg/slf4j/Logger;)V
      29: invokevirtual #9                  // Method org/apache/logging/log4j/spi/LoggerRegistry.putIfAbsent:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/apache/logging/log4j/spi/ExtendedLogger;)V
      32: aload_0
      33: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      36: aload_1
      37: invokevirtual #10                 // Method org/apache/logging/log4j/spi/LoggerRegistry.getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/spi/ExtendedLogger;
      40: areturn

  public org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: invokevirtual #5                  // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;)Z
       8: ifne          33
      11: aload_0
      12: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      15: aload_1
      16: aconst_null
      17: new           #6                  // class org/apache/logging/slf4j/SLF4JLogger
      20: dup
      21: aload_1
      22: aload_2
      23: aload_1
      24: invokestatic  #7                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      27: invokespecial #11                 // Method org/apache/logging/slf4j/SLF4JLogger."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/slf4j/Logger;)V
      30: invokevirtual #9                  // Method org/apache/logging/log4j/spi/LoggerRegistry.putIfAbsent:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/apache/logging/log4j/spi/ExtendedLogger;)V
      33: aload_0
      34: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      37: aload_1
      38: invokevirtual #10                 // Method org/apache/logging/log4j/spi/LoggerRegistry.getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/spi/ExtendedLogger;
      41: areturn

  public boolean hasLogger(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: invokevirtual #5                  // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;)Z
       8: ireturn

  public boolean hasLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Z
       9: ireturn

  public boolean hasLogger(java.lang.String, java.lang.Class<? extends org.apache.logging.log4j.message.MessageFactory>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;Ljava/lang/Class;)Z
       9: ireturn
}
