Compiled from "CronJobSpecFluent.java"
public interface io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent<A extends io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getConcurrencyPolicy();

  public abstract A withConcurrencyPolicy(java.lang.String);

  public abstract java.lang.Boolean hasConcurrencyPolicy();

  public abstract A withNewConcurrencyPolicy(java.lang.String);

  public abstract A withNewConcurrencyPolicy(java.lang.StringBuilder);

  public abstract A withNewConcurrencyPolicy(java.lang.StringBuffer);

  public abstract java.lang.Integer getFailedJobsHistoryLimit();

  public abstract A withFailedJobsHistoryLimit(java.lang.Integer);

  public abstract java.lang.Boolean hasFailedJobsHistoryLimit();

  public abstract io.fabric8.kubernetes.api.model.batch.JobTemplateSpec getJobTemplate();

  public abstract io.fabric8.kubernetes.api.model.batch.JobTemplateSpec buildJobTemplate();

  public abstract A withJobTemplate(io.fabric8.kubernetes.api.model.batch.JobTemplateSpec);

  public abstract java.lang.Boolean hasJobTemplate();

  public abstract io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent$JobTemplateNested<A> withNewJobTemplate();

  public abstract io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent$JobTemplateNested<A> withNewJobTemplateLike(io.fabric8.kubernetes.api.model.batch.JobTemplateSpec);

  public abstract io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent$JobTemplateNested<A> editJobTemplate();

  public abstract io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent$JobTemplateNested<A> editOrNewJobTemplate();

  public abstract io.fabric8.kubernetes.api.model.batch.CronJobSpecFluent$JobTemplateNested<A> editOrNewJobTemplateLike(io.fabric8.kubernetes.api.model.batch.JobTemplateSpec);

  public abstract java.lang.String getSchedule();

  public abstract A withSchedule(java.lang.String);

  public abstract java.lang.Boolean hasSchedule();

  public abstract A withNewSchedule(java.lang.String);

  public abstract A withNewSchedule(java.lang.StringBuilder);

  public abstract A withNewSchedule(java.lang.StringBuffer);

  public abstract java.lang.Long getStartingDeadlineSeconds();

  public abstract A withStartingDeadlineSeconds(java.lang.Long);

  public abstract java.lang.Boolean hasStartingDeadlineSeconds();

  public abstract java.lang.Integer getSuccessfulJobsHistoryLimit();

  public abstract A withSuccessfulJobsHistoryLimit(java.lang.Integer);

  public abstract java.lang.Boolean hasSuccessfulJobsHistoryLimit();

  public abstract java.lang.Boolean isSuspend();

  public abstract A withSuspend(java.lang.Boolean);

  public abstract java.lang.Boolean hasSuspend();

  public abstract A withNewSuspend(java.lang.String);

  public abstract A withNewSuspend(boolean);
}
