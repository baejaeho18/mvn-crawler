Compiled from "HTTPIngressPathFluent.java"
public interface io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent<A extends io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.kubernetes.api.model.extensions.IngressBackend getBackend();

  public abstract io.fabric8.kubernetes.api.model.extensions.IngressBackend buildBackend();

  public abstract A withBackend(io.fabric8.kubernetes.api.model.extensions.IngressBackend);

  public abstract java.lang.Boolean hasBackend();

  public abstract io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent$BackendNested<A> withNewBackend();

  public abstract io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent$BackendNested<A> withNewBackendLike(io.fabric8.kubernetes.api.model.extensions.IngressBackend);

  public abstract io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent$BackendNested<A> editBackend();

  public abstract io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent$BackendNested<A> editOrNewBackend();

  public abstract io.fabric8.kubernetes.api.model.extensions.HTTPIngressPathFluent$BackendNested<A> editOrNewBackendLike(io.fabric8.kubernetes.api.model.extensions.IngressBackend);

  public abstract java.lang.String getPath();

  public abstract A withPath(java.lang.String);

  public abstract java.lang.Boolean hasPath();

  public abstract A withNewPath(java.lang.String);

  public abstract A withNewPath(java.lang.StringBuilder);

  public abstract A withNewPath(java.lang.StringBuffer);

  public abstract java.lang.String getPathType();

  public abstract A withPathType(java.lang.String);

  public abstract java.lang.Boolean hasPathType();

  public abstract A withNewPathType(java.lang.String);

  public abstract A withNewPathType(java.lang.StringBuilder);

  public abstract A withNewPathType(java.lang.StringBuffer);
}
