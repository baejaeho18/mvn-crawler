Compiled from "DaemonSetStatusFluent.java"
public interface io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent<A extends io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Integer getCollisionCount();

  public abstract A withCollisionCount(java.lang.Integer);

  public abstract java.lang.Boolean hasCollisionCount();

  public abstract A addToConditions(int, io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition);

  public abstract A setToConditions(int, io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition);

  public abstract A addToConditions(io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition>);

  public abstract A removeFromConditions(io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition>);

  public abstract A removeMatchingFromConditions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DaemonSetConditionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition> getConditions();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition> buildConditions();

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition buildCondition(int);

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition buildFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition buildLastCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition buildMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DaemonSetConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DaemonSetConditionBuilder>);

  public abstract A withConditions(java.util.List<io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition>);

  public abstract A withConditions(io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract A addNewCondition(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> addNewConditionLike(io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition);

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.fabric8.kubernetes.api.model.extensions.DaemonSetCondition);

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DaemonSetStatusFluent$ConditionsNested<A> editMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DaemonSetConditionBuilder>);

  public abstract java.lang.Integer getCurrentNumberScheduled();

  public abstract A withCurrentNumberScheduled(java.lang.Integer);

  public abstract java.lang.Boolean hasCurrentNumberScheduled();

  public abstract java.lang.Integer getDesiredNumberScheduled();

  public abstract A withDesiredNumberScheduled(java.lang.Integer);

  public abstract java.lang.Boolean hasDesiredNumberScheduled();

  public abstract java.lang.Integer getNumberAvailable();

  public abstract A withNumberAvailable(java.lang.Integer);

  public abstract java.lang.Boolean hasNumberAvailable();

  public abstract java.lang.Integer getNumberMisscheduled();

  public abstract A withNumberMisscheduled(java.lang.Integer);

  public abstract java.lang.Boolean hasNumberMisscheduled();

  public abstract java.lang.Integer getNumberReady();

  public abstract A withNumberReady(java.lang.Integer);

  public abstract java.lang.Boolean hasNumberReady();

  public abstract java.lang.Integer getNumberUnavailable();

  public abstract A withNumberUnavailable(java.lang.Integer);

  public abstract java.lang.Boolean hasNumberUnavailable();

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract java.lang.Integer getUpdatedNumberScheduled();

  public abstract A withUpdatedNumberScheduled(java.lang.Integer);

  public abstract java.lang.Boolean hasUpdatedNumberScheduled();
}
