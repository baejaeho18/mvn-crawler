Compiled from "DeploymentConditionFluent.java"
public interface io.fabric8.kubernetes.api.model.extensions.DeploymentConditionFluent<A extends io.fabric8.kubernetes.api.model.extensions.DeploymentConditionFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getLastTransitionTime();

  public abstract A withLastTransitionTime(java.lang.String);

  public abstract java.lang.Boolean hasLastTransitionTime();

  public abstract A withNewLastTransitionTime(java.lang.String);

  public abstract A withNewLastTransitionTime(java.lang.StringBuilder);

  public abstract A withNewLastTransitionTime(java.lang.StringBuffer);

  public abstract java.lang.String getLastUpdateTime();

  public abstract A withLastUpdateTime(java.lang.String);

  public abstract java.lang.Boolean hasLastUpdateTime();

  public abstract A withNewLastUpdateTime(java.lang.String);

  public abstract A withNewLastUpdateTime(java.lang.StringBuilder);

  public abstract A withNewLastUpdateTime(java.lang.StringBuffer);

  public abstract java.lang.String getMessage();

  public abstract A withMessage(java.lang.String);

  public abstract java.lang.Boolean hasMessage();

  public abstract A withNewMessage(java.lang.String);

  public abstract A withNewMessage(java.lang.StringBuilder);

  public abstract A withNewMessage(java.lang.StringBuffer);

  public abstract java.lang.String getReason();

  public abstract A withReason(java.lang.String);

  public abstract java.lang.Boolean hasReason();

  public abstract A withNewReason(java.lang.String);

  public abstract A withNewReason(java.lang.StringBuilder);

  public abstract A withNewReason(java.lang.StringBuffer);

  public abstract java.lang.String getStatus();

  public abstract A withStatus(java.lang.String);

  public abstract java.lang.Boolean hasStatus();

  public abstract A withNewStatus(java.lang.String);

  public abstract A withNewStatus(java.lang.StringBuilder);

  public abstract A withNewStatus(java.lang.StringBuffer);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
