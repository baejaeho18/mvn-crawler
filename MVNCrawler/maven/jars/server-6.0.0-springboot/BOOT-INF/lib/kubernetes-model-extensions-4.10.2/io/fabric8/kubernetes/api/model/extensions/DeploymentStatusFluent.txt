Compiled from "DeploymentStatusFluent.java"
public interface io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent<A extends io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Integer getAvailableReplicas();

  public abstract A withAvailableReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasAvailableReplicas();

  public abstract java.lang.Integer getCollisionCount();

  public abstract A withCollisionCount(java.lang.Integer);

  public abstract java.lang.Boolean hasCollisionCount();

  public abstract A addToConditions(int, io.fabric8.kubernetes.api.model.extensions.DeploymentCondition);

  public abstract A setToConditions(int, io.fabric8.kubernetes.api.model.extensions.DeploymentCondition);

  public abstract A addToConditions(io.fabric8.kubernetes.api.model.extensions.DeploymentCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.fabric8.kubernetes.api.model.extensions.DeploymentCondition>);

  public abstract A removeFromConditions(io.fabric8.kubernetes.api.model.extensions.DeploymentCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.fabric8.kubernetes.api.model.extensions.DeploymentCondition>);

  public abstract A removeMatchingFromConditions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DeploymentConditionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.extensions.DeploymentCondition> getConditions();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.extensions.DeploymentCondition> buildConditions();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentCondition buildCondition(int);

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentCondition buildFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentCondition buildLastCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentCondition buildMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DeploymentConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DeploymentConditionBuilder>);

  public abstract A withConditions(java.util.List<io.fabric8.kubernetes.api.model.extensions.DeploymentCondition>);

  public abstract A withConditions(io.fabric8.kubernetes.api.model.extensions.DeploymentCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> addNewConditionLike(io.fabric8.kubernetes.api.model.extensions.DeploymentCondition);

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.fabric8.kubernetes.api.model.extensions.DeploymentCondition);

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.fabric8.kubernetes.api.model.extensions.DeploymentStatusFluent$ConditionsNested<A> editMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.extensions.DeploymentConditionBuilder>);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract java.lang.Integer getReadyReplicas();

  public abstract A withReadyReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasReadyReplicas();

  public abstract java.lang.Integer getReplicas();

  public abstract A withReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasReplicas();

  public abstract java.lang.Integer getUnavailableReplicas();

  public abstract A withUnavailableReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasUnavailableReplicas();

  public abstract java.lang.Integer getUpdatedReplicas();

  public abstract A withUpdatedReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasUpdatedReplicas();
}
