Compiled from "RawWatchConnectionManager.java"
public class io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager implements io.fabric8.kubernetes.client.Watch {
  private static final org.slf4j.Logger logger;

  private com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private io.fabric8.kubernetes.client.Watcher<java.lang.String> watcher;

  private okhttp3.HttpUrl$Builder watchUrlBuilder;

  private final java.util.concurrent.atomic.AtomicBoolean forceClosed;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.String> resourceVersion;

  private final int reconnectLimit;

  private final int reconnectInterval;

  private int maxIntervalExponent;

  private final java.util.concurrent.atomic.AtomicInteger currentReconnectAttempt;

  private final java.util.concurrent.atomic.AtomicReference<okhttp3.WebSocket> webSocketRef;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final java.util.concurrent.atomic.AtomicBoolean reconnectPending;

  private final java.util.concurrent.ArrayBlockingQueue<java.lang.Object> queue;

  private okhttp3.WebSocket webSocket;

  private okhttp3.OkHttpClient clonedClient;

  public io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager(okhttp3.OkHttpClient, okhttp3.HttpUrl$Builder, io.fabric8.kubernetes.api.model.ListOptions, com.fasterxml.jackson.databind.ObjectMapper, io.fabric8.kubernetes.client.Watcher<java.lang.String>, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #17                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #8                  // Field forceClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #19                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: iconst_0
      21: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      24: putfield      #13                 // Field currentReconnectAttempt:Ljava/util/concurrent/atomic/AtomicInteger;
      27: aload_0
      28: new           #21                 // class java/util/concurrent/atomic/AtomicReference
      31: dup
      32: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      35: putfield      #14                 // Field webSocketRef:Ljava/util/concurrent/atomic/AtomicReference;
      38: aload_0
      39: new           #17                 // class java/util/concurrent/atomic/AtomicBoolean
      42: dup
      43: iconst_0
      44: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      47: putfield      #12                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      50: aload_0
      51: new           #17                 // class java/util/concurrent/atomic/AtomicBoolean
      54: dup
      55: iconst_0
      56: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      59: putfield      #4                  // Field reconnectPending:Ljava/util/concurrent/atomic/AtomicBoolean;
      62: aload_0
      63: new           #24                 // class java/util/concurrent/ArrayBlockingQueue
      66: dup
      67: iconst_1
      68: invokespecial #25                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      71: putfield      #11                 // Field queue:Ljava/util/concurrent/ArrayBlockingQueue;
      74: aload_0
      75: aload_1
      76: putfield      #26                 // Field clonedClient:Lokhttp3/OkHttpClient;
      79: aload_0
      80: aload_2
      81: putfield      #27                 // Field watchUrlBuilder:Lokhttp3/HttpUrl$Builder;
      84: aload_0
      85: aload         4
      87: putfield      #10                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      90: aload_0
      91: aload         5
      93: putfield      #9                  // Field watcher:Lio/fabric8/kubernetes/client/Watcher;
      96: aload_0
      97: iload         6
      99: putfield      #7                  // Field reconnectLimit:I
     102: aload_0
     103: iload         7
     105: putfield      #28                 // Field reconnectInterval:I
     108: aload_0
     109: new           #21                 // class java/util/concurrent/atomic/AtomicReference
     112: dup
     113: aload_3
     114: invokevirtual #29                 // Method io/fabric8/kubernetes/api/model/ListOptions.getResourceVersion:()Ljava/lang/String;
     117: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     120: putfield      #31                 // Field resourceVersion:Ljava/util/concurrent/atomic/AtomicReference;
     123: aload_0
     124: iload         8
     126: putfield      #32                 // Field maxIntervalExponent:I
     129: aload_0
     130: aload_0
     131: invokedynamic #33,  0             // InvokeDynamic #0:newThread:(Lio/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager;)Ljava/util/concurrent/ThreadFactory;
     136: invokestatic  #34                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
     139: putfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
     142: aload_0
     143: invokespecial #3                  // Method runWatch:()V
     146: return

  private void runWatch();
    Code:
       0: aload_0
       1: getfield      #31                 // Field resourceVersion:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        40
      10: aload_0
      11: getfield      #27                 // Field watchUrlBuilder:Lokhttp3/HttpUrl$Builder;
      14: ldc           #36                 // String resourceVersion
      16: invokevirtual #37                 // Method okhttp3/HttpUrl$Builder.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
      19: pop
      20: aload_0
      21: getfield      #27                 // Field watchUrlBuilder:Lokhttp3/HttpUrl$Builder;
      24: ldc           #36                 // String resourceVersion
      26: aload_0
      27: getfield      #31                 // Field resourceVersion:Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: checkcast     #38                 // class java/lang/String
      36: invokevirtual #39                 // Method okhttp3/HttpUrl$Builder.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
      39: pop
      40: aload_0
      41: getfield      #27                 // Field watchUrlBuilder:Lokhttp3/HttpUrl$Builder;
      44: invokevirtual #40                 // Method okhttp3/HttpUrl$Builder.build:()Lokhttp3/HttpUrl;
      47: astore_1
      48: new           #41                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      55: aload_1
      56: invokevirtual #43                 // Method okhttp3/HttpUrl.url:()Ljava/net/URL;
      59: invokevirtual #44                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      62: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #46                 // String ://
      67: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokevirtual #43                 // Method okhttp3/HttpUrl.url:()Ljava/net/URL;
      74: invokevirtual #47                 // Method java/net/URL.getHost:()Ljava/lang/String;
      77: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: astore_2
      84: aload_1
      85: invokevirtual #43                 // Method okhttp3/HttpUrl.url:()Ljava/net/URL;
      88: invokevirtual #49                 // Method java/net/URL.getPort:()I
      91: iconst_m1
      92: if_icmpeq     125
      95: new           #41                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     102: aload_2
     103: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: ldc           #50                 // String :
     108: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_1
     112: invokevirtual #43                 // Method okhttp3/HttpUrl.url:()Ljava/net/URL;
     115: invokevirtual #49                 // Method java/net/URL.getPort:()I
     118: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: astore_2
     125: new           #52                 // class okhttp3/Request$Builder
     128: dup
     129: invokespecial #53                 // Method okhttp3/Request$Builder."<init>":()V
     132: invokevirtual #54                 // Method okhttp3/Request$Builder.get:()Lokhttp3/Request$Builder;
     135: aload_1
     136: invokevirtual #55                 // Method okhttp3/Request$Builder.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
     139: ldc           #56                 // String Origin
     141: aload_2
     142: invokevirtual #57                 // Method okhttp3/Request$Builder.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
     145: invokevirtual #58                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
     148: astore_3
     149: aload_0
     150: aload_0
     151: getfield      #26                 // Field clonedClient:Lokhttp3/OkHttpClient;
     154: aload_3
     155: new           #59                 // class io/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager$1
     158: dup
     159: aload_0
     160: invokespecial #60                 // Method io/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager$1."<init>":(Lio/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager;)V
     163: invokevirtual #61                 // Method okhttp3/OkHttpClient.newWebSocket:(Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;
     166: putfield      #62                 // Field webSocket:Lokhttp3/WebSocket;
     169: return

  private void scheduleReconnect();
    Code:
       0: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #63                 // String Submitting reconnect task to the executor
       5: invokeinterface #64,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      14: invokeinterface #65,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isShutdown:()Z
      19: ifne          42
      22: aload_0
      23: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      26: new           #66                 // class io/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager$2
      29: dup
      30: aload_0
      31: ldc           #67                 // String scheduleReconnect
      33: invokespecial #68                 // Method io/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager$2."<init>":(Lio/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager;Ljava/lang/String;)V
      36: invokeinterface #69,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      41: pop
      42: return

  public void waitUntilReady();
    Code:
       0: aload_0
       1: getfield      #11                 // Field queue:Ljava/util/concurrent/ArrayBlockingQueue;
       4: ldc2_w        #70                 // long 10l
       7: getstatic     #72                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokestatic  #73                 // Method io/fabric8/kubernetes/client/utils/Utils.waitUntilReady:(Ljava/util/concurrent/BlockingQueue;JLjava/util/concurrent/TimeUnit;)Z
      13: pop
      14: return

  public void close();
    Code:
       0: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #74                 // String Force closing the watch {}
       5: aload_0
       6: invokeinterface #75,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: aconst_null
      13: invokespecial #6                  // Method closeEvent:(Lio/fabric8/kubernetes/client/KubernetesClientException;)V
      16: aload_0
      17: aload_0
      18: getfield      #14                 // Field webSocketRef:Ljava/util/concurrent/atomic/AtomicReference;
      21: aconst_null
      22: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #77                 // class okhttp3/WebSocket
      28: invokespecial #78                 // Method closeWebSocket:(Lokhttp3/WebSocket;)V
      31: aload_0
      32: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      35: invokeinterface #65,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isShutdown:()Z
      40: ifne          98
      43: aload_0
      44: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      47: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      52: aload_0
      53: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      56: lconst_1
      57: getstatic     #72                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      60: invokeinterface #80,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      65: ifne          89
      68: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
      71: ldc           #81                 // String Executor didn\'t terminate in time after shutdown in close(), killing it in: {}
      73: aload_0
      74: invokeinterface #82,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      79: aload_0
      80: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      83: invokeinterface #83,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
      88: pop
      89: goto          98
      92: astore_1
      93: aload_1
      94: invokestatic  #85                 // Method io/fabric8/kubernetes/client/KubernetesClientException.launderThrowable:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      97: athrow
      98: return
    Exception table:
       from    to  target type
          43    89    92   Class java/lang/Throwable

  private void closeEvent(io.fabric8.kubernetes.client.KubernetesClientException);
    Code:
       0: aload_0
       1: getfield      #8                  // Field forceClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #86                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifeq          22
      11: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
      14: ldc           #87                 // String Ignoring duplicate firing of onClose event
      16: invokeinterface #64,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      21: return
      22: aload_0
      23: getfield      #9                  // Field watcher:Lio/fabric8/kubernetes/client/Watcher;
      26: aload_1
      27: invokeinterface #88,  2           // InterfaceMethod io/fabric8/kubernetes/client/Watcher.onClose:(Lio/fabric8/kubernetes/client/KubernetesClientException;)V
      32: return

  private void closeWebSocket(okhttp3.WebSocket);
    Code:
       0: aload_1
       1: ifnull        60
       4: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
       7: ldc           #89                 // String Closing websocket {}
       9: aload_1
      10: invokeinterface #75,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_1
      16: sipush        1000
      19: aconst_null
      20: invokeinterface #90,  3           // InterfaceMethod okhttp3/WebSocket.close:(ILjava/lang/String;)Z
      25: ifne          38
      28: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
      31: ldc           #91                 // String Failed to close websocket
      33: invokeinterface #92,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      38: goto          60
      41: astore_2
      42: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
      45: ldc           #94                 // String Called close on already closed websocket: {} {}
      47: aload_2
      48: invokevirtual #95                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: aload_2
      52: invokevirtual #96                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
      55: invokeinterface #97,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      60: return
    Exception table:
       from    to  target type
          15    38    41   Class java/lang/IllegalStateException

  private long nextReconnectInterval();
    Code:
       0: aload_0
       1: getfield      #13                 // Field currentReconnectAttempt:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #32                 // Field maxIntervalExponent:I
      13: if_icmple     21
      16: aload_0
      17: getfield      #32                 // Field maxIntervalExponent:I
      20: istore_1
      21: aload_0
      22: getfield      #28                 // Field reconnectInterval:I
      25: iconst_1
      26: iload_1
      27: ishl
      28: imul
      29: i2l
      30: lstore_2
      31: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
      34: new           #41                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #99                 // String Current reconnect backoff is
      43: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: lload_2
      47: invokevirtual #100                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      50: ldc           #101                // String  milliseconds (T
      52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_1
      56: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc           #102                // String )
      61: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #64,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      72: lload_2
      73: lreturn

  private java.lang.Thread lambda$new$0(java.lang.Runnable);
    Code:
       0: new           #103                // class java/lang/Thread
       3: dup
       4: aload_1
       5: new           #41                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #104                // String Executor for Watch
      14: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: invokestatic  #105                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      21: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #106                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      30: astore_2
      31: aload_2
      32: iconst_1
      33: invokevirtual #107                // Method java/lang/Thread.setDaemon:(Z)V
      36: aload_2
      37: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
       3: areturn

  static java.util.concurrent.atomic.AtomicReference access$100(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #14                 // Field webSocketRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$200(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #13                 // Field currentReconnectAttempt:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$300(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #12                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static java.util.concurrent.ArrayBlockingQueue access$400(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #11                 // Field queue:Ljava/util/concurrent/ArrayBlockingQueue;
       4: areturn

  static com.fasterxml.jackson.databind.ObjectMapper access$500(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #10                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: areturn

  static io.fabric8.kubernetes.client.Watcher access$600(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #9                  // Field watcher:Lio/fabric8/kubernetes/client/Watcher;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$700(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #8                  // Field forceClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static int access$800(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #7                  // Field reconnectLimit:I
       4: ireturn

  static void access$900(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager, io.fabric8.kubernetes.client.KubernetesClientException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method closeEvent:(Lio/fabric8/kubernetes/client/KubernetesClientException;)V
       5: return

  static void access$1000(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method scheduleReconnect:()V
       4: return

  static java.util.concurrent.atomic.AtomicBoolean access$1100(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #4                  // Field reconnectPending:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static void access$1200(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method runWatch:()V
       4: return

  static long access$1300(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method nextReconnectInterval:()J
       4: lreturn

  static java.util.concurrent.ScheduledExecutorService access$1400(io.fabric8.kubernetes.client.dsl.internal.RawWatchConnectionManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static {};
    Code:
       0: ldc           #108                // class io/fabric8/kubernetes/client/dsl/internal/RawWatchConnectionManager
       2: invokestatic  #109                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #15                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
