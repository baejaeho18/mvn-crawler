Compiled from "KubernetesClient.java"
public interface io.fabric8.kubernetes.client.KubernetesClient extends io.fabric8.kubernetes.client.Client {
  public abstract io.fabric8.kubernetes.client.dsl.NonNamespaceOperation<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinition, io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionList, io.fabric8.kubernetes.api.model.apiextensions.DoneableCustomResourceDefinition, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinition, io.fabric8.kubernetes.api.model.apiextensions.DoneableCustomResourceDefinition>> customResourceDefinitions();

  public abstract <T extends io.fabric8.kubernetes.api.model.HasMetadata, L extends io.fabric8.kubernetes.api.model.KubernetesResourceList, D extends io.fabric8.kubernetes.api.model.Doneable<T>> io.fabric8.kubernetes.client.dsl.MixedOperation<T, L, D, io.fabric8.kubernetes.client.dsl.Resource<T, D>> customResources(io.fabric8.kubernetes.client.dsl.base.CustomResourceDefinitionContext, java.lang.Class<T>, java.lang.Class<L>, java.lang.Class<D>);

  public abstract <T extends io.fabric8.kubernetes.api.model.HasMetadata, L extends io.fabric8.kubernetes.api.model.KubernetesResourceList, D extends io.fabric8.kubernetes.api.model.Doneable<T>> io.fabric8.kubernetes.client.dsl.MixedOperation<T, L, D, io.fabric8.kubernetes.client.dsl.Resource<T, D>> customResources(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinition, java.lang.Class<T>, java.lang.Class<L>, java.lang.Class<D>);

  public abstract <T extends io.fabric8.kubernetes.api.model.HasMetadata, L extends io.fabric8.kubernetes.api.model.KubernetesResourceList, D extends io.fabric8.kubernetes.api.model.Doneable<T>> io.fabric8.kubernetes.client.dsl.MixedOperation<T, L, D, io.fabric8.kubernetes.client.dsl.Resource<T, D>> customResource(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinition, java.lang.Class<T>, java.lang.Class<L>, java.lang.Class<D>);

  public abstract io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extensions();

  public abstract io.fabric8.kubernetes.client.VersionInfo getVersion();

  public abstract io.fabric8.kubernetes.client.dsl.internal.RawCustomResourceOperationsImpl customResource(io.fabric8.kubernetes.client.dsl.base.CustomResourceDefinitionContext);

  public abstract io.fabric8.kubernetes.client.AdmissionRegistrationAPIGroupDSL admissionRegistration();

  public abstract io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL apps();

  public abstract io.fabric8.kubernetes.client.dsl.AutoscalingAPIGroupDSL autoscaling();

  public abstract io.fabric8.kubernetes.client.dsl.NetworkAPIGroupDSL network();

  public abstract io.fabric8.kubernetes.client.dsl.StorageAPIGroupDSL storage();

  public abstract io.fabric8.kubernetes.client.dsl.SettingsAPIGroupDSL settings();

  public abstract io.fabric8.kubernetes.client.dsl.BatchAPIGroupDSL batch();

  public abstract io.fabric8.kubernetes.client.dsl.MetricAPIGroupDSL top();

  public abstract io.fabric8.kubernetes.client.dsl.PolicyAPIGroupDSL policy();

  public abstract io.fabric8.kubernetes.client.dsl.RbacAPIGroupDSL rbac();

  public abstract io.fabric8.kubernetes.client.dsl.SchedulingAPIGroupDSL scheduling();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.ComponentStatus, io.fabric8.kubernetes.api.model.ComponentStatusList, io.fabric8.kubernetes.api.model.DoneableComponentStatus, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.ComponentStatus, io.fabric8.kubernetes.api.model.DoneableComponentStatus>> componentstatuses();

  public abstract io.fabric8.kubernetes.client.dsl.ParameterNamespaceListVisitFromServerGetDeleteRecreateWaitApplicable<io.fabric8.kubernetes.api.model.HasMetadata, java.lang.Boolean> load(java.io.InputStream);

  public abstract io.fabric8.kubernetes.client.dsl.ParameterNamespaceListVisitFromServerGetDeleteRecreateWaitApplicable<io.fabric8.kubernetes.api.model.HasMetadata, java.lang.Boolean> resourceList(java.lang.String);

  public abstract io.fabric8.kubernetes.client.dsl.NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable<io.fabric8.kubernetes.api.model.HasMetadata, java.lang.Boolean> resourceList(io.fabric8.kubernetes.api.model.KubernetesResourceList);

  public abstract io.fabric8.kubernetes.client.dsl.NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable<io.fabric8.kubernetes.api.model.HasMetadata, java.lang.Boolean> resourceList(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract io.fabric8.kubernetes.client.dsl.NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable<io.fabric8.kubernetes.api.model.HasMetadata, java.lang.Boolean> resourceList(java.util.Collection<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract <T extends io.fabric8.kubernetes.api.model.HasMetadata> io.fabric8.kubernetes.client.dsl.NamespaceVisitFromServerGetWatchDeleteRecreateWaitApplicable<T, java.lang.Boolean> resource(T);

  public abstract io.fabric8.kubernetes.client.dsl.NamespaceVisitFromServerGetWatchDeleteRecreateWaitApplicable<io.fabric8.kubernetes.api.model.HasMetadata, java.lang.Boolean> resource(java.lang.String);

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.Binding, io.fabric8.kubernetes.api.model.KubernetesResourceList, io.fabric8.kubernetes.api.model.DoneableBinding, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.Binding, io.fabric8.kubernetes.api.model.DoneableBinding>> bindings();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.Endpoints, io.fabric8.kubernetes.api.model.EndpointsList, io.fabric8.kubernetes.api.model.DoneableEndpoints, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.Endpoints, io.fabric8.kubernetes.api.model.DoneableEndpoints>> endpoints();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.Event, io.fabric8.kubernetes.api.model.EventList, io.fabric8.kubernetes.api.model.DoneableEvent, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.Event, io.fabric8.kubernetes.api.model.DoneableEvent>> events();

  public abstract io.fabric8.kubernetes.client.dsl.NonNamespaceOperation<io.fabric8.kubernetes.api.model.Namespace, io.fabric8.kubernetes.api.model.NamespaceList, io.fabric8.kubernetes.api.model.DoneableNamespace, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.Namespace, io.fabric8.kubernetes.api.model.DoneableNamespace>> namespaces();

  public abstract io.fabric8.kubernetes.client.dsl.NonNamespaceOperation<io.fabric8.kubernetes.api.model.Node, io.fabric8.kubernetes.api.model.NodeList, io.fabric8.kubernetes.api.model.DoneableNode, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.Node, io.fabric8.kubernetes.api.model.DoneableNode>> nodes();

  public abstract io.fabric8.kubernetes.client.dsl.NonNamespaceOperation<io.fabric8.kubernetes.api.model.PersistentVolume, io.fabric8.kubernetes.api.model.PersistentVolumeList, io.fabric8.kubernetes.api.model.DoneablePersistentVolume, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.PersistentVolume, io.fabric8.kubernetes.api.model.DoneablePersistentVolume>> persistentVolumes();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.PersistentVolumeClaim, io.fabric8.kubernetes.api.model.PersistentVolumeClaimList, io.fabric8.kubernetes.api.model.DoneablePersistentVolumeClaim, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.PersistentVolumeClaim, io.fabric8.kubernetes.api.model.DoneablePersistentVolumeClaim>> persistentVolumeClaims();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.Pod, io.fabric8.kubernetes.api.model.PodList, io.fabric8.kubernetes.api.model.DoneablePod, io.fabric8.kubernetes.client.dsl.PodResource<io.fabric8.kubernetes.api.model.Pod, io.fabric8.kubernetes.api.model.DoneablePod>> pods();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.ReplicationController, io.fabric8.kubernetes.api.model.ReplicationControllerList, io.fabric8.kubernetes.api.model.DoneableReplicationController, io.fabric8.kubernetes.client.dsl.RollableScalableResource<io.fabric8.kubernetes.api.model.ReplicationController, io.fabric8.kubernetes.api.model.DoneableReplicationController>> replicationControllers();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.ResourceQuota, io.fabric8.kubernetes.api.model.ResourceQuotaList, io.fabric8.kubernetes.api.model.DoneableResourceQuota, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.ResourceQuota, io.fabric8.kubernetes.api.model.DoneableResourceQuota>> resourceQuotas();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.Secret, io.fabric8.kubernetes.api.model.SecretList, io.fabric8.kubernetes.api.model.DoneableSecret, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.Secret, io.fabric8.kubernetes.api.model.DoneableSecret>> secrets();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.Service, io.fabric8.kubernetes.api.model.ServiceList, io.fabric8.kubernetes.api.model.DoneableService, io.fabric8.kubernetes.client.dsl.ServiceResource<io.fabric8.kubernetes.api.model.Service, io.fabric8.kubernetes.api.model.DoneableService>> services();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.ServiceAccount, io.fabric8.kubernetes.api.model.ServiceAccountList, io.fabric8.kubernetes.api.model.DoneableServiceAccount, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.ServiceAccount, io.fabric8.kubernetes.api.model.DoneableServiceAccount>> serviceAccounts();

  public abstract io.fabric8.kubernetes.client.dsl.KubernetesListMixedOperation lists();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.ConfigMap, io.fabric8.kubernetes.api.model.ConfigMapList, io.fabric8.kubernetes.api.model.DoneableConfigMap, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.ConfigMap, io.fabric8.kubernetes.api.model.DoneableConfigMap>> configMaps();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.LimitRange, io.fabric8.kubernetes.api.model.LimitRangeList, io.fabric8.kubernetes.api.model.DoneableLimitRange, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.LimitRange, io.fabric8.kubernetes.api.model.DoneableLimitRange>> limitRanges();

  public abstract io.fabric8.kubernetes.client.dsl.SubjectAccessReviewDSL subjectAccessReviewAuth();

  public abstract io.fabric8.kubernetes.client.informers.SharedInformerFactory informers();

  public abstract io.fabric8.kubernetes.client.informers.SharedInformerFactory informers(java.util.concurrent.ExecutorService);

  public abstract <C extends io.fabric8.kubernetes.client.dsl.Namespaceable<C> & io.fabric8.kubernetes.client.KubernetesClient> io.fabric8.kubernetes.client.extended.leaderelection.LeaderElectorBuilder<C> leaderElector();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.coordination.v1.Lease, io.fabric8.kubernetes.api.model.coordination.v1.LeaseList, io.fabric8.kubernetes.api.model.coordination.v1.DoneableLease, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.coordination.v1.Lease, io.fabric8.kubernetes.api.model.coordination.v1.DoneableLease>> leases();

  public abstract io.fabric8.kubernetes.client.dsl.V1APIGroupDSL v1();
}
