Compiled from "ExtensionsAPIGroupDSL.java"
public interface io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extends io.fabric8.kubernetes.client.Client {
  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.extensions.DaemonSet, io.fabric8.kubernetes.api.model.extensions.DaemonSetList, io.fabric8.kubernetes.api.model.extensions.DoneableDaemonSet, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.extensions.DaemonSet, io.fabric8.kubernetes.api.model.extensions.DoneableDaemonSet>> daemonSets();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.apps.Deployment, io.fabric8.kubernetes.api.model.apps.DeploymentList, io.fabric8.kubernetes.api.model.apps.DoneableDeployment, io.fabric8.kubernetes.client.dsl.RollableScalableResource<io.fabric8.kubernetes.api.model.apps.Deployment, io.fabric8.kubernetes.api.model.apps.DoneableDeployment>> deployments();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.extensions.Ingress, io.fabric8.kubernetes.api.model.extensions.IngressList, io.fabric8.kubernetes.api.model.extensions.DoneableIngress, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.extensions.Ingress, io.fabric8.kubernetes.api.model.extensions.DoneableIngress>> ingress();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.extensions.Ingress, io.fabric8.kubernetes.api.model.extensions.IngressList, io.fabric8.kubernetes.api.model.extensions.DoneableIngress, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.extensions.Ingress, io.fabric8.kubernetes.api.model.extensions.DoneableIngress>> ingresses();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.batch.Job, io.fabric8.kubernetes.api.model.batch.JobList, io.fabric8.kubernetes.api.model.batch.DoneableJob, io.fabric8.kubernetes.client.dsl.ScalableResource<io.fabric8.kubernetes.api.model.batch.Job, io.fabric8.kubernetes.api.model.batch.DoneableJob>> jobs();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.extensions.NetworkPolicy, io.fabric8.kubernetes.api.model.extensions.NetworkPolicyList, io.fabric8.kubernetes.api.model.extensions.DoneableNetworkPolicy, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.extensions.NetworkPolicy, io.fabric8.kubernetes.api.model.extensions.DoneableNetworkPolicy>> networkPolicies();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.apps.ReplicaSet, io.fabric8.kubernetes.api.model.apps.ReplicaSetList, io.fabric8.kubernetes.api.model.apps.DoneableReplicaSet, io.fabric8.kubernetes.client.dsl.RollableScalableResource<io.fabric8.kubernetes.api.model.apps.ReplicaSet, io.fabric8.kubernetes.api.model.apps.DoneableReplicaSet>> replicaSets();

  public abstract io.fabric8.kubernetes.client.dsl.MixedOperation<io.fabric8.kubernetes.api.model.policy.PodSecurityPolicy, io.fabric8.kubernetes.api.model.policy.PodSecurityPolicyList, io.fabric8.kubernetes.api.model.policy.DoneablePodSecurityPolicy, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.kubernetes.api.model.policy.PodSecurityPolicy, io.fabric8.kubernetes.api.model.policy.DoneablePodSecurityPolicy>> podSecurityPolicies();
}
