Compiled from "ImageStreamOperationsImpl.java"
public class io.fabric8.openshift.client.dsl.internal.ImageStreamOperationsImpl extends io.fabric8.openshift.client.dsl.internal.OpenShiftOperation<io.fabric8.openshift.api.model.ImageStream, io.fabric8.openshift.api.model.ImageStreamList, io.fabric8.openshift.api.model.DoneableImageStream, io.fabric8.kubernetes.client.dsl.Resource<io.fabric8.openshift.api.model.ImageStream, io.fabric8.openshift.api.model.DoneableImageStream>> {
  public io.fabric8.openshift.client.dsl.internal.ImageStreamOperationsImpl(okhttp3.OkHttpClient, io.fabric8.openshift.client.OpenShiftConfig);
    Code:
       0: aload_0
       1: new           #1                  // class io/fabric8/kubernetes/client/dsl/base/OperationContext
       4: dup
       5: invokespecial #2                  // Method io/fabric8/kubernetes/client/dsl/base/OperationContext."<init>":()V
       8: aload_1
       9: invokevirtual #3                  // Method io/fabric8/kubernetes/client/dsl/base/OperationContext.withOkhttpClient:(Lokhttp3/OkHttpClient;)Lio/fabric8/kubernetes/client/dsl/base/OperationContext;
      12: aload_2
      13: invokevirtual #4                  // Method io/fabric8/kubernetes/client/dsl/base/OperationContext.withConfig:(Lio/fabric8/kubernetes/client/Config;)Lio/fabric8/kubernetes/client/dsl/base/OperationContext;
      16: getstatic     #5                  // Field DEFAULT_PROPAGATION_POLICY:Lio/fabric8/kubernetes/api/model/DeletionPropagation;
      19: invokevirtual #6                  // Method io/fabric8/kubernetes/client/dsl/base/OperationContext.withPropagationPolicy:(Lio/fabric8/kubernetes/api/model/DeletionPropagation;)Lio/fabric8/kubernetes/client/dsl/base/OperationContext;
      22: invokespecial #7                  // Method "<init>":(Lio/fabric8/kubernetes/client/dsl/base/OperationContext;)V
      25: return

  public io.fabric8.openshift.client.dsl.internal.ImageStreamOperationsImpl(io.fabric8.kubernetes.client.dsl.base.OperationContext);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #8                  // String image.openshift.io
       4: invokevirtual #9                  // Method io/fabric8/kubernetes/client/dsl/base/OperationContext.withApiGroupName:(Ljava/lang/String;)Lio/fabric8/kubernetes/client/dsl/base/OperationContext;
       7: ldc           #10                 // String v1
       9: invokevirtual #11                 // Method io/fabric8/kubernetes/client/dsl/base/OperationContext.withApiGroupVersion:(Ljava/lang/String;)Lio/fabric8/kubernetes/client/dsl/base/OperationContext;
      12: ldc           #12                 // String imagestreams
      14: invokevirtual #13                 // Method io/fabric8/kubernetes/client/dsl/base/OperationContext.withPlural:(Ljava/lang/String;)Lio/fabric8/kubernetes/client/dsl/base/OperationContext;
      17: invokespecial #14                 // Method io/fabric8/openshift/client/dsl/internal/OpenShiftOperation."<init>":(Lio/fabric8/kubernetes/client/dsl/base/OperationContext;)V
      20: aload_0
      21: ldc           #15                 // class io/fabric8/openshift/api/model/ImageStream
      23: putfield      #16                 // Field type:Ljava/lang/Class;
      26: aload_0
      27: ldc           #17                 // class io/fabric8/openshift/api/model/ImageStreamList
      29: putfield      #18                 // Field listType:Ljava/lang/Class;
      32: aload_0
      33: ldc           #19                 // class io/fabric8/openshift/api/model/DoneableImageStream
      35: putfield      #20                 // Field doneableType:Ljava/lang/Class;
      38: return

  public io.fabric8.openshift.client.dsl.internal.ImageStreamOperationsImpl newInstance(io.fabric8.kubernetes.client.dsl.base.OperationContext);
    Code:
       0: new           #21                 // class io/fabric8/openshift/client/dsl/internal/ImageStreamOperationsImpl
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method "<init>":(Lio/fabric8/kubernetes/client/dsl/base/OperationContext;)V
       8: areturn

  public boolean isResourceNamespaced();
    Code:
       0: iconst_1
       1: ireturn

  public io.fabric8.kubernetes.client.dsl.base.BaseOperation newInstance(io.fabric8.kubernetes.client.dsl.base.OperationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method newInstance:(Lio/fabric8/kubernetes/client/dsl/base/OperationContext;)Lio/fabric8/openshift/client/dsl/internal/ImageStreamOperationsImpl;
       5: areturn
}
