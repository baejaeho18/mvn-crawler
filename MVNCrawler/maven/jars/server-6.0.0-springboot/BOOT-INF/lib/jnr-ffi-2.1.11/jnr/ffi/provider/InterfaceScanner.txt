Compiled from "InterfaceScanner.java"
public class jnr.ffi.provider.InterfaceScanner {
  private final java.lang.Class interfaceClass;

  private final jnr.ffi.mapper.SignatureTypeMapper typeMapper;

  private final jnr.ffi.CallingConvention callingConvention;

  private final java.lang.reflect.Method[] methods;

  private static final java.lang.reflect.Method methodIsDefault;

  public jnr.ffi.provider.InterfaceScanner(java.lang.Class, jnr.ffi.mapper.SignatureTypeMapper, jnr.ffi.CallingConvention);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field interfaceClass:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field typeMapper:Ljnr/ffi/mapper/SignatureTypeMapper;
      14: aload_0
      15: aload_1
      16: invokevirtual #7                  // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      19: putfield      #3                  // Field methods:[Ljava/lang/reflect/Method;
      22: aload_0
      23: aload_1
      24: ldc           #8                  // class jnr/ffi/annotations/StdCall
      26: invokevirtual #9                  // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      29: ifeq          38
      32: getstatic     #10                 // Field jnr/ffi/CallingConvention.STDCALL:Ljnr/ffi/CallingConvention;
      35: goto          39
      38: aload_3
      39: putfield      #1                  // Field callingConvention:Ljnr/ffi/CallingConvention;
      42: return

  public java.util.Collection<jnr.ffi.provider.NativeFunction> functions();
    Code:
       0: new           #11                 // class jnr/ffi/provider/InterfaceScanner$1
       3: dup
       4: aload_0
       5: invokespecial #12                 // Method jnr/ffi/provider/InterfaceScanner$1."<init>":(Ljnr/ffi/provider/InterfaceScanner;)V
       8: areturn

  public java.util.Collection<jnr.ffi.provider.NativeVariable> variables();
    Code:
       0: new           #13                 // class jnr/ffi/provider/InterfaceScanner$2
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method jnr/ffi/provider/InterfaceScanner$2."<init>":(Ljnr/ffi/provider/InterfaceScanner;)V
       8: areturn

  private static boolean isDefault(java.lang.reflect.Method);
    Code:
       0: getstatic     #15                 // Field methodIsDefault:Ljava/lang/reflect/Method;
       3: ifnonnull     8
       6: iconst_0
       7: ireturn
       8: getstatic     #16                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      11: getstatic     #15                 // Field methodIsDefault:Ljava/lang/reflect/Method;
      14: aload_0
      15: iconst_0
      16: anewarray     #17                 // class java/lang/Object
      19: invokevirtual #18                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      22: invokevirtual #19                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      25: ireturn
      26: astore_1
      27: new           #21                 // class java/lang/RuntimeException
      30: dup
      31: ldc           #22                 // String Unexpected error attempting to call isDefault method
      33: aload_1
      34: invokespecial #23                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: athrow
    Exception table:
       from    to  target type
           8    25    26   Class java/lang/Exception

  static java.lang.reflect.Method[] access$000(jnr.ffi.provider.InterfaceScanner);
    Code:
       0: aload_0
       1: getfield      #3                  // Field methods:[Ljava/lang/reflect/Method;
       4: areturn

  static boolean access$300(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method isDefault:(Ljava/lang/reflect/Method;)Z
       4: ireturn

  static jnr.ffi.CallingConvention access$400(jnr.ffi.provider.InterfaceScanner);
    Code:
       0: aload_0
       1: getfield      #1                  // Field callingConvention:Ljnr/ffi/CallingConvention;
       4: areturn

  static {};
    Code:
       0: aconst_null
       1: astore_0
       2: ldc           #24                 // class java/lang/reflect/Method
       4: ldc           #25                 // String isDefault
       6: aconst_null
       7: invokevirtual #26                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      10: astore_0
      11: goto          15
      14: astore_1
      15: aload_0
      16: putstatic     #15                 // Field methodIsDefault:Ljava/lang/reflect/Method;
      19: return
    Exception table:
       from    to  target type
           2    11    14   Class java/lang/NoSuchMethodException
}
