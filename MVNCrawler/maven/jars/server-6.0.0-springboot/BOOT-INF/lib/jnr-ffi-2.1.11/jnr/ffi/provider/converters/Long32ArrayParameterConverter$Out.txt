Compiled from "Long32ArrayParameterConverter.java"
public final class jnr.ffi.provider.converters.Long32ArrayParameterConverter$Out extends jnr.ffi.provider.converters.Long32ArrayParameterConverter implements jnr.ffi.mapper.ToNativeConverter$PostInvocation<long[], int[]> {
  jnr.ffi.provider.converters.Long32ArrayParameterConverter$Out(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #1                  // Method jnr/ffi/provider/converters/Long32ArrayParameterConverter."<init>":(ILjnr/ffi/provider/converters/Long32ArrayParameterConverter$1;)V
       6: return

  public void postInvoke(long[], int[], jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_2
       5: ifnull        33
       8: iconst_0
       9: istore        4
      11: iload         4
      13: aload_1
      14: arraylength
      15: if_icmpge     33
      18: aload_1
      19: iload         4
      21: aload_2
      22: iload         4
      24: iaload
      25: i2l
      26: lastore
      27: iinc          4, 1
      30: goto          11
      33: return

  public java.lang.Object toNative(java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class "[J"
       5: aload_2
       6: invokespecial #3                  // Method jnr/ffi/provider/converters/Long32ArrayParameterConverter.toNative:([JLjnr/ffi/mapper/ToNativeContext;)[I
       9: areturn

  public void postInvoke(java.lang.Object, java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class "[J"
       5: aload_2
       6: checkcast     #4                  // class "[I"
       9: aload_3
      10: invokevirtual #5                  // Method postInvoke:([J[ILjnr/ffi/mapper/ToNativeContext;)V
      13: return
}
