Compiled from "BoundedMemoryIO.java"
public final class jnr.ffi.provider.BoundedMemoryIO extends jnr.ffi.provider.AbstractMemoryIO implements jnr.ffi.provider.DelegatingMemoryIO {
  private final long base;

  private final long size;

  private final jnr.ffi.Pointer io;

  public jnr.ffi.provider.BoundedMemoryIO(jnr.ffi.Pointer, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method jnr/ffi/Pointer.getRuntime:()Ljnr/ffi/Runtime;
       5: aload_1
       6: invokevirtual #2                  // Method jnr/ffi/Pointer.address:()J
       9: lconst_0
      10: lcmp
      11: ifeq          23
      14: aload_1
      15: invokevirtual #2                  // Method jnr/ffi/Pointer.address:()J
      18: lload_2
      19: ladd
      20: goto          24
      23: lconst_0
      24: aload_1
      25: invokevirtual #3                  // Method jnr/ffi/Pointer.isDirect:()Z
      28: invokespecial #4                  // Method jnr/ffi/provider/AbstractMemoryIO."<init>":(Ljnr/ffi/Runtime;JZ)V
      31: aload_0
      32: aload_1
      33: putfield      #5                  // Field io:Ljnr/ffi/Pointer;
      36: aload_0
      37: lload_2
      38: putfield      #6                  // Field base:J
      41: aload_0
      42: lload         4
      44: putfield      #7                  // Field size:J
      47: return

  public long size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lreturn

  public final boolean hasArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
       4: invokevirtual #8                  // Method jnr/ffi/Pointer.hasArray:()Z
       7: ireturn

  public final java.lang.Object array();
    Code:
       0: aload_0
       1: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
       4: invokevirtual #9                  // Method jnr/ffi/Pointer.array:()Ljava/lang/Object;
       7: areturn

  public final int arrayOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
       4: invokevirtual #10                 // Method jnr/ffi/Pointer.arrayOffset:()I
       7: aload_0
       8: getfield      #6                  // Field base:J
      11: l2i
      12: iadd
      13: ireturn

  public final int arrayLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: l2i
       5: ireturn

  public void checkBounds(long, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: lload_3
       6: invokestatic  #11                 // Method checkBounds:(JJJ)V
       9: aload_0
      10: invokevirtual #12                 // Method getDelegatedMemoryIO:()Ljnr/ffi/Pointer;
      13: aload_0
      14: getfield      #6                  // Field base:J
      17: lload_1
      18: ladd
      19: lload_3
      20: invokevirtual #13                 // Method jnr/ffi/Pointer.checkBounds:(JJ)V
      23: return

  public jnr.ffi.Pointer getDelegatedMemoryIO();
    Code:
       0: aload_0
       1: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getDelegatedMemoryIO:()Ljnr/ffi/Pointer;
       4: invokevirtual #14                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class jnr/ffi/provider/BoundedMemoryIO
       4: ifeq          54
       7: aload_0
       8: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      11: aload_1
      12: checkcast     #15                 // class jnr/ffi/provider/BoundedMemoryIO
      15: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      18: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          54
      24: aload_1
      25: checkcast     #15                 // class jnr/ffi/provider/BoundedMemoryIO
      28: getfield      #6                  // Field base:J
      31: aload_0
      32: getfield      #6                  // Field base:J
      35: lcmp
      36: ifne          54
      39: aload_1
      40: checkcast     #15                 // class jnr/ffi/provider/BoundedMemoryIO
      43: getfield      #7                  // Field size:J
      46: aload_0
      47: getfield      #7                  // Field size:J
      50: lcmp
      51: ifeq          65
      54: aload_0
      55: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      58: aload_1
      59: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      62: ifeq          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public byte getByte(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: lconst_1
       6: invokestatic  #11                 // Method checkBounds:(JJJ)V
       9: aload_0
      10: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      13: aload_0
      14: getfield      #6                  // Field base:J
      17: lload_1
      18: ladd
      19: invokevirtual #17                 // Method jnr/ffi/Pointer.getByte:(J)B
      22: ireturn

  public short getShort(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #18                 // long 2l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: invokevirtual #20                 // Method jnr/ffi/Pointer.getShort:(J)S
      24: ireturn

  public int getInt(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #21                 // long 4l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: invokevirtual #23                 // Method jnr/ffi/Pointer.getInt:(J)I
      24: ireturn

  public long getLongLong(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #24                 // long 8l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: invokevirtual #26                 // Method jnr/ffi/Pointer.getLongLong:(J)J
      24: lreturn

  public float getFloat(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #21                 // long 4l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: invokevirtual #27                 // Method jnr/ffi/Pointer.getFloat:(J)F
      24: freturn

  public double getDouble(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #24                 // long 8l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: invokevirtual #28                 // Method jnr/ffi/Pointer.getDouble:(J)D
      24: dreturn

  public jnr.ffi.Pointer getPointer(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: aload_0
       6: invokevirtual #29                 // Method getRuntime:()Ljnr/ffi/Runtime;
       9: invokevirtual #30                 // Method jnr/ffi/Runtime.addressSize:()I
      12: i2l
      13: invokestatic  #11                 // Method checkBounds:(JJJ)V
      16: aload_0
      17: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      20: aload_0
      21: getfield      #6                  // Field base:J
      24: lload_1
      25: ladd
      26: invokevirtual #31                 // Method jnr/ffi/Pointer.getPointer:(J)Ljnr/ffi/Pointer;
      29: areturn

  public jnr.ffi.Pointer getPointer(long, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: aload_0
       5: getfield      #6                  // Field base:J
       8: lload_1
       9: ladd
      10: aload_0
      11: invokevirtual #29                 // Method getRuntime:()Ljnr/ffi/Runtime;
      14: invokevirtual #30                 // Method jnr/ffi/Runtime.addressSize:()I
      17: i2l
      18: invokestatic  #11                 // Method checkBounds:(JJJ)V
      21: aload_0
      22: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      25: aload_0
      26: getfield      #6                  // Field base:J
      29: lload_1
      30: ladd
      31: lload_3
      32: invokevirtual #32                 // Method jnr/ffi/Pointer.getPointer:(JJ)Ljnr/ffi/Pointer;
      35: areturn

  public void putByte(long, byte);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: lconst_1
       6: invokestatic  #11                 // Method checkBounds:(JJJ)V
       9: aload_0
      10: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      13: aload_0
      14: getfield      #6                  // Field base:J
      17: lload_1
      18: ladd
      19: iload_3
      20: invokevirtual #33                 // Method jnr/ffi/Pointer.putByte:(JB)V
      23: return

  public void putShort(long, short);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #18                 // long 2l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: iload_3
      22: invokevirtual #34                 // Method jnr/ffi/Pointer.putShort:(JS)V
      25: return

  public void putInt(long, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #21                 // long 4l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: iload_3
      22: invokevirtual #35                 // Method jnr/ffi/Pointer.putInt:(JI)V
      25: return

  public void putLongLong(long, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #24                 // long 8l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: lload_3
      22: invokevirtual #36                 // Method jnr/ffi/Pointer.putLongLong:(JJ)V
      25: return

  public void putFloat(long, float);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #21                 // long 4l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: fload_3
      22: invokevirtual #37                 // Method jnr/ffi/Pointer.putFloat:(JF)V
      25: return

  public void putDouble(long, double);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: ldc2_w        #24                 // long 8l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: dload_3
      22: invokevirtual #38                 // Method jnr/ffi/Pointer.putDouble:(JD)V
      25: return

  public void putPointer(long, jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: aload_0
       6: invokevirtual #29                 // Method getRuntime:()Ljnr/ffi/Runtime;
       9: invokevirtual #30                 // Method jnr/ffi/Runtime.addressSize:()I
      12: i2l
      13: invokestatic  #11                 // Method checkBounds:(JJJ)V
      16: aload_0
      17: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      20: aload_0
      21: getfield      #6                  // Field base:J
      24: lload_1
      25: ladd
      26: aload_3
      27: invokevirtual #39                 // Method jnr/ffi/Pointer.putPointer:(JLjnr/ffi/Pointer;)V
      30: return

  public void get(long, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: i2l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: aload_3
      22: iload         4
      24: iload         5
      26: invokevirtual #40                 // Method jnr/ffi/Pointer.get:(J[BII)V
      29: return

  public void put(long, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: i2l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: aload_3
      22: iload         4
      24: iload         5
      26: invokevirtual #41                 // Method jnr/ffi/Pointer.put:(J[BII)V
      29: return

  public void get(long, short[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        16
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #43                 // Method jnr/ffi/Pointer.get:(J[SII)V
      35: return

  public void put(long, short[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        16
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #44                 // Method jnr/ffi/Pointer.put:(J[SII)V
      35: return

  public void get(long, int[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        32
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #46                 // Method jnr/ffi/Pointer.get:(J[III)V
      35: return

  public void put(long, int[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        32
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #47                 // Method jnr/ffi/Pointer.put:(J[III)V
      35: return

  public void get(long, long[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        64
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #49                 // Method jnr/ffi/Pointer.get:(J[JII)V
      35: return

  public void put(long, long[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        64
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #50                 // Method jnr/ffi/Pointer.put:(J[JII)V
      35: return

  public void get(long, float[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        32
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #52                 // Method jnr/ffi/Pointer.get:(J[FII)V
      35: return

  public void put(long, float[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        32
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #53                 // Method jnr/ffi/Pointer.put:(J[FII)V
      35: return

  public void get(long, double[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        64
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #55                 // Method jnr/ffi/Pointer.get:(J[DII)V
      35: return

  public void put(long, double[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         5
       7: bipush        64
       9: imul
      10: bipush        8
      12: idiv
      13: i2l
      14: invokestatic  #11                 // Method checkBounds:(JJJ)V
      17: aload_0
      18: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      21: aload_0
      22: getfield      #6                  // Field base:J
      25: lload_1
      26: ladd
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokevirtual #56                 // Method jnr/ffi/Pointer.put:(J[DII)V
      35: return

  public long getAddress(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: aload_0
       6: invokevirtual #29                 // Method getRuntime:()Ljnr/ffi/Runtime;
       9: invokevirtual #30                 // Method jnr/ffi/Runtime.addressSize:()I
      12: i2l
      13: invokestatic  #11                 // Method checkBounds:(JJJ)V
      16: aload_0
      17: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      20: aload_0
      21: getfield      #6                  // Field base:J
      24: lload_1
      25: ladd
      26: invokevirtual #57                 // Method jnr/ffi/Pointer.getAddress:(J)J
      29: lreturn

  public java.lang.String getString(long, int, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload_3
       6: i2l
       7: invokestatic  #11                 // Method checkBounds:(JJJ)V
      10: aload_0
      11: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      14: aload_0
      15: getfield      #6                  // Field base:J
      18: lload_1
      19: ladd
      20: iload_3
      21: aload         4
      23: invokevirtual #58                 // Method jnr/ffi/Pointer.getString:(JILjava/nio/charset/Charset;)Ljava/lang/String;
      26: areturn

  public java.lang.String getString(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
       4: aload_0
       5: getfield      #6                  // Field base:J
       8: lload_1
       9: ladd
      10: aload_0
      11: getfield      #7                  // Field size:J
      14: l2i
      15: invokestatic  #59                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      18: invokevirtual #58                 // Method jnr/ffi/Pointer.getString:(JILjava/nio/charset/Charset;)Ljava/lang/String;
      21: areturn

  public void putAddress(long, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: aload_0
       6: invokevirtual #29                 // Method getRuntime:()Ljnr/ffi/Runtime;
       9: invokevirtual #30                 // Method jnr/ffi/Runtime.addressSize:()I
      12: i2l
      13: invokestatic  #11                 // Method checkBounds:(JJJ)V
      16: aload_0
      17: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      20: aload_0
      21: getfield      #6                  // Field base:J
      24: lload_1
      25: ladd
      26: lload_3
      27: invokevirtual #60                 // Method jnr/ffi/Pointer.putAddress:(JJ)V
      30: return

  public void putAddress(long, jnr.ffi.Address);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: aload_0
       6: invokevirtual #29                 // Method getRuntime:()Ljnr/ffi/Runtime;
       9: invokevirtual #30                 // Method jnr/ffi/Runtime.addressSize:()I
      12: i2l
      13: invokestatic  #11                 // Method checkBounds:(JJJ)V
      16: aload_0
      17: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      20: aload_0
      21: getfield      #6                  // Field base:J
      24: lload_1
      25: ladd
      26: aload_3
      27: invokevirtual #61                 // Method jnr/ffi/Pointer.putAddress:(JLjnr/ffi/Address;)V
      30: return

  public void putString(long, java.lang.String, int, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         4
       7: i2l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: aload_3
      22: iload         4
      24: aload         5
      26: invokevirtual #62                 // Method jnr/ffi/Pointer.putString:(JLjava/lang/String;ILjava/nio/charset/Charset;)V
      29: return

  public int indexOf(long, byte);
    Code:
       0: aload_0
       1: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
       4: aload_0
       5: getfield      #6                  // Field base:J
       8: lload_1
       9: ladd
      10: iload_3
      11: aload_0
      12: getfield      #7                  // Field size:J
      15: l2i
      16: invokevirtual #63                 // Method jnr/ffi/Pointer.indexOf:(JBI)I
      19: ireturn

  public int indexOf(long, byte, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: lload_1
       5: iload         4
       7: i2l
       8: invokestatic  #11                 // Method checkBounds:(JJJ)V
      11: aload_0
      12: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      15: aload_0
      16: getfield      #6                  // Field base:J
      19: lload_1
      20: ladd
      21: iload_3
      22: iload         4
      24: invokevirtual #63                 // Method jnr/ffi/Pointer.indexOf:(JBI)I
      27: ireturn

  public void setMemory(long, long, byte);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: aload_0
       5: getfield      #6                  // Field base:J
       8: lload_1
       9: ladd
      10: lload_3
      11: invokestatic  #11                 // Method checkBounds:(JJJ)V
      14: aload_0
      15: getfield      #5                  // Field io:Ljnr/ffi/Pointer;
      18: aload_0
      19: getfield      #6                  // Field base:J
      22: lload_1
      23: ladd
      24: lload_3
      25: iload         5
      27: invokevirtual #64                 // Method jnr/ffi/Pointer.setMemory:(JJB)V
      30: return

  public void transferFrom(long, jnr.ffi.Pointer, long, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: aload_0
       5: getfield      #6                  // Field base:J
       8: lload_1
       9: ladd
      10: lload         6
      12: invokestatic  #11                 // Method checkBounds:(JJJ)V
      15: aload_0
      16: invokevirtual #12                 // Method getDelegatedMemoryIO:()Ljnr/ffi/Pointer;
      19: lload_1
      20: aload_3
      21: lload         4
      23: lload         6
      25: invokevirtual #65                 // Method jnr/ffi/Pointer.transferFrom:(JLjnr/ffi/Pointer;JJ)V
      28: return

  public void transferTo(long, jnr.ffi.Pointer, long, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:J
       4: aload_0
       5: getfield      #6                  // Field base:J
       8: lload_1
       9: ladd
      10: lload         6
      12: invokestatic  #11                 // Method checkBounds:(JJJ)V
      15: aload_0
      16: invokevirtual #12                 // Method getDelegatedMemoryIO:()Ljnr/ffi/Pointer;
      19: lload_1
      20: aload_3
      21: lload         4
      23: lload         6
      25: invokevirtual #66                 // Method jnr/ffi/Pointer.transferTo:(JLjnr/ffi/Pointer;JJ)V
      28: return
}
