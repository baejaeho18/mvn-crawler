Compiled from "NativeLong.java"
public final class jnr.ffi.NativeLong extends java.lang.Number implements java.lang.Comparable<jnr.ffi.NativeLong> {
  private static final jnr.ffi.NativeLong ZERO;

  private static final jnr.ffi.NativeLong ONE;

  private static final jnr.ffi.NativeLong MINUS_ONE;

  private final long value;

  public jnr.ffi.NativeLong(long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #5                  // Field value:J
       9: return

  public jnr.ffi.NativeLong(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iload_1
       6: i2l
       7: putfield      #5                  // Field value:J
      10: return

  public final int intValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2i
       5: ireturn

  public final long longValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: lreturn

  public final float floatValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2f
       5: freturn

  public final double doubleValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: l2d
       5: dreturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: aload_0
       5: getfield      #5                  // Field value:J
       8: bipush        32
      10: lushr
      11: lxor
      12: l2i
      13: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class jnr/ffi/NativeLong
       4: ifeq          26
       7: aload_0
       8: getfield      #5                  // Field value:J
      11: aload_1
      12: checkcast     #6                  // class jnr/ffi/NativeLong
      15: getfield      #5                  // Field value:J
      18: lcmp
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: invokestatic  #7                  // Method java/lang/String.valueOf:(J)Ljava/lang/String;
       7: areturn

  public final int compareTo(jnr.ffi.NativeLong);
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:J
       4: aload_1
       5: getfield      #5                  // Field value:J
       8: lcmp
       9: ifge          16
      12: iconst_m1
      13: goto          33
      16: aload_0
      17: getfield      #5                  // Field value:J
      20: aload_1
      21: getfield      #5                  // Field value:J
      24: lcmp
      25: ifle          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private static jnr.ffi.NativeLong _valueOf(long);
    Code:
       0: lload_0
       1: ldc2_w        #8                  // long -128l
       4: lcmp
       5: iflt          29
       8: lload_0
       9: ldc2_w        #10                 // long 127l
      12: lcmp
      13: ifgt          29
      16: getstatic     #12                 // Field jnr/ffi/NativeLong$Cache.cache:[Ljnr/ffi/NativeLong;
      19: sipush        128
      22: lload_0
      23: l2i
      24: iadd
      25: aaload
      26: goto          37
      29: new           #6                  // class jnr/ffi/NativeLong
      32: dup
      33: lload_0
      34: invokespecial #13                 // Method "<init>":(J)V
      37: areturn

  private static jnr.ffi.NativeLong _valueOf(int);
    Code:
       0: iload_0
       1: bipush        -128
       3: if_icmplt     24
       6: iload_0
       7: bipush        127
       9: if_icmpgt     24
      12: getstatic     #12                 // Field jnr/ffi/NativeLong$Cache.cache:[Ljnr/ffi/NativeLong;
      15: sipush        128
      18: iload_0
      19: iadd
      20: aaload
      21: goto          32
      24: new           #6                  // class jnr/ffi/NativeLong
      27: dup
      28: iload_0
      29: invokespecial #14                 // Method "<init>":(I)V
      32: areturn

  public static jnr.ffi.NativeLong valueOf(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifne          12
       6: getstatic     #3                  // Field ZERO:Ljnr/ffi/NativeLong;
       9: goto          42
      12: lload_0
      13: lconst_1
      14: lcmp
      15: ifne          24
      18: getstatic     #2                  // Field ONE:Ljnr/ffi/NativeLong;
      21: goto          42
      24: lload_0
      25: ldc2_w        #15                 // long -1l
      28: lcmp
      29: ifne          38
      32: getstatic     #1                  // Field MINUS_ONE:Ljnr/ffi/NativeLong;
      35: goto          42
      38: lload_0
      39: invokestatic  #17                 // Method _valueOf:(J)Ljnr/ffi/NativeLong;
      42: areturn

  public static jnr.ffi.NativeLong valueOf(int);
    Code:
       0: iload_0
       1: ifne          10
       4: getstatic     #3                  // Field ZERO:Ljnr/ffi/NativeLong;
       7: goto          36
      10: iload_0
      11: iconst_1
      12: if_icmpne     21
      15: getstatic     #2                  // Field ONE:Ljnr/ffi/NativeLong;
      18: goto          36
      21: iload_0
      22: iconst_m1
      23: if_icmpne     32
      26: getstatic     #1                  // Field MINUS_ONE:Ljnr/ffi/NativeLong;
      29: goto          36
      32: iload_0
      33: invokestatic  #18                 // Method _valueOf:(I)Ljnr/ffi/NativeLong;
      36: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class jnr/ffi/NativeLong
       5: invokevirtual #19                 // Method compareTo:(Ljnr/ffi/NativeLong;)I
       8: ireturn

  static jnr.ffi.NativeLong access$000();
    Code:
       0: getstatic     #3                  // Field ZERO:Ljnr/ffi/NativeLong;
       3: areturn

  static jnr.ffi.NativeLong access$100();
    Code:
       0: getstatic     #2                  // Field ONE:Ljnr/ffi/NativeLong;
       3: areturn

  static jnr.ffi.NativeLong access$200();
    Code:
       0: getstatic     #1                  // Field MINUS_ONE:Ljnr/ffi/NativeLong;
       3: areturn

  static {};
    Code:
       0: new           #6                  // class jnr/ffi/NativeLong
       3: dup
       4: iconst_0
       5: invokespecial #14                 // Method "<init>":(I)V
       8: putstatic     #3                  // Field ZERO:Ljnr/ffi/NativeLong;
      11: new           #6                  // class jnr/ffi/NativeLong
      14: dup
      15: iconst_1
      16: invokespecial #14                 // Method "<init>":(I)V
      19: putstatic     #2                  // Field ONE:Ljnr/ffi/NativeLong;
      22: new           #6                  // class jnr/ffi/NativeLong
      25: dup
      26: iconst_m1
      27: invokespecial #14                 // Method "<init>":(I)V
      30: putstatic     #1                  // Field MINUS_ONE:Ljnr/ffi/NativeLong;
      33: return
}
