Compiled from "StructByReferenceResultConverterFactory.java"
final class jnr.ffi.provider.jffi.StructByReferenceResultConverterFactory {
  private final java.util.Map<java.lang.Class<? extends jnr.ffi.Struct>, jnr.ffi.mapper.FromNativeConverter<? extends jnr.ffi.Struct, jnr.ffi.Pointer>> converters;

  private final jnr.ffi.provider.jffi.AsmClassLoader classLoader;

  private final boolean asmEnabled;

  public jnr.ffi.provider.jffi.StructByReferenceResultConverterFactory(jnr.ffi.provider.jffi.AsmClassLoader, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field converters:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field classLoader:Ljnr/ffi/provider/jffi/AsmClassLoader;
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field asmEnabled:Z
      25: return

  public final jnr.ffi.mapper.FromNativeConverter<? extends jnr.ffi.Struct, jnr.ffi.Pointer> get(java.lang.Class<? extends jnr.ffi.Struct>, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class jnr/ffi/mapper/FromNativeConverter
      13: astore_3
      14: aload_3
      15: ifnonnull     83
      18: aload_0
      19: getfield      #4                  // Field converters:Ljava/util/Map;
      22: dup
      23: astore        4
      25: monitorenter
      26: aload_0
      27: getfield      #4                  // Field converters:Ljava/util/Map;
      30: aload_1
      31: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #8                  // class jnr/ffi/mapper/FromNativeConverter
      39: dup
      40: astore_3
      41: ifnonnull     69
      44: aload_0
      45: getfield      #4                  // Field converters:Ljava/util/Map;
      48: aload_1
      49: aload_0
      50: aload_2
      51: invokeinterface #9,  1            // InterfaceMethod jnr/ffi/mapper/FromNativeContext.getRuntime:()Ljnr/ffi/Runtime;
      56: aload_1
      57: aload_2
      58: invokespecial #10                 // Method createConverter:(Ljnr/ffi/Runtime;Ljava/lang/Class;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/FromNativeConverter;
      61: dup
      62: astore_3
      63: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload         4
      71: monitorexit
      72: goto          83
      75: astore        5
      77: aload         4
      79: monitorexit
      80: aload         5
      82: athrow
      83: aload_3
      84: areturn
    Exception table:
       from    to  target type
          26    72    75   any
          75    80    75   any

  private jnr.ffi.mapper.FromNativeConverter<? extends jnr.ffi.Struct, jnr.ffi.Pointer> createConverter(jnr.ffi.Runtime, java.lang.Class<? extends jnr.ffi.Struct>, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: getfield      #6                  // Field asmEnabled:Z
       4: ifeq          20
       7: aload_1
       8: aload_2
       9: iconst_0
      10: aload_0
      11: getfield      #5                  // Field classLoader:Ljnr/ffi/provider/jffi/AsmClassLoader;
      14: invokestatic  #12                 // Method jnr/ffi/provider/jffi/AsmStructByReferenceFromNativeConverter.newStructByReferenceConverter:(Ljnr/ffi/Runtime;Ljava/lang/Class;ILjnr/ffi/provider/jffi/AsmClassLoader;)Ljnr/ffi/provider/jffi/AsmStructByReferenceFromNativeConverter;
      17: goto          25
      20: aload_2
      21: aload_3
      22: invokestatic  #13                 // Method jnr/ffi/provider/converters/StructByReferenceFromNativeConverter.getInstance:(Ljava/lang/Class;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/FromNativeConverter;
      25: areturn
}
