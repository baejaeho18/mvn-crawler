Compiled from "AbstractArrayMemoryIO.java"
abstract class jnr.ffi.provider.AbstractArrayMemoryIO$BigEndianArrayIO extends jnr.ffi.provider.AbstractArrayMemoryIO$ArrayIO {
  private jnr.ffi.provider.AbstractArrayMemoryIO$BigEndianArrayIO();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method jnr/ffi/provider/AbstractArrayMemoryIO$ArrayIO."<init>":()V
       4: return

  public short getInt16(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: baload
       5: sipush        255
       8: iand
       9: bipush        8
      11: ishl
      12: aload_1
      13: iload_2
      14: iconst_1
      15: iadd
      16: baload
      17: sipush        255
      20: iand
      21: ior
      22: i2s
      23: ireturn

  public int getInt32(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: baload
       5: sipush        255
       8: iand
       9: bipush        24
      11: ishl
      12: aload_1
      13: iload_2
      14: iconst_1
      15: iadd
      16: baload
      17: sipush        255
      20: iand
      21: bipush        16
      23: ishl
      24: ior
      25: aload_1
      26: iload_2
      27: iconst_2
      28: iadd
      29: baload
      30: sipush        255
      33: iand
      34: bipush        8
      36: ishl
      37: ior
      38: aload_1
      39: iload_2
      40: iconst_3
      41: iadd
      42: baload
      43: sipush        255
      46: iand
      47: iconst_0
      48: ishl
      49: ior
      50: ireturn

  public long getInt64(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: baload
       5: i2l
       6: ldc2_w        #3                  // long 255l
       9: land
      10: bipush        56
      12: lshl
      13: aload_1
      14: iload_2
      15: iconst_1
      16: iadd
      17: baload
      18: i2l
      19: ldc2_w        #3                  // long 255l
      22: land
      23: bipush        48
      25: lshl
      26: lor
      27: aload_1
      28: iload_2
      29: iconst_2
      30: iadd
      31: baload
      32: i2l
      33: ldc2_w        #3                  // long 255l
      36: land
      37: bipush        40
      39: lshl
      40: lor
      41: aload_1
      42: iload_2
      43: iconst_3
      44: iadd
      45: baload
      46: i2l
      47: ldc2_w        #3                  // long 255l
      50: land
      51: bipush        32
      53: lshl
      54: lor
      55: aload_1
      56: iload_2
      57: iconst_4
      58: iadd
      59: baload
      60: i2l
      61: ldc2_w        #3                  // long 255l
      64: land
      65: bipush        24
      67: lshl
      68: lor
      69: aload_1
      70: iload_2
      71: iconst_5
      72: iadd
      73: baload
      74: i2l
      75: ldc2_w        #3                  // long 255l
      78: land
      79: bipush        16
      81: lshl
      82: lor
      83: aload_1
      84: iload_2
      85: bipush        6
      87: iadd
      88: baload
      89: i2l
      90: ldc2_w        #3                  // long 255l
      93: land
      94: bipush        8
      96: lshl
      97: lor
      98: aload_1
      99: iload_2
     100: bipush        7
     102: iadd
     103: baload
     104: i2l
     105: ldc2_w        #3                  // long 255l
     108: land
     109: iconst_0
     110: lshl
     111: lor
     112: lreturn

  public final void putInt16(byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: iload_3
       5: bipush        8
       7: ishr
       8: i2b
       9: bastore
      10: aload_1
      11: iload_2
      12: iconst_1
      13: iadd
      14: iload_3
      15: iconst_0
      16: ishr
      17: i2b
      18: bastore
      19: return

  public final void putInt32(byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: iload_3
       5: bipush        24
       7: ishr
       8: i2b
       9: bastore
      10: aload_1
      11: iload_2
      12: iconst_1
      13: iadd
      14: iload_3
      15: bipush        16
      17: ishr
      18: i2b
      19: bastore
      20: aload_1
      21: iload_2
      22: iconst_2
      23: iadd
      24: iload_3
      25: bipush        8
      27: ishr
      28: i2b
      29: bastore
      30: aload_1
      31: iload_2
      32: iconst_3
      33: iadd
      34: iload_3
      35: iconst_0
      36: ishr
      37: i2b
      38: bastore
      39: return

  public final void putInt64(byte[], int, long);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: lload_3
       5: bipush        56
       7: lshr
       8: l2i
       9: i2b
      10: bastore
      11: aload_1
      12: iload_2
      13: iconst_1
      14: iadd
      15: lload_3
      16: bipush        48
      18: lshr
      19: l2i
      20: i2b
      21: bastore
      22: aload_1
      23: iload_2
      24: iconst_2
      25: iadd
      26: lload_3
      27: bipush        40
      29: lshr
      30: l2i
      31: i2b
      32: bastore
      33: aload_1
      34: iload_2
      35: iconst_3
      36: iadd
      37: lload_3
      38: bipush        32
      40: lshr
      41: l2i
      42: i2b
      43: bastore
      44: aload_1
      45: iload_2
      46: iconst_4
      47: iadd
      48: lload_3
      49: bipush        24
      51: lshr
      52: l2i
      53: i2b
      54: bastore
      55: aload_1
      56: iload_2
      57: iconst_5
      58: iadd
      59: lload_3
      60: bipush        16
      62: lshr
      63: l2i
      64: i2b
      65: bastore
      66: aload_1
      67: iload_2
      68: bipush        6
      70: iadd
      71: lload_3
      72: bipush        8
      74: lshr
      75: l2i
      76: i2b
      77: bastore
      78: aload_1
      79: iload_2
      80: bipush        7
      82: iadd
      83: lload_3
      84: iconst_0
      85: lshr
      86: l2i
      87: i2b
      88: bastore
      89: return

  jnr.ffi.provider.AbstractArrayMemoryIO$BigEndianArrayIO(jnr.ffi.provider.AbstractArrayMemoryIO$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
