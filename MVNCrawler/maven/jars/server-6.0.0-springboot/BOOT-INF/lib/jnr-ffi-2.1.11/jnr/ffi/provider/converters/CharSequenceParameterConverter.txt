Compiled from "CharSequenceParameterConverter.java"
public class jnr.ffi.provider.converters.CharSequenceParameterConverter implements jnr.ffi.mapper.ToNativeConverter<java.lang.CharSequence, java.nio.ByteBuffer> {
  private static final jnr.ffi.mapper.ToNativeConverter<java.lang.CharSequence, java.nio.ByteBuffer> DEFAULT;

  private final java.lang.ThreadLocal<java.lang.ref.Reference<java.nio.charset.CharsetEncoder>> localEncoder;

  private final java.nio.charset.Charset charset;

  public static jnr.ffi.mapper.ToNativeConverter<java.lang.CharSequence, java.nio.ByteBuffer> getInstance(java.nio.charset.Charset, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: invokestatic  #1                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       3: aload_0
       4: invokevirtual #2                  // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
       7: ifeq          16
      10: getstatic     #3                  // Field DEFAULT:Ljnr/ffi/mapper/ToNativeConverter;
      13: goto          24
      16: new           #4                  // class jnr/ffi/provider/converters/CharSequenceParameterConverter
      19: dup
      20: aload_0
      21: invokespecial #5                  // Method "<init>":(Ljava/nio/charset/Charset;)V
      24: areturn

  public static jnr.ffi.mapper.ToNativeConverter<java.lang.CharSequence, java.nio.ByteBuffer> getInstance(jnr.ffi.mapper.ToNativeContext);
    Code:
       0: invokestatic  #1                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       3: astore_1
       4: aload_0
       5: instanceof    #6                  // class jnr/ffi/mapper/MethodParameterContext
       8: ifeq          60
      11: aload_0
      12: checkcast     #6                  // class jnr/ffi/mapper/MethodParameterContext
      15: invokevirtual #7                  // Method jnr/ffi/mapper/MethodParameterContext.getMethod:()Ljava/lang/reflect/Method;
      18: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      21: invokevirtual #9                  // Method java/lang/Class.getAnnotations:()[Ljava/lang/annotation/Annotation;
      24: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      27: invokestatic  #11                 // Method getEncodingCharset:(Ljava/util/Collection;)Ljava/nio/charset/Charset;
      30: astore_2
      31: aload_2
      32: ifnull        37
      35: aload_2
      36: astore_1
      37: aload_0
      38: checkcast     #6                  // class jnr/ffi/mapper/MethodParameterContext
      41: invokevirtual #7                  // Method jnr/ffi/mapper/MethodParameterContext.getMethod:()Ljava/lang/reflect/Method;
      44: invokevirtual #12                 // Method java/lang/reflect/Method.getAnnotations:()[Ljava/lang/annotation/Annotation;
      47: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      50: invokestatic  #11                 // Method getEncodingCharset:(Ljava/util/Collection;)Ljava/nio/charset/Charset;
      53: astore_2
      54: aload_2
      55: ifnull        60
      58: aload_2
      59: astore_1
      60: aload_0
      61: invokeinterface #13,  1           // InterfaceMethod jnr/ffi/mapper/ToNativeContext.getAnnotations:()Ljava/util/Collection;
      66: invokestatic  #11                 // Method getEncodingCharset:(Ljava/util/Collection;)Ljava/nio/charset/Charset;
      69: astore_2
      70: aload_2
      71: ifnull        76
      74: aload_2
      75: astore_1
      76: aload_1
      77: aload_0
      78: invokestatic  #14                 // Method getInstance:(Ljava/nio/charset/Charset;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/mapper/ToNativeConverter;
      81: areturn

  private static java.nio.charset.Charset getEncodingCharset(java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          49
      16: aload_1
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #18                 // class java/lang/annotation/Annotation
      25: astore_2
      26: aload_2
      27: instanceof    #19                 // class jnr/ffi/annotations/Encoding
      30: ifeq          46
      33: aload_2
      34: checkcast     #19                 // class jnr/ffi/annotations/Encoding
      37: invokeinterface #20,  1           // InterfaceMethod jnr/ffi/annotations/Encoding.value:()Ljava/lang/String;
      42: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      45: areturn
      46: goto          7
      49: aconst_null
      50: areturn

  private jnr.ffi.provider.converters.CharSequenceParameterConverter(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #23                 // class java/lang/ThreadLocal
       8: dup
       9: invokespecial #24                 // Method java/lang/ThreadLocal."<init>":()V
      12: putfield      #25                 // Field localEncoder:Ljava/lang/ThreadLocal;
      15: aload_0
      16: aload_1
      17: putfield      #26                 // Field charset:Ljava/nio/charset/Charset;
      20: return

  public java.nio.ByteBuffer toNative(java.lang.CharSequence, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #26                 // Field charset:Ljava/nio/charset/Charset;
      10: aload_0
      11: getfield      #25                 // Field localEncoder:Ljava/lang/ThreadLocal;
      14: invokestatic  #27                 // Method jnr/ffi/provider/converters/StringUtil.getEncoder:(Ljava/nio/charset/Charset;Ljava/lang/ThreadLocal;)Ljava/nio/charset/CharsetEncoder;
      17: astore_3
      18: aload_1
      19: invokeinterface #28,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      24: i2f
      25: aload_3
      26: invokevirtual #29                 // Method java/nio/charset/CharsetEncoder.averageBytesPerChar:()F
      29: fmul
      30: f2i
      31: iconst_4
      32: iadd
      33: newarray       byte
      35: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      38: astore        4
      40: aload_1
      41: invokestatic  #31                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      44: astore        5
      46: aload_3
      47: invokevirtual #32                 // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
      50: pop
      51: aload         5
      53: invokevirtual #33                 // Method java/nio/CharBuffer.hasRemaining:()Z
      56: ifeq          122
      59: aload_3
      60: aload         5
      62: aload         4
      64: iconst_1
      65: invokevirtual #34                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      68: astore        6
      70: aload         6
      72: invokevirtual #35                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      75: ifeq          96
      78: aload_3
      79: aload         4
      81: invokevirtual #36                 // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
      84: dup
      85: astore        6
      87: invokevirtual #35                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      90: ifeq          96
      93: goto          122
      96: aload         6
      98: invokevirtual #37                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     101: ifeq          114
     104: aload         4
     106: invokestatic  #38                 // Method grow:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     109: astore        4
     111: goto          119
     114: aload         6
     116: invokestatic  #39                 // Method jnr/ffi/provider/converters/StringUtil.throwException:(Ljava/nio/charset/CoderResult;)V
     119: goto          51
     122: aload         4
     124: invokevirtual #40                 // Method java/nio/ByteBuffer.remaining:()I
     127: iconst_4
     128: if_icmpgt     138
     131: aload         4
     133: invokestatic  #38                 // Method grow:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     136: astore        4
     138: aload         4
     140: aload         4
     142: invokevirtual #41                 // Method java/nio/ByteBuffer.position:()I
     145: iconst_4
     146: iadd
     147: invokevirtual #42                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     150: pop
     151: aload         4
     153: invokevirtual #43                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     156: pop
     157: aload         4
     159: areturn

  private static java.nio.ByteBuffer grow(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method java/nio/ByteBuffer.capacity:()I
       4: iconst_2
       5: imul
       6: newarray       byte
       8: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      11: astore_1
      12: aload_0
      13: invokevirtual #43                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      16: pop
      17: aload_1
      18: aload_0
      19: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      22: pop
      23: aload_1
      24: areturn

  public java.lang.Class<java.nio.ByteBuffer> nativeType();
    Code:
       0: ldc           #46                 // class java/nio/ByteBuffer
       2: areturn

  public java.lang.Object toNative(java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #48                 // Method toNative:(Ljava/lang/CharSequence;Ljnr/ffi/mapper/ToNativeContext;)Ljava/nio/ByteBuffer;
       9: areturn

  static {};
    Code:
       0: new           #4                  // class jnr/ffi/provider/converters/CharSequenceParameterConverter
       3: dup
       4: invokestatic  #1                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       7: invokespecial #5                  // Method "<init>":(Ljava/nio/charset/Charset;)V
      10: putstatic     #3                  // Field DEFAULT:Ljnr/ffi/mapper/ToNativeConverter;
      13: return
}
