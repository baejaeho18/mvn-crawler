Compiled from "AbstractArrayMemoryIO.java"
abstract class jnr.ffi.provider.AbstractArrayMemoryIO$LittleEndianArrayIO extends jnr.ffi.provider.AbstractArrayMemoryIO$ArrayIO {
  private jnr.ffi.provider.AbstractArrayMemoryIO$LittleEndianArrayIO();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method jnr/ffi/provider/AbstractArrayMemoryIO$ArrayIO."<init>":()V
       4: return

  public final short getInt16(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: baload
       3: sipush        255
       6: iand
       7: aload_1
       8: iload_2
       9: iconst_1
      10: iadd
      11: baload
      12: sipush        255
      15: iand
      16: bipush        8
      18: ishl
      19: ior
      20: i2s
      21: ireturn

  public final int getInt32(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: baload
       5: sipush        255
       8: iand
       9: iconst_0
      10: ishl
      11: aload_1
      12: iload_2
      13: iconst_1
      14: iadd
      15: baload
      16: sipush        255
      19: iand
      20: bipush        8
      22: ishl
      23: ior
      24: aload_1
      25: iload_2
      26: iconst_2
      27: iadd
      28: baload
      29: sipush        255
      32: iand
      33: bipush        16
      35: ishl
      36: ior
      37: aload_1
      38: iload_2
      39: iconst_3
      40: iadd
      41: baload
      42: sipush        255
      45: iand
      46: bipush        24
      48: ishl
      49: ior
      50: ireturn

  public final long getInt64(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: baload
       5: i2l
       6: ldc2_w        #3                  // long 255l
       9: land
      10: iconst_0
      11: lshl
      12: aload_1
      13: iload_2
      14: iconst_1
      15: iadd
      16: baload
      17: i2l
      18: ldc2_w        #3                  // long 255l
      21: land
      22: bipush        8
      24: lshl
      25: lor
      26: aload_1
      27: iload_2
      28: iconst_2
      29: iadd
      30: baload
      31: i2l
      32: ldc2_w        #3                  // long 255l
      35: land
      36: bipush        16
      38: lshl
      39: lor
      40: aload_1
      41: iload_2
      42: iconst_3
      43: iadd
      44: baload
      45: i2l
      46: ldc2_w        #3                  // long 255l
      49: land
      50: bipush        24
      52: lshl
      53: lor
      54: aload_1
      55: iload_2
      56: iconst_4
      57: iadd
      58: baload
      59: i2l
      60: ldc2_w        #3                  // long 255l
      63: land
      64: bipush        32
      66: lshl
      67: lor
      68: aload_1
      69: iload_2
      70: iconst_5
      71: iadd
      72: baload
      73: i2l
      74: ldc2_w        #3                  // long 255l
      77: land
      78: bipush        40
      80: lshl
      81: lor
      82: aload_1
      83: iload_2
      84: bipush        6
      86: iadd
      87: baload
      88: i2l
      89: ldc2_w        #3                  // long 255l
      92: land
      93: bipush        48
      95: lshl
      96: lor
      97: aload_1
      98: iload_2
      99: bipush        7
     101: iadd
     102: baload
     103: i2l
     104: ldc2_w        #3                  // long 255l
     107: land
     108: bipush        56
     110: lshl
     111: lor
     112: lreturn

  public final void putInt16(byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: iload_3
       5: iconst_0
       6: ishr
       7: i2b
       8: bastore
       9: aload_1
      10: iload_2
      11: iconst_1
      12: iadd
      13: iload_3
      14: bipush        8
      16: ishr
      17: i2b
      18: bastore
      19: return

  public final void putInt32(byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: iload_3
       5: iconst_0
       6: ishr
       7: i2b
       8: bastore
       9: aload_1
      10: iload_2
      11: iconst_1
      12: iadd
      13: iload_3
      14: bipush        8
      16: ishr
      17: i2b
      18: bastore
      19: aload_1
      20: iload_2
      21: iconst_2
      22: iadd
      23: iload_3
      24: bipush        16
      26: ishr
      27: i2b
      28: bastore
      29: aload_1
      30: iload_2
      31: iconst_3
      32: iadd
      33: iload_3
      34: bipush        24
      36: ishr
      37: i2b
      38: bastore
      39: return

  public final void putInt64(byte[], int, long);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: lload_3
       5: iconst_0
       6: lshr
       7: l2i
       8: i2b
       9: bastore
      10: aload_1
      11: iload_2
      12: iconst_1
      13: iadd
      14: lload_3
      15: bipush        8
      17: lshr
      18: l2i
      19: i2b
      20: bastore
      21: aload_1
      22: iload_2
      23: iconst_2
      24: iadd
      25: lload_3
      26: bipush        16
      28: lshr
      29: l2i
      30: i2b
      31: bastore
      32: aload_1
      33: iload_2
      34: iconst_3
      35: iadd
      36: lload_3
      37: bipush        24
      39: lshr
      40: l2i
      41: i2b
      42: bastore
      43: aload_1
      44: iload_2
      45: iconst_4
      46: iadd
      47: lload_3
      48: bipush        32
      50: lshr
      51: l2i
      52: i2b
      53: bastore
      54: aload_1
      55: iload_2
      56: iconst_5
      57: iadd
      58: lload_3
      59: bipush        40
      61: lshr
      62: l2i
      63: i2b
      64: bastore
      65: aload_1
      66: iload_2
      67: bipush        6
      69: iadd
      70: lload_3
      71: bipush        48
      73: lshr
      74: l2i
      75: i2b
      76: bastore
      77: aload_1
      78: iload_2
      79: bipush        7
      81: iadd
      82: lload_3
      83: bipush        56
      85: lshr
      86: l2i
      87: i2b
      88: bastore
      89: return

  jnr.ffi.provider.AbstractArrayMemoryIO$LittleEndianArrayIO(jnr.ffi.provider.AbstractArrayMemoryIO$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
