Compiled from "CachingTypeMapper.java"
public final class jnr.ffi.mapper.CachingTypeMapper extends jnr.ffi.mapper.AbstractSignatureTypeMapper implements jnr.ffi.mapper.SignatureTypeMapper {
  private final jnr.ffi.mapper.SignatureTypeMapper mapper;

  private volatile java.util.Map<jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.ToNativeType> toNativeTypeMap;

  private volatile java.util.Map<jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.FromNativeType> fromNativeTypeMap;

  private static final jnr.ffi.mapper.CachingTypeMapper$InvalidType UNCACHEABLE_TYPE;

  private static final jnr.ffi.mapper.CachingTypeMapper$InvalidType NO_TYPE;

  public jnr.ffi.mapper.CachingTypeMapper(jnr.ffi.mapper.SignatureTypeMapper);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jnr/ffi/mapper/AbstractSignatureTypeMapper."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field toNativeTypeMap:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      15: putfield      #4                  // Field fromNativeTypeMap:Ljava/util/Map;
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field mapper:Ljnr/ffi/mapper/SignatureTypeMapper;
      23: return

  public jnr.ffi.mapper.FromNativeType getFromNativeType(jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fromNativeTypeMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class jnr/ffi/mapper/FromNativeType
      13: astore_3
      14: aload_3
      15: getstatic     #8                  // Field UNCACHEABLE_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      18: if_acmpne     33
      21: aload_0
      22: getfield      #5                  // Field mapper:Ljnr/ffi/mapper/SignatureTypeMapper;
      25: aload_1
      26: aload_2
      27: invokeinterface #9,  3            // InterfaceMethod jnr/ffi/mapper/SignatureTypeMapper.getFromNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/FromNativeType;
      32: areturn
      33: aload_3
      34: getstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      37: if_acmpne     42
      40: aconst_null
      41: areturn
      42: aload_3
      43: ifnull        50
      46: aload_3
      47: goto          56
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokespecial #11                 // Method lookupAndCacheFromNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/FromNativeType;
      56: areturn

  public jnr.ffi.mapper.ToNativeType getToNativeType(jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field toNativeTypeMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #12                 // class jnr/ffi/mapper/ToNativeType
      13: astore_3
      14: aload_3
      15: getstatic     #8                  // Field UNCACHEABLE_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      18: if_acmpne     33
      21: aload_0
      22: getfield      #5                  // Field mapper:Ljnr/ffi/mapper/SignatureTypeMapper;
      25: aload_1
      26: aload_2
      27: invokeinterface #13,  3           // InterfaceMethod jnr/ffi/mapper/SignatureTypeMapper.getToNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/mapper/ToNativeType;
      32: areturn
      33: aload_3
      34: getstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      37: if_acmpne     42
      40: aconst_null
      41: areturn
      42: aload_3
      43: ifnull        50
      46: aload_3
      47: goto          56
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokespecial #14                 // Method lookupAndCacheToNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/mapper/ToNativeType;
      56: areturn

  private synchronized jnr.ffi.mapper.FromNativeType lookupAndCacheFromNativeType(jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fromNativeTypeMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class jnr/ffi/mapper/FromNativeType
      13: astore_3
      14: aload_3
      15: ifnonnull     113
      18: aload_0
      19: getfield      #5                  // Field mapper:Ljnr/ffi/mapper/SignatureTypeMapper;
      22: aload_1
      23: aload_2
      24: invokeinterface #9,  3            // InterfaceMethod jnr/ffi/mapper/SignatureTypeMapper.getFromNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/FromNativeType;
      29: astore_3
      30: aload_3
      31: astore        4
      33: aload_3
      34: ifnonnull     45
      37: getstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      40: astore        4
      42: goto          62
      45: aload_3
      46: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      49: ldc           #16                 // class jnr/ffi/mapper/FromNativeType$Cacheable
      51: invokevirtual #17                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      54: ifne          62
      57: getstatic     #8                  // Field UNCACHEABLE_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      60: astore        4
      62: new           #18                 // class java/util/HashMap
      65: dup
      66: aload_0
      67: getfield      #4                  // Field fromNativeTypeMap:Ljava/util/Map;
      70: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
      75: iconst_1
      76: iadd
      77: invokespecial #20                 // Method java/util/HashMap."<init>":(I)V
      80: astore        5
      82: aload         5
      84: aload_0
      85: getfield      #4                  // Field fromNativeTypeMap:Ljava/util/Map;
      88: invokeinterface #21,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      93: aload         5
      95: aload_1
      96: aload         4
      98: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_0
     105: aload         5
     107: invokestatic  #23                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     110: putfield      #4                  // Field fromNativeTypeMap:Ljava/util/Map;
     113: aload_3
     114: getstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
     117: if_acmpeq     124
     120: aload_3
     121: goto          125
     124: aconst_null
     125: areturn

  private synchronized jnr.ffi.mapper.ToNativeType lookupAndCacheToNativeType(jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field toNativeTypeMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #12                 // class jnr/ffi/mapper/ToNativeType
      13: astore_3
      14: aload_3
      15: ifnonnull     113
      18: aload_0
      19: getfield      #5                  // Field mapper:Ljnr/ffi/mapper/SignatureTypeMapper;
      22: aload_1
      23: aload_2
      24: invokeinterface #13,  3           // InterfaceMethod jnr/ffi/mapper/SignatureTypeMapper.getToNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/mapper/ToNativeType;
      29: astore_3
      30: aload_3
      31: astore        4
      33: aload_3
      34: ifnonnull     45
      37: getstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      40: astore        4
      42: goto          62
      45: aload_3
      46: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      49: ldc           #24                 // class jnr/ffi/mapper/ToNativeType$Cacheable
      51: invokevirtual #17                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      54: ifne          62
      57: getstatic     #8                  // Field UNCACHEABLE_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      60: astore        4
      62: new           #18                 // class java/util/HashMap
      65: dup
      66: aload_0
      67: getfield      #3                  // Field toNativeTypeMap:Ljava/util/Map;
      70: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
      75: iconst_1
      76: iadd
      77: invokespecial #20                 // Method java/util/HashMap."<init>":(I)V
      80: astore        5
      82: aload         5
      84: aload_0
      85: getfield      #3                  // Field toNativeTypeMap:Ljava/util/Map;
      88: invokeinterface #21,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      93: aload         5
      95: aload_1
      96: aload         4
      98: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_0
     105: aload         5
     107: invokestatic  #23                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     110: putfield      #3                  // Field toNativeTypeMap:Ljava/util/Map;
     113: aload_3
     114: getstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
     117: if_acmpeq     124
     120: aload_3
     121: goto          125
     124: aconst_null
     125: areturn

  static {};
    Code:
       0: new           #25                 // class jnr/ffi/mapper/CachingTypeMapper$InvalidType
       3: dup
       4: aconst_null
       5: invokespecial #26                 // Method jnr/ffi/mapper/CachingTypeMapper$InvalidType."<init>":(Ljnr/ffi/mapper/CachingTypeMapper$1;)V
       8: putstatic     #8                  // Field UNCACHEABLE_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      11: new           #25                 // class jnr/ffi/mapper/CachingTypeMapper$InvalidType
      14: dup
      15: aconst_null
      16: invokespecial #26                 // Method jnr/ffi/mapper/CachingTypeMapper$InvalidType."<init>":(Ljnr/ffi/mapper/CachingTypeMapper$1;)V
      19: putstatic     #10                 // Field NO_TYPE:Ljnr/ffi/mapper/CachingTypeMapper$InvalidType;
      22: return
}
