Compiled from "CharSequenceArrayParameterConverter.java"
final class jnr.ffi.provider.converters.CharSequenceArrayParameterConverter$StringArray extends jnr.ffi.provider.InAccessibleMemoryIO {
  private final jnr.ffi.Pointer memory;

  private java.util.List<jnr.ffi.Pointer> stringMemory;

  private final java.nio.charset.Charset charset;

  private jnr.ffi.provider.converters.CharSequenceArrayParameterConverter$StringArray(jnr.ffi.Runtime, jnr.ffi.Pointer, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1                  // Method jnr/ffi/Pointer.address:()J
       6: aload_2
       7: invokevirtual #2                  // Method jnr/ffi/Pointer.isDirect:()Z
      10: invokespecial #3                  // Method jnr/ffi/provider/InAccessibleMemoryIO."<init>":(Ljnr/ffi/Runtime;JZ)V
      13: aload_0
      14: invokestatic  #4                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      17: putfield      #5                  // Field charset:Ljava/nio/charset/Charset;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field memory:Ljnr/ffi/Pointer;
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: iload_3
      31: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      34: putfield      #9                  // Field stringMemory:Ljava/util/List;
      37: return

  java.lang.String get(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field memory:Ljnr/ffi/Pointer;
       4: iload_1
       5: aload_0
       6: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
       9: invokevirtual #11                 // Method jnr/ffi/Runtime.addressSize:()I
      12: imul
      13: i2l
      14: invokevirtual #12                 // Method jnr/ffi/Pointer.getPointer:(J)Ljnr/ffi/Pointer;
      17: astore_2
      18: aload_2
      19: ifnull        30
      22: aload_2
      23: lconst_0
      24: invokevirtual #13                 // Method jnr/ffi/Pointer.getString:(J)Ljava/lang/String;
      27: goto          31
      30: aconst_null
      31: areturn

  void put(int, java.lang.CharSequence);
    Code:
       0: aload_2
       1: ifnonnull     36
       4: aload_0
       5: getfield      #6                  // Field memory:Ljnr/ffi/Pointer;
       8: iload_1
       9: aload_0
      10: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
      13: invokevirtual #11                 // Method jnr/ffi/Runtime.addressSize:()I
      16: imul
      17: i2l
      18: lconst_0
      19: invokevirtual #14                 // Method jnr/ffi/Pointer.putAddress:(JJ)V
      22: aload_0
      23: getfield      #9                  // Field stringMemory:Ljava/util/List;
      26: iload_1
      27: aconst_null
      28: invokeinterface #15,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      33: goto          110
      36: aload_0
      37: getfield      #5                  // Field charset:Ljava/nio/charset/Charset;
      40: aload_2
      41: invokestatic  #16                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      44: invokevirtual #17                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
      47: astore_3
      48: aload_0
      49: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
      52: aload_3
      53: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      56: iconst_4
      57: iadd
      58: iconst_1
      59: invokestatic  #19                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;IZ)Ljnr/ffi/Pointer;
      62: astore        4
      64: aload         4
      66: lconst_0
      67: aload_3
      68: invokevirtual #20                 // Method java/nio/ByteBuffer.array:()[B
      71: iconst_0
      72: aload_3
      73: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      76: invokevirtual #21                 // Method jnr/ffi/Pointer.put:(J[BII)V
      79: aload_0
      80: getfield      #9                  // Field stringMemory:Ljava/util/List;
      83: iload_1
      84: aload         4
      86: invokeinterface #15,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      91: aload_0
      92: getfield      #6                  // Field memory:Ljnr/ffi/Pointer;
      95: iload_1
      96: aload_0
      97: invokevirtual #10                 // Method getRuntime:()Ljnr/ffi/Runtime;
     100: invokevirtual #11                 // Method jnr/ffi/Runtime.addressSize:()I
     103: imul
     104: i2l
     105: aload         4
     107: invokevirtual #22                 // Method jnr/ffi/Pointer.putPointer:(JLjnr/ffi/Pointer;)V
     110: return

  public long size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field memory:Ljnr/ffi/Pointer;
       4: invokevirtual #23                 // Method jnr/ffi/Pointer.size:()J
       7: lreturn

  static jnr.ffi.provider.converters.CharSequenceArrayParameterConverter$StringArray allocate(jnr.ffi.Runtime, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokevirtual #11                 // Method jnr/ffi/Runtime.addressSize:()I
       6: imul
       7: invokestatic  #24                 // Method jnr/ffi/Memory.allocateDirect:(Ljnr/ffi/Runtime;I)Ljnr/ffi/Pointer;
      10: astore_2
      11: new           #25                 // class jnr/ffi/provider/converters/CharSequenceArrayParameterConverter$StringArray
      14: dup
      15: aload_0
      16: aload_2
      17: iload_1
      18: invokespecial #26                 // Method "<init>":(Ljnr/ffi/Runtime;Ljnr/ffi/Pointer;I)V
      21: areturn
}
