Compiled from "StringBufferParameterConverter.java"
public class jnr.ffi.provider.converters.StringBufferParameterConverter implements jnr.ffi.mapper.ToNativeConverter<java.lang.StringBuffer, java.nio.ByteBuffer>, jnr.ffi.mapper.ToNativeConverter$PostInvocation<java.lang.StringBuffer, java.nio.ByteBuffer> {
  private final java.nio.charset.Charset charset;

  private final int parameterFlags;

  private jnr.ffi.provider.converters.StringBufferParameterConverter(java.nio.charset.Charset, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field charset:Ljava/nio/charset/Charset;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field parameterFlags:I
      14: return

  public java.lang.Class<java.nio.ByteBuffer> nativeType();
    Code:
       0: ldc           #4                  // class java/nio/ByteBuffer
       2: areturn

  public static jnr.ffi.provider.converters.StringBufferParameterConverter getInstance(int, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: new           #5                  // class jnr/ffi/provider/converters/StringBufferParameterConverter
       3: dup
       4: invokestatic  #6                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       7: iload_0
       8: invokespecial #7                  // Method "<init>":(Ljava/nio/charset/Charset;I)V
      11: areturn

  public static jnr.ffi.provider.converters.StringBufferParameterConverter getInstance(java.nio.charset.Charset, int, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: new           #5                  // class jnr/ffi/provider/converters/StringBufferParameterConverter
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #7                  // Method "<init>":(Ljava/nio/charset/Charset;I)V
       9: areturn

  public java.nio.ByteBuffer toNative(java.lang.StringBuffer, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #3                  // Field parameterFlags:I
      10: invokestatic  #8                  // Method jnr/ffi/provider/ParameterFlags.isIn:(I)Z
      13: ifeq          30
      16: aload_0
      17: getfield      #2                  // Field charset:Ljava/nio/charset/Charset;
      20: aload_1
      21: invokestatic  #9                  // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      24: invokevirtual #10                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
      27: goto          39
      30: aload_1
      31: invokevirtual #11                 // Method java/lang/StringBuffer.capacity:()I
      34: iconst_1
      35: iadd
      36: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      39: astore_3
      40: aload_0
      41: getfield      #3                  // Field parameterFlags:I
      44: invokestatic  #13                 // Method jnr/ffi/provider/ParameterFlags.isOut:(I)Z
      47: ifeq          63
      50: aload_3
      51: invokevirtual #14                 // Method java/nio/ByteBuffer.capacity:()I
      54: aload_1
      55: invokevirtual #11                 // Method java/lang/StringBuffer.capacity:()I
      58: iconst_1
      59: iadd
      60: if_icmplt     70
      63: aload_3
      64: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      67: ifne          98
      70: aload_1
      71: invokevirtual #11                 // Method java/lang/StringBuffer.capacity:()I
      74: iconst_1
      75: iadd
      76: newarray       byte
      78: astore        4
      80: aload_3
      81: aload         4
      83: iconst_0
      84: aload_3
      85: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      88: invokevirtual #17                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      91: pop
      92: aload         4
      94: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      97: areturn
      98: aload_3
      99: areturn

  public void postInvoke(java.lang.StringBuffer, java.nio.ByteBuffer, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parameterFlags:I
       4: invokestatic  #13                 // Method jnr/ffi/provider/ParameterFlags.isOut:(I)Z
       7: ifeq          48
      10: aload_1
      11: ifnull        48
      14: aload_2
      15: ifnull        48
      18: aload_2
      19: aload_2
      20: invokevirtual #14                 // Method java/nio/ByteBuffer.capacity:()I
      23: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      26: pop
      27: aload_1
      28: iconst_0
      29: aload_1
      30: invokevirtual #20                 // Method java/lang/StringBuffer.length:()I
      33: invokevirtual #21                 // Method java/lang/StringBuffer.delete:(II)Ljava/lang/StringBuffer;
      36: aload_2
      37: aload_0
      38: getfield      #2                  // Field charset:Ljava/nio/charset/Charset;
      41: invokestatic  #22                 // Method jnr/ffi/util/BufferUtil.getCharSequence:(Ljava/nio/ByteBuffer;Ljava/nio/charset/Charset;)Ljava/lang/CharSequence;
      44: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;
      47: pop
      48: return

  public java.lang.Object toNative(java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class java/lang/StringBuffer
       5: aload_2
       6: invokevirtual #25                 // Method toNative:(Ljava/lang/StringBuffer;Ljnr/ffi/mapper/ToNativeContext;)Ljava/nio/ByteBuffer;
       9: areturn

  public void postInvoke(java.lang.Object, java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class java/lang/StringBuffer
       5: aload_2
       6: checkcast     #4                  // class java/nio/ByteBuffer
       9: aload_3
      10: invokevirtual #26                 // Method postInvoke:(Ljava/lang/StringBuffer;Ljava/nio/ByteBuffer;Ljnr/ffi/mapper/ToNativeContext;)V
      13: return
}
