Compiled from "Library.java"
public final class jnr.ffi.Library {
  private static final java.util.Map<java.lang.String, java.util.List<java.lang.String>> customSearchPaths;

  private final java.lang.String name;

  private jnr.ffi.Library(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: return

  public static jnr.ffi.Runtime getRuntime(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #3                  // class jnr/ffi/provider/LoadedLibrary
       4: invokeinterface #4,  1            // InterfaceMethod jnr/ffi/provider/LoadedLibrary.getRuntime:()Ljnr/ffi/Runtime;
       9: areturn

  public static <T> T loadLibrary(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #5                  // class java/lang/String
       5: dup
       6: iconst_0
       7: aload_0
       8: aastore
       9: invokestatic  #6                  // Method loadLibrary:(Ljava/lang/Class;[Ljava/lang/String;)Ljava/lang/Object;
      12: areturn

  public static <T> T loadLibrary(java.lang.Class<T>, java.lang.String...);
    Code:
       0: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: astore_2
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokestatic  #8                  // Method loadLibrary:(Ljava/lang/Class;Ljava/util/Map;[Ljava/lang/String;)Ljava/lang/Object;
      10: areturn

  public static <T> T loadLibrary(java.lang.String, java.lang.Class<T>, java.util.Map<jnr.ffi.LibraryOption, ?>);
    Code:
       0: aload_1
       1: aload_2
       2: iconst_1
       3: anewarray     #5                  // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: invokestatic  #8                  // Method loadLibrary:(Ljava/lang/Class;Ljava/util/Map;[Ljava/lang/String;)Ljava/lang/Object;
      13: areturn

  public static <T> T loadLibrary(java.lang.Class<T>, java.util.Map<jnr.ffi.LibraryOption, ?>, java.lang.String...);
    Code:
       0: invokestatic  #9                  // Method jnr/ffi/provider/FFIProvider.getSystemProvider:()Ljnr/ffi/provider/FFIProvider;
       3: aload_0
       4: invokevirtual #10                 // Method jnr/ffi/provider/FFIProvider.createLibraryLoader:(Ljava/lang/Class;)Ljnr/ffi/LibraryLoader;
       7: astore_3
       8: aload_2
       9: astore        4
      11: aload         4
      13: arraylength
      14: istore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: iload         5
      23: if_icmpge     90
      26: aload         4
      28: iload         6
      30: aaload
      31: astore        7
      33: aload_3
      34: aload         7
      36: invokevirtual #11                 // Method jnr/ffi/LibraryLoader.library:(Ljava/lang/String;)Ljnr/ffi/LibraryLoader;
      39: pop
      40: aload         7
      42: invokestatic  #12                 // Method getLibraryPath:(Ljava/lang/String;)Ljava/util/List;
      45: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore        8
      52: aload         8
      54: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          84
      62: aload         8
      64: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #5                  // class java/lang/String
      72: astore        9
      74: aload_3
      75: aload         9
      77: invokevirtual #16                 // Method jnr/ffi/LibraryLoader.search:(Ljava/lang/String;)Ljnr/ffi/LibraryLoader;
      80: pop
      81: goto          52
      84: iinc          6, 1
      87: goto          19
      90: aload_1
      91: invokeinterface #17,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      96: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     101: astore        4
     103: aload         4
     105: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          150
     113: aload         4
     115: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #19                 // class java/util/Map$Entry
     123: astore        5
     125: aload_3
     126: aload         5
     128: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     133: checkcast     #21                 // class jnr/ffi/LibraryOption
     136: aload         5
     138: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     143: invokevirtual #23                 // Method jnr/ffi/LibraryLoader.option:(Ljnr/ffi/LibraryOption;Ljava/lang/Object;)Ljnr/ffi/LibraryLoader;
     146: pop
     147: goto          103
     150: aload_3
     151: invokevirtual #24                 // Method jnr/ffi/LibraryLoader.failImmediately:()Ljnr/ffi/LibraryLoader;
     154: invokevirtual #25                 // Method jnr/ffi/LibraryLoader.load:()Ljava/lang/Object;
     157: areturn

  public static synchronized void addLibraryPath(java.lang.String, java.io.File);
    Code:
       0: getstatic     #26                 // Field customSearchPaths:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #28                 // class java/util/List
      12: astore_2
      13: aload_2
      14: ifnonnull     36
      17: new           #29                 // class java/util/concurrent/CopyOnWriteArrayList
      20: dup
      21: invokespecial #30                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      24: astore_2
      25: getstatic     #26                 // Field customSearchPaths:Ljava/util/Map;
      28: aload_0
      29: aload_2
      30: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_2
      37: aload_1
      38: invokevirtual #32                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      41: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: return

  public static java.util.List<java.lang.String> getLibraryPath(java.lang.String);
    Code:
       0: getstatic     #26                 // Field customSearchPaths:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #28                 // class java/util/List
      12: astore_1
      13: aload_1
      14: ifnull        19
      17: aload_1
      18: areturn
      19: invokestatic  #34                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      22: areturn

  public static jnr.ffi.Library getInstance(java.lang.String);
    Code:
       0: new           #35                 // class jnr/ffi/Library
       3: dup
       4: aload_0
       5: invokespecial #36                 // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #37                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #38                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #26                 // Field customSearchPaths:Ljava/util/Map;
      10: return
}
