Compiled from "CharSequenceArrayParameterConverter.java"
public class jnr.ffi.provider.converters.CharSequenceArrayParameterConverter implements jnr.ffi.mapper.ToNativeConverter<java.lang.CharSequence[], jnr.ffi.Pointer> {
  private final jnr.ffi.Runtime runtime;

  private final int parameterFlags;

  public static jnr.ffi.mapper.ToNativeConverter<java.lang.CharSequence[], jnr.ffi.Pointer> getInstance(jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod jnr/ffi/mapper/ToNativeContext.getAnnotations:()Ljava/util/Collection;
       6: invokestatic  #2                  // Method jnr/ffi/provider/ParameterFlags.parse:(Ljava/util/Collection;)I
       9: istore_1
      10: iload_1
      11: invokestatic  #3                  // Method jnr/ffi/provider/ParameterFlags.isOut:(I)Z
      14: ifne          34
      17: new           #4                  // class jnr/ffi/provider/converters/CharSequenceArrayParameterConverter
      20: dup
      21: aload_0
      22: invokeinterface #5,  1            // InterfaceMethod jnr/ffi/mapper/ToNativeContext.getRuntime:()Ljnr/ffi/Runtime;
      27: iload_1
      28: invokespecial #6                  // Method "<init>":(Ljnr/ffi/Runtime;I)V
      31: goto          48
      34: new           #7                  // class jnr/ffi/provider/converters/CharSequenceArrayParameterConverter$Out
      37: dup
      38: aload_0
      39: invokeinterface #5,  1            // InterfaceMethod jnr/ffi/mapper/ToNativeContext.getRuntime:()Ljnr/ffi/Runtime;
      44: iload_1
      45: invokespecial #8                  // Method jnr/ffi/provider/converters/CharSequenceArrayParameterConverter$Out."<init>":(Ljnr/ffi/Runtime;I)V
      48: areturn

  jnr.ffi.provider.converters.CharSequenceArrayParameterConverter(jnr.ffi.Runtime, int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #10                 // Field runtime:Ljnr/ffi/Runtime;
       9: aload_0
      10: iload_2
      11: putfield      #11                 // Field parameterFlags:I
      14: return

  public jnr.ffi.Pointer toNative(java.lang.CharSequence[], jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #10                 // Field runtime:Ljnr/ffi/Runtime;
      10: aload_1
      11: arraylength
      12: iconst_1
      13: iadd
      14: invokestatic  #12                 // Method jnr/ffi/provider/converters/CharSequenceArrayParameterConverter$StringArray.allocate:(Ljnr/ffi/Runtime;I)Ljnr/ffi/provider/converters/CharSequenceArrayParameterConverter$StringArray;
      17: astore_3
      18: aload_0
      19: getfield      #11                 // Field parameterFlags:I
      22: invokestatic  #13                 // Method jnr/ffi/provider/ParameterFlags.isIn:(I)Z
      25: ifeq          54
      28: iconst_0
      29: istore        4
      31: iload         4
      33: aload_1
      34: arraylength
      35: if_icmpge     54
      38: aload_3
      39: iload         4
      41: aload_1
      42: iload         4
      44: aaload
      45: invokevirtual #14                 // Method jnr/ffi/provider/converters/CharSequenceArrayParameterConverter$StringArray.put:(ILjava/lang/CharSequence;)V
      48: iinc          4, 1
      51: goto          31
      54: aload_3
      55: areturn

  public java.lang.Class<jnr.ffi.Pointer> nativeType();
    Code:
       0: ldc           #15                 // class jnr/ffi/Pointer
       2: areturn

  public java.lang.Object toNative(java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class "[Ljava/lang/CharSequence;"
       5: aload_2
       6: invokevirtual #17                 // Method toNative:([Ljava/lang/CharSequence;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/Pointer;
       9: areturn
}
