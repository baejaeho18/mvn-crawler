Compiled from "AsmRuntime.java"
public final class jnr.ffi.provider.jffi.AsmRuntime {
  public static final com.kenai.jffi.MemoryIO IO;

  private jnr.ffi.provider.jffi.AsmRuntime();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.UnsatisfiedLinkError newUnsatisifiedLinkError(java.lang.String);
    Code:
       0: new           #2                  // class java/lang/UnsatisfiedLinkError
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
       8: areturn

  public static com.kenai.jffi.HeapInvocationBuffer newHeapInvocationBuffer(com.kenai.jffi.Function);
    Code:
       0: new           #4                  // class com/kenai/jffi/HeapInvocationBuffer
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method com/kenai/jffi/HeapInvocationBuffer."<init>":(Lcom/kenai/jffi/Function;)V
       8: areturn

  public static com.kenai.jffi.HeapInvocationBuffer newHeapInvocationBuffer(com.kenai.jffi.CallContext);
    Code:
       0: new           #4                  // class com/kenai/jffi/HeapInvocationBuffer
       3: dup
       4: aload_0
       5: invokespecial #6                  // Method com/kenai/jffi/HeapInvocationBuffer."<init>":(Lcom/kenai/jffi/CallContext;)V
       8: areturn

  public static com.kenai.jffi.HeapInvocationBuffer newHeapInvocationBuffer(com.kenai.jffi.CallContext, int);
    Code:
       0: new           #4                  // class com/kenai/jffi/HeapInvocationBuffer
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #7                  // Method com/kenai/jffi/HeapInvocationBuffer."<init>":(Lcom/kenai/jffi/CallContext;I)V
       9: areturn

  public static jnr.ffi.Pointer pointerValue(long, jnr.ffi.Runtime);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifeq          18
       6: new           #8                  // class jnr/ffi/provider/jffi/DirectMemoryIO
       9: dup
      10: aload_2
      11: lload_0
      12: invokespecial #9                  // Method jnr/ffi/provider/jffi/DirectMemoryIO."<init>":(Ljnr/ffi/Runtime;J)V
      15: goto          19
      18: aconst_null
      19: areturn

  public static jnr.ffi.Pointer pointerValue(int, jnr.ffi.Runtime);
    Code:
       0: iload_0
       1: ifeq          16
       4: new           #8                  // class jnr/ffi/provider/jffi/DirectMemoryIO
       7: dup
       8: aload_1
       9: iload_0
      10: invokespecial #10                 // Method jnr/ffi/provider/jffi/DirectMemoryIO."<init>":(Ljnr/ffi/Runtime;I)V
      13: goto          17
      16: aconst_null
      17: areturn

  public static boolean isDirect(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #11                 // Method jnr/ffi/Pointer.isDirect:()Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static int intValue(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: ifnull        12
       4: aload_0
       5: invokevirtual #12                 // Method jnr/ffi/Pointer.address:()J
       8: l2i
       9: goto          13
      12: iconst_0
      13: ireturn

  public static long longValue(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #12                 // Method jnr/ffi/Pointer.address:()J
       8: goto          12
      11: lconst_0
      12: lreturn

  public static long longValue(jnr.ffi.Address);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #13                 // Method jnr/ffi/Address.longValue:()J
       8: goto          12
      11: lconst_0
      12: lreturn

  public static int intValue(jnr.ffi.Address);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #14                 // Method jnr/ffi/Address.intValue:()I
       8: goto          12
      11: iconst_0
      12: ireturn

  public static long longValue(java.nio.Buffer);
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: invokevirtual #15                 // Method java/nio/Buffer.isDirect:()Z
       8: ifeq          21
      11: invokestatic  #16                 // Method com/kenai/jffi/MemoryIO.getInstance:()Lcom/kenai/jffi/MemoryIO;
      14: aload_0
      15: invokevirtual #17                 // Method com/kenai/jffi/MemoryIO.getDirectBufferAddress:(Ljava/nio/Buffer;)J
      18: goto          22
      21: lconst_0
      22: lreturn

  public static int intValue(java.nio.Buffer);
    Code:
       0: aload_0
       1: ifnull        22
       4: aload_0
       5: invokevirtual #15                 // Method java/nio/Buffer.isDirect:()Z
       8: ifeq          22
      11: invokestatic  #16                 // Method com/kenai/jffi/MemoryIO.getInstance:()Lcom/kenai/jffi/MemoryIO;
      14: aload_0
      15: invokevirtual #17                 // Method com/kenai/jffi/MemoryIO.getDirectBufferAddress:(Ljava/nio/Buffer;)J
      18: l2i
      19: goto          23
      22: iconst_0
      23: ireturn

  public static jnr.ffi.provider.jffi.ParameterStrategy nullParameterStrategy();
    Code:
       0: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
       3: areturn

  public static jnr.ffi.provider.jffi.PointerParameterStrategy directPointerParameterStrategy();
    Code:
       0: getstatic     #19                 // Field jnr/ffi/provider/jffi/PointerParameterStrategy.DIRECT:Ljnr/ffi/provider/jffi/PointerParameterStrategy;
       3: areturn

  public static jnr.ffi.provider.jffi.PointerParameterStrategy pointerParameterStrategy(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #11                 // Method jnr/ffi/Pointer.isDirect:()Z
       8: ifeq          15
      11: getstatic     #19                 // Field jnr/ffi/provider/jffi/PointerParameterStrategy.DIRECT:Ljnr/ffi/provider/jffi/PointerParameterStrategy;
      14: areturn
      15: aload_0
      16: invokestatic  #20                 // Method otherPointerParameterStrategy:(Ljnr/ffi/Pointer;)Ljnr/ffi/provider/jffi/PointerParameterStrategy;
      19: areturn

  private static jnr.ffi.provider.jffi.PointerParameterStrategy otherPointerParameterStrategy(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method jnr/ffi/Pointer.hasArray:()Z
       4: ifeq          11
       7: getstatic     #22                 // Field jnr/ffi/provider/jffi/PointerParameterStrategy.HEAP:Ljnr/ffi/provider/jffi/PointerParameterStrategy;
      10: areturn
      11: new           #23                 // class java/lang/RuntimeException
      14: dup
      15: new           #24                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #26                 // String cannot convert
      24: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #30                 // String  to native
      36: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      45: athrow

  public static jnr.ffi.provider.jffi.BufferParameterStrategy bufferParameterStrategy(java.nio.Buffer, com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #15                 // Method java/nio/Buffer.isDirect:()Z
       8: ifeq          16
      11: aload_1
      12: invokestatic  #33                 // Method jnr/ffi/provider/jffi/BufferParameterStrategy.direct:(Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      15: areturn
      16: aload_0
      17: invokevirtual #34                 // Method java/nio/Buffer.hasArray:()Z
      20: ifeq          28
      23: aload_1
      24: invokestatic  #35                 // Method jnr/ffi/provider/jffi/BufferParameterStrategy.heap:(Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      27: areturn
      28: new           #36                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #37                 // String cannot marshal non-direct, non-array Buffer
      34: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.Buffer);
    Code:
       0: aload_0
       1: instanceof    #39                 // class java/nio/ByteBuffer
       4: ifeq          15
       7: aload_0
       8: getstatic     #40                 // Field com/kenai/jffi/ObjectParameterType.BYTE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      11: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      14: areturn
      15: aload_0
      16: instanceof    #42                 // class java/nio/ShortBuffer
      19: ifeq          30
      22: aload_0
      23: getstatic     #43                 // Field com/kenai/jffi/ObjectParameterType.SHORT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      26: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      29: areturn
      30: aload_0
      31: instanceof    #44                 // class java/nio/CharBuffer
      34: ifeq          45
      37: aload_0
      38: getstatic     #45                 // Field com/kenai/jffi/ObjectParameterType.CHAR:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      41: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      44: areturn
      45: aload_0
      46: instanceof    #46                 // class java/nio/IntBuffer
      49: ifeq          60
      52: aload_0
      53: getstatic     #47                 // Field com/kenai/jffi/ObjectParameterType.INT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      56: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      59: areturn
      60: aload_0
      61: instanceof    #48                 // class java/nio/LongBuffer
      64: ifeq          75
      67: aload_0
      68: getstatic     #49                 // Field com/kenai/jffi/ObjectParameterType.LONG:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      71: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      74: areturn
      75: aload_0
      76: instanceof    #50                 // class java/nio/FloatBuffer
      79: ifeq          90
      82: aload_0
      83: getstatic     #51                 // Field com/kenai/jffi/ObjectParameterType.FLOAT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      86: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      89: areturn
      90: aload_0
      91: instanceof    #52                 // class java/nio/DoubleBuffer
      94: ifeq          105
      97: aload_0
      98: getstatic     #53                 // Field com/kenai/jffi/ObjectParameterType.DOUBLE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
     101: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
     104: areturn
     105: aload_0
     106: ifnonnull     116
     109: getstatic     #40                 // Field com/kenai/jffi/ObjectParameterType.BYTE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
     112: invokestatic  #33                 // Method jnr/ffi/provider/jffi/BufferParameterStrategy.direct:(Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
     115: areturn
     116: new           #36                 // class java/lang/IllegalArgumentException
     119: dup
     120: new           #24                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #54                 // String unsupported java.nio.Buffer subclass:
     129: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     136: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     145: athrow

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getstatic     #40                 // Field com/kenai/jffi/ObjectParameterType.BYTE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.ShortBuffer);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field com/kenai/jffi/ObjectParameterType.SHORT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.CharBuffer);
    Code:
       0: aload_0
       1: getstatic     #45                 // Field com/kenai/jffi/ObjectParameterType.CHAR:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.IntBuffer);
    Code:
       0: aload_0
       1: getstatic     #47                 // Field com/kenai/jffi/ObjectParameterType.INT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.LongBuffer);
    Code:
       0: aload_0
       1: getstatic     #49                 // Field com/kenai/jffi/ObjectParameterType.LONG:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.FloatBuffer);
    Code:
       0: aload_0
       1: getstatic     #51                 // Field com/kenai/jffi/ObjectParameterType.FLOAT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.BufferParameterStrategy pointerParameterStrategy(java.nio.DoubleBuffer);
    Code:
       0: aload_0
       1: getstatic     #53                 // Field com/kenai/jffi/ObjectParameterType.DOUBLE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
       4: invokestatic  #41                 // Method bufferParameterStrategy:(Ljava/nio/Buffer;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       7: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(byte[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #55                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.BYTE:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(short[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #56                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.SHORT:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(char[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #57                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.CHAR:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(int[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #58                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.INT:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(long[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #59                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.LONG:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(float[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #60                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.FLOAT:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(double[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #61                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.DOUBLE:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static jnr.ffi.provider.jffi.ParameterStrategy pointerParameterStrategy(boolean[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: getstatic     #62                 // Field jnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy.BOOLEAN:Ljnr/ffi/provider/jffi/PrimitiveArrayParameterStrategy;
       7: goto          13
      10: getstatic     #18                 // Field jnr/ffi/provider/jffi/NullObjectParameterStrategy.NULL:Ljnr/ffi/provider/jffi/ParameterStrategy;
      13: areturn

  public static void postInvoke(jnr.ffi.mapper.ToNativeConverter$PostInvocation, java.lang.Object, java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #63,  4           // InterfaceMethod jnr/ffi/mapper/ToNativeConverter$PostInvocation.postInvoke:(Ljava/lang/Object;Ljava/lang/Object;Ljnr/ffi/mapper/ToNativeContext;)V
       9: goto          14
      12: astore        4
      14: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Throwable

  static {};
    Code:
       0: invokestatic  #16                 // Method com/kenai/jffi/MemoryIO.getInstance:()Lcom/kenai/jffi/MemoryIO;
       3: putstatic     #65                 // Field IO:Lcom/kenai/jffi/MemoryIO;
       6: return
}
