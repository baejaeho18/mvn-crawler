Compiled from "TypeMapper.java"
public final class jnr.ffi.mapper.TypeMapper$Builder {
  private final java.util.Map<java.lang.Class, jnr.ffi.mapper.ToNativeConverter<?, ?>> toNativeConverterMap;

  private final java.util.Map<java.lang.Class, jnr.ffi.mapper.FromNativeConverter<?, ?>> fromNativeConverterMap;

  public jnr.ffi.mapper.TypeMapper$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field toNativeConverterMap:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field fromNativeConverterMap:Ljava/util/Map;
      26: return

  public <T> jnr.ffi.mapper.TypeMapper$Builder map(java.lang.Class<? extends T>, jnr.ffi.mapper.ToNativeConverter<? extends T, ?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field toNativeConverterMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public <T> jnr.ffi.mapper.TypeMapper$Builder map(java.lang.Class<? extends T>, jnr.ffi.mapper.FromNativeConverter<? extends T, ?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field fromNativeConverterMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public <T> jnr.ffi.mapper.TypeMapper$Builder map(java.lang.Class<? extends T>, jnr.ffi.mapper.DataConverter<? extends T, ?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field toNativeConverterMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #5                  // Field fromNativeConverterMap:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: areturn

  public jnr.ffi.mapper.TypeMapper build();
    Code:
       0: new           #7                  // class jnr/ffi/mapper/SimpleTypeMapper
       3: dup
       4: aload_0
       5: getfield      #4                  // Field toNativeConverterMap:Ljava/util/Map;
       8: aload_0
       9: getfield      #5                  // Field fromNativeConverterMap:Ljava/util/Map;
      12: invokespecial #8                  // Method jnr/ffi/mapper/SimpleTypeMapper."<init>":(Ljava/util/Map;Ljava/util/Map;)V
      15: areturn
}
