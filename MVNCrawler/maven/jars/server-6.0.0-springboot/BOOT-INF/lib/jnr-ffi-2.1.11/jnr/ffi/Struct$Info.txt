Compiled from "Struct.java"
final class jnr.ffi.Struct$Info {
  private final jnr.ffi.Runtime runtime;

  private jnr.ffi.Pointer memory;

  jnr.ffi.Struct enclosing;

  int offset;

  int size;

  int minAlign;

  boolean isUnion;

  boolean resetIndex;

  jnr.ffi.Struct$Alignment alignment;

  public jnr.ffi.Struct$Info(jnr.ffi.Runtime);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field memory:Ljnr/ffi/Pointer;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field offset:I
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field size:I
      24: aload_0
      25: iconst_1
      26: putfield      #7                  // Field minAlign:I
      29: aload_0
      30: iconst_0
      31: putfield      #8                  // Field isUnion:Z
      34: aload_0
      35: iconst_0
      36: putfield      #9                  // Field resetIndex:Z
      39: aload_0
      40: new           #10                 // class jnr/ffi/Struct$Alignment
      43: dup
      44: iconst_0
      45: invokespecial #11                 // Method jnr/ffi/Struct$Alignment."<init>":(I)V
      48: putfield      #12                 // Field alignment:Ljnr/ffi/Struct$Alignment;
      51: aload_0
      52: aload_1
      53: putfield      #1                  // Field runtime:Ljnr/ffi/Runtime;
      56: return

  public final int getOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
       4: ifnonnull     11
       7: iconst_0
       8: goto          26
      11: aload_0
      12: getfield      #5                  // Field offset:I
      15: aload_0
      16: getfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
      19: getfield      #13                 // Field jnr/ffi/Struct.__info:Ljnr/ffi/Struct$Info;
      22: invokevirtual #14                 // Method getOffset:()I
      25: iadd
      26: ireturn

  public final jnr.ffi.Pointer getMemory(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
       4: ifnull        21
       7: aload_0
       8: getfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
      11: getfield      #13                 // Field jnr/ffi/Struct.__info:Ljnr/ffi/Struct$Info;
      14: iload_1
      15: invokevirtual #15                 // Method getMemory:(I)Ljnr/ffi/Pointer;
      18: goto          45
      21: aload_0
      22: getfield      #3                  // Field memory:Ljnr/ffi/Pointer;
      25: ifnull        35
      28: aload_0
      29: getfield      #3                  // Field memory:Ljnr/ffi/Pointer;
      32: goto          45
      35: aload_0
      36: aload_0
      37: iload_1
      38: invokespecial #16                 // Method allocateMemory:(I)Ljnr/ffi/Pointer;
      41: dup_x1
      42: putfield      #3                  // Field memory:Ljnr/ffi/Pointer;
      45: areturn

  public final jnr.ffi.Pointer getMemory();
    Code:
       0: aload_0
       1: bipush        16
       3: invokevirtual #15                 // Method getMemory:(I)Ljnr/ffi/Pointer;
       6: areturn

  final boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
       4: ifnull        20
       7: aload_0
       8: getfield      #4                  // Field enclosing:Ljnr/ffi/Struct;
      11: getfield      #13                 // Field jnr/ffi/Struct.__info:Ljnr/ffi/Struct$Info;
      14: invokevirtual #18                 // Method isDirect:()Z
      17: ifne          37
      20: aload_0
      21: getfield      #3                  // Field memory:Ljnr/ffi/Pointer;
      24: ifnull        41
      27: aload_0
      28: getfield      #3                  // Field memory:Ljnr/ffi/Pointer;
      31: invokevirtual #19                 // Method jnr/ffi/Pointer.isDirect:()Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  final int size();
    Code:
       0: aload_0
       1: getfield      #12                 // Field alignment:Ljnr/ffi/Struct$Alignment;
       4: invokevirtual #20                 // Method jnr/ffi/Struct$Alignment.intValue:()I
       7: ifle          30
      10: aload_0
      11: getfield      #6                  // Field size:I
      14: aload_0
      15: getfield      #6                  // Field size:I
      18: ineg
      19: aload_0
      20: getfield      #7                  // Field minAlign:I
      23: iconst_1
      24: isub
      25: iand
      26: iadd
      27: goto          34
      30: aload_0
      31: getfield      #6                  // Field size:I
      34: ireturn

  final int getMinimumAlignment();
    Code:
       0: aload_0
       1: getfield      #7                  // Field minAlign:I
       4: ireturn

  private jnr.ffi.Pointer allocateMemory(int);
    Code:
       0: iload_1
       1: invokestatic  #21                 // Method jnr/ffi/provider/ParameterFlags.isDirect:(I)Z
       4: ifeq          25
       7: aload_0
       8: getfield      #1                  // Field runtime:Ljnr/ffi/Runtime;
      11: invokevirtual #22                 // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
      14: aload_0
      15: invokevirtual #23                 // Method size:()I
      18: iconst_1
      19: invokeinterface #24,  3           // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateDirect:(IZ)Ljnr/ffi/Pointer;
      24: areturn
      25: aload_0
      26: getfield      #1                  // Field runtime:Ljnr/ffi/Runtime;
      29: invokevirtual #22                 // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
      32: aload_0
      33: invokevirtual #23                 // Method size:()I
      36: invokeinterface #25,  2           // InterfaceMethod jnr/ffi/provider/MemoryManager.allocate:(I)Ljnr/ffi/Pointer;
      41: areturn

  public final void useMemory(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field memory:Ljnr/ffi/Pointer;
       5: return

  protected final int addField(int, int, jnr.ffi.Struct$Offset);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field size:I
       5: aload_3
       6: invokevirtual #26                 // Method jnr/ffi/Struct$Offset.intValue:()I
       9: iload_1
      10: iconst_3
      11: ishr
      12: iadd
      13: invokestatic  #27                 // Method java/lang/Math.max:(II)I
      16: putfield      #6                  // Field size:I
      19: aload_0
      20: aload_0
      21: getfield      #7                  // Field minAlign:I
      24: iload_2
      25: iconst_3
      26: ishr
      27: invokestatic  #27                 // Method java/lang/Math.max:(II)I
      30: putfield      #7                  // Field minAlign:I
      33: aload_3
      34: invokevirtual #26                 // Method jnr/ffi/Struct$Offset.intValue:()I
      37: ireturn

  protected final int addField(int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field alignment:Ljnr/ffi/Struct$Alignment;
       4: invokevirtual #20                 // Method jnr/ffi/Struct$Alignment.intValue:()I
       7: ifle          26
      10: aload_0
      11: getfield      #12                 // Field alignment:Ljnr/ffi/Struct$Alignment;
      14: invokevirtual #20                 // Method jnr/ffi/Struct$Alignment.intValue:()I
      17: iload_2
      18: iconst_3
      19: ishr
      20: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      23: goto          29
      26: iload_2
      27: iconst_3
      28: ishr
      29: istore_3
      30: aload_0
      31: getfield      #9                  // Field resetIndex:Z
      34: ifeq          41
      37: iconst_0
      38: goto          49
      41: aload_0
      42: getfield      #6                  // Field size:I
      45: iload_3
      46: invokestatic  #29                 // Method jnr/ffi/Struct.access$000:(II)I
      49: istore        4
      51: aload_0
      52: aload_0
      53: getfield      #6                  // Field size:I
      56: iload         4
      58: iload_1
      59: iconst_3
      60: ishr
      61: iadd
      62: invokestatic  #27                 // Method java/lang/Math.max:(II)I
      65: putfield      #6                  // Field size:I
      68: aload_0
      69: aload_0
      70: getfield      #7                  // Field minAlign:I
      73: iload_3
      74: invokestatic  #27                 // Method java/lang/Math.max:(II)I
      77: putfield      #7                  // Field minAlign:I
      80: iload         4
      82: ireturn

  static jnr.ffi.Runtime access$100(jnr.ffi.Struct$Info);
    Code:
       0: aload_0
       1: getfield      #1                  // Field runtime:Ljnr/ffi/Runtime;
       4: areturn
}
