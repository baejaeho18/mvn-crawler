Compiled from "Memory.java"
public final class jnr.ffi.Memory {
  private jnr.ffi.Memory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static jnr.ffi.Pointer allocate(jnr.ffi.Runtime, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: iload_1
       5: invokeinterface #3,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocate:(I)Ljnr/ffi/Pointer;
      10: areturn

  public static jnr.ffi.Pointer allocate(jnr.ffi.Runtime, jnr.ffi.NativeType);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: invokeinterface #3,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocate:(I)Ljnr/ffi/Pointer;
      17: areturn

  public static jnr.ffi.Pointer allocate(jnr.ffi.Runtime, jnr.ffi.Type);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_1
       5: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
       8: invokeinterface #3,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocate:(I)Ljnr/ffi/Pointer;
      13: areturn

  public static jnr.ffi.Pointer allocate(jnr.ffi.Runtime, jnr.ffi.TypeAlias);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/TypeAlias;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: invokeinterface #3,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocate:(I)Ljnr/ffi/Pointer;
      17: areturn

  public static jnr.ffi.Pointer allocateDirect(jnr.ffi.Runtime, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: iload_1
       5: invokeinterface #7,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateDirect:(I)Ljnr/ffi/Pointer;
      10: areturn

  public static jnr.ffi.Pointer allocateDirect(jnr.ffi.Runtime, jnr.ffi.NativeType);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: invokeinterface #7,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateDirect:(I)Ljnr/ffi/Pointer;
      17: areturn

  public static jnr.ffi.Pointer allocateDirect(jnr.ffi.Runtime, jnr.ffi.TypeAlias);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/TypeAlias;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: invokeinterface #7,  2            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateDirect:(I)Ljnr/ffi/Pointer;
      17: areturn

  public static jnr.ffi.Pointer allocateDirect(jnr.ffi.Runtime, int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: iload_1
       5: iload_2
       6: invokeinterface #8,  3            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateDirect:(IZ)Ljnr/ffi/Pointer;
      11: areturn

  public static jnr.ffi.Pointer allocateTemporary(jnr.ffi.Runtime, jnr.ffi.NativeType);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: iconst_1
      13: invokeinterface #9,  3            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateTemporary:(IZ)Ljnr/ffi/Pointer;
      18: areturn

  public static jnr.ffi.Pointer allocateTemporary(jnr.ffi.Runtime, jnr.ffi.TypeAlias);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/TypeAlias;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: iconst_1
      13: invokeinterface #9,  3            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateTemporary:(IZ)Ljnr/ffi/Pointer;
      18: areturn

  public static jnr.ffi.Pointer allocateTemporary(jnr.ffi.Runtime, jnr.ffi.NativeType, boolean);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.getMemoryManager:()Ljnr/ffi/provider/MemoryManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
       9: invokevirtual #5                  // Method jnr/ffi/Type.size:()I
      12: iload_2
      13: invokeinterface #9,  3            // InterfaceMethod jnr/ffi/provider/MemoryManager.allocateTemporary:(IZ)Ljnr/ffi/Pointer;
      18: areturn
}
