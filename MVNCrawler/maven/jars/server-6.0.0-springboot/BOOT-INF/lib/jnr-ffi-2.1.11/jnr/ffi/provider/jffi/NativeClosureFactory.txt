Compiled from "NativeClosureFactory.java"
public final class jnr.ffi.provider.jffi.NativeClosureFactory<T> {
  private final jnr.ffi.Runtime runtime;

  private final java.util.concurrent.ConcurrentMap<java.lang.Integer, jnr.ffi.provider.jffi.NativeClosureFactory<T>.ClosureReference> closures;

  private final com.kenai.jffi.CallContext callContext;

  private final jnr.ffi.provider.jffi.NativeClosureProxy$Factory closureProxyFactory;

  private final java.util.concurrent.ConcurrentLinkedQueue<jnr.ffi.provider.jffi.NativeClosurePointer> freeQueue;

  private com.kenai.jffi.ClosureMagazine currentMagazine;

  protected jnr.ffi.provider.jffi.NativeClosureFactory(jnr.ffi.Runtime, com.kenai.jffi.CallContext, jnr.ffi.provider.jffi.NativeClosureProxy$Factory);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/ConcurrentLinkedQueue
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      23: putfield      #9                  // Field freeQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      26: aload_0
      27: aload_1
      28: putfield      #10                 // Field runtime:Ljnr/ffi/Runtime;
      31: aload_0
      32: aload_3
      33: putfield      #11                 // Field closureProxyFactory:Ljnr/ffi/provider/jffi/NativeClosureProxy$Factory;
      36: aload_0
      37: aload_2
      38: putfield      #12                 // Field callContext:Lcom/kenai/jffi/CallContext;
      41: return

  static <T> jnr.ffi.provider.jffi.NativeClosureFactory newClosureFactory(jnr.ffi.Runtime, java.lang.Class<T>, jnr.ffi.mapper.SignatureTypeMapper, jnr.ffi.provider.jffi.AsmClassLoader);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokevirtual #13                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
       7: astore        5
       9: aload         5
      11: arraylength
      12: istore        6
      14: iconst_0
      15: istore        7
      17: iload         7
      19: iload         6
      21: if_icmpge     76
      24: aload         5
      26: iload         7
      28: aaload
      29: astore        8
      31: aload         8
      33: ldc           #14                 // class jnr/ffi/annotations/Delegate
      35: invokevirtual #15                 // Method java/lang/reflect/Method.isAnnotationPresent:(Ljava/lang/Class;)Z
      38: ifeq          70
      41: aload         8
      43: invokevirtual #16                 // Method java/lang/reflect/Method.getModifiers:()I
      46: invokestatic  #17                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      49: ifeq          70
      52: aload         8
      54: invokevirtual #16                 // Method java/lang/reflect/Method.getModifiers:()I
      57: invokestatic  #18                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      60: ifne          70
      63: aload         8
      65: astore        4
      67: goto          76
      70: iinc          7, 1
      73: goto          17
      76: aload         4
      78: ifnonnull     111
      81: new           #19                 // class java/lang/NoSuchMethodError
      84: dup
      85: new           #20                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #22                 // String no public non-static delegate method defined in
      94: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
     101: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #26                 // Method java/lang/NoSuchMethodError."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload         4
     113: invokevirtual #27                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
     116: astore        5
     118: aload         5
     120: arraylength
     121: anewarray     #28                 // class jnr/ffi/provider/FromNativeType
     124: astore        6
     126: iconst_0
     127: istore        7
     129: iload         7
     131: aload         5
     133: arraylength
     134: if_icmpge     157
     137: aload         6
     139: iload         7
     141: aload_0
     142: aload         4
     144: iload         7
     146: aload_2
     147: invokestatic  #29                 // Method jnr/ffi/provider/jffi/ClosureUtil.getParameterType:(Ljnr/ffi/Runtime;Ljava/lang/reflect/Method;ILjnr/ffi/mapper/SignatureTypeMapper;)Ljnr/ffi/provider/FromNativeType;
     150: aastore
     151: iinc          7, 1
     154: goto          129
     157: aload_0
     158: aload         4
     160: aload_2
     161: invokestatic  #30                 // Method jnr/ffi/provider/jffi/ClosureUtil.getResultType:(Ljnr/ffi/Runtime;Ljava/lang/reflect/Method;Ljnr/ffi/mapper/SignatureTypeMapper;)Ljnr/ffi/provider/ToNativeType;
     164: astore        7
     166: new           #31                 // class jnr/ffi/provider/jffi/NativeClosureFactory
     169: dup
     170: aload_0
     171: aload         7
     173: aload         6
     175: aload         4
     177: invokestatic  #32                 // Method jnr/ffi/provider/jffi/InvokerUtil.getNativeCallingConvention:(Ljava/lang/reflect/Method;)Ljnr/ffi/CallingConvention;
     180: iconst_0
     181: invokestatic  #33                 // Method jnr/ffi/provider/jffi/InvokerUtil.getCallContext:(Ljnr/ffi/provider/SigType;[Ljnr/ffi/provider/SigType;Ljnr/ffi/CallingConvention;Z)Lcom/kenai/jffi/CallContext;
     184: aload_0
     185: aload         4
     187: aload         7
     189: aload         6
     191: aload_3
     192: invokestatic  #34                 // Method jnr/ffi/provider/jffi/NativeClosureProxy.newProxyFactory:(Ljnr/ffi/Runtime;Ljava/lang/reflect/Method;Ljnr/ffi/provider/ToNativeType;[Ljnr/ffi/provider/FromNativeType;Ljnr/ffi/provider/jffi/AsmClassLoader;)Ljnr/ffi/provider/jffi/NativeClosureProxy$Factory;
     195: invokespecial #35                 // Method "<init>":(Ljnr/ffi/Runtime;Lcom/kenai/jffi/CallContext;Ljnr/ffi/provider/jffi/NativeClosureProxy$Factory;)V
     198: areturn

  private void expunge(jnr.ffi.provider.jffi.NativeClosureFactory<T>.ClosureReference, java.lang.Integer);
    Code:
       0: aload_1
       1: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
       4: ifnonnull     22
       7: aload_0
       8: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      11: aload_2
      12: aload_1
      13: invokeinterface #37,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          22
      21: return
      22: aload_0
      23: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      26: dup
      27: astore_3
      28: monitorenter
      29: aload_0
      30: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      33: aload_2
      34: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #39                 // class jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference
      42: astore        4
      44: aload         4
      46: astore        5
      48: aload         4
      50: ifnull        138
      53: aload         4
      55: aload_1
      56: if_acmpne     124
      59: aload         5
      61: aload         4
      63: if_acmpeq     79
      66: aload         5
      68: aload         4
      70: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      73: putfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      76: goto          138
      79: aload         4
      81: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      84: ifnull        108
      87: aload_0
      88: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      91: aload_2
      92: aload         4
      94: aload         4
      96: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      99: invokeinterface #40,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     104: pop
     105: goto          138
     108: aload_0
     109: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
     112: aload_2
     113: aload         4
     115: invokeinterface #37,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     120: pop
     121: goto          138
     124: aload         4
     126: astore        5
     128: aload         4
     130: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
     133: astore        4
     135: goto          48
     138: aload_3
     139: monitorexit
     140: goto          150
     143: astore        6
     145: aload_3
     146: monitorexit
     147: aload         6
     149: athrow
     150: return
    Exception table:
       from    to  target type
          29   140   143   any
         143   147   143   any

  private void recycle(jnr.ffi.provider.jffi.NativeClosurePointer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field freeQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #41                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  jnr.ffi.provider.jffi.NativeClosurePointer allocateClosurePointer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field freeQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #42                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #43                 // class jnr/ffi/provider/jffi/NativeClosurePointer
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: aload_0
      18: getfield      #11                 // Field closureProxyFactory:Ljnr/ffi/provider/jffi/NativeClosureProxy$Factory;
      21: invokevirtual #44                 // Method jnr/ffi/provider/jffi/NativeClosureProxy$Factory.newClosureProxy:()Ljnr/ffi/provider/jffi/NativeClosureProxy;
      24: astore_2
      25: aconst_null
      26: astore_3
      27: aload_0
      28: dup
      29: astore        4
      31: monitorenter
      32: aload_0
      33: getfield      #45                 // Field currentMagazine:Lcom/kenai/jffi/ClosureMagazine;
      36: ifnull        52
      39: aload_0
      40: getfield      #45                 // Field currentMagazine:Lcom/kenai/jffi/ClosureMagazine;
      43: aload_2
      44: invokevirtual #46                 // Method com/kenai/jffi/ClosureMagazine.allocate:(Ljava/lang/Object;)Lcom/kenai/jffi/Closure$Handle;
      47: dup
      48: astore_3
      49: ifnonnull     73
      52: aload_0
      53: invokestatic  #47                 // Method com/kenai/jffi/ClosureManager.getInstance:()Lcom/kenai/jffi/ClosureManager;
      56: aload_0
      57: getfield      #12                 // Field callContext:Lcom/kenai/jffi/CallContext;
      60: aload_0
      61: getfield      #11                 // Field closureProxyFactory:Ljnr/ffi/provider/jffi/NativeClosureProxy$Factory;
      64: invokevirtual #48                 // Method jnr/ffi/provider/jffi/NativeClosureProxy$Factory.getInvokeMethod:()Ljava/lang/reflect/Method;
      67: invokevirtual #49                 // Method com/kenai/jffi/ClosureManager.newClosureMagazine:(Lcom/kenai/jffi/CallContext;Ljava/lang/reflect/Method;)Lcom/kenai/jffi/ClosureMagazine;
      70: putfield      #45                 // Field currentMagazine:Lcom/kenai/jffi/ClosureMagazine;
      73: aload_3
      74: ifnull        32
      77: aload         4
      79: monitorexit
      80: goto          91
      83: astore        5
      85: aload         4
      87: monitorexit
      88: aload         5
      90: athrow
      91: new           #43                 // class jnr/ffi/provider/jffi/NativeClosurePointer
      94: dup
      95: aload_0
      96: getfield      #10                 // Field runtime:Ljnr/ffi/Runtime;
      99: aload_3
     100: aload_2
     101: invokespecial #50                 // Method jnr/ffi/provider/jffi/NativeClosurePointer."<init>":(Ljnr/ffi/Runtime;Lcom/kenai/jffi/Closure$Handle;Ljnr/ffi/provider/jffi/NativeClosureProxy;)V
     104: areturn
    Exception table:
       from    to  target type
          32    80    83   any
          83    88    83   any

  jnr.ffi.provider.jffi.NativeClosurePointer newClosure(java.lang.Object, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #51                 // Method newClosureReference:(Ljava/lang/Object;Ljava/lang/Integer;)Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
       6: invokestatic  #52                 // Method jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.access$200:(Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;)Ljnr/ffi/provider/jffi/NativeClosurePointer;
       9: areturn

  jnr.ffi.provider.jffi.NativeClosureFactory<T>.ClosureReference newClosureReference(java.lang.Object, java.lang.Integer);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method allocateClosurePointer:()Ljnr/ffi/provider/jffi/NativeClosurePointer;
       4: astore_3
       5: new           #39                 // class jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference
       8: dup
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_0
      13: aload_3
      14: aconst_null
      15: invokespecial #54                 // Method jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference."<init>":(Ljnr/ffi/provider/jffi/NativeClosureFactory;Ljava/lang/Object;Ljava/lang/Integer;Ljnr/ffi/provider/jffi/NativeClosureFactory;Ljnr/ffi/provider/jffi/NativeClosurePointer;Ljnr/ffi/provider/jffi/NativeClosureFactory$1;)V
      18: astore        4
      20: aload_3
      21: getfield      #55                 // Field jnr/ffi/provider/jffi/NativeClosurePointer.proxy:Ljnr/ffi/provider/jffi/NativeClosureProxy;
      24: aload         4
      26: putfield      #56                 // Field jnr/ffi/provider/jffi/NativeClosureProxy.closureReference:Ljava/lang/ref/Reference;
      29: aload_0
      30: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      33: aload_2
      34: aload         4
      36: invokeinterface #57,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: ifnonnull     47
      44: aload         4
      46: areturn
      47: aload_0
      48: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      51: dup
      52: astore        5
      54: monitorenter
      55: aload         4
      57: aload_0
      58: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      61: aload_2
      62: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference
      70: putfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      73: aload         4
      75: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      78: ifnonnull     99
      81: aload_0
      82: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      85: aload_2
      86: aload         4
      88: invokeinterface #57,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: ifnonnull     99
      96: goto          119
      99: aload_0
     100: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
     103: aload_2
     104: aload         4
     106: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
     109: aload         4
     111: invokeinterface #40,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     116: ifeq          55
     119: aload         5
     121: monitorexit
     122: goto          133
     125: astore        6
     127: aload         5
     129: monitorexit
     130: aload         6
     132: athrow
     133: aload         4
     135: areturn
    Exception table:
       from    to  target type
          55   122   125   any
         125   130   125   any

  jnr.ffi.provider.jffi.NativeClosureFactory<T>.ClosureReference getClosureReference(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #58                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: astore_2
       8: aload_0
       9: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      12: aload_2
      13: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #39                 // class jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference
      21: astore_3
      22: aload_3
      23: ifnull        80
      26: aload_3
      27: invokevirtual #60                 // Method jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.getCallable:()Ljava/lang/Object;
      30: aload_1
      31: if_acmpne     36
      34: aload_3
      35: areturn
      36: aload_0
      37: getfield      #6                  // Field closures:Ljava/util/concurrent/ConcurrentMap;
      40: dup
      41: astore        4
      43: monitorenter
      44: aload_3
      45: getfield      #36                 // Field jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.next:Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      48: dup
      49: astore_3
      50: ifnull        66
      53: aload_3
      54: invokevirtual #60                 // Method jnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference.getCallable:()Ljava/lang/Object;
      57: aload_1
      58: if_acmpne     44
      61: aload_3
      62: aload         4
      64: monitorexit
      65: areturn
      66: aload         4
      68: monitorexit
      69: goto          80
      72: astore        5
      74: aload         4
      76: monitorexit
      77: aload         5
      79: athrow
      80: aload_0
      81: aload_1
      82: aload_2
      83: invokevirtual #51                 // Method newClosureReference:(Ljava/lang/Object;Ljava/lang/Integer;)Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;
      86: areturn
    Exception table:
       from    to  target type
          44    65    72   any
          66    69    72   any
          72    77    72   any

  static void access$000(jnr.ffi.provider.jffi.NativeClosureFactory, jnr.ffi.provider.jffi.NativeClosureFactory$ClosureReference, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method expunge:(Ljnr/ffi/provider/jffi/NativeClosureFactory$ClosureReference;Ljava/lang/Integer;)V
       6: return

  static void access$100(jnr.ffi.provider.jffi.NativeClosureFactory, jnr.ffi.provider.jffi.NativeClosurePointer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method recycle:(Ljnr/ffi/provider/jffi/NativeClosurePointer;)V
       5: return
}
