Compiled from "ReflectionVariableAccessorGenerator.java"
class jnr.ffi.provider.jffi.ReflectionVariableAccessorGenerator {
  jnr.ffi.provider.jffi.ReflectionVariableAccessorGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static jnr.ffi.Variable createVariableAccessor(jnr.ffi.Runtime, java.lang.reflect.Method, long, jnr.ffi.mapper.SignatureTypeMapper, java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/lang/reflect/Method.getGenericReturnType:()Ljava/lang/reflect/Type;
       4: checkcast     #3                  // class java/lang/reflect/ParameterizedType
       7: invokeinterface #4,  1            // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      12: iconst_0
      13: aaload
      14: astore        6
      16: aload         6
      18: instanceof    #5                  // class java/lang/Class
      21: ifne          52
      24: new           #6                  // class java/lang/IllegalArgumentException
      27: dup
      28: new           #7                  // class java/lang/StringBuilder
      31: dup
      32: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #9                  // String unsupported variable class:
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload         6
      42: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         6
      54: checkcast     #5                  // class java/lang/Class
      57: astore        7
      59: new           #14                 // class jnr/ffi/provider/jffi/SimpleNativeContext
      62: dup
      63: aload_0
      64: aload         5
      66: invokespecial #15                 // Method jnr/ffi/provider/jffi/SimpleNativeContext."<init>":(Ljnr/ffi/Runtime;Ljava/util/Collection;)V
      69: astore        8
      71: aload         7
      73: aload         8
      75: invokestatic  #16                 // Method jnr/ffi/mapper/DefaultSignatureType.create:(Ljava/lang/Class;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/DefaultSignatureType;
      78: astore        9
      80: aload         4
      82: aload         9
      84: aload         8
      86: invokeinterface #17,  3           // InterfaceMethod jnr/ffi/mapper/SignatureTypeMapper.getFromNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/FromNativeContext;)Ljnr/ffi/mapper/FromNativeType;
      91: astore        10
      93: aload         10
      95: ifnull        108
      98: aload         10
     100: invokeinterface #18,  1           // InterfaceMethod jnr/ffi/mapper/FromNativeType.getFromNativeConverter:()Ljnr/ffi/mapper/FromNativeConverter;
     105: goto          109
     108: aconst_null
     109: astore        11
     111: aload         4
     113: aload         9
     115: aload         8
     117: invokeinterface #19,  3           // InterfaceMethod jnr/ffi/mapper/SignatureTypeMapper.getToNativeType:(Ljnr/ffi/mapper/SignatureType;Ljnr/ffi/mapper/ToNativeContext;)Ljnr/ffi/mapper/ToNativeType;
     122: astore        12
     124: aload         12
     126: ifnull        139
     129: aload         12
     131: invokeinterface #20,  1           // InterfaceMethod jnr/ffi/mapper/ToNativeType.getToNativeConverter:()Ljnr/ffi/mapper/ToNativeConverter;
     136: goto          140
     139: aconst_null
     140: astore        13
     142: aload         13
     144: ifnull        157
     147: aload         13
     149: invokeinterface #21,  1           // InterfaceMethod jnr/ffi/mapper/ToNativeConverter.nativeType:()Ljava/lang/Class;
     154: goto          159
     157: aload         7
     159: astore        14
     161: aload_0
     162: aload         14
     164: aload         5
     166: invokestatic  #22                 // Method jnr/ffi/provider/jffi/Types.getType:(Ljnr/ffi/Runtime;Ljava/lang/Class;Ljava/util/Collection;)Ljnr/ffi/Type;
     169: invokevirtual #23                 // Method jnr/ffi/Type.getNativeType:()Ljnr/ffi/NativeType;
     172: astore        15
     174: new           #24                 // class jnr/ffi/provider/ToNativeType
     177: dup
     178: aload         7
     180: aload         15
     182: aload         5
     184: aload         13
     186: aconst_null
     187: invokespecial #25                 // Method jnr/ffi/provider/ToNativeType."<init>":(Ljava/lang/Class;Ljnr/ffi/NativeType;Ljava/util/Collection;Ljnr/ffi/mapper/ToNativeConverter;Ljnr/ffi/mapper/ToNativeContext;)V
     190: astore        16
     192: new           #26                 // class jnr/ffi/provider/FromNativeType
     195: dup
     196: aload         7
     198: aload         15
     200: aload         5
     202: aload         11
     204: aconst_null
     205: invokespecial #27                 // Method jnr/ffi/provider/FromNativeType."<init>":(Ljava/lang/Class;Ljnr/ffi/NativeType;Ljava/util/Collection;Ljnr/ffi/mapper/FromNativeConverter;Ljnr/ffi/mapper/FromNativeContext;)V
     208: astore        17
     210: aload_0
     211: lload_2
     212: invokestatic  #28                 // Method jnr/ffi/provider/jffi/MemoryUtil.newPointer:(Ljnr/ffi/Runtime;J)Ljnr/ffi/Pointer;
     215: astore        19
     217: aload         19
     219: aload         16
     221: aload         17
     223: invokestatic  #29                 // Method getNativeVariableAccessor:(Ljnr/ffi/Pointer;Ljnr/ffi/provider/ToNativeType;Ljnr/ffi/provider/FromNativeType;)Ljnr/ffi/Variable;
     226: astore        18
     228: aload         16
     230: invokevirtual #30                 // Method jnr/ffi/provider/ToNativeType.getToNativeConverter:()Ljnr/ffi/mapper/ToNativeConverter;
     233: ifnull        254
     236: aload         18
     238: aload         16
     240: invokevirtual #30                 // Method jnr/ffi/provider/ToNativeType.getToNativeConverter:()Ljnr/ffi/mapper/ToNativeConverter;
     243: aload         17
     245: invokevirtual #31                 // Method jnr/ffi/provider/FromNativeType.getFromNativeConverter:()Ljnr/ffi/mapper/FromNativeConverter;
     248: invokestatic  #32                 // Method getConvertingVariable:(Ljnr/ffi/Variable;Ljnr/ffi/mapper/ToNativeConverter;Ljnr/ffi/mapper/FromNativeConverter;)Ljnr/ffi/Variable;
     251: goto          256
     254: aload         18
     256: areturn

  static jnr.ffi.Variable getConvertingVariable(jnr.ffi.Variable, jnr.ffi.mapper.ToNativeConverter, jnr.ffi.mapper.FromNativeConverter);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnull        16
       8: aload_1
       9: ifnonnull     26
      12: aload_2
      13: ifnull        26
      16: new           #33                 // class java/lang/UnsupportedOperationException
      19: dup
      20: ldc           #34                 // String convertible types must have both a ToNativeConverter and a FromNativeConverter
      22: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #36                 // class jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$ConvertingVariable
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aconst_null
      34: invokespecial #37                 // Method jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$ConvertingVariable."<init>":(Ljnr/ffi/Variable;Ljnr/ffi/mapper/ToNativeConverter;Ljnr/ffi/mapper/FromNativeConverter;Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$1;)V
      37: areturn

  static jnr.ffi.Variable getNativeVariableAccessor(jnr.ffi.Pointer, jnr.ffi.provider.ToNativeType, jnr.ffi.provider.FromNativeType);
    Code:
       0: ldc           #38                 // class jnr/ffi/Pointer
       2: aload_1
       3: invokevirtual #39                 // Method jnr/ffi/provider/ToNativeType.effectiveJavaType:()Ljava/lang/Class;
       6: if_acmpne     19
       9: new           #40                 // class jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerVariable
      12: dup
      13: aload_0
      14: aconst_null
      15: invokespecial #41                 // Method jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerVariable."<init>":(Ljnr/ffi/Pointer;Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$1;)V
      18: areturn
      19: ldc           #42                 // class java/lang/Number
      21: aload_1
      22: invokevirtual #39                 // Method jnr/ffi/provider/ToNativeType.effectiveJavaType:()Ljava/lang/Class;
      25: invokevirtual #43                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: ifeq          59
      31: new           #44                 // class jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$NumberVariable
      34: dup
      35: aload_0
      36: aload_1
      37: invokevirtual #45                 // Method jnr/ffi/provider/ToNativeType.getNativeType:()Ljnr/ffi/NativeType;
      40: invokestatic  #46                 // Method getPointerOp:(Ljnr/ffi/NativeType;)Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
      43: aload_1
      44: invokevirtual #45                 // Method jnr/ffi/provider/ToNativeType.getNativeType:()Ljnr/ffi/NativeType;
      47: invokestatic  #47                 // Method jnr/ffi/provider/jffi/DefaultInvokerFactory.getNumberDataConverter:(Ljnr/ffi/NativeType;)Ljnr/ffi/mapper/DataConverter;
      50: aload_2
      51: invokestatic  #48                 // Method jnr/ffi/provider/jffi/DefaultInvokerFactory.getNumberResultConverter:(Ljnr/ffi/provider/FromNativeType;)Ljnr/ffi/provider/jffi/DefaultInvokerFactory$ResultConverter;
      54: aconst_null
      55: invokespecial #49                 // Method jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$NumberVariable."<init>":(Ljnr/ffi/Pointer;Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;Ljnr/ffi/mapper/DataConverter;Ljnr/ffi/provider/jffi/DefaultInvokerFactory$ResultConverter;Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$1;)V
      58: areturn
      59: new           #33                 // class java/lang/UnsupportedOperationException
      62: dup
      63: new           #7                  // class java/lang/StringBuilder
      66: dup
      67: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #50                 // String unsupported variable type:
      72: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #39                 // Method jnr/ffi/provider/ToNativeType.effectiveJavaType:()Ljava/lang/Class;
      79: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      88: athrow

  private static jnr.ffi.provider.jffi.ReflectionVariableAccessorGenerator$PointerOp<java.lang.Number> getPointerOp(jnr.ffi.NativeType);
    Code:
       0: getstatic     #51                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$1.$SwitchMap$jnr$ffi$NativeType:[I
       3: aload_0
       4: invokevirtual #52                 // Method jnr/ffi/NativeType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 13
                     1: 76
                     2: 76
                     3: 80
                     4: 80
                     5: 84
                     6: 84
                     7: 88
                     8: 88
                     9: 92
                    10: 92
                    11: 92
                    12: 110
                    13: 114
               default: 118
          }
      76: getstatic     #53                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$Int8PointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
      79: areturn
      80: getstatic     #54                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$Int16PointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
      83: areturn
      84: getstatic     #55                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$Int32PointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
      87: areturn
      88: getstatic     #56                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$Int64PointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
      91: areturn
      92: aload_0
      93: invokestatic  #57                 // Method jnr/ffi/provider/jffi/NumberUtil.sizeof:(Ljnr/ffi/NativeType;)I
      96: iconst_4
      97: if_icmpne     106
     100: getstatic     #55                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$Int32PointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
     103: goto          109
     106: getstatic     #56                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$Int64PointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
     109: areturn
     110: getstatic     #58                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$FloatPointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
     113: areturn
     114: getstatic     #59                 // Field jnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$DoublePointerOp.INSTANCE:Ljnr/ffi/provider/jffi/ReflectionVariableAccessorGenerator$PointerOp;
     117: areturn
     118: new           #33                 // class java/lang/UnsupportedOperationException
     121: dup
     122: new           #7                  // class java/lang/StringBuilder
     125: dup
     126: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #60                 // String cannot convert
     131: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     144: athrow
}
