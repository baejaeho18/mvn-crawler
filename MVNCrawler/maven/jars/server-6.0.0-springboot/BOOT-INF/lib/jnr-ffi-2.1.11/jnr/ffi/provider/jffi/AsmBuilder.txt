Compiled from "AsmBuilder.java"
class jnr.ffi.provider.jffi.AsmBuilder {
  private final jnr.ffi.Runtime runtime;

  private final java.lang.String classNamePath;

  private final org.objectweb.asm.ClassVisitor classVisitor;

  private final jnr.ffi.provider.jffi.AsmClassLoader classLoader;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator functionId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator contextId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator toNativeConverterId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator toNativeContextId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator fromNativeConverterId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator fromNativeContextId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator objectParameterInfoId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator variableAccessorId;

  private final jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator genericObjectId;

  private final java.util.Map<jnr.ffi.mapper.ToNativeConverter, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> toNativeConverters;

  private final java.util.Map<jnr.ffi.mapper.ToNativeContext, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> toNativeContexts;

  private final java.util.Map<jnr.ffi.mapper.FromNativeConverter, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> fromNativeConverters;

  private final java.util.Map<jnr.ffi.mapper.FromNativeContext, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> fromNativeContexts;

  private final java.util.Map<com.kenai.jffi.ObjectParameterInfo, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> objectParameterInfo;

  private final java.util.Map<jnr.ffi.Variable, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> variableAccessors;

  private final java.util.Map<com.kenai.jffi.CallContext, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> callContextMap;

  private final java.util.Map<java.lang.Long, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> functionAddresses;

  private final java.util.Map<java.lang.Object, jnr.ffi.provider.jffi.AsmBuilder$ObjectField> genericObjects;

  private final java.util.List<jnr.ffi.provider.jffi.AsmBuilder$ObjectField> objectFields;

  jnr.ffi.provider.jffi.AsmBuilder(jnr.ffi.Runtime, java.lang.String, org.objectweb.asm.ClassVisitor, jnr.ffi.provider.jffi.AsmClassLoader);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
       8: dup
       9: ldc           #4                  // String functionAddress
      11: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      14: putfield      #6                  // Field functionId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      17: aload_0
      18: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      21: dup
      22: ldc           #7                  // String callContext
      24: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      27: putfield      #8                  // Field contextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      30: aload_0
      31: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      34: dup
      35: ldc           #9                  // String toNativeConverter
      37: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      40: putfield      #10                 // Field toNativeConverterId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      43: aload_0
      44: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      47: dup
      48: ldc           #11                 // String toNativeContext
      50: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      53: putfield      #12                 // Field toNativeContextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      56: aload_0
      57: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      60: dup
      61: ldc           #13                 // String fromNativeConverter
      63: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      66: putfield      #14                 // Field fromNativeConverterId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      69: aload_0
      70: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      73: dup
      74: ldc           #15                 // String fromNativeContext
      76: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      79: putfield      #16                 // Field fromNativeContextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      82: aload_0
      83: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      86: dup
      87: ldc           #17                 // String objectParameterInfo
      89: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
      92: putfield      #18                 // Field objectParameterInfoId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      95: aload_0
      96: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
      99: dup
     100: ldc           #19                 // String variableAccessor
     102: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
     105: putfield      #20                 // Field variableAccessorId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
     108: aload_0
     109: new           #3                  // class jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator
     112: dup
     113: ldc           #21                 // String objectField
     115: invokespecial #5                  // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator."<init>":(Ljava/lang/String;)V
     118: putfield      #22                 // Field genericObjectId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
     121: aload_0
     122: new           #23                 // class java/util/IdentityHashMap
     125: dup
     126: invokespecial #24                 // Method java/util/IdentityHashMap."<init>":()V
     129: putfield      #25                 // Field toNativeConverters:Ljava/util/Map;
     132: aload_0
     133: new           #23                 // class java/util/IdentityHashMap
     136: dup
     137: invokespecial #24                 // Method java/util/IdentityHashMap."<init>":()V
     140: putfield      #26                 // Field toNativeContexts:Ljava/util/Map;
     143: aload_0
     144: new           #23                 // class java/util/IdentityHashMap
     147: dup
     148: invokespecial #24                 // Method java/util/IdentityHashMap."<init>":()V
     151: putfield      #27                 // Field fromNativeConverters:Ljava/util/Map;
     154: aload_0
     155: new           #23                 // class java/util/IdentityHashMap
     158: dup
     159: invokespecial #24                 // Method java/util/IdentityHashMap."<init>":()V
     162: putfield      #28                 // Field fromNativeContexts:Ljava/util/Map;
     165: aload_0
     166: new           #29                 // class java/util/HashMap
     169: dup
     170: invokespecial #30                 // Method java/util/HashMap."<init>":()V
     173: putfield      #31                 // Field objectParameterInfo:Ljava/util/Map;
     176: aload_0
     177: new           #29                 // class java/util/HashMap
     180: dup
     181: invokespecial #30                 // Method java/util/HashMap."<init>":()V
     184: putfield      #32                 // Field variableAccessors:Ljava/util/Map;
     187: aload_0
     188: new           #29                 // class java/util/HashMap
     191: dup
     192: invokespecial #30                 // Method java/util/HashMap."<init>":()V
     195: putfield      #33                 // Field callContextMap:Ljava/util/Map;
     198: aload_0
     199: new           #29                 // class java/util/HashMap
     202: dup
     203: invokespecial #30                 // Method java/util/HashMap."<init>":()V
     206: putfield      #34                 // Field functionAddresses:Ljava/util/Map;
     209: aload_0
     210: new           #23                 // class java/util/IdentityHashMap
     213: dup
     214: invokespecial #24                 // Method java/util/IdentityHashMap."<init>":()V
     217: putfield      #35                 // Field genericObjects:Ljava/util/Map;
     220: aload_0
     221: new           #36                 // class java/util/ArrayList
     224: dup
     225: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
     228: putfield      #38                 // Field objectFields:Ljava/util/List;
     231: aload_0
     232: aload_1
     233: putfield      #39                 // Field runtime:Ljnr/ffi/Runtime;
     236: aload_0
     237: aload_2
     238: putfield      #40                 // Field classNamePath:Ljava/lang/String;
     241: aload_0
     242: aload_3
     243: putfield      #41                 // Field classVisitor:Lorg/objectweb/asm/ClassVisitor;
     246: aload_0
     247: aload         4
     249: putfield      #42                 // Field classLoader:Ljnr/ffi/provider/jffi/AsmClassLoader;
     252: return

  public java.lang.String getClassNamePath();
    Code:
       0: aload_0
       1: getfield      #40                 // Field classNamePath:Ljava/lang/String;
       4: areturn

  org.objectweb.asm.ClassVisitor getClassVisitor();
    Code:
       0: aload_0
       1: getfield      #41                 // Field classVisitor:Lorg/objectweb/asm/ClassVisitor;
       4: areturn

  public jnr.ffi.provider.jffi.AsmClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #42                 // Field classLoader:Ljnr/ffi/provider/jffi/AsmClassLoader;
       4: areturn

  public jnr.ffi.Runtime getRuntime();
    Code:
       0: aload_0
       1: getfield      #39                 // Field runtime:Ljnr/ffi/Runtime;
       4: areturn

  <T> jnr.ffi.provider.jffi.AsmBuilder$ObjectField addField(java.util.Map<T, jnr.ffi.provider.jffi.AsmBuilder$ObjectField>, T, java.lang.Class, jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator);
    Code:
       0: new           #43                 // class jnr/ffi/provider/jffi/AsmBuilder$ObjectField
       3: dup
       4: aload         4
       6: invokevirtual #44                 // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator.generateName:()Ljava/lang/String;
       9: aload_2
      10: aload_3
      11: invokespecial #45                 // Method jnr/ffi/provider/jffi/AsmBuilder$ObjectField."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
      14: astore        5
      16: aload_0
      17: getfield      #38                 // Field objectFields:Ljava/util/List;
      20: aload         5
      22: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_1
      29: aload_2
      30: aload         5
      32: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload         5
      40: areturn

  <T> jnr.ffi.provider.jffi.AsmBuilder$ObjectField getField(java.util.Map<T, jnr.ffi.provider.jffi.AsmBuilder$ObjectField>, T, java.lang.Class, jnr.ffi.provider.jffi.AsmBuilder$ObjectNameGenerator);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #43                 // class jnr/ffi/provider/jffi/AsmBuilder$ObjectField
      10: astore        5
      12: aload         5
      14: ifnull        22
      17: aload         5
      19: goto          31
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_3
      26: aload         4
      28: invokevirtual #49                 // Method addField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      31: areturn

  java.lang.String getCallContextFieldName(com.kenai.jffi.Function);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field callContextMap:Ljava/util/Map;
       5: aload_1
       6: invokevirtual #50                 // Method com/kenai/jffi/Function.getCallContext:()Lcom/kenai/jffi/CallContext;
       9: ldc           #51                 // class com/kenai/jffi/CallContext
      11: aload_0
      12: getfield      #8                  // Field contextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      15: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      18: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      21: areturn

  java.lang.String getCallContextFieldName(com.kenai.jffi.CallContext);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field callContextMap:Ljava/util/Map;
       5: aload_1
       6: ldc           #51                 // class com/kenai/jffi/CallContext
       8: aload_0
       9: getfield      #8                  // Field contextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      12: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      15: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      18: areturn

  java.lang.String getFunctionAddressFieldName(com.kenai.jffi.Function);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #34                 // Field functionAddresses:Ljava/util/Map;
       5: aload_1
       6: invokevirtual #54                 // Method com/kenai/jffi/Function.getFunctionAddress:()J
       9: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: getstatic     #56                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      15: aload_0
      16: getfield      #6                  // Field functionId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      19: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      22: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      25: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField getRuntimeField();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #39                 // Field runtime:Ljnr/ffi/Runtime;
       5: aload_0
       6: getfield      #39                 // Field runtime:Ljnr/ffi/Runtime;
       9: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #58                 // Method getObjectField:(Ljava/lang/Object;Ljava/lang/Class;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      15: areturn

  java.lang.String getFromNativeConverterName(jnr.ffi.mapper.FromNativeConverter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method getFromNativeConverterField:(Ljnr/ffi/mapper/FromNativeConverter;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
       5: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
       8: areturn

  java.lang.String getToNativeConverterName(jnr.ffi.mapper.ToNativeConverter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method getToNativeConverterField:(Ljnr/ffi/mapper/ToNativeConverter;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
       5: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
       8: areturn

  private static java.lang.Class nearestClass(java.lang.Object, java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #61                 // Method java/lang/Class.getModifiers:()I
       7: invokestatic  #62                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      10: ifeq          20
      13: aload_0
      14: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: goto          21
      20: aload_1
      21: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField getToNativeConverterField(jnr.ffi.mapper.ToNativeConverter);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field toNativeConverters:Ljava/util/Map;
       5: aload_1
       6: aload_1
       7: ldc           #63                 // class jnr/ffi/mapper/ToNativeConverter
       9: invokestatic  #64                 // Method nearestClass:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
      12: aload_0
      13: getfield      #10                 // Field toNativeConverterId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      16: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      19: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField getFromNativeConverterField(jnr.ffi.mapper.FromNativeConverter);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field fromNativeConverters:Ljava/util/Map;
       5: aload_1
       6: aload_1
       7: ldc           #65                 // class jnr/ffi/mapper/FromNativeConverter
       9: invokestatic  #64                 // Method nearestClass:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
      12: aload_0
      13: getfield      #14                 // Field fromNativeConverterId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      16: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      19: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField getToNativeContextField(jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #26                 // Field toNativeContexts:Ljava/util/Map;
       5: aload_1
       6: aload_1
       7: ldc           #66                 // class jnr/ffi/mapper/ToNativeContext
       9: invokestatic  #64                 // Method nearestClass:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
      12: aload_0
      13: getfield      #12                 // Field toNativeContextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      16: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      19: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField getFromNativeContextField(jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #28                 // Field fromNativeContexts:Ljava/util/Map;
       5: aload_1
       6: aload_1
       7: ldc           #67                 // class jnr/ffi/mapper/FromNativeContext
       9: invokestatic  #64                 // Method nearestClass:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
      12: aload_0
      13: getfield      #16                 // Field fromNativeContextId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      16: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      19: areturn

  java.lang.String getObjectParameterInfoName(com.kenai.jffi.ObjectParameterInfo);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #31                 // Field objectParameterInfo:Ljava/util/Map;
       5: aload_1
       6: ldc           #68                 // class com/kenai/jffi/ObjectParameterInfo
       8: aload_0
       9: getfield      #18                 // Field objectParameterInfoId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      12: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      15: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      18: areturn

  java.lang.String getObjectFieldName(java.lang.Object, java.lang.Class);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #35                 // Field genericObjects:Ljava/util/Map;
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #22                 // Field genericObjectId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      11: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      14: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      17: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField getObjectField(java.lang.Object, java.lang.Class);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #35                 // Field genericObjects:Ljava/util/Map;
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #22                 // Field genericObjectId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      11: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      14: areturn

  java.lang.String getVariableName(jnr.ffi.Variable);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #32                 // Field variableAccessors:Ljava/util/Map;
       5: aload_1
       6: ldc           #69                 // class jnr/ffi/Variable
       8: aload_0
       9: getfield      #20                 // Field variableAccessorId:Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;
      12: invokevirtual #52                 // Method getField:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;Ljnr/ffi/provider/jffi/AsmBuilder$ObjectNameGenerator;)Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;
      15: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      18: areturn

  jnr.ffi.provider.jffi.AsmBuilder$ObjectField[] getObjectFieldArray();
    Code:
       0: aload_0
       1: getfield      #38                 // Field objectFields:Ljava/util/List;
       4: aload_0
       5: getfield      #38                 // Field objectFields:Ljava/util/List;
       8: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I
      13: anewarray     #43                 // class jnr/ffi/provider/jffi/AsmBuilder$ObjectField
      16: invokeinterface #71,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #72                 // class "[Ljnr/ffi/provider/jffi/AsmBuilder$ObjectField;"
      24: areturn

  java.lang.Object[] getObjectFieldValues();
    Code:
       0: aload_0
       1: getfield      #38                 // Field objectFields:Ljava/util/List;
       4: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I
       9: anewarray     #73                 // class java/lang/Object
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_0
      16: getfield      #38                 // Field objectFields:Ljava/util/List;
      19: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          59
      34: aload_3
      35: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #43                 // class jnr/ffi/provider/jffi/AsmBuilder$ObjectField
      43: astore        4
      45: aload_1
      46: iload_2
      47: iinc          2, 1
      50: aload         4
      52: getfield      #77                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.value:Ljava/lang/Object;
      55: aastore
      56: goto          25
      59: aload_1
      60: areturn

  void emitFieldInitialization(jnr.ffi.provider.jffi.SkinnyMethodAdapter, int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #38                 // Field objectFields:Ljava/util/List;
       6: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          156
      23: aload         4
      25: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #43                 // class jnr/ffi/provider/jffi/AsmBuilder$ObjectField
      33: astore        5
      35: aload_0
      36: invokevirtual #78                 // Method getClassVisitor:()Lorg/objectweb/asm/ClassVisitor;
      39: bipush        18
      41: aload         5
      43: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
      46: aload         5
      48: getfield      #79                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.klass:Ljava/lang/Class;
      51: invokestatic  #80                 // Method jnr/ffi/provider/jffi/CodegenUtils.ci:(Ljava/lang/Class;)Ljava/lang/String;
      54: aconst_null
      55: aconst_null
      56: invokevirtual #81                 // Method org/objectweb/asm/ClassVisitor.visitField:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
      59: pop
      60: aload_1
      61: iconst_0
      62: invokevirtual #82                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.aload:(I)V
      65: aload_1
      66: iload_2
      67: invokevirtual #82                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.aload:(I)V
      70: aload_1
      71: iload_3
      72: iinc          3, 1
      75: invokevirtual #83                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.pushInt:(I)V
      78: aload_1
      79: invokevirtual #84                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.aaload:()V
      82: aload         5
      84: getfield      #79                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.klass:Ljava/lang/Class;
      87: invokevirtual #85                 // Method java/lang/Class.isPrimitive:()Z
      90: ifeq          123
      93: aload         5
      95: getfield      #79                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.klass:Ljava/lang/Class;
      98: invokestatic  #86                 // Method jnr/ffi/provider/jffi/AsmUtil.boxedType:(Ljava/lang/Class;)Ljava/lang/Class;
     101: astore        6
     103: aload_1
     104: aload         6
     106: invokevirtual #87                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.checkcast:(Ljava/lang/Class;)V
     109: aload_1
     110: aload         6
     112: aload         5
     114: getfield      #79                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.klass:Ljava/lang/Class;
     117: invokestatic  #88                 // Method jnr/ffi/provider/jffi/AsmUtil.unboxNumber:(Ljnr/ffi/provider/jffi/SkinnyMethodAdapter;Ljava/lang/Class;Ljava/lang/Class;)V
     120: goto          132
     123: aload_1
     124: aload         5
     126: getfield      #79                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.klass:Ljava/lang/Class;
     129: invokevirtual #87                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.checkcast:(Ljava/lang/Class;)V
     132: aload_1
     133: aload_0
     134: invokevirtual #89                 // Method getClassNamePath:()Ljava/lang/String;
     137: aload         5
     139: getfield      #53                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.name:Ljava/lang/String;
     142: aload         5
     144: getfield      #79                 // Field jnr/ffi/provider/jffi/AsmBuilder$ObjectField.klass:Ljava/lang/Class;
     147: invokestatic  #80                 // Method jnr/ffi/provider/jffi/CodegenUtils.ci:(Ljava/lang/Class;)Ljava/lang/String;
     150: invokevirtual #90                 // Method jnr/ffi/provider/jffi/SkinnyMethodAdapter.putfield:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     153: goto          13
     156: return
}
