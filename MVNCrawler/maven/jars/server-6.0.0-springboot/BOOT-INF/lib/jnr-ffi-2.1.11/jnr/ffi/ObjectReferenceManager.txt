Compiled from "ObjectReferenceManager.java"
public abstract class jnr.ffi.ObjectReferenceManager<T> {
  public jnr.ffi.ObjectReferenceManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> jnr.ffi.ObjectReferenceManager<T> newInstance(jnr.ffi.Runtime);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method jnr/ffi/Runtime.newObjectReferenceManager:()Ljnr/ffi/ObjectReferenceManager;
       4: areturn

  public jnr.ffi.Pointer newReference(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method add:(Ljava/lang/Object;)Ljnr/ffi/Pointer;
       5: areturn

  public void freeReference(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method remove:(Ljnr/ffi/Pointer;)Z
       5: pop
       6: return

  public T getObject(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method get:(Ljnr/ffi/Pointer;)Ljava/lang/Object;
       5: areturn

  public abstract jnr.ffi.Pointer add(T);

  public abstract boolean remove(jnr.ffi.Pointer);

  public abstract T get(jnr.ffi.Pointer);
}
