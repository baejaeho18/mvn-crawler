Compiled from "Types.java"
class jnr.ffi.provider.jffi.Types {
  private static java.lang.ref.Reference<java.util.Map<java.lang.Class, java.util.Map<java.util.Collection<java.lang.annotation.Annotation>, jnr.ffi.Type>>> typeCacheReference;

  jnr.ffi.provider.jffi.Types();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static jnr.ffi.Type getType(jnr.ffi.Runtime, java.lang.Class, java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: getstatic     #2                  // Field typeCacheReference:Ljava/lang/ref/Reference;
       3: ifnull        18
       6: getstatic     #2                  // Field typeCacheReference:Ljava/lang/ref/Reference;
       9: invokevirtual #3                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/Map
      15: goto          19
      18: aconst_null
      19: astore_3
      20: aload_3
      21: ifnull        37
      24: aload_3
      25: aload_1
      26: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #4                  // class java/util/Map
      34: goto          38
      37: aconst_null
      38: astore        4
      40: aload         4
      42: ifnull        59
      45: aload         4
      47: aload_2
      48: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #6                  // class jnr/ffi/Type
      56: goto          60
      59: aconst_null
      60: astore        5
      62: aload         5
      64: ifnull        72
      67: aload         5
      69: goto          78
      72: aload_0
      73: aload_1
      74: aload_2
      75: invokestatic  #7                  // Method lookupAndCacheType:(Ljnr/ffi/Runtime;Ljava/lang/Class;Ljava/util/Collection;)Ljnr/ffi/Type;
      78: areturn

  private static synchronized jnr.ffi.Type lookupAndCacheType(jnr.ffi.Runtime, java.lang.Class, java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: getstatic     #2                  // Field typeCacheReference:Ljava/lang/ref/Reference;
       3: ifnull        18
       6: getstatic     #2                  // Field typeCacheReference:Ljava/lang/ref/Reference;
       9: invokevirtual #3                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/Map
      15: goto          19
      18: aconst_null
      19: astore_3
      20: aload_3
      21: ifnull        37
      24: aload_3
      25: aload_1
      26: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #4                  // class java/util/Map
      34: goto          38
      37: aconst_null
      38: astore        4
      40: aload         4
      42: ifnull        59
      45: aload         4
      47: aload_2
      48: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #6                  // class jnr/ffi/Type
      56: goto          60
      59: aconst_null
      60: astore        5
      62: aload         5
      64: ifnull        70
      67: aload         5
      69: areturn
      70: new           #8                  // class java/util/HashMap
      73: dup
      74: aload_3
      75: ifnull        82
      78: aload_3
      79: goto          85
      82: getstatic     #9                  // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
      85: invokespecial #10                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      88: astore_3
      89: new           #8                  // class java/util/HashMap
      92: dup
      93: aload         4
      95: ifnull        103
      98: aload         4
     100: goto          106
     103: getstatic     #9                  // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
     106: invokespecial #10                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     109: astore        4
     111: aload         4
     113: aload_2
     114: aload_0
     115: aload_1
     116: aload_2
     117: invokestatic  #11                 // Method lookupType:(Ljnr/ffi/Runtime;Ljava/lang/Class;Ljava/util/Collection;)Ljnr/ffi/Type;
     120: dup
     121: astore        5
     123: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_3
     130: aload_1
     131: aload         4
     133: invokestatic  #13                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     136: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: new           #14                 // class java/lang/ref/SoftReference
     145: dup
     146: new           #15                 // class java/util/IdentityHashMap
     149: dup
     150: aload_3
     151: invokespecial #16                 // Method java/util/IdentityHashMap."<init>":(Ljava/util/Map;)V
     154: invokestatic  #13                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     157: invokespecial #17                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
     160: putstatic     #2                  // Field typeCacheReference:Ljava/lang/ref/Reference;
     163: aload         5
     165: areturn

  private static jnr.ffi.Type lookupAliasedType(jnr.ffi.Runtime, java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          62
      16: aload_2
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #21                 // class java/lang/annotation/Annotation
      25: astore_3
      26: aload_3
      27: invokeinterface #22,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      32: ldc           #23                 // class jnr/ffi/annotations/TypeDefinition
      34: invokevirtual #24                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      37: checkcast     #23                 // class jnr/ffi/annotations/TypeDefinition
      40: astore        4
      42: aload         4
      44: ifnull        59
      47: aload_0
      48: aload         4
      50: invokeinterface #25,  1           // InterfaceMethod jnr/ffi/annotations/TypeDefinition.alias:()Ljnr/ffi/TypeAlias;
      55: invokevirtual #26                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/TypeAlias;)Ljnr/ffi/Type;
      58: areturn
      59: goto          7
      62: aconst_null
      63: areturn

  static jnr.ffi.Type lookupType(jnr.ffi.Runtime, java.lang.Class, java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/lang/Class.isArray:()Z
       4: ifeq          11
       7: aconst_null
       8: goto          16
      11: aload_0
      12: aload_2
      13: invokestatic  #28                 // Method lookupAliasedType:(Ljnr/ffi/Runtime;Ljava/util/Collection;)Ljnr/ffi/Type;
      16: astore_3
      17: aload_3
      18: ifnull        23
      21: aload_3
      22: areturn
      23: ldc           #29                 // class java/lang/Void
      25: aload_1
      26: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      29: ifne          39
      32: getstatic     #31                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      35: aload_1
      36: if_acmpne     47
      39: aload_0
      40: getstatic     #32                 // Field jnr/ffi/NativeType.VOID:Ljnr/ffi/NativeType;
      43: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
      46: areturn
      47: ldc           #34                 // class java/lang/Boolean
      49: aload_1
      50: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      53: ifne          63
      56: getstatic     #35                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      59: aload_1
      60: if_acmpne     71
      63: aload_0
      64: getstatic     #36                 // Field jnr/ffi/NativeType.SINT:Ljnr/ffi/NativeType;
      67: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
      70: areturn
      71: ldc           #37                 // class java/lang/Byte
      73: aload_1
      74: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      77: ifne          87
      80: getstatic     #38                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      83: aload_1
      84: if_acmpne     95
      87: aload_0
      88: getstatic     #39                 // Field jnr/ffi/NativeType.SCHAR:Ljnr/ffi/NativeType;
      91: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
      94: areturn
      95: ldc           #40                 // class java/lang/Short
      97: aload_1
      98: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     101: ifne          111
     104: getstatic     #41                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     107: aload_1
     108: if_acmpne     119
     111: aload_0
     112: getstatic     #42                 // Field jnr/ffi/NativeType.SSHORT:Ljnr/ffi/NativeType;
     115: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     118: areturn
     119: ldc           #43                 // class java/lang/Integer
     121: aload_1
     122: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     125: ifne          135
     128: getstatic     #44                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     131: aload_1
     132: if_acmpne     143
     135: aload_0
     136: getstatic     #36                 // Field jnr/ffi/NativeType.SINT:Ljnr/ffi/NativeType;
     139: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     142: areturn
     143: ldc           #45                 // class java/lang/Long
     145: aload_1
     146: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     149: ifne          159
     152: getstatic     #46                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     155: aload_1
     156: if_acmpne     167
     159: aload_0
     160: getstatic     #47                 // Field jnr/ffi/NativeType.SLONG:Ljnr/ffi/NativeType;
     163: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     166: areturn
     167: ldc           #48                 // class java/lang/Float
     169: aload_1
     170: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     173: ifne          183
     176: getstatic     #49                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     179: aload_1
     180: if_acmpne     191
     183: aload_0
     184: getstatic     #50                 // Field jnr/ffi/NativeType.FLOAT:Ljnr/ffi/NativeType;
     187: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     190: areturn
     191: ldc           #51                 // class java/lang/Double
     193: aload_1
     194: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     197: ifne          207
     200: getstatic     #52                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     203: aload_1
     204: if_acmpne     215
     207: aload_0
     208: getstatic     #53                 // Field jnr/ffi/NativeType.DOUBLE:Ljnr/ffi/NativeType;
     211: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     214: areturn
     215: ldc           #54                 // class jnr/ffi/Pointer
     217: aload_1
     218: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     221: ifeq          232
     224: aload_0
     225: getstatic     #55                 // Field jnr/ffi/NativeType.ADDRESS:Ljnr/ffi/NativeType;
     228: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     231: areturn
     232: ldc           #56                 // class jnr/ffi/Address
     234: aload_1
     235: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     238: ifeq          249
     241: aload_0
     242: getstatic     #55                 // Field jnr/ffi/NativeType.ADDRESS:Ljnr/ffi/NativeType;
     245: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     248: areturn
     249: ldc           #57                 // class java/nio/Buffer
     251: aload_1
     252: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     255: ifeq          266
     258: aload_0
     259: getstatic     #55                 // Field jnr/ffi/NativeType.ADDRESS:Ljnr/ffi/NativeType;
     262: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     265: areturn
     266: ldc           #58                 // class java/lang/CharSequence
     268: aload_1
     269: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     272: ifeq          283
     275: aload_0
     276: getstatic     #55                 // Field jnr/ffi/NativeType.ADDRESS:Ljnr/ffi/NativeType;
     279: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     282: areturn
     283: aload_1
     284: invokevirtual #27                 // Method java/lang/Class.isArray:()Z
     287: ifeq          298
     290: aload_0
     291: getstatic     #55                 // Field jnr/ffi/NativeType.ADDRESS:Ljnr/ffi/NativeType;
     294: invokevirtual #33                 // Method jnr/ffi/Runtime.findType:(Ljnr/ffi/NativeType;)Ljnr/ffi/Type;
     297: areturn
     298: new           #59                 // class java/lang/IllegalArgumentException
     301: dup
     302: new           #60                 // class java/lang/StringBuilder
     305: dup
     306: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     309: ldc           #62                 // String unsupported type:
     311: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: aload_1
     315: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     318: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     321: invokespecial #66                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     324: athrow
}
