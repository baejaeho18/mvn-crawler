Compiled from "PointerByReference.java"
public final class jnr.ffi.byref.PointerByReference extends jnr.ffi.byref.AbstractReference<jnr.ffi.Pointer> {
  public jnr.ffi.byref.PointerByReference();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method jnr/ffi/byref/AbstractReference."<init>":(Ljava/lang/Object;)V
       5: return

  public jnr.ffi.byref.PointerByReference(jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method jnr/ffi/byref/AbstractReference."<init>":(Ljava/lang/Object;)V
       5: return

  public final void toNative(jnr.ffi.Runtime, jnr.ffi.Pointer, long);
    Code:
       0: aload_2
       1: lload_3
       2: aload_0
       3: getfield      #2                  // Field value:Ljava/lang/Object;
       6: checkcast     #3                  // class jnr/ffi/Pointer
       9: invokevirtual #4                  // Method jnr/ffi/Pointer.putPointer:(JLjnr/ffi/Pointer;)V
      12: return

  public final void fromNative(jnr.ffi.Runtime, jnr.ffi.Pointer, long);
    Code:
       0: aload_0
       1: aload_2
       2: lload_3
       3: invokevirtual #5                  // Method jnr/ffi/Pointer.getPointer:(J)Ljnr/ffi/Pointer;
       6: putfield      #2                  // Field value:Ljava/lang/Object;
       9: return

  public final int nativeSize(jnr.ffi.Runtime);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method jnr/ffi/Runtime.addressSize:()I
       4: ireturn
}
