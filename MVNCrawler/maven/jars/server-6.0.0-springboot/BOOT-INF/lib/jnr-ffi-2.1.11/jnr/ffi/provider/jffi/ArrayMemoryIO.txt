Compiled from "ArrayMemoryIO.java"
public final class jnr.ffi.provider.jffi.ArrayMemoryIO extends jnr.ffi.provider.AbstractArrayMemoryIO {
  public jnr.ffi.provider.jffi.ArrayMemoryIO(jnr.ffi.Runtime, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method jnr/ffi/provider/AbstractArrayMemoryIO."<init>":(Ljnr/ffi/Runtime;I)V
       6: return

  public jnr.ffi.provider.jffi.ArrayMemoryIO(jnr.ffi.Runtime, byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method jnr/ffi/provider/AbstractArrayMemoryIO."<init>":(Ljnr/ffi/Runtime;[BII)V
       9: return

  public jnr.ffi.Pointer getPointer(long);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getRuntime:()Ljnr/ffi/Runtime;
       4: aload_0
       5: lload_1
       6: invokevirtual #4                  // Method getAddress:(J)J
       9: invokestatic  #5                  // Method jnr/ffi/provider/jffi/MemoryUtil.newPointer:(Ljnr/ffi/Runtime;J)Ljnr/ffi/Pointer;
      12: areturn

  public jnr.ffi.Pointer getPointer(long, long);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getRuntime:()Ljnr/ffi/Runtime;
       4: aload_0
       5: lload_1
       6: invokevirtual #4                  // Method getAddress:(J)J
       9: lload_3
      10: invokestatic  #6                  // Method jnr/ffi/provider/jffi/MemoryUtil.newPointer:(Ljnr/ffi/Runtime;JJ)Ljnr/ffi/Pointer;
      13: areturn

  public void putPointer(long, jnr.ffi.Pointer);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: ifnull        13
       6: aload_3
       7: invokevirtual #7                  // Method jnr/ffi/Pointer.address:()J
      10: goto          14
      13: lconst_0
      14: invokevirtual #8                  // Method putAddress:(JJ)V
      17: return
}
