Compiled from "BoxedDoubleArrayParameterConverter.java"
public final class jnr.ffi.provider.converters.BoxedDoubleArrayParameterConverter$Out extends jnr.ffi.provider.converters.BoxedDoubleArrayParameterConverter implements jnr.ffi.mapper.ToNativeConverter$PostInvocation<java.lang.Double[], double[]> {
  jnr.ffi.provider.converters.BoxedDoubleArrayParameterConverter$Out(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method jnr/ffi/provider/converters/BoxedDoubleArrayParameterConverter."<init>":(I)V
       5: return

  public void postInvoke(java.lang.Double[], double[], jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_2
       5: ifnull        35
       8: iconst_0
       9: istore        4
      11: iload         4
      13: aload_1
      14: arraylength
      15: if_icmpge     35
      18: aload_1
      19: iload         4
      21: aload_2
      22: iload         4
      24: daload
      25: invokestatic  #2                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      28: aastore
      29: iinc          4, 1
      32: goto          11
      35: return

  public java.lang.Object toNative(java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class "[Ljava/lang/Double;"
       5: aload_2
       6: invokespecial #4                  // Method jnr/ffi/provider/converters/BoxedDoubleArrayParameterConverter.toNative:([Ljava/lang/Double;Ljnr/ffi/mapper/ToNativeContext;)[D
       9: areturn

  public void postInvoke(java.lang.Object, java.lang.Object, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class "[Ljava/lang/Double;"
       5: aload_2
       6: checkcast     #5                  // class "[D"
       9: aload_3
      10: invokevirtual #6                  // Method postInvoke:([Ljava/lang/Double;[DLjnr/ffi/mapper/ToNativeContext;)V
      13: return
}
