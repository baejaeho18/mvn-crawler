Compiled from "ToNativeType.java"
public class jnr.ffi.provider.ToNativeType extends jnr.ffi.provider.SigType implements jnr.ffi.mapper.ToNativeType {
  private final jnr.ffi.mapper.ToNativeConverter toNativeConverter;

  private final jnr.ffi.mapper.ToNativeContext toNativeContext;

  public jnr.ffi.provider.ToNativeType(java.lang.Class, jnr.ffi.NativeType, java.util.Collection<java.lang.annotation.Annotation>, jnr.ffi.mapper.ToNativeConverter, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: ifnull        19
       9: aload         4
      11: invokeinterface #1,  1            // InterfaceMethod jnr/ffi/mapper/ToNativeConverter.nativeType:()Ljava/lang/Class;
      16: goto          20
      19: aload_1
      20: invokespecial #2                  // Method jnr/ffi/provider/SigType."<init>":(Ljava/lang/Class;Ljnr/ffi/NativeType;Ljava/util/Collection;Ljava/lang/Class;)V
      23: aload_0
      24: aload         4
      26: putfield      #3                  // Field toNativeConverter:Ljnr/ffi/mapper/ToNativeConverter;
      29: aload_0
      30: aload         5
      32: putfield      #4                  // Field toNativeContext:Ljnr/ffi/mapper/ToNativeContext;
      35: return

  public final jnr.ffi.mapper.ToNativeConverter getToNativeConverter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field toNativeConverter:Ljnr/ffi/mapper/ToNativeConverter;
       4: areturn

  public jnr.ffi.mapper.ToNativeContext getToNativeContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field toNativeContext:Ljnr/ffi/mapper/ToNativeContext;
       4: areturn
}
