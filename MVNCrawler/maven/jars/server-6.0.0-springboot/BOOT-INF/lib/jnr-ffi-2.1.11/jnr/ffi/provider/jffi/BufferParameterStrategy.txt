Compiled from "BufferParameterStrategy.java"
public final class jnr.ffi.provider.jffi.BufferParameterStrategy extends jnr.ffi.provider.jffi.ParameterStrategy {
  private final int shift;

  private static final jnr.ffi.provider.jffi.BufferParameterStrategy[] DIRECT_BUFFER_PARAMETER_STRATEGIES;

  private static final jnr.ffi.provider.jffi.BufferParameterStrategy[] HEAP_BUFFER_PARAMETER_STRATEGIES;

  private jnr.ffi.provider.jffi.BufferParameterStrategy(com.kenai.jffi.ObjectParameterStrategy$StrategyType, com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.ARRAY:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
       5: aload_2
       6: invokestatic  #2                  // Method com/kenai/jffi/ObjectParameterType.create:(Lcom/kenai/jffi/ObjectParameterType$ObjectType;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)Lcom/kenai/jffi/ObjectParameterType;
       9: invokespecial #3                  // Method jnr/ffi/provider/jffi/ParameterStrategy."<init>":(Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;Lcom/kenai/jffi/ObjectParameterType;)V
      12: aload_0
      13: aload_2
      14: invokestatic  #4                  // Method calculateShift:(Lcom/kenai/jffi/ObjectParameterType$ComponentType;)I
      17: putfield      #5                  // Field shift:I
      20: return

  public long address(java.nio.Buffer);
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_1
       5: invokevirtual #6                  // Method java/nio/Buffer.isDirect:()Z
       8: ifeq          32
      11: invokestatic  #7                  // Method com/kenai/jffi/MemoryIO.getInstance:()Lcom/kenai/jffi/MemoryIO;
      14: aload_1
      15: invokevirtual #8                  // Method com/kenai/jffi/MemoryIO.getDirectBufferAddress:(Ljava/nio/Buffer;)J
      18: aload_1
      19: invokevirtual #9                  // Method java/nio/Buffer.position:()I
      22: aload_0
      23: getfield      #5                  // Field shift:I
      26: ishl
      27: i2l
      28: ladd
      29: goto          33
      32: lconst_0
      33: lreturn

  public long address(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class java/nio/Buffer
       5: invokevirtual #11                 // Method address:(Ljava/nio/Buffer;)J
       8: lreturn

  public java.lang.Object object(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #10                 // class java/nio/Buffer
       4: invokevirtual #12                 // Method java/nio/Buffer.array:()Ljava/lang/Object;
       7: areturn

  public int offset(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #10                 // class java/nio/Buffer
       4: astore_2
       5: aload_2
       6: invokevirtual #13                 // Method java/nio/Buffer.arrayOffset:()I
       9: aload_2
      10: invokevirtual #9                  // Method java/nio/Buffer.position:()I
      13: iadd
      14: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #10                 // class java/nio/Buffer
       4: invokevirtual #14                 // Method java/nio/Buffer.remaining:()I
       7: ireturn

  static int calculateShift(com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: getstatic     #15                 // Field jnr/ffi/provider/jffi/BufferParameterStrategy$1.$SwitchMap$com$kenai$jffi$ObjectParameterType$ComponentType:[I
       3: aload_0
       4: invokevirtual #16                 // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 8
                     1: 56
                     2: 58
                     3: 58
                     4: 60
                     5: 60
                     6: 60
                     7: 62
                     8: 62
               default: 64
          }
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn
      60: iconst_2
      61: ireturn
      62: iconst_3
      63: ireturn
      64: new           #17                 // class java/lang/IllegalArgumentException
      67: dup
      68: new           #18                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #20                 // String unsupported component type:
      77: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      90: athrow

  static jnr.ffi.provider.jffi.BufferParameterStrategy direct(com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: getstatic     #25                 // Field DIRECT_BUFFER_PARAMETER_STRATEGIES:[Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       3: aload_0
       4: invokevirtual #16                 // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
       7: aaload
       8: areturn

  static jnr.ffi.provider.jffi.BufferParameterStrategy heap(com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: getstatic     #26                 // Field HEAP_BUFFER_PARAMETER_STRATEGIES:[Ljnr/ffi/provider/jffi/BufferParameterStrategy;
       3: aload_0
       4: invokevirtual #16                 // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
       7: aaload
       8: areturn

  static {};
    Code:
       0: ldc           #27                 // class com/kenai/jffi/ObjectParameterType$ComponentType
       2: invokestatic  #28                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       5: astore_0
       6: aload_0
       7: invokevirtual #29                 // Method java/util/EnumSet.size:()I
      10: anewarray     #30                 // class jnr/ffi/provider/jffi/BufferParameterStrategy
      13: putstatic     #25                 // Field DIRECT_BUFFER_PARAMETER_STRATEGIES:[Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      16: aload_0
      17: invokevirtual #29                 // Method java/util/EnumSet.size:()I
      20: anewarray     #30                 // class jnr/ffi/provider/jffi/BufferParameterStrategy
      23: putstatic     #26                 // Field HEAP_BUFFER_PARAMETER_STRATEGIES:[Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      26: aload_0
      27: invokevirtual #31                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
      30: astore_1
      31: aload_1
      32: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          91
      40: aload_1
      41: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #27                 // class com/kenai/jffi/ObjectParameterType$ComponentType
      49: astore_2
      50: getstatic     #25                 // Field DIRECT_BUFFER_PARAMETER_STRATEGIES:[Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      53: aload_2
      54: invokevirtual #16                 // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
      57: new           #30                 // class jnr/ffi/provider/jffi/BufferParameterStrategy
      60: dup
      61: getstatic     #34                 // Field DIRECT:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
      64: aload_2
      65: invokespecial #35                 // Method "<init>":(Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)V
      68: aastore
      69: getstatic     #26                 // Field HEAP_BUFFER_PARAMETER_STRATEGIES:[Ljnr/ffi/provider/jffi/BufferParameterStrategy;
      72: aload_2
      73: invokevirtual #16                 // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
      76: new           #30                 // class jnr/ffi/provider/jffi/BufferParameterStrategy
      79: dup
      80: getstatic     #36                 // Field HEAP:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
      83: aload_2
      84: invokespecial #35                 // Method "<init>":(Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;Lcom/kenai/jffi/ObjectParameterType$ComponentType;)V
      87: aastore
      88: goto          31
      91: return
}
