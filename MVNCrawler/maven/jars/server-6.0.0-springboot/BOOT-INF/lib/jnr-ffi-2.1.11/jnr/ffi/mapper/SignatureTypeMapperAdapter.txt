Compiled from "SignatureTypeMapperAdapter.java"
public class jnr.ffi.mapper.SignatureTypeMapperAdapter implements jnr.ffi.mapper.SignatureTypeMapper {
  private final jnr.ffi.mapper.TypeMapper typeMapper;

  public jnr.ffi.mapper.SignatureTypeMapperAdapter(jnr.ffi.mapper.TypeMapper);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field typeMapper:Ljnr/ffi/mapper/TypeMapper;
       9: return

  public jnr.ffi.mapper.FromNativeType getFromNativeType(jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.FromNativeContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field typeMapper:Ljnr/ffi/mapper/TypeMapper;
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod jnr/ffi/mapper/SignatureType.getDeclaredType:()Ljava/lang/Class;
      10: invokeinterface #4,  2            // InterfaceMethod jnr/ffi/mapper/TypeMapper.getFromNativeConverter:(Ljava/lang/Class;)Ljnr/ffi/mapper/FromNativeConverter;
      15: invokestatic  #5                  // Method jnr/ffi/mapper/FromNativeTypes.create:(Ljnr/ffi/mapper/FromNativeConverter;)Ljnr/ffi/mapper/FromNativeType;
      18: areturn

  public jnr.ffi.mapper.ToNativeType getToNativeType(jnr.ffi.mapper.SignatureType, jnr.ffi.mapper.ToNativeContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field typeMapper:Ljnr/ffi/mapper/TypeMapper;
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod jnr/ffi/mapper/SignatureType.getDeclaredType:()Ljava/lang/Class;
      10: invokeinterface #6,  2            // InterfaceMethod jnr/ffi/mapper/TypeMapper.getToNativeConverter:(Ljava/lang/Class;)Ljnr/ffi/mapper/ToNativeConverter;
      15: invokestatic  #7                  // Method jnr/ffi/mapper/ToNativeTypes.create:(Ljnr/ffi/mapper/ToNativeConverter;)Ljnr/ffi/mapper/ToNativeType;
      18: areturn
}
