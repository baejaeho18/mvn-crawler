Compiled from "ReflectionLibraryLoader.java"
class jnr.ffi.provider.jffi.ReflectionLibraryLoader extends jnr.ffi.provider.jffi.LibraryLoader {
  jnr.ffi.provider.jffi.ReflectionLibraryLoader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jnr/ffi/provider/jffi/LibraryLoader."<init>":()V
       4: return

  <T> T loadLibrary(jnr.ffi.provider.jffi.NativeLibrary, java.lang.Class<T>, java.util.Map<jnr.ffi.LibraryOption, ?>);
    Code:
       0: aload_2
       1: aload_2
       2: invokevirtual #2                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: iconst_2
       6: anewarray     #3                  // class java/lang/Class
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #4                  // class jnr/ffi/provider/LoadedLibrary
      17: aastore
      18: new           #5                  // class jnr/ffi/provider/NativeInvocationHandler
      21: dup
      22: new           #6                  // class jnr/ffi/provider/jffi/ReflectionLibraryLoader$LazyLoader
      25: dup
      26: aload_1
      27: aload_2
      28: aload_3
      29: aconst_null
      30: invokespecial #7                  // Method jnr/ffi/provider/jffi/ReflectionLibraryLoader$LazyLoader."<init>":(Ljnr/ffi/provider/jffi/NativeLibrary;Ljava/lang/Class;Ljava/util/Map;Ljnr/ffi/provider/jffi/ReflectionLibraryLoader$1;)V
      33: invokespecial #8                  // Method jnr/ffi/provider/NativeInvocationHandler."<init>":(Ljava/util/Map;)V
      36: invokestatic  #9                  // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      39: invokevirtual #10                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn
}
