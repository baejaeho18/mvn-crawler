Compiled from "MethodInvokerPostProcessor.java"
public final class io.gsonfire.postprocessors.methodinvoker.MethodInvokerPostProcessor<T> implements io.gsonfire.PostProcessor<T> {
  private static io.gsonfire.postprocessors.methodinvoker.MappedMethodInspector methodInspector;

  private final io.gsonfire.gson.FireExclusionStrategy serializationExclusionStrategy;

  public io.gsonfire.postprocessors.methodinvoker.MethodInvokerPostProcessor();
    Code:
       0: aload_0
       1: new           #1                  // class io/gsonfire/gson/FireExclusionStrategyComposite
       4: dup
       5: iconst_0
       6: anewarray     #2                  // class io/gsonfire/gson/FireExclusionStrategy
       9: invokespecial #3                  // Method io/gsonfire/gson/FireExclusionStrategyComposite."<init>":([Lio/gsonfire/gson/FireExclusionStrategy;)V
      12: invokespecial #4                  // Method "<init>":(Lio/gsonfire/gson/FireExclusionStrategy;)V
      15: return

  public io.gsonfire.postprocessors.methodinvoker.MethodInvokerPostProcessor(io.gsonfire.gson.FireExclusionStrategy);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field serializationExclusionStrategy:Lio/gsonfire/gson/FireExclusionStrategy;
       9: return

  public void postDeserialize(T, com.google.gson.JsonElement, com.google.gson.Gson);
    Code:
       0: return

  public void postSerialize(com.google.gson.JsonElement, T, com.google.gson.Gson);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method com/google/gson/JsonElement.isJsonObject:()Z
       4: ifeq          157
       7: aload_1
       8: invokevirtual #8                  // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
      11: astore        4
      13: getstatic     #9                  // Field methodInspector:Lio/gsonfire/postprocessors/methodinvoker/MappedMethodInspector;
      16: aload_2
      17: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: ldc           #11                 // class io/gsonfire/annotations/ExposeMethodResult
      22: invokevirtual #12                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethodInspector.getAnnotatedMembers:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      30: astore        5
      32: aload         5
      34: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          157
      42: aload         5
      44: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #16                 // class io/gsonfire/postprocessors/methodinvoker/MappedMethod
      52: astore        6
      54: aload_0
      55: getfield      #6                  // Field serializationExclusionStrategy:Lio/gsonfire/gson/FireExclusionStrategy;
      58: aload         6
      60: invokeinterface #17,  2           // InterfaceMethod io/gsonfire/gson/FireExclusionStrategy.shouldSkipMethod:(Lio/gsonfire/postprocessors/methodinvoker/MappedMethod;)Z
      65: ifne          154
      68: aload         6
      70: invokevirtual #18                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethod.getConflictResolutionStrategy:()Lio/gsonfire/annotations/ExposeMethodResult$ConflictResolutionStrategy;
      73: getstatic     #19                 // Field io/gsonfire/annotations/ExposeMethodResult$ConflictResolutionStrategy.OVERWRITE:Lio/gsonfire/annotations/ExposeMethodResult$ConflictResolutionStrategy;
      76: if_acmpeq     103
      79: aload         6
      81: invokevirtual #18                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethod.getConflictResolutionStrategy:()Lio/gsonfire/annotations/ExposeMethodResult$ConflictResolutionStrategy;
      84: getstatic     #20                 // Field io/gsonfire/annotations/ExposeMethodResult$ConflictResolutionStrategy.SKIP:Lio/gsonfire/annotations/ExposeMethodResult$ConflictResolutionStrategy;
      87: if_acmpne     134
      90: aload         4
      92: aload         6
      94: invokevirtual #21                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethod.getSerializedName:()Ljava/lang/String;
      97: invokevirtual #22                 // Method com/google/gson/JsonObject.has:(Ljava/lang/String;)Z
     100: ifne          134
     103: aload         6
     105: invokevirtual #23                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethod.getMethod:()Ljava/lang/reflect/Method;
     108: aload_2
     109: iconst_0
     110: anewarray     #24                 // class java/lang/Object
     113: invokevirtual #25                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     116: astore        7
     118: aload         4
     120: aload         6
     122: invokevirtual #21                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethod.getSerializedName:()Ljava/lang/String;
     125: aload_3
     126: aload         7
     128: invokevirtual #26                 // Method com/google/gson/Gson.toJsonTree:(Ljava/lang/Object;)Lcom/google/gson/JsonElement;
     131: invokevirtual #27                 // Method com/google/gson/JsonObject.add:(Ljava/lang/String;Lcom/google/gson/JsonElement;)V
     134: goto          154
     137: astore        7
     139: aload         7
     141: invokevirtual #29                 // Method java/lang/IllegalAccessException.printStackTrace:()V
     144: goto          154
     147: astore        7
     149: aload         7
     151: invokevirtual #31                 // Method java/lang/reflect/InvocationTargetException.printStackTrace:()V
     154: goto          32
     157: return
    Exception table:
       from    to  target type
          68   134   137   Class java/lang/IllegalAccessException
          68   134   147   Class java/lang/reflect/InvocationTargetException

  static {};
    Code:
       0: new           #32                 // class io/gsonfire/postprocessors/methodinvoker/MappedMethodInspector
       3: dup
       4: invokespecial #33                 // Method io/gsonfire/postprocessors/methodinvoker/MappedMethodInspector."<init>":()V
       7: putstatic     #9                  // Field methodInspector:Lio/gsonfire/postprocessors/methodinvoker/MappedMethodInspector;
      10: return
}
