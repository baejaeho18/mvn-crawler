Compiled from "LocaleChangeInterceptor.java"
public class org.springframework.web.servlet.i18n.LocaleChangeInterceptor extends org.springframework.web.servlet.handler.HandlerInterceptorAdapter {
  public static final java.lang.String DEFAULT_PARAM_NAME;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String paramName;

  private java.lang.String[] httpMethods;

  private boolean ignoreInvalidLocale;

  public org.springframework.web.servlet.i18n.LocaleChangeInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/handler/HandlerInterceptorAdapter."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #6                  // String locale
      18: putfield      #7                  // Field paramName:Ljava/lang/String;
      21: aload_0
      22: iconst_0
      23: putfield      #8                  // Field ignoreInvalidLocale:Z
      26: return

  public void setParamName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field paramName:Ljava/lang/String;
       5: return

  public java.lang.String getParamName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field paramName:Ljava/lang/String;
       4: areturn

  public void setHttpMethods(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field httpMethods:[Ljava/lang/String;
       5: return

  public java.lang.String[] getHttpMethods();
    Code:
       0: aload_0
       1: getfield      #9                  // Field httpMethods:[Ljava/lang/String;
       4: areturn

  public void setIgnoreInvalidLocale(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field ignoreInvalidLocale:Z
       5: return

  public boolean isIgnoreInvalidLocale();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ignoreInvalidLocale:Z
       4: ireturn

  public void setLanguageTagCompliant(boolean);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String LocaleChangeInterceptor always accepts BCP 47 language tags
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  public boolean isLanguageTagCompliant();
    Code:
       0: iconst_1
       1: ireturn

  public boolean preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object) throws javax.servlet.ServletException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #13                 // Method getParamName:()Ljava/lang/String;
       5: invokeinterface #14,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      10: astore        4
      12: aload         4
      14: ifnull        138
      17: aload_0
      18: aload_1
      19: invokeinterface #15,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      24: invokespecial #16                 // Method checkHttpMethod:(Ljava/lang/String;)Z
      27: ifeq          138
      30: aload_1
      31: invokestatic  #17                 // Method org/springframework/web/servlet/support/RequestContextUtils.getLocaleResolver:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/LocaleResolver;
      34: astore        5
      36: aload         5
      38: ifnonnull     51
      41: new           #18                 // class java/lang/IllegalStateException
      44: dup
      45: ldc           #19                 // String No LocaleResolver found: not in a DispatcherServlet request?
      47: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload         5
      53: aload_1
      54: aload_2
      55: aload_0
      56: aload         4
      58: invokevirtual #21                 // Method parseLocaleValue:(Ljava/lang/String;)Ljava/util/Locale;
      61: invokeinterface #22,  4           // InterfaceMethod org/springframework/web/servlet/LocaleResolver.setLocale:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/Locale;)V
      66: goto          138
      69: astore        6
      71: aload_0
      72: invokevirtual #23                 // Method isIgnoreInvalidLocale:()Z
      75: ifeq          135
      78: aload_0
      79: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      82: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      87: ifeq          138
      90: aload_0
      91: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      94: new           #25                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #27                 // String Ignoring invalid locale value [
     103: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload         4
     108: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc           #29                 // String ]:
     113: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload         6
     118: invokevirtual #30                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     121: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     132: goto          138
     135: aload         6
     137: athrow
     138: iconst_1
     139: ireturn
    Exception table:
       from    to  target type
          51    66    69   Class java/lang/IllegalArgumentException

  private boolean checkHttpMethod(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getHttpMethods:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #34                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_2
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     53
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload         6
      38: aload_1
      39: invokevirtual #35                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iinc          5, 1
      50: goto          23
      53: iconst_0
      54: ireturn

  protected java.util.Locale parseLocaleValue(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method org/springframework/util/StringUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;
       4: areturn
}
