Compiled from "DefaultRenderingResponseBuilder.java"
final class org.springframework.web.servlet.function.DefaultRenderingResponseBuilder$DefaultRenderingResponse extends org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse implements org.springframework.web.servlet.function.RenderingResponse {
  private final java.lang.String name;

  private final java.util.Map<java.lang.String, java.lang.Object> model;

  public org.springframework.web.servlet.function.DefaultRenderingResponseBuilder$DefaultRenderingResponse(int, org.springframework.http.HttpHeaders, org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie>, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/springframework/web/servlet/function/DefaultServerResponseBuilder$AbstractServerResponse."<init>":(ILorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field name:Ljava/lang/String;
      13: aload_0
      14: new           #3                  // class java/util/LinkedHashMap
      17: dup
      18: aload         5
      20: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      23: invokestatic  #5                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #6                  // Field model:Ljava/util/Map;
      29: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> model();
    Code:
       0: aload_0
       1: getfield      #6                  // Field model:Ljava/util/Map;
       4: areturn

  protected org.springframework.web.servlet.ModelAndView writeToInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context);
    Code:
       0: aload_0
       1: getfield      #7                  // Field statusCode:I
       4: invokestatic  #8                  // Method org/springframework/http/HttpStatus.resolve:(I)Lorg/springframework/http/HttpStatus;
       7: astore        4
       9: aload         4
      11: ifnull        32
      14: new           #9                  // class org/springframework/web/servlet/ModelAndView
      17: dup
      18: aload_0
      19: getfield      #2                  // Field name:Ljava/lang/String;
      22: aload         4
      24: invokespecial #10                 // Method org/springframework/web/servlet/ModelAndView."<init>":(Ljava/lang/String;Lorg/springframework/http/HttpStatus;)V
      27: astore        5
      29: goto          45
      32: new           #9                  // class org/springframework/web/servlet/ModelAndView
      35: dup
      36: aload_0
      37: getfield      #2                  // Field name:Ljava/lang/String;
      40: invokespecial #11                 // Method org/springframework/web/servlet/ModelAndView."<init>":(Ljava/lang/String;)V
      43: astore        5
      45: aload         5
      47: aload_0
      48: getfield      #6                  // Field model:Ljava/util/Map;
      51: invokevirtual #12                 // Method org/springframework/web/servlet/ModelAndView.addAllObjects:(Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
      54: pop
      55: aload         5
      57: areturn
}
