Compiled from "RequestPredicate.java"
public interface org.springframework.web.servlet.function.RequestPredicate {
  public abstract boolean test(org.springframework.web.servlet.function.ServerRequest);

  public default org.springframework.web.servlet.function.RequestPredicate and(org.springframework.web.servlet.function.RequestPredicate);
    Code:
       0: new           #1                  // class org/springframework/web/servlet/function/RequestPredicates$AndRequestPredicate
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #2                  // Method org/springframework/web/servlet/function/RequestPredicates$AndRequestPredicate."<init>":(Lorg/springframework/web/servlet/function/RequestPredicate;Lorg/springframework/web/servlet/function/RequestPredicate;)V
       9: areturn

  public default org.springframework.web.servlet.function.RequestPredicate negate();
    Code:
       0: new           #3                  // class org/springframework/web/servlet/function/RequestPredicates$NegateRequestPredicate
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method org/springframework/web/servlet/function/RequestPredicates$NegateRequestPredicate."<init>":(Lorg/springframework/web/servlet/function/RequestPredicate;)V
       8: areturn

  public default org.springframework.web.servlet.function.RequestPredicate or(org.springframework.web.servlet.function.RequestPredicate);
    Code:
       0: new           #5                  // class org/springframework/web/servlet/function/RequestPredicates$OrRequestPredicate
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #6                  // Method org/springframework/web/servlet/function/RequestPredicates$OrRequestPredicate."<init>":(Lorg/springframework/web/servlet/function/RequestPredicate;Lorg/springframework/web/servlet/function/RequestPredicate;)V
       9: areturn

  public default java.util.Optional<org.springframework.web.servlet.function.ServerRequest> nest(org.springframework.web.servlet.function.ServerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod test:(Lorg/springframework/web/servlet/function/ServerRequest;)Z
       7: ifeq          17
      10: aload_1
      11: invokestatic  #8                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      14: goto          20
      17: invokestatic  #9                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      20: areturn

  public default void accept(org.springframework.web.servlet.function.RequestPredicates$Visitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #10,  2           // InterfaceMethod org/springframework/web/servlet/function/RequestPredicates$Visitor.unknown:(Lorg/springframework/web/servlet/function/RequestPredicate;)V
       7: return
}
