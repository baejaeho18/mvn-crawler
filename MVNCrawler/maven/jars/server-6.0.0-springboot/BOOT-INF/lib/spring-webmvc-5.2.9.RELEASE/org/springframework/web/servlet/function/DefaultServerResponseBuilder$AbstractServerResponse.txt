Compiled from "DefaultServerResponseBuilder.java"
abstract class org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse implements org.springframework.web.servlet.function.ServerResponse {
  private static final java.util.Set<org.springframework.http.HttpMethod> SAFE_METHODS;

  final int statusCode;

  private final org.springframework.http.HttpHeaders headers;

  private final org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie> cookies;

  private final java.util.List<org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler<?>> errorHandlers;

  protected org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse(int, org.springframework.http.HttpHeaders, org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field errorHandlers:Ljava/util/List;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field statusCode:I
      20: aload_0
      21: aload_2
      22: invokestatic  #6                  // Method org/springframework/http/HttpHeaders.readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
      25: putfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
      28: aload_0
      29: new           #8                  // class org/springframework/util/LinkedMultiValueMap
      32: dup
      33: aload_3
      34: invokespecial #9                  // Method org/springframework/util/LinkedMultiValueMap."<init>":(Ljava/util/Map;)V
      37: invokestatic  #10                 // Method org/springframework/util/CollectionUtils.unmodifiableMultiValueMap:(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
      40: putfield      #11                 // Field cookies:Lorg/springframework/util/MultiValueMap;
      43: return

  protected <T extends org.springframework.web.servlet.function.ServerResponse> void addErrorHandler(java.util.function.Predicate<java.lang.Throwable>, java.util.function.BiFunction<java.lang.Throwable, org.springframework.web.servlet.function.ServerRequest, T>);
    Code:
       0: aload_1
       1: ldc           #12                 // String Predicate must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #14                 // String ErrorHandler must not be null
       9: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field errorHandlers:Ljava/util/List;
      16: new           #15                 // class org/springframework/web/servlet/function/DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler
      19: dup
      20: aload_1
      21: aload_2
      22: invokespecial #16                 // Method org/springframework/web/servlet/function/DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler."<init>":(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)V
      25: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: return

  public final org.springframework.http.HttpStatus statusCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field statusCode:I
       4: invokestatic  #18                 // Method org/springframework/http/HttpStatus.valueOf:(I)Lorg/springframework/http/HttpStatus;
       7: areturn

  public int rawStatusCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field statusCode:I
       4: ireturn

  public final org.springframework.http.HttpHeaders headers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie> cookies();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cookies:Lorg/springframework/util/MultiValueMap;
       4: areturn

  public org.springframework.web.servlet.ModelAndView writeTo(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #19                 // Method writeStatusAndHeaders:(Ljavax/servlet/http/HttpServletResponse;)V
       5: aload_0
       6: invokevirtual #20                 // Method headers:()Lorg/springframework/http/HttpHeaders;
       9: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.getLastModified:()J
      12: lstore        4
      14: new           #22                 // class org/springframework/web/context/request/ServletWebRequest
      17: dup
      18: aload_1
      19: aload_2
      20: invokespecial #23                 // Method org/springframework/web/context/request/ServletWebRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      23: astore        6
      25: aload_1
      26: invokeinterface #24,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      31: invokestatic  #25                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      34: astore        7
      36: getstatic     #26                 // Field SAFE_METHODS:Ljava/util/Set;
      39: aload         7
      41: invokeinterface #27,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      46: ifeq          68
      49: aload         6
      51: aload_0
      52: invokevirtual #20                 // Method headers:()Lorg/springframework/http/HttpHeaders;
      55: invokevirtual #28                 // Method org/springframework/http/HttpHeaders.getETag:()Ljava/lang/String;
      58: lload         4
      60: invokevirtual #29                 // Method org/springframework/web/context/request/ServletWebRequest.checkNotModified:(Ljava/lang/String;J)Z
      63: ifeq          68
      66: aconst_null
      67: areturn
      68: aload_0
      69: aload_1
      70: aload_2
      71: aload_3
      72: invokevirtual #30                 // Method writeToInternal:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)Lorg/springframework/web/servlet/ModelAndView;
      75: areturn
      76: astore        4
      78: aload_0
      79: aload         4
      81: aload_1
      82: aload_2
      83: aload_3
      84: invokevirtual #32                 // Method handleError:(Ljava/lang/Throwable;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)Lorg/springframework/web/servlet/ModelAndView;
      87: areturn
    Exception table:
       from    to  target type
           0    67    76   Class java/lang/Throwable
          68    75    76   Class java/lang/Throwable

  private void writeStatusAndHeaders(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field statusCode:I
       5: invokeinterface #33,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      10: aload_0
      11: aload_1
      12: invokespecial #34                 // Method writeHeaders:(Ljavax/servlet/http/HttpServletResponse;)V
      15: aload_0
      16: aload_1
      17: invokespecial #35                 // Method writeCookies:(Ljavax/servlet/http/HttpServletResponse;)V
      20: return

  private void writeHeaders(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: aload_1
       5: invokedynamic #36,  0             // InvokeDynamic #0:accept:(Ljavax/servlet/http/HttpServletResponse;)Ljava/util/function/BiConsumer;
      10: invokevirtual #37                 // Method org/springframework/http/HttpHeaders.forEach:(Ljava/util/function/BiConsumer;)V
      13: aload_1
      14: invokeinterface #38,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getContentType:()Ljava/lang/String;
      19: ifnonnull     48
      22: aload_0
      23: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
      26: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      29: ifnull        48
      32: aload_1
      33: aload_0
      34: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
      37: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      40: invokevirtual #40                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      43: invokeinterface #41,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      48: aload_1
      49: invokeinterface #42,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getCharacterEncoding:()Ljava/lang/String;
      54: ifnonnull     99
      57: aload_0
      58: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
      61: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      64: ifnull        99
      67: aload_0
      68: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
      71: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      74: invokevirtual #43                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      77: ifnull        99
      80: aload_1
      81: aload_0
      82: getfield      #7                  // Field headers:Lorg/springframework/http/HttpHeaders;
      85: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      88: invokevirtual #43                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      91: invokevirtual #44                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      94: invokeinterface #45,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setCharacterEncoding:(Ljava/lang/String;)V
      99: return

  private void writeCookies(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #11                 // Field cookies:Lorg/springframework/util/MultiValueMap;
       4: invokeinterface #46,  1           // InterfaceMethod org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
       9: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #48,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      19: invokeinterface #49,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: aload_1
      25: dup
      26: invokevirtual #50                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: pop
      30: invokedynamic #51,  0             // InvokeDynamic #2:accept:(Ljavax/servlet/http/HttpServletResponse;)Ljava/util/function/Consumer;
      35: invokeinterface #52,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      40: return

  protected abstract org.springframework.web.servlet.ModelAndView writeToInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context) throws javax.servlet.ServletException, java.io.IOException;

  protected org.springframework.web.servlet.ModelAndView handleError(java.lang.Throwable, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context);
    Code:
       0: aload_0
       1: getfield      #4                  // Field errorHandlers:Ljava/util/List;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #54,  0             // InvokeDynamic #3:test:(Ljava/lang/Throwable;)Ljava/util/function/Predicate;
      15: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokeinterface #56,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      25: aload_2
      26: aload_1
      27: aload_3
      28: aload         4
      30: invokedynamic #57,  0             // InvokeDynamic #4:apply:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Throwable;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)Ljava/util/function/Function;
      35: invokevirtual #58                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      38: aload_1
      39: invokedynamic #59,  0             // InvokeDynamic #5:get:(Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      44: invokevirtual #60                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      47: checkcast     #61                 // class org/springframework/web/servlet/ModelAndView
      50: areturn

  private static java.lang.RuntimeException lambda$handleError$3(java.lang.Throwable);
    Code:
       0: new           #62                 // class java/lang/RuntimeException
       3: dup
       4: aload_0
       5: invokespecial #63                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
       8: areturn

  private static org.springframework.web.servlet.ModelAndView lambda$handleError$2(javax.servlet.http.HttpServletRequest, java.lang.Throwable, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context, org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler);
    Code:
       0: aload_0
       1: getstatic     #64                 // Field org/springframework/web/servlet/function/RouterFunctions.REQUEST_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #65,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #66                 // class org/springframework/web/servlet/function/ServerRequest
      12: astore        5
      14: aload         4
      16: aload_1
      17: aload         5
      19: invokevirtual #67                 // Method org/springframework/web/servlet/function/DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler.handle:(Ljava/lang/Throwable;Lorg/springframework/web/servlet/function/ServerRequest;)Lorg/springframework/web/servlet/function/ServerResponse;
      22: astore        6
      24: aload         6
      26: aload_0
      27: aload_2
      28: aload_3
      29: invokeinterface #68,  4           // InterfaceMethod org/springframework/web/servlet/function/ServerResponse.writeTo:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)Lorg/springframework/web/servlet/ModelAndView;
      34: areturn
      35: astore        7
      37: new           #62                 // class java/lang/RuntimeException
      40: dup
      41: aload         7
      43: invokespecial #63                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
      47: astore        7
      49: new           #71                 // class java/io/UncheckedIOException
      52: dup
      53: aload         7
      55: invokespecial #72                 // Method java/io/UncheckedIOException."<init>":(Ljava/io/IOException;)V
      58: athrow
    Exception table:
       from    to  target type
          24    34    35   Class javax/servlet/ServletException
          24    34    47   Class java/io/IOException

  private static boolean lambda$handleError$1(java.lang.Throwable, org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #73                 // Method org/springframework/web/servlet/function/DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler.test:(Ljava/lang/Throwable;)Z
       5: ireturn

  private static void lambda$writeHeaders$0(javax.servlet.http.HttpServletResponse, java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          39
      16: aload_3
      17: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #77                 // class java/lang/String
      25: astore        4
      27: aload_0
      28: aload_1
      29: aload         4
      31: invokeinterface #78,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      36: goto          7
      39: return

  static {};
    Code:
       0: getstatic     #79                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
       3: getstatic     #80                 // Field org/springframework/http/HttpMethod.HEAD:Lorg/springframework/http/HttpMethod;
       6: invokestatic  #81                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
       9: putstatic     #26                 // Field SAFE_METHODS:Ljava/util/Set;
      12: return
}
