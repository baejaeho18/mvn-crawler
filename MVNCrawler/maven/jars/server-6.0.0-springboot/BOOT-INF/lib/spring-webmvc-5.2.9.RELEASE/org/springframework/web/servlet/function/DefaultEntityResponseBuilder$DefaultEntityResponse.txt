Compiled from "DefaultEntityResponseBuilder.java"
class org.springframework.web.servlet.function.DefaultEntityResponseBuilder$DefaultEntityResponse<T> extends org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse implements org.springframework.web.servlet.function.EntityResponse<T> {
  private final T entity;

  private final java.lang.reflect.Type entityType;

  public org.springframework.web.servlet.function.DefaultEntityResponseBuilder$DefaultEntityResponse(int, org.springframework.http.HttpHeaders, org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie>, T, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/springframework/web/servlet/function/DefaultServerResponseBuilder$AbstractServerResponse."<init>":(ILorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field entity:Ljava/lang/Object;
      13: aload_0
      14: aload         5
      16: putfield      #3                  // Field entityType:Ljava/lang/reflect/Type;
      19: return

  private static <T> boolean isResource(T);
    Code:
       0: aload_0
       1: instanceof    #4                  // class org/springframework/core/io/InputStreamResource
       4: ifne          18
       7: aload_0
       8: instanceof    #5                  // class org/springframework/core/io/Resource
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public T entity();
    Code:
       0: aload_0
       1: getfield      #2                  // Field entity:Ljava/lang/Object;
       4: areturn

  protected org.springframework.web.servlet.ModelAndView writeToInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field entity:Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #6                  // Method writeEntityWithMessageConverters:(Ljava/lang/Object;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)V
      11: aconst_null
      12: areturn

  protected void writeEntityWithMessageConverters(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: new           #7                  // class org/springframework/http/server/ServletServerHttpResponse
       3: dup
       4: aload_3
       5: invokespecial #8                  // Method org/springframework/http/server/ServletServerHttpResponse."<init>":(Ljavax/servlet/http/HttpServletResponse;)V
       8: astore        5
      10: aload_3
      11: invokestatic  #9                  // Method getContentType:(Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/http/MediaType;
      14: astore        6
      16: aload_1
      17: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: astore        7
      22: aload_0
      23: getfield      #3                  // Field entityType:Ljava/lang/reflect/Type;
      26: astore        8
      28: aload         7
      30: ldc           #4                  // class org/springframework/core/io/InputStreamResource
      32: if_acmpeq     176
      35: ldc           #5                  // class org/springframework/core/io/Resource
      37: aload         7
      39: invokevirtual #11                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      42: ifeq          176
      45: aload         5
      47: invokevirtual #12                 // Method org/springframework/http/server/ServletServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      50: ldc           #14                 // String Accept-Ranges
      52: ldc           #15                 // String bytes
      54: invokevirtual #16                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      57: aload_2
      58: ldc           #17                 // String Range
      60: invokeinterface #18,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      65: astore        9
      67: aload         9
      69: ifnull        176
      72: aload_1
      73: checkcast     #5                  // class org/springframework/core/io/Resource
      76: astore        10
      78: aload         9
      80: invokestatic  #19                 // Method org/springframework/http/HttpRange.parseRanges:(Ljava/lang/String;)Ljava/util/List;
      83: astore        11
      85: aload         5
      87: invokevirtual #20                 // Method org/springframework/http/server/ServletServerHttpResponse.getServletResponse:()Ljavax/servlet/http/HttpServletResponse;
      90: getstatic     #21                 // Field org/springframework/http/HttpStatus.PARTIAL_CONTENT:Lorg/springframework/http/HttpStatus;
      93: invokevirtual #22                 // Method org/springframework/http/HttpStatus.value:()I
      96: invokeinterface #23,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
     101: aload         11
     103: aload         10
     105: invokestatic  #24                 // Method org/springframework/http/HttpRange.toResourceRegions:(Ljava/util/List;Lorg/springframework/core/io/Resource;)Ljava/util/List;
     108: astore_1
     109: aload_1
     110: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     113: astore        7
     115: invokestatic  #25                 // Method org/springframework/web/servlet/function/DefaultEntityResponseBuilder.access$000:()Ljava/lang/reflect/Type;
     118: astore        8
     120: goto          176
     123: astore        11
     125: aload         5
     127: invokevirtual #12                 // Method org/springframework/http/server/ServletServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
     130: ldc           #27                 // String Content-Range
     132: new           #28                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #30                 // String bytes */
     141: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload         10
     146: invokeinterface #32,  1           // InterfaceMethod org/springframework/core/io/Resource.contentLength:()J
     151: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     154: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokevirtual #16                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
     160: aload         5
     162: invokevirtual #20                 // Method org/springframework/http/server/ServletServerHttpResponse.getServletResponse:()Ljavax/servlet/http/HttpServletResponse;
     165: getstatic     #35                 // Field org/springframework/http/HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE:Lorg/springframework/http/HttpStatus;
     168: invokevirtual #22                 // Method org/springframework/http/HttpStatus.value:()I
     171: invokeinterface #23,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
     176: aload         4
     178: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/servlet/function/ServerResponse$Context.messageConverters:()Ljava/util/List;
     183: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     188: astore        9
     190: aload         9
     192: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     197: ifeq          288
     200: aload         9
     202: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     207: checkcast     #40                 // class org/springframework/http/converter/HttpMessageConverter
     210: astore        10
     212: aload         10
     214: instanceof    #41                 // class org/springframework/http/converter/GenericHttpMessageConverter
     217: ifeq          258
     220: aload         10
     222: checkcast     #41                 // class org/springframework/http/converter/GenericHttpMessageConverter
     225: astore        11
     227: aload         11
     229: aload         8
     231: aload         7
     233: aload         6
     235: invokeinterface #42,  4           // InterfaceMethod org/springframework/http/converter/GenericHttpMessageConverter.canWrite:(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
     240: ifeq          258
     243: aload         11
     245: aload_1
     246: aload         8
     248: aload         6
     250: aload         5
     252: invokeinterface #43,  5           // InterfaceMethod org/springframework/http/converter/GenericHttpMessageConverter.write:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
     257: return
     258: aload         10
     260: aload         7
     262: aload         6
     264: invokeinterface #44,  3           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.canWrite:(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
     269: ifeq          285
     272: aload         10
     274: aload_1
     275: aload         6
     277: aload         5
     279: invokeinterface #45,  4           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.write:(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
     284: return
     285: goto          190
     288: aload         4
     290: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/servlet/function/ServerResponse$Context.messageConverters:()Ljava/util/List;
     295: aload         7
     297: invokestatic  #46                 // Method producibleMediaTypes:(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
     300: astore        9
     302: new           #47                 // class org/springframework/web/HttpMediaTypeNotAcceptableException
     305: dup
     306: aload         9
     308: invokespecial #48                 // Method org/springframework/web/HttpMediaTypeNotAcceptableException."<init>":(Ljava/util/List;)V
     311: athrow
    Exception table:
       from    to  target type
          78   120   123   Class java/lang/IllegalArgumentException

  private static org.springframework.http.MediaType getContentType(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: invokeinterface #49,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getContentType:()Ljava/lang/String;
       6: invokestatic  #50                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
       9: invokevirtual #51                 // Method org/springframework/http/MediaType.removeQualityValue:()Lorg/springframework/http/MediaType;
      12: areturn
      13: astore_1
      14: aconst_null
      15: areturn
    Exception table:
       from    to  target type
           0    12    13   Class org/springframework/http/InvalidMediaTypeException

  protected void tryWriteEntityWithMessageConverters(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.servlet.function.ServerResponse$Context);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #6                  // Method writeEntityWithMessageConverters:(Ljava/lang/Object;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)V
       9: goto          25
      12: astore        5
      14: aload_0
      15: aload         5
      17: aload_2
      18: aload_3
      19: aload         4
      21: invokevirtual #55                 // Method handleError:(Ljava/lang/Throwable;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/web/servlet/function/ServerResponse$Context;)Lorg/springframework/web/servlet/ModelAndView;
      24: pop
      25: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException
           0     9    12   Class javax/servlet/ServletException

  private static java.util.List<org.springframework.http.MediaType> producibleMediaTypes(java.util.List<org.springframework.http.converter.HttpMessageConverter<?>>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: aload_1
       7: invokedynamic #57,  0             // InvokeDynamic #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      12: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      17: invokedynamic #59,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      22: invokeinterface #60,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: invokestatic  #61                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      30: invokeinterface #62,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      35: checkcast     #63                 // class java/util/List
      38: areturn

  private static java.util.stream.Stream lambda$producibleMediaTypes$1(org.springframework.http.converter.HttpMessageConverter);
    Code:
       0: aload_0
       1: invokeinterface #64,  1           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.getSupportedMediaTypes:()Ljava/util/List;
       6: invokeinterface #56,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      11: areturn

  private static boolean lambda$producibleMediaTypes$0(java.lang.Class, org.springframework.http.converter.HttpMessageConverter);
    Code:
       0: aload_1
       1: aload_0
       2: aconst_null
       3: invokeinterface #44,  3           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.canWrite:(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
       8: ireturn
}
