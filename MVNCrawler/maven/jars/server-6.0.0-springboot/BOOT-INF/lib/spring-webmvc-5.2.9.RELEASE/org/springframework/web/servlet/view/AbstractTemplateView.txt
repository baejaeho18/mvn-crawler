Compiled from "AbstractTemplateView.java"
public abstract class org.springframework.web.servlet.view.AbstractTemplateView extends org.springframework.web.servlet.view.AbstractUrlBasedView {
  public static final java.lang.String SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;

  private boolean exposeRequestAttributes;

  private boolean allowRequestOverride;

  private boolean exposeSessionAttributes;

  private boolean allowSessionOverride;

  private boolean exposeSpringMacroHelpers;

  public org.springframework.web.servlet.view.AbstractTemplateView();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field exposeRequestAttributes:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field allowRequestOverride:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field exposeSessionAttributes:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field allowSessionOverride:Z
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field exposeSpringMacroHelpers:Z
      29: return

  public void setExposeRequestAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field exposeRequestAttributes:Z
       5: return

  public void setAllowRequestOverride(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field allowRequestOverride:Z
       5: return

  public void setExposeSessionAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field exposeSessionAttributes:Z
       5: return

  public void setAllowSessionOverride(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field allowSessionOverride:Z
       5: return

  public void setExposeSpringMacroHelpers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field exposeSpringMacroHelpers:Z
       5: return

  protected final void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exposeRequestAttributes:Z
       4: ifeq          204
       7: aconst_null
       8: astore        4
      10: aload_2
      11: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttributeNames:()Ljava/util/Enumeration;
      16: astore        5
      18: aload         5
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      25: ifeq          158
      28: aload         5
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      35: checkcast     #10                 // class java/lang/String
      38: astore        6
      40: aload_1
      41: aload         6
      43: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      48: ifeq          91
      51: aload_0
      52: getfield      #3                  // Field allowRequestOverride:Z
      55: ifne          91
      58: new           #12                 // class javax/servlet/ServletException
      61: dup
      62: new           #13                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #15                 // String Cannot expose request attribute \'
      71: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         6
      76: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #17                 // String \' because of an existing model object of the same name
      81: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #19                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_2
      92: aload         6
      94: invokeinterface #20,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      99: astore        7
     101: aload_0
     102: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     105: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     110: ifeq          144
     113: aload         4
     115: ifnull        123
     118: aload         4
     120: goto          130
     123: new           #23                 // class java/util/LinkedHashMap
     126: dup
     127: invokespecial #24                 // Method java/util/LinkedHashMap."<init>":()V
     130: astore        4
     132: aload         4
     134: aload         6
     136: aload         7
     138: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: aload_1
     145: aload         6
     147: aload         7
     149: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: goto          18
     158: aload_0
     159: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     162: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     167: ifeq          204
     170: aload         4
     172: ifnull        204
     175: aload_0
     176: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     179: new           #13                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #27                 // String Exposed request attributes to model:
     188: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload         4
     193: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     196: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     204: aload_0
     205: getfield      #4                  // Field exposeSessionAttributes:Z
     208: ifeq          424
     211: aload_2
     212: iconst_0
     213: invokeinterface #30,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
     218: astore        4
     220: aload         4
     222: ifnull        424
     225: aconst_null
     226: astore        5
     228: aload         4
     230: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpSession.getAttributeNames:()Ljava/util/Enumeration;
     235: astore        6
     237: aload         6
     239: invokeinterface #8,  1            // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     244: ifeq          378
     247: aload         6
     249: invokeinterface #9,  1            // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     254: checkcast     #10                 // class java/lang/String
     257: astore        7
     259: aload_1
     260: aload         7
     262: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     267: ifeq          310
     270: aload_0
     271: getfield      #5                  // Field allowSessionOverride:Z
     274: ifne          310
     277: new           #12                 // class javax/servlet/ServletException
     280: dup
     281: new           #13                 // class java/lang/StringBuilder
     284: dup
     285: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     288: ldc           #32                 // String Cannot expose session attribute \'
     290: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     293: aload         7
     295: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     298: ldc           #17                 // String \' because of an existing model object of the same name
     300: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     306: invokespecial #19                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
     309: athrow
     310: aload         4
     312: aload         7
     314: invokeinterface #33,  2           // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
     319: astore        8
     321: aload_0
     322: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     325: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     330: ifeq          364
     333: aload         5
     335: ifnull        343
     338: aload         5
     340: goto          350
     343: new           #23                 // class java/util/LinkedHashMap
     346: dup
     347: invokespecial #24                 // Method java/util/LinkedHashMap."<init>":()V
     350: astore        5
     352: aload         5
     354: aload         7
     356: aload         8
     358: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     363: pop
     364: aload_1
     365: aload         7
     367: aload         8
     369: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     374: pop
     375: goto          237
     378: aload_0
     379: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     382: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     387: ifeq          424
     390: aload         5
     392: ifnull        424
     395: aload_0
     396: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     399: new           #13                 // class java/lang/StringBuilder
     402: dup
     403: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     406: ldc           #34                 // String Exposed session attributes to model:
     408: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     411: aload         5
     413: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     416: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     419: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     424: aload_0
     425: getfield      #6                  // Field exposeSpringMacroHelpers:Z
     428: ifeq          475
     431: aload_1
     432: ldc           #36                 // String springMacroRequestContext
     434: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     439: ifeq          452
     442: new           #12                 // class javax/servlet/ServletException
     445: dup
     446: ldc           #37                 // String Cannot expose bind macro helper \'springMacroRequestContext\' because of an existing model object of the same name
     448: invokespecial #19                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
     451: athrow
     452: aload_1
     453: ldc           #36                 // String springMacroRequestContext
     455: new           #38                 // class org/springframework/web/servlet/support/RequestContext
     458: dup
     459: aload_2
     460: aload_3
     461: aload_0
     462: invokevirtual #39                 // Method getServletContext:()Ljavax/servlet/ServletContext;
     465: aload_1
     466: invokespecial #40                 // Method org/springframework/web/servlet/support/RequestContext."<init>":(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/ServletContext;Ljava/util/Map;)V
     469: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     474: pop
     475: aload_0
     476: aload_3
     477: invokevirtual #41                 // Method applyContentType:(Ljavax/servlet/http/HttpServletResponse;)V
     480: aload_0
     481: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     484: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     489: ifeq          528
     492: aload_0
     493: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     496: new           #13                 // class java/lang/StringBuilder
     499: dup
     500: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     503: ldc           #42                 // String Rendering [
     505: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     508: aload_0
     509: invokevirtual #43                 // Method getUrl:()Ljava/lang/String;
     512: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: ldc           #44                 // String ]
     517: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     520: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     523: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     528: aload_0
     529: aload_1
     530: aload_2
     531: aload_3
     532: invokevirtual #46                 // Method renderMergedTemplateModel:(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
     535: return

  protected void applyContentType(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: invokeinterface #47,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getContentType:()Ljava/lang/String;
       6: ifnonnull     19
       9: aload_1
      10: aload_0
      11: invokevirtual #48                 // Method getContentType:()Ljava/lang/String;
      14: invokeinterface #49,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      19: return

  protected abstract void renderMergedTemplateModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
}
