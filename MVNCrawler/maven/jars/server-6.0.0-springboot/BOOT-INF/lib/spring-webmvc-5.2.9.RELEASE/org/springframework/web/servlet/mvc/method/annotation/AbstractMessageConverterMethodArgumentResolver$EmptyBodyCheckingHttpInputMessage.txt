Compiled from "AbstractMessageConverterMethodArgumentResolver.java"
class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage implements org.springframework.http.HttpInputMessage {
  private final org.springframework.http.HttpHeaders headers;

  private final java.io.InputStream body;

  public org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage(org.springframework.http.HttpInputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: putfield      #3                  // Field headers:Lorg/springframework/http/HttpHeaders;
      14: aload_1
      15: invokeinterface #4,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      20: astore_2
      21: aload_2
      22: invokevirtual #5                  // Method java/io/InputStream.markSupported:()Z
      25: ifeq          57
      28: aload_2
      29: iconst_1
      30: invokevirtual #6                  // Method java/io/InputStream.mark:(I)V
      33: aload_0
      34: aload_2
      35: invokevirtual #7                  // Method java/io/InputStream.read:()I
      38: iconst_m1
      39: if_icmpeq     46
      42: aload_2
      43: goto          47
      46: aconst_null
      47: putfield      #8                  // Field body:Ljava/io/InputStream;
      50: aload_2
      51: invokevirtual #9                  // Method java/io/InputStream.reset:()V
      54: goto          97
      57: new           #10                 // class java/io/PushbackInputStream
      60: dup
      61: aload_2
      62: invokespecial #11                 // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;)V
      65: astore_3
      66: aload_3
      67: invokevirtual #12                 // Method java/io/PushbackInputStream.read:()I
      70: istore        4
      72: iload         4
      74: iconst_m1
      75: if_icmpne     86
      78: aload_0
      79: aconst_null
      80: putfield      #8                  // Field body:Ljava/io/InputStream;
      83: goto          97
      86: aload_0
      87: aload_3
      88: putfield      #8                  // Field body:Ljava/io/InputStream;
      91: aload_3
      92: iload         4
      94: invokevirtual #13                 // Method java/io/PushbackInputStream.unread:(I)V
      97: return

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: areturn

  public java.io.InputStream getBody();
    Code:
       0: aload_0
       1: getfield      #8                  // Field body:Ljava/io/InputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #8                  // Field body:Ljava/io/InputStream;
      11: goto          17
      14: invokestatic  #14                 // Method org/springframework/util/StreamUtils.emptyInput:()Ljava/io/InputStream;
      17: areturn

  public boolean hasBody();
    Code:
       0: aload_0
       1: getfield      #8                  // Field body:Ljava/io/InputStream;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
