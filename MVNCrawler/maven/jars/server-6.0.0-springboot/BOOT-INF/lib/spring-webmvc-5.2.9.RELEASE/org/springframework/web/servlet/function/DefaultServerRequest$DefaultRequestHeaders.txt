Compiled from "DefaultServerRequest.java"
class org.springframework.web.servlet.function.DefaultServerRequest$DefaultRequestHeaders implements org.springframework.web.servlet.function.ServerRequest$Headers {
  private final org.springframework.http.HttpHeaders delegate;

  public org.springframework.web.servlet.function.DefaultServerRequest$DefaultRequestHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       9: return

  public java.util.List<org.springframework.http.MediaType> accept();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #3                  // Method org/springframework/http/HttpHeaders.getAccept:()Ljava/util/List;
       7: areturn

  public java.util.List<java.nio.charset.Charset> acceptCharset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #4                  // Method org/springframework/http/HttpHeaders.getAcceptCharset:()Ljava/util/List;
       7: areturn

  public java.util.List<java.util.Locale$LanguageRange> acceptLanguage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #5                  // Method org/springframework/http/HttpHeaders.getAcceptLanguage:()Ljava/util/List;
       7: areturn

  public java.util.OptionalLong contentLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #6                  // Method org/springframework/http/HttpHeaders.getContentLength:()J
       7: lstore_1
       8: lload_1
       9: ldc2_w        #7                  // long -1l
      12: lcmp
      13: ifeq          23
      16: lload_1
      17: invokestatic  #9                  // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
      20: goto          26
      23: invokestatic  #10                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      26: areturn

  public java.util.Optional<org.springframework.http.MediaType> contentType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #11                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       7: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      10: areturn

  public java.net.InetSocketAddress host();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #13                 // Method org/springframework/http/HttpHeaders.getHost:()Ljava/net/InetSocketAddress;
       7: areturn

  public java.util.List<org.springframework.http.HttpRange> range();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #14                 // Method org/springframework/http/HttpHeaders.getRange:()Ljava/util/List;
       7: areturn

  public java.util.List<java.lang.String> header(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: aload_1
       5: invokevirtual #15                 // Method org/springframework/http/HttpHeaders.get:(Ljava/lang/Object;)Ljava/util/List;
       8: astore_2
       9: aload_2
      10: ifnull        17
      13: aload_2
      14: goto          20
      17: invokestatic  #16                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      20: areturn

  public org.springframework.http.HttpHeaders asHttpHeaders();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokestatic  #17                 // Method org/springframework/http/HttpHeaders.readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.toString:()Ljava/lang/String;
       7: areturn
}
