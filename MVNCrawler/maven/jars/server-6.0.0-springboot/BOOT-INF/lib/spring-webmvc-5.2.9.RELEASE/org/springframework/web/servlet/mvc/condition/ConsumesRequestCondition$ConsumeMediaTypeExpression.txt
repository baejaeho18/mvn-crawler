Compiled from "ConsumesRequestCondition.java"
class org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition$ConsumeMediaTypeExpression extends org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression {
  org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition$ConsumeMediaTypeExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/web/servlet/mvc/condition/AbstractMediaTypeExpression."<init>":(Ljava/lang/String;)V
       5: return

  org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition$ConsumeMediaTypeExpression(org.springframework.http.MediaType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method org/springframework/web/servlet/mvc/condition/AbstractMediaTypeExpression."<init>":(Lorg/springframework/http/MediaType;Z)V
       6: return

  public final boolean match(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getMediaType:()Lorg/springframework/http/MediaType;
       4: aload_1
       5: invokevirtual #4                  // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
       8: istore_2
       9: aload_0
      10: invokevirtual #5                  // Method isNegated:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: iload_2
      22: if_icmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
}
