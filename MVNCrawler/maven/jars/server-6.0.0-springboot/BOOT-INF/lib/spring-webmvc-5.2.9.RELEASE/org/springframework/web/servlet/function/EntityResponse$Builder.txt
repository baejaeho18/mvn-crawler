Compiled from "EntityResponse.java"
public interface org.springframework.web.servlet.function.EntityResponse$Builder<T> {
  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> header(java.lang.String, java.lang.String...);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> headers(java.util.function.Consumer<org.springframework.http.HttpHeaders>);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> status(org.springframework.http.HttpStatus);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> status(int);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> cookie(javax.servlet.http.Cookie);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> cookies(java.util.function.Consumer<org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie>>);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> allow(org.springframework.http.HttpMethod...);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> allow(java.util.Set<org.springframework.http.HttpMethod>);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> eTag(java.lang.String);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> lastModified(java.time.ZonedDateTime);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> lastModified(java.time.Instant);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> location(java.net.URI);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> cacheControl(org.springframework.http.CacheControl);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> varyBy(java.lang.String...);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> contentLength(long);

  public abstract org.springframework.web.servlet.function.EntityResponse$Builder<T> contentType(org.springframework.http.MediaType);

  public abstract org.springframework.web.servlet.function.EntityResponse<T> build();
}
