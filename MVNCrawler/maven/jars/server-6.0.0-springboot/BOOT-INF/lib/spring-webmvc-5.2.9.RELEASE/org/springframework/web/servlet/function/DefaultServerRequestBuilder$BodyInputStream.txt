Compiled from "DefaultServerRequestBuilder.java"
class org.springframework.web.servlet.function.DefaultServerRequestBuilder$BodyInputStream extends javax.servlet.ServletInputStream {
  private final java.io.InputStream delegate;

  public org.springframework.web.servlet.function.DefaultServerRequestBuilder$BodyInputStream(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/servlet/ServletInputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class java/io/ByteArrayInputStream
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      13: putfield      #4                  // Field delegate:Ljava/io/InputStream;
      16: return

  public boolean isFinished();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isReady();
    Code:
       0: iconst_1
       1: ireturn

  public void setReadListener(javax.servlet.ReadListener);
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: invokevirtual #7                  // Method java/io/InputStream.read:()I
       7: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #8                  // Method java/io/InputStream.read:([BII)I
      10: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: aload_1
       5: invokevirtual #9                  // Method java/io/InputStream.read:([B)I
       8: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #10                 // Method java/io/InputStream.skip:(J)J
       8: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: invokevirtual #11                 // Method java/io/InputStream.available:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: invokevirtual #12                 // Method java/io/InputStream.close:()V
       7: return

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #13                 // Method java/io/InputStream.mark:(I)V
       8: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: invokevirtual #14                 // Method java/io/InputStream.reset:()V
       7: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/io/InputStream;
       4: invokevirtual #15                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn
}
