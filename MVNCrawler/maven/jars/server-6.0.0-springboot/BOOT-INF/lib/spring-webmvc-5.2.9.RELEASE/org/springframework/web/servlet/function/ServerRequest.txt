Compiled from "ServerRequest.java"
public interface org.springframework.web.servlet.function.ServerRequest {
  public default org.springframework.http.HttpMethod method();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod methodName:()Ljava/lang/String;
       6: invokestatic  #2                  // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
       9: areturn

  public abstract java.lang.String methodName();

  public abstract java.net.URI uri();

  public abstract org.springframework.web.util.UriBuilder uriBuilder();

  public default java.lang.String path();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod uri:()Ljava/net/URI;
       6: invokevirtual #4                  // Method java/net/URI.getRawPath:()Ljava/lang/String;
       9: areturn

  public default org.springframework.http.server.PathContainer pathContainer();
    Code:
       0: aload_0
       1: invokeinterface #5,  1            // InterfaceMethod path:()Ljava/lang/String;
       6: invokestatic  #6                  // InterfaceMethod org/springframework/http/server/PathContainer.parsePath:(Ljava/lang/String;)Lorg/springframework/http/server/PathContainer;
       9: areturn

  public abstract org.springframework.web.servlet.function.ServerRequest$Headers headers();

  public abstract org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie> cookies();

  public abstract java.util.Optional<java.net.InetSocketAddress> remoteAddress();

  public abstract java.util.List<org.springframework.http.converter.HttpMessageConverter<?>> messageConverters();

  public abstract <T> T body(java.lang.Class<T>) throws javax.servlet.ServletException, java.io.IOException;

  public abstract <T> T body(org.springframework.core.ParameterizedTypeReference<T>) throws javax.servlet.ServletException, java.io.IOException;

  public default java.util.Optional<java.lang.Object> attribute(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod attributes:()Ljava/util/Map;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          28
      17: aload_2
      18: aload_1
      19: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokestatic  #10                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      27: areturn
      28: invokestatic  #11                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      31: areturn

  public abstract java.util.Map<java.lang.String, java.lang.Object> attributes();

  public default java.util.Optional<java.lang.String> param(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #12,  1           // InterfaceMethod params:()Lorg/springframework/util/MultiValueMap;
       6: aload_1
       7: invokeinterface #13,  2           // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #14                 // class java/util/List
      15: astore_2
      16: aload_2
      17: invokestatic  #15                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      20: ifeq          27
      23: invokestatic  #11                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      26: areturn
      27: aload_2
      28: iconst_0
      29: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: checkcast     #17                 // class java/lang/String
      37: astore_3
      38: aload_3
      39: ifnonnull     45
      42: ldc           #18                 // String
      44: astore_3
      45: aload_3
      46: invokestatic  #10                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      49: areturn

  public abstract org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> params();

  public default java.lang.String pathVariable(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod pathVariables:()Ljava/util/Map;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          33
      17: aload_0
      18: invokeinterface #19,  1           // InterfaceMethod pathVariables:()Ljava/util/Map;
      23: aload_1
      24: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #17                 // class java/lang/String
      32: areturn
      33: new           #20                 // class java/lang/IllegalArgumentException
      36: dup
      37: new           #21                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #23                 // String No path variable with name \"
      46: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #25                 // String \" available
      55: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow

  public abstract java.util.Map<java.lang.String, java.lang.String> pathVariables();

  public abstract javax.servlet.http.HttpSession session();

  public abstract java.util.Optional<java.security.Principal> principal();

  public abstract javax.servlet.http.HttpServletRequest servletRequest();

  public default java.util.Optional<org.springframework.web.servlet.function.ServerResponse> checkNotModified(java.time.Instant);
    Code:
       0: aload_1
       1: ldc           #28                 // String LastModified must not be null
       3: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #30,  1           // InterfaceMethod servletRequest:()Ljavax/servlet/http/HttpServletRequest;
      12: aload_1
      13: aconst_null
      14: invokestatic  #31                 // Method org/springframework/web/servlet/function/DefaultServerRequest.checkNotModified:(Ljavax/servlet/http/HttpServletRequest;Ljava/time/Instant;Ljava/lang/String;)Ljava/util/Optional;
      17: areturn

  public default java.util.Optional<org.springframework.web.servlet.function.ServerResponse> checkNotModified(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String Etag must not be null
       3: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #30,  1           // InterfaceMethod servletRequest:()Ljavax/servlet/http/HttpServletRequest;
      12: aconst_null
      13: aload_1
      14: invokestatic  #31                 // Method org/springframework/web/servlet/function/DefaultServerRequest.checkNotModified:(Ljavax/servlet/http/HttpServletRequest;Ljava/time/Instant;Ljava/lang/String;)Ljava/util/Optional;
      17: areturn

  public default java.util.Optional<org.springframework.web.servlet.function.ServerResponse> checkNotModified(java.time.Instant, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #28                 // String LastModified must not be null
       3: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #32                 // String Etag must not be null
       9: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokeinterface #30,  1           // InterfaceMethod servletRequest:()Ljavax/servlet/http/HttpServletRequest;
      18: aload_1
      19: aload_2
      20: invokestatic  #31                 // Method org/springframework/web/servlet/function/DefaultServerRequest.checkNotModified:(Ljavax/servlet/http/HttpServletRequest;Ljava/time/Instant;Ljava/lang/String;)Ljava/util/Optional;
      23: areturn

  public static org.springframework.web.servlet.function.ServerRequest create(javax.servlet.http.HttpServletRequest, java.util.List<org.springframework.http.converter.HttpMessageConverter<?>>);
    Code:
       0: new           #33                 // class org/springframework/web/servlet/function/DefaultServerRequest
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #34                 // Method org/springframework/web/servlet/function/DefaultServerRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;Ljava/util/List;)V
       9: areturn

  public static org.springframework.web.servlet.function.ServerRequest$Builder from(org.springframework.web.servlet.function.ServerRequest);
    Code:
       0: new           #35                 // class org/springframework/web/servlet/function/DefaultServerRequestBuilder
       3: dup
       4: aload_0
       5: invokespecial #36                 // Method org/springframework/web/servlet/function/DefaultServerRequestBuilder."<init>":(Lorg/springframework/web/servlet/function/ServerRequest;)V
       8: areturn
}
