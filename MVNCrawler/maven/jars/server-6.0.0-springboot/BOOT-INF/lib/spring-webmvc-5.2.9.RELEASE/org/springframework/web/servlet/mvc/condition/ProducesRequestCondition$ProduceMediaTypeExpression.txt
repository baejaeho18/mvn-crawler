Compiled from "ProducesRequestCondition.java"
class org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression extends org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression {
  org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression(org.springframework.http.MediaType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/springframework/web/servlet/mvc/condition/AbstractMediaTypeExpression."<init>":(Lorg/springframework/http/MediaType;Z)V
       6: return

  org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/web/servlet/mvc/condition/AbstractMediaTypeExpression."<init>":(Ljava/lang/String;)V
       5: return

  public final boolean match(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method matchMediaType:(Ljava/util/List;)Z
       5: istore_2
       6: aload_0
       7: invokevirtual #4                  // Method isNegated:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: iload_2
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private boolean matchMediaType(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          50
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #8                  // class org/springframework/http/MediaType
      25: astore_3
      26: aload_0
      27: invokevirtual #9                  // Method getMediaType:()Lorg/springframework/http/MediaType;
      30: aload_3
      31: invokevirtual #10                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      34: ifeq          47
      37: aload_0
      38: aload_3
      39: invokespecial #11                 // Method matchParameters:(Lorg/springframework/http/MediaType;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: goto          7
      50: iconst_0
      51: ireturn

  private boolean matchParameters(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getMediaType:()Lorg/springframework/http/MediaType;
       4: invokevirtual #12                 // Method org/springframework/http/MediaType.getParameters:()Ljava/util/Map;
       7: invokeinterface #13,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      12: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          85
      27: aload_2
      28: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #15                 // class java/lang/String
      36: astore_3
      37: aload_0
      38: invokevirtual #9                  // Method getMediaType:()Lorg/springframework/http/MediaType;
      41: aload_3
      42: invokevirtual #16                 // Method org/springframework/http/MediaType.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      45: astore        4
      47: aload_1
      48: aload_3
      49: invokevirtual #16                 // Method org/springframework/http/MediaType.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      52: astore        5
      54: aload         4
      56: invokestatic  #17                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      59: ifeq          82
      62: aload         5
      64: invokestatic  #17                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      67: ifeq          82
      70: aload         4
      72: aload         5
      74: invokevirtual #18                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: goto          18
      85: iconst_1
      86: ireturn
}
