Compiled from "AbstractCachingViewResolver.java"
public abstract class org.springframework.web.servlet.view.AbstractCachingViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements org.springframework.web.servlet.ViewResolver {
  public static final int DEFAULT_CACHE_LIMIT;

  private static final org.springframework.web.servlet.View UNRESOLVED_VIEW;

  private static final org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter DEFAULT_CACHE_FILTER;

  private volatile int cacheLimit;

  private boolean cacheUnresolved;

  private org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter cacheFilter;

  private final java.util.Map<java.lang.Object, org.springframework.web.servlet.View> viewAccessCache;

  private final java.util.Map<java.lang.Object, org.springframework.web.servlet.View> viewCreationCache;

  public org.springframework.web.servlet.view.AbstractCachingViewResolver();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/context/support/WebApplicationObjectSupport."<init>":()V
       4: aload_0
       5: sipush        1024
       8: putfield      #4                  // Field cacheLimit:I
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field cacheUnresolved:Z
      16: aload_0
      17: getstatic     #6                  // Field DEFAULT_CACHE_FILTER:Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
      20: putfield      #7                  // Field cacheFilter:Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
      23: aload_0
      24: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      27: dup
      28: sipush        1024
      31: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      34: putfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      37: aload_0
      38: new           #10                 // class org/springframework/web/servlet/view/AbstractCachingViewResolver$2
      41: dup
      42: aload_0
      43: sipush        1024
      46: ldc           #11                 // float 0.75f
      48: iconst_1
      49: invokespecial #12                 // Method org/springframework/web/servlet/view/AbstractCachingViewResolver$2."<init>":(Lorg/springframework/web/servlet/view/AbstractCachingViewResolver;IFZ)V
      52: putfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      55: return

  public void setCacheLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field cacheLimit:I
       5: return

  public int getCacheLimit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheLimit:I
       4: ireturn

  public void setCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: sipush        1024
       8: goto          12
      11: iconst_0
      12: putfield      #4                  // Field cacheLimit:I
      15: return

  public boolean isCache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheLimit:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setCacheUnresolved(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field cacheUnresolved:Z
       5: return

  public boolean isCacheUnresolved();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheUnresolved:Z
       4: ireturn

  public void setCacheFilter(org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter);
    Code:
       0: aload_1
       1: ldc           #14                 // String CacheFilter must not be null
       3: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field cacheFilter:Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
      11: return

  public org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter getCacheFilter();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cacheFilter:Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
       4: areturn

  public org.springframework.web.servlet.View resolveViewName(java.lang.String, java.util.Locale) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isCache:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #17                 // Method createView:(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/web/servlet/View;
      13: areturn
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #18                 // Method getCacheKey:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      25: aload_3
      26: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #20                 // class org/springframework/web/servlet/View
      34: astore        4
      36: aload         4
      38: ifnonnull     158
      41: aload_0
      42: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      45: dup
      46: astore        5
      48: monitorenter
      49: aload_0
      50: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      53: aload_3
      54: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #20                 // class org/springframework/web/servlet/View
      62: astore        4
      64: aload         4
      66: ifnonnull     141
      69: aload_0
      70: aload_1
      71: aload_2
      72: invokevirtual #17                 // Method createView:(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/web/servlet/View;
      75: astore        4
      77: aload         4
      79: ifnonnull     94
      82: aload_0
      83: getfield      #5                  // Field cacheUnresolved:Z
      86: ifeq          94
      89: getstatic     #21                 // Field UNRESOLVED_VIEW:Lorg/springframework/web/servlet/View;
      92: astore        4
      94: aload         4
      96: ifnull        141
      99: aload_0
     100: getfield      #7                  // Field cacheFilter:Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
     103: aload         4
     105: aload_1
     106: aload_2
     107: invokeinterface #22,  4           // InterfaceMethod org/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter.filter:(Lorg/springframework/web/servlet/View;Ljava/lang/String;Ljava/util/Locale;)Z
     112: ifeq          141
     115: aload_0
     116: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
     119: aload_3
     120: aload         4
     122: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_0
     129: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
     132: aload_3
     133: aload         4
     135: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: aload         5
     143: monitorexit
     144: goto          155
     147: astore        6
     149: aload         5
     151: monitorexit
     152: aload         6
     154: athrow
     155: goto          201
     158: aload_0
     159: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
     162: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     167: ifeq          201
     170: aload_0
     171: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
     174: new           #26                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     181: aload_3
     182: invokestatic  #28                 // Method formatKey:(Ljava/lang/Object;)Ljava/lang/String;
     185: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: ldc           #30                 // String served from cache
     190: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     201: aload         4
     203: getstatic     #21                 // Field UNRESOLVED_VIEW:Lorg/springframework/web/servlet/View;
     206: if_acmpeq     214
     209: aload         4
     211: goto          215
     214: aconst_null
     215: areturn
    Exception table:
       from    to  target type
          49   144   147   any
         147   152   147   any

  private static java.lang.String formatKey(java.lang.Object);
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String View with key [
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #35                 // String ]
      18: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  protected java.lang.Object getCacheKey(java.lang.String, java.util.Locale);
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: bipush        95
      13: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public void removeFromCache(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isCache:()Z
       4: ifne          21
       7: aload_0
       8: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
      11: ldc           #37                 // String Caching is OFF (removal not necessary)
      13: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      18: goto          126
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #18                 // Method getCacheKey:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      32: dup
      33: astore        5
      35: monitorenter
      36: aload_0
      37: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      40: aload_3
      41: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      51: aload_3
      52: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      57: astore        4
      59: aload         5
      61: monitorexit
      62: goto          73
      65: astore        6
      67: aload         5
      69: monitorexit
      70: aload         6
      72: athrow
      73: aload_0
      74: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
      77: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      82: ifeq          126
      85: aload_0
      86: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
      89: new           #26                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      96: aload_3
      97: invokestatic  #28                 // Method formatKey:(Ljava/lang/Object;)Ljava/lang/String;
     100: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload         4
     105: ifnull        113
     108: ldc           #41                 // String cleared from cache
     110: goto          115
     113: ldc           #42                 // String not found in the cache
     115: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     126: return
    Exception table:
       from    to  target type
          36    62    65   any
          65    70    65   any

  public void clearCache();
    Code:
       0: aload_0
       1: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #44                 // String Clearing all views from the cache
       6: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      22: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
      27: aload_0
      28: getfield      #13                 // Field viewCreationCache:Ljava/util/Map;
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
      36: aload_1
      37: monitorexit
      38: goto          46
      41: astore_2
      42: aload_1
      43: monitorexit
      44: aload_2
      45: athrow
      46: return
    Exception table:
       from    to  target type
          18    38    41   any
          41    44    41   any

  protected org.springframework.web.servlet.View createView(java.lang.String, java.util.Locale) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #46                 // Method loadView:(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/web/servlet/View;
       6: areturn

  protected abstract org.springframework.web.servlet.View loadView(java.lang.String, java.util.Locale) throws java.lang.Exception;

  private static boolean lambda$static$0(org.springframework.web.servlet.View, java.lang.String, java.util.Locale);
    Code:
       0: iconst_1
       1: ireturn

  static java.util.Map access$000(org.springframework.web.servlet.view.AbstractCachingViewResolver);
    Code:
       0: aload_0
       1: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: new           #47                 // class org/springframework/web/servlet/view/AbstractCachingViewResolver$1
       3: dup
       4: invokespecial #48                 // Method org/springframework/web/servlet/view/AbstractCachingViewResolver$1."<init>":()V
       7: putstatic     #21                 // Field UNRESOLVED_VIEW:Lorg/springframework/web/servlet/View;
      10: invokedynamic #49,  0             // InvokeDynamic #0:filter:()Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
      15: putstatic     #6                  // Field DEFAULT_CACHE_FILTER:Lorg/springframework/web/servlet/view/AbstractCachingViewResolver$CacheFilter;
      18: return
}
