Compiled from "DefaultServerRequestBuilder.java"
class org.springframework.web.servlet.function.DefaultServerRequestBuilder$BuiltServerRequest implements org.springframework.web.servlet.function.ServerRequest {
  private final java.lang.String methodName;

  private final java.net.URI uri;

  private final org.springframework.http.HttpHeaders headers;

  private final javax.servlet.http.HttpServletRequest servletRequest;

  private org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie> cookies;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  private final byte[] body;

  private final java.util.List<org.springframework.http.converter.HttpMessageConverter<?>> messageConverters;

  public org.springframework.web.servlet.function.DefaultServerRequestBuilder$BuiltServerRequest(javax.servlet.http.HttpServletRequest, java.lang.String, java.net.URI, org.springframework.http.HttpHeaders, org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie>, java.util.Map<java.lang.String, java.lang.Object>, byte[], java.util.List<org.springframework.http.converter.HttpMessageConverter<?>>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field servletRequest:Ljavax/servlet/http/HttpServletRequest;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field methodName:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field uri:Ljava/net/URI;
      19: aload_0
      20: aload         4
      22: putfield      #1                  // Field headers:Lorg/springframework/http/HttpHeaders;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field cookies:Lorg/springframework/util/MultiValueMap;
      31: aload_0
      32: aload         6
      34: putfield      #8                  // Field attributes:Ljava/util/Map;
      37: aload_0
      38: aload         7
      40: putfield      #2                  // Field body:[B
      43: aload_0
      44: aload         8
      46: putfield      #9                  // Field messageConverters:Ljava/util/List;
      49: return

  public java.lang.String methodName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field methodName:Ljava/lang/String;
       4: areturn

  public java.net.URI uri();
    Code:
       0: aload_0
       1: getfield      #6                  // Field uri:Ljava/net/URI;
       4: areturn

  public org.springframework.web.util.UriBuilder uriBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field uri:Ljava/net/URI;
       4: invokestatic  #10                 // Method org/springframework/web/util/UriComponentsBuilder.fromUri:(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
       7: areturn

  public org.springframework.web.servlet.function.ServerRequest$Headers headers();
    Code:
       0: new           #11                 // class org/springframework/web/servlet/function/DefaultServerRequest$DefaultRequestHeaders
       3: dup
       4: aload_0
       5: getfield      #1                  // Field headers:Lorg/springframework/http/HttpHeaders;
       8: invokespecial #12                 // Method org/springframework/web/servlet/function/DefaultServerRequest$DefaultRequestHeaders."<init>":(Lorg/springframework/http/HttpHeaders;)V
      11: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, javax.servlet.http.Cookie> cookies();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cookies:Lorg/springframework/util/MultiValueMap;
       4: areturn

  public java.util.Optional<java.net.InetSocketAddress> remoteAddress();
    Code:
       0: invokestatic  #13                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public java.util.List<org.springframework.http.converter.HttpMessageConverter<?>> messageConverters();
    Code:
       0: aload_0
       1: getfield      #9                  // Field messageConverters:Ljava/util/List;
       4: areturn

  public <T> T body(java.lang.Class<T>) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokespecial #14                 // Method bodyInternal:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/Object;
       6: areturn

  public <T> T body(org.springframework.core.ParameterizedTypeReference<T>) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/springframework/core/ParameterizedTypeReference.getType:()Ljava/lang/reflect/Type;
       4: astore_2
       5: aload_0
       6: aload_2
       7: aload_2
       8: invokestatic  #16                 // Method org/springframework/web/servlet/function/DefaultServerRequest.bodyClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
      11: invokespecial #14                 // Method bodyInternal:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/Object;
      14: areturn

  private <T> T bodyInternal(java.lang.reflect.Type, java.lang.Class<?>) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: new           #17                 // class org/springframework/web/servlet/function/DefaultServerRequestBuilder$BuiltServerRequest$BuiltInputMessage
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #18                 // Method org/springframework/web/servlet/function/DefaultServerRequestBuilder$BuiltServerRequest$BuiltInputMessage."<init>":(Lorg/springframework/web/servlet/function/DefaultServerRequestBuilder$BuiltServerRequest;Lorg/springframework/web/servlet/function/DefaultServerRequestBuilder$1;)V
       9: astore_3
      10: aload_0
      11: invokevirtual #19                 // Method headers:()Lorg/springframework/web/servlet/function/ServerRequest$Headers;
      14: invokeinterface #20,  1           // InterfaceMethod org/springframework/web/servlet/function/ServerRequest$Headers.contentType:()Ljava/util/Optional;
      19: getstatic     #21                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      22: invokevirtual #22                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #23                 // class org/springframework/http/MediaType
      28: astore        4
      30: aload_0
      31: getfield      #9                  // Field messageConverters:Ljava/util/List;
      34: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          137
      51: aload         5
      53: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #27                 // class org/springframework/http/converter/HttpMessageConverter
      61: astore        6
      63: aload         6
      65: instanceof    #28                 // class org/springframework/http/converter/GenericHttpMessageConverter
      68: ifeq          103
      71: aload         6
      73: checkcast     #28                 // class org/springframework/http/converter/GenericHttpMessageConverter
      76: astore        7
      78: aload         7
      80: aload_1
      81: aload_2
      82: aload         4
      84: invokeinterface #29,  4           // InterfaceMethod org/springframework/http/converter/GenericHttpMessageConverter.canRead:(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
      89: ifeq          103
      92: aload         7
      94: aload_1
      95: aload_2
      96: aload_3
      97: invokeinterface #30,  4           // InterfaceMethod org/springframework/http/converter/GenericHttpMessageConverter.read:(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
     102: areturn
     103: aload         6
     105: aload_2
     106: aload         4
     108: invokeinterface #31,  3           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.canRead:(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
     113: ifeq          134
     116: aload         6
     118: astore        7
     120: aload_2
     121: astore        8
     123: aload         7
     125: aload         8
     127: aload_3
     128: invokeinterface #32,  3           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.read:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
     133: areturn
     134: goto          41
     137: new           #33                 // class org/springframework/web/HttpMediaTypeNotSupportedException
     140: dup
     141: aload         4
     143: invokestatic  #34                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     146: invokespecial #35                 // Method org/springframework/web/HttpMediaTypeNotSupportedException."<init>":(Lorg/springframework/http/MediaType;Ljava/util/List;)V
     149: athrow

  public java.util.Map<java.lang.String, java.lang.Object> attributes();
    Code:
       0: aload_0
       1: getfield      #8                  // Field attributes:Ljava/util/Map;
       4: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> params();
    Code:
       0: new           #36                 // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: invokespecial #37                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
       7: areturn

  public java.util.Map<java.lang.String, java.lang.String> pathVariables();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method attributes:()Ljava/util/Map;
       4: getstatic     #39                 // Field org/springframework/web/servlet/function/RouterFunctions.URI_TEMPLATE_VARIABLES_ATTRIBUTE:Ljava/lang/String;
       7: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #41                 // class java/util/Map
      15: astore_1
      16: aload_1
      17: ifnull        22
      20: aload_1
      21: areturn
      22: invokestatic  #42                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      25: areturn

  public javax.servlet.http.HttpSession session();
    Code:
       0: aload_0
       1: getfield      #4                  // Field servletRequest:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #43,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:()Ljavax/servlet/http/HttpSession;
       9: areturn

  public java.util.Optional<java.security.Principal> principal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field servletRequest:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getUserPrincipal:()Ljava/security/Principal;
       9: invokestatic  #45                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public javax.servlet.http.HttpServletRequest servletRequest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field servletRequest:Ljavax/servlet/http/HttpServletRequest;
       4: areturn

  static byte[] access$100(org.springframework.web.servlet.function.DefaultServerRequestBuilder$BuiltServerRequest);
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:[B
       4: areturn

  static org.springframework.http.HttpHeaders access$200(org.springframework.web.servlet.function.DefaultServerRequestBuilder$BuiltServerRequest);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: areturn
}
