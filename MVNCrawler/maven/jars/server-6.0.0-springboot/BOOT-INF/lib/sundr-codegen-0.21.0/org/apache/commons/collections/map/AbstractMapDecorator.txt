Compiled from "AbstractMapDecorator.java"
public abstract class org.apache.commons.collections.map.AbstractMapDecorator implements java.util.Map {
  protected transient java.util.Map map;

  protected org.apache.commons.collections.map.AbstractMapDecorator();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.collections.map.AbstractMapDecorator(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #18                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #20                 // String Map must not be null
      14: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #25                 // Field map:Ljava/util/Map;
      23: return

  protected java.util.Map getMap();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #55,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #70,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: getfield      #25                 // Field map:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #77,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      17: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokeinterface #81,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #25                 // Field map:Ljava/util/Map;
       4: invokevirtual #85                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
