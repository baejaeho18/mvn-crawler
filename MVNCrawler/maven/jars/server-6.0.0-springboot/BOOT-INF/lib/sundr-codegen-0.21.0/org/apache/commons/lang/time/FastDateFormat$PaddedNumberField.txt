Compiled from "FastDateFormat.java"
class org.apache.commons.lang.time.FastDateFormat$PaddedNumberField implements org.apache.commons.lang.time.FastDateFormat$NumberRule {
  private final int mField;

  private final int mSize;

  org.apache.commons.lang.time.FastDateFormat$PaddedNumberField(int, int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: iload_2
       5: iconst_3
       6: if_icmpge     17
       9: new           #21                 // class java/lang/IllegalArgumentException
      12: dup
      13: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":()V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #24                 // Field mField:I
      22: aload_0
      23: iload_2
      24: putfield      #26                 // Field mSize:I
      27: return

  public int estimateLength();
    Code:
       0: iconst_4
       1: ireturn

  public void appendTo(java.lang.StringBuffer, java.util.Calendar);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #24                 // Field mField:I
       7: invokevirtual #40                 // Method java/util/Calendar.get:(I)I
      10: invokevirtual #43                 // Method appendTo:(Ljava/lang/StringBuffer;I)V
      13: return

  public final void appendTo(java.lang.StringBuffer, int);
    Code:
       0: iload_2
       1: bipush        100
       3: if_icmpge     58
       6: aload_0
       7: getfield      #26                 // Field mSize:I
      10: istore_3
      11: iinc          3, -1
      14: iload_3
      15: iconst_2
      16: if_icmplt     29
      19: aload_1
      20: bipush        48
      22: invokevirtual #53                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      25: pop
      26: goto          11
      29: aload_1
      30: iload_2
      31: bipush        10
      33: idiv
      34: bipush        48
      36: iadd
      37: i2c
      38: invokevirtual #53                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      41: pop
      42: aload_1
      43: iload_2
      44: bipush        10
      46: irem
      47: bipush        48
      49: iadd
      50: i2c
      51: invokevirtual #53                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      54: pop
      55: goto          129
      58: iload_2
      59: sipush        1000
      62: if_icmpge     70
      65: iconst_3
      66: istore_3
      67: goto          95
      70: iload_2
      71: iconst_m1
      72: if_icmple     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ldc           #55                 // String Negative values should not be possible
      82: iload_2
      83: i2l
      84: invokestatic  #61                 // Method org/apache/commons/lang/Validate.isTrue:(ZLjava/lang/String;J)V
      87: iload_2
      88: invokestatic  #67                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      91: invokevirtual #72                 // Method java/lang/String.length:()I
      94: istore_3
      95: aload_0
      96: getfield      #26                 // Field mSize:I
      99: istore        4
     101: iinc          4, -1
     104: iload         4
     106: iload_3
     107: if_icmplt     120
     110: aload_1
     111: bipush        48
     113: invokevirtual #53                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     116: pop
     117: goto          101
     120: aload_1
     121: iload_2
     122: invokestatic  #67                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     125: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     128: pop
     129: return
}
