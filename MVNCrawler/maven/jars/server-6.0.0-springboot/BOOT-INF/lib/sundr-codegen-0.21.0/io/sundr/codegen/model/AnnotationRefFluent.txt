Compiled from "AnnotationRefFluent.java"
public interface io.sundr.codegen.model.AnnotationRefFluent<A extends io.sundr.codegen.model.AnnotationRefFluent<A>> extends io.sundr.codegen.model.AttributeSupportFluent<A> {
  public abstract io.sundr.codegen.model.ClassRef getClassRef();

  public abstract io.sundr.codegen.model.ClassRef buildClassRef();

  public abstract A withClassRef(io.sundr.codegen.model.ClassRef);

  public abstract java.lang.Boolean hasClassRef();

  public abstract io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> withNewClassRef();

  public abstract io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> withNewClassRefLike(io.sundr.codegen.model.ClassRef);

  public abstract io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> editClassRef();

  public abstract io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> editOrNewClassRef();

  public abstract io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> editOrNewClassRefLike(io.sundr.codegen.model.ClassRef);

  public abstract A addToParameters(java.lang.String, java.lang.Object);

  public abstract A addToParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract A removeFromParameters(java.lang.String);

  public abstract A removeFromParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.util.Map<java.lang.String, java.lang.Object> getParameters();

  public abstract A withParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.lang.Boolean hasParameters();
}
