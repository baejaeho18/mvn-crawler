Compiled from "WildcardType.java"
public final class io.sundr.shaded.com.github.javaparser.ast.type.WildcardType extends io.sundr.shaded.com.github.javaparser.ast.type.Type {
  private io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType ext;

  private io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType sup;

  public io.sundr.shaded.com.github.javaparser.ast.type.WildcardType();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/sundr/shaded/com/github/javaparser/ast/type/Type."<init>":()V
       4: return

  public io.sundr.shaded.com.github.javaparser.ast.type.WildcardType(io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/sundr/shaded/com/github/javaparser/ast/type/Type."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #18                 // Method setExtends:(Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;)V
       9: return

  public io.sundr.shaded.com.github.javaparser.ast.type.WildcardType(io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType, io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/sundr/shaded/com/github/javaparser/ast/type/Type."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #18                 // Method setExtends:(Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #22                 // Method setSuper:(Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;)V
      14: return

  public io.sundr.shaded.com.github.javaparser.ast.type.WildcardType(int, int, int, int, io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType, io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType);
    Code:
       0: aload_0
       1: new           #26                 // class io/sundr/shaded/com/github/javaparser/Range
       4: dup
       5: iload_1
       6: iload_2
       7: invokestatic  #32                 // Method io/sundr/shaded/com/github/javaparser/Position.pos:(II)Lio/sundr/shaded/com/github/javaparser/Position;
      10: iload_3
      11: iload         4
      13: invokestatic  #32                 // Method io/sundr/shaded/com/github/javaparser/Position.pos:(II)Lio/sundr/shaded/com/github/javaparser/Position;
      16: invokespecial #35                 // Method io/sundr/shaded/com/github/javaparser/Range."<init>":(Lio/sundr/shaded/com/github/javaparser/Position;Lio/sundr/shaded/com/github/javaparser/Position;)V
      19: aload         5
      21: aload         6
      23: invokespecial #38                 // Method "<init>":(Lio/sundr/shaded/com/github/javaparser/Range;Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;)V
      26: return

  public io.sundr.shaded.com.github.javaparser.ast.type.WildcardType(io.sundr.shaded.com.github.javaparser.Range, io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType, io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method io/sundr/shaded/com/github/javaparser/ast/type/Type."<init>":(Lio/sundr/shaded/com/github/javaparser/Range;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #18                 // Method setExtends:(Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;)V
      10: aload_0
      11: aload_3
      12: invokevirtual #22                 // Method setSuper:(Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;)V
      15: return

  public <R, A> R accept(io.sundr.shaded.com.github.javaparser.ast.visitor.GenericVisitor<R, A>, A);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #56,  3           // InterfaceMethod io/sundr/shaded/com/github/javaparser/ast/visitor/GenericVisitor.visit:(Lio/sundr/shaded/com/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public <A> void accept(io.sundr.shaded.com.github.javaparser.ast.visitor.VoidVisitor<A>, A);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #68,  3           // InterfaceMethod io/sundr/shaded/com/github/javaparser/ast/visitor/VoidVisitor.visit:(Lio/sundr/shaded/com/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)V
       8: return

  public io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType getExtends();
    Code:
       0: aload_0
       1: getfield      #74                 // Field ext:Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;
       4: areturn

  public io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType getSuper();
    Code:
       0: aload_0
       1: getfield      #77                 // Field sup:Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;
       4: areturn

  public void setExtends(io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field ext:Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;
       5: aload_0
       6: aload_0
       7: getfield      #74                 // Field ext:Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;
      10: invokevirtual #81                 // Method setAsParentNodeOf:(Lio/sundr/shaded/com/github/javaparser/ast/Node;)V
      13: return

  public void setSuper(io.sundr.shaded.com.github.javaparser.ast.type.ReferenceType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field sup:Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;
       5: aload_0
       6: aload_0
       7: getfield      #77                 // Field sup:Lio/sundr/shaded/com/github/javaparser/ast/type/ReferenceType;
      10: invokevirtual #81                 // Method setAsParentNodeOf:(Lio/sundr/shaded/com/github/javaparser/ast/Node;)V
      13: return
}
