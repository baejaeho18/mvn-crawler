Compiled from "TypeUtils.java"
public final class io.sundr.codegen.utils.TypeUtils {
  private static final java.lang.String JAVA_LANG_OBJECT;

  private static final java.lang.String JAVA_UTIL_OPTIONAL;

  private static final java.lang.String JAVA_UTIL_OPTIONAL_INT;

  private static final java.lang.String JAVA_UTIL_OPTIONAL_DOUBLE;

  private static final java.lang.String JAVA_UTIL_OPTIONAL_LONG;

  private static final java.lang.String OTHER;

  private static final java.lang.String DOT_REGEX;

  private io.sundr.codegen.utils.TypeUtils();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isInstanceOf(io.sundr.codegen.model.TypeRef, io.sundr.codegen.model.TypeDef, io.sundr.Function<io.sundr.codegen.model.TypeRef, java.lang.Boolean>);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifeq          147
       7: aload_0
       8: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      11: astore_3
      12: aload_3
      13: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      16: astore        4
      18: aload         4
      20: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      27: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: aload         4
      37: invokevirtual #64                 // Method io/sundr/codegen/model/TypeDef.getImplementsList:()Ljava/util/List;
      40: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore        5
      47: aload         5
      49: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          91
      57: aload         5
      59: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #82                 // class io/sundr/codegen/model/TypeRef
      67: astore        6
      69: aload_2
      70: aload         6
      72: invokeinterface #88,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #90                 // class java/lang/Boolean
      80: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
      83: ifeq          88
      86: iconst_1
      87: ireturn
      88: goto          47
      91: aload         4
      93: invokevirtual #96                 // Method io/sundr/codegen/model/TypeDef.getExtendsList:()Ljava/util/List;
      96: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     101: astore        5
     103: aload         5
     105: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          147
     113: aload         5
     115: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #82                 // class io/sundr/codegen/model/TypeRef
     123: astore        6
     125: aload_2
     126: aload         6
     128: invokeinterface #88,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     133: checkcast     #90                 // class java/lang/Boolean
     136: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
     139: ifeq          144
     142: iconst_1
     143: ireturn
     144: goto          103
     147: iconst_0
     148: ireturn

  public static io.sundr.codegen.model.TypeParamDef getParameterDefinition(io.sundr.codegen.model.TypeRef, java.util.Collection<io.sundr.codegen.model.TypeParamDef>);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifeq          18
       7: aload_0
       8: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      11: invokevirtual #113                // Method io/sundr/codegen/model/ClassRef.getName:()Ljava/lang/String;
      14: astore_2
      15: goto          59
      18: aload_0
      19: instanceof    #115                // class io/sundr/codegen/model/TypeParamRef
      22: ifeq          36
      25: aload_0
      26: checkcast     #115                // class io/sundr/codegen/model/TypeParamRef
      29: invokevirtual #116                // Method io/sundr/codegen/model/TypeParamRef.getName:()Ljava/lang/String;
      32: astore_2
      33: goto          59
      36: aload_0
      37: instanceof    #118                // class io/sundr/codegen/model/PrimitiveRef
      40: ifeq          54
      43: aload_0
      44: checkcast     #118                // class io/sundr/codegen/model/PrimitiveRef
      47: invokevirtual #119                // Method io/sundr/codegen/model/PrimitiveRef.getName:()Ljava/lang/String;
      50: astore_2
      51: goto          59
      54: aload_0
      55: invokevirtual #122                // Method java/lang/Object.toString:()Ljava/lang/String;
      58: astore_2
      59: aload_1
      60: invokeinterface #125,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      65: astore_3
      66: aload_3
      67: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          104
      75: aload_3
      76: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #127                // class io/sundr/codegen/model/TypeParamDef
      84: astore        4
      86: aload         4
      88: invokevirtual #128                // Method io/sundr/codegen/model/TypeParamDef.getName:()Ljava/lang/String;
      91: aload_2
      92: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      95: ifeq          101
      98: aload         4
     100: areturn
     101: goto          66
     104: aconst_null
     105: areturn

  public static io.sundr.codegen.model.TypeParamRef newTypeParamRef(java.lang.String);
    Code:
       0: new           #139                // class io/sundr/codegen/model/TypeParamRefBuilder
       3: dup
       4: invokespecial #140                // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #144                // Method io/sundr/codegen/model/TypeParamRefBuilder.withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamRefFluent;
      11: checkcast     #139                // class io/sundr/codegen/model/TypeParamRefBuilder
      14: invokevirtual #148                // Method io/sundr/codegen/model/TypeParamRefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamRef;
      17: areturn

  public static io.sundr.codegen.model.TypeParamDef newTypeParamDef(java.lang.String);
    Code:
       0: new           #153                // class io/sundr/codegen/model/TypeParamDefBuilder
       3: dup
       4: invokespecial #154                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #157                // Method io/sundr/codegen/model/TypeParamDefBuilder.withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      11: checkcast     #153                // class io/sundr/codegen/model/TypeParamDefBuilder
      14: invokevirtual #160                // Method io/sundr/codegen/model/TypeParamDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamDef;
      17: areturn

  public static io.sundr.codegen.model.TypeDef unwrapGeneric(io.sundr.codegen.model.TypeDef);
    Code:
       0: new           #164                // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #167                // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: iconst_0
       9: anewarray     #127                // class io/sundr/codegen/model/TypeParamDef
      12: invokevirtual #171                // Method io/sundr/codegen/model/TypeDefBuilder.withParameters:([Lio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/TypeDefFluent;
      15: checkcast     #164                // class io/sundr/codegen/model/TypeDefBuilder
      18: invokevirtual #174                // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      21: areturn

  public static io.sundr.codegen.model.TypeDef typeGenericOf(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.TypeParamDef...);
    Code:
       0: new           #164                // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #167                // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: aload_1
       9: invokevirtual #171                // Method io/sundr/codegen/model/TypeDefBuilder.withParameters:([Lio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/TypeDefFluent;
      12: checkcast     #164                // class io/sundr/codegen/model/TypeDefBuilder
      15: invokevirtual #174                // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      18: areturn

  public static io.sundr.codegen.model.TypeDef typeExtends(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #164                // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #167                // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: iconst_1
       9: anewarray     #44                 // class io/sundr/codegen/model/ClassRef
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokevirtual #184                // Method io/sundr/codegen/model/TypeDefBuilder.withExtendsList:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeDefFluent;
      19: checkcast     #164                // class io/sundr/codegen/model/TypeDefBuilder
      22: invokevirtual #174                // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      25: areturn

  public static io.sundr.codegen.model.TypeDef typeImplements(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.ClassRef...);
    Code:
       0: new           #164                // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #167                // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: aload_1
       9: invokevirtual #190                // Method io/sundr/codegen/model/TypeDefBuilder.withImplementsList:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeDefFluent;
      12: checkcast     #164                // class io/sundr/codegen/model/TypeDefBuilder
      15: invokevirtual #174                // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      18: areturn

  public static int modifiersToInt(javax.lang.model.element.Modifier...);
    Code:
       0: aload_0
       1: invokestatic  #199                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #202                // Method modifiersToInt:(Ljava/util/Collection;)I
       7: ireturn

  public static int modifiersToInt(java.util.Collection<javax.lang.model.element.Modifier>);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokeinterface #125,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          160
      18: aload_2
      19: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #206                // class javax/lang/model/element/Modifier
      27: astore_3
      28: getstatic     #210                // Field io/sundr/codegen/utils/TypeUtils$1.$SwitchMap$javax$lang$model$element$Modifier:[I
      31: aload_3
      32: invokevirtual #214                // Method javax/lang/model/element/Modifier.ordinal:()I
      35: iaload
      36: tableswitch   { // 1 to 9
                     1: 88
                     2: 97
                     3: 105
                     4: 114
                     5: 121
                     6: 128
                     7: 135
                     8: 143
                     9: 151
               default: 157
          }
      88: iload_1
      89: sipush        1024
      92: ior
      93: istore_1
      94: goto          157
      97: iload_1
      98: bipush        16
     100: ior
     101: istore_1
     102: goto          157
     105: iload_1
     106: sipush        256
     109: ior
     110: istore_1
     111: goto          157
     114: iload_1
     115: iconst_2
     116: ior
     117: istore_1
     118: goto          157
     121: iload_1
     122: iconst_4
     123: ior
     124: istore_1
     125: goto          157
     128: iload_1
     129: iconst_1
     130: ior
     131: istore_1
     132: goto          157
     135: iload_1
     136: bipush        8
     138: ior
     139: istore_1
     140: goto          157
     143: iload_1
     144: bipush        32
     146: ior
     147: istore_1
     148: goto          157
     151: iload_1
     152: sipush        128
     155: ior
     156: istore_1
     157: goto          9
     160: iload_1
     161: ireturn

  public static java.lang.String fullyQualifiedNameDiff(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #34                 // String \\.
       3: invokevirtual #225                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: ldc           #34                 // String \\.
      10: invokevirtual #225                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      13: astore_3
      14: aload_2
      15: arraylength
      16: iconst_1
      17: isub
      18: istore        4
      20: aload_3
      21: arraylength
      22: iconst_1
      23: isub
      24: istore        5
      26: iload         4
      28: iflt          64
      31: iload         5
      33: iflt          64
      36: aload_2
      37: iload         4
      39: aaload
      40: aload_3
      41: iload         5
      43: aaload
      44: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          55
      50: aload_3
      51: iload         5
      53: aaload
      54: areturn
      55: iinc          5, -1
      58: iinc          4, -1
      61: goto          26
      64: ldc           #31                 // String other
      66: areturn

  public static boolean isAbstract(io.sundr.codegen.model.TypeRef);
    Code:
       0: invokestatic  #241                // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #244                // Method io/sundr/codegen/DefinitionRepository.getDefinition:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/TypeDef;
       9: astore_2
      10: aload_2
      11: ifnonnull     29
      14: aload_0
      15: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
      18: ifeq          29
      21: aload_0
      22: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      25: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      28: astore_2
      29: aload_2
      30: ifnull        40
      33: aload_2
      34: invokevirtual #246                // Method io/sundr/codegen/model/TypeDef.isAbstract:()Z
      37: goto          41
      40: iconst_0
      41: ireturn

  public static boolean isConcrete(io.sundr.codegen.model.TypeRef);
    Code:
       0: invokestatic  #241                // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #244                // Method io/sundr/codegen/DefinitionRepository.getDefinition:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/TypeDef;
       9: astore_2
      10: aload_2
      11: ifnonnull     29
      14: aload_0
      15: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
      18: ifeq          29
      21: aload_0
      22: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      25: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      28: astore_2
      29: aload_2
      30: ifnull        55
      33: aload_2
      34: invokevirtual #246                // Method io/sundr/codegen/model/TypeDef.isAbstract:()Z
      37: ifne          51
      40: aload_2
      41: invokevirtual #253                // Method io/sundr/codegen/model/TypeDef.isInterface:()Z
      44: ifne          51
      47: iconst_1
      48: goto          56
      51: iconst_0
      52: goto          56
      55: iconst_0
      56: ireturn

  public static boolean isPrimitive(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #118                // class io/sundr/codegen/model/PrimitiveRef
       4: ireturn

  public static boolean isMap(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #260                // Field io/sundr/codegen/functions/Collections.IS_MAP:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #88,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #90                 // class java/lang/Boolean
      12: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isList(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #264                // Field io/sundr/codegen/functions/Collections.IS_LIST:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #88,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #90                 // class java/lang/Boolean
      12: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isSet(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #268                // Field io/sundr/codegen/functions/Collections.IS_SET:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #88,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #90                 // class java/lang/Boolean
      12: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isCollection(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #272                // Field io/sundr/codegen/functions/Collections.IS_COLLECTION:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #88,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #90                 // class java/lang/Boolean
      12: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isBoolean(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #118                // class io/sundr/codegen/model/PrimitiveRef
       4: ifeq          15
       7: getstatic     #278                // Field io/sundr/codegen/Constants.PRIMITIVE_BOOLEAN_REF:Lio/sundr/codegen/model/TypeRef;
      10: aload_0
      11: invokevirtual #279                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ireturn
      15: aload_0
      16: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: getstatic     #282                // Field io/sundr/codegen/Constants.BOOLEAN_REF:Lio/sundr/codegen/model/TypeRef;
      27: aload_0
      28: invokevirtual #279                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ireturn

  public static boolean isArray(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifeq          23
       7: aload_0
       8: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      11: invokevirtual #286                // Method io/sundr/codegen/model/ClassRef.getDimensions:()I
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
      23: aload_0
      24: instanceof    #118                // class io/sundr/codegen/model/PrimitiveRef
      27: ifeq          46
      30: aload_0
      31: checkcast     #118                // class io/sundr/codegen/model/PrimitiveRef
      34: invokevirtual #287                // Method io/sundr/codegen/model/PrimitiveRef.getDimensions:()I
      37: ifle          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn
      46: aload_0
      47: instanceof    #115                // class io/sundr/codegen/model/TypeParamRef
      50: ifeq          69
      53: aload_0
      54: checkcast     #115                // class io/sundr/codegen/model/TypeParamRef
      57: invokevirtual #288                // Method io/sundr/codegen/model/TypeParamRef.getDimensions:()I
      60: ifle          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: iconst_0
      70: ireturn

  public static boolean isOptional(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #19                 // String java.util.Optional
      11: aload_0
      12: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean isOptionalInt(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #22                 // String java.util.OptionalInt
      11: aload_0
      12: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean isOptionalDouble(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #25                 // String java.util.OptionalDouble
      11: aload_0
      12: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean isOptionalLong(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #28                 // String java.util.OptionalLong
      11: aload_0
      12: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean hasMethod(io.sundr.codegen.model.TypeDef, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #298                // Method unrollHierarchy:(Lio/sundr/codegen/model/TypeDef;)Ljava/util/Set;
       4: invokeinterface #304,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #321,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokeinterface #327,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: aload_1
      20: invokedynamic #339,  0            // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      25: invokeinterface #343,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      30: invokeinterface #347,  1          // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      35: invokevirtual #352                // Method java/util/Optional.isPresent:()Z
      38: ireturn

  public static boolean hasProperty(io.sundr.codegen.model.TypeDef, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #298                // Method unrollHierarchy:(Lio/sundr/codegen/model/TypeDef;)Ljava/util/Set;
       4: invokeinterface #304,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #360,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      14: invokeinterface #327,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: aload_1
      20: invokedynamic #368,  0            // InvokeDynamic #3:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      25: invokeinterface #343,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      30: invokeinterface #347,  1          // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      35: invokevirtual #352                // Method java/util/Optional.isPresent:()Z
      38: ireturn

  public static java.util.List<io.sundr.codegen.model.Property> allProperties(io.sundr.codegen.model.TypeDef);
    Code:
       0: aload_0
       1: invokestatic  #298                // Method unrollHierarchy:(Lio/sundr/codegen/model/TypeDef;)Ljava/util/Set;
       4: invokeinterface #304,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #376,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      14: invokeinterface #327,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #382                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #386,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #66                 // class java/util/List
      30: areturn

  public static java.util.Set<io.sundr.codegen.model.TypeDef> unrollHierarchy(io.sundr.codegen.model.TypeDef);
    Code:
       0: getstatic     #389                // Field io/sundr/codegen/model/TypeDef.OBJECT:Lio/sundr/codegen/model/TypeDef;
       3: aload_0
       4: invokevirtual #390                // Method io/sundr/codegen/model/TypeDef.equals:(Ljava/lang/Object;)Z
       7: ifeq          18
      10: new           #392                // class java/util/HashSet
      13: dup
      14: invokespecial #393                // Method java/util/HashSet."<init>":()V
      17: areturn
      18: new           #392                // class java/util/HashSet
      21: dup
      22: invokespecial #393                // Method java/util/HashSet."<init>":()V
      25: astore_1
      26: aload_1
      27: aload_0
      28: invokeinterface #396,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: aload_0
      36: invokevirtual #96                 // Method io/sundr/codegen/model/TypeDef.getExtendsList:()Ljava/util/List;
      39: invokeinterface #397,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      44: invokedynamic #404,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      49: invokeinterface #327,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      54: invokestatic  #407                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      57: invokeinterface #386,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      62: checkcast     #124                // class java/util/Collection
      65: invokeinterface #411,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      70: pop
      71: aload_1
      72: areturn

  public static java.lang.String toClassName(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #56                 // class java/lang/String
       4: ifeq          12
       7: aload_0
       8: checkcast     #56                 // class java/lang/String
      11: areturn
      12: aload_0
      13: instanceof    #44                 // class io/sundr/codegen/model/ClassRef
      16: ifeq          27
      19: aload_0
      20: checkcast     #44                 // class io/sundr/codegen/model/ClassRef
      23: invokevirtual #417                // Method io/sundr/codegen/model/ClassRef.getFullyQualifiedName:()Ljava/lang/String;
      26: areturn
      27: aload_0
      28: instanceof    #50                 // class io/sundr/codegen/model/TypeDef
      31: ifeq          42
      34: aload_0
      35: checkcast     #50                 // class io/sundr/codegen/model/TypeDef
      38: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      41: areturn
      42: aload_0
      43: invokestatic  #420                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      46: areturn

  public static void visitParents(io.sundr.codegen.model.TypeDef, java.util.List<io.sundr.codegen.model.TypeDef>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #426                // class java/util/ArrayList
       5: dup
       6: invokespecial #427                // Method java/util/ArrayList."<init>":()V
       9: invokestatic  #430                // Method visitParents:(Lio/sundr/codegen/model/TypeDef;Ljava/util/List;Ljava/util/List;)V
      12: return

  public static void visitParents(io.sundr.codegen.model.TypeDef, java.util.List<io.sundr.codegen.model.TypeDef>, java.util.List<io.sundr.codegen.model.TypeDef>);
    Code:
       0: aload_0
       1: ifnull        16
       4: ldc           #16                 // String java.lang.Object
       6: aload_0
       7: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      10: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          17
      16: return
      17: aload_2
      18: aload_0
      19: invokeinterface #436,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      24: ifeq          28
      27: return
      28: aload_2
      29: aload_0
      30: invokeinterface #437,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: new           #426                // class java/util/ArrayList
      39: dup
      40: invokespecial #427                // Method java/util/ArrayList."<init>":()V
      43: astore_3
      44: aload_3
      45: aload_0
      46: invokevirtual #64                 // Method io/sundr/codegen/model/TypeDef.getImplementsList:()Ljava/util/List;
      49: invokeinterface #438,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: aload_3
      56: aload_0
      57: invokevirtual #96                 // Method io/sundr/codegen/model/TypeDef.getExtendsList:()Ljava/util/List;
      60: invokeinterface #438,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      65: pop
      66: aload_3
      67: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore        4
      74: aload         4
      76: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          116
      84: aload         4
      86: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #82                 // class io/sundr/codegen/model/TypeRef
      94: astore        5
      96: invokestatic  #241                // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
      99: aload         5
     101: invokevirtual #244                // Method io/sundr/codegen/DefinitionRepository.getDefinition:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/TypeDef;
     104: astore        6
     106: aload         6
     108: aload_1
     109: aload_2
     110: invokestatic  #430                // Method visitParents:(Lio/sundr/codegen/model/TypeDef;Ljava/util/List;Ljava/util/List;)V
     113: goto          74
     116: aload_1
     117: aload_0
     118: invokeinterface #437,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: return

  private static java.util.stream.Stream lambda$unrollHierarchy$5(io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
       4: invokestatic  #298                // Method unrollHierarchy:(Lio/sundr/codegen/model/TypeDef;)Ljava/util/Set;
       7: invokeinterface #304,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      12: areturn

  private static java.util.stream.Stream lambda$allProperties$4(io.sundr.codegen.model.TypeDef);
    Code:
       0: aload_0
       1: invokevirtual #447                // Method io/sundr/codegen/model/TypeDef.getProperties:()Ljava/util/List;
       4: invokeinterface #397,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn

  private static boolean lambda$hasProperty$3(java.lang.String, io.sundr.codegen.model.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #451                // Method io/sundr/codegen/model/Property.getName:()Ljava/lang/String;
       5: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.util.stream.Stream lambda$hasProperty$2(io.sundr.codegen.model.TypeDef);
    Code:
       0: aload_0
       1: invokevirtual #447                // Method io/sundr/codegen/model/TypeDef.getProperties:()Ljava/util/List;
       4: invokeinterface #397,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn

  private static boolean lambda$hasMethod$1(java.lang.String, io.sundr.codegen.model.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #456                // Method io/sundr/codegen/model/Method.getName:()Ljava/lang/String;
       5: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.util.stream.Stream lambda$hasMethod$0(io.sundr.codegen.model.TypeDef);
    Code:
       0: aload_0
       1: invokevirtual #460                // Method io/sundr/codegen/model/TypeDef.getMethods:()Ljava/util/List;
       4: invokeinterface #397,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn
}
