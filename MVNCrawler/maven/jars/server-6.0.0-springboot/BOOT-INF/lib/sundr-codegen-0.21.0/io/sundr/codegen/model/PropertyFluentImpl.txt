Compiled from "PropertyFluentImpl.java"
public class io.sundr.codegen.model.PropertyFluentImpl<A extends io.sundr.codegen.model.PropertyFluent<A>> extends io.sundr.codegen.model.ModifierSupportFluentImpl<A> implements io.sundr.codegen.model.PropertyFluent<A> {
  private java.util.List<io.sundr.codegen.model.AnnotationRefBuilder> annotations;

  private io.sundr.builder.VisitableBuilder<? extends io.sundr.codegen.model.TypeRef, ?> typeRef;

  private java.lang.String name;

  public io.sundr.codegen.model.PropertyFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method io/sundr/codegen/model/ModifierSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #58                 // class java/util/ArrayList
       8: dup
       9: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #61                 // Field annotations:Ljava/util/List;
      15: return

  public io.sundr.codegen.model.PropertyFluentImpl(io.sundr.codegen.model.Property);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method io/sundr/codegen/model/ModifierSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #58                 // class java/util/ArrayList
       8: dup
       9: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #61                 // Field annotations:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokevirtual #71                 // Method io/sundr/codegen/model/Property.getAnnotations:()Ljava/util/List;
      20: invokevirtual #75                 // Method withAnnotations:(Ljava/util/List;)Lio/sundr/codegen/model/PropertyFluent;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #79                 // Method io/sundr/codegen/model/Property.getTypeRef:()Lio/sundr/codegen/model/TypeRef;
      29: invokevirtual #83                 // Method withTypeRef:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/PropertyFluent;
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #87                 // Method io/sundr/codegen/model/Property.getName:()Ljava/lang/String;
      38: invokevirtual #91                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/PropertyFluent;
      41: pop
      42: aload_0
      43: aload_1
      44: invokevirtual #95                 // Method io/sundr/codegen/model/Property.getModifiers:()I
      47: invokevirtual #99                 // Method withModifiers:(I)Lio/sundr/codegen/model/ModifierSupportFluent;
      50: pop
      51: aload_0
      52: aload_1
      53: invokevirtual #103                // Method io/sundr/codegen/model/Property.getAttributes:()Ljava/util/Map;
      56: invokevirtual #107                // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
      59: pop
      60: return

  public A addToAnnotations(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #58                 // class java/util/ArrayList
      11: dup
      12: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #61                 // Field annotations:Ljava/util/List;
      18: new           #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #116                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      26: astore_3
      27: aload_0
      28: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      31: ldc           #121                // String annotations
      33: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      36: iload_1
      37: iflt          44
      40: iload_1
      41: goto          58
      44: aload_0
      45: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      48: ldc           #121                // String annotations
      50: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      53: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      58: aload_3
      59: invokeinterface #138,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      64: aload_0
      65: getfield      #61                 // Field annotations:Ljava/util/List;
      68: iload_1
      69: iflt          76
      72: iload_1
      73: goto          85
      76: aload_0
      77: getfield      #61                 // Field annotations:Ljava/util/List;
      80: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      85: aload_3
      86: invokeinterface #138,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      91: aload_0
      92: areturn

  public A setToAnnotations(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #58                 // class java/util/ArrayList
      11: dup
      12: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #61                 // Field annotations:Ljava/util/List;
      18: new           #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #116                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      26: astore_3
      27: iload_1
      28: iflt          49
      31: iload_1
      32: aload_0
      33: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      36: ldc           #121                // String annotations
      38: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      46: if_icmplt     68
      49: aload_0
      50: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc           #121                // String annotations
      55: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      58: aload_3
      59: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          85
      68: aload_0
      69: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      72: ldc           #121                // String annotations
      74: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      77: iload_1
      78: aload_3
      79: invokeinterface #152,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: iload_1
      86: iflt          102
      89: iload_1
      90: aload_0
      91: getfield      #61                 // Field annotations:Ljava/util/List;
      94: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      99: if_icmplt     116
     102: aload_0
     103: getfield      #61                 // Field annotations:Ljava/util/List;
     106: aload_3
     107: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          128
     116: aload_0
     117: getfield      #61                 // Field annotations:Ljava/util/List;
     120: iload_1
     121: aload_3
     122: invokeinterface #152,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_0
     129: areturn

  public A addToAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #58                 // class java/util/ArrayList
      11: dup
      12: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #61                 // Field annotations:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     84
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      41: dup
      42: aload         5
      44: invokespecial #116                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      47: astore        6
      49: aload_0
      50: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc           #121                // String annotations
      55: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      58: aload         6
      60: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: getfield      #61                 // Field annotations:Ljava/util/List;
      70: aload         6
      72: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: iinc          4, 1
      81: goto          26
      84: aload_0
      85: areturn

  public A addAllToAnnotations(java.util.Collection<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #58                 // class java/util/ArrayList
      11: dup
      12: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #61                 // Field annotations:Ljava/util/List;
      18: aload_1
      19: invokeinterface #164,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          86
      34: aload_2
      35: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #129                // class io/sundr/codegen/model/AnnotationRef
      43: astore_3
      44: new           #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      47: dup
      48: aload_3
      49: invokespecial #116                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      52: astore        4
      54: aload_0
      55: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      58: ldc           #121                // String annotations
      60: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      63: aload         4
      65: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_0
      72: getfield      #61                 // Field annotations:Ljava/util/List;
      75: aload         4
      77: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: goto          25
      86: aload_0
      87: areturn

  public A removeFromAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     73
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #116                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      35: ldc           #121                // String annotations
      37: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      40: aload         6
      42: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #61                 // Field annotations:Ljava/util/List;
      52: ifnull        67
      55: aload_0
      56: getfield      #61                 // Field annotations:Ljava/util/List;
      59: aload         6
      61: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          4, 1
      70: goto          8
      73: aload_0
      74: areturn

  public A removeAllFromAnnotations(java.util.Collection<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_1
       1: invokeinterface #164,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          75
      16: aload_2
      17: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #129                // class io/sundr/codegen/model/AnnotationRef
      25: astore_3
      26: new           #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #116                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc           #121                // String annotations
      42: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      45: aload         4
      47: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      52: pop
      53: aload_0
      54: getfield      #61                 // Field annotations:Ljava/util/List;
      57: ifnull        72
      60: aload_0
      61: getfield      #61                 // Field annotations:Ljava/util/List;
      64: aload         4
      66: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      71: pop
      72: goto          7
      75: aload_0
      76: areturn

  public java.util.List<io.sundr.codegen.model.AnnotationRef> getAnnotations();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokestatic  #186                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.AnnotationRef> buildAnnotations();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokestatic  #186                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.AnnotationRef buildAnnotation(int);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: iload_1
       5: invokeinterface #192,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      13: invokevirtual #195                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      16: areturn

  public io.sundr.codegen.model.AnnotationRef buildFirstAnnotation();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #192,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      13: invokevirtual #195                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      16: areturn

  public io.sundr.codegen.model.AnnotationRef buildLastAnnotation();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: aload_0
       5: getfield      #61                 // Field annotations:Ljava/util/List;
       8: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #192,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      23: invokevirtual #195                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      26: areturn

  public io.sundr.codegen.model.AnnotationRef buildMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.codegen.model.AnnotationRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokeinterface #201,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #206,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: aload_3
      40: invokevirtual #195                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.codegen.model.AnnotationRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokeinterface #201,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #113                // class io/sundr/codegen/model/AnnotationRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #206,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #217                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #217                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withAnnotations(java.util.List<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnull        26
       7: aload_0
       8: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc           #121                // String annotations
      13: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      16: aload_0
      17: getfield      #61                 // Field annotations:Ljava/util/List;
      20: invokeinterface #221,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: ifnull        86
      30: aload_0
      31: new           #58                 // class java/util/ArrayList
      34: dup
      35: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      38: putfield      #61                 // Field annotations:Ljava/util/List;
      41: aload_1
      42: invokeinterface #201,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore_2
      48: aload_2
      49: invokeinterface #170,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          83
      57: aload_2
      58: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #129                // class io/sundr/codegen/model/AnnotationRef
      66: astore_3
      67: aload_0
      68: iconst_1
      69: anewarray     #129                // class io/sundr/codegen/model/AnnotationRef
      72: dup
      73: iconst_0
      74: aload_3
      75: aastore
      76: invokevirtual #223                // Method addToAnnotations:([Lio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent;
      79: pop
      80: goto          48
      83: goto          97
      86: aload_0
      87: new           #58                 // class java/util/ArrayList
      90: dup
      91: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
      94: putfield      #61                 // Field annotations:Ljava/util/List;
      97: aload_0
      98: areturn

  public A withAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #61                 // Field annotations:Ljava/util/List;
      11: invokeinterface #227,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #129                // class io/sundr/codegen/model/AnnotationRef
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #223                // Method addToAnnotations:([Lio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasAnnotations();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #61                 // Field annotations:Ljava/util/List;
      11: invokeinterface #232,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #217                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> addNewAnnotation();
    Code:
       0: new           #25                 // class io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #237                // Method io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> addNewAnnotationLike(io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #25                 // class io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #242                // Method io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;ILio/sundr/codegen/model/AnnotationRef;)V
      10: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> setNewAnnotationLike(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #25                 // class io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #242                // Method io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;ILio/sundr/codegen/model/AnnotationRef;)V
      10: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> editAnnotation(int);
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     23
      13: new           #248                // class java/lang/RuntimeException
      16: dup
      17: ldc           #250                // String Can\'t edit annotations. Index exceeds size.
      19: invokespecial #253                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iload_1
      25: aload_0
      26: iload_1
      27: invokevirtual #255                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      30: invokevirtual #257                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent$AnnotationsNested;
      33: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> editFirstAnnotation();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          23
      12: new           #248                // class java/lang/RuntimeException
      15: dup
      16: ldc_w         #260                // String Can\'t edit first annotations. The list is empty.
      19: invokespecial #253                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iconst_0
      25: aload_0
      26: iconst_0
      27: invokevirtual #255                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      30: invokevirtual #257                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent$AnnotationsNested;
      33: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> editLastAnnotation();
    Code:
       0: aload_0
       1: getfield      #61                 // Field annotations:Ljava/util/List;
       4: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          27
      16: new           #248                // class java/lang/RuntimeException
      19: dup
      20: ldc_w         #263                // String Can\'t edit last annotations. The list is empty.
      23: invokespecial #253                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: aload_0
      30: iload_1
      31: invokevirtual #255                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      34: invokevirtual #257                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent$AnnotationsNested;
      37: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> editMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.codegen.model.AnnotationRefBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #61                 // Field annotations:Ljava/util/List;
       9: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     47
      17: aload_1
      18: aload_0
      19: getfield      #61                 // Field annotations:Ljava/util/List;
      22: iload_3
      23: invokeinterface #192,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #206,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      33: ifeq          41
      36: iload_3
      37: istore_2
      38: goto          47
      41: iinc          3, 1
      44: goto          4
      47: iload_2
      48: ifge          62
      51: new           #248                // class java/lang/RuntimeException
      54: dup
      55: ldc_w         #267                // String Can\'t edit matching annotations. No match found.
      58: invokespecial #253                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: iload_2
      64: aload_0
      65: iload_2
      66: invokevirtual #255                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      69: invokevirtual #257                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent$AnnotationsNested;
      72: areturn

  public io.sundr.codegen.model.TypeRef getTypeRef();
    Code:
       0: aload_0
       1: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #274,  1          // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #276                // class io/sundr/codegen/model/TypeRef
      19: goto          23
      22: aconst_null
      23: areturn

  public io.sundr.codegen.model.TypeRef buildTypeRef();
    Code:
       0: aload_0
       1: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #274,  1          // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #276                // class io/sundr/codegen/model/TypeRef
      19: goto          23
      22: aconst_null
      23: areturn

  public A withTypeRef(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #278                // String typeRef
       7: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: instanceof    #280                // class io/sundr/codegen/model/PrimitiveRef
      24: ifeq          62
      27: aload_0
      28: new           #282                // class io/sundr/codegen/model/PrimitiveRefBuilder
      31: dup
      32: aload_1
      33: checkcast     #280                // class io/sundr/codegen/model/PrimitiveRef
      36: invokespecial #285                // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
      39: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      42: aload_0
      43: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      46: ldc_w         #278                // String typeRef
      49: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      52: aload_0
      53: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      56: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_1
      63: instanceof    #287                // class io/sundr/codegen/model/VoidRef
      66: ifeq          104
      69: aload_0
      70: new           #289                // class io/sundr/codegen/model/VoidRefBuilder
      73: dup
      74: aload_1
      75: checkcast     #287                // class io/sundr/codegen/model/VoidRef
      78: invokespecial #292                // Method io/sundr/codegen/model/VoidRefBuilder."<init>":(Lio/sundr/codegen/model/VoidRef;)V
      81: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      84: aload_0
      85: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      88: ldc_w         #278                // String typeRef
      91: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      94: aload_0
      95: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      98: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: aload_1
     105: instanceof    #294                // class io/sundr/codegen/model/WildcardRef
     108: ifeq          146
     111: aload_0
     112: new           #296                // class io/sundr/codegen/model/WildcardRefBuilder
     115: dup
     116: aload_1
     117: checkcast     #294                // class io/sundr/codegen/model/WildcardRef
     120: invokespecial #299                // Method io/sundr/codegen/model/WildcardRefBuilder."<init>":(Lio/sundr/codegen/model/WildcardRef;)V
     123: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     126: aload_0
     127: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
     130: ldc_w         #278                // String typeRef
     133: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
     136: aload_0
     137: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     140: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     145: pop
     146: aload_1
     147: instanceof    #301                // class io/sundr/codegen/model/ClassRef
     150: ifeq          188
     153: aload_0
     154: new           #303                // class io/sundr/codegen/model/ClassRefBuilder
     157: dup
     158: aload_1
     159: checkcast     #301                // class io/sundr/codegen/model/ClassRef
     162: invokespecial #306                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
     165: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     168: aload_0
     169: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
     172: ldc_w         #278                // String typeRef
     175: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
     178: aload_0
     179: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     182: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     187: pop
     188: aload_1
     189: instanceof    #308                // class io/sundr/codegen/model/TypeParamRef
     192: ifeq          230
     195: aload_0
     196: new           #310                // class io/sundr/codegen/model/TypeParamRefBuilder
     199: dup
     200: aload_1
     201: checkcast     #308                // class io/sundr/codegen/model/TypeParamRef
     204: invokespecial #313                // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamRef;)V
     207: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     210: aload_0
     211: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
     214: ldc_w         #278                // String typeRef
     217: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
     220: aload_0
     221: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     224: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     229: pop
     230: aload_0
     231: areturn

  public java.lang.Boolean hasTypeRef();
    Code:
       0: aload_0
       1: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #217                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withPrimitiveRefType(io.sundr.codegen.model.PrimitiveRef);
    Code:
       0: aload_0
       1: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #278                // String typeRef
       7: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #282                // class io/sundr/codegen/model/PrimitiveRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #285                // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
      33: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #278                // String typeRef
      43: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.PropertyFluent$PrimitiveRefTypeNested<A> withNewPrimitiveRefType();
    Code:
       0: new           #22                 // class io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #322                // Method io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$PrimitiveRefTypeNested<A> withNewPrimitiveRefTypeLike(io.sundr.codegen.model.PrimitiveRef);
    Code:
       0: new           #22                 // class io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #327                // Method io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/PrimitiveRef;)V
       9: areturn

  public A withVoidRefType(io.sundr.codegen.model.VoidRef);
    Code:
       0: aload_0
       1: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #278                // String typeRef
       7: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #289                // class io/sundr/codegen/model/VoidRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #292                // Method io/sundr/codegen/model/VoidRefBuilder."<init>":(Lio/sundr/codegen/model/VoidRef;)V
      33: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #278                // String typeRef
      43: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.PropertyFluent$VoidRefTypeNested<A> withNewVoidRefType();
    Code:
       0: new           #19                 // class io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #334                // Method io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$VoidRefTypeNested<A> withNewVoidRefTypeLike(io.sundr.codegen.model.VoidRef);
    Code:
       0: new           #19                 // class io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #339                // Method io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/VoidRef;)V
       9: areturn

  public A withWildcardRefType(io.sundr.codegen.model.WildcardRef);
    Code:
       0: aload_0
       1: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #278                // String typeRef
       7: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #296                // class io/sundr/codegen/model/WildcardRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #299                // Method io/sundr/codegen/model/WildcardRefBuilder."<init>":(Lio/sundr/codegen/model/WildcardRef;)V
      33: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #278                // String typeRef
      43: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.PropertyFluent$WildcardRefTypeNested<A> withNewWildcardRefType();
    Code:
       0: new           #16                 // class io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #346                // Method io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$WildcardRefTypeNested<A> withNewWildcardRefTypeLike(io.sundr.codegen.model.WildcardRef);
    Code:
       0: new           #16                 // class io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #351                // Method io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/WildcardRef;)V
       9: areturn

  public A withClassRefType(io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #278                // String typeRef
       7: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #303                // class io/sundr/codegen/model/ClassRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #306                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      33: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #278                // String typeRef
      43: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.PropertyFluent$ClassRefTypeNested<A> withNewClassRefType();
    Code:
       0: new           #13                 // class io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #358                // Method io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$ClassRefTypeNested<A> withNewClassRefTypeLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #13                 // class io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #363                // Method io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/ClassRef;)V
       9: areturn

  public A withTypeParamRefType(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: aload_0
       1: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #278                // String typeRef
       7: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #180,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #310                // class io/sundr/codegen/model/TypeParamRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #313                // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamRef;)V
      33: putfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #120                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #278                // String typeRef
      43: invokevirtual #127                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.PropertyFluent$TypeParamRefTypeNested<A> withNewTypeParamRefType();
    Code:
       0: new           #10                 // class io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #370                // Method io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$TypeParamRefTypeNested<A> withNewTypeParamRefTypeLike(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: new           #10                 // class io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #375                // Method io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/TypeParamRef;)V
       9: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #377                // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #377                // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #377                // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #217                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewName(java.lang.String);
    Code:
       0: aload_0
       1: new           #381                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #382                // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #91                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/PropertyFluent;
      12: areturn

  public A withNewName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #381                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #387                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #91                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/PropertyFluent;
      12: areturn

  public A withNewName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #381                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #392                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #91                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/PropertyFluent;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #400                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #400                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #402                // Method io/sundr/codegen/model/ModifierSupportFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #2                  // class io/sundr/codegen/model/PropertyFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #61                 // Field annotations:Ljava/util/List;
      43: ifnull        65
      46: aload_0
      47: getfield      #61                 // Field annotations:Ljava/util/List;
      50: aload_2
      51: getfield      #61                 // Field annotations:Ljava/util/List;
      54: invokeinterface #403,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      59: ifne          74
      62: goto          72
      65: aload_2
      66: getfield      #61                 // Field annotations:Ljava/util/List;
      69: ifnull        74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      78: ifnull        98
      81: aload_0
      82: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      85: aload_2
      86: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      89: invokevirtual #404                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: goto          105
      98: aload_2
      99: getfield      #270                // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     102: ifnull        107
     105: iconst_0
     106: ireturn
     107: aload_0
     108: getfield      #377                // Field name:Ljava/lang/String;
     111: ifnull        131
     114: aload_0
     115: getfield      #377                // Field name:Ljava/lang/String;
     118: aload_2
     119: getfield      #377                // Field name:Ljava/lang/String;
     122: invokevirtual #405                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifne          140
     128: goto          138
     131: aload_2
     132: getfield      #377                // Field name:Ljava/lang/String;
     135: ifnull        140
     138: iconst_0
     139: ireturn
     140: iconst_1
     141: ireturn
}
