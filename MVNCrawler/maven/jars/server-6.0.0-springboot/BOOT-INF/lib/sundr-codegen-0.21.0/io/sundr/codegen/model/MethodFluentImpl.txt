Compiled from "MethodFluentImpl.java"
public class io.sundr.codegen.model.MethodFluentImpl<A extends io.sundr.codegen.model.MethodFluent<A>> extends io.sundr.codegen.model.ModifierSupportFluentImpl<A> implements io.sundr.codegen.model.MethodFluent<A> {
  private java.util.List<java.lang.String> comments;

  private java.util.List<io.sundr.codegen.model.AnnotationRefBuilder> annotations;

  private java.util.List<io.sundr.codegen.model.TypeParamDefBuilder> parameters;

  private java.lang.String name;

  private io.sundr.builder.VisitableBuilder<? extends io.sundr.codegen.model.TypeRef, ?> returnType;

  private java.util.List<io.sundr.codegen.model.PropertyBuilder> arguments;

  private boolean varArgPreferred;

  private java.util.List<io.sundr.codegen.model.ClassRefBuilder> exceptions;

  private io.sundr.codegen.model.BlockBuilder block;

  public io.sundr.codegen.model.MethodFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #92                 // Method io/sundr/codegen/model/ModifierSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #94                 // class java/util/ArrayList
       8: dup
       9: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #97                 // Field comments:Ljava/util/List;
      15: aload_0
      16: new           #94                 // class java/util/ArrayList
      19: dup
      20: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #99                 // Field annotations:Ljava/util/List;
      26: aload_0
      27: new           #94                 // class java/util/ArrayList
      30: dup
      31: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #101                // Field parameters:Ljava/util/List;
      37: aload_0
      38: new           #94                 // class java/util/ArrayList
      41: dup
      42: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #103                // Field arguments:Ljava/util/List;
      48: aload_0
      49: new           #94                 // class java/util/ArrayList
      52: dup
      53: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #105                // Field exceptions:Ljava/util/List;
      59: return

  public io.sundr.codegen.model.MethodFluentImpl(io.sundr.codegen.model.Method);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method io/sundr/codegen/model/ModifierSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #94                 // class java/util/ArrayList
       8: dup
       9: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #97                 // Field comments:Ljava/util/List;
      15: aload_0
      16: new           #94                 // class java/util/ArrayList
      19: dup
      20: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #99                 // Field annotations:Ljava/util/List;
      26: aload_0
      27: new           #94                 // class java/util/ArrayList
      30: dup
      31: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #101                // Field parameters:Ljava/util/List;
      37: aload_0
      38: new           #94                 // class java/util/ArrayList
      41: dup
      42: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #103                // Field arguments:Ljava/util/List;
      48: aload_0
      49: new           #94                 // class java/util/ArrayList
      52: dup
      53: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #105                // Field exceptions:Ljava/util/List;
      59: aload_0
      60: aload_1
      61: invokevirtual #115                // Method io/sundr/codegen/model/Method.getComments:()Ljava/util/List;
      64: invokevirtual #119                // Method withComments:(Ljava/util/List;)Lio/sundr/codegen/model/MethodFluent;
      67: pop
      68: aload_0
      69: aload_1
      70: invokevirtual #122                // Method io/sundr/codegen/model/Method.getAnnotations:()Ljava/util/List;
      73: invokevirtual #125                // Method withAnnotations:(Ljava/util/List;)Lio/sundr/codegen/model/MethodFluent;
      76: pop
      77: aload_0
      78: aload_1
      79: invokevirtual #128                // Method io/sundr/codegen/model/Method.getParameters:()Ljava/util/List;
      82: invokevirtual #131                // Method withParameters:(Ljava/util/List;)Lio/sundr/codegen/model/MethodFluent;
      85: pop
      86: aload_0
      87: aload_1
      88: invokevirtual #135                // Method io/sundr/codegen/model/Method.getName:()Ljava/lang/String;
      91: invokevirtual #139                // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      94: pop
      95: aload_0
      96: aload_1
      97: invokevirtual #143                // Method io/sundr/codegen/model/Method.getReturnType:()Lio/sundr/codegen/model/TypeRef;
     100: invokevirtual #147                // Method withReturnType:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/MethodFluent;
     103: pop
     104: aload_0
     105: aload_1
     106: invokevirtual #150                // Method io/sundr/codegen/model/Method.getArguments:()Ljava/util/List;
     109: invokevirtual #153                // Method withArguments:(Ljava/util/List;)Lio/sundr/codegen/model/MethodFluent;
     112: pop
     113: aload_0
     114: aload_1
     115: invokevirtual #157                // Method io/sundr/codegen/model/Method.isVarArgPreferred:()Z
     118: invokevirtual #161                // Method withVarArgPreferred:(Z)Lio/sundr/codegen/model/MethodFluent;
     121: pop
     122: aload_0
     123: aload_1
     124: invokevirtual #164                // Method io/sundr/codegen/model/Method.getExceptions:()Ljava/util/List;
     127: invokevirtual #167                // Method withExceptions:(Ljava/util/List;)Lio/sundr/codegen/model/MethodFluent;
     130: pop
     131: aload_0
     132: aload_1
     133: invokevirtual #171                // Method io/sundr/codegen/model/Method.getBlock:()Lio/sundr/codegen/model/Block;
     136: invokevirtual #175                // Method withBlock:(Lio/sundr/codegen/model/Block;)Lio/sundr/codegen/model/MethodFluent;
     139: pop
     140: aload_0
     141: aload_1
     142: invokevirtual #179                // Method io/sundr/codegen/model/Method.getModifiers:()I
     145: invokevirtual #183                // Method withModifiers:(I)Lio/sundr/codegen/model/ModifierSupportFluent;
     148: pop
     149: aload_0
     150: aload_1
     151: invokevirtual #187                // Method io/sundr/codegen/model/Method.getAttributes:()Ljava/util/Map;
     154: invokevirtual #191                // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
     157: pop
     158: return

  public A addToComments(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #97                 // Field comments:Ljava/util/List;
      18: aload_0
      19: getfield      #97                 // Field comments:Ljava/util/List;
      22: iload_1
      23: aload_2
      24: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      29: aload_0
      30: areturn

  public A setToComments(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #97                 // Field comments:Ljava/util/List;
      18: aload_0
      19: getfield      #97                 // Field comments:Ljava/util/List;
      22: iload_1
      23: aload_2
      24: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public A addToComments(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #97                 // Field comments:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     56
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: aload_0
      39: getfield      #97                 // Field comments:Ljava/util/List;
      42: aload         5
      44: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          26
      56: aload_0
      57: areturn

  public A addAllToComments(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #97                 // Field comments:Ljava/util/List;
      18: aload_1
      19: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          58
      34: aload_2
      35: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #235                // class java/lang/String
      43: astore_3
      44: aload_0
      45: getfield      #97                 // Field comments:Ljava/util/List;
      48: aload_3
      49: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          25
      58: aload_0
      59: areturn

  public A removeFromComments(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     45
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #97                 // Field comments:Ljava/util/List;
      24: ifnull        39
      27: aload_0
      28: getfield      #97                 // Field comments:Ljava/util/List;
      31: aload         5
      33: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      38: pop
      39: iinc          4, 1
      42: goto          8
      45: aload_0
      46: areturn

  public A removeAllFromComments(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #235                // class java/lang/String
      25: astore_3
      26: aload_0
      27: getfield      #97                 // Field comments:Ljava/util/List;
      30: ifnull        44
      33: aload_0
      34: getfield      #97                 // Field comments:Ljava/util/List;
      37: aload_3
      38: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      43: pop
      44: goto          7
      47: aload_0
      48: areturn

  public java.util.List<java.lang.String> getComments();
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: areturn

  public java.lang.String getComment(int);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: iload_1
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #235                // class java/lang/String
      13: areturn

  public java.lang.String getFirstComment();
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #235                // class java/lang/String
      13: areturn

  public java.lang.String getLastComment();
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: aload_0
       5: getfield      #97                 // Field comments:Ljava/util/List;
       8: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #235                // class java/lang/String
      23: areturn

  public java.lang.String getMatchingComment(io.sundr.builder.Predicate<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          44
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #235                // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: aload_3
      40: areturn
      41: goto          10
      44: aconst_null
      45: areturn

  public java.lang.Boolean hasMatchingComment(io.sundr.builder.Predicate<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #235                // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withComments(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc_w         #277                // String comments
      14: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      17: aload_0
      18: getfield      #97                 // Field comments:Ljava/util/List;
      21: invokeinterface #286,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_1
      28: ifnull        87
      31: aload_0
      32: new           #94                 // class java/util/ArrayList
      35: dup
      36: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      39: putfield      #97                 // Field comments:Ljava/util/List;
      42: aload_1
      43: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          84
      58: aload_2
      59: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #235                // class java/lang/String
      67: astore_3
      68: aload_0
      69: iconst_1
      70: anewarray     #235                // class java/lang/String
      73: dup
      74: iconst_0
      75: aload_3
      76: aastore
      77: invokevirtual #288                // Method addToComments:([Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      80: pop
      81: goto          49
      84: goto          98
      87: aload_0
      88: new           #94                 // class java/util/ArrayList
      91: dup
      92: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      95: putfield      #97                 // Field comments:Ljava/util/List;
      98: aload_0
      99: areturn

  public A withComments(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #97                 // Field comments:Ljava/util/List;
      11: invokeinterface #291,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #235                // class java/lang/String
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #288                // Method addToComments:([Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasComments();
    Code:
       0: aload_0
       1: getfield      #97                 // Field comments:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #97                 // Field comments:Ljava/util/List;
      11: invokeinterface #296,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public A addNewComment(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #235                // class java/lang/String
       5: dup
       6: iconst_0
       7: new           #235                // class java/lang/String
      10: dup
      11: aload_1
      12: invokespecial #300                // Method java/lang/String."<init>":(Ljava/lang/String;)V
      15: aastore
      16: invokevirtual #288                // Method addToComments:([Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      19: areturn

  public A addNewComment(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #235                // class java/lang/String
       5: dup
       6: iconst_0
       7: new           #235                // class java/lang/String
      10: dup
      11: aload_1
      12: invokespecial #305                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
      15: aastore
      16: invokevirtual #288                // Method addToComments:([Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      19: areturn

  public A addNewComment(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #235                // class java/lang/String
       5: dup
       6: iconst_0
       7: new           #235                // class java/lang/String
      10: dup
      11: aload_1
      12: invokespecial #310                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
      15: aastore
      16: invokevirtual #288                // Method addToComments:([Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      19: areturn

  public A addToAnnotations(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #99                 // Field annotations:Ljava/util/List;
      18: new           #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #318                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      26: astore_3
      27: aload_0
      28: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      31: ldc_w         #319                // String annotations
      34: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      37: iload_1
      38: iflt          45
      41: iload_1
      42: goto          60
      45: aload_0
      46: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      49: ldc_w         #319                // String annotations
      52: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      55: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      60: aload_3
      61: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      66: aload_0
      67: getfield      #99                 // Field annotations:Ljava/util/List;
      70: iload_1
      71: iflt          78
      74: iload_1
      75: goto          87
      78: aload_0
      79: getfield      #99                 // Field annotations:Ljava/util/List;
      82: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      87: aload_3
      88: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      93: aload_0
      94: areturn

  public A setToAnnotations(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #99                 // Field annotations:Ljava/util/List;
      18: new           #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #318                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      26: astore_3
      27: iload_1
      28: iflt          50
      31: iload_1
      32: aload_0
      33: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      36: ldc_w         #319                // String annotations
      39: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      42: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      47: if_icmplt     70
      50: aload_0
      51: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      54: ldc_w         #319                // String annotations
      57: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      60: aload_3
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          88
      70: aload_0
      71: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      74: ldc_w         #319                // String annotations
      77: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      80: iload_1
      81: aload_3
      82: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iload_1
      89: iflt          105
      92: iload_1
      93: aload_0
      94: getfield      #99                 // Field annotations:Ljava/util/List;
      97: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
     102: if_icmplt     119
     105: aload_0
     106: getfield      #99                 // Field annotations:Ljava/util/List;
     109: aload_3
     110: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          131
     119: aload_0
     120: getfield      #99                 // Field annotations:Ljava/util/List;
     123: iload_1
     124: aload_3
     125: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: areturn

  public A addToAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #99                 // Field annotations:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     85
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      41: dup
      42: aload         5
      44: invokespecial #318                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      47: astore        6
      49: aload_0
      50: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc_w         #319                // String annotations
      56: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      59: aload         6
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #99                 // Field annotations:Ljava/util/List;
      71: aload         6
      73: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iinc          4, 1
      82: goto          26
      85: aload_0
      86: areturn

  public A addAllToAnnotations(java.util.Collection<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #99                 // Field annotations:Ljava/util/List;
      18: aload_1
      19: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          87
      34: aload_2
      35: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #321                // class io/sundr/codegen/model/AnnotationRef
      43: astore_3
      44: new           #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      47: dup
      48: aload_3
      49: invokespecial #318                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      52: astore        4
      54: aload_0
      55: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      58: ldc_w         #319                // String annotations
      61: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      64: aload         4
      66: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: getfield      #99                 // Field annotations:Ljava/util/List;
      76: aload         4
      78: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          25
      87: aload_0
      88: areturn

  public A removeFromAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     74
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #318                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      35: ldc_w         #319                // String annotations
      38: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: aload         6
      43: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: getfield      #99                 // Field annotations:Ljava/util/List;
      53: ifnull        68
      56: aload_0
      57: getfield      #99                 // Field annotations:Ljava/util/List;
      60: aload         6
      62: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      67: pop
      68: iinc          4, 1
      71: goto          8
      74: aload_0
      75: areturn

  public A removeAllFromAnnotations(java.util.Collection<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_1
       1: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          76
      16: aload_2
      17: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #321                // class io/sundr/codegen/model/AnnotationRef
      25: astore_3
      26: new           #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #318                // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #319                // String annotations
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload         4
      48: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #99                 // Field annotations:Ljava/util/List;
      58: ifnull        73
      61: aload_0
      62: getfield      #99                 // Field annotations:Ljava/util/List;
      65: aload         4
      67: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      72: pop
      73: goto          7
      76: aload_0
      77: areturn

  public java.util.List<io.sundr.codegen.model.AnnotationRef> getAnnotations();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.AnnotationRef> buildAnnotations();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.AnnotationRef buildAnnotation(int);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: iload_1
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      13: invokevirtual #343                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      16: areturn

  public io.sundr.codegen.model.AnnotationRef buildFirstAnnotation();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      13: invokevirtual #343                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      16: areturn

  public io.sundr.codegen.model.AnnotationRef buildLastAnnotation();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: aload_0
       5: getfield      #99                 // Field annotations:Ljava/util/List;
       8: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      23: invokevirtual #343                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      26: areturn

  public io.sundr.codegen.model.AnnotationRef buildMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.codegen.model.AnnotationRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: aload_3
      40: invokevirtual #343                // Method io/sundr/codegen/model/AnnotationRefBuilder.build:()Lio/sundr/codegen/model/EditableAnnotationRef;
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.codegen.model.AnnotationRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #315                // class io/sundr/codegen/model/AnnotationRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withAnnotations(java.util.List<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc_w         #319                // String annotations
      14: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      17: aload_0
      18: getfield      #99                 // Field annotations:Ljava/util/List;
      21: invokeinterface #286,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_1
      28: ifnull        87
      31: aload_0
      32: new           #94                 // class java/util/ArrayList
      35: dup
      36: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      39: putfield      #99                 // Field annotations:Ljava/util/List;
      42: aload_1
      43: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          84
      58: aload_2
      59: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #321                // class io/sundr/codegen/model/AnnotationRef
      67: astore_3
      68: aload_0
      69: iconst_1
      70: anewarray     #321                // class io/sundr/codegen/model/AnnotationRef
      73: dup
      74: iconst_0
      75: aload_3
      76: aastore
      77: invokevirtual #352                // Method addToAnnotations:([Lio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/MethodFluent;
      80: pop
      81: goto          49
      84: goto          98
      87: aload_0
      88: new           #94                 // class java/util/ArrayList
      91: dup
      92: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      95: putfield      #99                 // Field annotations:Ljava/util/List;
      98: aload_0
      99: areturn

  public A withAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #99                 // Field annotations:Ljava/util/List;
      11: invokeinterface #291,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #321                // class io/sundr/codegen/model/AnnotationRef
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #352                // Method addToAnnotations:([Lio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/MethodFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasAnnotations();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #99                 // Field annotations:Ljava/util/List;
      11: invokeinterface #296,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> addNewAnnotation();
    Code:
       0: new           #37                 // class io/sundr/codegen/model/MethodFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #359                // Method io/sundr/codegen/model/MethodFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> addNewAnnotationLike(io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #37                 // class io/sundr/codegen/model/MethodFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #364                // Method io/sundr/codegen/model/MethodFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/AnnotationRef;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> setNewAnnotationLike(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #37                 // class io/sundr/codegen/model/MethodFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #364                // Method io/sundr/codegen/model/MethodFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/AnnotationRef;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> editAnnotation(int);
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     24
      13: new           #370                // class java/lang/RuntimeException
      16: dup
      17: ldc_w         #372                // String Can\'t edit annotations. Index exceeds size.
      20: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: aload_0
      27: iload_1
      28: invokevirtual #375                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      31: invokevirtual #377                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/MethodFluent$AnnotationsNested;
      34: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> editFirstAnnotation();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          23
      12: new           #370                // class java/lang/RuntimeException
      15: dup
      16: ldc_w         #380                // String Can\'t edit first annotations. The list is empty.
      19: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iconst_0
      25: aload_0
      26: iconst_0
      27: invokevirtual #375                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      30: invokevirtual #377                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/MethodFluent$AnnotationsNested;
      33: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> editLastAnnotation();
    Code:
       0: aload_0
       1: getfield      #99                 // Field annotations:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          27
      16: new           #370                // class java/lang/RuntimeException
      19: dup
      20: ldc_w         #383                // String Can\'t edit last annotations. The list is empty.
      23: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: aload_0
      30: iload_1
      31: invokevirtual #375                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      34: invokevirtual #377                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/MethodFluent$AnnotationsNested;
      37: areturn

  public io.sundr.codegen.model.MethodFluent$AnnotationsNested<A> editMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.codegen.model.AnnotationRefBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #99                 // Field annotations:Ljava/util/List;
       9: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     47
      17: aload_1
      18: aload_0
      19: getfield      #99                 // Field annotations:Ljava/util/List;
      22: iload_3
      23: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      33: ifeq          41
      36: iload_3
      37: istore_2
      38: goto          47
      41: iinc          3, 1
      44: goto          4
      47: iload_2
      48: ifge          62
      51: new           #370                // class java/lang/RuntimeException
      54: dup
      55: ldc_w         #387                // String Can\'t edit matching annotations. No match found.
      58: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: iload_2
      64: aload_0
      65: iload_2
      66: invokevirtual #375                // Method buildAnnotation:(I)Lio/sundr/codegen/model/AnnotationRef;
      69: invokevirtual #377                // Method setNewAnnotationLike:(ILio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/MethodFluent$AnnotationsNested;
      72: areturn

  public A addToParameters(int, io.sundr.codegen.model.TypeParamDef);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #101                // Field parameters:Ljava/util/List;
      18: new           #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      21: dup
      22: aload_2
      23: invokespecial #395                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamDef;)V
      26: astore_3
      27: aload_0
      28: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      31: ldc_w         #396                // String parameters
      34: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      37: iload_1
      38: iflt          45
      41: iload_1
      42: goto          60
      45: aload_0
      46: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      49: ldc_w         #396                // String parameters
      52: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      55: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      60: aload_3
      61: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      66: aload_0
      67: getfield      #101                // Field parameters:Ljava/util/List;
      70: iload_1
      71: iflt          78
      74: iload_1
      75: goto          87
      78: aload_0
      79: getfield      #101                // Field parameters:Ljava/util/List;
      82: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      87: aload_3
      88: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      93: aload_0
      94: areturn

  public A setToParameters(int, io.sundr.codegen.model.TypeParamDef);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #101                // Field parameters:Ljava/util/List;
      18: new           #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      21: dup
      22: aload_2
      23: invokespecial #395                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamDef;)V
      26: astore_3
      27: iload_1
      28: iflt          50
      31: iload_1
      32: aload_0
      33: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      36: ldc_w         #396                // String parameters
      39: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      42: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      47: if_icmplt     70
      50: aload_0
      51: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      54: ldc_w         #396                // String parameters
      57: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      60: aload_3
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          88
      70: aload_0
      71: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      74: ldc_w         #396                // String parameters
      77: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      80: iload_1
      81: aload_3
      82: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iload_1
      89: iflt          105
      92: iload_1
      93: aload_0
      94: getfield      #101                // Field parameters:Ljava/util/List;
      97: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
     102: if_icmplt     119
     105: aload_0
     106: getfield      #101                // Field parameters:Ljava/util/List;
     109: aload_3
     110: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          131
     119: aload_0
     120: getfield      #101                // Field parameters:Ljava/util/List;
     123: iload_1
     124: aload_3
     125: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: areturn

  public A addToParameters(io.sundr.codegen.model.TypeParamDef...);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #101                // Field parameters:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     85
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      41: dup
      42: aload         5
      44: invokespecial #395                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamDef;)V
      47: astore        6
      49: aload_0
      50: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc_w         #396                // String parameters
      56: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      59: aload         6
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #101                // Field parameters:Ljava/util/List;
      71: aload         6
      73: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iinc          4, 1
      82: goto          26
      85: aload_0
      86: areturn

  public A addAllToParameters(java.util.Collection<io.sundr.codegen.model.TypeParamDef>);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #101                // Field parameters:Ljava/util/List;
      18: aload_1
      19: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          87
      34: aload_2
      35: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #398                // class io/sundr/codegen/model/TypeParamDef
      43: astore_3
      44: new           #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      47: dup
      48: aload_3
      49: invokespecial #395                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamDef;)V
      52: astore        4
      54: aload_0
      55: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      58: ldc_w         #396                // String parameters
      61: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      64: aload         4
      66: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: getfield      #101                // Field parameters:Ljava/util/List;
      76: aload         4
      78: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          25
      87: aload_0
      88: areturn

  public A removeFromParameters(io.sundr.codegen.model.TypeParamDef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     74
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      23: dup
      24: aload         5
      26: invokespecial #395                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamDef;)V
      29: astore        6
      31: aload_0
      32: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      35: ldc_w         #396                // String parameters
      38: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: aload         6
      43: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: getfield      #101                // Field parameters:Ljava/util/List;
      53: ifnull        68
      56: aload_0
      57: getfield      #101                // Field parameters:Ljava/util/List;
      60: aload         6
      62: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      67: pop
      68: iinc          4, 1
      71: goto          8
      74: aload_0
      75: areturn

  public A removeAllFromParameters(java.util.Collection<io.sundr.codegen.model.TypeParamDef>);
    Code:
       0: aload_1
       1: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          76
      16: aload_2
      17: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #398                // class io/sundr/codegen/model/TypeParamDef
      25: astore_3
      26: new           #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      29: dup
      30: aload_3
      31: invokespecial #395                // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamDef;)V
      34: astore        4
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #396                // String parameters
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload         4
      48: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #101                // Field parameters:Ljava/util/List;
      58: ifnull        73
      61: aload_0
      62: getfield      #101                // Field parameters:Ljava/util/List;
      65: aload         4
      67: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      72: pop
      73: goto          7
      76: aload_0
      77: areturn

  public java.util.List<io.sundr.codegen.model.TypeParamDef> getParameters();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.TypeParamDef> buildParameters();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.TypeParamDef buildParameter(int);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: iload_1
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      13: invokevirtual #414                // Method io/sundr/codegen/model/TypeParamDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamDef;
      16: areturn

  public io.sundr.codegen.model.TypeParamDef buildFirstParameter();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      13: invokevirtual #414                // Method io/sundr/codegen/model/TypeParamDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamDef;
      16: areturn

  public io.sundr.codegen.model.TypeParamDef buildLastParameter();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: aload_0
       5: getfield      #101                // Field parameters:Ljava/util/List;
       8: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      23: invokevirtual #414                // Method io/sundr/codegen/model/TypeParamDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamDef;
      26: areturn

  public io.sundr.codegen.model.TypeParamDef buildMatchingParameter(io.sundr.builder.Predicate<io.sundr.codegen.model.TypeParamDefBuilder>);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: aload_3
      40: invokevirtual #414                // Method io/sundr/codegen/model/TypeParamDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamDef;
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingParameter(io.sundr.builder.Predicate<io.sundr.codegen.model.TypeParamDefBuilder>);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #392                // class io/sundr/codegen/model/TypeParamDefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withParameters(java.util.List<io.sundr.codegen.model.TypeParamDef>);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc_w         #396                // String parameters
      14: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      17: aload_0
      18: getfield      #101                // Field parameters:Ljava/util/List;
      21: invokeinterface #286,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_1
      28: ifnull        87
      31: aload_0
      32: new           #94                 // class java/util/ArrayList
      35: dup
      36: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      39: putfield      #101                // Field parameters:Ljava/util/List;
      42: aload_1
      43: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          84
      58: aload_2
      59: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #398                // class io/sundr/codegen/model/TypeParamDef
      67: astore_3
      68: aload_0
      69: iconst_1
      70: anewarray     #398                // class io/sundr/codegen/model/TypeParamDef
      73: dup
      74: iconst_0
      75: aload_3
      76: aastore
      77: invokevirtual #423                // Method addToParameters:([Lio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/MethodFluent;
      80: pop
      81: goto          49
      84: goto          98
      87: aload_0
      88: new           #94                 // class java/util/ArrayList
      91: dup
      92: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      95: putfield      #101                // Field parameters:Ljava/util/List;
      98: aload_0
      99: areturn

  public A withParameters(io.sundr.codegen.model.TypeParamDef...);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #101                // Field parameters:Ljava/util/List;
      11: invokeinterface #291,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #398                // class io/sundr/codegen/model/TypeParamDef
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #423                // Method addToParameters:([Lio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/MethodFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasParameters();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #101                // Field parameters:Ljava/util/List;
      11: invokeinterface #296,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> addNewParameter();
    Code:
       0: new           #34                 // class io/sundr/codegen/model/MethodFluentImpl$ParametersNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #428                // Method io/sundr/codegen/model/MethodFluentImpl$ParametersNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> addNewParameterLike(io.sundr.codegen.model.TypeParamDef);
    Code:
       0: new           #34                 // class io/sundr/codegen/model/MethodFluentImpl$ParametersNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #433                // Method io/sundr/codegen/model/MethodFluentImpl$ParametersNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/TypeParamDef;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> setNewParameterLike(int, io.sundr.codegen.model.TypeParamDef);
    Code:
       0: new           #34                 // class io/sundr/codegen/model/MethodFluentImpl$ParametersNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #433                // Method io/sundr/codegen/model/MethodFluentImpl$ParametersNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/TypeParamDef;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> editParameter(int);
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     24
      13: new           #370                // class java/lang/RuntimeException
      16: dup
      17: ldc_w         #439                // String Can\'t edit parameters. Index exceeds size.
      20: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: aload_0
      27: iload_1
      28: invokevirtual #441                // Method buildParameter:(I)Lio/sundr/codegen/model/TypeParamDef;
      31: invokevirtual #443                // Method setNewParameterLike:(ILio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/MethodFluent$ParametersNested;
      34: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> editFirstParameter();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          23
      12: new           #370                // class java/lang/RuntimeException
      15: dup
      16: ldc_w         #446                // String Can\'t edit first parameters. The list is empty.
      19: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iconst_0
      25: aload_0
      26: iconst_0
      27: invokevirtual #441                // Method buildParameter:(I)Lio/sundr/codegen/model/TypeParamDef;
      30: invokevirtual #443                // Method setNewParameterLike:(ILio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/MethodFluent$ParametersNested;
      33: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> editLastParameter();
    Code:
       0: aload_0
       1: getfield      #101                // Field parameters:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          27
      16: new           #370                // class java/lang/RuntimeException
      19: dup
      20: ldc_w         #449                // String Can\'t edit last parameters. The list is empty.
      23: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: aload_0
      30: iload_1
      31: invokevirtual #441                // Method buildParameter:(I)Lio/sundr/codegen/model/TypeParamDef;
      34: invokevirtual #443                // Method setNewParameterLike:(ILio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/MethodFluent$ParametersNested;
      37: areturn

  public io.sundr.codegen.model.MethodFluent$ParametersNested<A> editMatchingParameter(io.sundr.builder.Predicate<io.sundr.codegen.model.TypeParamDefBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #101                // Field parameters:Ljava/util/List;
       9: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     47
      17: aload_1
      18: aload_0
      19: getfield      #101                // Field parameters:Ljava/util/List;
      22: iload_3
      23: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      33: ifeq          41
      36: iload_3
      37: istore_2
      38: goto          47
      41: iinc          3, 1
      44: goto          4
      47: iload_2
      48: ifge          62
      51: new           #370                // class java/lang/RuntimeException
      54: dup
      55: ldc_w         #453                // String Can\'t edit matching parameters. No match found.
      58: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: iload_2
      64: aload_0
      65: iload_2
      66: invokevirtual #441                // Method buildParameter:(I)Lio/sundr/codegen/model/TypeParamDef;
      69: invokevirtual #443                // Method setNewParameterLike:(ILio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/MethodFluent$ParametersNested;
      72: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #455                // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #455                // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #455                // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewName(java.lang.String);
    Code:
       0: aload_0
       1: new           #235                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #300                // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #139                // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      12: areturn

  public A withNewName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #235                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #305                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #139                // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      12: areturn

  public A withNewName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #235                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #310                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #139                // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/MethodFluent;
      12: areturn

  public io.sundr.codegen.model.TypeRef getReturnType();
    Code:
       0: aload_0
       1: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #463,  1          // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #465                // class io/sundr/codegen/model/TypeRef
      19: goto          23
      22: aconst_null
      23: areturn

  public io.sundr.codegen.model.TypeRef buildReturnType();
    Code:
       0: aload_0
       1: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #463,  1          // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #465                // class io/sundr/codegen/model/TypeRef
      19: goto          23
      22: aconst_null
      23: areturn

  public A withReturnType(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #467                // String returnType
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: instanceof    #469                // class io/sundr/codegen/model/PrimitiveRef
      24: ifeq          62
      27: aload_0
      28: new           #471                // class io/sundr/codegen/model/PrimitiveRefBuilder
      31: dup
      32: aload_1
      33: checkcast     #469                // class io/sundr/codegen/model/PrimitiveRef
      36: invokespecial #474                // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
      39: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      42: aload_0
      43: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      46: ldc_w         #467                // String returnType
      49: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      52: aload_0
      53: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      56: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_1
      63: instanceof    #476                // class io/sundr/codegen/model/VoidRef
      66: ifeq          104
      69: aload_0
      70: new           #478                // class io/sundr/codegen/model/VoidRefBuilder
      73: dup
      74: aload_1
      75: checkcast     #476                // class io/sundr/codegen/model/VoidRef
      78: invokespecial #481                // Method io/sundr/codegen/model/VoidRefBuilder."<init>":(Lio/sundr/codegen/model/VoidRef;)V
      81: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      84: aload_0
      85: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      88: ldc_w         #467                // String returnType
      91: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      94: aload_0
      95: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      98: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: aload_1
     105: instanceof    #483                // class io/sundr/codegen/model/WildcardRef
     108: ifeq          146
     111: aload_0
     112: new           #485                // class io/sundr/codegen/model/WildcardRefBuilder
     115: dup
     116: aload_1
     117: checkcast     #483                // class io/sundr/codegen/model/WildcardRef
     120: invokespecial #488                // Method io/sundr/codegen/model/WildcardRefBuilder."<init>":(Lio/sundr/codegen/model/WildcardRef;)V
     123: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     126: aload_0
     127: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
     130: ldc_w         #467                // String returnType
     133: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
     136: aload_0
     137: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     140: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     145: pop
     146: aload_1
     147: instanceof    #490                // class io/sundr/codegen/model/ClassRef
     150: ifeq          188
     153: aload_0
     154: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
     157: dup
     158: aload_1
     159: checkcast     #490                // class io/sundr/codegen/model/ClassRef
     162: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
     165: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     168: aload_0
     169: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
     172: ldc_w         #467                // String returnType
     175: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
     178: aload_0
     179: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     182: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     187: pop
     188: aload_1
     189: instanceof    #497                // class io/sundr/codegen/model/TypeParamRef
     192: ifeq          230
     195: aload_0
     196: new           #499                // class io/sundr/codegen/model/TypeParamRefBuilder
     199: dup
     200: aload_1
     201: checkcast     #497                // class io/sundr/codegen/model/TypeParamRef
     204: invokespecial #502                // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamRef;)V
     207: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     210: aload_0
     211: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
     214: ldc_w         #467                // String returnType
     217: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
     220: aload_0
     221: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     224: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     229: pop
     230: aload_0
     231: areturn

  public java.lang.Boolean hasReturnType();
    Code:
       0: aload_0
       1: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withPrimitiveRefReturnType(io.sundr.codegen.model.PrimitiveRef);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #467                // String returnType
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #471                // class io/sundr/codegen/model/PrimitiveRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #474                // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
      33: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #467                // String returnType
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.MethodFluent$PrimitiveRefReturnTypeNested<A> withNewPrimitiveRefReturnType();
    Code:
       0: new           #31                 // class io/sundr/codegen/model/MethodFluentImpl$PrimitiveRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #511                // Method io/sundr/codegen/model/MethodFluentImpl$PrimitiveRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$PrimitiveRefReturnTypeNested<A> withNewPrimitiveRefReturnTypeLike(io.sundr.codegen.model.PrimitiveRef);
    Code:
       0: new           #31                 // class io/sundr/codegen/model/MethodFluentImpl$PrimitiveRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #516                // Method io/sundr/codegen/model/MethodFluentImpl$PrimitiveRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;Lio/sundr/codegen/model/PrimitiveRef;)V
       9: areturn

  public A withVoidRefReturnType(io.sundr.codegen.model.VoidRef);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #467                // String returnType
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #478                // class io/sundr/codegen/model/VoidRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #481                // Method io/sundr/codegen/model/VoidRefBuilder."<init>":(Lio/sundr/codegen/model/VoidRef;)V
      33: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #467                // String returnType
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.MethodFluent$VoidRefReturnTypeNested<A> withNewVoidRefReturnType();
    Code:
       0: new           #28                 // class io/sundr/codegen/model/MethodFluentImpl$VoidRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #523                // Method io/sundr/codegen/model/MethodFluentImpl$VoidRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$VoidRefReturnTypeNested<A> withNewVoidRefReturnTypeLike(io.sundr.codegen.model.VoidRef);
    Code:
       0: new           #28                 // class io/sundr/codegen/model/MethodFluentImpl$VoidRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #528                // Method io/sundr/codegen/model/MethodFluentImpl$VoidRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;Lio/sundr/codegen/model/VoidRef;)V
       9: areturn

  public A withWildcardRefReturnType(io.sundr.codegen.model.WildcardRef);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #467                // String returnType
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #485                // class io/sundr/codegen/model/WildcardRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #488                // Method io/sundr/codegen/model/WildcardRefBuilder."<init>":(Lio/sundr/codegen/model/WildcardRef;)V
      33: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #467                // String returnType
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.MethodFluent$WildcardRefReturnTypeNested<A> withNewWildcardRefReturnType();
    Code:
       0: new           #25                 // class io/sundr/codegen/model/MethodFluentImpl$WildcardRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #535                // Method io/sundr/codegen/model/MethodFluentImpl$WildcardRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$WildcardRefReturnTypeNested<A> withNewWildcardRefReturnTypeLike(io.sundr.codegen.model.WildcardRef);
    Code:
       0: new           #25                 // class io/sundr/codegen/model/MethodFluentImpl$WildcardRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #540                // Method io/sundr/codegen/model/MethodFluentImpl$WildcardRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;Lio/sundr/codegen/model/WildcardRef;)V
       9: areturn

  public A withClassRefReturnType(io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #467                // String returnType
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      33: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #467                // String returnType
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.MethodFluent$ClassRefReturnTypeNested<A> withNewClassRefReturnType();
    Code:
       0: new           #22                 // class io/sundr/codegen/model/MethodFluentImpl$ClassRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #547                // Method io/sundr/codegen/model/MethodFluentImpl$ClassRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$ClassRefReturnTypeNested<A> withNewClassRefReturnTypeLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #22                 // class io/sundr/codegen/model/MethodFluentImpl$ClassRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #552                // Method io/sundr/codegen/model/MethodFluentImpl$ClassRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;Lio/sundr/codegen/model/ClassRef;)V
       9: areturn

  public A withTypeParamRefReturnType(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #467                // String returnType
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #499                // class io/sundr/codegen/model/TypeParamRefBuilder
      28: dup
      29: aload_1
      30: invokespecial #502                // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamRef;)V
      33: putfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #467                // String returnType
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
      50: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public io.sundr.codegen.model.MethodFluent$TypeParamRefReturnTypeNested<A> withNewTypeParamRefReturnType();
    Code:
       0: new           #19                 // class io/sundr/codegen/model/MethodFluentImpl$TypeParamRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #559                // Method io/sundr/codegen/model/MethodFluentImpl$TypeParamRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$TypeParamRefReturnTypeNested<A> withNewTypeParamRefReturnTypeLike(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: new           #19                 // class io/sundr/codegen/model/MethodFluentImpl$TypeParamRefReturnTypeNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #564                // Method io/sundr/codegen/model/MethodFluentImpl$TypeParamRefReturnTypeNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;Lio/sundr/codegen/model/TypeParamRef;)V
       9: areturn

  public A addToArguments(int, io.sundr.codegen.model.Property);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #103                // Field arguments:Ljava/util/List;
      18: new           #568                // class io/sundr/codegen/model/PropertyBuilder
      21: dup
      22: aload_2
      23: invokespecial #571                // Method io/sundr/codegen/model/PropertyBuilder."<init>":(Lio/sundr/codegen/model/Property;)V
      26: astore_3
      27: aload_0
      28: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      31: ldc_w         #572                // String arguments
      34: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      37: iload_1
      38: iflt          45
      41: iload_1
      42: goto          60
      45: aload_0
      46: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      49: ldc_w         #572                // String arguments
      52: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      55: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      60: aload_3
      61: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      66: aload_0
      67: getfield      #103                // Field arguments:Ljava/util/List;
      70: iload_1
      71: iflt          78
      74: iload_1
      75: goto          87
      78: aload_0
      79: getfield      #103                // Field arguments:Ljava/util/List;
      82: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      87: aload_3
      88: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      93: aload_0
      94: areturn

  public A setToArguments(int, io.sundr.codegen.model.Property);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #103                // Field arguments:Ljava/util/List;
      18: new           #568                // class io/sundr/codegen/model/PropertyBuilder
      21: dup
      22: aload_2
      23: invokespecial #571                // Method io/sundr/codegen/model/PropertyBuilder."<init>":(Lio/sundr/codegen/model/Property;)V
      26: astore_3
      27: iload_1
      28: iflt          50
      31: iload_1
      32: aload_0
      33: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      36: ldc_w         #572                // String arguments
      39: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      42: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      47: if_icmplt     70
      50: aload_0
      51: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      54: ldc_w         #572                // String arguments
      57: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      60: aload_3
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          88
      70: aload_0
      71: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      74: ldc_w         #572                // String arguments
      77: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      80: iload_1
      81: aload_3
      82: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iload_1
      89: iflt          105
      92: iload_1
      93: aload_0
      94: getfield      #103                // Field arguments:Ljava/util/List;
      97: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
     102: if_icmplt     119
     105: aload_0
     106: getfield      #103                // Field arguments:Ljava/util/List;
     109: aload_3
     110: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          131
     119: aload_0
     120: getfield      #103                // Field arguments:Ljava/util/List;
     123: iload_1
     124: aload_3
     125: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: areturn

  public A addToArguments(io.sundr.codegen.model.Property...);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #103                // Field arguments:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     85
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #568                // class io/sundr/codegen/model/PropertyBuilder
      41: dup
      42: aload         5
      44: invokespecial #571                // Method io/sundr/codegen/model/PropertyBuilder."<init>":(Lio/sundr/codegen/model/Property;)V
      47: astore        6
      49: aload_0
      50: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc_w         #572                // String arguments
      56: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      59: aload         6
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #103                // Field arguments:Ljava/util/List;
      71: aload         6
      73: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iinc          4, 1
      82: goto          26
      85: aload_0
      86: areturn

  public A addAllToArguments(java.util.Collection<io.sundr.codegen.model.Property>);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #103                // Field arguments:Ljava/util/List;
      18: aload_1
      19: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          87
      34: aload_2
      35: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #574                // class io/sundr/codegen/model/Property
      43: astore_3
      44: new           #568                // class io/sundr/codegen/model/PropertyBuilder
      47: dup
      48: aload_3
      49: invokespecial #571                // Method io/sundr/codegen/model/PropertyBuilder."<init>":(Lio/sundr/codegen/model/Property;)V
      52: astore        4
      54: aload_0
      55: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      58: ldc_w         #572                // String arguments
      61: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      64: aload         4
      66: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: getfield      #103                // Field arguments:Ljava/util/List;
      76: aload         4
      78: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          25
      87: aload_0
      88: areturn

  public A removeFromArguments(io.sundr.codegen.model.Property...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     74
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #568                // class io/sundr/codegen/model/PropertyBuilder
      23: dup
      24: aload         5
      26: invokespecial #571                // Method io/sundr/codegen/model/PropertyBuilder."<init>":(Lio/sundr/codegen/model/Property;)V
      29: astore        6
      31: aload_0
      32: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      35: ldc_w         #572                // String arguments
      38: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: aload         6
      43: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: getfield      #103                // Field arguments:Ljava/util/List;
      53: ifnull        68
      56: aload_0
      57: getfield      #103                // Field arguments:Ljava/util/List;
      60: aload         6
      62: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      67: pop
      68: iinc          4, 1
      71: goto          8
      74: aload_0
      75: areturn

  public A removeAllFromArguments(java.util.Collection<io.sundr.codegen.model.Property>);
    Code:
       0: aload_1
       1: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          76
      16: aload_2
      17: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #574                // class io/sundr/codegen/model/Property
      25: astore_3
      26: new           #568                // class io/sundr/codegen/model/PropertyBuilder
      29: dup
      30: aload_3
      31: invokespecial #571                // Method io/sundr/codegen/model/PropertyBuilder."<init>":(Lio/sundr/codegen/model/Property;)V
      34: astore        4
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #572                // String arguments
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload         4
      48: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #103                // Field arguments:Ljava/util/List;
      58: ifnull        73
      61: aload_0
      62: getfield      #103                // Field arguments:Ljava/util/List;
      65: aload         4
      67: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      72: pop
      73: goto          7
      76: aload_0
      77: areturn

  public java.util.List<io.sundr.codegen.model.Property> getArguments();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.Property> buildArguments();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.Property buildArgument(int);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: iload_1
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #568                // class io/sundr/codegen/model/PropertyBuilder
      13: invokevirtual #590                // Method io/sundr/codegen/model/PropertyBuilder.build:()Lio/sundr/codegen/model/EditableProperty;
      16: areturn

  public io.sundr.codegen.model.Property buildFirstArgument();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #568                // class io/sundr/codegen/model/PropertyBuilder
      13: invokevirtual #590                // Method io/sundr/codegen/model/PropertyBuilder.build:()Lio/sundr/codegen/model/EditableProperty;
      16: areturn

  public io.sundr.codegen.model.Property buildLastArgument();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: aload_0
       5: getfield      #103                // Field arguments:Ljava/util/List;
       8: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #568                // class io/sundr/codegen/model/PropertyBuilder
      23: invokevirtual #590                // Method io/sundr/codegen/model/PropertyBuilder.build:()Lio/sundr/codegen/model/EditableProperty;
      26: areturn

  public io.sundr.codegen.model.Property buildMatchingArgument(io.sundr.builder.Predicate<io.sundr.codegen.model.PropertyBuilder>);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #568                // class io/sundr/codegen/model/PropertyBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: aload_3
      40: invokevirtual #590                // Method io/sundr/codegen/model/PropertyBuilder.build:()Lio/sundr/codegen/model/EditableProperty;
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingArgument(io.sundr.builder.Predicate<io.sundr.codegen.model.PropertyBuilder>);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #568                // class io/sundr/codegen/model/PropertyBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withArguments(java.util.List<io.sundr.codegen.model.Property>);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc_w         #572                // String arguments
      14: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      17: aload_0
      18: getfield      #103                // Field arguments:Ljava/util/List;
      21: invokeinterface #286,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_1
      28: ifnull        87
      31: aload_0
      32: new           #94                 // class java/util/ArrayList
      35: dup
      36: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      39: putfield      #103                // Field arguments:Ljava/util/List;
      42: aload_1
      43: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          84
      58: aload_2
      59: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #574                // class io/sundr/codegen/model/Property
      67: astore_3
      68: aload_0
      69: iconst_1
      70: anewarray     #574                // class io/sundr/codegen/model/Property
      73: dup
      74: iconst_0
      75: aload_3
      76: aastore
      77: invokevirtual #599                // Method addToArguments:([Lio/sundr/codegen/model/Property;)Lio/sundr/codegen/model/MethodFluent;
      80: pop
      81: goto          49
      84: goto          98
      87: aload_0
      88: new           #94                 // class java/util/ArrayList
      91: dup
      92: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      95: putfield      #103                // Field arguments:Ljava/util/List;
      98: aload_0
      99: areturn

  public A withArguments(io.sundr.codegen.model.Property...);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #103                // Field arguments:Ljava/util/List;
      11: invokeinterface #291,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #574                // class io/sundr/codegen/model/Property
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #599                // Method addToArguments:([Lio/sundr/codegen/model/Property;)Lio/sundr/codegen/model/MethodFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasArguments();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #103                // Field arguments:Ljava/util/List;
      11: invokeinterface #296,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> addNewArgument();
    Code:
       0: new           #16                 // class io/sundr/codegen/model/MethodFluentImpl$ArgumentsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #604                // Method io/sundr/codegen/model/MethodFluentImpl$ArgumentsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> addNewArgumentLike(io.sundr.codegen.model.Property);
    Code:
       0: new           #16                 // class io/sundr/codegen/model/MethodFluentImpl$ArgumentsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #609                // Method io/sundr/codegen/model/MethodFluentImpl$ArgumentsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/Property;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> setNewArgumentLike(int, io.sundr.codegen.model.Property);
    Code:
       0: new           #16                 // class io/sundr/codegen/model/MethodFluentImpl$ArgumentsNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #609                // Method io/sundr/codegen/model/MethodFluentImpl$ArgumentsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/Property;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> editArgument(int);
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     24
      13: new           #370                // class java/lang/RuntimeException
      16: dup
      17: ldc_w         #615                // String Can\'t edit arguments. Index exceeds size.
      20: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: aload_0
      27: iload_1
      28: invokevirtual #617                // Method buildArgument:(I)Lio/sundr/codegen/model/Property;
      31: invokevirtual #619                // Method setNewArgumentLike:(ILio/sundr/codegen/model/Property;)Lio/sundr/codegen/model/MethodFluent$ArgumentsNested;
      34: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> editFirstArgument();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          23
      12: new           #370                // class java/lang/RuntimeException
      15: dup
      16: ldc_w         #622                // String Can\'t edit first arguments. The list is empty.
      19: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iconst_0
      25: aload_0
      26: iconst_0
      27: invokevirtual #617                // Method buildArgument:(I)Lio/sundr/codegen/model/Property;
      30: invokevirtual #619                // Method setNewArgumentLike:(ILio/sundr/codegen/model/Property;)Lio/sundr/codegen/model/MethodFluent$ArgumentsNested;
      33: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> editLastArgument();
    Code:
       0: aload_0
       1: getfield      #103                // Field arguments:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          27
      16: new           #370                // class java/lang/RuntimeException
      19: dup
      20: ldc_w         #625                // String Can\'t edit last arguments. The list is empty.
      23: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: aload_0
      30: iload_1
      31: invokevirtual #617                // Method buildArgument:(I)Lio/sundr/codegen/model/Property;
      34: invokevirtual #619                // Method setNewArgumentLike:(ILio/sundr/codegen/model/Property;)Lio/sundr/codegen/model/MethodFluent$ArgumentsNested;
      37: areturn

  public io.sundr.codegen.model.MethodFluent$ArgumentsNested<A> editMatchingArgument(io.sundr.builder.Predicate<io.sundr.codegen.model.PropertyBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #103                // Field arguments:Ljava/util/List;
       9: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     47
      17: aload_1
      18: aload_0
      19: getfield      #103                // Field arguments:Ljava/util/List;
      22: iload_3
      23: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      33: ifeq          41
      36: iload_3
      37: istore_2
      38: goto          47
      41: iinc          3, 1
      44: goto          4
      47: iload_2
      48: ifge          62
      51: new           #370                // class java/lang/RuntimeException
      54: dup
      55: ldc_w         #629                // String Can\'t edit matching arguments. No match found.
      58: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: iload_2
      64: aload_0
      65: iload_2
      66: invokevirtual #617                // Method buildArgument:(I)Lio/sundr/codegen/model/Property;
      69: invokevirtual #619                // Method setNewArgumentLike:(ILio/sundr/codegen/model/Property;)Lio/sundr/codegen/model/MethodFluent$ArgumentsNested;
      72: areturn

  public boolean isVarArgPreferred();
    Code:
       0: aload_0
       1: getfield      #631                // Field varArgPreferred:Z
       4: ireturn

  public A withVarArgPreferred(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #631                // Field varArgPreferred:Z
       5: aload_0
       6: areturn

  public java.lang.Boolean hasVarArgPreferred();
    Code:
       0: iconst_1
       1: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  public A addToExceptions(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #105                // Field exceptions:Ljava/util/List;
      18: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      26: astore_3
      27: aload_0
      28: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      31: ldc_w         #635                // String exceptions
      34: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      37: iload_1
      38: iflt          45
      41: iload_1
      42: goto          60
      45: aload_0
      46: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      49: ldc_w         #635                // String exceptions
      52: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      55: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      60: aload_3
      61: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      66: aload_0
      67: getfield      #105                // Field exceptions:Ljava/util/List;
      70: iload_1
      71: iflt          78
      74: iload_1
      75: goto          87
      78: aload_0
      79: getfield      #105                // Field exceptions:Ljava/util/List;
      82: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      87: aload_3
      88: invokeinterface #201,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      93: aload_0
      94: areturn

  public A setToExceptions(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #105                // Field exceptions:Ljava/util/List;
      18: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      26: astore_3
      27: iload_1
      28: iflt          50
      31: iload_1
      32: aload_0
      33: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      36: ldc_w         #635                // String exceptions
      39: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      42: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      47: if_icmplt     70
      50: aload_0
      51: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      54: ldc_w         #635                // String exceptions
      57: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      60: aload_3
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          88
      70: aload_0
      71: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      74: ldc_w         #635                // String exceptions
      77: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      80: iload_1
      81: aload_3
      82: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iload_1
      89: iflt          105
      92: iload_1
      93: aload_0
      94: getfield      #105                // Field exceptions:Ljava/util/List;
      97: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
     102: if_icmplt     119
     105: aload_0
     106: getfield      #105                // Field exceptions:Ljava/util/List;
     109: aload_3
     110: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          131
     119: aload_0
     120: getfield      #105                // Field exceptions:Ljava/util/List;
     123: iload_1
     124: aload_3
     125: invokeinterface #209,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: areturn

  public A addToExceptions(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #105                // Field exceptions:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     85
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      41: dup
      42: aload         5
      44: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      47: astore        6
      49: aload_0
      50: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc_w         #635                // String exceptions
      56: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      59: aload         6
      61: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #105                // Field exceptions:Ljava/util/List;
      71: aload         6
      73: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iinc          4, 1
      82: goto          26
      85: aload_0
      86: areturn

  public A addAllToExceptions(java.util.Collection<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #94                 // class java/util/ArrayList
      11: dup
      12: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #105                // Field exceptions:Ljava/util/List;
      18: aload_1
      19: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          87
      34: aload_2
      35: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #490                // class io/sundr/codegen/model/ClassRef
      43: astore_3
      44: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      47: dup
      48: aload_3
      49: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      52: astore        4
      54: aload_0
      55: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      58: ldc_w         #635                // String exceptions
      61: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      64: aload         4
      66: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: getfield      #105                // Field exceptions:Ljava/util/List;
      76: aload         4
      78: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          25
      87: aload_0
      88: areturn

  public A removeFromExceptions(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     74
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      35: ldc_w         #635                // String exceptions
      38: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: aload         6
      43: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: getfield      #105                // Field exceptions:Ljava/util/List;
      53: ifnull        68
      56: aload_0
      57: getfield      #105                // Field exceptions:Ljava/util/List;
      60: aload         6
      62: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      67: pop
      68: iinc          4, 1
      71: goto          8
      74: aload_0
      75: areturn

  public A removeAllFromExceptions(java.util.Collection<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_1
       1: invokeinterface #224,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          76
      16: aload_2
      17: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #490                // class io/sundr/codegen/model/ClassRef
      25: astore_3
      26: new           #492                // class io/sundr/codegen/model/ClassRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #495                // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #635                // String exceptions
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload         4
      48: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #105                // Field exceptions:Ljava/util/List;
      58: ifnull        73
      61: aload_0
      62: getfield      #105                // Field exceptions:Ljava/util/List;
      65: aload         4
      67: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      72: pop
      73: goto          7
      76: aload_0
      77: areturn

  public java.util.List<io.sundr.codegen.model.ClassRef> getExceptions();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.ClassRef> buildExceptions();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokestatic  #337                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.ClassRef buildException(int);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: iload_1
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #492                // class io/sundr/codegen/model/ClassRefBuilder
      13: invokevirtual #650                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      16: areturn

  public io.sundr.codegen.model.ClassRef buildFirstException();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #492                // class io/sundr/codegen/model/ClassRefBuilder
      13: invokevirtual #650                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      16: areturn

  public io.sundr.codegen.model.ClassRef buildLastException();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: aload_0
       5: getfield      #105                // Field exceptions:Ljava/util/List;
       8: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #492                // class io/sundr/codegen/model/ClassRefBuilder
      23: invokevirtual #650                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      26: areturn

  public io.sundr.codegen.model.ClassRef buildMatchingException(io.sundr.builder.Predicate<io.sundr.codegen.model.ClassRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #492                // class io/sundr/codegen/model/ClassRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: aload_3
      40: invokevirtual #650                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingException(io.sundr.builder.Predicate<io.sundr.codegen.model.ClassRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #492                // class io/sundr/codegen/model/ClassRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withExceptions(java.util.List<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc_w         #635                // String exceptions
      14: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      17: aload_0
      18: getfield      #105                // Field exceptions:Ljava/util/List;
      21: invokeinterface #286,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_1
      28: ifnull        87
      31: aload_0
      32: new           #94                 // class java/util/ArrayList
      35: dup
      36: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      39: putfield      #105                // Field exceptions:Ljava/util/List;
      42: aload_1
      43: invokeinterface #256,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          84
      58: aload_2
      59: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #490                // class io/sundr/codegen/model/ClassRef
      67: astore_3
      68: aload_0
      69: iconst_1
      70: anewarray     #490                // class io/sundr/codegen/model/ClassRef
      73: dup
      74: iconst_0
      75: aload_3
      76: aastore
      77: invokevirtual #659                // Method addToExceptions:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/MethodFluent;
      80: pop
      81: goto          49
      84: goto          98
      87: aload_0
      88: new           #94                 // class java/util/ArrayList
      91: dup
      92: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      95: putfield      #105                // Field exceptions:Ljava/util/List;
      98: aload_0
      99: areturn

  public A withExceptions(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #105                // Field exceptions:Ljava/util/List;
      11: invokeinterface #291,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #490                // class io/sundr/codegen/model/ClassRef
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #659                // Method addToExceptions:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/MethodFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasExceptions();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #105                // Field exceptions:Ljava/util/List;
      11: invokeinterface #296,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> addNewException();
    Code:
       0: new           #13                 // class io/sundr/codegen/model/MethodFluentImpl$ExceptionsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #664                // Method io/sundr/codegen/model/MethodFluentImpl$ExceptionsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> addNewExceptionLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #13                 // class io/sundr/codegen/model/MethodFluentImpl$ExceptionsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #669                // Method io/sundr/codegen/model/MethodFluentImpl$ExceptionsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/ClassRef;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> setNewExceptionLike(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #13                 // class io/sundr/codegen/model/MethodFluentImpl$ExceptionsNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #669                // Method io/sundr/codegen/model/MethodFluentImpl$ExceptionsNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;ILio/sundr/codegen/model/ClassRef;)V
      10: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> editException(int);
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     24
      13: new           #370                // class java/lang/RuntimeException
      16: dup
      17: ldc_w         #675                // String Can\'t edit exceptions. Index exceeds size.
      20: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: aload_0
      27: iload_1
      28: invokevirtual #677                // Method buildException:(I)Lio/sundr/codegen/model/ClassRef;
      31: invokevirtual #679                // Method setNewExceptionLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/MethodFluent$ExceptionsNested;
      34: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> editFirstException();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          23
      12: new           #370                // class java/lang/RuntimeException
      15: dup
      16: ldc_w         #682                // String Can\'t edit first exceptions. The list is empty.
      19: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iconst_0
      25: aload_0
      26: iconst_0
      27: invokevirtual #677                // Method buildException:(I)Lio/sundr/codegen/model/ClassRef;
      30: invokevirtual #679                // Method setNewExceptionLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/MethodFluent$ExceptionsNested;
      33: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> editLastException();
    Code:
       0: aload_0
       1: getfield      #105                // Field exceptions:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          27
      16: new           #370                // class java/lang/RuntimeException
      19: dup
      20: ldc_w         #685                // String Can\'t edit last exceptions. The list is empty.
      23: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: aload_0
      30: iload_1
      31: invokevirtual #677                // Method buildException:(I)Lio/sundr/codegen/model/ClassRef;
      34: invokevirtual #679                // Method setNewExceptionLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/MethodFluent$ExceptionsNested;
      37: areturn

  public io.sundr.codegen.model.MethodFluent$ExceptionsNested<A> editMatchingException(io.sundr.builder.Predicate<io.sundr.codegen.model.ClassRefBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #105                // Field exceptions:Ljava/util/List;
       9: invokeinterface #253,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     47
      17: aload_1
      18: aload_0
      19: getfield      #105                // Field exceptions:Ljava/util/List;
      22: iload_3
      23: invokeinterface #248,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #261,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      33: ifeq          41
      36: iload_3
      37: istore_2
      38: goto          47
      41: iinc          3, 1
      44: goto          4
      47: iload_2
      48: ifge          62
      51: new           #370                // class java/lang/RuntimeException
      54: dup
      55: ldc_w         #689                // String Can\'t edit matching exceptions. No match found.
      58: invokespecial #373                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: iload_2
      64: aload_0
      65: iload_2
      66: invokevirtual #677                // Method buildException:(I)Lio/sundr/codegen/model/ClassRef;
      69: invokevirtual #679                // Method setNewExceptionLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/MethodFluent$ExceptionsNested;
      72: areturn

  public io.sundr.codegen.model.Block getBlock();
    Code:
       0: aload_0
       1: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
      11: invokevirtual #696                // Method io/sundr/codegen/model/BlockBuilder.build:()Lio/sundr/codegen/model/EditableBlock;
      14: goto          18
      17: aconst_null
      18: areturn

  public io.sundr.codegen.model.Block buildBlock();
    Code:
       0: aload_0
       1: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
      11: invokevirtual #696                // Method io/sundr/codegen/model/BlockBuilder.build:()Lio/sundr/codegen/model/EditableBlock;
      14: goto          18
      17: aconst_null
      18: areturn

  public A withBlock(io.sundr.codegen.model.Block);
    Code:
       0: aload_0
       1: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
       4: ldc_w         #700                // String block
       7: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      10: aload_0
      11: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
      14: invokeinterface #241,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: ifnull        56
      24: aload_0
      25: new           #693                // class io/sundr/codegen/model/BlockBuilder
      28: dup
      29: aload_1
      30: invokespecial #703                // Method io/sundr/codegen/model/BlockBuilder."<init>":(Lio/sundr/codegen/model/Block;)V
      33: putfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
      36: aload_0
      37: getfield      #276                // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc_w         #700                // String block
      43: invokevirtual #282                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      46: aload_0
      47: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
      50: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: areturn

  public java.lang.Boolean hasBlock();
    Code:
       0: aload_0
       1: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #272                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public io.sundr.codegen.model.MethodFluent$BlockNested<A> withNewBlock();
    Code:
       0: new           #10                 // class io/sundr/codegen/model/MethodFluentImpl$BlockNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #708                // Method io/sundr/codegen/model/MethodFluentImpl$BlockNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.MethodFluent$BlockNested<A> withNewBlockLike(io.sundr.codegen.model.Block);
    Code:
       0: new           #10                 // class io/sundr/codegen/model/MethodFluentImpl$BlockNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #713                // Method io/sundr/codegen/model/MethodFluentImpl$BlockNestedImpl."<init>":(Lio/sundr/codegen/model/MethodFluentImpl;Lio/sundr/codegen/model/Block;)V
       9: areturn

  public io.sundr.codegen.model.MethodFluent$BlockNested<A> editBlock();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #715                // Method getBlock:()Lio/sundr/codegen/model/Block;
       5: invokevirtual #717                // Method withNewBlockLike:(Lio/sundr/codegen/model/Block;)Lio/sundr/codegen/model/MethodFluent$BlockNested;
       8: areturn

  public io.sundr.codegen.model.MethodFluent$BlockNested<A> editOrNewBlock();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #715                // Method getBlock:()Lio/sundr/codegen/model/Block;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #715                // Method getBlock:()Lio/sundr/codegen/model/Block;
      12: goto          25
      15: new           #693                // class io/sundr/codegen/model/BlockBuilder
      18: dup
      19: invokespecial #719                // Method io/sundr/codegen/model/BlockBuilder."<init>":()V
      22: invokevirtual #696                // Method io/sundr/codegen/model/BlockBuilder.build:()Lio/sundr/codegen/model/EditableBlock;
      25: invokevirtual #717                // Method withNewBlockLike:(Lio/sundr/codegen/model/Block;)Lio/sundr/codegen/model/MethodFluent$BlockNested;
      28: areturn

  public io.sundr.codegen.model.MethodFluent$BlockNested<A> editOrNewBlockLike(io.sundr.codegen.model.Block);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #715                // Method getBlock:()Lio/sundr/codegen/model/Block;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #715                // Method getBlock:()Lio/sundr/codegen/model/Block;
      12: goto          16
      15: aload_1
      16: invokevirtual #717                // Method withNewBlockLike:(Lio/sundr/codegen/model/Block;)Lio/sundr/codegen/model/MethodFluent$BlockNested;
      19: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #727                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #727                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #729                // Method io/sundr/codegen/model/ModifierSupportFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #2                  // class io/sundr/codegen/model/MethodFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #97                 // Field comments:Ljava/util/List;
      43: ifnull        65
      46: aload_0
      47: getfield      #97                 // Field comments:Ljava/util/List;
      50: aload_2
      51: getfield      #97                 // Field comments:Ljava/util/List;
      54: invokeinterface #730,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      59: ifne          74
      62: goto          72
      65: aload_2
      66: getfield      #97                 // Field comments:Ljava/util/List;
      69: ifnull        74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: getfield      #99                 // Field annotations:Ljava/util/List;
      78: ifnull        100
      81: aload_0
      82: getfield      #99                 // Field annotations:Ljava/util/List;
      85: aload_2
      86: getfield      #99                 // Field annotations:Ljava/util/List;
      89: invokeinterface #730,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      94: ifne          109
      97: goto          107
     100: aload_2
     101: getfield      #99                 // Field annotations:Ljava/util/List;
     104: ifnull        109
     107: iconst_0
     108: ireturn
     109: aload_0
     110: getfield      #101                // Field parameters:Ljava/util/List;
     113: ifnull        135
     116: aload_0
     117: getfield      #101                // Field parameters:Ljava/util/List;
     120: aload_2
     121: getfield      #101                // Field parameters:Ljava/util/List;
     124: invokeinterface #730,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     129: ifne          144
     132: goto          142
     135: aload_2
     136: getfield      #101                // Field parameters:Ljava/util/List;
     139: ifnull        144
     142: iconst_0
     143: ireturn
     144: aload_0
     145: getfield      #455                // Field name:Ljava/lang/String;
     148: ifnull        168
     151: aload_0
     152: getfield      #455                // Field name:Ljava/lang/String;
     155: aload_2
     156: getfield      #455                // Field name:Ljava/lang/String;
     159: invokevirtual #731                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     162: ifne          177
     165: goto          175
     168: aload_2
     169: getfield      #455                // Field name:Ljava/lang/String;
     172: ifnull        177
     175: iconst_0
     176: ireturn
     177: aload_0
     178: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     181: ifnull        201
     184: aload_0
     185: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     188: aload_2
     189: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     192: invokevirtual #732                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     195: ifne          210
     198: goto          208
     201: aload_2
     202: getfield      #459                // Field returnType:Lio/sundr/builder/VisitableBuilder;
     205: ifnull        210
     208: iconst_0
     209: ireturn
     210: aload_0
     211: getfield      #103                // Field arguments:Ljava/util/List;
     214: ifnull        236
     217: aload_0
     218: getfield      #103                // Field arguments:Ljava/util/List;
     221: aload_2
     222: getfield      #103                // Field arguments:Ljava/util/List;
     225: invokeinterface #730,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     230: ifne          245
     233: goto          243
     236: aload_2
     237: getfield      #103                // Field arguments:Ljava/util/List;
     240: ifnull        245
     243: iconst_0
     244: ireturn
     245: aload_0
     246: getfield      #631                // Field varArgPreferred:Z
     249: aload_2
     250: getfield      #631                // Field varArgPreferred:Z
     253: if_icmpeq     258
     256: iconst_0
     257: ireturn
     258: aload_0
     259: getfield      #105                // Field exceptions:Ljava/util/List;
     262: ifnull        284
     265: aload_0
     266: getfield      #105                // Field exceptions:Ljava/util/List;
     269: aload_2
     270: getfield      #105                // Field exceptions:Ljava/util/List;
     273: invokeinterface #730,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     278: ifne          293
     281: goto          291
     284: aload_2
     285: getfield      #105                // Field exceptions:Ljava/util/List;
     288: ifnull        293
     291: iconst_0
     292: ireturn
     293: aload_0
     294: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
     297: ifnull        317
     300: aload_0
     301: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
     304: aload_2
     305: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
     308: invokevirtual #733                // Method io/sundr/codegen/model/BlockBuilder.equals:(Ljava/lang/Object;)Z
     311: ifne          326
     314: goto          324
     317: aload_2
     318: getfield      #691                // Field block:Lio/sundr/codegen/model/BlockBuilder;
     321: ifnull        326
     324: iconst_0
     325: ireturn
     326: iconst_1
     327: ireturn
}
