Compiled from "SourceFluent.java"
public interface io.sundr.codegen.model.SourceFluent<A extends io.sundr.codegen.model.SourceFluent<A>> extends io.sundr.builder.Fluent<A> {
  public abstract A addToTypes(int, io.sundr.codegen.model.TypeDef);

  public abstract A setToTypes(int, io.sundr.codegen.model.TypeDef);

  public abstract A addToTypes(io.sundr.codegen.model.TypeDef...);

  public abstract A addAllToTypes(java.util.Collection<io.sundr.codegen.model.TypeDef>);

  public abstract A removeFromTypes(io.sundr.codegen.model.TypeDef...);

  public abstract A removeAllFromTypes(java.util.Collection<io.sundr.codegen.model.TypeDef>);

  public abstract java.util.List<io.sundr.codegen.model.TypeDef> getTypes();

  public abstract java.util.List<io.sundr.codegen.model.TypeDef> buildTypes();

  public abstract io.sundr.codegen.model.TypeDef buildType(int);

  public abstract io.sundr.codegen.model.TypeDef buildFirstType();

  public abstract io.sundr.codegen.model.TypeDef buildLastType();

  public abstract io.sundr.codegen.model.TypeDef buildMatchingType(io.sundr.builder.Predicate<io.sundr.builder.Builder<? extends io.sundr.codegen.model.TypeDef>>);

  public abstract A withTypes(java.util.List<io.sundr.codegen.model.TypeDef>);

  public abstract A withTypes(io.sundr.codegen.model.TypeDef...);

  public abstract java.lang.Boolean hasTypes();

  public abstract io.sundr.codegen.model.SourceFluent$TypesNested<A> addNewType();

  public abstract io.sundr.codegen.model.SourceFluent$TypesNested<A> addNewTypeLike(io.sundr.codegen.model.TypeDef);
}
