Compiled from "TypeParamDefFluentImpl.java"
public class io.sundr.codegen.model.TypeParamDefFluentImpl<A extends io.sundr.codegen.model.TypeParamDefFluent<A>> extends io.sundr.codegen.model.AttributeSupportFluentImpl<A> implements io.sundr.codegen.model.TypeParamDefFluent<A> {
  private java.lang.String name;

  private java.util.List<io.sundr.codegen.model.ClassRefBuilder> bounds;

  public io.sundr.codegen.model.TypeParamDefFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/sundr/codegen/model/AttributeSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #25                 // class java/util/ArrayList
       8: dup
       9: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #28                 // Field bounds:Ljava/util/List;
      15: return

  public io.sundr.codegen.model.TypeParamDefFluentImpl(io.sundr.codegen.model.TypeParamDef);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/sundr/codegen/model/AttributeSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #25                 // class java/util/ArrayList
       8: dup
       9: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #28                 // Field bounds:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokevirtual #38                 // Method io/sundr/codegen/model/TypeParamDef.getName:()Ljava/lang/String;
      20: invokevirtual #42                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #46                 // Method io/sundr/codegen/model/TypeParamDef.getBounds:()Ljava/util/List;
      29: invokevirtual #50                 // Method withBounds:(Ljava/util/List;)Lio/sundr/codegen/model/TypeParamDefFluent;
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #54                 // Method io/sundr/codegen/model/TypeParamDef.getAttributes:()Ljava/util/Map;
      38: invokevirtual #58                 // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
      41: pop
      42: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #62                 // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #62                 // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewName(java.lang.String);
    Code:
       0: aload_0
       1: new           #73                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #76                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #42                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      12: areturn

  public A withNewName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #73                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #81                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #42                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      12: areturn

  public A withNewName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #73                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #86                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #42                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      12: areturn

  public A addToBounds(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #28                 // Field bounds:Ljava/util/List;
      18: new           #91                 // class io/sundr/codegen/model/ClassRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #94                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      26: astore_3
      27: aload_0
      28: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      31: ldc           #99                 // String bounds
      33: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      36: iload_1
      37: iflt          44
      40: iload_1
      41: goto          58
      44: aload_0
      45: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      48: ldc           #99                 // String bounds
      50: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      53: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
      58: aload_3
      59: invokeinterface #117,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      64: aload_0
      65: getfield      #28                 // Field bounds:Ljava/util/List;
      68: iload_1
      69: iflt          76
      72: iload_1
      73: goto          85
      76: aload_0
      77: getfield      #28                 // Field bounds:Ljava/util/List;
      80: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
      85: aload_3
      86: invokeinterface #117,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      91: aload_0
      92: areturn

  public A setToBounds(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #28                 // Field bounds:Ljava/util/List;
      18: new           #91                 // class io/sundr/codegen/model/ClassRefBuilder
      21: dup
      22: aload_2
      23: invokespecial #94                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      26: astore_3
      27: iload_1
      28: iflt          49
      31: iload_1
      32: aload_0
      33: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      36: ldc           #99                 // String bounds
      38: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
      46: if_icmplt     68
      49: aload_0
      50: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc           #99                 // String bounds
      55: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      58: aload_3
      59: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          85
      68: aload_0
      69: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      72: ldc           #99                 // String bounds
      74: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      77: iload_1
      78: aload_3
      79: invokeinterface #131,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: iload_1
      86: iflt          102
      89: iload_1
      90: aload_0
      91: getfield      #28                 // Field bounds:Ljava/util/List;
      94: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
      99: if_icmplt     116
     102: aload_0
     103: getfield      #28                 // Field bounds:Ljava/util/List;
     106: aload_3
     107: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          128
     116: aload_0
     117: getfield      #28                 // Field bounds:Ljava/util/List;
     120: iload_1
     121: aload_3
     122: invokeinterface #131,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_0
     129: areturn

  public A addToBounds(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #28                 // Field bounds:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     84
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #91                 // class io/sundr/codegen/model/ClassRefBuilder
      41: dup
      42: aload         5
      44: invokespecial #94                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      47: astore        6
      49: aload_0
      50: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      53: ldc           #99                 // String bounds
      55: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      58: aload         6
      60: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: getfield      #28                 // Field bounds:Ljava/util/List;
      70: aload         6
      72: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: iinc          4, 1
      81: goto          26
      84: aload_0
      85: areturn

  public A addAllToBounds(java.util.Collection<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #28                 // Field bounds:Ljava/util/List;
      18: aload_1
      19: invokeinterface #143,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          86
      34: aload_2
      35: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #107                // class io/sundr/codegen/model/ClassRef
      43: astore_3
      44: new           #91                 // class io/sundr/codegen/model/ClassRefBuilder
      47: dup
      48: aload_3
      49: invokespecial #94                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      52: astore        4
      54: aload_0
      55: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      58: ldc           #99                 // String bounds
      60: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      63: aload         4
      65: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_0
      72: getfield      #28                 // Field bounds:Ljava/util/List;
      75: aload         4
      77: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: goto          25
      86: aload_0
      87: areturn

  public A removeFromBounds(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     73
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #91                 // class io/sundr/codegen/model/ClassRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #94                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      35: ldc           #99                 // String bounds
      37: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      40: aload         6
      42: invokeinterface #159,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #28                 // Field bounds:Ljava/util/List;
      52: ifnull        67
      55: aload_0
      56: getfield      #28                 // Field bounds:Ljava/util/List;
      59: aload         6
      61: invokeinterface #159,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          4, 1
      70: goto          8
      73: aload_0
      74: areturn

  public A removeAllFromBounds(java.util.Collection<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_1
       1: invokeinterface #143,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          75
      16: aload_2
      17: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #107                // class io/sundr/codegen/model/ClassRef
      25: astore_3
      26: new           #91                 // class io/sundr/codegen/model/ClassRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #94                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      40: ldc           #99                 // String bounds
      42: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      45: aload         4
      47: invokeinterface #159,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      52: pop
      53: aload_0
      54: getfield      #28                 // Field bounds:Ljava/util/List;
      57: ifnull        72
      60: aload_0
      61: getfield      #28                 // Field bounds:Ljava/util/List;
      64: aload         4
      66: invokeinterface #159,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      71: pop
      72: goto          7
      75: aload_0
      76: areturn

  public java.util.List<io.sundr.codegen.model.ClassRef> getBounds();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokestatic  #165                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.ClassRef> buildBounds();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokestatic  #165                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.ClassRef buildBound(int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: iload_1
       5: invokeinterface #171,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #91                 // class io/sundr/codegen/model/ClassRefBuilder
      13: invokevirtual #174                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      16: areturn

  public io.sundr.codegen.model.ClassRef buildFirstBound();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #171,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #91                 // class io/sundr/codegen/model/ClassRefBuilder
      13: invokevirtual #174                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      16: areturn

  public io.sundr.codegen.model.ClassRef buildLastBound();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: aload_0
       5: getfield      #28                 // Field bounds:Ljava/util/List;
       8: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #171,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #91                 // class io/sundr/codegen/model/ClassRefBuilder
      23: invokevirtual #174                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      26: areturn

  public io.sundr.codegen.model.ClassRef buildMatchingBound(io.sundr.builder.Predicate<io.sundr.codegen.model.ClassRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokeinterface #180,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #91                 // class io/sundr/codegen/model/ClassRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #185,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: aload_3
      40: invokevirtual #174                // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingBound(io.sundr.builder.Predicate<io.sundr.codegen.model.ClassRefBuilder>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokeinterface #180,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #91                 // class io/sundr/codegen/model/ClassRefBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #185,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: iconst_1
      40: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: areturn
      44: goto          10
      47: iconst_0
      48: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn

  public A withBounds(java.util.List<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnull        26
       7: aload_0
       8: getfield      #98                 // Field _visitables:Lio/sundr/builder/VisitableMap;
      11: ldc           #99                 // String bounds
      13: invokevirtual #105                // Method io/sundr/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      16: aload_0
      17: getfield      #28                 // Field bounds:Ljava/util/List;
      20: invokeinterface #194,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: ifnull        86
      30: aload_0
      31: new           #25                 // class java/util/ArrayList
      34: dup
      35: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      38: putfield      #28                 // Field bounds:Ljava/util/List;
      41: aload_1
      42: invokeinterface #180,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore_2
      48: aload_2
      49: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          83
      57: aload_2
      58: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #107                // class io/sundr/codegen/model/ClassRef
      66: astore_3
      67: aload_0
      68: iconst_1
      69: anewarray     #107                // class io/sundr/codegen/model/ClassRef
      72: dup
      73: iconst_0
      74: aload_3
      75: aastore
      76: invokevirtual #196                // Method addToBounds:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent;
      79: pop
      80: goto          48
      83: goto          97
      86: aload_0
      87: new           #25                 // class java/util/ArrayList
      90: dup
      91: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      94: putfield      #28                 // Field bounds:Ljava/util/List;
      97: aload_0
      98: areturn

  public A withBounds(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #28                 // Field bounds:Ljava/util/List;
      11: invokeinterface #200,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #107                // class io/sundr/codegen/model/ClassRef
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #196                // Method addToBounds:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasBounds();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #28                 // Field bounds:Ljava/util/List;
      11: invokeinterface #204,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> addNewBound();
    Code:
       0: new           #10                 // class io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #209                // Method io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl."<init>":(Lio/sundr/codegen/model/TypeParamDefFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> addNewBoundLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #10                 // class io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #214                // Method io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl."<init>":(Lio/sundr/codegen/model/TypeParamDefFluentImpl;ILio/sundr/codegen/model/ClassRef;)V
      10: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> setNewBoundLike(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #10                 // class io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #214                // Method io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl."<init>":(Lio/sundr/codegen/model/TypeParamDefFluentImpl;ILio/sundr/codegen/model/ClassRef;)V
      10: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> editBound(int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     23
      13: new           #220                // class java/lang/RuntimeException
      16: dup
      17: ldc           #222                // String Can\'t edit bounds. Index exceeds size.
      19: invokespecial #223                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iload_1
      25: aload_0
      26: iload_1
      27: invokevirtual #225                // Method buildBound:(I)Lio/sundr/codegen/model/ClassRef;
      30: invokevirtual #227                // Method setNewBoundLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent$BoundsNested;
      33: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> editFirstBound();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          22
      12: new           #220                // class java/lang/RuntimeException
      15: dup
      16: ldc           #230                // String Can\'t edit first bounds. The list is empty.
      18: invokespecial #223                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: iconst_0
      24: aload_0
      25: iconst_0
      26: invokevirtual #225                // Method buildBound:(I)Lio/sundr/codegen/model/ClassRef;
      29: invokevirtual #227                // Method setNewBoundLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent$BoundsNested;
      32: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> editLastBound();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bounds:Ljava/util/List;
       4: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          26
      16: new           #220                // class java/lang/RuntimeException
      19: dup
      20: ldc           #233                // String Can\'t edit last bounds. The list is empty.
      22: invokespecial #223                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: iload_1
      28: aload_0
      29: iload_1
      30: invokevirtual #225                // Method buildBound:(I)Lio/sundr/codegen/model/ClassRef;
      33: invokevirtual #227                // Method setNewBoundLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent$BoundsNested;
      36: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> editMatchingBound(io.sundr.builder.Predicate<io.sundr.codegen.model.ClassRefBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #28                 // Field bounds:Ljava/util/List;
       9: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     47
      17: aload_1
      18: aload_0
      19: getfield      #28                 // Field bounds:Ljava/util/List;
      22: iload_3
      23: invokeinterface #171,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #185,  2          // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      33: ifeq          41
      36: iload_3
      37: istore_2
      38: goto          47
      41: iinc          3, 1
      44: goto          4
      47: iload_2
      48: ifge          61
      51: new           #220                // class java/lang/RuntimeException
      54: dup
      55: ldc           #237                // String Can\'t edit matching bounds. No match found.
      57: invokespecial #223                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: iload_2
      63: aload_0
      64: iload_2
      65: invokevirtual #225                // Method buildBound:(I)Lio/sundr/codegen/model/ClassRef;
      68: invokevirtual #227                // Method setNewBoundLike:(ILio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent$BoundsNested;
      71: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #245                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #245                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #247                // Method io/sundr/codegen/model/AttributeSupportFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #2                  // class io/sundr/codegen/model/TypeParamDefFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #62                 // Field name:Ljava/lang/String;
      43: ifnull        63
      46: aload_0
      47: getfield      #62                 // Field name:Ljava/lang/String;
      50: aload_2
      51: getfield      #62                 // Field name:Ljava/lang/String;
      54: invokevirtual #248                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifne          72
      60: goto          70
      63: aload_2
      64: getfield      #62                 // Field name:Ljava/lang/String;
      67: ifnull        72
      70: iconst_0
      71: ireturn
      72: aload_0
      73: getfield      #28                 // Field bounds:Ljava/util/List;
      76: ifnull        98
      79: aload_0
      80: getfield      #28                 // Field bounds:Ljava/util/List;
      83: aload_2
      84: getfield      #28                 // Field bounds:Ljava/util/List;
      87: invokeinterface #249,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: goto          105
      98: aload_2
      99: getfield      #28                 // Field bounds:Ljava/util/List;
     102: ifnull        107
     105: iconst_0
     106: ireturn
     107: iconst_1
     108: ireturn
}
