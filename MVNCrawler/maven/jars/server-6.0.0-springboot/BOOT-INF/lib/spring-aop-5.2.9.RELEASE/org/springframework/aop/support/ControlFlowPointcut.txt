Compiled from "ControlFlowPointcut.java"
public class org.springframework.aop.support.ControlFlowPointcut implements org.springframework.aop.Pointcut,org.springframework.aop.ClassFilter,org.springframework.aop.MethodMatcher,java.io.Serializable {
  private final java.lang.Class<?> clazz;

  private final java.lang.String methodName;

  private final java.util.concurrent.atomic.AtomicInteger evaluations;

  public org.springframework.aop.support.ControlFlowPointcut(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;Ljava/lang/String;)V
       6: return

  public org.springframework.aop.support.ControlFlowPointcut(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #5                  // Field evaluations:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_1
      17: ldc           #6                  // String Class must not be null
      19: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #8                  // Field clazz:Ljava/lang/Class;
      27: aload_0
      28: aload_2
      29: putfield      #9                  // Field methodName:Ljava/lang/String;
      32: return

  public boolean matches(java.lang.Class<?>);
    Code:
       0: iconst_1
       1: ireturn

  public boolean matches(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isRuntime();
    Code:
       0: iconst_1
       1: ireturn

  public boolean matches(java.lang.reflect.Method, java.lang.Class<?>, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field evaluations:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: new           #11                 // class java/lang/Throwable
      11: dup
      12: invokespecial #12                 // Method java/lang/Throwable."<init>":()V
      15: invokevirtual #13                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      18: astore        4
      20: aload         4
      22: arraylength
      23: istore        5
      25: iconst_0
      26: istore        6
      28: iload         6
      30: iload         5
      32: if_icmpge     90
      35: aload         4
      37: iload         6
      39: aaload
      40: astore        7
      42: aload         7
      44: invokevirtual #14                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      47: aload_0
      48: getfield      #8                  // Field clazz:Ljava/lang/Class;
      51: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          84
      60: aload_0
      61: getfield      #9                  // Field methodName:Ljava/lang/String;
      64: ifnull        82
      67: aload         7
      69: invokevirtual #17                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      72: aload_0
      73: getfield      #9                  // Field methodName:Ljava/lang/String;
      76: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          84
      82: iconst_1
      83: ireturn
      84: iinc          6, 1
      87: goto          28
      90: iconst_0
      91: ireturn

  public int getEvaluations();
    Code:
       0: aload_0
       1: getfield      #5                  // Field evaluations:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public org.springframework.aop.ClassFilter getClassFilter();
    Code:
       0: aload_0
       1: areturn

  public org.springframework.aop.MethodMatcher getMethodMatcher();
    Code:
       0: aload_0
       1: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #19                 // class org/springframework/aop/support/ControlFlowPointcut
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #19                 // class org/springframework/aop/support/ControlFlowPointcut
      20: astore_2
      21: aload_0
      22: getfield      #8                  // Field clazz:Ljava/lang/Class;
      25: aload_2
      26: getfield      #8                  // Field clazz:Ljava/lang/Class;
      29: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ifeq          53
      35: aload_0
      36: getfield      #9                  // Field methodName:Ljava/lang/String;
      39: aload_2
      40: getfield      #9                  // Field methodName:Ljava/lang/String;
      43: invokestatic  #21                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field clazz:Ljava/lang/Class;
       4: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
       7: istore_1
       8: aload_0
       9: getfield      #9                  // Field methodName:Ljava/lang/String;
      12: ifnull        28
      15: bipush        37
      17: iload_1
      18: imul
      19: aload_0
      20: getfield      #9                  // Field methodName:Ljava/lang/String;
      23: invokevirtual #23                 // Method java/lang/String.hashCode:()I
      26: iadd
      27: istore_1
      28: iload_1
      29: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #28                 // String : class =
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #8                  // Field clazz:Ljava/lang/Class;
      26: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #29                 // String ; methodName =
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #9                  // Field methodName:Ljava/lang/String;
      41: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn
}
