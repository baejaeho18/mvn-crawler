Compiled from "ProxyFactoryBean.java"
public class org.springframework.aop.framework.ProxyFactoryBean extends org.springframework.aop.framework.ProxyCreatorSupport implements org.springframework.beans.factory.FactoryBean<java.lang.Object>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware {
  public static final java.lang.String GLOBAL_SUFFIX;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String[] interceptorNames;

  private java.lang.String targetName;

  private boolean autodetectInterfaces;

  private boolean singleton;

  private org.springframework.aop.framework.adapter.AdvisorAdapterRegistry advisorAdapterRegistry;

  private boolean freezeProxy;

  private transient java.lang.ClassLoader proxyClassLoader;

  private transient boolean classLoaderConfigured;

  private transient org.springframework.beans.factory.BeanFactory beanFactory;

  private boolean advisorChainInitialized;

  private java.lang.Object singletonInstance;

  public org.springframework.aop.framework.ProxyFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyCreatorSupport."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field autodetectInterfaces:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field singleton:Z
      25: aload_0
      26: invokestatic  #7                  // Method org/springframework/aop/framework/adapter/GlobalAdvisorAdapterRegistry.getInstance:()Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;
      29: putfield      #8                  // Field advisorAdapterRegistry:Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;
      32: aload_0
      33: iconst_0
      34: putfield      #9                  // Field freezeProxy:Z
      37: aload_0
      38: invokestatic  #10                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      41: putfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
      44: aload_0
      45: iconst_0
      46: putfield      #12                 // Field classLoaderConfigured:Z
      49: aload_0
      50: iconst_0
      51: putfield      #13                 // Field advisorChainInitialized:Z
      54: return

  public void setProxyInterfaces(java.lang.Class<?>[]) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method setInterfaces:([Ljava/lang/Class;)V
       5: return

  public void setInterceptorNames(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field interceptorNames:[Ljava/lang/String;
       5: return

  public void setTargetName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field targetName:Ljava/lang/String;
       5: return

  public void setAutodetectInterfaces(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field autodetectInterfaces:Z
       5: return

  public void setSingleton(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field singleton:Z
       5: return

  public void setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field advisorAdapterRegistry:Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;
       5: return

  public void setFrozen(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field freezeProxy:Z
       5: return

  public void setProxyClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
       5: aload_0
       6: aload_1
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: putfield      #12                 // Field classLoaderConfigured:Z
      18: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: getfield      #12                 // Field classLoaderConfigured:Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: putfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
      12: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: aload_0
       6: invokespecial #18                 // Method checkInterceptorNames:()V
       9: return

  public java.lang.Object getObject() throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method initializeAdvisorChain:()V
       4: aload_0
       5: invokevirtual #20                 // Method isSingleton:()Z
       8: ifeq          16
      11: aload_0
      12: invokespecial #21                 // Method getSingletonInstance:()Ljava/lang/Object;
      15: areturn
      16: aload_0
      17: getfield      #16                 // Field targetName:Ljava/lang/String;
      20: ifnonnull     34
      23: aload_0
      24: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      27: ldc           #22                 // String Using non-singleton proxies with singleton targets is often undesirable. Enable prototype proxies by setting the \'targetName\' property.
      29: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      34: aload_0
      35: invokespecial #24                 // Method newPrototypeInstance:()Ljava/lang/Object;
      38: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #25                 // Field singletonInstance:Ljava/lang/Object;
       8: ifnull        21
      11: aload_0
      12: getfield      #25                 // Field singletonInstance:Ljava/lang/Object;
      15: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: aload_1
      19: monitorexit
      20: areturn
      21: aload_1
      22: monitorexit
      23: goto          31
      26: astore_2
      27: aload_1
      28: monitorexit
      29: aload_2
      30: athrow
      31: aload_0
      32: invokevirtual #26                 // Method getProxiedInterfaces:()[Ljava/lang/Class;
      35: astore_1
      36: aload_1
      37: arraylength
      38: iconst_1
      39: if_icmpne     46
      42: aload_1
      43: iconst_0
      44: aaload
      45: areturn
      46: aload_1
      47: arraylength
      48: iconst_1
      49: if_icmple     58
      52: aload_0
      53: aload_1
      54: invokevirtual #27                 // Method createCompositeInterface:([Ljava/lang/Class;)Ljava/lang/Class;
      57: areturn
      58: aload_0
      59: getfield      #16                 // Field targetName:Ljava/lang/String;
      62: ifnull        86
      65: aload_0
      66: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      69: ifnull        86
      72: aload_0
      73: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      76: aload_0
      77: getfield      #16                 // Field targetName:Ljava/lang/String;
      80: invokeinterface #28,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getType:(Ljava/lang/String;)Ljava/lang/Class;
      85: areturn
      86: aload_0
      87: invokevirtual #29                 // Method getTargetClass:()Ljava/lang/Class;
      90: areturn
    Exception table:
       from    to  target type
           4    20    26   any
          21    23    26   any
          26    29    26   any

  public boolean isSingleton();
    Code:
       0: aload_0
       1: getfield      #6                  // Field singleton:Z
       4: ireturn

  protected java.lang.Class<?> createCompositeInterface(java.lang.Class<?>[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
       5: invokestatic  #30                 // Method org/springframework/util/ClassUtils.createCompositeInterface:([Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: areturn

  private synchronized java.lang.Object getSingletonInstance();
    Code:
       0: aload_0
       1: getfield      #25                 // Field singletonInstance:Ljava/lang/Object;
       4: ifnonnull     88
       7: aload_0
       8: aload_0
       9: invokespecial #31                 // Method freshTargetSource:()Lorg/springframework/aop/TargetSource;
      12: putfield      #32                 // Field targetSource:Lorg/springframework/aop/TargetSource;
      15: aload_0
      16: getfield      #5                  // Field autodetectInterfaces:Z
      19: ifeq          68
      22: aload_0
      23: invokevirtual #26                 // Method getProxiedInterfaces:()[Ljava/lang/Class;
      26: arraylength
      27: ifne          68
      30: aload_0
      31: invokevirtual #33                 // Method isProxyTargetClass:()Z
      34: ifne          68
      37: aload_0
      38: invokevirtual #29                 // Method getTargetClass:()Ljava/lang/Class;
      41: astore_1
      42: aload_1
      43: ifnonnull     56
      46: new           #34                 // class org/springframework/beans/factory/FactoryBeanNotInitializedException
      49: dup
      50: ldc           #35                 // String Cannot determine target class for proxy
      52: invokespecial #36                 // Method org/springframework/beans/factory/FactoryBeanNotInitializedException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: aload_0
      59: getfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
      62: invokestatic  #37                 // Method org/springframework/util/ClassUtils.getAllInterfacesForClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
      65: invokevirtual #14                 // Method setInterfaces:([Ljava/lang/Class;)V
      68: aload_0
      69: aload_0
      70: getfield      #9                  // Field freezeProxy:Z
      73: invokespecial #38                 // Method org/springframework/aop/framework/ProxyCreatorSupport.setFrozen:(Z)V
      76: aload_0
      77: aload_0
      78: aload_0
      79: invokevirtual #39                 // Method createAopProxy:()Lorg/springframework/aop/framework/AopProxy;
      82: invokevirtual #40                 // Method getProxy:(Lorg/springframework/aop/framework/AopProxy;)Ljava/lang/Object;
      85: putfield      #25                 // Field singletonInstance:Ljava/lang/Object;
      88: aload_0
      89: getfield      #25                 // Field singletonInstance:Ljava/lang/Object;
      92: areturn

  private synchronized java.lang.Object newPrototypeInstance();
    Code:
       0: new           #41                 // class org/springframework/aop/framework/ProxyCreatorSupport
       3: dup
       4: aload_0
       5: invokevirtual #42                 // Method getAopProxyFactory:()Lorg/springframework/aop/framework/AopProxyFactory;
       8: invokespecial #43                 // Method org/springframework/aop/framework/ProxyCreatorSupport."<init>":(Lorg/springframework/aop/framework/AopProxyFactory;)V
      11: astore_1
      12: aload_0
      13: invokespecial #31                 // Method freshTargetSource:()Lorg/springframework/aop/TargetSource;
      16: astore_2
      17: aload_1
      18: aload_0
      19: aload_2
      20: aload_0
      21: invokespecial #44                 // Method freshAdvisorChain:()Ljava/util/List;
      24: invokevirtual #45                 // Method org/springframework/aop/framework/ProxyCreatorSupport.copyConfigurationFrom:(Lorg/springframework/aop/framework/AdvisedSupport;Lorg/springframework/aop/TargetSource;Ljava/util/List;)V
      27: aload_0
      28: getfield      #5                  // Field autodetectInterfaces:Z
      31: ifeq          72
      34: aload_0
      35: invokevirtual #26                 // Method getProxiedInterfaces:()[Ljava/lang/Class;
      38: arraylength
      39: ifne          72
      42: aload_0
      43: invokevirtual #33                 // Method isProxyTargetClass:()Z
      46: ifne          72
      49: aload_2
      50: invokeinterface #46,  1           // InterfaceMethod org/springframework/aop/TargetSource.getTargetClass:()Ljava/lang/Class;
      55: astore_3
      56: aload_3
      57: ifnull        72
      60: aload_1
      61: aload_3
      62: aload_0
      63: getfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
      66: invokestatic  #37                 // Method org/springframework/util/ClassUtils.getAllInterfacesForClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
      69: invokevirtual #47                 // Method org/springframework/aop/framework/ProxyCreatorSupport.setInterfaces:([Ljava/lang/Class;)V
      72: aload_1
      73: aload_0
      74: getfield      #9                  // Field freezeProxy:Z
      77: invokevirtual #38                 // Method org/springframework/aop/framework/ProxyCreatorSupport.setFrozen:(Z)V
      80: aload_0
      81: aload_1
      82: invokevirtual #48                 // Method org/springframework/aop/framework/ProxyCreatorSupport.createAopProxy:()Lorg/springframework/aop/framework/AopProxy;
      85: invokevirtual #40                 // Method getProxy:(Lorg/springframework/aop/framework/AopProxy;)Ljava/lang/Object;
      88: areturn

  protected java.lang.Object getProxy(org.springframework.aop.framework.AopProxy);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
       5: invokeinterface #49,  2           // InterfaceMethod org/springframework/aop/framework/AopProxy.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
      10: areturn

  private void checkInterceptorNames();
    Code:
       0: aload_0
       1: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
       4: invokestatic  #50                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       7: ifne          128
      10: aload_0
      11: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
      14: aload_0
      15: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
      18: arraylength
      19: iconst_1
      20: isub
      21: aaload
      22: astore_1
      23: aload_0
      24: getfield      #16                 // Field targetName:Ljava/lang/String;
      27: ifnonnull     128
      30: aload_0
      31: getfield      #32                 // Field targetSource:Lorg/springframework/aop/TargetSource;
      34: getstatic     #51                 // Field EMPTY_TARGET_SOURCE:Lorg/springframework/aop/TargetSource;
      37: if_acmpne     128
      40: aload_1
      41: ldc           #53                 // String *
      43: invokevirtual #54                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      46: ifne          128
      49: aload_0
      50: aload_1
      51: invokespecial #55                 // Method isNamedBeanAnAdvisorOrAdvice:(Ljava/lang/String;)Z
      54: ifne          128
      57: aload_0
      58: aload_1
      59: putfield      #16                 // Field targetName:Ljava/lang/String;
      62: aload_0
      63: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      66: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      71: ifeq          107
      74: aload_0
      75: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      78: new           #57                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #59                 // String Bean with name \'
      87: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #61                 // String \' concluding interceptor chain is not an advisor class: treating it as a target or TargetSource
      96: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     107: aload_0
     108: aload_0
     109: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
     112: aload_0
     113: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
     116: arraylength
     117: iconst_1
     118: isub
     119: invokestatic  #64                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     122: checkcast     #65                 // class "[Ljava/lang/String;"
     125: putfield      #15                 // Field interceptorNames:[Ljava/lang/String;
     128: return

  private boolean isNamedBeanAnAdvisorOrAdvice(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #66                 // String No BeanFactory set
      14: invokestatic  #67                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      21: aload_1
      22: invokeinterface #28,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getType:(Ljava/lang/String;)Ljava/lang/Class;
      27: astore_2
      28: aload_2
      29: ifnull        56
      32: ldc           #68                 // class org/springframework/aop/Advisor
      34: aload_2
      35: invokevirtual #69                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      38: ifne          50
      41: ldc           #70                 // class org/aopalliance/aop/Advice
      43: aload_2
      44: invokevirtual #69                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      60: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      65: ifeq          101
      68: aload_0
      69: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      72: new           #57                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #71                 // String Could not determine type of bean with name \'
      81: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_1
      85: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #72                 // String \' - assuming it is neither an Advisor nor an Advice
      90: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     101: iconst_0
     102: ireturn

  private synchronized void initializeAdvisorChain() throws org.springframework.aop.framework.AopConfigException, org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field advisorChainInitialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
      12: invokestatic  #50                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      15: ifne          246
      18: aload_0
      19: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      22: ifnonnull     58
      25: new           #73                 // class java/lang/IllegalStateException
      28: dup
      29: new           #57                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #74                 // String No BeanFactory available anymore (probably due to serialization) - cannot resolve interceptor names
      38: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
      45: invokestatic  #75                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      48: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
      62: aload_0
      63: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
      66: arraylength
      67: iconst_1
      68: isub
      69: aaload
      70: ldc           #53                 // String *
      72: invokevirtual #54                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      75: ifeq          105
      78: aload_0
      79: getfield      #16                 // Field targetName:Ljava/lang/String;
      82: ifnonnull     105
      85: aload_0
      86: getfield      #32                 // Field targetSource:Lorg/springframework/aop/TargetSource;
      89: getstatic     #51                 // Field EMPTY_TARGET_SOURCE:Lorg/springframework/aop/TargetSource;
      92: if_acmpne     105
      95: new           #78                 // class org/springframework/aop/framework/AopConfigException
      98: dup
      99: ldc           #79                 // String Target required after globals
     101: invokespecial #80                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: getfield      #15                 // Field interceptorNames:[Ljava/lang/String;
     109: astore_1
     110: aload_1
     111: arraylength
     112: istore_2
     113: iconst_0
     114: istore_3
     115: iload_3
     116: iload_2
     117: if_icmpge     246
     120: aload_1
     121: iload_3
     122: aaload
     123: astore        4
     125: aload         4
     127: ldc           #53                 // String *
     129: invokevirtual #54                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     132: ifeq          186
     135: aload_0
     136: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     139: instanceof    #81                 // class org/springframework/beans/factory/ListableBeanFactory
     142: ifne          155
     145: new           #78                 // class org/springframework/aop/framework/AopConfigException
     148: dup
     149: ldc           #82                 // String Can only use global advisors or interceptors with a ListableBeanFactory
     151: invokespecial #80                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aload_0
     156: aload_0
     157: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     160: checkcast     #81                 // class org/springframework/beans/factory/ListableBeanFactory
     163: aload         4
     165: iconst_0
     166: aload         4
     168: invokevirtual #83                 // Method java/lang/String.length:()I
     171: ldc           #53                 // String *
     173: invokevirtual #83                 // Method java/lang/String.length:()I
     176: isub
     177: invokevirtual #84                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     180: invokespecial #85                 // Method addGlobalAdvisors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/String;)V
     183: goto          240
     186: aload_0
     187: getfield      #6                  // Field singleton:Z
     190: ifne          207
     193: aload_0
     194: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     197: aload         4
     199: invokeinterface #86,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.isSingleton:(Ljava/lang/String;)Z
     204: ifeq          223
     207: aload_0
     208: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     211: aload         4
     213: invokeinterface #87,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     218: astore        5
     220: goto          234
     223: new           #88                 // class org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor
     226: dup
     227: aload         4
     229: invokespecial #89                 // Method org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor."<init>":(Ljava/lang/String;)V
     232: astore        5
     234: aload_0
     235: aload         5
     237: invokespecial #90                 // Method addAdvisorOnChainCreation:(Ljava/lang/Object;)V
     240: iinc          3, 1
     243: goto          115
     246: aload_0
     247: iconst_1
     248: putfield      #13                 // Field advisorChainInitialized:Z
     251: return

  private java.util.List<org.springframework.aop.Advisor> freshAdvisorChain();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method getAdvisors:()[Lorg/springframework/aop/Advisor;
       4: astore_1
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: arraylength
      11: invokespecial #93                 // Method java/util/ArrayList."<init>":(I)V
      14: astore_2
      15: aload_1
      16: astore_3
      17: aload_3
      18: arraylength
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iload         5
      26: iload         4
      28: if_icmpge     195
      31: aload_3
      32: iload         5
      34: aaload
      35: astore        6
      37: aload         6
      39: instanceof    #88                 // class org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor
      42: ifeq          180
      45: aload         6
      47: checkcast     #88                 // class org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor
      50: astore        7
      52: aload_0
      53: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      56: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      61: ifeq          101
      64: aload_0
      65: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      68: new           #57                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #94                 // String Refreshing bean named \'
      77: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         7
      82: invokevirtual #95                 // Method org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor.getBeanName:()Ljava/lang/String;
      85: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #96                 // String \'
      90: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     101: aload_0
     102: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     105: ifnonnull     144
     108: new           #73                 // class java/lang/IllegalStateException
     111: dup
     112: new           #57                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #97                 // String No BeanFactory available anymore (probably due to serialization) - cannot resolve prototype advisor \'
     121: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload         7
     126: invokevirtual #95                 // Method org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor.getBeanName:()Ljava/lang/String;
     129: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #96                 // String \'
     134: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: aload_0
     145: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     148: aload         7
     150: invokevirtual #95                 // Method org/springframework/aop/framework/ProxyFactoryBean$PrototypePlaceholderAdvisor.getBeanName:()Ljava/lang/String;
     153: invokeinterface #87,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     158: astore        8
     160: aload_0
     161: aload         8
     163: invokespecial #98                 // Method namedBeanToAdvisor:(Ljava/lang/Object;)Lorg/springframework/aop/Advisor;
     166: astore        9
     168: aload_2
     169: aload         9
     171: invokeinterface #99,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     176: pop
     177: goto          189
     180: aload_2
     181: aload         6
     183: invokeinterface #99,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     188: pop
     189: iinc          5, 1
     192: goto          24
     195: aload_2
     196: areturn

  private void addGlobalAdvisors(org.springframework.beans.factory.ListableBeanFactory, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #68                 // class org/springframework/aop/Advisor
       3: invokestatic  #100                // Method org/springframework/beans/factory/BeanFactoryUtils.beanNamesForTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)[Ljava/lang/String;
       6: astore_3
       7: aload_1
       8: ldc           #101                // class org/aopalliance/intercept/Interceptor
      10: invokestatic  #100                // Method org/springframework/beans/factory/BeanFactoryUtils.beanNamesForTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)[Ljava/lang/String;
      13: astore        4
      15: aload_3
      16: arraylength
      17: ifgt          26
      20: aload         4
      22: arraylength
      23: ifle          196
      26: new           #92                 // class java/util/ArrayList
      29: dup
      30: aload_3
      31: arraylength
      32: aload         4
      34: arraylength
      35: iadd
      36: invokespecial #93                 // Method java/util/ArrayList."<init>":(I)V
      39: astore        5
      41: aload_3
      42: astore        6
      44: aload         6
      46: arraylength
      47: istore        7
      49: iconst_0
      50: istore        8
      52: iload         8
      54: iload         7
      56: if_icmpge     97
      59: aload         6
      61: iload         8
      63: aaload
      64: astore        9
      66: aload         9
      68: aload_2
      69: invokevirtual #102                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      72: ifeq          91
      75: aload         5
      77: aload_1
      78: aload         9
      80: invokeinterface #103,  2          // InterfaceMethod org/springframework/beans/factory/ListableBeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
      85: invokeinterface #99,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      90: pop
      91: iinc          8, 1
      94: goto          52
      97: aload         4
      99: astore        6
     101: aload         6
     103: arraylength
     104: istore        7
     106: iconst_0
     107: istore        8
     109: iload         8
     111: iload         7
     113: if_icmpge     154
     116: aload         6
     118: iload         8
     120: aaload
     121: astore        9
     123: aload         9
     125: aload_2
     126: invokevirtual #102                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     129: ifeq          148
     132: aload         5
     134: aload_1
     135: aload         9
     137: invokeinterface #103,  2          // InterfaceMethod org/springframework/beans/factory/ListableBeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     142: invokeinterface #99,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     147: pop
     148: iinc          8, 1
     151: goto          109
     154: aload         5
     156: invokestatic  #104                // Method org/springframework/core/annotation/AnnotationAwareOrderComparator.sort:(Ljava/util/List;)V
     159: aload         5
     161: invokeinterface #105,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     166: astore        6
     168: aload         6
     170: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     175: ifeq          196
     178: aload         6
     180: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     185: astore        7
     187: aload_0
     188: aload         7
     190: invokespecial #90                 // Method addAdvisorOnChainCreation:(Ljava/lang/Object;)V
     193: goto          168
     196: return

  private void addAdvisorOnChainCreation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #98                 // Method namedBeanToAdvisor:(Ljava/lang/Object;)Lorg/springframework/aop/Advisor;
       6: invokevirtual #108                // Method addAdvisor:(Lorg/springframework/aop/Advisor;)V
       9: return

  private org.springframework.aop.TargetSource freshTargetSource();
    Code:
       0: aload_0
       1: getfield      #16                 // Field targetName:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #32                 // Field targetSource:Lorg/springframework/aop/TargetSource;
      11: areturn
      12: aload_0
      13: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      16: ifnonnull     54
      19: new           #73                 // class java/lang/IllegalStateException
      22: dup
      23: new           #57                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #109                // String No BeanFactory available anymore (probably due to serialization) - cannot resolve target with name \'
      32: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #16                 // Field targetName:Ljava/lang/String;
      39: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #96                 // String \'
      44: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      58: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      63: ifeq          102
      66: aload_0
      67: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      70: new           #57                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #110                // String Refreshing target with name \'
      79: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #16                 // Field targetName:Ljava/lang/String;
      86: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #96                 // String \'
      91: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     102: aload_0
     103: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     106: aload_0
     107: getfield      #16                 // Field targetName:Ljava/lang/String;
     110: invokeinterface #87,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     115: astore_1
     116: aload_1
     117: instanceof    #111                // class org/springframework/aop/TargetSource
     120: ifeq          130
     123: aload_1
     124: checkcast     #111                // class org/springframework/aop/TargetSource
     127: goto          138
     130: new           #112                // class org/springframework/aop/target/SingletonTargetSource
     133: dup
     134: aload_1
     135: invokespecial #113                // Method org/springframework/aop/target/SingletonTargetSource."<init>":(Ljava/lang/Object;)V
     138: areturn

  private org.springframework.aop.Advisor namedBeanToAdvisor(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field advisorAdapterRegistry:Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;
       4: aload_1
       5: invokeinterface #114,  2          // InterfaceMethod org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.wrap:(Ljava/lang/Object;)Lorg/springframework/aop/Advisor;
      10: areturn
      11: astore_2
      12: new           #78                 // class org/springframework/aop/framework/AopConfigException
      15: dup
      16: new           #57                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #116                // String Unknown advisor type
      25: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #117                // String ; can only include Advisor or Advice type beans in interceptorNames chain except for last entry which may also be target instance or TargetSource
      37: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_2
      44: invokespecial #118                // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    10    11   Class org/springframework/aop/framework/adapter/UnknownAdviceTypeException

  protected void adviceChanged();
    Code:
       0: aload_0
       1: invokespecial #119                // Method org/springframework/aop/framework/ProxyCreatorSupport.adviceChanged:()V
       4: aload_0
       5: getfield      #6                  // Field singleton:Z
       8: ifeq          41
      11: aload_0
      12: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: ldc           #120                // String Advice has changed; re-caching singleton instance
      17: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      22: aload_0
      23: dup
      24: astore_1
      25: monitorenter
      26: aload_0
      27: aconst_null
      28: putfield      #25                 // Field singletonInstance:Ljava/lang/Object;
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_2
      37: aload_1
      38: monitorexit
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
          26    33    36   any
          36    39    36   any

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #121                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: invokestatic  #10                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
       8: putfield      #11                 // Field proxyClassLoader:Ljava/lang/ClassLoader;
      11: return
}
