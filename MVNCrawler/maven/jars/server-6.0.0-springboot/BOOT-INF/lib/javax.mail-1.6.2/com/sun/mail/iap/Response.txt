Compiled from "Response.java"
public class com.sun.mail.iap.Response {
  protected int index;

  protected int pindex;

  protected int size;

  protected byte[] buffer;

  protected int type;

  protected java.lang.String tag;

  protected java.lang.Exception ex;

  protected boolean utf8;

  private static final int increment;

  public static final int TAG_MASK;

  public static final int CONTINUATION;

  public static final int TAGGED;

  public static final int UNTAGGED;

  public static final int TYPE_MASK;

  public static final int OK;

  public static final int NO;

  public static final int BAD;

  public static final int BYE;

  public static final int SYNTHETIC;

  private static java.lang.String ATOM_CHAR_DELIM;

  private static java.lang.String ASTRING_CHAR_DELIM;

  public com.sun.mail.iap.Response(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public com.sun.mail.iap.Response(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field buffer:[B
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field type:I
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field tag:Ljava/lang/String;
      19: iload_2
      20: ifeq          37
      23: aload_0
      24: aload_1
      25: getstatic     #6                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      28: invokevirtual #7                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      31: putfield      #3                  // Field buffer:[B
      34: goto          48
      37: aload_0
      38: aload_1
      39: getstatic     #8                  // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      42: invokevirtual #7                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      45: putfield      #3                  // Field buffer:[B
      48: aload_0
      49: aload_0
      50: getfield      #3                  // Field buffer:[B
      53: arraylength
      54: putfield      #9                  // Field size:I
      57: aload_0
      58: iload_2
      59: putfield      #10                 // Field utf8:Z
      62: aload_0
      63: invokespecial #11                 // Method parse:()V
      66: return

  public com.sun.mail.iap.Response(com.sun.mail.iap.Protocol) throws java.io.IOException, com.sun.mail.iap.ProtocolException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field buffer:[B
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field type:I
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field tag:Ljava/lang/String;
      19: aload_1
      20: invokevirtual #12                 // Method com/sun/mail/iap/Protocol.getResponseBuffer:()Lcom/sun/mail/iap/ByteArray;
      23: astore_2
      24: aload_1
      25: invokevirtual #13                 // Method com/sun/mail/iap/Protocol.getInputStream:()Lcom/sun/mail/iap/ResponseInputStream;
      28: aload_2
      29: invokevirtual #14                 // Method com/sun/mail/iap/ResponseInputStream.readResponse:(Lcom/sun/mail/iap/ByteArray;)Lcom/sun/mail/iap/ByteArray;
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokevirtual #15                 // Method com/sun/mail/iap/ByteArray.getBytes:()[B
      38: putfield      #3                  // Field buffer:[B
      41: aload_0
      42: aload_3
      43: invokevirtual #16                 // Method com/sun/mail/iap/ByteArray.getCount:()I
      46: iconst_2
      47: isub
      48: putfield      #9                  // Field size:I
      51: aload_0
      52: aload_1
      53: invokevirtual #17                 // Method com/sun/mail/iap/Protocol.supportsUtf8:()Z
      56: putfield      #10                 // Field utf8:Z
      59: aload_0
      60: invokespecial #11                 // Method parse:()V
      63: return

  public com.sun.mail.iap.Response(com.sun.mail.iap.Response);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field buffer:[B
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field type:I
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field tag:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: getfield      #18                 // Field index:I
      24: putfield      #18                 // Field index:I
      27: aload_0
      28: aload_1
      29: getfield      #19                 // Field pindex:I
      32: putfield      #19                 // Field pindex:I
      35: aload_0
      36: aload_1
      37: getfield      #9                  // Field size:I
      40: putfield      #9                  // Field size:I
      43: aload_0
      44: aload_1
      45: getfield      #3                  // Field buffer:[B
      48: putfield      #3                  // Field buffer:[B
      51: aload_0
      52: aload_1
      53: getfield      #4                  // Field type:I
      56: putfield      #4                  // Field type:I
      59: aload_0
      60: aload_1
      61: getfield      #5                  // Field tag:Ljava/lang/String;
      64: putfield      #5                  // Field tag:Ljava/lang/String;
      67: aload_0
      68: aload_1
      69: getfield      #20                 // Field ex:Ljava/lang/Exception;
      72: putfield      #20                 // Field ex:Ljava/lang/Exception;
      75: aload_0
      76: aload_1
      77: getfield      #10                 // Field utf8:Z
      80: putfield      #10                 // Field utf8:Z
      83: return

  public static com.sun.mail.iap.Response byeResponse(java.lang.Exception);
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #23                 // String * BYE JavaMail Exception:
       9: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #25                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: astore_1
      23: aload_1
      24: bipush        13
      26: bipush        32
      28: invokevirtual #27                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      31: bipush        10
      33: bipush        32
      35: invokevirtual #27                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      38: astore_1
      39: new           #28                 // class com/sun/mail/iap/Response
      42: dup
      43: aload_1
      44: invokespecial #29                 // Method "<init>":(Ljava/lang/String;)V
      47: astore_2
      48: aload_2
      49: dup
      50: getfield      #4                  // Field type:I
      53: bipush        32
      55: ior
      56: putfield      #4                  // Field type:I
      59: aload_2
      60: aload_0
      61: putfield      #20                 // Field ex:Ljava/lang/Exception;
      64: aload_2
      65: areturn

  public boolean supportsUtf8();
    Code:
       0: aload_0
       1: getfield      #10                 // Field utf8:Z
       4: ireturn

  private void parse();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #18                 // Field index:I
       5: aload_0
       6: getfield      #9                  // Field size:I
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #3                  // Field buffer:[B
      17: aload_0
      18: getfield      #18                 // Field index:I
      21: baload
      22: bipush        43
      24: if_icmpne     48
      27: aload_0
      28: dup
      29: getfield      #4                  // Field type:I
      32: iconst_1
      33: ior
      34: putfield      #4                  // Field type:I
      37: aload_0
      38: dup
      39: getfield      #18                 // Field index:I
      42: iconst_1
      43: iadd
      44: putfield      #18                 // Field index:I
      47: return
      48: aload_0
      49: getfield      #3                  // Field buffer:[B
      52: aload_0
      53: getfield      #18                 // Field index:I
      56: baload
      57: bipush        42
      59: if_icmpne     85
      62: aload_0
      63: dup
      64: getfield      #4                  // Field type:I
      67: iconst_3
      68: ior
      69: putfield      #4                  // Field type:I
      72: aload_0
      73: dup
      74: getfield      #18                 // Field index:I
      77: iconst_1
      78: iadd
      79: putfield      #18                 // Field index:I
      82: goto          116
      85: aload_0
      86: dup
      87: getfield      #4                  // Field type:I
      90: iconst_2
      91: ior
      92: putfield      #4                  // Field type:I
      95: aload_0
      96: aload_0
      97: invokevirtual #30                 // Method readAtom:()Ljava/lang/String;
     100: putfield      #5                  // Field tag:Ljava/lang/String;
     103: aload_0
     104: getfield      #5                  // Field tag:Ljava/lang/String;
     107: ifnonnull     116
     110: aload_0
     111: ldc           #31                 // String
     113: putfield      #5                  // Field tag:Ljava/lang/String;
     116: aload_0
     117: getfield      #18                 // Field index:I
     120: istore_1
     121: aload_0
     122: invokevirtual #30                 // Method readAtom:()Ljava/lang/String;
     125: astore_2
     126: aload_2
     127: ifnonnull     133
     130: ldc           #31                 // String
     132: astore_2
     133: aload_2
     134: ldc           #32                 // String OK
     136: invokevirtual #33                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     139: ifeq          155
     142: aload_0
     143: dup
     144: getfield      #4                  // Field type:I
     147: iconst_4
     148: ior
     149: putfield      #4                  // Field type:I
     152: goto          229
     155: aload_2
     156: ldc           #34                 // String NO
     158: invokevirtual #33                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     161: ifeq          178
     164: aload_0
     165: dup
     166: getfield      #4                  // Field type:I
     169: bipush        8
     171: ior
     172: putfield      #4                  // Field type:I
     175: goto          229
     178: aload_2
     179: ldc           #35                 // String BAD
     181: invokevirtual #33                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     184: ifeq          201
     187: aload_0
     188: dup
     189: getfield      #4                  // Field type:I
     192: bipush        12
     194: ior
     195: putfield      #4                  // Field type:I
     198: goto          229
     201: aload_2
     202: ldc           #36                 // String BYE
     204: invokevirtual #33                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     207: ifeq          224
     210: aload_0
     211: dup
     212: getfield      #4                  // Field type:I
     215: bipush        16
     217: ior
     218: putfield      #4                  // Field type:I
     221: goto          229
     224: aload_0
     225: iload_1
     226: putfield      #18                 // Field index:I
     229: aload_0
     230: aload_0
     231: getfield      #18                 // Field index:I
     234: putfield      #19                 // Field pindex:I
     237: return

  public void skipSpaces();
    Code:
       0: aload_0
       1: getfield      #18                 // Field index:I
       4: aload_0
       5: getfield      #9                  // Field size:I
       8: if_icmpge     38
      11: aload_0
      12: getfield      #3                  // Field buffer:[B
      15: aload_0
      16: getfield      #18                 // Field index:I
      19: baload
      20: bipush        32
      22: if_icmpne     38
      25: aload_0
      26: dup
      27: getfield      #18                 // Field index:I
      30: iconst_1
      31: iadd
      32: putfield      #18                 // Field index:I
      35: goto          0
      38: return

  public boolean isNextNonSpace(char);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #18                 // Field index:I
       8: aload_0
       9: getfield      #9                  // Field size:I
      12: if_icmpge     41
      15: aload_0
      16: getfield      #3                  // Field buffer:[B
      19: aload_0
      20: getfield      #18                 // Field index:I
      23: baload
      24: iload_1
      25: i2b
      26: if_icmpne     41
      29: aload_0
      30: dup
      31: getfield      #18                 // Field index:I
      34: iconst_1
      35: iadd
      36: putfield      #18                 // Field index:I
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public void skipToken();
    Code:
       0: aload_0
       1: getfield      #18                 // Field index:I
       4: aload_0
       5: getfield      #9                  // Field size:I
       8: if_icmpge     38
      11: aload_0
      12: getfield      #3                  // Field buffer:[B
      15: aload_0
      16: getfield      #18                 // Field index:I
      19: baload
      20: bipush        32
      22: if_icmpeq     38
      25: aload_0
      26: dup
      27: getfield      #18                 // Field index:I
      30: iconst_1
      31: iadd
      32: putfield      #18                 // Field index:I
      35: goto          0
      38: return

  public void skip(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #18                 // Field index:I
       5: iload_1
       6: iadd
       7: putfield      #18                 // Field index:I
      10: return

  public byte peekByte();
    Code:
       0: aload_0
       1: getfield      #18                 // Field index:I
       4: aload_0
       5: getfield      #9                  // Field size:I
       8: if_icmpge     21
      11: aload_0
      12: getfield      #3                  // Field buffer:[B
      15: aload_0
      16: getfield      #18                 // Field index:I
      19: baload
      20: ireturn
      21: iconst_0
      22: ireturn

  public byte readByte();
    Code:
       0: aload_0
       1: getfield      #18                 // Field index:I
       4: aload_0
       5: getfield      #9                  // Field size:I
       8: if_icmpge     28
      11: aload_0
      12: getfield      #3                  // Field buffer:[B
      15: aload_0
      16: dup
      17: getfield      #18                 // Field index:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #18                 // Field index:I
      26: baload
      27: ireturn
      28: iconst_0
      29: ireturn

  public java.lang.String readAtom();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field ATOM_CHAR_DELIM:Ljava/lang/String;
       4: invokespecial #39                 // Method readDelimString:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  private java.lang.String readDelimString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #18                 // Field index:I
       8: aload_0
       9: getfield      #9                  // Field size:I
      12: if_icmplt     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #18                 // Field index:I
      21: istore_3
      22: aload_0
      23: getfield      #18                 // Field index:I
      26: aload_0
      27: getfield      #9                  // Field size:I
      30: if_icmpge     81
      33: aload_0
      34: getfield      #3                  // Field buffer:[B
      37: aload_0
      38: getfield      #18                 // Field index:I
      41: baload
      42: sipush        255
      45: iand
      46: dup
      47: istore_2
      48: bipush        32
      50: if_icmplt     81
      53: aload_1
      54: iload_2
      55: i2c
      56: invokevirtual #40                 // Method java/lang/String.indexOf:(I)I
      59: ifge          81
      62: iload_2
      63: bipush        127
      65: if_icmpeq     81
      68: aload_0
      69: dup
      70: getfield      #18                 // Field index:I
      73: iconst_1
      74: iadd
      75: putfield      #18                 // Field index:I
      78: goto          22
      81: aload_0
      82: aload_0
      83: getfield      #3                  // Field buffer:[B
      86: iload_3
      87: aload_0
      88: getfield      #18                 // Field index:I
      91: invokespecial #41                 // Method toString:([BII)Ljava/lang/String;
      94: areturn

  public java.lang.String readString(char);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #18                 // Field index:I
       8: aload_0
       9: getfield      #9                  // Field size:I
      12: if_icmplt     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #18                 // Field index:I
      21: istore_2
      22: aload_0
      23: getfield      #18                 // Field index:I
      26: aload_0
      27: getfield      #9                  // Field size:I
      30: if_icmpge     59
      33: aload_0
      34: getfield      #3                  // Field buffer:[B
      37: aload_0
      38: getfield      #18                 // Field index:I
      41: baload
      42: iload_1
      43: if_icmpeq     59
      46: aload_0
      47: dup
      48: getfield      #18                 // Field index:I
      51: iconst_1
      52: iadd
      53: putfield      #18                 // Field index:I
      56: goto          22
      59: aload_0
      60: aload_0
      61: getfield      #3                  // Field buffer:[B
      64: iload_2
      65: aload_0
      66: getfield      #18                 // Field index:I
      69: invokespecial #41                 // Method toString:([BII)Ljava/lang/String;
      72: areturn

  public java.lang.String[] readStringList();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #42                 // Method readStringList:(Z)[Ljava/lang/String;
       5: areturn

  public java.lang.String[] readAtomStringList();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #42                 // Method readStringList:(Z)[Ljava/lang/String;
       5: areturn

  private java.lang.String[] readStringList(boolean);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #3                  // Field buffer:[B
       8: aload_0
       9: getfield      #18                 // Field index:I
      12: baload
      13: bipush        40
      15: if_icmpeq     20
      18: aconst_null
      19: areturn
      20: aload_0
      21: dup
      22: getfield      #18                 // Field index:I
      25: iconst_1
      26: iadd
      27: putfield      #18                 // Field index:I
      30: new           #43                 // class java/util/ArrayList
      33: dup
      34: invokespecial #44                 // Method java/util/ArrayList."<init>":()V
      37: astore_2
      38: aload_0
      39: bipush        41
      41: invokevirtual #45                 // Method isNextNonSpace:(C)Z
      44: ifne          81
      47: iload_1
      48: ifeq          58
      51: aload_0
      52: invokevirtual #46                 // Method readAtomString:()Ljava/lang/String;
      55: goto          62
      58: aload_0
      59: invokevirtual #47                 // Method readString:()Ljava/lang/String;
      62: astore_3
      63: aload_3
      64: ifnonnull     70
      67: goto          81
      70: aload_2
      71: aload_3
      72: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: goto          38
      81: aload_2
      82: aload_2
      83: invokeinterface #49,  1           // InterfaceMethod java/util/List.size:()I
      88: anewarray     #50                 // class java/lang/String
      91: invokeinterface #51,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      96: checkcast     #52                 // class "[Ljava/lang/String;"
      99: areturn

  public int readNumber();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #18                 // Field index:I
       8: istore_1
       9: aload_0
      10: getfield      #18                 // Field index:I
      13: aload_0
      14: getfield      #9                  // Field size:I
      17: if_icmpge     49
      20: aload_0
      21: getfield      #3                  // Field buffer:[B
      24: aload_0
      25: getfield      #18                 // Field index:I
      28: baload
      29: i2c
      30: invokestatic  #53                 // Method java/lang/Character.isDigit:(C)Z
      33: ifeq          49
      36: aload_0
      37: dup
      38: getfield      #18                 // Field index:I
      41: iconst_1
      42: iadd
      43: putfield      #18                 // Field index:I
      46: goto          9
      49: aload_0
      50: getfield      #18                 // Field index:I
      53: iload_1
      54: if_icmple     71
      57: aload_0
      58: getfield      #3                  // Field buffer:[B
      61: iload_1
      62: aload_0
      63: getfield      #18                 // Field index:I
      66: invokestatic  #54                 // Method com/sun/mail/util/ASCIIUtility.parseInt:([BII)I
      69: ireturn
      70: astore_2
      71: iconst_m1
      72: ireturn
    Exception table:
       from    to  target type
          57    69    70   Class java/lang/NumberFormatException

  public long readLong();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #18                 // Field index:I
       8: istore_1
       9: aload_0
      10: getfield      #18                 // Field index:I
      13: aload_0
      14: getfield      #9                  // Field size:I
      17: if_icmpge     49
      20: aload_0
      21: getfield      #3                  // Field buffer:[B
      24: aload_0
      25: getfield      #18                 // Field index:I
      28: baload
      29: i2c
      30: invokestatic  #53                 // Method java/lang/Character.isDigit:(C)Z
      33: ifeq          49
      36: aload_0
      37: dup
      38: getfield      #18                 // Field index:I
      41: iconst_1
      42: iadd
      43: putfield      #18                 // Field index:I
      46: goto          9
      49: aload_0
      50: getfield      #18                 // Field index:I
      53: iload_1
      54: if_icmple     71
      57: aload_0
      58: getfield      #3                  // Field buffer:[B
      61: iload_1
      62: aload_0
      63: getfield      #18                 // Field index:I
      66: invokestatic  #56                 // Method com/sun/mail/util/ASCIIUtility.parseLong:([BII)J
      69: lreturn
      70: astore_2
      71: ldc2_w        #57                 // long -1l
      74: lreturn
    Exception table:
       from    to  target type
          57    69    70   Class java/lang/NumberFormatException

  public java.lang.String readString();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokespecial #59                 // Method parseString:(ZZ)Ljava/lang/Object;
       6: checkcast     #50                 // class java/lang/String
       9: areturn

  public java.io.ByteArrayInputStream readBytes();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method readByteArray:()Lcom/sun/mail/iap/ByteArray;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #61                 // Method com/sun/mail/iap/ByteArray.toByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
      13: areturn
      14: aconst_null
      15: areturn

  public com.sun.mail.iap.ByteArray readByteArray();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method isContinuation:()Z
       4: ifeq          36
       7: aload_0
       8: invokevirtual #37                 // Method skipSpaces:()V
      11: new           #63                 // class com/sun/mail/iap/ByteArray
      14: dup
      15: aload_0
      16: getfield      #3                  // Field buffer:[B
      19: aload_0
      20: getfield      #18                 // Field index:I
      23: aload_0
      24: getfield      #9                  // Field size:I
      27: aload_0
      28: getfield      #18                 // Field index:I
      31: isub
      32: invokespecial #64                 // Method com/sun/mail/iap/ByteArray."<init>":([BII)V
      35: areturn
      36: aload_0
      37: iconst_0
      38: iconst_0
      39: invokespecial #59                 // Method parseString:(ZZ)Ljava/lang/Object;
      42: checkcast     #63                 // class com/sun/mail/iap/ByteArray
      45: areturn

  public java.lang.String readAtomString();
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_1
       3: invokespecial #59                 // Method parseString:(ZZ)Ljava/lang/Object;
       6: checkcast     #50                 // class java/lang/String
       9: areturn

  private java.lang.Object parseString(boolean, boolean);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: getfield      #3                  // Field buffer:[B
       8: aload_0
       9: getfield      #18                 // Field index:I
      12: baload
      13: istore_3
      14: iload_3
      15: bipush        34
      17: if_icmpne     185
      20: aload_0
      21: dup
      22: getfield      #18                 // Field index:I
      25: iconst_1
      26: iadd
      27: putfield      #18                 // Field index:I
      30: aload_0
      31: getfield      #18                 // Field index:I
      34: istore        4
      36: aload_0
      37: getfield      #18                 // Field index:I
      40: istore        5
      42: aload_0
      43: getfield      #18                 // Field index:I
      46: aload_0
      47: getfield      #9                  // Field size:I
      50: if_icmpge     126
      53: aload_0
      54: getfield      #3                  // Field buffer:[B
      57: aload_0
      58: getfield      #18                 // Field index:I
      61: baload
      62: dup
      63: istore_3
      64: bipush        34
      66: if_icmpeq     126
      69: iload_3
      70: bipush        92
      72: if_icmpne     85
      75: aload_0
      76: dup
      77: getfield      #18                 // Field index:I
      80: iconst_1
      81: iadd
      82: putfield      #18                 // Field index:I
      85: aload_0
      86: getfield      #18                 // Field index:I
      89: iload         5
      91: if_icmpeq     110
      94: aload_0
      95: getfield      #3                  // Field buffer:[B
      98: iload         5
     100: aload_0
     101: getfield      #3                  // Field buffer:[B
     104: aload_0
     105: getfield      #18                 // Field index:I
     108: baload
     109: bastore
     110: iinc          5, 1
     113: aload_0
     114: dup
     115: getfield      #18                 // Field index:I
     118: iconst_1
     119: iadd
     120: putfield      #18                 // Field index:I
     123: goto          42
     126: aload_0
     127: getfield      #18                 // Field index:I
     130: aload_0
     131: getfield      #9                  // Field size:I
     134: if_icmplt     139
     137: aconst_null
     138: areturn
     139: aload_0
     140: dup
     141: getfield      #18                 // Field index:I
     144: iconst_1
     145: iadd
     146: putfield      #18                 // Field index:I
     149: iload_2
     150: ifeq          166
     153: aload_0
     154: aload_0
     155: getfield      #3                  // Field buffer:[B
     158: iload         4
     160: iload         5
     162: invokespecial #41                 // Method toString:([BII)Ljava/lang/String;
     165: areturn
     166: new           #63                 // class com/sun/mail/iap/ByteArray
     169: dup
     170: aload_0
     171: getfield      #3                  // Field buffer:[B
     174: iload         4
     176: iload         5
     178: iload         4
     180: isub
     181: invokespecial #64                 // Method com/sun/mail/iap/ByteArray."<init>":([BII)V
     184: areturn
     185: iload_3
     186: bipush        123
     188: if_icmpne     309
     191: aload_0
     192: dup
     193: getfield      #18                 // Field index:I
     196: iconst_1
     197: iadd
     198: dup_x1
     199: putfield      #18                 // Field index:I
     202: istore        4
     204: aload_0
     205: getfield      #3                  // Field buffer:[B
     208: aload_0
     209: getfield      #18                 // Field index:I
     212: baload
     213: bipush        125
     215: if_icmpeq     231
     218: aload_0
     219: dup
     220: getfield      #18                 // Field index:I
     223: iconst_1
     224: iadd
     225: putfield      #18                 // Field index:I
     228: goto          204
     231: iconst_0
     232: istore        5
     234: aload_0
     235: getfield      #3                  // Field buffer:[B
     238: iload         4
     240: aload_0
     241: getfield      #18                 // Field index:I
     244: invokestatic  #54                 // Method com/sun/mail/util/ASCIIUtility.parseInt:([BII)I
     247: istore        5
     249: goto          256
     252: astore        6
     254: aconst_null
     255: areturn
     256: aload_0
     257: getfield      #18                 // Field index:I
     260: iconst_3
     261: iadd
     262: istore        4
     264: aload_0
     265: iload         4
     267: iload         5
     269: iadd
     270: putfield      #18                 // Field index:I
     273: iload_2
     274: ifeq          293
     277: aload_0
     278: aload_0
     279: getfield      #3                  // Field buffer:[B
     282: iload         4
     284: iload         4
     286: iload         5
     288: iadd
     289: invokespecial #41                 // Method toString:([BII)Ljava/lang/String;
     292: areturn
     293: new           #63                 // class com/sun/mail/iap/ByteArray
     296: dup
     297: aload_0
     298: getfield      #3                  // Field buffer:[B
     301: iload         4
     303: iload         5
     305: invokespecial #64                 // Method com/sun/mail/iap/ByteArray."<init>":([BII)V
     308: areturn
     309: iload_1
     310: ifeq          353
     313: aload_0
     314: getfield      #18                 // Field index:I
     317: istore        4
     319: aload_0
     320: getstatic     #65                 // Field ASTRING_CHAR_DELIM:Ljava/lang/String;
     323: invokespecial #39                 // Method readDelimString:(Ljava/lang/String;)Ljava/lang/String;
     326: astore        5
     328: iload_2
     329: ifeq          335
     332: aload         5
     334: areturn
     335: new           #63                 // class com/sun/mail/iap/ByteArray
     338: dup
     339: aload_0
     340: getfield      #3                  // Field buffer:[B
     343: iload         4
     345: aload_0
     346: getfield      #18                 // Field index:I
     349: invokespecial #64                 // Method com/sun/mail/iap/ByteArray."<init>":([BII)V
     352: areturn
     353: iload_3
     354: bipush        78
     356: if_icmpeq     365
     359: iload_3
     360: bipush        110
     362: if_icmpne     377
     365: aload_0
     366: dup
     367: getfield      #18                 // Field index:I
     370: iconst_3
     371: iadd
     372: putfield      #18                 // Field index:I
     375: aconst_null
     376: areturn
     377: aconst_null
     378: areturn
    Exception table:
       from    to  target type
         234   249   252   Class java/lang/NumberFormatException

  private java.lang.String toString(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field utf8:Z
       4: ifeq          25
       7: new           #50                 // class java/lang/String
      10: dup
      11: aload_1
      12: iload_2
      13: iload_3
      14: iload_2
      15: isub
      16: getstatic     #6                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      19: invokespecial #66                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      22: goto          31
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokestatic  #67                 // Method com/sun/mail/util/ASCIIUtility.toString:([BII)Ljava/lang/String;
      31: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: ireturn

  public boolean isContinuation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: iconst_3
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTagged();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: iconst_3
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isUnTagged();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: iconst_3
       5: iand
       6: iconst_3
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isOK();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: bipush        28
       6: iand
       7: iconst_4
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isNO();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: bipush        28
       6: iand
       7: bipush        8
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isBAD();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: bipush        28
       6: iand
       7: bipush        12
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isBYE();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: bipush        28
       6: iand
       7: bipush        16
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isSynthetic();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: bipush        32
       6: iand
       7: bipush        32
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String getTag();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tag:Ljava/lang/String;
       4: areturn

  public java.lang.String getRest();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method skipSpaces:()V
       4: aload_0
       5: aload_0
       6: getfield      #3                  // Field buffer:[B
       9: aload_0
      10: getfield      #18                 // Field index:I
      13: aload_0
      14: getfield      #9                  // Field size:I
      17: invokespecial #41                 // Method toString:([BII)Ljava/lang/String;
      20: areturn

  public java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #20                 // Field ex:Ljava/lang/Exception;
       4: areturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field pindex:I
       5: putfield      #18                 // Field index:I
       8: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field buffer:[B
       5: iconst_0
       6: aload_0
       7: getfield      #9                  // Field size:I
      10: invokespecial #41                 // Method toString:([BII)Ljava/lang/String;
      13: areturn

  static {};
    Code:
       0: ldc           #68                 // String  (){%*\"\\]
       2: putstatic     #38                 // Field ATOM_CHAR_DELIM:Ljava/lang/String;
       5: ldc           #69                 // String  (){%*\"\\
       7: putstatic     #65                 // Field ASTRING_CHAR_DELIM:Ljava/lang/String;
      10: return
}
