Compiled from "IMAPFolder.java"
class com.sun.mail.imap.IMAPFolder$2 implements com.sun.mail.imap.IMAPFolder$ProtocolCommand {
  final boolean val$subscribed;

  final char val$c;

  final java.lang.String val$pattern;

  final com.sun.mail.imap.IMAPFolder this$0;

  com.sun.mail.imap.IMAPFolder$2(com.sun.mail.imap.IMAPFolder, boolean, char, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/sun/mail/imap/IMAPFolder;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$subscribed:Z
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$c:C
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$pattern:Ljava/lang/String;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) throws com.sun.mail.iap.ProtocolException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$subscribed:Z
       4: ifeq          48
       7: aload_1
       8: ldc           #6                  // String
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: aload_0
      18: getfield      #1                  // Field this$0:Lcom/sun/mail/imap/IMAPFolder;
      21: getfield      #9                  // Field com/sun/mail/imap/IMAPFolder.fullName:Ljava/lang/String;
      24: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #3                  // Field val$c:C
      31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #4                  // Field val$pattern:Ljava/lang/String;
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokevirtual #13                 // Method com/sun/mail/imap/protocol/IMAPProtocol.lsub:(Ljava/lang/String;Ljava/lang/String;)[Lcom/sun/mail/imap/protocol/ListInfo;
      47: areturn
      48: aload_1
      49: ldc           #6                  // String
      51: new           #7                  // class java/lang/StringBuilder
      54: dup
      55: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      58: aload_0
      59: getfield      #1                  // Field this$0:Lcom/sun/mail/imap/IMAPFolder;
      62: getfield      #9                  // Field com/sun/mail/imap/IMAPFolder.fullName:Ljava/lang/String;
      65: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #3                  // Field val$c:C
      72: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #4                  // Field val$pattern:Ljava/lang/String;
      79: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokevirtual #14                 // Method com/sun/mail/imap/protocol/IMAPProtocol.list:(Ljava/lang/String;Ljava/lang/String;)[Lcom/sun/mail/imap/protocol/ListInfo;
      88: areturn
}
