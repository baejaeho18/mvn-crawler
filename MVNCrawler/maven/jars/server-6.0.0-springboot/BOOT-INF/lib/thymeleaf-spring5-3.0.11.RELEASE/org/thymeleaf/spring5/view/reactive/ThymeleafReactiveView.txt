Compiled from "ThymeleafReactiveView.java"
public class org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView extends org.springframework.web.reactive.result.view.AbstractView implements org.springframework.beans.factory.BeanNameAware {
  protected static final org.slf4j.Logger logger;

  public static final int DEFAULT_RESPONSE_CHUNK_SIZE_BYTES;

  public static final java.lang.String REACTIVE_MODEL_ADDITIONS_EXECUTION_ATTRIBUTE_PREFIX;

  private static final java.lang.String WEBFLUX_CONVERSION_SERVICE_NAME;

  private java.lang.String beanName;

  private org.thymeleaf.spring5.ISpringWebFluxTemplateEngine templateEngine;

  private java.lang.String templateName;

  private java.util.Locale locale;

  private java.util.Map<java.lang.String, java.lang.Object> staticVariables;

  private boolean defaultCharsetSet;

  private boolean supportedMediaTypesSet;

  private java.util.Set<java.lang.String> markupSelectors;

  private java.lang.Integer responseMaxChunkSizeBytes;

  public org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/reactive/result/view/AbstractView."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field beanName:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field templateEngine:Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field templateName:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field locale:Ljava/util/Locale;
      24: aload_0
      25: aconst_null
      26: putfield      #7                  // Field staticVariables:Ljava/util/Map;
      29: aload_0
      30: iconst_0
      31: putfield      #8                  // Field defaultCharsetSet:Z
      34: aload_0
      35: iconst_0
      36: putfield      #9                  // Field supportedMediaTypesSet:Z
      39: aload_0
      40: aconst_null
      41: putfield      #10                 // Field markupSelectors:Ljava/util/Set;
      44: aload_0
      45: aconst_null
      46: putfield      #11                 // Field responseMaxChunkSizeBytes:Ljava/lang/Integer;
      49: return

  public java.lang.String getMarkupSelector();
    Code:
       0: aload_0
       1: getfield      #10                 // Field markupSelectors:Ljava/util/Set;
       4: ifnull        19
       7: aload_0
       8: getfield      #10                 // Field markupSelectors:Ljava/util/Set;
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
      16: ifne          23
      19: aconst_null
      20: goto          40
      23: aload_0
      24: getfield      #10                 // Field markupSelectors:Ljava/util/Set;
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #15                 // class java/lang/String
      40: areturn

  public void setMarkupSelector(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        15
       5: aload_1
       6: invokevirtual #16                 // Method java/lang/String.trim:()Ljava/lang/String;
       9: invokevirtual #17                 // Method java/lang/String.length:()I
      12: ifne          19
      15: aconst_null
      16: goto          26
      19: aload_1
      20: invokevirtual #16                 // Method java/lang/String.trim:()Ljava/lang/String;
      23: invokestatic  #18                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      26: putfield      #10                 // Field markupSelectors:Ljava/util/Set;
      29: return

  boolean isDefaultCharsetSet();
    Code:
       0: aload_0
       1: getfield      #8                  // Field defaultCharsetSet:Z
       4: ireturn

  public void setDefaultCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/springframework/web/reactive/result/view/AbstractView.setDefaultCharset:(Ljava/nio/charset/Charset;)V
       5: aload_0
       6: iconst_1
       7: putfield      #8                  // Field defaultCharsetSet:Z
      10: return

  boolean isSupportedMediaTypesSet();
    Code:
       0: aload_0
       1: getfield      #9                  // Field supportedMediaTypesSet:Z
       4: ireturn

  public void setSupportedMediaTypes(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method org/springframework/web/reactive/result/view/AbstractView.setSupportedMediaTypes:(Ljava/util/List;)V
       5: aload_0
       6: iconst_1
       7: putfield      #9                  // Field supportedMediaTypesSet:Z
      10: return

  public java.lang.String getBeanName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field beanName:Ljava/lang/String;
       4: areturn

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field beanName:Ljava/lang/String;
       5: return

  public java.lang.String getTemplateName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field templateName:Ljava/lang/String;
       4: areturn

  public void setTemplateName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field templateName:Ljava/lang/String;
       5: return

  protected java.util.Locale getLocale();
    Code:
       0: aload_0
       1: getfield      #6                  // Field locale:Ljava/util/Locale;
       4: areturn

  protected void setLocale(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field locale:Ljava/util/Locale;
       5: return

  public int getResponseMaxChunkSizeBytes();
    Code:
       0: aload_0
       1: getfield      #11                 // Field responseMaxChunkSizeBytes:Ljava/lang/Integer;
       4: ifnonnull     12
       7: ldc           #22                 // int 2147483647
       9: goto          19
      12: aload_0
      13: getfield      #11                 // Field responseMaxChunkSizeBytes:Ljava/lang/Integer;
      16: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      19: ireturn

  java.lang.Integer getNullableResponseMaxChunkSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field responseMaxChunkSizeBytes:Ljava/lang/Integer;
       4: areturn

  public void setResponseMaxChunkSizeBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #11                 // Field responseMaxChunkSizeBytes:Ljava/lang/Integer;
       8: return

  protected org.thymeleaf.spring5.ISpringWebFluxTemplateEngine getTemplateEngine();
    Code:
       0: aload_0
       1: getfield      #4                  // Field templateEngine:Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
       4: areturn

  protected void setTemplateEngine(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field templateEngine:Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
       5: return

  public java.util.Map<java.lang.String, java.lang.Object> getStaticVariables();
    Code:
       0: aload_0
       1: getfield      #7                  // Field staticVariables:Ljava/util/Map;
       4: ifnonnull     11
       7: invokestatic  #25                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: areturn
      11: aload_0
      12: getfield      #7                  // Field staticVariables:Ljava/util/Map;
      15: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      18: areturn

  public void addStaticVariable(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field staticVariables:Ljava/util/Map;
       4: ifnonnull     20
       7: aload_0
       8: new           #27                 // class java/util/HashMap
      11: dup
      12: iconst_3
      13: fconst_1
      14: invokespecial #28                 // Method java/util/HashMap."<init>":(IF)V
      17: putfield      #7                  // Field staticVariables:Ljava/util/Map;
      20: aload_0
      21: getfield      #7                  // Field staticVariables:Ljava/util/Map;
      24: aload_1
      25: aload_2
      26: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public void setStaticVariables(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnull        34
       4: aload_0
       5: getfield      #7                  // Field staticVariables:Ljava/util/Map;
       8: ifnonnull     24
      11: aload_0
      12: new           #27                 // class java/util/HashMap
      15: dup
      16: iconst_3
      17: fconst_1
      18: invokespecial #28                 // Method java/util/HashMap."<init>":(IF)V
      21: putfield      #7                  // Field staticVariables:Ljava/util/Map;
      24: aload_0
      25: getfield      #7                  // Field staticVariables:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #30,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      34: return

  public reactor.core.publisher.Mono<java.lang.Void> render(java.util.Map<java.lang.String, ?>, org.springframework.http.MediaType, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getTemplateEngine:()Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
       4: astore        4
       6: aload         4
       8: ifnonnull     24
      11: new           #32                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #33                 // String Property \'thymeleafTemplateEngine\' is required
      17: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      23: areturn
      24: aload         4
      26: invokeinterface #36,  1           // InterfaceMethod org/thymeleaf/spring5/ISpringWebFluxTemplateEngine.getConfiguration:()Lorg/thymeleaf/IEngineConfiguration;
      31: astore        5
      33: aload         5
      35: invokeinterface #37,  1           // InterfaceMethod org/thymeleaf/IEngineConfiguration.getExecutionAttributes:()Ljava/util/Map;
      40: astore        6
      42: aconst_null
      43: astore        7
      45: aload         6
      47: invokeinterface #38,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      52: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore        8
      59: aload         8
      61: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          233
      69: aload         8
      71: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #15                 // class java/lang/String
      79: astore        9
      81: aload         9
      83: ifnull        230
      86: aload         9
      88: ldc           #40                 // String ThymeleafReactiveModelAdditions:
      90: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      93: ifeq          230
      96: aload         6
      98: aload         9
     100: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: astore        10
     107: aload         9
     109: ldc           #40                 // String ThymeleafReactiveModelAdditions:
     111: invokevirtual #17                 // Method java/lang/String.length:()I
     114: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     117: astore        11
     119: aconst_null
     120: astore        12
     122: aload         10
     124: ifnull        203
     127: aload         10
     129: instanceof    #44                 // class org/reactivestreams/Publisher
     132: ifeq          145
     135: aload         10
     137: checkcast     #44                 // class org/reactivestreams/Publisher
     140: astore        12
     142: goto          203
     145: aload         10
     147: instanceof    #45                 // class java/util/function/Supplier
     150: ifeq          175
     153: aload         10
     155: checkcast     #45                 // class java/util/function/Supplier
     158: astore        13
     160: aload         13
     162: invokeinterface #46,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     167: checkcast     #44                 // class org/reactivestreams/Publisher
     170: astore        12
     172: goto          203
     175: aload         10
     177: instanceof    #47                 // class java/util/function/Function
     180: ifeq          203
     183: aload         10
     185: checkcast     #47                 // class java/util/function/Function
     188: astore        13
     190: aload         13
     192: aload_3
     193: invokeinterface #48,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     198: checkcast     #44                 // class org/reactivestreams/Publisher
     201: astore        12
     203: aload         7
     205: ifnonnull     218
     208: new           #49                 // class java/util/LinkedHashMap
     211: dup
     212: aload_1
     213: invokespecial #50                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
     216: astore        7
     218: aload         7
     220: aload         11
     222: aload         12
     224: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     229: pop
     230: goto          59
     233: aload         7
     235: ifnull        243
     238: aload         7
     240: goto          244
     243: aload_1
     244: astore        7
     246: aload_0
     247: aload         7
     249: aload_2
     250: aload_3
     251: invokespecial #51                 // Method org/springframework/web/reactive/result/view/AbstractView.render:(Ljava/util/Map;Lorg/springframework/http/MediaType;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
     254: areturn

  protected reactor.core.publisher.Mono<java.lang.Void> renderInternal(java.util.Map<java.lang.String, java.lang.Object>, org.springframework.http.MediaType, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field markupSelectors:Ljava/util/Set;
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #52                 // Method renderFragmentInternal:(Ljava/util/Set;Ljava/util/Map;Lorg/springframework/http/MediaType;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      11: areturn

  protected reactor.core.publisher.Mono<java.lang.Void> renderFragmentInternal(java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>, org.springframework.http.MediaType, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getTemplateName:()Ljava/lang/String;
       4: astore        5
       6: aload_0
       7: invokevirtual #31                 // Method getTemplateEngine:()Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
      10: astore        6
      12: aload         5
      14: ifnonnull     30
      17: new           #32                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #54                 // String Property \'templateName\' is required
      23: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      29: areturn
      30: aload_0
      31: invokevirtual #55                 // Method getLocale:()Ljava/util/Locale;
      34: ifnonnull     50
      37: new           #32                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #56                 // String Property \'locale\' is required
      43: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      49: areturn
      50: aload         6
      52: ifnonnull     68
      55: new           #32                 // class java/lang/IllegalArgumentException
      58: dup
      59: ldc           #33                 // String Property \'thymeleafTemplateEngine\' is required
      61: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      67: areturn
      68: aload         4
      70: invokeinterface #57,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      75: astore        7
      77: new           #27                 // class java/util/HashMap
      80: dup
      81: bipush        30
      83: invokespecial #58                 // Method java/util/HashMap."<init>":(I)V
      86: astore        8
      88: aload_0
      89: invokevirtual #59                 // Method getStaticVariables:()Ljava/util/Map;
      92: astore        9
      94: aload         9
      96: ifnull        108
      99: aload         8
     101: aload         9
     103: invokeinterface #30,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     108: aload         4
     110: invokeinterface #60,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getAttributes:()Ljava/util/Map;
     115: getstatic     #61                 // Field org/springframework/web/reactive/HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE:Ljava/lang/String;
     118: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     123: checkcast     #62                 // class java/util/Map
     126: astore        10
     128: aload         10
     130: ifnull        142
     133: aload         8
     135: aload         10
     137: invokeinterface #30,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     142: aload_2
     143: ifnull        154
     146: aload         8
     148: aload_2
     149: invokeinterface #30,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     154: aload_0
     155: invokevirtual #63                 // Method getApplicationContext:()Lorg/springframework/context/ApplicationContext;
     158: astore        11
     160: aload_0
     161: aload         4
     163: aload         8
     165: invokevirtual #64                 // Method createRequestContext:(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;)Lorg/springframework/web/reactive/result/view/RequestContext;
     168: astore        12
     170: new           #65                 // class org/thymeleaf/spring5/context/webflux/SpringWebFluxThymeleafRequestContext
     173: dup
     174: aload         12
     176: aload         4
     178: invokespecial #66                 // Method org/thymeleaf/spring5/context/webflux/SpringWebFluxThymeleafRequestContext."<init>":(Lorg/springframework/web/reactive/result/view/RequestContext;Lorg/springframework/web/server/ServerWebExchange;)V
     181: astore        13
     183: aload         8
     185: ldc           #68                 // String springRequestContext
     187: aload         12
     189: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: aload         8
     197: ldc           #69                 // String thymeleafRequestContext
     199: aload         13
     201: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: pop
     207: aload         11
     209: ldc           #70                 // String webFluxConversionService
     211: invokeinterface #71,  2           // InterfaceMethod org/springframework/context/ApplicationContext.containsBean:(Ljava/lang/String;)Z
     216: ifeq          234
     219: aload         11
     221: ldc           #70                 // String webFluxConversionService
     223: invokeinterface #72,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     228: checkcast     #73                 // class org/springframework/core/convert/ConversionService
     231: goto          235
     234: aconst_null
     235: astore        14
     237: new           #74                 // class org/thymeleaf/spring5/expression/ThymeleafEvaluationContext
     240: dup
     241: aload         11
     243: aload         14
     245: invokespecial #75                 // Method org/thymeleaf/spring5/expression/ThymeleafEvaluationContext."<init>":(Lorg/springframework/context/ApplicationContext;Lorg/springframework/core/convert/ConversionService;)V
     248: astore        15
     250: aload         8
     252: ldc           #76                 // String thymeleaf::EvaluationContext
     254: aload         15
     256: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     261: pop
     262: aload         8
     264: invokestatic  #77                 // Method isDataDriven:(Ljava/util/Map;)Z
     267: istore        16
     269: aload         6
     271: invokeinterface #36,  1           // InterfaceMethod org/thymeleaf/spring5/ISpringWebFluxTemplateEngine.getConfiguration:()Lorg/thymeleaf/IEngineConfiguration;
     276: astore        17
     278: new           #78                 // class org/thymeleaf/spring5/context/webflux/SpringWebFluxExpressionContext
     281: dup
     282: aload         17
     284: aload         4
     286: aload_0
     287: invokespecial #79                 // Method getReactiveAdapterRegistry:()Lorg/springframework/core/ReactiveAdapterRegistry;
     290: aload_0
     291: invokevirtual #55                 // Method getLocale:()Ljava/util/Locale;
     294: aload         8
     296: invokespecial #80                 // Method org/thymeleaf/spring5/context/webflux/SpringWebFluxExpressionContext."<init>":(Lorg/thymeleaf/IEngineConfiguration;Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/core/ReactiveAdapterRegistry;Ljava/util/Locale;Ljava/util/Map;)V
     299: astore        18
     301: aload         5
     303: ldc           #81                 // String ::
     305: invokevirtual #82                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     308: ifne          321
     311: aload         5
     313: astore        19
     315: aconst_null
     316: astore        20
     318: goto          494
     321: aload         17
     323: invokestatic  #83                 // Method org/thymeleaf/standard/expression/StandardExpressions.getExpressionParser:(Lorg/thymeleaf/IEngineConfiguration;)Lorg/thymeleaf/standard/expression/IStandardExpressionParser;
     326: astore        21
     328: aload         21
     330: aload         18
     332: new           #84                 // class java/lang/StringBuilder
     335: dup
     336: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
     339: ldc           #86                 // String ~{
     341: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: aload         5
     346: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     349: ldc           #88                 // String }
     351: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: invokeinterface #90,  3           // InterfaceMethod org/thymeleaf/standard/expression/IStandardExpressionParser.parseExpression:(Lorg/thymeleaf/context/IExpressionContext;Ljava/lang/String;)Lorg/thymeleaf/standard/expression/IStandardExpression;
     362: checkcast     #91                 // class org/thymeleaf/standard/expression/FragmentExpression
     365: astore        22
     367: goto          408
     370: astore        23
     372: new           #32                 // class java/lang/IllegalArgumentException
     375: dup
     376: new           #84                 // class java/lang/StringBuilder
     379: dup
     380: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
     383: ldc           #93                 // String Invalid template name specification: \'
     385: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     388: aload         5
     390: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #94                 // String \'
     395: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     404: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     407: areturn
     408: aload         18
     410: aload         22
     412: invokestatic  #95                 // Method org/thymeleaf/standard/expression/FragmentExpression.createExecutedFragmentExpression:(Lorg/thymeleaf/context/IExpressionContext;Lorg/thymeleaf/standard/expression/FragmentExpression;)Lorg/thymeleaf/standard/expression/FragmentExpression$ExecutedFragmentExpression;
     415: astore        23
     417: aload         23
     419: invokestatic  #96                 // Method org/thymeleaf/standard/expression/FragmentExpression.resolveTemplateName:(Lorg/thymeleaf/standard/expression/FragmentExpression$ExecutedFragmentExpression;)Ljava/lang/String;
     422: astore        19
     424: aload         23
     426: invokestatic  #97                 // Method org/thymeleaf/standard/expression/FragmentExpression.resolveFragments:(Lorg/thymeleaf/standard/expression/FragmentExpression$ExecutedFragmentExpression;)Ljava/util/Set;
     429: astore        20
     431: aload         23
     433: invokevirtual #98                 // Method org/thymeleaf/standard/expression/FragmentExpression$ExecutedFragmentExpression.getFragmentParameters:()Ljava/util/Map;
     436: astore        24
     438: aload         24
     440: ifnull        494
     443: aload         23
     445: invokevirtual #99                 // Method org/thymeleaf/standard/expression/FragmentExpression$ExecutedFragmentExpression.hasSyntheticParameters:()Z
     448: ifeq          487
     451: new           #32                 // class java/lang/IllegalArgumentException
     454: dup
     455: new           #84                 // class java/lang/StringBuilder
     458: dup
     459: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
     462: ldc           #100                // String Parameters in a view specification must be named (non-synthetic): \'
     464: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     467: aload         5
     469: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     472: ldc           #94                 // String \'
     474: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     477: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     480: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     483: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     486: areturn
     487: aload         18
     489: aload         24
     491: invokevirtual #101                // Method org/thymeleaf/spring5/context/webflux/SpringWebFluxExpressionContext.setVariables:(Ljava/util/Map;)V
     494: aload         20
     496: ifnull        594
     499: aload         20
     501: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
     506: ifle          594
     509: aload_1
     510: ifnull        587
     513: aload_1
     514: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
     519: ifle          587
     522: new           #32                 // class java/lang/IllegalArgumentException
     525: dup
     526: new           #84                 // class java/lang/StringBuilder
     529: dup
     530: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
     533: ldc           #102                // String A markup selector has been specified (
     535: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     538: iconst_1
     539: anewarray     #103                // class java/util/Set
     542: dup
     543: iconst_0
     544: aload         20
     546: aastore
     547: invokestatic  #104                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     550: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     553: ldc           #106                // String ) for a view that was already being executed as a fragment (
     555: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     558: iconst_1
     559: anewarray     #103                // class java/util/Set
     562: dup
     563: iconst_0
     564: aload_1
     565: aastore
     566: invokestatic  #104                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     569: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     572: ldc           #107                // String ). Only one fragment selection is allowed.
     574: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     577: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     580: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     583: invokestatic  #35                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     586: areturn
     587: aload         20
     589: astore        21
     591: goto          616
     594: aload_1
     595: ifnull        613
     598: aload_1
     599: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
     604: ifle          613
     607: aload_1
     608: astore        21
     610: goto          616
     613: aconst_null
     614: astore        21
     616: aload_0
     617: invokevirtual #108                // Method getResponseMaxChunkSizeBytes:()I
     620: istore        22
     622: aload         4
     624: invokeinterface #57,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
     629: invokeinterface #109,  1          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
     634: astore        23
     636: aload_0
     637: invokevirtual #55                 // Method getLocale:()Ljava/util/Locale;
     640: astore        24
     642: aload         24
     644: ifnull        654
     647: aload         23
     649: aload         24
     651: invokevirtual #110                // Method org/springframework/http/HttpHeaders.setContentLanguage:(Ljava/util/Locale;)V
     654: aload_3
     655: invokestatic  #111                // Method getCharset:(Lorg/springframework/http/MediaType;)Ljava/util/Optional;
     658: aload_0
     659: invokevirtual #112                // Method getDefaultCharset:()Ljava/nio/charset/Charset;
     662: invokevirtual #113                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     665: checkcast     #114                // class java/nio/charset/Charset
     668: astore        25
     670: aload         6
     672: aload         19
     674: aload         21
     676: aload         18
     678: aload         7
     680: invokeinterface #115,  1          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.bufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
     685: aload_3
     686: aload         25
     688: iload         22
     690: invokeinterface #116,  8          // InterfaceMethod org/thymeleaf/spring5/ISpringWebFluxTemplateEngine.processStream:(Ljava/lang/String;Ljava/util/Set;Lorg/thymeleaf/context/IContext;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/http/MediaType;Ljava/nio/charset/Charset;I)Lorg/reactivestreams/Publisher;
     695: astore        26
     697: iload         22
     699: ldc           #22                 // int 2147483647
     701: if_icmpne     719
     704: iload         16
     706: ifne          719
     709: aload         7
     711: aload         26
     713: invokeinterface #117,  2          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.writeWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
     718: areturn
     719: aload         7
     721: aload         26
     723: invokestatic  #118                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     726: iconst_1
     727: invokevirtual #119                // Method reactor/core/publisher/Flux.window:(I)Lreactor/core/publisher/Flux;
     730: invokeinterface #120,  2          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.writeAndFlushWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
     735: areturn
    Exception table:
       from    to  target type
         328   367   370   Class org/thymeleaf/exceptions/TemplateProcessingException

  private static java.util.Optional<java.nio.charset.Charset> getCharset(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #121                // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
       8: invokestatic  #122                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      11: goto          17
      14: invokestatic  #123                // Method java/util/Optional.empty:()Ljava/util/Optional;
      17: areturn

  private static boolean isDataDriven(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #124,  1          // InterfaceMethod java/util/Map.size:()I
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: invokeinterface #125,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      21: invokeinterface #126,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_1
      27: aload_1
      28: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          55
      36: aload_1
      37: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: astore_2
      43: aload_2
      44: instanceof    #127                // class org/thymeleaf/spring5/context/webflux/IReactiveDataDriverContextVariable
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: goto          27
      55: iconst_0
      56: ireturn

  private org.springframework.core.ReactiveAdapterRegistry getReactiveAdapterRegistry();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getApplicationContext:()Lorg/springframework/context/ApplicationContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: ifnull        28
      15: aload_1
      16: ldc           #128                // class org/springframework/core/ReactiveAdapterRegistry
      18: invokeinterface #129,  2          // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      23: checkcast     #128                // class org/springframework/core/ReactiveAdapterRegistry
      26: areturn
      27: astore_2
      28: aconst_null
      29: areturn
    Exception table:
       from    to  target type
          15    26    27   Class org/springframework/beans/factory/NoSuchBeanDefinitionException

  static {};
    Code:
       0: ldc           #21                 // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
       2: invokestatic  #131                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #132                // Field logger:Lorg/slf4j/Logger;
       8: return
}
