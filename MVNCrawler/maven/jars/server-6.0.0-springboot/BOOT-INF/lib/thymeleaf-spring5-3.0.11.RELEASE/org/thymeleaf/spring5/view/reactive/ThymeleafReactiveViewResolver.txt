Compiled from "ThymeleafReactiveViewResolver.java"
public class org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver extends org.springframework.web.reactive.result.view.ViewResolverSupport implements org.springframework.web.reactive.result.view.ViewResolver,org.springframework.context.ApplicationContextAware {
  private static final org.slf4j.Logger vrlogger;

  public static final java.lang.String REDIRECT_URL_PREFIX;

  public static final java.lang.String FORWARD_URL_PREFIX;

  private static final java.util.List<org.springframework.http.MediaType> SUPPORTED_MEDIA_TYPES;

  private org.springframework.context.ApplicationContext applicationContext;

  private java.util.function.Function<java.lang.String, org.springframework.web.reactive.result.view.RedirectView> redirectViewProvider;

  private boolean alwaysProcessRedirectAndForward;

  private java.lang.Class<? extends org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView> viewClass;

  private java.lang.String[] viewNames;

  private java.lang.String[] excludedViewNames;

  private int order;

  private final java.util.Map<java.lang.String, java.lang.Object> staticVariables;

  private int responseMaxChunkSizeBytes;

  private java.lang.String[] fullModeViewNames;

  private java.lang.String[] chunkedModeViewNames;

  private org.thymeleaf.spring5.ISpringWebFluxTemplateEngine templateEngine;

  public org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/reactive/result/view/ViewResolverSupport."<init>":()V
       4: aload_0
       5: invokedynamic #2,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: putfield      #3                  // Field redirectViewProvider:Ljava/util/function/Function;
      13: aload_0
      14: iconst_1
      15: putfield      #4                  // Field alwaysProcessRedirectAndForward:Z
      18: aload_0
      19: ldc           #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
      21: putfield      #6                  // Field viewClass:Ljava/lang/Class;
      24: aload_0
      25: aconst_null
      26: putfield      #7                  // Field viewNames:[Ljava/lang/String;
      29: aload_0
      30: aconst_null
      31: putfield      #8                  // Field excludedViewNames:[Ljava/lang/String;
      34: aload_0
      35: ldc           #10                 // int 2147483647
      37: putfield      #11                 // Field order:I
      40: aload_0
      41: new           #12                 // class java/util/LinkedHashMap
      44: dup
      45: bipush        10
      47: invokespecial #13                 // Method java/util/LinkedHashMap."<init>":(I)V
      50: putfield      #14                 // Field staticVariables:Ljava/util/Map;
      53: aload_0
      54: ldc           #10                 // int 2147483647
      56: putfield      #15                 // Field responseMaxChunkSizeBytes:I
      59: aload_0
      60: aconst_null
      61: putfield      #16                 // Field fullModeViewNames:[Ljava/lang/String;
      64: aload_0
      65: aconst_null
      66: putfield      #17                 // Field chunkedModeViewNames:[Ljava/lang/String;
      69: aload_0
      70: getstatic     #18                 // Field SUPPORTED_MEDIA_TYPES:Ljava/util/List;
      73: invokevirtual #19                 // Method setSupportedMediaTypes:(Ljava/util/List;)V
      76: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public org.springframework.context.ApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #20                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: areturn

  public void setViewClass(java.lang.Class<? extends org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView>);
    Code:
       0: aload_1
       1: ifnull        13
       4: ldc           #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
       6: aload_1
       7: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      10: ifne          69
      13: new           #22                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #23                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #25                 // String Given view class [
      26: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: ifnull        40
      33: aload_1
      34: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: goto          41
      40: aconst_null
      41: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #28                 // String ] is not of type [
      46: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
      51: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #29                 // String ]
      59: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: aload_1
      71: putfield      #6                  // Field viewClass:Ljava/lang/Class;
      74: return

  protected java.lang.Class<? extends org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView> getViewClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viewClass:Ljava/lang/Class;
       4: areturn

  public org.thymeleaf.spring5.ISpringWebFluxTemplateEngine getTemplateEngine();
    Code:
       0: aload_0
       1: getfield      #32                 // Field templateEngine:Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
       4: areturn

  public void setTemplateEngine(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field templateEngine:Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
       5: return

  public java.util.Map<java.lang.String, java.lang.Object> getStaticVariables();
    Code:
       0: aload_0
       1: getfield      #14                 // Field staticVariables:Ljava/util/Map;
       4: invokestatic  #33                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void addStaticVariable(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field staticVariables:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void setStaticVariables(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnull        57
       4: aload_1
       5: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          57
      25: aload_2
      26: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #39                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #41                 // class java/lang/String
      45: aload_3
      46: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: invokevirtual #43                 // Method addStaticVariable:(Ljava/lang/String;Ljava/lang/Object;)V
      54: goto          16
      57: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #11                 // Field order:I
       4: ireturn

  public void setRedirectViewProvider(java.util.function.Function<java.lang.String, org.springframework.web.reactive.result.view.RedirectView>);
    Code:
       0: aload_1
       1: ldc           #44                 // String RedirectView provider cannot be null
       3: invokestatic  #45                 // Method org/thymeleaf/util/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field redirectViewProvider:Ljava/util/function/Function;
      11: return

  public java.util.function.Function<java.lang.String, org.springframework.web.reactive.result.view.RedirectView> getRedirectViewProvider();
    Code:
       0: aload_0
       1: getfield      #3                  // Field redirectViewProvider:Ljava/util/function/Function;
       4: areturn

  public void setAlwaysProcessRedirectAndForward(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field alwaysProcessRedirectAndForward:Z
       5: return

  public boolean getAlwaysProcessRedirectAndForward();
    Code:
       0: aload_0
       1: getfield      #4                  // Field alwaysProcessRedirectAndForward:Z
       4: ireturn

  public void setResponseMaxChunkSizeBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field responseMaxChunkSizeBytes:I
       5: return

  public int getResponseMaxChunkSizeBytes();
    Code:
       0: aload_0
       1: getfield      #15                 // Field responseMaxChunkSizeBytes:I
       4: ireturn

  public void setViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field viewNames:[Ljava/lang/String;
       5: return

  public java.lang.String[] getViewNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viewNames:[Ljava/lang/String;
       4: areturn

  public void setExcludedViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field excludedViewNames:[Ljava/lang/String;
       5: return

  public java.lang.String[] getExcludedViewNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field excludedViewNames:[Ljava/lang/String;
       4: areturn

  public void setFullModeViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field fullModeViewNames:[Ljava/lang/String;
       5: return

  public java.lang.String[] getFullModeViewNames();
    Code:
       0: aload_0
       1: getfield      #16                 // Field fullModeViewNames:[Ljava/lang/String;
       4: areturn

  public void setChunkedModeViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field chunkedModeViewNames:[Ljava/lang/String;
       5: return

  public java.lang.String[] getChunkedModeViewNames();
    Code:
       0: aload_0
       1: getfield      #17                 // Field chunkedModeViewNames:[Ljava/lang/String;
       4: areturn

  protected boolean canHandle(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getViewNames:()[Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: invokevirtual #47                 // Method getExcludedViewNames:()[Ljava/lang/String;
       9: astore        4
      11: aload_3
      12: ifnull        23
      15: aload_3
      16: aload_1
      17: invokestatic  #48                 // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      20: ifeq          41
      23: aload         4
      25: ifnull        37
      28: aload         4
      30: aload_1
      31: invokestatic  #48                 // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  protected boolean shouldUseChunkedExecution(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getResponseMaxChunkSizeBytes:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #50                 // Method getChunkedModeViewNames:()[Ljava/lang/String;
       9: astore_3
      10: aload_0
      11: invokevirtual #51                 // Method getFullModeViewNames:()[Ljava/lang/String;
      14: astore        4
      16: iload_2
      17: ldc           #10                 // int 2147483647
      19: if_icmpne     53
      22: aload_3
      23: ifnull        36
      26: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
      29: ldc           #53                 // String [THYMELEAF] A set of view names to be executed in CHUNKED mode has been specified, but no response max chunk size has been specified, so this configuration parameter has no practical effect (no way to configure CHUNKED mode from the ViewResolver). Please fix your configuration.
      31: invokeinterface #54,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      36: aload         4
      38: ifnull        51
      41: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
      44: ldc           #55                 // String [THYMELEAF] A set of view names to be executed in FULL mode has been specified, but no response max chunk size has been specified, so the former configuration parameter has no practical effect (all templates will actually be executed as FULL). Please fix your configuration.
      46: invokeinterface #54,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      51: iconst_0
      52: ireturn
      53: aload_3
      54: ifnull        63
      57: aload_3
      58: aload_1
      59: invokestatic  #48                 // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      62: ireturn
      63: aload         4
      65: ifnull        83
      68: aload         4
      70: aload_1
      71: invokestatic  #48                 // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn
      83: iconst_1
      84: ireturn

  public reactor.core.publisher.Mono<org.springframework.web.reactive.result.view.View> resolveViewName(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #4                  // Field alwaysProcessRedirectAndForward:Z
       4: ifne          31
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #56                 // Method canHandle:(Ljava/lang/String;Ljava/util/Locale;)Z
      13: ifne          31
      16: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
      19: ldc           #57                 // String [THYMELEAF] View \"{}\" cannot be handled by ThymeleafReactiveViewResolver. Passing on to the next resolver in the chain.
      21: aload_1
      22: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      27: invokestatic  #59                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      30: areturn
      31: aload_1
      32: ldc           #61                 // String redirect:
      34: invokevirtual #62                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      37: ifeq          104
      40: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
      43: ldc           #63                 // String [THYMELEAF] View \"{}\" is a redirect, and will not be handled directly by ThymeleafReactiveViewResolver.
      45: aload_1
      46: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      51: aload_1
      52: ldc           #61                 // String redirect:
      54: invokevirtual #64                 // Method java/lang/String.length:()I
      57: invokevirtual #65                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      60: astore_3
      61: aload_0
      62: getfield      #3                  // Field redirectViewProvider:Ljava/util/function/Function;
      65: aload_3
      66: invokeinterface #66,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #67                 // class org/springframework/web/reactive/result/view/RedirectView
      74: astore        4
      76: aload_0
      77: invokevirtual #68                 // Method getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      80: invokeinterface #69,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getAutowireCapableBeanFactory:()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;
      85: aload         4
      87: aload_1
      88: invokeinterface #70,  3           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.initializeBean:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      93: checkcast     #67                 // class org/springframework/web/reactive/result/view/RedirectView
      96: astore        5
      98: aload         5
     100: invokestatic  #71                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     103: areturn
     104: aload_1
     105: ldc           #72                 // String forward:
     107: invokevirtual #62                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     110: ifeq          137
     113: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
     116: ldc           #73                 // String [THYMELEAF] View \"{}\" is a forward, and will not be handled directly by ThymeleafReactiveViewResolver.
     118: aload_1
     119: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     124: new           #74                 // class java/lang/UnsupportedOperationException
     127: dup
     128: ldc           #75                 // String Forwards are not currently supported by ThymeleafReactiveViewResolver
     130: invokespecial #76                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     133: invokestatic  #77                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     136: areturn
     137: aload_0
     138: getfield      #4                  // Field alwaysProcessRedirectAndForward:Z
     141: ifeq          168
     144: aload_0
     145: aload_1
     146: aload_2
     147: invokevirtual #56                 // Method canHandle:(Ljava/lang/String;Ljava/util/Locale;)Z
     150: ifne          168
     153: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
     156: ldc           #57                 // String [THYMELEAF] View \"{}\" cannot be handled by ThymeleafReactiveViewResolver. Passing on to the next resolver in the chain.
     158: aload_1
     159: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     164: invokestatic  #59                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
     167: areturn
     168: getstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
     171: ldc           #78                 // String [THYMELEAF] View {} will be handled by ThymeleafReactiveViewResolver and a {} instance will be created for it
     173: aload_1
     174: aload_0
     175: invokevirtual #79                 // Method getViewClass:()Ljava/lang/Class;
     178: invokevirtual #80                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     181: invokeinterface #81,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     186: aload_0
     187: aload_1
     188: aload_2
     189: invokevirtual #82                 // Method loadView:(Ljava/lang/String;Ljava/util/Locale;)Lreactor/core/publisher/Mono;
     192: areturn

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.result.view.View> loadView(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getApplicationContext:()Lorg/springframework/context/ApplicationContext;
       4: invokeinterface #69,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getAutowireCapableBeanFactory:()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;
       9: astore_3
      10: aload_3
      11: aload_1
      12: invokeinterface #83,  2           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.containsBean:(Ljava/lang/String;)Z
      17: istore        4
      19: iload         4
      21: ifeq          34
      24: aload_3
      25: aload_1
      26: invokeinterface #84,  2           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.getType:(Ljava/lang/String;)Ljava/lang/Class;
      31: goto          35
      34: aconst_null
      35: astore        5
      37: iload         4
      39: ifeq          139
      42: aload         5
      44: ifnull        139
      47: ldc           #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
      49: aload         5
      51: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifeq          139
      57: aload_3
      58: instanceof    #85                 // class org/springframework/beans/factory/config/ConfigurableListableBeanFactory
      61: ifeq          77
      64: aload_3
      65: checkcast     #85                 // class org/springframework/beans/factory/config/ConfigurableListableBeanFactory
      68: aload_1
      69: invokeinterface #86,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.getBeanDefinition:(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
      74: goto          78
      77: aconst_null
      78: astore        7
      80: aload         7
      82: ifnull        95
      85: aload         7
      87: invokeinterface #87,  1           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.isPrototype:()Z
      92: ifne          124
      95: aload_0
      96: invokevirtual #79                 // Method getViewClass:()Ljava/lang/Class;
      99: invokestatic  #88                 // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/Class;)Ljava/lang/Object;
     102: checkcast     #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
     105: astore        8
     107: aload_3
     108: aload         8
     110: aload_1
     111: invokeinterface #89,  3           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.configureBean:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     116: checkcast     #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
     119: astore        6
     121: goto          136
     124: aload_3
     125: aload_1
     126: invokeinterface #90,  2           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     131: checkcast     #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
     134: astore        6
     136: goto          221
     139: aload_0
     140: invokevirtual #79                 // Method getViewClass:()Ljava/lang/Class;
     143: invokestatic  #88                 // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/Class;)Ljava/lang/Object;
     146: checkcast     #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
     149: astore        7
     151: iload         4
     153: ifeq          197
     156: aload         5
     158: ifnonnull     197
     161: aload_3
     162: aload         7
     164: iconst_0
     165: iconst_0
     166: invokeinterface #92,  4           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.autowireBeanProperties:(Ljava/lang/Object;IZ)V
     171: aload_3
     172: aload         7
     174: aload_1
     175: invokeinterface #93,  3           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.applyBeanPropertyValues:(Ljava/lang/Object;Ljava/lang/String;)V
     180: aload_3
     181: aload         7
     183: aload_1
     184: invokeinterface #70,  3           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.initializeBean:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     189: checkcast     #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
     192: astore        6
     194: goto          221
     197: aload_3
     198: aload         7
     200: iconst_0
     201: iconst_0
     202: invokeinterface #92,  4           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.autowireBeanProperties:(Ljava/lang/Object;IZ)V
     207: aload_3
     208: aload         7
     210: aload_1
     211: invokeinterface #70,  3           // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.initializeBean:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     216: checkcast     #5                  // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView
     219: astore        6
     221: aload         6
     223: aload_0
     224: invokevirtual #94                 // Method getTemplateEngine:()Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;
     227: invokevirtual #95                 // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setTemplateEngine:(Lorg/thymeleaf/spring5/ISpringWebFluxTemplateEngine;)V
     230: aload         6
     232: aload_0
     233: invokevirtual #96                 // Method getStaticVariables:()Ljava/util/Map;
     236: invokevirtual #97                 // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setStaticVariables:(Ljava/util/Map;)V
     239: aload         6
     241: invokevirtual #98                 // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.getTemplateName:()Ljava/lang/String;
     244: ifnonnull     253
     247: aload         6
     249: aload_1
     250: invokevirtual #99                 // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setTemplateName:(Ljava/lang/String;)V
     253: aload         6
     255: invokevirtual #100                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.isSupportedMediaTypesSet:()Z
     258: ifne          270
     261: aload         6
     263: aload_0
     264: invokevirtual #101                // Method getSupportedMediaTypes:()Ljava/util/List;
     267: invokevirtual #102                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setSupportedMediaTypes:(Ljava/util/List;)V
     270: aload         6
     272: invokevirtual #103                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.isDefaultCharsetSet:()Z
     275: ifne          287
     278: aload         6
     280: aload_0
     281: invokevirtual #104                // Method getDefaultCharset:()Ljava/nio/charset/Charset;
     284: invokevirtual #105                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setDefaultCharset:(Ljava/nio/charset/Charset;)V
     287: aload_2
     288: ifnull        305
     291: aload         6
     293: invokevirtual #106                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.getLocale:()Ljava/util/Locale;
     296: ifnonnull     305
     299: aload         6
     301: aload_2
     302: invokevirtual #107                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setLocale:(Ljava/util/Locale;)V
     305: aload_0
     306: aload_1
     307: invokevirtual #108                // Method shouldUseChunkedExecution:(Ljava/lang/String;)Z
     310: istore        7
     312: iload         7
     314: ifeq          334
     317: aload         6
     319: invokevirtual #109                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.getNullableResponseMaxChunkSize:()Ljava/lang/Integer;
     322: ifnonnull     334
     325: aload         6
     327: aload_0
     328: invokevirtual #49                 // Method getResponseMaxChunkSizeBytes:()I
     331: invokevirtual #110                // Method org/thymeleaf/spring5/view/reactive/ThymeleafReactiveView.setResponseMaxChunkSizeBytes:(I)V
     334: aload         6
     336: invokestatic  #71                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     339: areturn

  private static org.springframework.web.reactive.result.view.RedirectView lambda$new$0(java.lang.String);
    Code:
       0: new           #67                 // class org/springframework/web/reactive/result/view/RedirectView
       3: dup
       4: aload_0
       5: invokespecial #111                // Method org/springframework/web/reactive/result/view/RedirectView."<init>":(Ljava/lang/String;)V
       8: areturn

  static {};
    Code:
       0: ldc           #60                 // class org/thymeleaf/spring5/view/reactive/ThymeleafReactiveViewResolver
       2: invokestatic  #112                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #52                 // Field vrlogger:Lorg/slf4j/Logger;
       8: bipush        14
      10: anewarray     #113                // class org/springframework/http/MediaType
      13: dup
      14: iconst_0
      15: getstatic     #114                // Field org/springframework/http/MediaType.TEXT_HTML:Lorg/springframework/http/MediaType;
      18: aastore
      19: dup
      20: iconst_1
      21: getstatic     #115                // Field org/springframework/http/MediaType.APPLICATION_XHTML_XML:Lorg/springframework/http/MediaType;
      24: aastore
      25: dup
      26: iconst_2
      27: getstatic     #116                // Field org/springframework/http/MediaType.APPLICATION_XML:Lorg/springframework/http/MediaType;
      30: aastore
      31: dup
      32: iconst_3
      33: getstatic     #117                // Field org/springframework/http/MediaType.TEXT_XML:Lorg/springframework/http/MediaType;
      36: aastore
      37: dup
      38: iconst_4
      39: getstatic     #118                // Field org/springframework/http/MediaType.APPLICATION_RSS_XML:Lorg/springframework/http/MediaType;
      42: aastore
      43: dup
      44: iconst_5
      45: getstatic     #119                // Field org/springframework/http/MediaType.APPLICATION_ATOM_XML:Lorg/springframework/http/MediaType;
      48: aastore
      49: dup
      50: bipush        6
      52: new           #113                // class org/springframework/http/MediaType
      55: dup
      56: ldc           #120                // String application
      58: ldc           #121                // String javascript
      60: invokespecial #122                // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      63: aastore
      64: dup
      65: bipush        7
      67: new           #113                // class org/springframework/http/MediaType
      70: dup
      71: ldc           #120                // String application
      73: ldc           #123                // String ecmascript
      75: invokespecial #122                // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      78: aastore
      79: dup
      80: bipush        8
      82: new           #113                // class org/springframework/http/MediaType
      85: dup
      86: ldc           #124                // String text
      88: ldc           #121                // String javascript
      90: invokespecial #122                // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      93: aastore
      94: dup
      95: bipush        9
      97: new           #113                // class org/springframework/http/MediaType
     100: dup
     101: ldc           #124                // String text
     103: ldc           #123                // String ecmascript
     105: invokespecial #122                // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     108: aastore
     109: dup
     110: bipush        10
     112: getstatic     #125                // Field org/springframework/http/MediaType.APPLICATION_JSON:Lorg/springframework/http/MediaType;
     115: aastore
     116: dup
     117: bipush        11
     119: new           #113                // class org/springframework/http/MediaType
     122: dup
     123: ldc           #124                // String text
     125: ldc           #126                // String css
     127: invokespecial #122                // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     130: aastore
     131: dup
     132: bipush        12
     134: getstatic     #127                // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
     137: aastore
     138: dup
     139: bipush        13
     141: getstatic     #128                // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
     144: aastore
     145: invokestatic  #129                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     148: putstatic     #18                 // Field SUPPORTED_MEDIA_TYPES:Ljava/util/List;
     151: return
}
