Compiled from "ConfigFluent.java"
public interface io.fabric8.kubernetes.api.model.ConfigFluent<A extends io.fabric8.kubernetes.api.model.ConfigFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToClusters(int, io.fabric8.kubernetes.api.model.NamedCluster);

  public abstract A setToClusters(int, io.fabric8.kubernetes.api.model.NamedCluster);

  public abstract A addToClusters(io.fabric8.kubernetes.api.model.NamedCluster...);

  public abstract A addAllToClusters(java.util.Collection<io.fabric8.kubernetes.api.model.NamedCluster>);

  public abstract A removeFromClusters(io.fabric8.kubernetes.api.model.NamedCluster...);

  public abstract A removeAllFromClusters(java.util.Collection<io.fabric8.kubernetes.api.model.NamedCluster>);

  public abstract A removeMatchingFromClusters(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedClusterBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedCluster> getClusters();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedCluster> buildClusters();

  public abstract io.fabric8.kubernetes.api.model.NamedCluster buildCluster(int);

  public abstract io.fabric8.kubernetes.api.model.NamedCluster buildFirstCluster();

  public abstract io.fabric8.kubernetes.api.model.NamedCluster buildLastCluster();

  public abstract io.fabric8.kubernetes.api.model.NamedCluster buildMatchingCluster(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedClusterBuilder>);

  public abstract java.lang.Boolean hasMatchingCluster(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedClusterBuilder>);

  public abstract A withClusters(java.util.List<io.fabric8.kubernetes.api.model.NamedCluster>);

  public abstract A withClusters(io.fabric8.kubernetes.api.model.NamedCluster...);

  public abstract java.lang.Boolean hasClusters();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> addNewCluster();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> addNewClusterLike(io.fabric8.kubernetes.api.model.NamedCluster);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> setNewClusterLike(int, io.fabric8.kubernetes.api.model.NamedCluster);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> editCluster(int);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> editFirstCluster();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> editLastCluster();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ClustersNested<A> editMatchingCluster(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedClusterBuilder>);

  public abstract A addToContexts(int, io.fabric8.kubernetes.api.model.NamedContext);

  public abstract A setToContexts(int, io.fabric8.kubernetes.api.model.NamedContext);

  public abstract A addToContexts(io.fabric8.kubernetes.api.model.NamedContext...);

  public abstract A addAllToContexts(java.util.Collection<io.fabric8.kubernetes.api.model.NamedContext>);

  public abstract A removeFromContexts(io.fabric8.kubernetes.api.model.NamedContext...);

  public abstract A removeAllFromContexts(java.util.Collection<io.fabric8.kubernetes.api.model.NamedContext>);

  public abstract A removeMatchingFromContexts(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedContextBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedContext> getContexts();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedContext> buildContexts();

  public abstract io.fabric8.kubernetes.api.model.NamedContext buildContext(int);

  public abstract io.fabric8.kubernetes.api.model.NamedContext buildFirstContext();

  public abstract io.fabric8.kubernetes.api.model.NamedContext buildLastContext();

  public abstract io.fabric8.kubernetes.api.model.NamedContext buildMatchingContext(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedContextBuilder>);

  public abstract java.lang.Boolean hasMatchingContext(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedContextBuilder>);

  public abstract A withContexts(java.util.List<io.fabric8.kubernetes.api.model.NamedContext>);

  public abstract A withContexts(io.fabric8.kubernetes.api.model.NamedContext...);

  public abstract java.lang.Boolean hasContexts();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> addNewContext();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> addNewContextLike(io.fabric8.kubernetes.api.model.NamedContext);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> setNewContextLike(int, io.fabric8.kubernetes.api.model.NamedContext);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> editContext(int);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> editFirstContext();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> editLastContext();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ContextsNested<A> editMatchingContext(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedContextBuilder>);

  public abstract java.lang.String getCurrentContext();

  public abstract A withCurrentContext(java.lang.String);

  public abstract java.lang.Boolean hasCurrentContext();

  public abstract A withNewCurrentContext(java.lang.String);

  public abstract A withNewCurrentContext(java.lang.StringBuilder);

  public abstract A withNewCurrentContext(java.lang.StringBuffer);

  public abstract A addToExtensions(int, io.fabric8.kubernetes.api.model.NamedExtension);

  public abstract A setToExtensions(int, io.fabric8.kubernetes.api.model.NamedExtension);

  public abstract A addToExtensions(io.fabric8.kubernetes.api.model.NamedExtension...);

  public abstract A addAllToExtensions(java.util.Collection<io.fabric8.kubernetes.api.model.NamedExtension>);

  public abstract A removeFromExtensions(io.fabric8.kubernetes.api.model.NamedExtension...);

  public abstract A removeAllFromExtensions(java.util.Collection<io.fabric8.kubernetes.api.model.NamedExtension>);

  public abstract A removeMatchingFromExtensions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedExtensionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedExtension> getExtensions();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedExtension> buildExtensions();

  public abstract io.fabric8.kubernetes.api.model.NamedExtension buildExtension(int);

  public abstract io.fabric8.kubernetes.api.model.NamedExtension buildFirstExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtension buildLastExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtension buildMatchingExtension(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedExtensionBuilder>);

  public abstract java.lang.Boolean hasMatchingExtension(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedExtensionBuilder>);

  public abstract A withExtensions(java.util.List<io.fabric8.kubernetes.api.model.NamedExtension>);

  public abstract A withExtensions(io.fabric8.kubernetes.api.model.NamedExtension...);

  public abstract java.lang.Boolean hasExtensions();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> addNewExtension();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> addNewExtensionLike(io.fabric8.kubernetes.api.model.NamedExtension);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> setNewExtensionLike(int, io.fabric8.kubernetes.api.model.NamedExtension);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> editExtension(int);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> editFirstExtension();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> editLastExtension();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$ExtensionsNested<A> editMatchingExtension(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedExtensionBuilder>);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.Preferences getPreferences();

  public abstract io.fabric8.kubernetes.api.model.Preferences buildPreferences();

  public abstract A withPreferences(io.fabric8.kubernetes.api.model.Preferences);

  public abstract java.lang.Boolean hasPreferences();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$PreferencesNested<A> withNewPreferences();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$PreferencesNested<A> withNewPreferencesLike(io.fabric8.kubernetes.api.model.Preferences);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$PreferencesNested<A> editPreferences();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$PreferencesNested<A> editOrNewPreferences();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$PreferencesNested<A> editOrNewPreferencesLike(io.fabric8.kubernetes.api.model.Preferences);

  public abstract A addToUsers(int, io.fabric8.kubernetes.api.model.NamedAuthInfo);

  public abstract A setToUsers(int, io.fabric8.kubernetes.api.model.NamedAuthInfo);

  public abstract A addToUsers(io.fabric8.kubernetes.api.model.NamedAuthInfo...);

  public abstract A addAllToUsers(java.util.Collection<io.fabric8.kubernetes.api.model.NamedAuthInfo>);

  public abstract A removeFromUsers(io.fabric8.kubernetes.api.model.NamedAuthInfo...);

  public abstract A removeAllFromUsers(java.util.Collection<io.fabric8.kubernetes.api.model.NamedAuthInfo>);

  public abstract A removeMatchingFromUsers(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedAuthInfoBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedAuthInfo> getUsers();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.NamedAuthInfo> buildUsers();

  public abstract io.fabric8.kubernetes.api.model.NamedAuthInfo buildUser(int);

  public abstract io.fabric8.kubernetes.api.model.NamedAuthInfo buildFirstUser();

  public abstract io.fabric8.kubernetes.api.model.NamedAuthInfo buildLastUser();

  public abstract io.fabric8.kubernetes.api.model.NamedAuthInfo buildMatchingUser(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedAuthInfoBuilder>);

  public abstract java.lang.Boolean hasMatchingUser(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedAuthInfoBuilder>);

  public abstract A withUsers(java.util.List<io.fabric8.kubernetes.api.model.NamedAuthInfo>);

  public abstract A withUsers(io.fabric8.kubernetes.api.model.NamedAuthInfo...);

  public abstract java.lang.Boolean hasUsers();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> addNewUser();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> addNewUserLike(io.fabric8.kubernetes.api.model.NamedAuthInfo);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> setNewUserLike(int, io.fabric8.kubernetes.api.model.NamedAuthInfo);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> editUser(int);

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> editFirstUser();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> editLastUser();

  public abstract io.fabric8.kubernetes.api.model.ConfigFluent$UsersNested<A> editMatchingUser(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.NamedAuthInfoBuilder>);
}
