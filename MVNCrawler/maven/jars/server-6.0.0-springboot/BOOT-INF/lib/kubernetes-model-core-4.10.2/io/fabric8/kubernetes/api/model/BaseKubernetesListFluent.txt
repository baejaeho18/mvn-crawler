Compiled from "BaseKubernetesListFluent.java"
public interface io.fabric8.kubernetes.api.model.BaseKubernetesListFluent<A extends io.fabric8.kubernetes.api.model.BaseKubernetesListFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToItems(io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToItems(int, io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToItems(int, io.fabric8.kubernetes.api.model.HasMetadata);

  public abstract A setToItems(int, io.fabric8.kubernetes.api.model.HasMetadata);

  public abstract A addToItems(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract A addAllToItems(java.util.Collection<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract A removeFromItems(io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>);

  public abstract A removeFromItems(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract A removeAllFromItems(java.util.Collection<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.HasMetadata> getItems();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.HasMetadata> buildItems();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildItem(int);

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildFirstItem();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildLastItem();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract java.lang.Boolean hasMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract A withItems(java.util.List<io.fabric8.kubernetes.api.model.HasMetadata>);

  public abstract A withItems(io.fabric8.kubernetes.api.model.HasMetadata...);

  public abstract java.lang.Boolean hasItems();

  public abstract A addToLimitRangeItems(int, io.fabric8.kubernetes.api.model.LimitRange);

  public abstract A setToLimitRangeItems(int, io.fabric8.kubernetes.api.model.LimitRange);

  public abstract A addToLimitRangeItems(io.fabric8.kubernetes.api.model.LimitRange...);

  public abstract A addAllToLimitRangeItems(java.util.Collection<io.fabric8.kubernetes.api.model.LimitRange>);

  public abstract A removeFromLimitRangeItems(io.fabric8.kubernetes.api.model.LimitRange...);

  public abstract A removeAllFromLimitRangeItems(java.util.Collection<io.fabric8.kubernetes.api.model.LimitRange>);

  public abstract A removeMatchingFromLimitRangeItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$LimitRangeItemsNested<A> setNewLimitRangeItemLike(int, io.fabric8.kubernetes.api.model.LimitRange);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$LimitRangeItemsNested<A> addNewLimitRangeItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$LimitRangeItemsNested<A> addNewLimitRangeItemLike(io.fabric8.kubernetes.api.model.LimitRange);

  public abstract A addToNamespaceItems(int, io.fabric8.kubernetes.api.model.Namespace);

  public abstract A setToNamespaceItems(int, io.fabric8.kubernetes.api.model.Namespace);

  public abstract A addToNamespaceItems(io.fabric8.kubernetes.api.model.Namespace...);

  public abstract A addAllToNamespaceItems(java.util.Collection<io.fabric8.kubernetes.api.model.Namespace>);

  public abstract A removeFromNamespaceItems(io.fabric8.kubernetes.api.model.Namespace...);

  public abstract A removeAllFromNamespaceItems(java.util.Collection<io.fabric8.kubernetes.api.model.Namespace>);

  public abstract A removeMatchingFromNamespaceItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$NamespaceItemsNested<A> setNewNamespaceItemLike(int, io.fabric8.kubernetes.api.model.Namespace);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$NamespaceItemsNested<A> addNewNamespaceItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$NamespaceItemsNested<A> addNewNamespaceItemLike(io.fabric8.kubernetes.api.model.Namespace);

  public abstract A addToServiceItems(int, io.fabric8.kubernetes.api.model.Service);

  public abstract A setToServiceItems(int, io.fabric8.kubernetes.api.model.Service);

  public abstract A addToServiceItems(io.fabric8.kubernetes.api.model.Service...);

  public abstract A addAllToServiceItems(java.util.Collection<io.fabric8.kubernetes.api.model.Service>);

  public abstract A removeFromServiceItems(io.fabric8.kubernetes.api.model.Service...);

  public abstract A removeAllFromServiceItems(java.util.Collection<io.fabric8.kubernetes.api.model.Service>);

  public abstract A removeMatchingFromServiceItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ServiceItemsNested<A> setNewServiceItemLike(int, io.fabric8.kubernetes.api.model.Service);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ServiceItemsNested<A> addNewServiceItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ServiceItemsNested<A> addNewServiceItemLike(io.fabric8.kubernetes.api.model.Service);

  public abstract A addToReplicationControllerItems(int, io.fabric8.kubernetes.api.model.ReplicationController);

  public abstract A setToReplicationControllerItems(int, io.fabric8.kubernetes.api.model.ReplicationController);

  public abstract A addToReplicationControllerItems(io.fabric8.kubernetes.api.model.ReplicationController...);

  public abstract A addAllToReplicationControllerItems(java.util.Collection<io.fabric8.kubernetes.api.model.ReplicationController>);

  public abstract A removeFromReplicationControllerItems(io.fabric8.kubernetes.api.model.ReplicationController...);

  public abstract A removeAllFromReplicationControllerItems(java.util.Collection<io.fabric8.kubernetes.api.model.ReplicationController>);

  public abstract A removeMatchingFromReplicationControllerItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ReplicationControllerItemsNested<A> setNewReplicationControllerItemLike(int, io.fabric8.kubernetes.api.model.ReplicationController);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ReplicationControllerItemsNested<A> addNewReplicationControllerItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ReplicationControllerItemsNested<A> addNewReplicationControllerItemLike(io.fabric8.kubernetes.api.model.ReplicationController);

  public abstract A addToPodTemplateItems(int, io.fabric8.kubernetes.api.model.PodTemplate);

  public abstract A setToPodTemplateItems(int, io.fabric8.kubernetes.api.model.PodTemplate);

  public abstract A addToPodTemplateItems(io.fabric8.kubernetes.api.model.PodTemplate...);

  public abstract A addAllToPodTemplateItems(java.util.Collection<io.fabric8.kubernetes.api.model.PodTemplate>);

  public abstract A removeFromPodTemplateItems(io.fabric8.kubernetes.api.model.PodTemplate...);

  public abstract A removeAllFromPodTemplateItems(java.util.Collection<io.fabric8.kubernetes.api.model.PodTemplate>);

  public abstract A removeMatchingFromPodTemplateItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PodTemplateItemsNested<A> setNewPodTemplateItemLike(int, io.fabric8.kubernetes.api.model.PodTemplate);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PodTemplateItemsNested<A> addNewPodTemplateItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PodTemplateItemsNested<A> addNewPodTemplateItemLike(io.fabric8.kubernetes.api.model.PodTemplate);

  public abstract A addToEventItems(int, io.fabric8.kubernetes.api.model.Event);

  public abstract A setToEventItems(int, io.fabric8.kubernetes.api.model.Event);

  public abstract A addToEventItems(io.fabric8.kubernetes.api.model.Event...);

  public abstract A addAllToEventItems(java.util.Collection<io.fabric8.kubernetes.api.model.Event>);

  public abstract A removeFromEventItems(io.fabric8.kubernetes.api.model.Event...);

  public abstract A removeAllFromEventItems(java.util.Collection<io.fabric8.kubernetes.api.model.Event>);

  public abstract A removeMatchingFromEventItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$EventItemsNested<A> setNewEventItemLike(int, io.fabric8.kubernetes.api.model.Event);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$EventItemsNested<A> addNewEventItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$EventItemsNested<A> addNewEventItemLike(io.fabric8.kubernetes.api.model.Event);

  public abstract A addToPersistentVolumeItems(int, io.fabric8.kubernetes.api.model.PersistentVolume);

  public abstract A setToPersistentVolumeItems(int, io.fabric8.kubernetes.api.model.PersistentVolume);

  public abstract A addToPersistentVolumeItems(io.fabric8.kubernetes.api.model.PersistentVolume...);

  public abstract A addAllToPersistentVolumeItems(java.util.Collection<io.fabric8.kubernetes.api.model.PersistentVolume>);

  public abstract A removeFromPersistentVolumeItems(io.fabric8.kubernetes.api.model.PersistentVolume...);

  public abstract A removeAllFromPersistentVolumeItems(java.util.Collection<io.fabric8.kubernetes.api.model.PersistentVolume>);

  public abstract A removeMatchingFromPersistentVolumeItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeItemsNested<A> setNewPersistentVolumeItemLike(int, io.fabric8.kubernetes.api.model.PersistentVolume);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeItemsNested<A> addNewPersistentVolumeItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeItemsNested<A> addNewPersistentVolumeItemLike(io.fabric8.kubernetes.api.model.PersistentVolume);

  public abstract A addToPersistentVolumeClaimItems(int, io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A setToPersistentVolumeClaimItems(int, io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToPersistentVolumeClaimItems(io.fabric8.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A addAllToPersistentVolumeClaimItems(java.util.Collection<io.fabric8.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeFromPersistentVolumeClaimItems(io.fabric8.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A removeAllFromPersistentVolumeClaimItems(java.util.Collection<io.fabric8.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeMatchingFromPersistentVolumeClaimItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeClaimItemsNested<A> setNewPersistentVolumeClaimItemLike(int, io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeClaimItemsNested<A> addNewPersistentVolumeClaimItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeClaimItemsNested<A> addNewPersistentVolumeClaimItemLike(io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToEndpointsItems(int, io.fabric8.kubernetes.api.model.Endpoints);

  public abstract A setToEndpointsItems(int, io.fabric8.kubernetes.api.model.Endpoints);

  public abstract A addToEndpointsItems(io.fabric8.kubernetes.api.model.Endpoints...);

  public abstract A addAllToEndpointsItems(java.util.Collection<io.fabric8.kubernetes.api.model.Endpoints>);

  public abstract A removeFromEndpointsItems(io.fabric8.kubernetes.api.model.Endpoints...);

  public abstract A removeAllFromEndpointsItems(java.util.Collection<io.fabric8.kubernetes.api.model.Endpoints>);

  public abstract A removeMatchingFromEndpointsItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$EndpointsItemsNested<A> setNewEndpointsItemLike(int, io.fabric8.kubernetes.api.model.Endpoints);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$EndpointsItemsNested<A> addNewEndpointsItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$EndpointsItemsNested<A> addNewEndpointsItemLike(io.fabric8.kubernetes.api.model.Endpoints);

  public abstract A addToPodItems(int, io.fabric8.kubernetes.api.model.Pod);

  public abstract A setToPodItems(int, io.fabric8.kubernetes.api.model.Pod);

  public abstract A addToPodItems(io.fabric8.kubernetes.api.model.Pod...);

  public abstract A addAllToPodItems(java.util.Collection<io.fabric8.kubernetes.api.model.Pod>);

  public abstract A removeFromPodItems(io.fabric8.kubernetes.api.model.Pod...);

  public abstract A removeAllFromPodItems(java.util.Collection<io.fabric8.kubernetes.api.model.Pod>);

  public abstract A removeMatchingFromPodItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PodItemsNested<A> setNewPodItemLike(int, io.fabric8.kubernetes.api.model.Pod);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PodItemsNested<A> addNewPodItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$PodItemsNested<A> addNewPodItemLike(io.fabric8.kubernetes.api.model.Pod);

  public abstract A addToConfigMapItems(int, io.fabric8.kubernetes.api.model.ConfigMap);

  public abstract A setToConfigMapItems(int, io.fabric8.kubernetes.api.model.ConfigMap);

  public abstract A addToConfigMapItems(io.fabric8.kubernetes.api.model.ConfigMap...);

  public abstract A addAllToConfigMapItems(java.util.Collection<io.fabric8.kubernetes.api.model.ConfigMap>);

  public abstract A removeFromConfigMapItems(io.fabric8.kubernetes.api.model.ConfigMap...);

  public abstract A removeAllFromConfigMapItems(java.util.Collection<io.fabric8.kubernetes.api.model.ConfigMap>);

  public abstract A removeMatchingFromConfigMapItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ConfigMapItemsNested<A> setNewConfigMapItemLike(int, io.fabric8.kubernetes.api.model.ConfigMap);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ConfigMapItemsNested<A> addNewConfigMapItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ConfigMapItemsNested<A> addNewConfigMapItemLike(io.fabric8.kubernetes.api.model.ConfigMap);

  public abstract A addToComponentStatusItems(int, io.fabric8.kubernetes.api.model.ComponentStatus);

  public abstract A setToComponentStatusItems(int, io.fabric8.kubernetes.api.model.ComponentStatus);

  public abstract A addToComponentStatusItems(io.fabric8.kubernetes.api.model.ComponentStatus...);

  public abstract A addAllToComponentStatusItems(java.util.Collection<io.fabric8.kubernetes.api.model.ComponentStatus>);

  public abstract A removeFromComponentStatusItems(io.fabric8.kubernetes.api.model.ComponentStatus...);

  public abstract A removeAllFromComponentStatusItems(java.util.Collection<io.fabric8.kubernetes.api.model.ComponentStatus>);

  public abstract A removeMatchingFromComponentStatusItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ComponentStatusItemsNested<A> setNewComponentStatusItemLike(int, io.fabric8.kubernetes.api.model.ComponentStatus);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ComponentStatusItemsNested<A> addNewComponentStatusItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ComponentStatusItemsNested<A> addNewComponentStatusItemLike(io.fabric8.kubernetes.api.model.ComponentStatus);

  public abstract A addToBindingItems(int, io.fabric8.kubernetes.api.model.Binding);

  public abstract A setToBindingItems(int, io.fabric8.kubernetes.api.model.Binding);

  public abstract A addToBindingItems(io.fabric8.kubernetes.api.model.Binding...);

  public abstract A addAllToBindingItems(java.util.Collection<io.fabric8.kubernetes.api.model.Binding>);

  public abstract A removeFromBindingItems(io.fabric8.kubernetes.api.model.Binding...);

  public abstract A removeAllFromBindingItems(java.util.Collection<io.fabric8.kubernetes.api.model.Binding>);

  public abstract A removeMatchingFromBindingItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$BindingItemsNested<A> setNewBindingItemLike(int, io.fabric8.kubernetes.api.model.Binding);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$BindingItemsNested<A> addNewBindingItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$BindingItemsNested<A> addNewBindingItemLike(io.fabric8.kubernetes.api.model.Binding);

  public abstract A addToResourceQuotaItems(int, io.fabric8.kubernetes.api.model.ResourceQuota);

  public abstract A setToResourceQuotaItems(int, io.fabric8.kubernetes.api.model.ResourceQuota);

  public abstract A addToResourceQuotaItems(io.fabric8.kubernetes.api.model.ResourceQuota...);

  public abstract A addAllToResourceQuotaItems(java.util.Collection<io.fabric8.kubernetes.api.model.ResourceQuota>);

  public abstract A removeFromResourceQuotaItems(io.fabric8.kubernetes.api.model.ResourceQuota...);

  public abstract A removeAllFromResourceQuotaItems(java.util.Collection<io.fabric8.kubernetes.api.model.ResourceQuota>);

  public abstract A removeMatchingFromResourceQuotaItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ResourceQuotaItemsNested<A> setNewResourceQuotaItemLike(int, io.fabric8.kubernetes.api.model.ResourceQuota);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ResourceQuotaItemsNested<A> addNewResourceQuotaItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ResourceQuotaItemsNested<A> addNewResourceQuotaItemLike(io.fabric8.kubernetes.api.model.ResourceQuota);

  public abstract A addToSecretItems(int, io.fabric8.kubernetes.api.model.Secret);

  public abstract A setToSecretItems(int, io.fabric8.kubernetes.api.model.Secret);

  public abstract A addToSecretItems(io.fabric8.kubernetes.api.model.Secret...);

  public abstract A addAllToSecretItems(java.util.Collection<io.fabric8.kubernetes.api.model.Secret>);

  public abstract A removeFromSecretItems(io.fabric8.kubernetes.api.model.Secret...);

  public abstract A removeAllFromSecretItems(java.util.Collection<io.fabric8.kubernetes.api.model.Secret>);

  public abstract A removeMatchingFromSecretItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$SecretItemsNested<A> setNewSecretItemLike(int, io.fabric8.kubernetes.api.model.Secret);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$SecretItemsNested<A> addNewSecretItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$SecretItemsNested<A> addNewSecretItemLike(io.fabric8.kubernetes.api.model.Secret);

  public abstract A addToNodeItems(int, io.fabric8.kubernetes.api.model.Node);

  public abstract A setToNodeItems(int, io.fabric8.kubernetes.api.model.Node);

  public abstract A addToNodeItems(io.fabric8.kubernetes.api.model.Node...);

  public abstract A addAllToNodeItems(java.util.Collection<io.fabric8.kubernetes.api.model.Node>);

  public abstract A removeFromNodeItems(io.fabric8.kubernetes.api.model.Node...);

  public abstract A removeAllFromNodeItems(java.util.Collection<io.fabric8.kubernetes.api.model.Node>);

  public abstract A removeMatchingFromNodeItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$NodeItemsNested<A> setNewNodeItemLike(int, io.fabric8.kubernetes.api.model.Node);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$NodeItemsNested<A> addNewNodeItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$NodeItemsNested<A> addNewNodeItemLike(io.fabric8.kubernetes.api.model.Node);

  public abstract A addToServiceAccountItems(int, io.fabric8.kubernetes.api.model.ServiceAccount);

  public abstract A setToServiceAccountItems(int, io.fabric8.kubernetes.api.model.ServiceAccount);

  public abstract A addToServiceAccountItems(io.fabric8.kubernetes.api.model.ServiceAccount...);

  public abstract A addAllToServiceAccountItems(java.util.Collection<io.fabric8.kubernetes.api.model.ServiceAccount>);

  public abstract A removeFromServiceAccountItems(io.fabric8.kubernetes.api.model.ServiceAccount...);

  public abstract A removeAllFromServiceAccountItems(java.util.Collection<io.fabric8.kubernetes.api.model.ServiceAccount>);

  public abstract A removeMatchingFromServiceAccountItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.builder.VisitableBuilder<? extends io.fabric8.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ServiceAccountItemsNested<A> setNewServiceAccountItemLike(int, io.fabric8.kubernetes.api.model.ServiceAccount);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ServiceAccountItemsNested<A> addNewServiceAccountItem();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$ServiceAccountItemsNested<A> addNewServiceAccountItemLike(io.fabric8.kubernetes.api.model.ServiceAccount);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ListMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ListMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ListMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract A withNewMetadata(java.lang.String, java.lang.Long, java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ListMeta);

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ListMeta);
}
