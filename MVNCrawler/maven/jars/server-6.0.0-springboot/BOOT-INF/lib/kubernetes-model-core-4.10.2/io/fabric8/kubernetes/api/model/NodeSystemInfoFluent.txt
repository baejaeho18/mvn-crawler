Compiled from "NodeSystemInfoFluent.java"
public interface io.fabric8.kubernetes.api.model.NodeSystemInfoFluent<A extends io.fabric8.kubernetes.api.model.NodeSystemInfoFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getArchitecture();

  public abstract A withArchitecture(java.lang.String);

  public abstract java.lang.Boolean hasArchitecture();

  public abstract A withNewArchitecture(java.lang.String);

  public abstract A withNewArchitecture(java.lang.StringBuilder);

  public abstract A withNewArchitecture(java.lang.StringBuffer);

  public abstract java.lang.String getBootID();

  public abstract A withBootID(java.lang.String);

  public abstract java.lang.Boolean hasBootID();

  public abstract A withNewBootID(java.lang.String);

  public abstract A withNewBootID(java.lang.StringBuilder);

  public abstract A withNewBootID(java.lang.StringBuffer);

  public abstract java.lang.String getContainerRuntimeVersion();

  public abstract A withContainerRuntimeVersion(java.lang.String);

  public abstract java.lang.Boolean hasContainerRuntimeVersion();

  public abstract A withNewContainerRuntimeVersion(java.lang.String);

  public abstract A withNewContainerRuntimeVersion(java.lang.StringBuilder);

  public abstract A withNewContainerRuntimeVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKernelVersion();

  public abstract A withKernelVersion(java.lang.String);

  public abstract java.lang.Boolean hasKernelVersion();

  public abstract A withNewKernelVersion(java.lang.String);

  public abstract A withNewKernelVersion(java.lang.StringBuilder);

  public abstract A withNewKernelVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKubeProxyVersion();

  public abstract A withKubeProxyVersion(java.lang.String);

  public abstract java.lang.Boolean hasKubeProxyVersion();

  public abstract A withNewKubeProxyVersion(java.lang.String);

  public abstract A withNewKubeProxyVersion(java.lang.StringBuilder);

  public abstract A withNewKubeProxyVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKubeletVersion();

  public abstract A withKubeletVersion(java.lang.String);

  public abstract java.lang.Boolean hasKubeletVersion();

  public abstract A withNewKubeletVersion(java.lang.String);

  public abstract A withNewKubeletVersion(java.lang.StringBuilder);

  public abstract A withNewKubeletVersion(java.lang.StringBuffer);

  public abstract java.lang.String getMachineID();

  public abstract A withMachineID(java.lang.String);

  public abstract java.lang.Boolean hasMachineID();

  public abstract A withNewMachineID(java.lang.String);

  public abstract A withNewMachineID(java.lang.StringBuilder);

  public abstract A withNewMachineID(java.lang.StringBuffer);

  public abstract java.lang.String getOperatingSystem();

  public abstract A withOperatingSystem(java.lang.String);

  public abstract java.lang.Boolean hasOperatingSystem();

  public abstract A withNewOperatingSystem(java.lang.String);

  public abstract A withNewOperatingSystem(java.lang.StringBuilder);

  public abstract A withNewOperatingSystem(java.lang.StringBuffer);

  public abstract java.lang.String getOsImage();

  public abstract A withOsImage(java.lang.String);

  public abstract java.lang.Boolean hasOsImage();

  public abstract A withNewOsImage(java.lang.String);

  public abstract A withNewOsImage(java.lang.StringBuilder);

  public abstract A withNewOsImage(java.lang.StringBuffer);

  public abstract java.lang.String getSystemUUID();

  public abstract A withSystemUUID(java.lang.String);

  public abstract java.lang.Boolean hasSystemUUID();

  public abstract A withNewSystemUUID(java.lang.String);

  public abstract A withNewSystemUUID(java.lang.StringBuilder);

  public abstract A withNewSystemUUID(java.lang.StringBuffer);
}
