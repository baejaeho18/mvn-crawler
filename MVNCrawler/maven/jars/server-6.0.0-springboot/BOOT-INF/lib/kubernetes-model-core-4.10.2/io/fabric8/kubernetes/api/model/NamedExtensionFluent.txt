Compiled from "NamedExtensionFluent.java"
public interface io.fabric8.kubernetes.api.model.NamedExtensionFluent<A extends io.fabric8.kubernetes.api.model.NamedExtensionFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.kubernetes.api.model.HasMetadata getExtension();

  public abstract io.fabric8.kubernetes.api.model.HasMetadata buildExtension();

  public abstract A withExtension(io.fabric8.kubernetes.api.model.HasMetadata);

  public abstract java.lang.Boolean hasExtension();

  public abstract A withLimitRangeExtension(io.fabric8.kubernetes.api.model.LimitRange);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$LimitRangeExtensionNested<A> withNewLimitRangeExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$LimitRangeExtensionNested<A> withNewLimitRangeExtensionLike(io.fabric8.kubernetes.api.model.LimitRange);

  public abstract A withNamespaceExtension(io.fabric8.kubernetes.api.model.Namespace);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$NamespaceExtensionNested<A> withNewNamespaceExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$NamespaceExtensionNested<A> withNewNamespaceExtensionLike(io.fabric8.kubernetes.api.model.Namespace);

  public abstract A withServiceExtension(io.fabric8.kubernetes.api.model.Service);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ServiceExtensionNested<A> withNewServiceExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ServiceExtensionNested<A> withNewServiceExtensionLike(io.fabric8.kubernetes.api.model.Service);

  public abstract A withReplicationControllerExtension(io.fabric8.kubernetes.api.model.ReplicationController);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ReplicationControllerExtensionNested<A> withNewReplicationControllerExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ReplicationControllerExtensionNested<A> withNewReplicationControllerExtensionLike(io.fabric8.kubernetes.api.model.ReplicationController);

  public abstract A withPodTemplateExtension(io.fabric8.kubernetes.api.model.PodTemplate);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PodTemplateExtensionNested<A> withNewPodTemplateExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PodTemplateExtensionNested<A> withNewPodTemplateExtensionLike(io.fabric8.kubernetes.api.model.PodTemplate);

  public abstract A withEventExtension(io.fabric8.kubernetes.api.model.Event);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$EventExtensionNested<A> withNewEventExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$EventExtensionNested<A> withNewEventExtensionLike(io.fabric8.kubernetes.api.model.Event);

  public abstract A withPersistentVolumeExtension(io.fabric8.kubernetes.api.model.PersistentVolume);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeExtensionNested<A> withNewPersistentVolumeExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeExtensionNested<A> withNewPersistentVolumeExtensionLike(io.fabric8.kubernetes.api.model.PersistentVolume);

  public abstract A withPersistentVolumeClaimExtension(io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeClaimExtensionNested<A> withNewPersistentVolumeClaimExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeClaimExtensionNested<A> withNewPersistentVolumeClaimExtensionLike(io.fabric8.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A withEndpointsExtension(io.fabric8.kubernetes.api.model.Endpoints);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$EndpointsExtensionNested<A> withNewEndpointsExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$EndpointsExtensionNested<A> withNewEndpointsExtensionLike(io.fabric8.kubernetes.api.model.Endpoints);

  public abstract A withPodExtension(io.fabric8.kubernetes.api.model.Pod);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PodExtensionNested<A> withNewPodExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$PodExtensionNested<A> withNewPodExtensionLike(io.fabric8.kubernetes.api.model.Pod);

  public abstract A withConfigMapExtension(io.fabric8.kubernetes.api.model.ConfigMap);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ConfigMapExtensionNested<A> withNewConfigMapExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ConfigMapExtensionNested<A> withNewConfigMapExtensionLike(io.fabric8.kubernetes.api.model.ConfigMap);

  public abstract A withComponentStatusExtension(io.fabric8.kubernetes.api.model.ComponentStatus);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ComponentStatusExtensionNested<A> withNewComponentStatusExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ComponentStatusExtensionNested<A> withNewComponentStatusExtensionLike(io.fabric8.kubernetes.api.model.ComponentStatus);

  public abstract A withBindingExtension(io.fabric8.kubernetes.api.model.Binding);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$BindingExtensionNested<A> withNewBindingExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$BindingExtensionNested<A> withNewBindingExtensionLike(io.fabric8.kubernetes.api.model.Binding);

  public abstract A withResourceQuotaExtension(io.fabric8.kubernetes.api.model.ResourceQuota);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ResourceQuotaExtensionNested<A> withNewResourceQuotaExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ResourceQuotaExtensionNested<A> withNewResourceQuotaExtensionLike(io.fabric8.kubernetes.api.model.ResourceQuota);

  public abstract A withSecretExtension(io.fabric8.kubernetes.api.model.Secret);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$SecretExtensionNested<A> withNewSecretExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$SecretExtensionNested<A> withNewSecretExtensionLike(io.fabric8.kubernetes.api.model.Secret);

  public abstract A withNodeExtension(io.fabric8.kubernetes.api.model.Node);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$NodeExtensionNested<A> withNewNodeExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$NodeExtensionNested<A> withNewNodeExtensionLike(io.fabric8.kubernetes.api.model.Node);

  public abstract A withServiceAccountExtension(io.fabric8.kubernetes.api.model.ServiceAccount);

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ServiceAccountExtensionNested<A> withNewServiceAccountExtension();

  public abstract io.fabric8.kubernetes.api.model.NamedExtensionFluent$ServiceAccountExtensionNested<A> withNewServiceAccountExtensionLike(io.fabric8.kubernetes.api.model.ServiceAccount);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);
}
