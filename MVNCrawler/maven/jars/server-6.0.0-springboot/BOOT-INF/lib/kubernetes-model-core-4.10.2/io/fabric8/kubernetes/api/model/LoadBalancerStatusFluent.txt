Compiled from "LoadBalancerStatusFluent.java"
public interface io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent<A extends io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToIngress(int, io.fabric8.kubernetes.api.model.LoadBalancerIngress);

  public abstract A setToIngress(int, io.fabric8.kubernetes.api.model.LoadBalancerIngress);

  public abstract A addToIngress(io.fabric8.kubernetes.api.model.LoadBalancerIngress...);

  public abstract A addAllToIngress(java.util.Collection<io.fabric8.kubernetes.api.model.LoadBalancerIngress>);

  public abstract A removeFromIngress(io.fabric8.kubernetes.api.model.LoadBalancerIngress...);

  public abstract A removeAllFromIngress(java.util.Collection<io.fabric8.kubernetes.api.model.LoadBalancerIngress>);

  public abstract A removeMatchingFromIngress(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LoadBalancerIngressBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.LoadBalancerIngress> getIngress();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.LoadBalancerIngress> buildIngress();

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerIngress buildIngress(int);

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerIngress buildFirstIngress();

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerIngress buildLastIngress();

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerIngress buildMatchingIngress(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LoadBalancerIngressBuilder>);

  public abstract java.lang.Boolean hasMatchingIngress(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LoadBalancerIngressBuilder>);

  public abstract A withIngress(java.util.List<io.fabric8.kubernetes.api.model.LoadBalancerIngress>);

  public abstract A withIngress(io.fabric8.kubernetes.api.model.LoadBalancerIngress...);

  public abstract java.lang.Boolean hasIngress();

  public abstract A addNewIngress(java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> addNewIngress();

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> addNewIngressLike(io.fabric8.kubernetes.api.model.LoadBalancerIngress);

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> setNewIngressLike(int, io.fabric8.kubernetes.api.model.LoadBalancerIngress);

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> editIngress(int);

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> editFirstIngress();

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> editLastIngress();

  public abstract io.fabric8.kubernetes.api.model.LoadBalancerStatusFluent$IngressNested<A> editMatchingIngress(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.LoadBalancerIngressBuilder>);
}
