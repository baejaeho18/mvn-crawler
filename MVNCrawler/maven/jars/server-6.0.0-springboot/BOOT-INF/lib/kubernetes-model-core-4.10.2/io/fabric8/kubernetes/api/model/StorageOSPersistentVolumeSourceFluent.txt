Compiled from "StorageOSPersistentVolumeSourceFluent.java"
public interface io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent<A extends io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getFsType();

  public abstract A withFsType(java.lang.String);

  public abstract java.lang.Boolean hasFsType();

  public abstract A withNewFsType(java.lang.String);

  public abstract A withNewFsType(java.lang.StringBuilder);

  public abstract A withNewFsType(java.lang.StringBuffer);

  public abstract java.lang.Boolean isReadOnly();

  public abstract A withReadOnly(java.lang.Boolean);

  public abstract java.lang.Boolean hasReadOnly();

  public abstract A withNewReadOnly(java.lang.String);

  public abstract A withNewReadOnly(boolean);

  public abstract io.fabric8.kubernetes.api.model.ObjectReference getSecretRef();

  public abstract io.fabric8.kubernetes.api.model.ObjectReference buildSecretRef();

  public abstract A withSecretRef(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasSecretRef();

  public abstract io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRef();

  public abstract io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRefLike(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent$SecretRefNested<A> editSecretRef();

  public abstract io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRef();

  public abstract io.fabric8.kubernetes.api.model.StorageOSPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRefLike(io.fabric8.kubernetes.api.model.ObjectReference);

  public abstract java.lang.String getVolumeName();

  public abstract A withVolumeName(java.lang.String);

  public abstract java.lang.Boolean hasVolumeName();

  public abstract A withNewVolumeName(java.lang.String);

  public abstract A withNewVolumeName(java.lang.StringBuilder);

  public abstract A withNewVolumeName(java.lang.StringBuffer);

  public abstract java.lang.String getVolumeNamespace();

  public abstract A withVolumeNamespace(java.lang.String);

  public abstract java.lang.Boolean hasVolumeNamespace();

  public abstract A withNewVolumeNamespace(java.lang.String);

  public abstract A withNewVolumeNamespace(java.lang.StringBuilder);

  public abstract A withNewVolumeNamespace(java.lang.StringBuffer);
}
