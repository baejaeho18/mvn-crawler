Compiled from "ExecConfigFluent.java"
public interface io.fabric8.kubernetes.api.model.ExecConfigFluent<A extends io.fabric8.kubernetes.api.model.ExecConfigFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToArgs(int, java.lang.String);

  public abstract A setToArgs(int, java.lang.String);

  public abstract A addToArgs(java.lang.String...);

  public abstract A addAllToArgs(java.util.Collection<java.lang.String>);

  public abstract A removeFromArgs(java.lang.String...);

  public abstract A removeAllFromArgs(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getArgs();

  public abstract java.lang.String getArg(int);

  public abstract java.lang.String getFirstArg();

  public abstract java.lang.String getLastArg();

  public abstract java.lang.String getMatchingArg(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingArg(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withArgs(java.util.List<java.lang.String>);

  public abstract A withArgs(java.lang.String...);

  public abstract java.lang.Boolean hasArgs();

  public abstract A addNewArg(java.lang.String);

  public abstract A addNewArg(java.lang.StringBuilder);

  public abstract A addNewArg(java.lang.StringBuffer);

  public abstract java.lang.String getCommand();

  public abstract A withCommand(java.lang.String);

  public abstract java.lang.Boolean hasCommand();

  public abstract A withNewCommand(java.lang.String);

  public abstract A withNewCommand(java.lang.StringBuilder);

  public abstract A withNewCommand(java.lang.StringBuffer);

  public abstract A addToEnv(int, io.fabric8.kubernetes.api.model.ExecEnvVar);

  public abstract A setToEnv(int, io.fabric8.kubernetes.api.model.ExecEnvVar);

  public abstract A addToEnv(io.fabric8.kubernetes.api.model.ExecEnvVar...);

  public abstract A addAllToEnv(java.util.Collection<io.fabric8.kubernetes.api.model.ExecEnvVar>);

  public abstract A removeFromEnv(io.fabric8.kubernetes.api.model.ExecEnvVar...);

  public abstract A removeAllFromEnv(java.util.Collection<io.fabric8.kubernetes.api.model.ExecEnvVar>);

  public abstract A removeMatchingFromEnv(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ExecEnvVarBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.ExecEnvVar> getEnv();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.ExecEnvVar> buildEnv();

  public abstract io.fabric8.kubernetes.api.model.ExecEnvVar buildEnv(int);

  public abstract io.fabric8.kubernetes.api.model.ExecEnvVar buildFirstEnv();

  public abstract io.fabric8.kubernetes.api.model.ExecEnvVar buildLastEnv();

  public abstract io.fabric8.kubernetes.api.model.ExecEnvVar buildMatchingEnv(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ExecEnvVarBuilder>);

  public abstract java.lang.Boolean hasMatchingEnv(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ExecEnvVarBuilder>);

  public abstract A withEnv(java.util.List<io.fabric8.kubernetes.api.model.ExecEnvVar>);

  public abstract A withEnv(io.fabric8.kubernetes.api.model.ExecEnvVar...);

  public abstract java.lang.Boolean hasEnv();

  public abstract A addNewEnv(java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> addNewEnv();

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> addNewEnvLike(io.fabric8.kubernetes.api.model.ExecEnvVar);

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> setNewEnvLike(int, io.fabric8.kubernetes.api.model.ExecEnvVar);

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> editEnv(int);

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> editFirstEnv();

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> editLastEnv();

  public abstract io.fabric8.kubernetes.api.model.ExecConfigFluent$EnvNested<A> editMatchingEnv(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.ExecEnvVarBuilder>);
}
