Compiled from "ConfigMapFluent.java"
public interface io.fabric8.kubernetes.api.model.ConfigMapFluent<A extends io.fabric8.kubernetes.api.model.ConfigMapFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToBinaryData(java.lang.String, java.lang.String);

  public abstract A addToBinaryData(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromBinaryData(java.lang.String);

  public abstract A removeFromBinaryData(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getBinaryData();

  public abstract A withBinaryData(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasBinaryData();

  public abstract A addToData(java.lang.String, java.lang.String);

  public abstract A addToData(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromData(java.lang.String);

  public abstract A removeFromData(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getData();

  public abstract A withData(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasData();

  public abstract java.lang.Boolean isImmutable();

  public abstract A withImmutable(java.lang.Boolean);

  public abstract java.lang.Boolean hasImmutable();

  public abstract A withNewImmutable(java.lang.String);

  public abstract A withNewImmutable(boolean);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.fabric8.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.fabric8.kubernetes.api.model.ConfigMapFluent$MetadataNested<A> withNewMetadata();

  public abstract io.fabric8.kubernetes.api.model.ConfigMapFluent$MetadataNested<A> withNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);

  public abstract io.fabric8.kubernetes.api.model.ConfigMapFluent$MetadataNested<A> editMetadata();

  public abstract io.fabric8.kubernetes.api.model.ConfigMapFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.fabric8.kubernetes.api.model.ConfigMapFluent$MetadataNested<A> editOrNewMetadataLike(io.fabric8.kubernetes.api.model.ObjectMeta);
}
