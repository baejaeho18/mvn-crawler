Compiled from "Platform.java"
public abstract class com.kenai.jffi.Platform {
  private static final java.util.Locale LOCALE;

  private final com.kenai.jffi.Platform$OS os;

  private final int javaVersionMajor;

  private static final com.kenai.jffi.Platform$OS determineOS();
    Code:
       0: ldc           #5                  // String os.name
       2: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ldc           #7                  // String
       7: invokevirtual #8                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      10: iconst_0
      11: aaload
      12: astore_0
      13: aload_0
      14: ldc           #9                  // String mac
      16: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      19: ifne          31
      22: aload_0
      23: ldc           #11                 // String darwin
      25: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      28: ifeq          35
      31: getstatic     #12                 // Field com/kenai/jffi/Platform$OS.DARWIN:Lcom/kenai/jffi/Platform$OS;
      34: areturn
      35: aload_0
      36: ldc           #13                 // String linux
      38: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      41: ifeq          48
      44: getstatic     #14                 // Field com/kenai/jffi/Platform$OS.LINUX:Lcom/kenai/jffi/Platform$OS;
      47: areturn
      48: aload_0
      49: ldc           #15                 // String sunos
      51: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      54: ifne          66
      57: aload_0
      58: ldc           #16                 // String solaris
      60: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      63: ifeq          70
      66: getstatic     #17                 // Field com/kenai/jffi/Platform$OS.SOLARIS:Lcom/kenai/jffi/Platform$OS;
      69: areturn
      70: aload_0
      71: ldc           #18                 // String aix
      73: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      76: ifeq          83
      79: getstatic     #19                 // Field com/kenai/jffi/Platform$OS.AIX:Lcom/kenai/jffi/Platform$OS;
      82: areturn
      83: aload_0
      84: ldc           #20                 // String openbsd
      86: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      89: ifeq          96
      92: getstatic     #21                 // Field com/kenai/jffi/Platform$OS.OPENBSD:Lcom/kenai/jffi/Platform$OS;
      95: areturn
      96: aload_0
      97: ldc           #22                 // String freebsd
      99: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
     102: ifeq          109
     105: getstatic     #23                 // Field com/kenai/jffi/Platform$OS.FREEBSD:Lcom/kenai/jffi/Platform$OS;
     108: areturn
     109: aload_0
     110: ldc           #24                 // String dragonfly
     112: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
     115: ifeq          122
     118: getstatic     #25                 // Field com/kenai/jffi/Platform$OS.DRAGONFLY:Lcom/kenai/jffi/Platform$OS;
     121: areturn
     122: aload_0
     123: ldc           #26                 // String windows
     125: invokestatic  #10                 // Method startsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
     128: ifeq          135
     131: getstatic     #27                 // Field com/kenai/jffi/Platform$OS.WINDOWS:Lcom/kenai/jffi/Platform$OS;
     134: areturn
     135: getstatic     #28                 // Field com/kenai/jffi/Platform$OS.UNKNOWN:Lcom/kenai/jffi/Platform$OS;
     138: areturn

  private static final com.kenai.jffi.Platform determinePlatform(com.kenai.jffi.Platform$OS);
    Code:
       0: getstatic     #29                 // Field com/kenai/jffi/Platform$1.$SwitchMap$com$kenai$jffi$Platform$OS:[I
       3: aload_0
       4: invokevirtual #30                 // Method com/kenai/jffi/Platform$OS.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 40
               default: 44
          }
      36: invokestatic  #31                 // Method newDarwinPlatform:()Lcom/kenai/jffi/Platform;
      39: areturn
      40: invokestatic  #32                 // Method newWindowsPlatform:()Lcom/kenai/jffi/Platform;
      43: areturn
      44: aload_0
      45: invokestatic  #33                 // Method newDefaultPlatform:(Lcom/kenai/jffi/Platform$OS;)Lcom/kenai/jffi/Platform;
      48: areturn

  private static com.kenai.jffi.Platform newDarwinPlatform();
    Code:
       0: new           #34                 // class com/kenai/jffi/Platform$Darwin
       3: dup
       4: invokespecial #35                 // Method com/kenai/jffi/Platform$Darwin."<init>":()V
       7: areturn

  private static com.kenai.jffi.Platform newWindowsPlatform();
    Code:
       0: new           #36                 // class com/kenai/jffi/Platform$Windows
       3: dup
       4: invokespecial #37                 // Method com/kenai/jffi/Platform$Windows."<init>":()V
       7: areturn

  private static com.kenai.jffi.Platform newDefaultPlatform(com.kenai.jffi.Platform$OS);
    Code:
       0: new           #38                 // class com/kenai/jffi/Platform$Default
       3: dup
       4: aload_0
       5: invokespecial #39                 // Method com/kenai/jffi/Platform$Default."<init>":(Lcom/kenai/jffi/Platform$OS;)V
       8: areturn

  private com.kenai.jffi.Platform(com.kenai.jffi.Platform$OS);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #41                 // Field os:Lcom/kenai/jffi/Platform$OS;
       9: iconst_5
      10: istore_2
      11: ldc           #42                 // String java.version
      13: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      16: astore_3
      17: aload_3
      18: ifnull        40
      21: aload_3
      22: ldc           #43                 // String \\.
      24: invokevirtual #8                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      27: astore        4
      29: aload         4
      31: iconst_1
      32: aaload
      33: invokestatic  #44                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      36: invokevirtual #45                 // Method java/lang/Integer.intValue:()I
      39: istore_2
      40: goto          46
      43: astore_3
      44: iconst_5
      45: istore_2
      46: aload_0
      47: iload_2
      48: putfield      #47                 // Field javaVersionMajor:I
      51: return
    Exception table:
       from    to  target type
          11    40    43   Class java/lang/Exception

  public static final com.kenai.jffi.Platform getPlatform();
    Code:
       0: getstatic     #48                 // Field com/kenai/jffi/Platform$SingletonHolder.PLATFORM:Lcom/kenai/jffi/Platform;
       3: areturn

  public final com.kenai.jffi.Platform$OS getOS();
    Code:
       0: aload_0
       1: getfield      #41                 // Field os:Lcom/kenai/jffi/Platform$OS;
       4: areturn

  public final com.kenai.jffi.Platform$CPU getCPU();
    Code:
       0: getstatic     #49                 // Field com/kenai/jffi/Platform$ArchHolder.cpu:Lcom/kenai/jffi/Platform$CPU;
       3: areturn

  public final int getJavaMajorVersion();
    Code:
       0: aload_0
       1: getfield      #47                 // Field javaVersionMajor:I
       4: ireturn

  public abstract int longSize();

  public final int addressSize();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getCPU:()Lcom/kenai/jffi/Platform$CPU;
       4: getfield      #51                 // Field com/kenai/jffi/Platform$CPU.dataModel:I
       7: ireturn

  public final long addressMask();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getCPU:()Lcom/kenai/jffi/Platform$CPU;
       4: getfield      #52                 // Field com/kenai/jffi/Platform$CPU.addressMask:J
       7: lreturn

  public java.lang.String getName();
    Code:
       0: ldc           #5                  // String os.name
       2: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ldc           #7                  // String
       7: invokevirtual #8                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      10: iconst_0
      11: aaload
      12: astore_1
      13: new           #53                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_0
      21: invokevirtual #50                 // Method getCPU:()Lcom/kenai/jffi/Platform$CPU;
      24: invokevirtual #55                 // Method com/kenai/jffi/Platform$CPU.name:()Ljava/lang/String;
      27: getstatic     #4                  // Field LOCALE:Ljava/util/Locale;
      30: invokevirtual #56                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      33: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #58                 // String -
      38: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  public java.lang.String mapLibraryName(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #60                 // Method getLibraryNamePattern:()Ljava/lang/String;
       5: invokevirtual #61                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
       8: ifeq          13
      11: aload_1
      12: areturn
      13: aload_1
      14: invokestatic  #62                 // Method java/lang/System.mapLibraryName:(Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public java.lang.String getLibraryNamePattern();
    Code:
       0: ldc           #63                 // String lib.*\\.so.*$
       2: areturn

  public boolean isSupported();
    Code:
       0: invokestatic  #64                 // Method com/kenai/jffi/Foreign.getInstance:()Lcom/kenai/jffi/Foreign;
       3: invokevirtual #65                 // Method com/kenai/jffi/Foreign.getVersion:()I
       6: istore_1
       7: iload_1
       8: ldc           #66                 // int 16776960
      10: iand
      11: getstatic     #67                 // Field com/kenai/jffi/Foreign.VERSION_MAJOR:I
      14: bipush        16
      16: ishl
      17: getstatic     #68                 // Field com/kenai/jffi/Foreign.VERSION_MINOR:I
      20: bipush        8
      22: ishl
      23: ior
      24: if_icmpne     29
      27: iconst_1
      28: ireturn
      29: new           #69                 // class java/lang/UnsatisfiedLinkError
      32: dup
      33: ldc           #70                 // String Incorrect native library version
      35: invokespecial #71                 // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
      38: athrow

  private static boolean startsWithIgnoreCase(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       5: ifne          48
       8: aload_0
       9: getstatic     #4                  // Field LOCALE:Ljava/util/Locale;
      12: invokevirtual #73                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      15: aload_1
      16: getstatic     #4                  // Field LOCALE:Ljava/util/Locale;
      19: invokevirtual #73                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      22: invokevirtual #72                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      25: ifne          48
      28: aload_0
      29: getstatic     #4                  // Field LOCALE:Ljava/util/Locale;
      32: invokevirtual #56                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      35: aload_1
      36: getstatic     #4                  // Field LOCALE:Ljava/util/Locale;
      39: invokevirtual #56                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      42: invokevirtual #72                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  static java.util.Locale access$000();
    Code:
       0: getstatic     #4                  // Field LOCALE:Ljava/util/Locale;
       3: areturn

  static com.kenai.jffi.Platform$OS access$100();
    Code:
       0: invokestatic  #3                  // Method determineOS:()Lcom/kenai/jffi/Platform$OS;
       3: areturn

  static com.kenai.jffi.Platform access$200(com.kenai.jffi.Platform$OS);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method determinePlatform:(Lcom/kenai/jffi/Platform$OS;)Lcom/kenai/jffi/Platform;
       4: areturn

  com.kenai.jffi.Platform(com.kenai.jffi.Platform$OS, com.kenai.jffi.Platform$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/kenai/jffi/Platform$OS;)V
       5: return

  static {};
    Code:
       0: getstatic     #74                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       3: putstatic     #4                  // Field LOCALE:Ljava/util/Locale;
       6: return
}
