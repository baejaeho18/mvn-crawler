Compiled from "ObjectParameterStrategy.java"
public abstract class com.kenai.jffi.ObjectParameterStrategy<T> {
  private final boolean isDirect;

  final int typeInfo;

  protected static final com.kenai.jffi.ObjectParameterStrategy$StrategyType DIRECT;

  protected static final com.kenai.jffi.ObjectParameterStrategy$StrategyType HEAP;

  public com.kenai.jffi.ObjectParameterStrategy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #1                  // Field com/kenai/jffi/ObjectParameterType.INVALID:Lcom/kenai/jffi/ObjectParameterType;
       5: invokespecial #2                  // Method "<init>":(ZLcom/kenai/jffi/ObjectParameterType;)V
       8: return

  public com.kenai.jffi.ObjectParameterStrategy(boolean, com.kenai.jffi.ObjectParameterType);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field isDirect:Z
       9: aload_0
      10: aload_2
      11: getfield      #5                  // Field com/kenai/jffi/ObjectParameterType.typeInfo:I
      14: putfield      #6                  // Field typeInfo:I
      17: return

  public com.kenai.jffi.ObjectParameterStrategy(com.kenai.jffi.ObjectParameterStrategy$StrategyType);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field com/kenai/jffi/ObjectParameterType.INVALID:Lcom/kenai/jffi/ObjectParameterType;
       5: invokespecial #7                  // Method "<init>":(Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;Lcom/kenai/jffi/ObjectParameterType;)V
       8: return

  public com.kenai.jffi.ObjectParameterStrategy(com.kenai.jffi.ObjectParameterStrategy$StrategyType, com.kenai.jffi.ObjectParameterType);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getstatic     #8                  // Field DIRECT:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: putfield      #4                  // Field isDirect:Z
      20: aload_0
      21: aload_2
      22: getfield      #5                  // Field com/kenai/jffi/ObjectParameterType.typeInfo:I
      25: putfield      #6                  // Field typeInfo:I
      28: return

  public final boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isDirect:Z
       4: ireturn

  final int objectInfo(com.kenai.jffi.ObjectParameterInfo);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method com/kenai/jffi/ObjectParameterInfo.asObjectInfo:()I
       4: istore_2
       5: aload_0
       6: getfield      #6                  // Field typeInfo:I
       9: ifeq          22
      12: iload_2
      13: ldc           #11                 // int 16777215
      15: iand
      16: aload_0
      17: getfield      #6                  // Field typeInfo:I
      20: ior
      21: ireturn
      22: iload_2
      23: ireturn

  public abstract long address(T);

  public abstract java.lang.Object object(T);

  public abstract int offset(T);

  public abstract int length(T);

  static {};
    Code:
       0: getstatic     #12                 // Field com/kenai/jffi/ObjectParameterStrategy$StrategyType.DIRECT:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
       3: putstatic     #8                  // Field DIRECT:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
       6: getstatic     #13                 // Field com/kenai/jffi/ObjectParameterStrategy$StrategyType.HEAP:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
       9: putstatic     #14                 // Field HEAP:Lcom/kenai/jffi/ObjectParameterStrategy$StrategyType;
      12: return
}
