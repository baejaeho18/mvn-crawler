Compiled from "HeapInvocationBuffer.java"
final class com.kenai.jffi.HeapInvocationBuffer$ArrayIO$SingletonHolder {
  private static final com.kenai.jffi.HeapInvocationBuffer$ArrayIO DEFAULT;

  private com.kenai.jffi.HeapInvocationBuffer$ArrayIO$SingletonHolder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO access$000();
    Code:
       0: getstatic     #1                  // Field DEFAULT:Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
       3: areturn

  static {};
    Code:
       0: invokestatic  #3                  // Method com/kenai/jffi/Platform.getPlatform:()Lcom/kenai/jffi/Platform;
       3: invokevirtual #4                  // Method com/kenai/jffi/Platform.addressSize:()I
       6: lookupswitch  { // 2
                    32: 32
                    64: 57
               default: 82
          }
      32: invokestatic  #5                  // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      35: getstatic     #6                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      38: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          50
      44: invokestatic  #8                  // Method com/kenai/jffi/HeapInvocationBuffer$ArrayIO.getBE32IO:()Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
      47: goto          53
      50: invokestatic  #9                  // Method com/kenai/jffi/HeapInvocationBuffer$ArrayIO.getLE32IO:()Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
      53: astore_0
      54: goto          114
      57: invokestatic  #5                  // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      60: getstatic     #6                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      63: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          75
      69: invokestatic  #10                 // Method com/kenai/jffi/HeapInvocationBuffer$ArrayIO.getBE64IO:()Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
      72: goto          78
      75: invokestatic  #11                 // Method com/kenai/jffi/HeapInvocationBuffer$ArrayIO.getLE64IO:()Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
      78: astore_0
      79: goto          114
      82: new           #12                 // class java/lang/IllegalArgumentException
      85: dup
      86: new           #13                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #15                 // String unsupported address size:
      95: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokestatic  #3                  // Method com/kenai/jffi/Platform.getPlatform:()Lcom/kenai/jffi/Platform;
     101: invokevirtual #4                  // Method com/kenai/jffi/Platform.addressSize:()I
     104: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     107: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: goto          123
     117: astore_1
     118: aload_1
     119: invokestatic  #21                 // Method com/kenai/jffi/HeapInvocationBuffer$ArrayIO.newInvalidArrayIO:(Ljava/lang/Throwable;)Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
     122: astore_0
     123: aload_0
     124: putstatic     #1                  // Field DEFAULT:Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
     127: return
    Exception table:
       from    to  target type
           0   114   117   Class java/lang/Throwable
}
