Compiled from "ClosurePool.java"
final class com.kenai.jffi.ClosurePool$Handle implements com.kenai.jffi.Closure$Handle {
  final com.kenai.jffi.ClosurePool$MagazineHolder holder;

  final com.kenai.jffi.ClosurePool$Magazine$Slot slot;

  private volatile boolean disposed;

  com.kenai.jffi.ClosurePool$Handle(com.kenai.jffi.ClosurePool$Magazine$Slot, com.kenai.jffi.ClosurePool$MagazineHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field slot:Lcom/kenai/jffi/ClosurePool$Magazine$Slot;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field holder:Lcom/kenai/jffi/ClosurePool$MagazineHolder;
      14: return

  public long getAddress();
    Code:
       0: aload_0
       1: getfield      #4                  // Field disposed:Z
       4: ifeq          17
       7: new           #5                  // class java/lang/RuntimeException
      10: dup
      11: ldc           #6                  // String trying to access disposed closure handle
      13: invokespecial #7                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field slot:Lcom/kenai/jffi/ClosurePool$Magazine$Slot;
      21: getfield      #8                  // Field com/kenai/jffi/ClosurePool$Magazine$Slot.codeAddress:J
      24: lreturn

  public void setAutoRelease(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field disposed:Z
       4: ifne          15
       7: aload_0
       8: getfield      #2                  // Field slot:Lcom/kenai/jffi/ClosurePool$Magazine$Slot;
      11: iload_1
      12: putfield      #9                  // Field com/kenai/jffi/ClosurePool$Magazine$Slot.autorelease:Z
      15: return

  public void free();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method dispose:()V
       4: return

  public synchronized void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field disposed:Z
       4: ifne          51
       7: aload_0
       8: iconst_1
       9: putfield      #4                  // Field disposed:Z
      12: aload_0
      13: getfield      #2                  // Field slot:Lcom/kenai/jffi/ClosurePool$Magazine$Slot;
      16: iconst_1
      17: putfield      #9                  // Field com/kenai/jffi/ClosurePool$Magazine$Slot.autorelease:Z
      20: aload_0
      21: getfield      #2                  // Field slot:Lcom/kenai/jffi/ClosurePool$Magazine$Slot;
      24: getfield      #11                 // Field com/kenai/jffi/ClosurePool$Magazine$Slot.proxy:Lcom/kenai/jffi/ClosurePool$Proxy;
      27: invokestatic  #12                 // Method com/kenai/jffi/ClosurePool.access$000:()Lcom/kenai/jffi/Closure;
      30: putfield      #13                 // Field com/kenai/jffi/ClosurePool$Proxy.closure:Lcom/kenai/jffi/Closure;
      33: aload_0
      34: getfield      #3                  // Field holder:Lcom/kenai/jffi/ClosurePool$MagazineHolder;
      37: getfield      #14                 // Field com/kenai/jffi/ClosurePool$MagazineHolder.pool:Lcom/kenai/jffi/ClosurePool;
      40: aload_0
      41: getfield      #2                  // Field slot:Lcom/kenai/jffi/ClosurePool$Magazine$Slot;
      44: aload_0
      45: getfield      #3                  // Field holder:Lcom/kenai/jffi/ClosurePool$MagazineHolder;
      48: invokevirtual #15                 // Method com/kenai/jffi/ClosurePool.recycle:(Lcom/kenai/jffi/ClosurePool$Magazine$Slot;Lcom/kenai/jffi/ClosurePool$MagazineHolder;)V
      51: return
}
