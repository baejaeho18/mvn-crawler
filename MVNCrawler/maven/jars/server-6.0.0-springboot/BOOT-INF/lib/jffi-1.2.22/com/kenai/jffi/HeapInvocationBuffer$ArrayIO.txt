Compiled from "HeapInvocationBuffer.java"
abstract class com.kenai.jffi.HeapInvocationBuffer$ArrayIO {
  private com.kenai.jffi.HeapInvocationBuffer$ArrayIO();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO getInstance();
    Code:
       0: invokestatic  #3                  // Method com/kenai/jffi/HeapInvocationBuffer$ArrayIO$SingletonHolder.access$000:()Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
       3: areturn

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO getBE32IO();
    Code:
       0: getstatic     #4                  // Field com/kenai/jffi/HeapInvocationBuffer$BE32ArrayIO.INSTANCE:Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
       3: areturn

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO getLE32IO();
    Code:
       0: getstatic     #5                  // Field com/kenai/jffi/HeapInvocationBuffer$LE32ArrayIO.INSTANCE:Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
       3: areturn

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO getLE64IO();
    Code:
       0: getstatic     #6                  // Field com/kenai/jffi/HeapInvocationBuffer$LE64ArrayIO.INSTANCE:Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
       3: areturn

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO getBE64IO();
    Code:
       0: getstatic     #7                  // Field com/kenai/jffi/HeapInvocationBuffer$BE64ArrayIO.INSTANCE:Lcom/kenai/jffi/HeapInvocationBuffer$ArrayIO;
       3: areturn

  static com.kenai.jffi.HeapInvocationBuffer$ArrayIO newInvalidArrayIO(java.lang.Throwable);
    Code:
       0: new           #8                  // class com/kenai/jffi/HeapInvocationBuffer$InvalidArrayIO
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method com/kenai/jffi/HeapInvocationBuffer$InvalidArrayIO."<init>":(Ljava/lang/Throwable;)V
       8: areturn

  public abstract void putByte(byte[], int, int);

  public abstract void putShort(byte[], int, int);

  public abstract void putInt(byte[], int, int);

  public abstract void putLong(byte[], int, long);

  public final void putFloat(byte[], int, float);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: fload_3
       4: invokestatic  #10                 // Method java/lang/Float.floatToRawIntBits:(F)I
       7: invokevirtual #11                 // Method putInt:([BII)V
      10: return

  public final void putDouble(byte[], int, double);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: dload_3
       4: invokestatic  #12                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       7: invokevirtual #13                 // Method putLong:([BIJ)V
      10: return

  public abstract void putAddress(byte[], int, long);

  com.kenai.jffi.HeapInvocationBuffer$ArrayIO(com.kenai.jffi.HeapInvocationBuffer$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
