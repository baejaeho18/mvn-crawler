Compiled from "ObjectParameterType.java"
public final class com.kenai.jffi.ObjectParameterType {
  final int typeInfo;

  static final com.kenai.jffi.ObjectParameterType INVALID;

  static final com.kenai.jffi.ObjectParameterType NONE;

  public static final com.kenai.jffi.ObjectParameterType$ObjectType ARRAY;

  public static final com.kenai.jffi.ObjectParameterType$ObjectType BUFFER;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType BYTE;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType SHORT;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType INT;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType LONG;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType FLOAT;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType DOUBLE;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType BOOLEAN;

  public static final com.kenai.jffi.ObjectParameterType$ComponentType CHAR;

  public static com.kenai.jffi.ObjectParameterType create(com.kenai.jffi.ObjectParameterType$ObjectType, com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.ARRAY:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
       4: if_acmpne     16
       7: getstatic     #2                  // Field com/kenai/jffi/ObjectParameterType$TypeCache.arrayTypeCache:[Lcom/kenai/jffi/ObjectParameterType;
      10: aload_1
      11: invokevirtual #3                  // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
      14: aaload
      15: areturn
      16: aload_0
      17: getstatic     #4                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.BUFFER:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
      20: if_acmpne     32
      23: getstatic     #5                  // Field com/kenai/jffi/ObjectParameterType$TypeCache.bufferTypeCache:[Lcom/kenai/jffi/ObjectParameterType;
      26: aload_1
      27: invokevirtual #3                  // Method com/kenai/jffi/ObjectParameterType$ComponentType.ordinal:()I
      30: aaload
      31: areturn
      32: new           #6                  // class com/kenai/jffi/ObjectParameterType
      35: dup
      36: aload_0
      37: getfield      #7                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.value:I
      40: aload_1
      41: getfield      #8                  // Field com/kenai/jffi/ObjectParameterType$ComponentType.value:I
      44: ior
      45: invokespecial #9                  // Method "<init>":(I)V
      48: areturn

  com.kenai.jffi.ObjectParameterType(int);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #11                 // Field typeInfo:I
       9: return

  com.kenai.jffi.ObjectParameterType(com.kenai.jffi.ObjectParameterType$ObjectType, com.kenai.jffi.ObjectParameterType$ComponentType);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #7                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.value:I
       9: aload_2
      10: getfield      #8                  // Field com/kenai/jffi/ObjectParameterType$ComponentType.value:I
      13: ior
      14: putfield      #11                 // Field typeInfo:I
      17: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     26
       5: aload_1
       6: instanceof    #6                  // class com/kenai/jffi/ObjectParameterType
       9: ifeq          30
      12: aload_0
      13: getfield      #11                 // Field typeInfo:I
      16: aload_1
      17: checkcast     #6                  // class com/kenai/jffi/ObjectParameterType
      20: getfield      #11                 // Field typeInfo:I
      23: if_icmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field typeInfo:I
       4: ireturn

  static {};
    Code:
       0: new           #6                  // class com/kenai/jffi/ObjectParameterType
       3: dup
       4: iconst_0
       5: invokespecial #9                  // Method "<init>":(I)V
       8: putstatic     #12                 // Field INVALID:Lcom/kenai/jffi/ObjectParameterType;
      11: new           #6                  // class com/kenai/jffi/ObjectParameterType
      14: dup
      15: iconst_0
      16: invokespecial #9                  // Method "<init>":(I)V
      19: putstatic     #13                 // Field NONE:Lcom/kenai/jffi/ObjectParameterType;
      22: getstatic     #1                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.ARRAY:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
      25: putstatic     #14                 // Field ARRAY:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
      28: getstatic     #4                  // Field com/kenai/jffi/ObjectParameterType$ObjectType.BUFFER:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
      31: putstatic     #15                 // Field BUFFER:Lcom/kenai/jffi/ObjectParameterType$ObjectType;
      34: getstatic     #16                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.BYTE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      37: putstatic     #17                 // Field BYTE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      40: getstatic     #18                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.SHORT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      43: putstatic     #19                 // Field SHORT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      46: getstatic     #20                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.INT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      49: putstatic     #21                 // Field INT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      52: getstatic     #22                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.LONG:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      55: putstatic     #23                 // Field LONG:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      58: getstatic     #24                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.FLOAT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      61: putstatic     #25                 // Field FLOAT:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      64: getstatic     #26                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.DOUBLE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      67: putstatic     #27                 // Field DOUBLE:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      70: getstatic     #28                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.BOOLEAN:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      73: putstatic     #29                 // Field BOOLEAN:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      76: getstatic     #30                 // Field com/kenai/jffi/ObjectParameterType$ComponentType.CHAR:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      79: putstatic     #31                 // Field CHAR:Lcom/kenai/jffi/ObjectParameterType$ComponentType;
      82: return
}
