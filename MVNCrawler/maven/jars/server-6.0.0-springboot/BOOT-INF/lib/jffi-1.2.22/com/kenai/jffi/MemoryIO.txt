Compiled from "MemoryIO.java"
public abstract class com.kenai.jffi.MemoryIO {
  final com.kenai.jffi.Foreign foreign;

  private static final long ADDRESS_MASK;

  public static com.kenai.jffi.MemoryIO getInstance();
    Code:
       0: invokestatic  #5                  // Method com/kenai/jffi/MemoryIO$SingletonHolder.access$200:()Lcom/kenai/jffi/MemoryIO;
       3: areturn

  public static com.kenai.jffi.MemoryIO getCheckedInstance();
    Code:
       0: invokestatic  #6                  // Method com/kenai/jffi/MemoryIO$CheckedMemorySingletonHolder.access$300:()Lcom/kenai/jffi/MemoryIO;
       3: areturn

  private com.kenai.jffi.MemoryIO();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #8                  // Method com/kenai/jffi/Foreign.getInstance:()Lcom/kenai/jffi/Foreign;
       8: putfield      #9                  // Field foreign:Lcom/kenai/jffi/Foreign;
      11: return

  private static com.kenai.jffi.MemoryIO newMemoryIO();
    Code:
       0: ldc           #10                 // String jffi.memory.checked
       2: invokestatic  #11                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: ifeq          12
       8: invokestatic  #3                  // Method newNativeCheckedImpl:()Lcom/kenai/jffi/MemoryIO;
      11: areturn
      12: ldc           #12                 // String jffi.unsafe.disabled
      14: invokestatic  #11                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      17: ifne          32
      20: invokestatic  #13                 // Method isUnsafeAvailable:()Z
      23: ifeq          32
      26: invokestatic  #14                 // Method newUnsafeImpl:()Lcom/kenai/jffi/MemoryIO;
      29: goto          35
      32: invokestatic  #15                 // Method newNativeImpl:()Lcom/kenai/jffi/MemoryIO;
      35: areturn
      36: astore_0
      37: invokestatic  #15                 // Method newNativeImpl:()Lcom/kenai/jffi/MemoryIO;
      40: areturn
    Exception table:
       from    to  target type
           0    11    36   Class java/lang/Throwable
          12    35    36   Class java/lang/Throwable

  private static com.kenai.jffi.MemoryIO newNativeImpl();
    Code:
       0: invokestatic  #17                 // Method com/kenai/jffi/Platform.getPlatform:()Lcom/kenai/jffi/Platform;
       3: invokevirtual #18                 // Method com/kenai/jffi/Platform.addressSize:()I
       6: bipush        32
       8: if_icmpne     17
      11: invokestatic  #19                 // Method newNativeImpl32:()Lcom/kenai/jffi/MemoryIO;
      14: goto          20
      17: invokestatic  #20                 // Method newNativeImpl64:()Lcom/kenai/jffi/MemoryIO;
      20: areturn

  private static com.kenai.jffi.MemoryIO newNativeCheckedImpl();
    Code:
       0: invokestatic  #21                 // Method com/kenai/jffi/Foreign.isMemoryProtectionEnabled:()Z
       3: ifeq          17
       6: new           #22                 // class com/kenai/jffi/MemoryIO$CheckedNativeImpl
       9: dup
      10: aconst_null
      11: invokespecial #23                 // Method com/kenai/jffi/MemoryIO$CheckedNativeImpl."<init>":(Lcom/kenai/jffi/MemoryIO$1;)V
      14: goto          20
      17: invokestatic  #15                 // Method newNativeImpl:()Lcom/kenai/jffi/MemoryIO;
      20: areturn

  private static com.kenai.jffi.MemoryIO newNativeImpl32();
    Code:
       0: new           #24                 // class com/kenai/jffi/MemoryIO$NativeImpl32
       3: dup
       4: aconst_null
       5: invokespecial #25                 // Method com/kenai/jffi/MemoryIO$NativeImpl32."<init>":(Lcom/kenai/jffi/MemoryIO$1;)V
       8: areturn

  private static com.kenai.jffi.MemoryIO newNativeImpl64();
    Code:
       0: new           #26                 // class com/kenai/jffi/MemoryIO$NativeImpl64
       3: dup
       4: aconst_null
       5: invokespecial #27                 // Method com/kenai/jffi/MemoryIO$NativeImpl64."<init>":(Lcom/kenai/jffi/MemoryIO$1;)V
       8: areturn

  private static com.kenai.jffi.MemoryIO newUnsafeImpl();
    Code:
       0: invokestatic  #17                 // Method com/kenai/jffi/Platform.getPlatform:()Lcom/kenai/jffi/Platform;
       3: invokevirtual #18                 // Method com/kenai/jffi/Platform.addressSize:()I
       6: bipush        32
       8: if_icmpne     17
      11: invokestatic  #28                 // Method newUnsafeImpl32:()Lcom/kenai/jffi/MemoryIO;
      14: goto          20
      17: invokestatic  #29                 // Method newUnsafeImpl64:()Lcom/kenai/jffi/MemoryIO;
      20: areturn

  private static com.kenai.jffi.MemoryIO newUnsafeImpl32();
    Code:
       0: new           #30                 // class com/kenai/jffi/MemoryIO$UnsafeImpl32
       3: dup
       4: aconst_null
       5: invokespecial #31                 // Method com/kenai/jffi/MemoryIO$UnsafeImpl32."<init>":(Lcom/kenai/jffi/MemoryIO$1;)V
       8: areturn

  private static com.kenai.jffi.MemoryIO newUnsafeImpl64();
    Code:
       0: new           #32                 // class com/kenai/jffi/MemoryIO$UnsafeImpl64
       3: dup
       4: aconst_null
       5: invokespecial #33                 // Method com/kenai/jffi/MemoryIO$UnsafeImpl64."<init>":(Lcom/kenai/jffi/MemoryIO$1;)V
       8: areturn

  public abstract byte getByte(long);

  public abstract short getShort(long);

  public abstract int getInt(long);

  public abstract long getLong(long);

  public abstract float getFloat(long);

  public abstract double getDouble(long);

  public abstract long getAddress(long);

  public abstract void putByte(long, byte);

  public abstract void putShort(long, short);

  public abstract void putInt(long, int);

  public abstract void putLong(long, long);

  public abstract void putFloat(long, float);

  public abstract void putDouble(long, double);

  public abstract void putAddress(long, long);

  public final void copyMemory(long, long, long);
    Code:
       0: lload_3
       1: lload         5
       3: ladd
       4: lload_1
       5: lcmp
       6: ifle          18
       9: lload_1
      10: lload         5
      12: ladd
      13: lload_3
      14: lcmp
      15: ifgt          29
      18: aload_0
      19: lload_1
      20: lload_3
      21: lload         5
      23: invokevirtual #34                 // Method _copyMemory:(JJJ)V
      26: goto          37
      29: aload_0
      30: lload_3
      31: lload_1
      32: lload         5
      34: invokevirtual #35                 // Method memmove:(JJJ)V
      37: return

  abstract void _copyMemory(long, long, long);

  public abstract void setMemory(long, long, byte);

  public abstract void memcpy(long, long, long);

  public abstract void memmove(long, long, long);

  public final void memset(long, int, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload         4
       4: iload_3
       5: i2b
       6: invokevirtual #36                 // Method setMemory:(JJB)V
       9: return

  public abstract long memchr(long, int, long);

  public abstract void putByteArray(long, byte[], int, int);

  public abstract void getByteArray(long, byte[], int, int);

  public abstract void putCharArray(long, char[], int, int);

  public abstract void getCharArray(long, char[], int, int);

  public abstract void putShortArray(long, short[], int, int);

  public abstract void getShortArray(long, short[], int, int);

  public abstract void putIntArray(long, int[], int, int);

  public abstract void getIntArray(long, int[], int, int);

  public abstract void putLongArray(long, long[], int, int);

  public abstract void getLongArray(long, long[], int, int);

  public abstract void putFloatArray(long, float[], int, int);

  public abstract void getFloatArray(long, float[], int, int);

  public abstract void putDoubleArray(long, double[], int, int);

  public abstract void getDoubleArray(long, double[], int, int);

  public final long allocateMemory(long, boolean);
    Code:
       0: lload_1
       1: iload_3
       2: invokestatic  #37                 // Method com/kenai/jffi/Foreign.allocateMemory:(JZ)J
       5: getstatic     #1                  // Field ADDRESS_MASK:J
       8: land
       9: lreturn

  public final void freeMemory(long);
    Code:
       0: lload_1
       1: invokestatic  #38                 // Method com/kenai/jffi/Foreign.freeMemory:(J)V
       4: return

  public abstract long getStringLength(long);

  public abstract byte[] getZeroTerminatedByteArray(long);

  public abstract byte[] getZeroTerminatedByteArray(long, int);

  public final byte[] getZeroTerminatedByteArray(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: l2i
       4: invokevirtual #39                 // Method getZeroTerminatedByteArray:(JI)[B
       7: areturn

  public abstract void putZeroTerminatedByteArray(long, byte[], int, int);

  public final long indexOf(long, byte);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: ldc2_w        #41                 // long 2147483647l
       6: invokevirtual #43                 // Method memchr:(JIJ)J
       9: lstore        4
      11: lload         4
      13: lconst_0
      14: lcmp
      15: ifeq          25
      18: lload         4
      20: lload_1
      21: lsub
      22: goto          28
      25: ldc2_w        #44                 // long -1l
      28: lreturn

  public final long indexOf(long, byte, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: i2l
       6: invokevirtual #43                 // Method memchr:(JIJ)J
       9: lstore        5
      11: lload         5
      13: lconst_0
      14: lcmp
      15: ifeq          25
      18: lload         5
      20: lload_1
      21: lsub
      22: goto          28
      25: ldc2_w        #44                 // long -1l
      28: lreturn

  public final java.nio.ByteBuffer newDirectByteBuffer(long, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field foreign:Lcom/kenai/jffi/Foreign;
       4: lload_1
       5: iload_3
       6: invokevirtual #46                 // Method com/kenai/jffi/Foreign.newDirectByteBuffer:(JI)Ljava/nio/ByteBuffer;
       9: areturn

  public final long getDirectBufferAddress(java.nio.Buffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field foreign:Lcom/kenai/jffi/Foreign;
       4: aload_1
       5: invokevirtual #47                 // Method com/kenai/jffi/Foreign.getDirectBufferAddress:(Ljava/nio/Buffer;)J
       8: lreturn

  private static void verifyAccessor(java.lang.Class, java.lang.Class) throws java.lang.NoSuchMethodException;
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       4: astore_2
       5: new           #49                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      12: aload_2
      13: iconst_0
      14: iconst_1
      15: invokevirtual #51                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      18: invokevirtual #52                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      21: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_2
      25: iconst_1
      26: invokevirtual #54                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      29: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore_3
      36: aload_0
      37: new           #49                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #56                 // String get
      46: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_3
      50: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: iconst_1
      57: anewarray     #57                 // class java/lang/Class
      60: dup
      61: iconst_0
      62: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      65: aastore
      66: invokevirtual #59                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      69: astore        4
      71: aload         4
      73: invokevirtual #60                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      76: aload_1
      77: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      80: ifne          114
      83: new           #62                 // class java/lang/NoSuchMethodException
      86: dup
      87: new           #49                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #63                 // String Incorrect return type for
      96: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         4
     101: invokevirtual #64                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     104: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #65                 // Method java/lang/NoSuchMethodException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload_0
     115: new           #49                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #66                 // String put
     124: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_3
     128: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: iconst_2
     135: anewarray     #57                 // class java/lang/Class
     138: dup
     139: iconst_0
     140: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     143: aastore
     144: dup
     145: iconst_1
     146: aload_1
     147: aastore
     148: invokevirtual #59                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     151: pop
     152: return

  static boolean isUnsafeAvailable();
    Code:
       0: ldc           #67                 // String sun.misc.Unsafe
       2: invokestatic  #68                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: astore_0
       6: bipush        6
       8: anewarray     #57                 // class java/lang/Class
      11: dup
      12: iconst_0
      13: getstatic     #69                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      16: aastore
      17: dup
      18: iconst_1
      19: getstatic     #70                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      22: aastore
      23: dup
      24: iconst_2
      25: getstatic     #71                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      28: aastore
      29: dup
      30: iconst_3
      31: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      34: aastore
      35: dup
      36: iconst_4
      37: getstatic     #72                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      40: aastore
      41: dup
      42: iconst_5
      43: getstatic     #73                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      46: aastore
      47: astore_1
      48: aload_1
      49: astore_2
      50: aload_2
      51: arraylength
      52: istore_3
      53: iconst_0
      54: istore        4
      56: iload         4
      58: iload_3
      59: if_icmpge     80
      62: aload_2
      63: iload         4
      65: aaload
      66: astore        5
      68: aload_0
      69: aload         5
      71: invokestatic  #74                 // Method verifyAccessor:(Ljava/lang/Class;Ljava/lang/Class;)V
      74: iinc          4, 1
      77: goto          56
      80: aload_0
      81: ldc           #75                 // String getAddress
      83: iconst_1
      84: anewarray     #57                 // class java/lang/Class
      87: dup
      88: iconst_0
      89: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      92: aastore
      93: invokevirtual #59                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      96: pop
      97: aload_0
      98: ldc           #76                 // String putAddress
     100: iconst_2
     101: anewarray     #57                 // class java/lang/Class
     104: dup
     105: iconst_0
     106: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     109: aastore
     110: dup
     111: iconst_1
     112: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     115: aastore
     116: invokevirtual #59                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     119: pop
     120: aload_0
     121: ldc           #77                 // String allocateMemory
     123: iconst_1
     124: anewarray     #57                 // class java/lang/Class
     127: dup
     128: iconst_0
     129: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     132: aastore
     133: invokevirtual #59                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     136: pop
     137: aload_0
     138: ldc           #78                 // String freeMemory
     140: iconst_1
     141: anewarray     #57                 // class java/lang/Class
     144: dup
     145: iconst_0
     146: getstatic     #58                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     149: aastore
     150: invokevirtual #59                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     153: pop
     154: iconst_1
     155: ireturn
     156: astore_0
     157: iconst_0
     158: ireturn
    Exception table:
       from    to  target type
           0   155   156   Class java/lang/Throwable

  static com.kenai.jffi.MemoryIO access$000();
    Code:
       0: invokestatic  #4                  // Method newMemoryIO:()Lcom/kenai/jffi/MemoryIO;
       3: areturn

  static com.kenai.jffi.MemoryIO access$100();
    Code:
       0: invokestatic  #3                  // Method newNativeCheckedImpl:()Lcom/kenai/jffi/MemoryIO;
       3: areturn

  com.kenai.jffi.MemoryIO(com.kenai.jffi.MemoryIO$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return

  static long access$1100();
    Code:
       0: getstatic     #1                  // Field ADDRESS_MASK:J
       3: lreturn

  static {};
    Code:
       0: invokestatic  #17                 // Method com/kenai/jffi/Platform.getPlatform:()Lcom/kenai/jffi/Platform;
       3: invokevirtual #79                 // Method com/kenai/jffi/Platform.addressMask:()J
       6: putstatic     #1                  // Field ADDRESS_MASK:J
       9: return
}
