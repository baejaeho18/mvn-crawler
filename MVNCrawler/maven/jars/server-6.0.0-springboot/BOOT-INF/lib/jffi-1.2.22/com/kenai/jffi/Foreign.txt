Compiled from "Foreign.java"
final class com.kenai.jffi.Foreign {
  public static final int VERSION_MAJOR;

  public static final int VERSION_MINOR;

  public static final int VERSION_MICRO;

  public static final int TYPE_VOID;

  public static final int TYPE_FLOAT;

  public static final int TYPE_DOUBLE;

  public static final int TYPE_LONGDOUBLE;

  public static final int TYPE_UINT8;

  public static final int TYPE_SINT8;

  public static final int TYPE_UINT16;

  public static final int TYPE_SINT16;

  public static final int TYPE_UINT32;

  public static final int TYPE_SINT32;

  public static final int TYPE_UINT64;

  public static final int TYPE_SINT64;

  public static final int TYPE_STRUCT;

  public static final int TYPE_POINTER;

  public static final int TYPE_UCHAR;

  public static final int TYPE_SCHAR;

  public static final int TYPE_USHORT;

  public static final int TYPE_SSHORT;

  public static final int TYPE_UINT;

  public static final int TYPE_SINT;

  public static final int TYPE_ULONG;

  public static final int TYPE_SLONG;

  public static final int RTLD_LAZY;

  public static final int RTLD_NOW;

  public static final int RTLD_LOCAL;

  public static final int RTLD_GLOBAL;

  public static final int PROT_READ;

  public static final int PROT_WRITE;

  public static final int PROT_EXEC;

  public static final int PROT_NONE;

  public static final int MAP_SHARED;

  public static final int MAP_PRIVATE;

  public static final int MAP_FIXED;

  public static final int MAP_NORESERVE;

  public static final int MAP_ANON;

  public static final int MAP_ALIGN;

  public static final int MAP_TEXT;

  public static final int PAGE_NOACCESS;

  public static final int PAGE_READONLY;

  public static final int PAGE_READWRITE;

  public static final int PAGE_WRITECOPY;

  public static final int PAGE_EXECUTE;

  public static final int PAGE_EXECUTE_READ;

  public static final int PAGE_EXECUTE_READWRITE;

  public static final int PAGE_EXECUTE_WRITECOPY;

  public static final int MEM_COMMIT;

  public static final int MEM_RESERVE;

  public static final int MEM_DECOMMIT;

  public static final int MEM_RELEASE;

  public static final int MEM_FREE;

  public static final int MEM_PRIVATE;

  public static final int MEM_MAPPED;

  public static final int MEM_RESET;

  public static final int MEM_TOP_DOWN;

  public static final int MEM_PHYSICAL;

  public static final int MEM_4MB_PAGES;

  public static final int JNI_OK;

  public static final int JNI_ERR;

  public static final int JNI_EDETACHED;

  public static final int JNI_EVERSION;

  public static final int JNI_ENOMEM;

  public static final int JNI_EEXIST;

  public static final int JNI_EINVAL;

  public static final int F_DEFAULT;

  public static final int F_STDCALL;

  public static final int F_NOERRNO;

  public static final int F_PROTECT;

  private static java.lang.UnsatisfiedLinkError newLoadError(java.lang.Throwable);
    Code:
       0: new           #4                  // class java/lang/UnsatisfiedLinkError
       3: dup
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       8: invokespecial #6                  // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #7                  // Method java/lang/UnsatisfiedLinkError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: pop
      18: aload_1
      19: areturn

  public static com.kenai.jffi.Foreign getInstance();
    Code:
       0: getstatic     #8                  // Field com/kenai/jffi/Foreign$InstanceHolder.INSTANCE:Lcom/kenai/jffi/Foreign$InstanceHolder;
       3: invokevirtual #9                  // Method com/kenai/jffi/Foreign$InstanceHolder.getForeign:()Lcom/kenai/jffi/Foreign;
       6: areturn

  private com.kenai.jffi.Foreign();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: return

  private static int getVersionField(java.lang.String);
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // class com/kenai/jffi/Foreign
       9: invokevirtual #14                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      12: invokevirtual #15                 // Method java/lang/Package.getName:()Ljava/lang/String;
      15: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #17                 // String .Version
      20: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokestatic  #19                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      29: astore_1
      30: aload_1
      31: aload_0
      32: invokevirtual #20                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      35: aload_1
      36: invokevirtual #21                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #22                 // class java/lang/Integer
      42: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      45: ireturn
      46: astore_1
      47: new           #25                 // class java/lang/RuntimeException
      50: dup
      51: aload_1
      52: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      55: athrow
    Exception table:
       from    to  target type
           0    45    46   Class java/lang/Throwable

  final native int getVersion();

  private native void init();

  private static native boolean isFaultProtectionEnabled();

  static boolean isMemoryProtectionEnabled();
    Code:
       0: invokestatic  #27                 // Method isFaultProtectionEnabled:()Z
       3: ireturn
       4: astore_0
       5: iconst_0
       6: ireturn
    Exception table:
       from    to  target type
           0     3     4   Class java/lang/UnsatisfiedLinkError

  static native long dlopen(java.lang.String, int);

  static native void dlclose(long);

  static native long dlsym(long, java.lang.String);

  static native java.lang.String dlerror();

  static native long allocateMemory(long, boolean);

  static native void freeMemory(long);

  static native long pageSize();

  static native long mmap(long, long, int, int, int, long);

  static native int munmap(long, long);

  static native int mprotect(long, long, int);

  static native long VirtualAlloc(long, int, int, int);

  static native boolean VirtualFree(long, int, int);

  static native boolean VirtualProtect(long, int, int);

  final native long newCallContext(long, long[], int);

  final native void freeCallContext(long);

  final native int getCallContextRawParameterSize(long);

  final native boolean isRawParameterPackingEnabled();

  static native int getLastError();

  static native void setLastError(int);

  final native long newClosureMagazine(long, java.lang.reflect.Method, boolean);

  final native void freeClosureMagazine(long);

  final native long closureMagazineGet(long, java.lang.Object);

  final native long lookupBuiltinType(int);

  final native int getTypeSize(long);

  final native int getTypeAlign(long);

  final native int getTypeType(long);

  final native long newStruct(long[], boolean);

  final native long newArray(long, int);

  final native void freeAggregate(long);

  static native int invokeI0(long, long);

  static native int invokeI0NoErrno(long, long);

  static native int invokeI1(long, long, int);

  static native int invokeI1NoErrno(long, long, int);

  static native int invokeI2(long, long, int, int);

  static native int invokeI2NoErrno(long, long, int, int);

  static native int invokeI3(long, long, int, int, int);

  static native int invokeI4(long, long, int, int, int, int);

  static native int invokeI5(long, long, int, int, int, int, int);

  static native int invokeI6(long, long, int, int, int, int, int, int);

  static native int invokeI3NoErrno(long, long, int, int, int);

  static native int invokeI4NoErrno(long, long, int, int, int, int);

  static native int invokeI5NoErrno(long, long, int, int, int, int, int);

  static native int invokeI6NoErrno(long, long, int, int, int, int, int, int);

  static native long invokeL0(long, long);

  static native long invokeL1(long, long, long);

  static native long invokeL2(long, long, long, long);

  static native long invokeL3(long, long, long, long, long);

  static native long invokeL4(long, long, long, long, long, long);

  static native long invokeL5(long, long, long, long, long, long, long);

  static native long invokeL6(long, long, long, long, long, long, long, long);

  static native long invokeL0NoErrno(long, long);

  static native long invokeL1NoErrno(long, long, long);

  static native long invokeL2NoErrno(long, long, long, long);

  static native long invokeL3NoErrno(long, long, long, long, long);

  static native long invokeL4NoErrno(long, long, long, long, long, long);

  static native long invokeL5NoErrno(long, long, long, long, long, long, long);

  static native long invokeL6NoErrno(long, long, long, long, long, long, long, long);

  static native long invokeN0(long, long);

  static native long invokeN1(long, long, long);

  static native long invokeN2(long, long, long, long);

  static native long invokeN3(long, long, long, long, long);

  static native long invokeN4(long, long, long, long, long, long);

  static native long invokeN5(long, long, long, long, long, long, long);

  static native long invokeN6(long, long, long, long, long, long, long, long);

  static native long invokeN1O1(long, long, long, java.lang.Object, int, int, int);

  static native long invokeN2O1(long, long, long, long, java.lang.Object, int, int, int);

  static native long invokeN2O2(long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN3O1(long, long, long, long, long, java.lang.Object, int, int, int);

  static native long invokeN3O2(long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN3O3(long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN4O1(long, long, long, long, long, long, java.lang.Object, int, int, int);

  static native long invokeN4O2(long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN4O3(long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN4O4(long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN5O1(long, long, long, long, long, long, long, java.lang.Object, int, int, int);

  static native long invokeN5O2(long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN5O3(long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN5O4(long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN5O5(long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN6O1(long, long, long, long, long, long, long, long, java.lang.Object, int, int, int);

  static native long invokeN6O2(long, long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN6O3(long, long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN6O4(long, long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN6O5(long, long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeN6O6(long, long, long, long, long, long, long, long, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native int invokeArrayReturnInt(long, long, byte[]);

  static native long invokeArrayReturnLong(long, long, byte[]);

  static native float invokeArrayReturnFloat(long, long, byte[]);

  static native double invokeArrayReturnDouble(long, long, byte[]);

  static native void invokeArrayReturnStruct(long, long, byte[], byte[], int);

  static native java.lang.Object invokeArrayWithObjectsReturnObject(long, long, byte[], int, int[], java.lang.Object[]);

  static native int invokeArrayWithObjectsInt32(long, long, byte[], int, int[], java.lang.Object[]);

  static native long invokeArrayWithObjectsInt64(long, long, byte[], int, int[], java.lang.Object[]);

  static native float invokeArrayWithObjectsFloat(long, long, byte[], int, int[], java.lang.Object[]);

  static native double invokeArrayWithObjectsDouble(long, long, byte[], int, int[], java.lang.Object[]);

  static native void invokeArrayWithObjectsReturnStruct(long, long, byte[], int, int[], java.lang.Object[], byte[], int);

  static native int invokeArrayO1Int32(long, long, byte[], java.lang.Object, int, int, int);

  static native int invokeArrayO2Int32(long, long, byte[], java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native long invokeArrayO1Int64(long, long, byte[], java.lang.Object, int, int, int);

  static native long invokeArrayO2Int64(long, long, byte[], java.lang.Object, int, int, int, java.lang.Object, int, int, int);

  static native void invokePointerParameterArray(long, long, long, long[]);

  static native byte getByte(long);

  static native short getShort(long);

  static native int getInt(long);

  static native long getLong(long);

  static native float getFloat(long);

  static native double getDouble(long);

  static native long getAddress(long);

  static native void putByte(long, byte);

  static native void putShort(long, short);

  static native void putInt(long, int);

  static native void putLong(long, long);

  static native void putFloat(long, float);

  static native void putDouble(long, double);

  static native void putAddress(long, long);

  static native void setMemory(long, long, byte);

  static native void copyMemory(long, long, long);

  static native void putByteArray(long, byte[], int, int);

  static native void getByteArray(long, byte[], int, int);

  static native void putCharArray(long, char[], int, int);

  static native void getCharArray(long, char[], int, int);

  static native void putShortArray(long, short[], int, int);

  static native void getShortArray(long, short[], int, int);

  static native void putIntArray(long, int[], int, int);

  static native void getIntArray(long, int[], int, int);

  static native void putLongArray(long, long[], int, int);

  static native void getLongArray(long, long[], int, int);

  static native void putFloatArray(long, float[], int, int);

  static native void getFloatArray(long, float[], int, int);

  static native void putDoubleArray(long, double[], int, int);

  static native void getDoubleArray(long, double[], int, int);

  static native long memchr(long, int, long);

  static native void memmove(long, long, long);

  static native void memcpy(long, long, long);

  static native long strlen(long);

  static native byte[] getZeroTerminatedByteArray(long);

  static native byte[] getZeroTerminatedByteArray(long, int);

  static native void putZeroTerminatedByteArray(long, byte[], int, int);

  static native byte getByteChecked(long);

  static native short getShortChecked(long);

  static native int getIntChecked(long);

  static native long getLongChecked(long);

  static native float getFloatChecked(long);

  static native double getDoubleChecked(long);

  static native long getAddressChecked(long);

  static native void putByteChecked(long, byte);

  static native void putShortChecked(long, short);

  static native void putIntChecked(long, int);

  static native void putLongChecked(long, long);

  static native void putFloatChecked(long, float);

  static native void putDoubleChecked(long, double);

  static native void putAddressChecked(long, long);

  static native void setMemoryChecked(long, long, byte);

  static native void copyMemoryChecked(long, long, long);

  static native void putByteArrayChecked(long, byte[], int, int);

  static native void getByteArrayChecked(long, byte[], int, int);

  static native void putCharArrayChecked(long, char[], int, int);

  static native void getCharArrayChecked(long, char[], int, int);

  static native void putShortArrayChecked(long, short[], int, int);

  static native void getShortArrayChecked(long, short[], int, int);

  static native void putIntArrayChecked(long, int[], int, int);

  static native void getIntArrayChecked(long, int[], int, int);

  static native void putLongArrayChecked(long, long[], int, int);

  static native void getLongArrayChecked(long, long[], int, int);

  static native void putFloatArrayChecked(long, float[], int, int);

  static native void getFloatArrayChecked(long, float[], int, int);

  static native void putDoubleArrayChecked(long, double[], int, int);

  static native void getDoubleArrayChecked(long, double[], int, int);

  static native long memchrChecked(long, int, long);

  static native void memmoveChecked(long, long, long);

  static native void memcpyChecked(long, long, long);

  static native long strlenChecked(long);

  static native byte[] getZeroTerminatedByteArrayChecked(long);

  static native byte[] getZeroTerminatedByteArrayChecked(long, int);

  static native void putZeroTerminatedByteArrayChecked(long, byte[], int, int);

  final native java.nio.ByteBuffer newDirectByteBuffer(long, int);

  final native long getDirectBufferAddress(java.nio.Buffer);

  final native void longDoubleFromDouble(double, byte[], int, int);

  final native double longDoubleToDouble(byte[], int, int);

  final native void longDoubleFromString(java.lang.String, byte[], int, int);

  final native java.lang.String longDoubleToString(byte[], int, int);

  final native java.lang.String longDoubleToEngineeringString(byte[], int, int);

  final native java.lang.String longDoubleToPlainString(byte[], int, int);

  final native long newNativeMethod(java.lang.String, java.lang.String, long);

  final native void freeNativeMethod(long);

  final native long compileNativeMethods(long[]);

  final native void freeCompiledMethods(long);

  final native boolean registerNativeMethods(java.lang.Class, long);

  final native void unregisterNativeMethods(java.lang.Class);

  final native long getSaveErrnoFunction();

  final native void setCallContextErrorFunction(long, long);

  final native long getSaveErrnoCtxFunction();

  final native int getJNIVersion();

  final native long getJavaVM();

  final native void fatalError(java.lang.String);

  final native java.lang.Class defineClass(java.lang.String, java.lang.Object, byte[], int, int);

  final native java.lang.Class defineClass(java.lang.String, java.lang.Object, java.nio.ByteBuffer);

  final native java.lang.Object allocObject(java.lang.Class);

  final native int registerNatives(java.lang.Class, long, int);

  final native int unregisterNatives(java.lang.Class);

  final native java.lang.String getArch();

  com.kenai.jffi.Foreign(com.kenai.jffi.Foreign$1);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: return

  static void access$100(com.kenai.jffi.Foreign);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method init:()V
       4: return

  static java.lang.UnsatisfiedLinkError access$300(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newLoadError:(Ljava/lang/Throwable;)Ljava/lang/UnsatisfiedLinkError;
       4: areturn

  static {};
    Code:
       0: ldc           #28                 // String MAJOR
       2: invokestatic  #29                 // Method getVersionField:(Ljava/lang/String;)I
       5: putstatic     #30                 // Field VERSION_MAJOR:I
       8: ldc           #31                 // String MINOR
      10: invokestatic  #29                 // Method getVersionField:(Ljava/lang/String;)I
      13: putstatic     #32                 // Field VERSION_MINOR:I
      16: ldc           #33                 // String MICRO
      18: invokestatic  #29                 // Method getVersionField:(Ljava/lang/String;)I
      21: putstatic     #34                 // Field VERSION_MICRO:I
      24: return
}
