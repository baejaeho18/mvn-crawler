Compiled from "HeapInvocationBuffer.java"
abstract class com.kenai.jffi.HeapInvocationBuffer$Encoder {
  com.kenai.jffi.HeapInvocationBuffer$Encoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static com.kenai.jffi.HeapInvocationBuffer$Encoder getInstance();
    Code:
       0: getstatic     #2                  // Field com/kenai/jffi/HeapInvocationBuffer$Encoder$SingletonHolder.INSTANCE:Lcom/kenai/jffi/HeapInvocationBuffer$Encoder;
       3: areturn

  public abstract int getBufferSize(com.kenai.jffi.CallContext);

  public abstract int putByte(byte[], int, int);

  public abstract int putShort(byte[], int, int);

  public abstract int putInt(byte[], int, int);

  public abstract int putLong(byte[], int, long);

  public abstract int putFloat(byte[], int, float);

  public abstract int putDouble(byte[], int, double);

  public abstract int putAddress(byte[], int, long);

  public abstract int skipAddress(int);
}
