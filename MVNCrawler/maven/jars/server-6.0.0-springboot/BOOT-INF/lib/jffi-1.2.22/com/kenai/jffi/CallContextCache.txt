Compiled from "CallContextCache.java"
public class com.kenai.jffi.CallContextCache {
  private final java.util.Map<com.kenai.jffi.CallContextCache$Signature, com.kenai.jffi.CallContextCache$CallContextRef> contextCache;

  private final java.lang.ref.ReferenceQueue<com.kenai.jffi.CallContext> contextReferenceQueue;

  public static com.kenai.jffi.CallContextCache getInstance();
    Code:
       0: getstatic     #2                  // Field com/kenai/jffi/CallContextCache$SingletonHolder.INSTANCE:Lcom/kenai/jffi/CallContextCache;
       3: areturn

  private com.kenai.jffi.CallContextCache();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #6                  // Field contextCache:Ljava/util/Map;
      15: aload_0
      16: new           #7                  // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #8                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putfield      #9                  // Field contextReferenceQueue:Ljava/lang/ref/ReferenceQueue;
      26: return

  public final com.kenai.jffi.CallContext getCallContext(com.kenai.jffi.Type, com.kenai.jffi.Type[], com.kenai.jffi.CallingConvention);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: iconst_0
       6: invokevirtual #10                 // Method getCallContext:(Lcom/kenai/jffi/Type;[Lcom/kenai/jffi/Type;Lcom/kenai/jffi/CallingConvention;ZZ)Lcom/kenai/jffi/CallContext;
       9: areturn

  public final com.kenai.jffi.CallContext getCallContext(com.kenai.jffi.Type, com.kenai.jffi.Type[], com.kenai.jffi.CallingConvention, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: invokevirtual #10                 // Method getCallContext:(Lcom/kenai/jffi/Type;[Lcom/kenai/jffi/Type;Lcom/kenai/jffi/CallingConvention;ZZ)Lcom/kenai/jffi/CallContext;
      10: areturn

  public final com.kenai.jffi.CallContext getCallContext(com.kenai.jffi.Type, com.kenai.jffi.Type[], com.kenai.jffi.CallingConvention, boolean, boolean);
    Code:
       0: new           #11                 // class com/kenai/jffi/CallContextCache$Signature
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: iload         5
      11: invokespecial #12                 // Method com/kenai/jffi/CallContextCache$Signature."<init>":(Lcom/kenai/jffi/Type;[Lcom/kenai/jffi/Type;Lcom/kenai/jffi/CallingConvention;ZZ)V
      14: astore        6
      16: aload_0
      17: getfield      #6                  // Field contextCache:Ljava/util/Map;
      20: aload         6
      22: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #14                 // class com/kenai/jffi/CallContextCache$CallContextRef
      30: astore        7
      32: aload         7
      34: ifnull        54
      37: aload         7
      39: invokevirtual #15                 // Method com/kenai/jffi/CallContextCache$CallContextRef.get:()Ljava/lang/Object;
      42: checkcast     #16                 // class com/kenai/jffi/CallContext
      45: dup
      46: astore        8
      48: ifnull        54
      51: aload         8
      53: areturn
      54: aload_0
      55: getfield      #9                  // Field contextReferenceQueue:Ljava/lang/ref/ReferenceQueue;
      58: invokevirtual #17                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      61: checkcast     #14                 // class com/kenai/jffi/CallContextCache$CallContextRef
      64: dup
      65: astore        7
      67: ifnull        88
      70: aload_0
      71: getfield      #6                  // Field contextCache:Ljava/util/Map;
      74: aload         7
      76: getfield      #18                 // Field com/kenai/jffi/CallContextCache$CallContextRef.signature:Lcom/kenai/jffi/CallContextCache$Signature;
      79: invokeinterface #19,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          54
      88: new           #16                 // class com/kenai/jffi/CallContext
      91: dup
      92: aload_1
      93: aload_2
      94: invokevirtual #20                 // Method "[Lcom/kenai/jffi/Type;".clone:()Ljava/lang/Object;
      97: checkcast     #21                 // class "[Lcom/kenai/jffi/Type;"
     100: aload_3
     101: iload         4
     103: iload         5
     105: invokespecial #22                 // Method com/kenai/jffi/CallContext."<init>":(Lcom/kenai/jffi/Type;[Lcom/kenai/jffi/Type;Lcom/kenai/jffi/CallingConvention;ZZ)V
     108: astore        8
     110: aload_0
     111: getfield      #6                  // Field contextCache:Ljava/util/Map;
     114: aload         6
     116: new           #14                 // class com/kenai/jffi/CallContextCache$CallContextRef
     119: dup
     120: aload         6
     122: aload         8
     124: aload_0
     125: getfield      #9                  // Field contextReferenceQueue:Ljava/lang/ref/ReferenceQueue;
     128: invokespecial #23                 // Method com/kenai/jffi/CallContextCache$CallContextRef."<init>":(Lcom/kenai/jffi/CallContextCache$Signature;Lcom/kenai/jffi/CallContext;Ljava/lang/ref/ReferenceQueue;)V
     131: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     136: pop
     137: aload         8
     139: areturn

  com.kenai.jffi.CallContextCache(com.kenai.jffi.CallContextCache$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
