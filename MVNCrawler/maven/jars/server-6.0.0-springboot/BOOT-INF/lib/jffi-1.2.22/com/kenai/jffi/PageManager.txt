Compiled from "PageManager.java"
public abstract class com.kenai.jffi.PageManager {
  public static final int PROT_EXEC;

  public static final int PROT_READ;

  public static final int PROT_WRITE;

  private final com.kenai.jffi.Foreign foreign;

  private int pageSize;

  public com.kenai.jffi.PageManager();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method com/kenai/jffi/Foreign.getInstance:()Lcom/kenai/jffi/Foreign;
       8: putfield      #4                  // Field foreign:Lcom/kenai/jffi/Foreign;
      11: return

  public static com.kenai.jffi.PageManager getInstance();
    Code:
       0: getstatic     #5                  // Field com/kenai/jffi/PageManager$SingletonHolder.INSTANCE:Lcom/kenai/jffi/PageManager;
       3: areturn

  public final long pageSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pageSize:I
       4: ifeq          15
       7: aload_0
       8: getfield      #6                  // Field pageSize:I
      11: i2l
      12: goto          19
      15: aload_0
      16: invokespecial #7                  // Method calculatePageSize:()J
      19: lreturn

  private long calculatePageSize();
    Code:
       0: invokestatic  #8                  // Method com/kenai/jffi/Foreign.pageSize:()J
       3: lstore_1
       4: lload_1
       5: ldc2_w        #10                 // long 2147483647l
       8: lcmp
       9: ifge          23
      12: aload_0
      13: lload_1
      14: l2i
      15: dup_x1
      16: putfield      #6                  // Field pageSize:I
      19: i2l
      20: goto          24
      23: lload_1
      24: lreturn

  public abstract long allocatePages(int, int);

  public abstract void freePages(long, int);

  public abstract void protectPages(long, int, int);
}
