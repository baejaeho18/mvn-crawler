Compiled from "V1.java"
public interface io.kubernetes.client.proto.V1$VolumeSourceOrBuilder extends com.google.protobuf.MessageOrBuilder {
  public abstract boolean hasHostPath();

  public abstract io.kubernetes.client.proto.V1$HostPathVolumeSource getHostPath();

  public abstract io.kubernetes.client.proto.V1$HostPathVolumeSourceOrBuilder getHostPathOrBuilder();

  public abstract boolean hasEmptyDir();

  public abstract io.kubernetes.client.proto.V1$EmptyDirVolumeSource getEmptyDir();

  public abstract io.kubernetes.client.proto.V1$EmptyDirVolumeSourceOrBuilder getEmptyDirOrBuilder();

  public abstract boolean hasGcePersistentDisk();

  public abstract io.kubernetes.client.proto.V1$GCEPersistentDiskVolumeSource getGcePersistentDisk();

  public abstract io.kubernetes.client.proto.V1$GCEPersistentDiskVolumeSourceOrBuilder getGcePersistentDiskOrBuilder();

  public abstract boolean hasAwsElasticBlockStore();

  public abstract io.kubernetes.client.proto.V1$AWSElasticBlockStoreVolumeSource getAwsElasticBlockStore();

  public abstract io.kubernetes.client.proto.V1$AWSElasticBlockStoreVolumeSourceOrBuilder getAwsElasticBlockStoreOrBuilder();

  public abstract boolean hasGitRepo();

  public abstract io.kubernetes.client.proto.V1$GitRepoVolumeSource getGitRepo();

  public abstract io.kubernetes.client.proto.V1$GitRepoVolumeSourceOrBuilder getGitRepoOrBuilder();

  public abstract boolean hasSecret();

  public abstract io.kubernetes.client.proto.V1$SecretVolumeSource getSecret();

  public abstract io.kubernetes.client.proto.V1$SecretVolumeSourceOrBuilder getSecretOrBuilder();

  public abstract boolean hasNfs();

  public abstract io.kubernetes.client.proto.V1$NFSVolumeSource getNfs();

  public abstract io.kubernetes.client.proto.V1$NFSVolumeSourceOrBuilder getNfsOrBuilder();

  public abstract boolean hasIscsi();

  public abstract io.kubernetes.client.proto.V1$ISCSIVolumeSource getIscsi();

  public abstract io.kubernetes.client.proto.V1$ISCSIVolumeSourceOrBuilder getIscsiOrBuilder();

  public abstract boolean hasGlusterfs();

  public abstract io.kubernetes.client.proto.V1$GlusterfsVolumeSource getGlusterfs();

  public abstract io.kubernetes.client.proto.V1$GlusterfsVolumeSourceOrBuilder getGlusterfsOrBuilder();

  public abstract boolean hasPersistentVolumeClaim();

  public abstract io.kubernetes.client.proto.V1$PersistentVolumeClaimVolumeSource getPersistentVolumeClaim();

  public abstract io.kubernetes.client.proto.V1$PersistentVolumeClaimVolumeSourceOrBuilder getPersistentVolumeClaimOrBuilder();

  public abstract boolean hasRbd();

  public abstract io.kubernetes.client.proto.V1$RBDVolumeSource getRbd();

  public abstract io.kubernetes.client.proto.V1$RBDVolumeSourceOrBuilder getRbdOrBuilder();

  public abstract boolean hasFlexVolume();

  public abstract io.kubernetes.client.proto.V1$FlexVolumeSource getFlexVolume();

  public abstract io.kubernetes.client.proto.V1$FlexVolumeSourceOrBuilder getFlexVolumeOrBuilder();

  public abstract boolean hasCinder();

  public abstract io.kubernetes.client.proto.V1$CinderVolumeSource getCinder();

  public abstract io.kubernetes.client.proto.V1$CinderVolumeSourceOrBuilder getCinderOrBuilder();

  public abstract boolean hasCephfs();

  public abstract io.kubernetes.client.proto.V1$CephFSVolumeSource getCephfs();

  public abstract io.kubernetes.client.proto.V1$CephFSVolumeSourceOrBuilder getCephfsOrBuilder();

  public abstract boolean hasFlocker();

  public abstract io.kubernetes.client.proto.V1$FlockerVolumeSource getFlocker();

  public abstract io.kubernetes.client.proto.V1$FlockerVolumeSourceOrBuilder getFlockerOrBuilder();

  public abstract boolean hasDownwardAPI();

  public abstract io.kubernetes.client.proto.V1$DownwardAPIVolumeSource getDownwardAPI();

  public abstract io.kubernetes.client.proto.V1$DownwardAPIVolumeSourceOrBuilder getDownwardAPIOrBuilder();

  public abstract boolean hasFc();

  public abstract io.kubernetes.client.proto.V1$FCVolumeSource getFc();

  public abstract io.kubernetes.client.proto.V1$FCVolumeSourceOrBuilder getFcOrBuilder();

  public abstract boolean hasAzureFile();

  public abstract io.kubernetes.client.proto.V1$AzureFileVolumeSource getAzureFile();

  public abstract io.kubernetes.client.proto.V1$AzureFileVolumeSourceOrBuilder getAzureFileOrBuilder();

  public abstract boolean hasConfigMap();

  public abstract io.kubernetes.client.proto.V1$ConfigMapVolumeSource getConfigMap();

  public abstract io.kubernetes.client.proto.V1$ConfigMapVolumeSourceOrBuilder getConfigMapOrBuilder();

  public abstract boolean hasVsphereVolume();

  public abstract io.kubernetes.client.proto.V1$VsphereVirtualDiskVolumeSource getVsphereVolume();

  public abstract io.kubernetes.client.proto.V1$VsphereVirtualDiskVolumeSourceOrBuilder getVsphereVolumeOrBuilder();

  public abstract boolean hasQuobyte();

  public abstract io.kubernetes.client.proto.V1$QuobyteVolumeSource getQuobyte();

  public abstract io.kubernetes.client.proto.V1$QuobyteVolumeSourceOrBuilder getQuobyteOrBuilder();

  public abstract boolean hasAzureDisk();

  public abstract io.kubernetes.client.proto.V1$AzureDiskVolumeSource getAzureDisk();

  public abstract io.kubernetes.client.proto.V1$AzureDiskVolumeSourceOrBuilder getAzureDiskOrBuilder();

  public abstract boolean hasPhotonPersistentDisk();

  public abstract io.kubernetes.client.proto.V1$PhotonPersistentDiskVolumeSource getPhotonPersistentDisk();

  public abstract io.kubernetes.client.proto.V1$PhotonPersistentDiskVolumeSourceOrBuilder getPhotonPersistentDiskOrBuilder();

  public abstract boolean hasProjected();

  public abstract io.kubernetes.client.proto.V1$ProjectedVolumeSource getProjected();

  public abstract io.kubernetes.client.proto.V1$ProjectedVolumeSourceOrBuilder getProjectedOrBuilder();

  public abstract boolean hasPortworxVolume();

  public abstract io.kubernetes.client.proto.V1$PortworxVolumeSource getPortworxVolume();

  public abstract io.kubernetes.client.proto.V1$PortworxVolumeSourceOrBuilder getPortworxVolumeOrBuilder();

  public abstract boolean hasScaleIO();

  public abstract io.kubernetes.client.proto.V1$ScaleIOVolumeSource getScaleIO();

  public abstract io.kubernetes.client.proto.V1$ScaleIOVolumeSourceOrBuilder getScaleIOOrBuilder();

  public abstract boolean hasStorageos();

  public abstract io.kubernetes.client.proto.V1$StorageOSVolumeSource getStorageos();

  public abstract io.kubernetes.client.proto.V1$StorageOSVolumeSourceOrBuilder getStorageosOrBuilder();
}
