Compiled from "V1.java"
public interface io.kubernetes.client.proto.V1$NodeStatusOrBuilder extends com.google.protobuf.MessageOrBuilder {
  public abstract int getCapacityCount();

  public abstract boolean containsCapacity(java.lang.String);

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.proto.Resource$Quantity> getCapacity();

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.proto.Resource$Quantity> getCapacityMap();

  public abstract io.kubernetes.client.proto.Resource$Quantity getCapacityOrDefault(java.lang.String, io.kubernetes.client.proto.Resource$Quantity);

  public abstract io.kubernetes.client.proto.Resource$Quantity getCapacityOrThrow(java.lang.String);

  public abstract int getAllocatableCount();

  public abstract boolean containsAllocatable(java.lang.String);

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.proto.Resource$Quantity> getAllocatable();

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.proto.Resource$Quantity> getAllocatableMap();

  public abstract io.kubernetes.client.proto.Resource$Quantity getAllocatableOrDefault(java.lang.String, io.kubernetes.client.proto.Resource$Quantity);

  public abstract io.kubernetes.client.proto.Resource$Quantity getAllocatableOrThrow(java.lang.String);

  public abstract boolean hasPhase();

  public abstract java.lang.String getPhase();

  public abstract com.google.protobuf.ByteString getPhaseBytes();

  public abstract java.util.List<io.kubernetes.client.proto.V1$NodeCondition> getConditionsList();

  public abstract io.kubernetes.client.proto.V1$NodeCondition getConditions(int);

  public abstract int getConditionsCount();

  public abstract java.util.List<? extends io.kubernetes.client.proto.V1$NodeConditionOrBuilder> getConditionsOrBuilderList();

  public abstract io.kubernetes.client.proto.V1$NodeConditionOrBuilder getConditionsOrBuilder(int);

  public abstract java.util.List<io.kubernetes.client.proto.V1$NodeAddress> getAddressesList();

  public abstract io.kubernetes.client.proto.V1$NodeAddress getAddresses(int);

  public abstract int getAddressesCount();

  public abstract java.util.List<? extends io.kubernetes.client.proto.V1$NodeAddressOrBuilder> getAddressesOrBuilderList();

  public abstract io.kubernetes.client.proto.V1$NodeAddressOrBuilder getAddressesOrBuilder(int);

  public abstract boolean hasDaemonEndpoints();

  public abstract io.kubernetes.client.proto.V1$NodeDaemonEndpoints getDaemonEndpoints();

  public abstract io.kubernetes.client.proto.V1$NodeDaemonEndpointsOrBuilder getDaemonEndpointsOrBuilder();

  public abstract boolean hasNodeInfo();

  public abstract io.kubernetes.client.proto.V1$NodeSystemInfo getNodeInfo();

  public abstract io.kubernetes.client.proto.V1$NodeSystemInfoOrBuilder getNodeInfoOrBuilder();

  public abstract java.util.List<io.kubernetes.client.proto.V1$ContainerImage> getImagesList();

  public abstract io.kubernetes.client.proto.V1$ContainerImage getImages(int);

  public abstract int getImagesCount();

  public abstract java.util.List<? extends io.kubernetes.client.proto.V1$ContainerImageOrBuilder> getImagesOrBuilderList();

  public abstract io.kubernetes.client.proto.V1$ContainerImageOrBuilder getImagesOrBuilder(int);

  public abstract java.util.List<java.lang.String> getVolumesInUseList();

  public abstract int getVolumesInUseCount();

  public abstract java.lang.String getVolumesInUse(int);

  public abstract com.google.protobuf.ByteString getVolumesInUseBytes(int);

  public abstract java.util.List<io.kubernetes.client.proto.V1$AttachedVolume> getVolumesAttachedList();

  public abstract io.kubernetes.client.proto.V1$AttachedVolume getVolumesAttached(int);

  public abstract int getVolumesAttachedCount();

  public abstract java.util.List<? extends io.kubernetes.client.proto.V1$AttachedVolumeOrBuilder> getVolumesAttachedOrBuilderList();

  public abstract io.kubernetes.client.proto.V1$AttachedVolumeOrBuilder getVolumesAttachedOrBuilder(int);

  public abstract boolean hasConfig();

  public abstract io.kubernetes.client.proto.V1$NodeConfigStatus getConfig();

  public abstract io.kubernetes.client.proto.V1$NodeConfigStatusOrBuilder getConfigOrBuilder();
}
