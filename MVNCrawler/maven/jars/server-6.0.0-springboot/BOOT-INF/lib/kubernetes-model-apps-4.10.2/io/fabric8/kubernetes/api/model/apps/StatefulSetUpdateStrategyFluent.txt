Compiled from "StatefulSetUpdateStrategyFluent.java"
public interface io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent<A extends io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy getRollingUpdate();

  public abstract io.fabric8.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy buildRollingUpdate();

  public abstract A withRollingUpdate(io.fabric8.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy);

  public abstract java.lang.Boolean hasRollingUpdate();

  public abstract A withNewRollingUpdate(java.lang.Integer);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent$RollingUpdateNested<A> withNewRollingUpdate();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent$RollingUpdateNested<A> withNewRollingUpdateLike(io.fabric8.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent$RollingUpdateNested<A> editRollingUpdate();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent$RollingUpdateNested<A> editOrNewRollingUpdate();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetUpdateStrategyFluent$RollingUpdateNested<A> editOrNewRollingUpdateLike(io.fabric8.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
