Compiled from "StatefulSetStatusFluent.java"
public interface io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent<A extends io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Integer getCollisionCount();

  public abstract A withCollisionCount(java.lang.Integer);

  public abstract java.lang.Boolean hasCollisionCount();

  public abstract A addToConditions(int, io.fabric8.kubernetes.api.model.apps.StatefulSetCondition);

  public abstract A setToConditions(int, io.fabric8.kubernetes.api.model.apps.StatefulSetCondition);

  public abstract A addToConditions(io.fabric8.kubernetes.api.model.apps.StatefulSetCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.fabric8.kubernetes.api.model.apps.StatefulSetCondition>);

  public abstract A removeFromConditions(io.fabric8.kubernetes.api.model.apps.StatefulSetCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.fabric8.kubernetes.api.model.apps.StatefulSetCondition>);

  public abstract A removeMatchingFromConditions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.StatefulSetConditionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.apps.StatefulSetCondition> getConditions();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.apps.StatefulSetCondition> buildConditions();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetCondition buildCondition(int);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetCondition buildFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetCondition buildLastCondition();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetCondition buildMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.StatefulSetConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.StatefulSetConditionBuilder>);

  public abstract A withConditions(java.util.List<io.fabric8.kubernetes.api.model.apps.StatefulSetCondition>);

  public abstract A withConditions(io.fabric8.kubernetes.api.model.apps.StatefulSetCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract A addNewCondition(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> addNewConditionLike(io.fabric8.kubernetes.api.model.apps.StatefulSetCondition);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.fabric8.kubernetes.api.model.apps.StatefulSetCondition);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.fabric8.kubernetes.api.model.apps.StatefulSetStatusFluent$ConditionsNested<A> editMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.StatefulSetConditionBuilder>);

  public abstract java.lang.Integer getCurrentReplicas();

  public abstract A withCurrentReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasCurrentReplicas();

  public abstract java.lang.String getCurrentRevision();

  public abstract A withCurrentRevision(java.lang.String);

  public abstract java.lang.Boolean hasCurrentRevision();

  public abstract A withNewCurrentRevision(java.lang.String);

  public abstract A withNewCurrentRevision(java.lang.StringBuilder);

  public abstract A withNewCurrentRevision(java.lang.StringBuffer);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract java.lang.Integer getReadyReplicas();

  public abstract A withReadyReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasReadyReplicas();

  public abstract java.lang.Integer getReplicas();

  public abstract A withReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasReplicas();

  public abstract java.lang.String getUpdateRevision();

  public abstract A withUpdateRevision(java.lang.String);

  public abstract java.lang.Boolean hasUpdateRevision();

  public abstract A withNewUpdateRevision(java.lang.String);

  public abstract A withNewUpdateRevision(java.lang.StringBuilder);

  public abstract A withNewUpdateRevision(java.lang.StringBuffer);

  public abstract java.lang.Integer getUpdatedReplicas();

  public abstract A withUpdatedReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasUpdatedReplicas();
}
