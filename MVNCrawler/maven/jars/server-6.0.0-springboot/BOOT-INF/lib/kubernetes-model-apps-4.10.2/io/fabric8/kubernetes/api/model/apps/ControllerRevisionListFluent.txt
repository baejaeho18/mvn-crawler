Compiled from "ControllerRevisionListFluent.java"
public interface io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent<A extends io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToItems(int, io.fabric8.kubernetes.api.model.apps.ControllerRevision);

  public abstract A setToItems(int, io.fabric8.kubernetes.api.model.apps.ControllerRevision);

  public abstract A addToItems(io.fabric8.kubernetes.api.model.apps.ControllerRevision...);

  public abstract A addAllToItems(java.util.Collection<io.fabric8.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A removeFromItems(io.fabric8.kubernetes.api.model.apps.ControllerRevision...);

  public abstract A removeAllFromItems(java.util.Collection<io.fabric8.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A removeMatchingFromItems(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.ControllerRevisionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.apps.ControllerRevision> getItems();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.apps.ControllerRevision> buildItems();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevision buildItem(int);

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevision buildFirstItem();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevision buildLastItem();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevision buildMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.ControllerRevisionBuilder>);

  public abstract java.lang.Boolean hasMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.ControllerRevisionBuilder>);

  public abstract A withItems(java.util.List<io.fabric8.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A withItems(io.fabric8.kubernetes.api.model.apps.ControllerRevision...);

  public abstract java.lang.Boolean hasItems();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> addNewItem();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> addNewItemLike(io.fabric8.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> setNewItemLike(int, io.fabric8.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> editItem(int);

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> editFirstItem();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> editLastItem();

  public abstract io.fabric8.kubernetes.api.model.apps.ControllerRevisionListFluent$ItemsNested<A> editMatchingItem(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apps.ControllerRevisionBuilder>);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.ListMeta getMetadata();

  public abstract A withMetadata(io.fabric8.kubernetes.api.model.ListMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract A withNewMetadata(java.lang.String, java.lang.Long, java.lang.String, java.lang.String);
}
