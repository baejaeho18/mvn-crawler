Compiled from "AbstractFreeMarkerConfiguration.java"
abstract class org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration {
  private final org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties properties;

  protected org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;
       9: return

  protected final org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties getProperties();
    Code:
       0: aload_0
       1: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;
       4: areturn

  protected void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;
       5: invokevirtual #3                  // Method org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.getTemplateLoaderPath:()[Ljava/lang/String;
       8: invokevirtual #4                  // Method org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.setTemplateLoaderPaths:([Ljava/lang/String;)V
      11: aload_1
      12: aload_0
      13: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;
      16: invokevirtual #5                  // Method org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.isPreferFileSystemAccess:()Z
      19: invokevirtual #6                  // Method org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.setPreferFileSystemAccess:(Z)V
      22: aload_1
      23: aload_0
      24: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;
      27: invokevirtual #7                  // Method org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.getCharsetName:()Ljava/lang/String;
      30: invokevirtual #8                  // Method org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.setDefaultEncoding:(Ljava/lang/String;)V
      33: new           #9                  // class java/util/Properties
      36: dup
      37: invokespecial #10                 // Method java/util/Properties."<init>":()V
      40: astore_2
      41: aload_2
      42: ldc           #11                 // String recognize_standard_file_extensions
      44: ldc           #12                 // String true
      46: invokevirtual #13                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_2
      51: aload_0
      52: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;
      55: invokevirtual #14                 // Method org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.getSettings:()Ljava/util/Map;
      58: invokevirtual #15                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      61: aload_1
      62: aload_2
      63: invokevirtual #16                 // Method org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.setFreemarkerSettings:(Ljava/util/Properties;)V
      66: return
}
