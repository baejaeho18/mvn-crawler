Compiled from "ServerProperties.java"
public class org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat {
  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog accesslog;

  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads threads;

  private java.io.File basedir;

  private java.time.Duration backgroundProcessorDelay;

  private org.springframework.util.unit.DataSize maxHttpFormPostSize;

  private org.springframework.util.unit.DataSize maxSwallowSize;

  private java.lang.Boolean redirectContextRoot;

  private boolean useRelativeRedirects;

  private java.nio.charset.Charset uriEncoding;

  private int maxConnections;

  private int acceptCount;

  private int processorCache;

  private java.util.List<java.lang.String> additionalTldSkipPatterns;

  private java.util.List<java.lang.Character> relaxedPathChars;

  private java.util.List<java.lang.Character> relaxedQueryChars;

  private java.time.Duration connectionTimeout;

  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource resource;

  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry mbeanregistry;

  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip remoteip;

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog
       8: dup
       9: invokespecial #3                  // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog."<init>":()V
      12: putfield      #4                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      15: aload_0
      16: new           #5                  // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads
      19: dup
      20: invokespecial #6                  // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads."<init>":()V
      23: putfield      #7                  // Field threads:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
      26: aload_0
      27: ldc2_w        #8                  // long 10l
      30: invokestatic  #10                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      33: putfield      #11                 // Field backgroundProcessorDelay:Ljava/time/Duration;
      36: aload_0
      37: ldc2_w        #12                 // long 2l
      40: invokestatic  #14                 // Method org/springframework/util/unit/DataSize.ofMegabytes:(J)Lorg/springframework/util/unit/DataSize;
      43: putfield      #15                 // Field maxHttpFormPostSize:Lorg/springframework/util/unit/DataSize;
      46: aload_0
      47: ldc2_w        #12                 // long 2l
      50: invokestatic  #14                 // Method org/springframework/util/unit/DataSize.ofMegabytes:(J)Lorg/springframework/util/unit/DataSize;
      53: putfield      #16                 // Field maxSwallowSize:Lorg/springframework/util/unit/DataSize;
      56: aload_0
      57: iconst_1
      58: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      61: putfield      #18                 // Field redirectContextRoot:Ljava/lang/Boolean;
      64: aload_0
      65: getstatic     #19                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      68: putfield      #20                 // Field uriEncoding:Ljava/nio/charset/Charset;
      71: aload_0
      72: sipush        8192
      75: putfield      #21                 // Field maxConnections:I
      78: aload_0
      79: bipush        100
      81: putfield      #22                 // Field acceptCount:I
      84: aload_0
      85: sipush        200
      88: putfield      #23                 // Field processorCache:I
      91: aload_0
      92: new           #24                 // class java/util/ArrayList
      95: dup
      96: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      99: putfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
     102: aload_0
     103: new           #24                 // class java/util/ArrayList
     106: dup
     107: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     110: putfield      #27                 // Field relaxedPathChars:Ljava/util/List;
     113: aload_0
     114: new           #24                 // class java/util/ArrayList
     117: dup
     118: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     121: putfield      #28                 // Field relaxedQueryChars:Ljava/util/List;
     124: aload_0
     125: new           #29                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Resource
     128: dup
     129: invokespecial #30                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Resource."<init>":()V
     132: putfield      #31                 // Field resource:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Resource;
     135: aload_0
     136: new           #32                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Mbeanregistry
     139: dup
     140: invokespecial #33                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Mbeanregistry."<init>":()V
     143: putfield      #34                 // Field mbeanregistry:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Mbeanregistry;
     146: aload_0
     147: new           #35                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip
     150: dup
     151: invokespecial #36                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip."<init>":()V
     154: putfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
     157: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getThreads:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
       4: invokevirtual #39                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads.getMax:()I
       7: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getThreads:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
       4: iload_1
       5: invokevirtual #40                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads.setMax:(I)V
       8: return

  public int getMinSpareThreads();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getThreads:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
       4: invokevirtual #41                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads.getMinSpare:()I
       7: ireturn

  public void setMinSpareThreads(int);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getThreads:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
       4: iload_1
       5: invokevirtual #42                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads.setMinSpare:(I)V
       8: return

  public org.springframework.util.unit.DataSize getMaxHttpFormPostSize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field maxHttpFormPostSize:Lorg/springframework/util/unit/DataSize;
       4: areturn

  public void setMaxHttpFormPostSize(org.springframework.util.unit.DataSize);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field maxHttpFormPostSize:Lorg/springframework/util/unit/DataSize;
       5: return

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog getAccesslog();
    Code:
       0: aload_0
       1: getfield      #4                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
       4: areturn

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads getThreads();
    Code:
       0: aload_0
       1: getfield      #7                  // Field threads:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
       4: areturn

  public java.time.Duration getBackgroundProcessorDelay();
    Code:
       0: aload_0
       1: getfield      #11                 // Field backgroundProcessorDelay:Ljava/time/Duration;
       4: areturn

  public void setBackgroundProcessorDelay(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field backgroundProcessorDelay:Ljava/time/Duration;
       5: return

  public java.io.File getBasedir();
    Code:
       0: aload_0
       1: getfield      #43                 // Field basedir:Ljava/io/File;
       4: areturn

  public void setBasedir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field basedir:Ljava/io/File;
       5: return

  public java.lang.String getInternalProxies();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.getInternalProxies:()Ljava/lang/String;
       7: areturn

  public void setInternalProxies(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: aload_1
       5: invokevirtual #45                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.setInternalProxies:(Ljava/lang/String;)V
       8: return

  public java.lang.String getProtocolHeader();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: invokevirtual #46                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.getProtocolHeader:()Ljava/lang/String;
       7: areturn

  public void setProtocolHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: aload_1
       5: invokevirtual #47                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.setProtocolHeader:(Ljava/lang/String;)V
       8: return

  public java.lang.String getProtocolHeaderHttpsValue();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: invokevirtual #48                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.getProtocolHeaderHttpsValue:()Ljava/lang/String;
       7: areturn

  public void setProtocolHeaderHttpsValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: aload_1
       5: invokevirtual #49                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.setProtocolHeaderHttpsValue:(Ljava/lang/String;)V
       8: return

  public java.lang.String getHostHeader();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: invokevirtual #50                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.getHostHeader:()Ljava/lang/String;
       7: areturn

  public void setHostHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: aload_1
       5: invokevirtual #51                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.setHostHeader:(Ljava/lang/String;)V
       8: return

  public java.lang.String getPortHeader();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: invokevirtual #52                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.getPortHeader:()Ljava/lang/String;
       7: areturn

  public void setPortHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: aload_1
       5: invokevirtual #53                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.setPortHeader:(Ljava/lang/String;)V
       8: return

  public java.lang.String getRemoteIpHeader();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: invokevirtual #54                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.getRemoteIpHeader:()Ljava/lang/String;
       7: areturn

  public void setRemoteIpHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: aload_1
       5: invokevirtual #55                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip.setRemoteIpHeader:(Ljava/lang/String;)V
       8: return

  public java.lang.Boolean getRedirectContextRoot();
    Code:
       0: aload_0
       1: getfield      #18                 // Field redirectContextRoot:Ljava/lang/Boolean;
       4: areturn

  public void setRedirectContextRoot(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field redirectContextRoot:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getUseRelativeRedirects();
    Code:
       0: aload_0
       1: getfield      #56                 // Field useRelativeRedirects:Z
       4: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: areturn

  public boolean isUseRelativeRedirects();
    Code:
       0: aload_0
       1: getfield      #56                 // Field useRelativeRedirects:Z
       4: ireturn

  public void setUseRelativeRedirects(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field useRelativeRedirects:Z
       5: return

  public void setUseRelativeRedirects(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #57                 // Method java/lang/Boolean.booleanValue:()Z
       9: goto          13
      12: iconst_0
      13: putfield      #56                 // Field useRelativeRedirects:Z
      16: return

  public java.nio.charset.Charset getUriEncoding();
    Code:
       0: aload_0
       1: getfield      #20                 // Field uriEncoding:Ljava/nio/charset/Charset;
       4: areturn

  public void setUriEncoding(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field uriEncoding:Ljava/nio/charset/Charset;
       5: return

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #21                 // Field maxConnections:I
       4: ireturn

  public void setMaxConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field maxConnections:I
       5: return

  public org.springframework.util.unit.DataSize getMaxSwallowSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maxSwallowSize:Lorg/springframework/util/unit/DataSize;
       4: areturn

  public void setMaxSwallowSize(org.springframework.util.unit.DataSize);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field maxSwallowSize:Lorg/springframework/util/unit/DataSize;
       5: return

  public int getAcceptCount();
    Code:
       0: aload_0
       1: getfield      #22                 // Field acceptCount:I
       4: ireturn

  public void setAcceptCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field acceptCount:I
       5: return

  public int getProcessorCache();
    Code:
       0: aload_0
       1: getfield      #23                 // Field processorCache:I
       4: ireturn

  public void setProcessorCache(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field processorCache:I
       5: return

  public java.util.List<java.lang.String> getAdditionalTldSkipPatterns();
    Code:
       0: aload_0
       1: getfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
       4: areturn

  public void setAdditionalTldSkipPatterns(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
       5: return

  public java.util.List<java.lang.Character> getRelaxedPathChars();
    Code:
       0: aload_0
       1: getfield      #27                 // Field relaxedPathChars:Ljava/util/List;
       4: areturn

  public void setRelaxedPathChars(java.util.List<java.lang.Character>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field relaxedPathChars:Ljava/util/List;
       5: return

  public java.util.List<java.lang.Character> getRelaxedQueryChars();
    Code:
       0: aload_0
       1: getfield      #28                 // Field relaxedQueryChars:Ljava/util/List;
       4: areturn

  public void setRelaxedQueryChars(java.util.List<java.lang.Character>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field relaxedQueryChars:Ljava/util/List;
       5: return

  public java.time.Duration getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #58                 // Field connectionTimeout:Ljava/time/Duration;
       4: areturn

  public void setConnectionTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field connectionTimeout:Ljava/time/Duration;
       5: return

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource getResource();
    Code:
       0: aload_0
       1: getfield      #31                 // Field resource:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Resource;
       4: areturn

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry getMbeanregistry();
    Code:
       0: aload_0
       1: getfield      #34                 // Field mbeanregistry:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Mbeanregistry;
       4: areturn

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip getRemoteip();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteip:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
       4: areturn
}
