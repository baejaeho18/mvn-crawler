Compiled from "NettyWebServerFactoryCustomizer.java"
public class org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory>, org.springframework.core.Ordered {
  private final org.springframework.core.env.Environment environment;

  private final org.springframework.boot.autoconfigure.web.ServerProperties serverProperties;

  public org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer(org.springframework.core.env.Environment, org.springframework.boot.autoconfigure.web.ServerProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
      14: return

  public int getOrder();
    Code:
       0: iconst_0
       1: ireturn

  public void customize(org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #4                  // Method getOrDeduceUseForwardHeaders:()Z
       5: invokevirtual #5                  // Method org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.setUseForwardHeaders:(Z)V
       8: invokestatic  #6                  // Method org/springframework/boot/context/properties/PropertyMapper.get:()Lorg/springframework/boot/context/properties/PropertyMapper;
      11: invokevirtual #7                  // Method org/springframework/boot/context/properties/PropertyMapper.alwaysApplyingWhenNonNull:()Lorg/springframework/boot/context/properties/PropertyMapper;
      14: astore_2
      15: aload_2
      16: aload_0
      17: getfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
      20: dup
      21: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: pop
      25: invokedynamic #9,  0              // InvokeDynamic #0:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Ljava/util/function/Supplier;
      30: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      33: aload_0
      34: aload_1
      35: invokedynamic #11,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizer;Lorg/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory;)Ljava/util/function/Consumer;
      40: invokevirtual #12                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
      43: aload_0
      44: getfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
      47: invokevirtual #13                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getNetty:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Netty;
      50: astore_3
      51: aload_2
      52: aload_3
      53: dup
      54: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      57: pop
      58: invokedynamic #14,  0             // InvokeDynamic #2:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Netty;)Ljava/util/function/Supplier;
      63: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      66: invokevirtual #15                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.whenNonNull:()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      69: aload_0
      70: aload_1
      71: invokedynamic #16,  0             // InvokeDynamic #3:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizer;Lorg/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory;)Ljava/util/function/Consumer;
      76: invokevirtual #12                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
      79: return

  private boolean getOrDeduceUseForwardHeaders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
       4: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getForwardHeadersStrategy:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;
       7: ifnonnull     35
      10: aload_0
      11: getfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
      14: invokestatic  #18                 // Method org/springframework/boot/cloud/CloudPlatform.getActive:(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/cloud/CloudPlatform;
      17: astore_1
      18: aload_1
      19: ifnull        33
      22: aload_1
      23: invokevirtual #19                 // Method org/springframework/boot/cloud/CloudPlatform.isUsingForwardHeaders:()Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
      39: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getForwardHeadersStrategy:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;
      42: getstatic     #20                 // Field org/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy.NATIVE:Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;
      45: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy.equals:(Ljava/lang/Object;)Z
      48: ireturn

  private void customizeMaxHttpHeaderSize(org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory, org.springframework.util.unit.DataSize);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #22                 // class org/springframework/boot/web/embedded/netty/NettyServerCustomizer
       5: dup
       6: iconst_0
       7: aload_2
       8: invokedynamic #23,  0             // InvokeDynamic #4:apply:(Lorg/springframework/util/unit/DataSize;)Lorg/springframework/boot/web/embedded/netty/NettyServerCustomizer;
      13: aastore
      14: invokevirtual #24                 // Method org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.addServerCustomizers:([Lorg/springframework/boot/web/embedded/netty/NettyServerCustomizer;)V
      17: return

  private void customizeConnectionTimeout(org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory, java.time.Duration);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #22                 // class org/springframework/boot/web/embedded/netty/NettyServerCustomizer
       5: dup
       6: iconst_0
       7: aload_2
       8: invokedynamic #25,  0             // InvokeDynamic #5:apply:(Ljava/time/Duration;)Lorg/springframework/boot/web/embedded/netty/NettyServerCustomizer;
      13: aastore
      14: invokevirtual #24                 // Method org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.addServerCustomizers:([Lorg/springframework/boot/web/embedded/netty/NettyServerCustomizer;)V
      17: return

  public void customize(org.springframework.boot.web.server.WebServerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory
       5: invokevirtual #27                 // Method customize:(Lorg/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory;)V
       8: return

  private static reactor.netty.http.server.HttpServer lambda$customizeConnectionTimeout$5(java.time.Duration, reactor.netty.http.server.HttpServer);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #28,  0             // InvokeDynamic #6:apply:(Ljava/time/Duration;)Ljava/util/function/Function;
       7: invokevirtual #29                 // Method reactor/netty/http/server/HttpServer.tcpConfiguration:(Ljava/util/function/Function;)Lreactor/netty/http/server/HttpServer;
      10: areturn

  private static reactor.netty.tcp.TcpServer lambda$null$4(java.time.Duration, reactor.netty.tcp.TcpServer);
    Code:
       0: aload_1
       1: getstatic     #30                 // Field io/netty/channel/ChannelOption.CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
       4: aload_0
       5: invokevirtual #31                 // Method java/time/Duration.toMillis:()J
       8: l2i
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokevirtual #33                 // Method reactor/netty/tcp/TcpServer.selectorOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lreactor/netty/tcp/TcpServer;
      15: areturn

  private static reactor.netty.http.server.HttpServer lambda$customizeMaxHttpHeaderSize$3(org.springframework.util.unit.DataSize, reactor.netty.http.server.HttpServer);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #34,  0             // InvokeDynamic #7:apply:(Lorg/springframework/util/unit/DataSize;)Ljava/util/function/Function;
       7: invokevirtual #35                 // Method reactor/netty/http/server/HttpServer.httpRequestDecoder:(Ljava/util/function/Function;)Lreactor/netty/http/server/HttpServer;
      10: areturn

  private static reactor.netty.http.server.HttpRequestDecoderSpec lambda$null$2(org.springframework.util.unit.DataSize, reactor.netty.http.server.HttpRequestDecoderSpec);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #36                 // Method org/springframework/util/unit/DataSize.toBytes:()J
       5: l2i
       6: invokevirtual #37                 // Method reactor/netty/http/server/HttpRequestDecoderSpec.maxHeaderSize:(I)Lreactor/netty/http/HttpDecoderSpec;
       9: checkcast     #38                 // class reactor/netty/http/server/HttpRequestDecoderSpec
      12: areturn

  private void lambda$customize$1(org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #39                 // Method customizeConnectionTimeout:(Lorg/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory;Ljava/time/Duration;)V
       6: return

  private void lambda$customize$0(org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory, org.springframework.util.unit.DataSize);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #40                 // Method customizeMaxHttpHeaderSize:(Lorg/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory;Lorg/springframework/util/unit/DataSize;)V
       6: return
}
