Compiled from "HibernateProperties.java"
public class org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties {
  private static final java.lang.String DISABLED_SCANNER_CLASS;

  private final org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming naming;

  private java.lang.String ddlAuto;

  private java.lang.Boolean useNewIdGeneratorMappings;

  public org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming
       8: dup
       9: invokespecial #3                  // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming."<init>":()V
      12: putfield      #4                  // Field naming:Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming;
      15: return

  public java.lang.String getDdlAuto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ddlAuto:Ljava/lang/String;
       4: areturn

  public void setDdlAuto(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field ddlAuto:Ljava/lang/String;
       5: return

  public java.lang.Boolean isUseNewIdGeneratorMappings();
    Code:
       0: aload_0
       1: getfield      #6                  // Field useNewIdGeneratorMappings:Ljava/lang/Boolean;
       4: areturn

  public void setUseNewIdGeneratorMappings(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field useNewIdGeneratorMappings:Ljava/lang/Boolean;
       5: return

  public org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming getNaming();
    Code:
       0: aload_0
       1: getfield      #4                  // Field naming:Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> determineHibernateProperties(java.util.Map<java.lang.String, java.lang.String>, org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings);
    Code:
       0: aload_1
       1: ldc           #7                  // String JpaProperties must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #9                  // String Settings must not be null
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #10                 // Method getAdditionalProperties:(Ljava/util/Map;Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;)Ljava/util/Map;
      18: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getAdditionalProperties(java.util.Map<java.lang.String, java.lang.String>, org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings);
    Code:
       0: new           #11                 // class java/util/HashMap
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #13                 // Method applyNewIdGeneratorMappings:(Ljava/util/Map;)V
      14: aload_0
      15: aload_3
      16: invokespecial #14                 // Method applyScanner:(Ljava/util/Map;)V
      19: aload_0
      20: invokevirtual #15                 // Method getNaming:()Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming;
      23: aload_3
      24: invokestatic  #16                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming.access$000:(Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming;Ljava/util/Map;)V
      27: aload_0
      28: aload_1
      29: aload_2
      30: dup
      31: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: pop
      35: invokedynamic #18,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;)Ljava/util/function/Supplier;
      40: invokespecial #19                 // Method determineDdlAuto:(Ljava/util/Map;Ljava/util/function/Supplier;)Ljava/lang/String;
      43: astore        4
      45: aload         4
      47: invokestatic  #20                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      50: ifeq          77
      53: ldc           #21                 // String none
      55: aload         4
      57: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifne          77
      63: aload_3
      64: ldc           #24                 // String hibernate.hbm2ddl.auto
      66: aload         4
      68: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          86
      77: aload_3
      78: ldc           #24                 // String hibernate.hbm2ddl.auto
      80: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload_2
      87: invokevirtual #27                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings.getHibernatePropertiesCustomizers:()Ljava/util/Collection;
      90: astore        5
      92: aload         5
      94: invokestatic  #28                 // Method org/springframework/util/ObjectUtils.isEmpty:(Ljava/lang/Object;)Z
      97: ifne          113
     100: aload         5
     102: aload_3
     103: invokedynamic #29,  0             // InvokeDynamic #1:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
     108: invokeinterface #30,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
     113: aload_3
     114: areturn

  private void applyNewIdGeneratorMappings(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field useNewIdGeneratorMappings:Ljava/lang/Boolean;
       4: ifnull        26
       7: aload_1
       8: ldc           #31                 // String hibernate.id.new_generator_mappings
      10: aload_0
      11: getfield      #6                  // Field useNewIdGeneratorMappings:Ljava/lang/Boolean;
      14: invokevirtual #32                 // Method java/lang/Boolean.toString:()Ljava/lang/String;
      17: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: goto          48
      26: aload_1
      27: ldc           #31                 // String hibernate.id.new_generator_mappings
      29: invokeinterface #33,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      34: ifne          48
      37: aload_1
      38: ldc           #31                 // String hibernate.id.new_generator_mappings
      40: ldc           #34                 // String true
      42: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: return

  private void applyScanner(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #35                 // String hibernate.archive.scanner
       3: invokeinterface #33,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       8: ifne          31
      11: ldc           #37                 // String org.hibernate.boot.archive.scan.internal.DisabledScanner
      13: aconst_null
      14: invokestatic  #38                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      17: ifeq          31
      20: aload_1
      21: ldc           #35                 // String hibernate.archive.scanner
      23: ldc           #37                 // String org.hibernate.boot.archive.scan.internal.DisabledScanner
      25: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  private java.lang.String determineDdlAuto(java.util.Map<java.lang.String, java.lang.String>, java.util.function.Supplier<java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #24                 // String hibernate.hbm2ddl.auto
       3: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #40                 // class java/lang/String
      11: astore_3
      12: aload_3
      13: ifnull        18
      16: aload_3
      17: areturn
      18: aload_0
      19: getfield      #5                  // Field ddlAuto:Ljava/lang/String;
      22: ifnull        32
      25: aload_0
      26: getfield      #5                  // Field ddlAuto:Ljava/lang/String;
      29: goto          41
      32: aload_2
      33: invokeinterface #41,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      38: checkcast     #40                 // class java/lang/String
      41: areturn

  private static void lambda$getAdditionalProperties$0(java.util.Map, org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #42,  2           // InterfaceMethod org/springframework/boot/autoconfigure/orm/jpa/HibernatePropertiesCustomizer.customize:(Ljava/util/Map;)V
       7: return
}
