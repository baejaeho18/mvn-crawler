Compiled from "XADataSourceAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration implements org.springframework.beans.factory.BeanClassLoaderAware {
  private java.lang.ClassLoader classLoader;

  public org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public javax.sql.DataSource dataSource(org.springframework.boot.jdbc.XADataSourceWrapper, org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, org.springframework.beans.factory.ObjectProvider<javax.sql.XADataSource>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_3
       2: aload_0
       3: aload_2
       4: invokedynamic #2,  0              // InvokeDynamic #0:get:(Lorg/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljava/util/function/Supplier;
       9: invokeinterface #3,  2            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #4                  // class javax/sql/XADataSource
      17: invokeinterface #5,  2            // InterfaceMethod org/springframework/boot/jdbc/XADataSourceWrapper.wrapDataSource:(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;
      22: areturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  private javax.sql.XADataSource createXaDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.getXa:()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
       4: invokevirtual #8                  // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa.getDataSourceClassName:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: invokestatic  #9                  // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      12: ifne          26
      15: aload_1
      16: invokevirtual #10                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determineUrl:()Ljava/lang/String;
      19: invokestatic  #11                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromJdbcUrl:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      22: invokevirtual #12                 // Method org/springframework/boot/jdbc/DatabaseDriver.getXaDataSourceClassName:()Ljava/lang/String;
      25: astore_2
      26: aload_2
      27: invokestatic  #9                  // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      30: ldc           #13                 // String No XA DataSource class name specified
      32: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      35: aload_0
      36: aload_2
      37: invokespecial #15                 // Method createXaDataSourceInstance:(Ljava/lang/String;)Ljavax/sql/XADataSource;
      40: astore_3
      41: aload_0
      42: aload_3
      43: aload_1
      44: invokespecial #16                 // Method bindXaProperties:(Ljavax/sql/XADataSource;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)V
      47: aload_3
      48: areturn

  private javax.sql.XADataSource createXaDataSourceInstance(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       5: invokestatic  #17                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: astore_2
       9: aload_2
      10: invokestatic  #18                 // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/Class;)Ljava/lang/Object;
      13: astore_3
      14: ldc           #4                  // class javax/sql/XADataSource
      16: aload_3
      17: invokestatic  #19                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
      20: aload_3
      21: checkcast     #4                  // class javax/sql/XADataSource
      24: areturn
      25: astore_2
      26: new           #21                 // class java/lang/IllegalStateException
      29: dup
      30: new           #22                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #24                 // String Unable to create XADataSource instance from \'
      39: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #26                 // String \'
      48: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/lang/Exception

  private void bindXaProperties(javax.sql.XADataSource, org.springframework.boot.autoconfigure.jdbc.DataSourceProperties);
    Code:
       0: new           #29                 // class org/springframework/boot/context/properties/bind/Binder
       3: dup
       4: iconst_1
       5: anewarray     #30                 // class org/springframework/boot/context/properties/source/ConfigurationPropertySource
       8: dup
       9: iconst_0
      10: aload_0
      11: aload_2
      12: invokespecial #31                 // Method getBinderSource:(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
      15: aastore
      16: invokespecial #32                 // Method org/springframework/boot/context/properties/bind/Binder."<init>":([Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;)V
      19: astore_3
      20: aload_3
      21: getstatic     #33                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      24: aload_1
      25: invokestatic  #34                 // Method org/springframework/boot/context/properties/bind/Bindable.ofInstance:(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/Bindable;
      28: invokevirtual #35                 // Method org/springframework/boot/context/properties/bind/Binder.bind:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
      31: pop
      32: return

  private org.springframework.boot.context.properties.source.ConfigurationPropertySource getBinderSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties);
    Code:
       0: new           #36                 // class java/util/HashMap
       3: dup
       4: invokespecial #37                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #7                  // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.getXa:()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
      13: invokevirtual #38                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa.getProperties:()Ljava/util/Map;
      16: invokeinterface #39,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      21: aload_2
      22: ldc           #40                 // String user
      24: aload_1
      25: invokedynamic #41,  0             // InvokeDynamic #1:apply:(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljava/util/function/Function;
      30: invokeinterface #42,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      35: pop
      36: aload_2
      37: ldc           #43                 // String password
      39: aload_1
      40: invokedynamic #44,  0             // InvokeDynamic #2:apply:(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljava/util/function/Function;
      45: invokeinterface #42,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      50: pop
      51: aload_2
      52: ldc           #45                 // String url
      54: aload_1
      55: invokedynamic #46,  0             // InvokeDynamic #3:apply:(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljava/util/function/Function;
      60: invokeinterface #42,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      65: pop
      66: goto          70
      69: astore_3
      70: new           #48                 // class org/springframework/boot/context/properties/source/MapConfigurationPropertySource
      73: dup
      74: aload_2
      75: invokespecial #49                 // Method org/springframework/boot/context/properties/source/MapConfigurationPropertySource."<init>":(Ljava/util/Map;)V
      78: astore_3
      79: new           #50                 // class org/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases
      82: dup
      83: invokespecial #51                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases."<init>":()V
      86: astore        4
      88: aload         4
      90: ldc           #40                 // String user
      92: iconst_1
      93: anewarray     #52                 // class java/lang/String
      96: dup
      97: iconst_0
      98: ldc           #53                 // String username
     100: aastore
     101: invokevirtual #54                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases.addAliases:(Ljava/lang/String;[Ljava/lang/String;)V
     104: aload_3
     105: aload         4
     107: invokevirtual #55                 // Method org/springframework/boot/context/properties/source/MapConfigurationPropertySource.withAliases:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;
     110: areturn
    Exception table:
       from    to  target type
          51    66    69   Class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException

  private static java.lang.Object lambda$getBinderSource$3(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determineUrl:()Ljava/lang/String;
       4: areturn

  private static java.lang.Object lambda$getBinderSource$2(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determinePassword:()Ljava/lang/String;
       4: areturn

  private static java.lang.Object lambda$getBinderSource$1(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determineUsername:()Ljava/lang/String;
       4: areturn

  private javax.sql.XADataSource lambda$dataSource$0(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method createXaDataSource:(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljavax/sql/XADataSource;
       5: areturn
}
