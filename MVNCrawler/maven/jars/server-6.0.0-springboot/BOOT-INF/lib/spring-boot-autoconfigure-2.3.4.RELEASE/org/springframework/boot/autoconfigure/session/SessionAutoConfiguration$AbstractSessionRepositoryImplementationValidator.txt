Compiled from "SessionAutoConfiguration.java"
abstract class org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$AbstractSessionRepositoryImplementationValidator {
  private final java.util.List<java.lang.String> candidates;

  private final java.lang.ClassLoader classLoader;

  private final org.springframework.boot.autoconfigure.session.SessionProperties sessionProperties;

  org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$AbstractSessionRepositoryImplementationValidator(org.springframework.context.ApplicationContext, org.springframework.boot.autoconfigure.session.SessionProperties, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/springframework/context/ApplicationContext.getClassLoader:()Ljava/lang/ClassLoader;
      11: putfield      #3                  // Field classLoader:Ljava/lang/ClassLoader;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field sessionProperties:Lorg/springframework/boot/autoconfigure/session/SessionProperties;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field candidates:Ljava/util/List;
      24: return

  void checkAvailableImplementations();
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field candidates:Ljava/util/List;
      12: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          46
      27: aload_2
      28: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #11                 // class java/lang/String
      36: astore_3
      37: aload_0
      38: aload_1
      39: aload_3
      40: invokespecial #12                 // Method addCandidateIfAvailable:(Ljava/util/List;Ljava/lang/String;)V
      43: goto          18
      46: aload_0
      47: getfield      #4                  // Field sessionProperties:Lorg/springframework/boot/autoconfigure/session/SessionProperties;
      50: invokevirtual #13                 // Method org/springframework/boot/autoconfigure/session/SessionProperties.getStoreType:()Lorg/springframework/boot/autoconfigure/session/StoreType;
      53: astore_2
      54: aload_1
      55: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      60: iconst_1
      61: if_icmple     77
      64: aload_2
      65: ifnonnull     77
      68: new           #15                 // class org/springframework/boot/autoconfigure/session/NonUniqueSessionRepositoryException
      71: dup
      72: aload_1
      73: invokespecial #16                 // Method org/springframework/boot/autoconfigure/session/NonUniqueSessionRepositoryException."<init>":(Ljava/util/List;)V
      76: athrow
      77: return

  private void addCandidateIfAvailable(java.util.List<java.lang.Class<?>>, java.lang.String);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: getfield      #3                  // Field classLoader:Ljava/lang/ClassLoader;
       6: invokestatic  #17                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
       9: astore_3
      10: aload_3
      11: ifnull        22
      14: aload_1
      15: aload_3
      16: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: goto          26
      25: astore_3
      26: return
    Exception table:
       from    to  target type
           0    22    25   Class java/lang/Throwable
}
