Compiled from "EmbeddedMongoAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration {
  private static final byte[] IP4_LOOPBACK_ADDRESS;

  private static final byte[] IP6_LOOPBACK_ADDRESS;

  private final org.springframework.boot.autoconfigure.mongo.MongoProperties properties;

  public org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration(org.springframework.boot.autoconfigure.mongo.MongoProperties, org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
       9: return

  public de.flapdoodle.embed.mongo.MongodExecutable embeddedMongoServer(de.flapdoodle.embed.mongo.config.IMongodConfig, de.flapdoodle.embed.process.config.IRuntimeConfig, org.springframework.context.ApplicationContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
       4: invokevirtual #3                  // Method org/springframework/boot/autoconfigure/mongo/MongoProperties.getPort:()Ljava/lang/Integer;
       7: astore        4
       9: aload         4
      11: ifnull        22
      14: aload         4
      16: invokevirtual #4                  // Method java/lang/Integer.intValue:()I
      19: ifne          36
      22: aload_0
      23: aload_3
      24: aload_1
      25: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/embed/mongo/config/IMongodConfig.net:()Lde/flapdoodle/embed/mongo/config/Net;
      30: invokevirtual #6                  // Method de/flapdoodle/embed/mongo/config/Net.getPort:()I
      33: invokespecial #7                  // Method setEmbeddedPort:(Lorg/springframework/context/ApplicationContext;I)V
      36: aload_0
      37: aload_2
      38: invokespecial #8                  // Method getMongodStarter:(Lde/flapdoodle/embed/process/config/IRuntimeConfig;)Lde/flapdoodle/embed/mongo/MongodStarter;
      41: astore        5
      43: aload         5
      45: aload_1
      46: invokevirtual #9                  // Method de/flapdoodle/embed/mongo/MongodStarter.prepare:(Lde/flapdoodle/embed/process/config/IExecutableProcessConfig;)Lde/flapdoodle/embed/process/runtime/Executable;
      49: checkcast     #10                 // class de/flapdoodle/embed/mongo/MongodExecutable
      52: areturn

  private de.flapdoodle.embed.mongo.MongodStarter getMongodStarter(de.flapdoodle.embed.process.config.IRuntimeConfig);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #11                 // Method de/flapdoodle/embed/mongo/MongodStarter.getDefaultInstance:()Lde/flapdoodle/embed/mongo/MongodStarter;
       7: areturn
       8: aload_1
       9: invokestatic  #12                 // Method de/flapdoodle/embed/mongo/MongodStarter.getInstance:(Lde/flapdoodle/embed/process/config/IRuntimeConfig;)Lde/flapdoodle/embed/mongo/MongodStarter;
      12: areturn

  public de.flapdoodle.embed.mongo.config.IMongodConfig embeddedMongoConfiguration(org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties) throws java.io.IOException;
    Code:
       0: new           #13                 // class de/flapdoodle/embed/mongo/config/MongodConfigBuilder
       3: dup
       4: invokespecial #14                 // Method de/flapdoodle/embed/mongo/config/MongodConfigBuilder."<init>":()V
       7: aload_0
       8: aload_1
       9: invokespecial #15                 // Method determineVersion:(Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;)Lde/flapdoodle/embed/mongo/distribution/IFeatureAwareVersion;
      12: invokevirtual #16                 // Method de/flapdoodle/embed/mongo/config/MongodConfigBuilder.version:(Lde/flapdoodle/embed/mongo/distribution/IFeatureAwareVersion;)Lde/flapdoodle/embed/mongo/config/MongodConfigBuilder;
      15: astore_2
      16: aload_1
      17: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties.getStorage:()Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage;
      20: astore_3
      21: aload_3
      22: ifnull        76
      25: aload_3
      26: invokevirtual #18                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage.getDatabaseDir:()Ljava/lang/String;
      29: astore        4
      31: aload_3
      32: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage.getReplSetName:()Ljava/lang/String;
      35: astore        5
      37: aload_3
      38: invokevirtual #20                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage.getOplogSize:()Lorg/springframework/util/unit/DataSize;
      41: ifnull        55
      44: aload_3
      45: invokevirtual #20                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage.getOplogSize:()Lorg/springframework/util/unit/DataSize;
      48: invokevirtual #21                 // Method org/springframework/util/unit/DataSize.toMegabytes:()J
      51: l2i
      52: goto          56
      55: iconst_0
      56: istore        6
      58: aload_2
      59: new           #22                 // class de/flapdoodle/embed/mongo/config/Storage
      62: dup
      63: aload         4
      65: aload         5
      67: iload         6
      69: invokespecial #23                 // Method de/flapdoodle/embed/mongo/config/Storage."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
      72: invokevirtual #24                 // Method de/flapdoodle/embed/mongo/config/MongodConfigBuilder.replication:(Lde/flapdoodle/embed/mongo/config/Storage;)Lde/flapdoodle/embed/mongo/config/MongodConfigBuilder;
      75: pop
      76: aload_0
      77: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
      80: invokevirtual #3                  // Method org/springframework/boot/autoconfigure/mongo/MongoProperties.getPort:()Ljava/lang/Integer;
      83: astore        4
      85: aload         4
      87: ifnull        128
      90: aload         4
      92: invokevirtual #4                  // Method java/lang/Integer.intValue:()I
      95: ifle          128
      98: aload_2
      99: new           #25                 // class de/flapdoodle/embed/mongo/config/Net
     102: dup
     103: aload_0
     104: invokespecial #26                 // Method getHost:()Ljava/net/InetAddress;
     107: invokevirtual #27                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     110: aload         4
     112: invokevirtual #4                  // Method java/lang/Integer.intValue:()I
     115: invokestatic  #28                 // Method de/flapdoodle/embed/process/runtime/Network.localhostIsIPv6:()Z
     118: invokespecial #29                 // Method de/flapdoodle/embed/mongo/config/Net."<init>":(Ljava/lang/String;IZ)V
     121: invokevirtual #30                 // Method de/flapdoodle/embed/mongo/config/MongodConfigBuilder.net:(Lde/flapdoodle/embed/mongo/config/Net;)Lde/flapdoodle/embed/mongo/config/MongodConfigBuilder;
     124: pop
     125: goto          157
     128: aload_2
     129: new           #25                 // class de/flapdoodle/embed/mongo/config/Net
     132: dup
     133: aload_0
     134: invokespecial #26                 // Method getHost:()Ljava/net/InetAddress;
     137: invokevirtual #27                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     140: aload_0
     141: invokespecial #26                 // Method getHost:()Ljava/net/InetAddress;
     144: invokestatic  #31                 // Method de/flapdoodle/embed/process/runtime/Network.getFreeServerPort:(Ljava/net/InetAddress;)I
     147: invokestatic  #28                 // Method de/flapdoodle/embed/process/runtime/Network.localhostIsIPv6:()Z
     150: invokespecial #29                 // Method de/flapdoodle/embed/mongo/config/Net."<init>":(Ljava/lang/String;IZ)V
     153: invokevirtual #30                 // Method de/flapdoodle/embed/mongo/config/MongodConfigBuilder.net:(Lde/flapdoodle/embed/mongo/config/Net;)Lde/flapdoodle/embed/mongo/config/MongodConfigBuilder;
     156: pop
     157: aload_2
     158: invokevirtual #32                 // Method de/flapdoodle/embed/mongo/config/MongodConfigBuilder.build:()Lde/flapdoodle/embed/mongo/config/IMongodConfig;
     161: areturn

  private de.flapdoodle.embed.mongo.distribution.IFeatureAwareVersion determineVersion(org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties.getFeatures:()Ljava/util/Set;
       4: ifnonnull     72
       7: invokestatic  #34                 // Method de/flapdoodle/embed/mongo/distribution/Version.values:()[Lde/flapdoodle/embed/mongo/distribution/Version;
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_3
      20: if_icmpge     53
      23: aload_2
      24: iload         4
      26: aaload
      27: astore        5
      29: aload         5
      31: invokevirtual #35                 // Method de/flapdoodle/embed/mongo/distribution/Version.asInDownloadPath:()Ljava/lang/String;
      34: aload_1
      35: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties.getVersion:()Ljava/lang/String;
      38: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          47
      44: aload         5
      46: areturn
      47: iinc          4, 1
      50: goto          17
      53: new           #38                 // class de/flapdoodle/embed/process/distribution/GenericVersion
      56: dup
      57: aload_1
      58: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties.getVersion:()Ljava/lang/String;
      61: invokespecial #39                 // Method de/flapdoodle/embed/process/distribution/GenericVersion."<init>":(Ljava/lang/String;)V
      64: iconst_0
      65: anewarray     #40                 // class de/flapdoodle/embed/mongo/distribution/Feature
      68: invokestatic  #41                 // Method de/flapdoodle/embed/mongo/distribution/Versions.withFeatures:(Lde/flapdoodle/embed/process/distribution/IVersion;[Lde/flapdoodle/embed/mongo/distribution/Feature;)Lde/flapdoodle/embed/mongo/distribution/IFeatureAwareVersion;
      71: areturn
      72: new           #38                 // class de/flapdoodle/embed/process/distribution/GenericVersion
      75: dup
      76: aload_1
      77: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties.getVersion:()Ljava/lang/String;
      80: invokespecial #39                 // Method de/flapdoodle/embed/process/distribution/GenericVersion."<init>":(Ljava/lang/String;)V
      83: aload_1
      84: invokevirtual #33                 // Method org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties.getFeatures:()Ljava/util/Set;
      87: iconst_0
      88: anewarray     #40                 // class de/flapdoodle/embed/mongo/distribution/Feature
      91: invokeinterface #42,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      96: checkcast     #43                 // class "[Lde/flapdoodle/embed/mongo/distribution/Feature;"
      99: invokestatic  #41                 // Method de/flapdoodle/embed/mongo/distribution/Versions.withFeatures:(Lde/flapdoodle/embed/process/distribution/IVersion;[Lde/flapdoodle/embed/mongo/distribution/Feature;)Lde/flapdoodle/embed/mongo/distribution/IFeatureAwareVersion;
     102: areturn

  private java.net.InetAddress getHost() throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
       4: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/mongo/MongoProperties.getHost:()Ljava/lang/String;
       7: ifnonnull     29
      10: invokestatic  #28                 // Method de/flapdoodle/embed/process/runtime/Network.localhostIsIPv6:()Z
      13: ifeq          22
      16: getstatic     #45                 // Field IP6_LOOPBACK_ADDRESS:[B
      19: goto          25
      22: getstatic     #46                 // Field IP4_LOOPBACK_ADDRESS:[B
      25: invokestatic  #47                 // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
      28: areturn
      29: aload_0
      30: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
      33: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/mongo/MongoProperties.getHost:()Ljava/lang/String;
      36: invokestatic  #48                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      39: areturn

  private void setEmbeddedPort(org.springframework.context.ApplicationContext, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #49                 // Method setPortProperty:(Lorg/springframework/context/ApplicationContext;I)V
       6: return

  private void setPortProperty(org.springframework.context.ApplicationContext, int);
    Code:
       0: aload_1
       1: instanceof    #50                 // class org/springframework/context/ConfigurableApplicationContext
       4: ifeq          39
       7: aload_1
       8: checkcast     #50                 // class org/springframework/context/ConfigurableApplicationContext
      11: invokeinterface #51,  1           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.getEnvironment:()Lorg/springframework/core/env/ConfigurableEnvironment;
      16: invokeinterface #52,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      21: astore_3
      22: aload_0
      23: aload_3
      24: invokespecial #53                 // Method getMongoPorts:(Lorg/springframework/core/env/MutablePropertySources;)Ljava/util/Map;
      27: ldc           #54                 // String local.mongo.port
      29: iload_2
      30: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_1
      40: invokeinterface #57,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getParent:()Lorg/springframework/context/ApplicationContext;
      45: ifnull        59
      48: aload_0
      49: aload_1
      50: invokeinterface #57,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getParent:()Lorg/springframework/context/ApplicationContext;
      55: iload_2
      56: invokespecial #49                 // Method setPortProperty:(Lorg/springframework/context/ApplicationContext;I)V
      59: return

  private java.util.Map<java.lang.String, java.lang.Object> getMongoPorts(org.springframework.core.env.MutablePropertySources);
    Code:
       0: aload_1
       1: ldc           #58                 // String mongo.ports
       3: invokevirtual #59                 // Method org/springframework/core/env/MutablePropertySources.get:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       6: astore_2
       7: aload_2
       8: ifnonnull     33
      11: new           #60                 // class org/springframework/core/env/MapPropertySource
      14: dup
      15: ldc           #58                 // String mongo.ports
      17: new           #61                 // class java/util/HashMap
      20: dup
      21: invokespecial #62                 // Method java/util/HashMap."<init>":()V
      24: invokespecial #63                 // Method org/springframework/core/env/MapPropertySource."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      27: astore_2
      28: aload_1
      29: aload_2
      30: invokevirtual #64                 // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
      33: aload_2
      34: invokevirtual #65                 // Method org/springframework/core/env/PropertySource.getSource:()Ljava/lang/Object;
      37: checkcast     #66                 // class java/util/Map
      40: areturn

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        127
       7: bastore
       8: dup
       9: iconst_1
      10: iconst_0
      11: bastore
      12: dup
      13: iconst_2
      14: iconst_0
      15: bastore
      16: dup
      17: iconst_3
      18: iconst_1
      19: bastore
      20: putstatic     #46                 // Field IP4_LOOPBACK_ADDRESS:[B
      23: bipush        16
      25: newarray       byte
      27: dup
      28: iconst_0
      29: iconst_0
      30: bastore
      31: dup
      32: iconst_1
      33: iconst_0
      34: bastore
      35: dup
      36: iconst_2
      37: iconst_0
      38: bastore
      39: dup
      40: iconst_3
      41: iconst_0
      42: bastore
      43: dup
      44: iconst_4
      45: iconst_0
      46: bastore
      47: dup
      48: iconst_5
      49: iconst_0
      50: bastore
      51: dup
      52: bipush        6
      54: iconst_0
      55: bastore
      56: dup
      57: bipush        7
      59: iconst_0
      60: bastore
      61: dup
      62: bipush        8
      64: iconst_0
      65: bastore
      66: dup
      67: bipush        9
      69: iconst_0
      70: bastore
      71: dup
      72: bipush        10
      74: iconst_0
      75: bastore
      76: dup
      77: bipush        11
      79: iconst_0
      80: bastore
      81: dup
      82: bipush        12
      84: iconst_0
      85: bastore
      86: dup
      87: bipush        13
      89: iconst_0
      90: bastore
      91: dup
      92: bipush        14
      94: iconst_0
      95: bastore
      96: dup
      97: bipush        15
      99: iconst_1
     100: bastore
     101: putstatic     #45                 // Field IP6_LOOPBACK_ADDRESS:[B
     104: return
}
