Compiled from "KafkaProperties.java"
public class org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener {
  private org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type type;

  private org.springframework.kafka.listener.ContainerProperties$AckMode ackMode;

  private java.lang.String clientId;

  private java.lang.Integer concurrency;

  private java.time.Duration pollTimeout;

  private java.lang.Float noPollThreshold;

  private java.lang.Integer ackCount;

  private java.time.Duration ackTime;

  private java.time.Duration idleEventInterval;

  private java.time.Duration monitorInterval;

  private java.lang.Boolean logContainerConfig;

  private boolean missingTopicsFatal;

  public org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type.SINGLE:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
       8: putfield      #3                  // Field type:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field missingTopicsFatal:Z
      16: return

  public org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
       4: areturn

  public void setType(org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field type:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
       5: return

  public org.springframework.kafka.listener.ContainerProperties$AckMode getAckMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ackMode:Lorg/springframework/kafka/listener/ContainerProperties$AckMode;
       4: areturn

  public void setAckMode(org.springframework.kafka.listener.ContainerProperties$AckMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field ackMode:Lorg/springframework/kafka/listener/ContainerProperties$AckMode;
       5: return

  public java.lang.String getClientId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field clientId:Ljava/lang/String;
       4: areturn

  public void setClientId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field clientId:Ljava/lang/String;
       5: return

  public java.lang.Integer getConcurrency();
    Code:
       0: aload_0
       1: getfield      #7                  // Field concurrency:Ljava/lang/Integer;
       4: areturn

  public void setConcurrency(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field concurrency:Ljava/lang/Integer;
       5: return

  public java.time.Duration getPollTimeout();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pollTimeout:Ljava/time/Duration;
       4: areturn

  public void setPollTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field pollTimeout:Ljava/time/Duration;
       5: return

  public java.lang.Float getNoPollThreshold();
    Code:
       0: aload_0
       1: getfield      #9                  // Field noPollThreshold:Ljava/lang/Float;
       4: areturn

  public void setNoPollThreshold(java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field noPollThreshold:Ljava/lang/Float;
       5: return

  public java.lang.Integer getAckCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ackCount:Ljava/lang/Integer;
       4: areturn

  public void setAckCount(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field ackCount:Ljava/lang/Integer;
       5: return

  public java.time.Duration getAckTime();
    Code:
       0: aload_0
       1: getfield      #11                 // Field ackTime:Ljava/time/Duration;
       4: areturn

  public void setAckTime(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field ackTime:Ljava/time/Duration;
       5: return

  public java.time.Duration getIdleEventInterval();
    Code:
       0: aload_0
       1: getfield      #12                 // Field idleEventInterval:Ljava/time/Duration;
       4: areturn

  public void setIdleEventInterval(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field idleEventInterval:Ljava/time/Duration;
       5: return

  public java.time.Duration getMonitorInterval();
    Code:
       0: aload_0
       1: getfield      #13                 // Field monitorInterval:Ljava/time/Duration;
       4: areturn

  public void setMonitorInterval(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field monitorInterval:Ljava/time/Duration;
       5: return

  public java.lang.Boolean getLogContainerConfig();
    Code:
       0: aload_0
       1: getfield      #14                 // Field logContainerConfig:Ljava/lang/Boolean;
       4: areturn

  public void setLogContainerConfig(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field logContainerConfig:Ljava/lang/Boolean;
       5: return

  public boolean isMissingTopicsFatal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field missingTopicsFatal:Z
       4: ireturn

  public void setMissingTopicsFatal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field missingTopicsFatal:Z
       5: return
}
