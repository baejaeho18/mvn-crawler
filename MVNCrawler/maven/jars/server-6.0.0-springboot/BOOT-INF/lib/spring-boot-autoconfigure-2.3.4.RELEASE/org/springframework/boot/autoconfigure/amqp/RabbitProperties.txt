Compiled from "RabbitProperties.java"
public class org.springframework.boot.autoconfigure.amqp.RabbitProperties {
  private static final int DEFAULT_PORT;

  private static final int DEFAULT_PORT_SECURE;

  private java.lang.String host;

  private java.lang.Integer port;

  private java.lang.String username;

  private java.lang.String password;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl ssl;

  private java.lang.String virtualHost;

  private java.lang.String addresses;

  private java.time.Duration requestedHeartbeat;

  private int requestedChannelMax;

  private boolean publisherReturns;

  private org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ConfirmType publisherConfirmType;

  private java.time.Duration connectionTimeout;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache cache;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener listener;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template template;

  private java.util.List<org.springframework.boot.autoconfigure.amqp.RabbitProperties$Address> parsedAddresses;

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String localhost
       7: putfield      #4                  // Field host:Ljava/lang/String;
      10: aload_0
      11: ldc           #5                  // String guest
      13: putfield      #6                  // Field username:Ljava/lang/String;
      16: aload_0
      17: ldc           #5                  // String guest
      19: putfield      #7                  // Field password:Ljava/lang/String;
      22: aload_0
      23: new           #8                  // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl
      26: dup
      27: aload_0
      28: invokespecial #9                  // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl."<init>":(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
      31: putfield      #10                 // Field ssl:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
      34: aload_0
      35: sipush        2047
      38: putfield      #11                 // Field requestedChannelMax:I
      41: aload_0
      42: new           #12                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache
      45: dup
      46: invokespecial #13                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache."<init>":()V
      49: putfield      #14                 // Field cache:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache;
      52: aload_0
      53: new           #15                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener
      56: dup
      57: invokespecial #16                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener."<init>":()V
      60: putfield      #17                 // Field listener:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener;
      63: aload_0
      64: new           #18                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template
      67: dup
      68: invokespecial #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template."<init>":()V
      71: putfield      #20                 // Field template:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
      74: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #4                  // Field host:Ljava/lang/String;
       4: areturn

  public java.lang.String determineHost();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #21                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #22                 // Method getHost:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: invokestatic  #25                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$000:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      31: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field host:Ljava/lang/String;
       5: return

  public java.lang.Integer getPort();
    Code:
       0: aload_0
       1: getfield      #26                 // Field port:Ljava/lang/Integer;
       4: areturn

  public int determinePort();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #21                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          60
      10: aload_0
      11: invokevirtual #27                 // Method getPort:()Ljava/lang/Integer;
      14: astore_1
      15: aload_1
      16: ifnull        24
      19: aload_1
      20: invokevirtual #28                 // Method java/lang/Integer.intValue:()I
      23: ireturn
      24: aload_0
      25: invokevirtual #29                 // Method getSsl:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
      28: invokevirtual #30                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl.getEnabled:()Ljava/lang/Boolean;
      31: invokestatic  #31                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      34: iconst_0
      35: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: invokevirtual #33                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #34                 // class java/lang/Boolean
      44: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      47: ifeq          56
      50: sipush        5671
      53: goto          59
      56: sipush        5672
      59: ireturn
      60: aload_0
      61: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
      64: iconst_0
      65: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      70: checkcast     #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      73: invokestatic  #37                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$100:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)I
      76: ireturn

  public void setPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field port:Ljava/lang/Integer;
       5: return

  public java.lang.String getAddresses();
    Code:
       0: aload_0
       1: getfield      #38                 // Field addresses:Ljava/lang/String;
       4: areturn

  public java.lang.String determineAddresses();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #21                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          40
      10: new           #39                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_0
      18: getfield      #4                  // Field host:Ljava/lang/String;
      21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #42                 // String :
      26: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #43                 // Method determinePort:()I
      33: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
      40: new           #46                 // class java/util/ArrayList
      43: dup
      44: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
      47: astore_1
      48: aload_0
      49: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
      52: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_2
      58: aload_2
      59: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          116
      67: aload_2
      68: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      76: astore_3
      77: aload_1
      78: new           #39                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      85: aload_3
      86: invokestatic  #25                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$000:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      89: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #42                 // String :
      94: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_3
      98: invokestatic  #37                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$100:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)I
     101: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          58
     116: aload_1
     117: invokestatic  #52                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
     120: areturn

  public void setAddresses(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field addresses:Ljava/lang/String;
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokespecial #53                 // Method parseAddresses:(Ljava/lang/String;)Ljava/util/List;
      11: putfield      #1                  // Field parsedAddresses:Ljava/util/List;
      14: return

  private java.util.List<org.springframework.boot.autoconfigure.amqp.RabbitProperties$Address> parseAddresses(java.lang.String);
    Code:
       0: new           #46                 // class java/util/ArrayList
       3: dup
       4: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokestatic  #54                 // Method org/springframework/util/StringUtils.commaDelimitedListToStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: arraylength
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     79
      27: aload_3
      28: iload         5
      30: aaload
      31: astore        6
      33: aload_2
      34: new           #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      37: dup
      38: aload         6
      40: aload_0
      41: invokevirtual #29                 // Method getSsl:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
      44: invokevirtual #30                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl.getEnabled:()Ljava/lang/Boolean;
      47: invokestatic  #31                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      50: iconst_0
      51: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      54: invokevirtual #33                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #34                 // class java/lang/Boolean
      60: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      63: aconst_null
      64: invokespecial #55                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address."<init>":(Ljava/lang/String;ZLorg/springframework/boot/autoconfigure/amqp/RabbitProperties$1;)V
      67: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: iinc          5, 1
      76: goto          20
      79: aload_2
      80: areturn

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #6                  // Field username:Ljava/lang/String;
       4: areturn

  public java.lang.String determineUsername();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #21                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #6                  // Field username:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #56                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$300:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      33: ifnull        43
      36: aload_1
      37: invokestatic  #56                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$300:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: getfield      #6                  // Field username:Ljava/lang/String;
      47: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field username:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #7                  // Field password:Ljava/lang/String;
       4: areturn

  public java.lang.String determinePassword();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #21                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #57                 // Method getPassword:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #58                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$400:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      33: ifnull        43
      36: aload_1
      37: invokestatic  #58                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$400:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: invokevirtual #57                 // Method getPassword:()Ljava/lang/String;
      47: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field password:Ljava/lang/String;
       5: return

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl getSsl();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ssl:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
       4: areturn

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: getfield      #59                 // Field virtualHost:Ljava/lang/String;
       4: areturn

  public java.lang.String determineVirtualHost();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #21                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #60                 // Method getVirtualHost:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #24                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #61                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$500:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      33: ifnull        43
      36: aload_1
      37: invokestatic  #61                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$500:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: invokevirtual #60                 // Method getVirtualHost:()Ljava/lang/String;
      47: areturn

  public void setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #62                 // String
       3: aload_1
       4: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       7: ifeq          15
      10: ldc           #64                 // String /
      12: goto          16
      15: aload_1
      16: putfield      #59                 // Field virtualHost:Ljava/lang/String;
      19: return

  public java.time.Duration getRequestedHeartbeat();
    Code:
       0: aload_0
       1: getfield      #65                 // Field requestedHeartbeat:Ljava/time/Duration;
       4: areturn

  public void setRequestedHeartbeat(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field requestedHeartbeat:Ljava/time/Duration;
       5: return

  public int getRequestedChannelMax();
    Code:
       0: aload_0
       1: getfield      #11                 // Field requestedChannelMax:I
       4: ireturn

  public void setRequestedChannelMax(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field requestedChannelMax:I
       5: return

  public boolean isPublisherReturns();
    Code:
       0: aload_0
       1: getfield      #66                 // Field publisherReturns:Z
       4: ireturn

  public void setPublisherReturns(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field publisherReturns:Z
       5: return

  public java.time.Duration getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #67                 // Field connectionTimeout:Ljava/time/Duration;
       4: areturn

  public void setPublisherConfirmType(org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ConfirmType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field publisherConfirmType:Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory$ConfirmType;
       5: return

  public org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ConfirmType getPublisherConfirmType();
    Code:
       0: aload_0
       1: getfield      #68                 // Field publisherConfirmType:Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory$ConfirmType;
       4: areturn

  public void setConnectionTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field connectionTimeout:Ljava/time/Duration;
       5: return

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache getCache();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache;
       4: areturn

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener getListener();
    Code:
       0: aload_0
       1: getfield      #17                 // Field listener:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener;
       4: areturn

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template getTemplate();
    Code:
       0: aload_0
       1: getfield      #20                 // Field template:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
       4: areturn

  static java.util.List access$600(org.springframework.boot.autoconfigure.amqp.RabbitProperties);
    Code:
       0: aload_0
       1: getfield      #1                  // Field parsedAddresses:Ljava/util/List;
       4: areturn
}
