Compiled from "MongoReactiveDataAutoConfiguration.java"
class org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration$GridFsReactiveMongoDatabaseFactory implements org.springframework.data.mongodb.ReactiveMongoDatabaseFactory {
  private final org.springframework.data.mongodb.ReactiveMongoDatabaseFactory delegate;

  private final org.springframework.boot.autoconfigure.mongo.MongoProperties properties;

  org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration$GridFsReactiveMongoDatabaseFactory(org.springframework.data.mongodb.ReactiveMongoDatabaseFactory, org.springframework.boot.autoconfigure.mongo.MongoProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
      14: return

  public boolean hasCodecFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.hasCodecFor:(Ljava/lang/Class;)Z
      10: ireturn

  public reactor.core.publisher.Mono<com.mongodb.reactivestreams.client.MongoDatabase> getMongoDatabase() throws org.springframework.dao.DataAccessException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field properties:Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;
       4: invokevirtual #5                  // Method org/springframework/boot/autoconfigure/mongo/MongoProperties.getGridFsDatabase:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #6                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      12: ifeq          26
      15: aload_0
      16: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
      19: aload_1
      20: invokeinterface #7,  2            // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getMongoDatabase:(Ljava/lang/String;)Lreactor/core/publisher/Mono;
      25: areturn
      26: aload_0
      27: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
      30: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getMongoDatabase:()Lreactor/core/publisher/Mono;
      35: areturn

  public reactor.core.publisher.Mono<com.mongodb.reactivestreams.client.MongoDatabase> getMongoDatabase(java.lang.String) throws org.springframework.dao.DataAccessException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getMongoDatabase:(Ljava/lang/String;)Lreactor/core/publisher/Mono;
      10: areturn

  public <T> java.util.Optional<org.bson.codecs.Codec<T>> getCodecFor(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getCodecFor:(Ljava/lang/Class;)Ljava/util/Optional;
      10: areturn

  public org.springframework.dao.support.PersistenceExceptionTranslator getExceptionTranslator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: invokeinterface #10,  1           // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getExceptionTranslator:()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
       9: areturn

  public org.bson.codecs.configuration.CodecRegistry getCodecRegistry();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: invokeinterface #11,  1           // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
       9: areturn

  public reactor.core.publisher.Mono<com.mongodb.reactivestreams.client.ClientSession> getSession(com.mongodb.ClientSessionOptions);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.getSession:(Lcom/mongodb/ClientSessionOptions;)Lreactor/core/publisher/Mono;
      10: areturn

  public org.springframework.data.mongodb.ReactiveMongoDatabaseFactory withSession(com.mongodb.reactivestreams.client.ClientSession);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.withSession:(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
      10: areturn

  public boolean isTransactionActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
       4: invokeinterface #14,  1           // InterfaceMethod org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.isTransactionActive:()Z
       9: ireturn
}
