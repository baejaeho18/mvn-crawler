Compiled from "BatchConfigurerConfiguration.java"
class org.springframework.boot.autoconfigure.batch.BatchConfigurerConfiguration$JpaBatchConfiguration {
  org.springframework.boot.autoconfigure.batch.BatchConfigurerConfiguration$JpaBatchConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  org.springframework.boot.autoconfigure.batch.JpaBatchConfigurer batchConfigurer(org.springframework.boot.autoconfigure.batch.BatchProperties, javax.sql.DataSource, org.springframework.beans.factory.ObjectProvider<javax.sql.DataSource>, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers>, javax.persistence.EntityManagerFactory);
    Code:
       0: new           #2                  // class org/springframework/boot/autoconfigure/batch/JpaBatchConfigurer
       3: dup
       4: aload_1
       5: aload_3
       6: aload_2
       7: invokedynamic #3,  0              // InvokeDynamic #0:get:(Ljavax/sql/DataSource;)Ljava/util/function/Supplier;
      12: invokeinterface #4,  2            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      17: checkcast     #5                  // class javax/sql/DataSource
      20: aload         4
      22: invokeinterface #6,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      27: checkcast     #7                  // class org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers
      30: aload         5
      32: invokespecial #8                  // Method org/springframework/boot/autoconfigure/batch/JpaBatchConfigurer."<init>":(Lorg/springframework/boot/autoconfigure/batch/BatchProperties;Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers;Ljavax/persistence/EntityManagerFactory;)V
      35: areturn

  private static javax.sql.DataSource lambda$batchConfigurer$0(javax.sql.DataSource);
    Code:
       0: aload_0
       1: areturn
}
