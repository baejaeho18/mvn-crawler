Compiled from "AbstractRabbitListenerContainerFactoryConfigurer.java"
public abstract class org.springframework.boot.autoconfigure.amqp.AbstractRabbitListenerContainerFactoryConfigurer<T extends org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory<?>> {
  private org.springframework.amqp.support.converter.MessageConverter messageConverter;

  private org.springframework.amqp.rabbit.retry.MessageRecoverer messageRecoverer;

  private java.util.List<org.springframework.boot.autoconfigure.amqp.RabbitRetryTemplateCustomizer> retryTemplateCustomizers;

  private org.springframework.boot.autoconfigure.amqp.RabbitProperties rabbitProperties;

  public org.springframework.boot.autoconfigure.amqp.AbstractRabbitListenerContainerFactoryConfigurer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected void setMessageConverter(org.springframework.amqp.support.converter.MessageConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field messageConverter:Lorg/springframework/amqp/support/converter/MessageConverter;
       5: return

  protected void setMessageRecoverer(org.springframework.amqp.rabbit.retry.MessageRecoverer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field messageRecoverer:Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;
       5: return

  protected void setRetryTemplateCustomizers(java.util.List<org.springframework.boot.autoconfigure.amqp.RabbitRetryTemplateCustomizer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field retryTemplateCustomizers:Ljava/util/List;
       5: return

  protected void setRabbitProperties(org.springframework.boot.autoconfigure.amqp.RabbitProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field rabbitProperties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
       5: return

  protected final org.springframework.boot.autoconfigure.amqp.RabbitProperties getRabbitProperties();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rabbitProperties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
       4: areturn

  public abstract void configure(T, org.springframework.amqp.rabbit.connection.ConnectionFactory);

  protected void configure(T, org.springframework.amqp.rabbit.connection.ConnectionFactory, org.springframework.boot.autoconfigure.amqp.RabbitProperties$AmqpContainer);
    Code:
       0: aload_1
       1: ldc           #6                  // String Factory must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #8                  // String ConnectionFactory must not be null
       9: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #9                  // String Configuration must not be null
      15: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: invokevirtual #10                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setConnectionFactory:(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
      23: aload_0
      24: getfield      #2                  // Field messageConverter:Lorg/springframework/amqp/support/converter/MessageConverter;
      27: ifnull        38
      30: aload_1
      31: aload_0
      32: getfield      #2                  // Field messageConverter:Lorg/springframework/amqp/support/converter/MessageConverter;
      35: invokevirtual #11                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setMessageConverter:(Lorg/springframework/amqp/support/converter/MessageConverter;)V
      38: aload_1
      39: aload_3
      40: invokevirtual #12                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.isAutoStartup:()Z
      43: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: invokevirtual #14                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setAutoStartup:(Ljava/lang/Boolean;)V
      49: aload_3
      50: invokevirtual #15                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getAcknowledgeMode:()Lorg/springframework/amqp/core/AcknowledgeMode;
      53: ifnull        64
      56: aload_1
      57: aload_3
      58: invokevirtual #15                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getAcknowledgeMode:()Lorg/springframework/amqp/core/AcknowledgeMode;
      61: invokevirtual #16                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setAcknowledgeMode:(Lorg/springframework/amqp/core/AcknowledgeMode;)V
      64: aload_3
      65: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getPrefetch:()Ljava/lang/Integer;
      68: ifnull        79
      71: aload_1
      72: aload_3
      73: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getPrefetch:()Ljava/lang/Integer;
      76: invokevirtual #18                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setPrefetchCount:(Ljava/lang/Integer;)V
      79: aload_3
      80: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getDefaultRequeueRejected:()Ljava/lang/Boolean;
      83: ifnull        94
      86: aload_1
      87: aload_3
      88: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getDefaultRequeueRejected:()Ljava/lang/Boolean;
      91: invokevirtual #20                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setDefaultRequeueRejected:(Ljava/lang/Boolean;)V
      94: aload_3
      95: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getIdleEventInterval:()Ljava/time/Duration;
      98: ifnull        115
     101: aload_1
     102: aload_3
     103: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getIdleEventInterval:()Ljava/time/Duration;
     106: invokevirtual #22                 // Method java/time/Duration.toMillis:()J
     109: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     112: invokevirtual #24                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setIdleEventInterval:(Ljava/lang/Long;)V
     115: aload_1
     116: aload_3
     117: invokevirtual #25                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.isMissingQueuesFatal:()Z
     120: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     123: invokevirtual #26                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setMissingQueuesFatal:(Ljava/lang/Boolean;)V
     126: aload_3
     127: invokevirtual #27                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getRetry:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry;
     130: astore        4
     132: aload         4
     134: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.isEnabled:()Z
     137: ifeq          235
     140: aload         4
     142: invokevirtual #29                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.isStateless:()Z
     145: ifeq          154
     148: invokestatic  #30                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.stateless:()Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder$StatelessRetryInterceptorBuilder;
     151: goto          157
     154: invokestatic  #31                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.stateful:()Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder$StatefulRetryInterceptorBuilder;
     157: astore        5
     159: new           #32                 // class org/springframework/boot/autoconfigure/amqp/RetryTemplateFactory
     162: dup
     163: aload_0
     164: getfield      #4                  // Field retryTemplateCustomizers:Ljava/util/List;
     167: invokespecial #33                 // Method org/springframework/boot/autoconfigure/amqp/RetryTemplateFactory."<init>":(Ljava/util/List;)V
     170: aload         4
     172: getstatic     #34                 // Field org/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target.LISTENER:Lorg/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target;
     175: invokevirtual #35                 // Method org/springframework/boot/autoconfigure/amqp/RetryTemplateFactory.createRetryTemplate:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry;Lorg/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target;)Lorg/springframework/retry/support/RetryTemplate;
     178: astore        6
     180: aload         5
     182: aload         6
     184: invokevirtual #36                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.retryOperations:(Lorg/springframework/retry/RetryOperations;)Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder;
     187: pop
     188: aload_0
     189: getfield      #3                  // Field messageRecoverer:Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;
     192: ifnull        202
     195: aload_0
     196: getfield      #3                  // Field messageRecoverer:Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;
     199: goto          209
     202: new           #37                 // class org/springframework/amqp/rabbit/retry/RejectAndDontRequeueRecoverer
     205: dup
     206: invokespecial #38                 // Method org/springframework/amqp/rabbit/retry/RejectAndDontRequeueRecoverer."<init>":()V
     209: astore        7
     211: aload         5
     213: aload         7
     215: invokevirtual #39                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.recoverer:(Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;)Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder;
     218: pop
     219: aload_1
     220: iconst_1
     221: anewarray     #40                 // class org/aopalliance/aop/Advice
     224: dup
     225: iconst_0
     226: aload         5
     228: invokevirtual #41                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.build:()Lorg/aopalliance/intercept/MethodInterceptor;
     231: aastore
     232: invokevirtual #42                 // Method org/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory.setAdviceChain:([Lorg/aopalliance/aop/Advice;)V
     235: return
}
