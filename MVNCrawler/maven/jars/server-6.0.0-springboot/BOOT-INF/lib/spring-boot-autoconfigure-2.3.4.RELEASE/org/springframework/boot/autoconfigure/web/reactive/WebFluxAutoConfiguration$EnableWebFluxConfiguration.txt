Compiled from "WebFluxAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration extends org.springframework.web.reactive.config.DelegatingWebFluxConfiguration {
  private final org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties webFluxProperties;

  private final org.springframework.boot.autoconfigure.web.reactive.WebFluxRegistrations webFluxRegistrations;

  public org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration(org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.autoconfigure.web.reactive.WebFluxRegistrations>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/reactive/config/DelegatingWebFluxConfiguration."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field webFluxProperties:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;
       9: aload_0
      10: aload_2
      11: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      16: checkcast     #4                  // class org/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations
      19: putfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
      22: return

  public org.springframework.format.support.FormattingConversionService webFluxConversionService();
    Code:
       0: aload_0
       1: getfield      #2                  // Field webFluxProperties:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;
       4: invokevirtual #6                  // Method org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties.getFormat:()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Format;
       7: astore_1
       8: new           #7                  // class org/springframework/boot/autoconfigure/web/format/WebConversionService
      11: dup
      12: new           #8                  // class org/springframework/boot/autoconfigure/web/format/DateTimeFormatters
      15: dup
      16: invokespecial #9                  // Method org/springframework/boot/autoconfigure/web/format/DateTimeFormatters."<init>":()V
      19: aload_1
      20: invokevirtual #10                 // Method org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Format.getDate:()Ljava/lang/String;
      23: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/web/format/DateTimeFormatters.dateFormat:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;
      26: aload_1
      27: invokevirtual #12                 // Method org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Format.getTime:()Ljava/lang/String;
      30: invokevirtual #13                 // Method org/springframework/boot/autoconfigure/web/format/DateTimeFormatters.timeFormat:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;
      33: aload_1
      34: invokevirtual #14                 // Method org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Format.getDateTime:()Ljava/lang/String;
      37: invokevirtual #15                 // Method org/springframework/boot/autoconfigure/web/format/DateTimeFormatters.dateTimeFormat:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;
      40: invokespecial #16                 // Method org/springframework/boot/autoconfigure/web/format/WebConversionService."<init>":(Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;)V
      43: astore_2
      44: aload_0
      45: aload_2
      46: invokevirtual #17                 // Method addFormatters:(Lorg/springframework/format/FormatterRegistry;)V
      49: aload_2
      50: areturn

  public org.springframework.validation.Validator webFluxValidator();
    Code:
       0: ldc           #18                 // String javax.validation.Validator
       2: aload_0
       3: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #20                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokestatic  #21                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      12: ifne          20
      15: aload_0
      16: invokespecial #22                 // Method org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.webFluxValidator:()Lorg/springframework/validation/Validator;
      19: areturn
      20: aload_0
      21: invokevirtual #23                 // Method getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      24: aload_0
      25: invokevirtual #24                 // Method getValidator:()Lorg/springframework/validation/Validator;
      28: invokestatic  #25                 // Method org/springframework/boot/autoconfigure/validation/ValidatorAdapter.get:(Lorg/springframework/context/ApplicationContext;Lorg/springframework/validation/Validator;)Lorg/springframework/validation/Validator;
      31: areturn

  protected org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
       4: ifnull        29
       7: aload_0
       8: getfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
      11: invokeinterface #26,  1           // InterfaceMethod org/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations.getRequestMappingHandlerAdapter:()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;
      16: ifnull        29
      19: aload_0
      20: getfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
      23: invokeinterface #26,  1           // InterfaceMethod org/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations.getRequestMappingHandlerAdapter:()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;
      28: areturn
      29: aload_0
      30: invokespecial #27                 // Method org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.createRequestMappingHandlerAdapter:()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;
      33: areturn

  protected org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping();
    Code:
       0: aload_0
       1: getfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
       4: ifnull        29
       7: aload_0
       8: getfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
      11: invokeinterface #28,  1           // InterfaceMethod org/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations.getRequestMappingHandlerMapping:()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
      16: ifnull        29
      19: aload_0
      20: getfield      #5                  // Field webFluxRegistrations:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations;
      23: invokeinterface #28,  1           // InterfaceMethod org/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations.getRequestMappingHandlerMapping:()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
      28: areturn
      29: aload_0
      30: invokespecial #29                 // Method org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.createRequestMappingHandlerMapping:()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
      33: areturn
}
