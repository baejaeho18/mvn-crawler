Compiled from "KafkaAnnotationDrivenConfiguration.java"
class org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration {
  private final org.springframework.boot.autoconfigure.kafka.KafkaProperties properties;

  private final org.springframework.kafka.support.converter.RecordMessageConverter messageConverter;

  private final org.springframework.kafka.support.converter.BatchMessageConverter batchMessageConverter;

  private final org.springframework.kafka.core.KafkaTemplate<java.lang.Object, java.lang.Object> kafkaTemplate;

  private final org.springframework.kafka.transaction.KafkaAwareTransactionManager<java.lang.Object, java.lang.Object> transactionManager;

  private final org.springframework.kafka.listener.ConsumerAwareRebalanceListener rebalanceListener;

  private final org.springframework.kafka.listener.ErrorHandler errorHandler;

  private final org.springframework.kafka.listener.BatchErrorHandler batchErrorHandler;

  private final org.springframework.kafka.listener.AfterRollbackProcessor<java.lang.Object, java.lang.Object> afterRollbackProcessor;

  private final org.springframework.kafka.listener.RecordInterceptor<java.lang.Object, java.lang.Object> recordInterceptor;

  org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration(org.springframework.boot.autoconfigure.kafka.KafkaProperties, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.support.converter.RecordMessageConverter>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.support.converter.BatchMessageConverter>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.core.KafkaTemplate<java.lang.Object, java.lang.Object>>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.transaction.KafkaAwareTransactionManager<java.lang.Object, java.lang.Object>>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.listener.ConsumerAwareRebalanceListener>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.listener.ErrorHandler>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.listener.BatchErrorHandler>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.listener.AfterRollbackProcessor<java.lang.Object, java.lang.Object>>, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.listener.RecordInterceptor<java.lang.Object, java.lang.Object>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;
       9: aload_0
      10: aload_2
      11: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      16: checkcast     #4                  // class org/springframework/kafka/support/converter/RecordMessageConverter
      19: putfield      #5                  // Field messageConverter:Lorg/springframework/kafka/support/converter/RecordMessageConverter;
      22: aload_0
      23: aload_3
      24: aload_0
      25: invokedynamic #6,  0              // InvokeDynamic #0:get:(Lorg/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration;)Ljava/util/function/Supplier;
      30: invokeinterface #7,  2            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      35: checkcast     #8                  // class org/springframework/kafka/support/converter/BatchMessageConverter
      38: putfield      #9                  // Field batchMessageConverter:Lorg/springframework/kafka/support/converter/BatchMessageConverter;
      41: aload_0
      42: aload         4
      44: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      49: checkcast     #10                 // class org/springframework/kafka/core/KafkaTemplate
      52: putfield      #11                 // Field kafkaTemplate:Lorg/springframework/kafka/core/KafkaTemplate;
      55: aload_0
      56: aload         5
      58: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      63: checkcast     #12                 // class org/springframework/kafka/transaction/KafkaAwareTransactionManager
      66: putfield      #13                 // Field transactionManager:Lorg/springframework/kafka/transaction/KafkaAwareTransactionManager;
      69: aload_0
      70: aload         6
      72: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      77: checkcast     #14                 // class org/springframework/kafka/listener/ConsumerAwareRebalanceListener
      80: putfield      #15                 // Field rebalanceListener:Lorg/springframework/kafka/listener/ConsumerAwareRebalanceListener;
      83: aload_0
      84: aload         7
      86: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      91: checkcast     #16                 // class org/springframework/kafka/listener/ErrorHandler
      94: putfield      #17                 // Field errorHandler:Lorg/springframework/kafka/listener/ErrorHandler;
      97: aload_0
      98: aload         8
     100: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
     105: checkcast     #18                 // class org/springframework/kafka/listener/BatchErrorHandler
     108: putfield      #19                 // Field batchErrorHandler:Lorg/springframework/kafka/listener/BatchErrorHandler;
     111: aload_0
     112: aload         9
     114: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
     119: checkcast     #20                 // class org/springframework/kafka/listener/AfterRollbackProcessor
     122: putfield      #21                 // Field afterRollbackProcessor:Lorg/springframework/kafka/listener/AfterRollbackProcessor;
     125: aload_0
     126: aload         10
     128: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
     133: checkcast     #22                 // class org/springframework/kafka/listener/RecordInterceptor
     136: putfield      #23                 // Field recordInterceptor:Lorg/springframework/kafka/listener/RecordInterceptor;
     139: return

  org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer kafkaListenerContainerFactoryConfigurer();
    Code:
       0: new           #24                 // class org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer
       3: dup
       4: invokespecial #25                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;
      13: invokevirtual #26                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setKafkaProperties:(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;)V
      16: aload_0
      17: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;
      20: invokevirtual #27                 // Method org/springframework/boot/autoconfigure/kafka/KafkaProperties.getListener:()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener;
      23: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener.getType:()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
      26: getstatic     #29                 // Field org/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type.BATCH:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
      29: invokevirtual #30                 // Method org/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type.equals:(Ljava/lang/Object;)Z
      32: ifeq          42
      35: aload_0
      36: getfield      #9                  // Field batchMessageConverter:Lorg/springframework/kafka/support/converter/BatchMessageConverter;
      39: goto          46
      42: aload_0
      43: getfield      #5                  // Field messageConverter:Lorg/springframework/kafka/support/converter/RecordMessageConverter;
      46: astore_2
      47: aload_1
      48: aload_2
      49: invokevirtual #31                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setMessageConverter:(Lorg/springframework/kafka/support/converter/MessageConverter;)V
      52: aload_1
      53: aload_0
      54: getfield      #11                 // Field kafkaTemplate:Lorg/springframework/kafka/core/KafkaTemplate;
      57: invokevirtual #32                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setReplyTemplate:(Lorg/springframework/kafka/core/KafkaTemplate;)V
      60: aload_1
      61: aload_0
      62: getfield      #13                 // Field transactionManager:Lorg/springframework/kafka/transaction/KafkaAwareTransactionManager;
      65: invokevirtual #33                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setTransactionManager:(Lorg/springframework/kafka/transaction/KafkaAwareTransactionManager;)V
      68: aload_1
      69: aload_0
      70: getfield      #15                 // Field rebalanceListener:Lorg/springframework/kafka/listener/ConsumerAwareRebalanceListener;
      73: invokevirtual #34                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setRebalanceListener:(Lorg/springframework/kafka/listener/ConsumerAwareRebalanceListener;)V
      76: aload_1
      77: aload_0
      78: getfield      #17                 // Field errorHandler:Lorg/springframework/kafka/listener/ErrorHandler;
      81: invokevirtual #35                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setErrorHandler:(Lorg/springframework/kafka/listener/ErrorHandler;)V
      84: aload_1
      85: aload_0
      86: getfield      #19                 // Field batchErrorHandler:Lorg/springframework/kafka/listener/BatchErrorHandler;
      89: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setBatchErrorHandler:(Lorg/springframework/kafka/listener/BatchErrorHandler;)V
      92: aload_1
      93: aload_0
      94: getfield      #21                 // Field afterRollbackProcessor:Lorg/springframework/kafka/listener/AfterRollbackProcessor;
      97: invokevirtual #37                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setAfterRollbackProcessor:(Lorg/springframework/kafka/listener/AfterRollbackProcessor;)V
     100: aload_1
     101: aload_0
     102: getfield      #23                 // Field recordInterceptor:Lorg/springframework/kafka/listener/RecordInterceptor;
     105: invokevirtual #38                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.setRecordInterceptor:(Lorg/springframework/kafka/listener/RecordInterceptor;)V
     108: aload_1
     109: areturn

  org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory<?, ?> kafkaListenerContainerFactory(org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer, org.springframework.beans.factory.ObjectProvider<org.springframework.kafka.core.ConsumerFactory<java.lang.Object, java.lang.Object>>);
    Code:
       0: new           #39                 // class org/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory
       3: dup
       4: invokespecial #40                 // Method org/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory."<init>":()V
       7: astore_3
       8: aload_1
       9: aload_3
      10: aload_2
      11: aload_0
      12: invokedynamic #41,  0             // InvokeDynamic #1:get:(Lorg/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration;)Ljava/util/function/Supplier;
      17: invokeinterface #42,  2           // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      22: checkcast     #43                 // class org/springframework/kafka/core/ConsumerFactory
      25: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.configure:(Lorg/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory;Lorg/springframework/kafka/core/ConsumerFactory;)V
      28: aload_3
      29: areturn

  private org.springframework.kafka.core.ConsumerFactory lambda$kafkaListenerContainerFactory$1();
    Code:
       0: new           #45                 // class org/springframework/kafka/core/DefaultKafkaConsumerFactory
       3: dup
       4: aload_0
       5: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;
       8: invokevirtual #46                 // Method org/springframework/boot/autoconfigure/kafka/KafkaProperties.buildConsumerProperties:()Ljava/util/Map;
      11: invokespecial #47                 // Method org/springframework/kafka/core/DefaultKafkaConsumerFactory."<init>":(Ljava/util/Map;)V
      14: areturn

  private org.springframework.kafka.support.converter.BatchMessageConverter lambda$new$0();
    Code:
       0: new           #48                 // class org/springframework/kafka/support/converter/BatchMessagingMessageConverter
       3: dup
       4: aload_0
       5: getfield      #5                  // Field messageConverter:Lorg/springframework/kafka/support/converter/RecordMessageConverter;
       8: invokespecial #49                 // Method org/springframework/kafka/support/converter/BatchMessagingMessageConverter."<init>":(Lorg/springframework/kafka/support/converter/RecordMessageConverter;)V
      11: areturn
}
