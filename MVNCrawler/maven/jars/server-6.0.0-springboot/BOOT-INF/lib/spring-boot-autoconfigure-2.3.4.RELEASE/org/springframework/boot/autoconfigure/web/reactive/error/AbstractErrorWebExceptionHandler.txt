Compiled from "AbstractErrorWebExceptionHandler.java"
public abstract class org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler implements org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler,org.springframework.beans.factory.InitializingBean {
  private static final java.util.Set<java.lang.String> DISCONNECTED_CLIENT_EXCEPTIONS;

  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.context.ApplicationContext applicationContext;

  private final org.springframework.boot.web.reactive.error.ErrorAttributes errorAttributes;

  private final org.springframework.boot.autoconfigure.web.ResourceProperties resourceProperties;

  private final org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders templateAvailabilityProviders;

  private java.util.List<org.springframework.http.codec.HttpMessageReader<?>> messageReaders;

  private java.util.List<org.springframework.http.codec.HttpMessageWriter<?>> messageWriters;

  private java.util.List<org.springframework.web.reactive.result.view.ViewResolver> viewResolvers;

  public org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler(org.springframework.boot.web.reactive.error.ErrorAttributes, org.springframework.boot.autoconfigure.web.ResourceProperties, org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #5                  // Field messageReaders:Ljava/util/List;
      11: aload_0
      12: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      15: putfield      #2                  // Field messageWriters:Ljava/util/List;
      18: aload_0
      19: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      22: putfield      #1                  // Field viewResolvers:Ljava/util/List;
      25: aload_1
      26: ldc           #6                  // String ErrorAttributes must not be null
      28: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      31: aload_2
      32: ldc           #8                  // String ResourceProperties must not be null
      34: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      37: aload_3
      38: ldc           #9                  // String ApplicationContext must not be null
      40: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: aload_0
      44: aload_1
      45: putfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
      48: aload_0
      49: aload_2
      50: putfield      #11                 // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
      53: aload_0
      54: aload_3
      55: putfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      58: aload_0
      59: new           #13                 // class org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders
      62: dup
      63: aload_3
      64: invokespecial #14                 // Method org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders."<init>":(Lorg/springframework/context/ApplicationContext;)V
      67: putfield      #15                 // Field templateAvailabilityProviders:Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;
      70: return

  public void setMessageWriters(java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>);
    Code:
       0: aload_1
       1: ldc           #16                 // String \'messageWriters\' must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field messageWriters:Ljava/util/List;
      11: return

  public void setMessageReaders(java.util.List<org.springframework.http.codec.HttpMessageReader<?>>);
    Code:
       0: aload_1
       1: ldc           #17                 // String \'messageReaders\' must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #5                  // Field messageReaders:Ljava/util/List;
      11: return

  public void setViewResolvers(java.util.List<org.springframework.web.reactive.result.view.ViewResolver>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field viewResolvers:Ljava/util/List;
       5: return

  protected java.util.Map<java.lang.String, java.lang.Object> getErrorAttributes(org.springframework.web.reactive.function.server.ServerRequest, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ifeq          22
       6: iconst_1
       7: anewarray     #18                 // class org/springframework/boot/web/error/ErrorAttributeOptions$Include
      10: dup
      11: iconst_0
      12: getstatic     #19                 // Field org/springframework/boot/web/error/ErrorAttributeOptions$Include.STACK_TRACE:Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;
      15: aastore
      16: invokestatic  #20                 // Method org/springframework/boot/web/error/ErrorAttributeOptions.of:([Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;)Lorg/springframework/boot/web/error/ErrorAttributeOptions;
      19: goto          25
      22: invokestatic  #21                 // Method org/springframework/boot/web/error/ErrorAttributeOptions.defaults:()Lorg/springframework/boot/web/error/ErrorAttributeOptions;
      25: invokevirtual #22                 // Method getErrorAttributes:(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/boot/web/error/ErrorAttributeOptions;)Ljava/util/Map;
      28: areturn

  protected java.util.Map<java.lang.String, java.lang.Object> getErrorAttributes(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.boot.web.error.ErrorAttributeOptions);
    Code:
       0: aload_0
       1: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod org/springframework/boot/web/reactive/error/ErrorAttributes.getErrorAttributes:(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/boot/web/error/ErrorAttributeOptions;)Ljava/util/Map;
      11: areturn

  protected java.lang.Throwable getError(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod org/springframework/boot/web/reactive/error/ErrorAttributes.getError:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/Throwable;
      10: areturn

  protected boolean isTraceEnabled(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #25                 // String trace
       4: invokespecial #26                 // Method getBooleanParameter:(Lorg/springframework/web/reactive/function/server/ServerRequest;Ljava/lang/String;)Z
       7: ireturn

  protected boolean isMessageEnabled(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #27                 // String message
       4: invokespecial #26                 // Method getBooleanParameter:(Lorg/springframework/web/reactive/function/server/ServerRequest;Ljava/lang/String;)Z
       7: ireturn

  protected boolean isBindingErrorsEnabled(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #28                 // String errors
       4: invokespecial #26                 // Method getBooleanParameter:(Lorg/springframework/web/reactive/function/server/ServerRequest;Ljava/lang/String;)Z
       7: ireturn

  private boolean getBooleanParameter(org.springframework.web.reactive.function.server.ServerRequest, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #29,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.queryParam:(Ljava/lang/String;)Ljava/util/Optional;
       7: ldc           #30                 // String false
       9: invokevirtual #31                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #32                 // class java/lang/String
      15: astore_3
      16: ldc           #30                 // String false
      18: aload_3
      19: invokevirtual #33                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> renderErrorView(java.lang.String, org.springframework.web.reactive.function.server.ServerResponse$BodyBuilder, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method isTemplateAvailable:(Ljava/lang/String;)Z
       5: ifeq          17
       8: aload_2
       9: aload_1
      10: aload_3
      11: invokeinterface #35,  3           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.render:(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      16: areturn
      17: aload_0
      18: aload_1
      19: invokespecial #36                 // Method resolveResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      22: astore        4
      24: aload         4
      26: ifnull        41
      29: aload_2
      30: aload         4
      32: invokestatic  #37                 // Method org/springframework/web/reactive/function/BodyInserters.fromResource:(Lorg/springframework/core/io/Resource;)Lorg/springframework/web/reactive/function/BodyInserter;
      35: invokeinterface #38,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.body:(Lorg/springframework/web/reactive/function/BodyInserter;)Lreactor/core/publisher/Mono;
      40: areturn
      41: invokestatic  #39                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      44: areturn

  private boolean isTemplateAvailable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field templateAvailabilityProviders:Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;
       4: aload_1
       5: aload_0
       6: getfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       9: invokevirtual #40                 // Method org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders.getProvider:(Ljava/lang/String;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProvider;
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private org.springframework.core.io.Resource resolveResource(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
       4: invokevirtual #41                 // Method org/springframework/boot/autoconfigure/web/ResourceProperties.getStaticLocations:()[Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     91
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload_0
      27: getfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      30: aload         5
      32: invokeinterface #42,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      37: astore        6
      39: aload         6
      41: new           #43                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      48: aload_1
      49: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #46                 // String .html
      54: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #48,  2           // InterfaceMethod org/springframework/core/io/Resource.createRelative:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      65: astore        6
      67: aload         6
      69: invokeinterface #49,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      74: ifeq          80
      77: aload         6
      79: areturn
      80: goto          85
      83: astore        6
      85: iinc          4, 1
      88: goto          14
      91: aconst_null
      92: areturn
    Exception table:
       from    to  target type
          26    79    83   Class java/lang/Exception

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> renderDefaultErrorView(org.springframework.web.reactive.function.server.ServerResponse$BodyBuilder, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_2
       9: ldc           #51                 // String timestamp
      11: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #53                 // class java/util/Date
      19: astore        4
      21: aload_2
      22: ldc           #27                 // String message
      24: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore        5
      31: aload_2
      32: ldc           #25                 // String trace
      34: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: astore        6
      41: aload_2
      42: ldc           #54                 // String requestId
      44: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore        7
      51: aload_3
      52: ldc           #55                 // String <html><body><h1>Whitelabel Error Page</h1>
      54: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #56                 // String <p>This application has no configured error view, so you are seeing this as a fallback.</p>
      59: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #57                 // String <div id=\'created\'>
      64: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload         4
      69: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #59                 // String </div>
      74: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #60                 // String <div>[
      79: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         7
      84: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: ldc           #61                 // String ] There was an unexpected error (type=
      89: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: aload_2
      94: ldc           #62                 // String error
      96: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: invokespecial #63                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
     104: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #64                 // String , status=
     109: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: aload_2
     114: ldc           #65                 // String status
     116: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     121: invokespecial #63                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
     124: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #66                 // String ).</div>
     129: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: pop
     133: aload         5
     135: ifnull        159
     138: aload_3
     139: ldc           #67                 // String <div>
     141: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: aload         5
     147: invokespecial #63                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
     150: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: ldc           #59                 // String </div>
     155: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: pop
     159: aload         6
     161: ifnull        185
     164: aload_3
     165: ldc           #68                 // String <div style=\'white-space:pre-wrap;\'>
     167: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: aload         6
     173: invokespecial #63                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
     176: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: ldc           #59                 // String </div>
     181: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: pop
     185: aload_3
     186: ldc           #69                 // String </body></html>
     188: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: pop
     192: aload_1
     193: aload_3
     194: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     197: invokeinterface #70,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.bodyValue:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     202: areturn

  private java.lang.String htmlEscape(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokestatic  #72                 // Method org/springframework/web/util/HtmlUtils.htmlEscape:(Ljava/lang/String;)Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: areturn

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field messageWriters:Ljava/util/List;
       4: invokestatic  #73                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          20
      10: new           #74                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #75                 // String Property \'messageWriters\' is required
      16: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  protected abstract org.springframework.web.reactive.function.server.RouterFunction<org.springframework.web.reactive.function.server.ServerResponse> getRoutingFunction(org.springframework.boot.web.reactive.error.ErrorAttributes);

  public reactor.core.publisher.Mono<java.lang.Void> handle(org.springframework.web.server.ServerWebExchange, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
       6: invokeinterface #78,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.isCommitted:()Z
      11: ifne          22
      14: aload_0
      15: aload_2
      16: invokespecial #79                 // Method isDisconnectedClientError:(Ljava/lang/Throwable;)Z
      19: ifeq          27
      22: aload_2
      23: invokestatic  #80                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      26: areturn
      27: aload_0
      28: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
      31: aload_2
      32: aload_1
      33: invokeinterface #81,  3           // InterfaceMethod org/springframework/boot/web/reactive/error/ErrorAttributes.storeErrorInformation:(Ljava/lang/Throwable;Lorg/springframework/web/server/ServerWebExchange;)V
      38: aload_1
      39: aload_0
      40: getfield      #5                  // Field messageReaders:Ljava/util/List;
      43: invokestatic  #82                 // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.create:(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/List;)Lorg/springframework/web/reactive/function/server/ServerRequest;
      46: astore_3
      47: aload_0
      48: aload_0
      49: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
      52: invokevirtual #83                 // Method getRoutingFunction:(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;)Lorg/springframework/web/reactive/function/server/RouterFunction;
      55: aload_3
      56: invokeinterface #84,  2           // InterfaceMethod org/springframework/web/reactive/function/server/RouterFunction.route:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
      61: aload_2
      62: invokestatic  #80                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      65: invokevirtual #85                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      68: aload_3
      69: invokedynamic #86,  0             // InvokeDynamic #0:apply:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/util/function/Function;
      74: invokevirtual #87                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      77: aload_0
      78: aload_3
      79: aload_2
      80: invokedynamic #88,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler;Lorg/springframework/web/reactive/function/server/ServerRequest;Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      85: invokevirtual #89                 // Method reactor/core/publisher/Mono.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      88: aload_0
      89: aload_1
      90: invokedynamic #90,  0             // InvokeDynamic #2:apply:(Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      95: invokevirtual #87                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      98: areturn

  private boolean isDisconnectedClientError(java.lang.Throwable);
    Code:
       0: getstatic     #91                 // Field DISCONNECTED_CLIENT_EXCEPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #93                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      10: invokeinterface #94,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      15: ifne          32
      18: aload_0
      19: aload_1
      20: invokestatic  #95                 // Method org/springframework/core/NestedExceptionUtils.getMostSpecificCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      23: invokevirtual #96                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      26: invokespecial #97                 // Method isDisconnectedClientErrorMessage:(Ljava/lang/String;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private boolean isDisconnectedClientErrorMessage(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #98                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: goto          13
      11: ldc           #99                 // String
      13: astore_1
      14: aload_1
      15: ldc           #100                // String broken pipe
      17: invokevirtual #101                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      20: ifne          32
      23: aload_1
      24: ldc           #102                // String connection reset by peer
      26: invokevirtual #101                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  protected void logError(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse, java.lang.Throwable);
    Code:
       0: getstatic     #103                // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #104,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          52
      11: getstatic     #103                // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #43                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_1
      22: invokeinterface #105,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.exchange:()Lorg/springframework/web/server/ServerWebExchange;
      27: invokeinterface #106,  1          // InterfaceMethod org/springframework/web/server/ServerWebExchange.getLogPrefix:()Ljava/lang/String;
      32: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: aload_3
      37: aload_1
      38: invokespecial #107                // Method formatError:(Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/String;
      41: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #108,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_2
      53: invokeinterface #109,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.rawStatusCode:()I
      58: invokestatic  #110                // Method org/springframework/http/HttpStatus.resolve:(I)Lorg/springframework/http/HttpStatus;
      61: ifnull        98
      64: aload_2
      65: invokeinterface #111,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.statusCode:()Lorg/springframework/http/HttpStatus;
      70: getstatic     #112                // Field org/springframework/http/HttpStatus.INTERNAL_SERVER_ERROR:Lorg/springframework/http/HttpStatus;
      73: invokevirtual #113                // Method org/springframework/http/HttpStatus.equals:(Ljava/lang/Object;)Z
      76: ifeq          98
      79: getstatic     #103                // Field logger:Lorg/apache/commons/logging/Log;
      82: aload_0
      83: aload_1
      84: invokedynamic #114,  0            // InvokeDynamic #3:get:(Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler;Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/util/function/Supplier;
      89: invokestatic  #115                // Method org/springframework/core/log/LogMessage.of:(Ljava/util/function/Supplier;)Lorg/springframework/core/log/LogMessage;
      92: aload_3
      93: invokeinterface #116,  3          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      98: return

  private java.lang.String formatError(java.lang.Throwable, org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #93                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #117                // String :
      19: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #96                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      26: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: astore_3
      33: new           #43                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #118                // String Resolved [
      42: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #119                // String ] for HTTP
      51: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_2
      55: invokeinterface #120,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.methodName:()Ljava/lang/String;
      60: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #121                // String
      65: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokeinterface #122,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.path:()Ljava/lang/String;
      74: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  private java.lang.String formatRequest(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_1
       1: invokeinterface #123,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.uri:()Ljava/net/URI;
       6: invokevirtual #124                // Method java/net/URI.getRawQuery:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: invokestatic  #125                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      14: ifeq          39
      17: new           #43                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #126                // String ?
      26: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: goto          41
      39: ldc           #99                 // String
      41: astore_3
      42: new           #43                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #127                // String HTTP
      51: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokeinterface #120,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.methodName:()Ljava/lang/String;
      60: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #128                // String  \"
      65: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokeinterface #122,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.path:()Ljava/lang/String;
      74: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #129                // String \"
      83: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  private reactor.core.publisher.Mono<? extends java.lang.Void> write(org.springframework.web.server.ServerWebExchange, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
       6: invokeinterface #130,  1          // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: aload_2
      12: invokeinterface #131,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.headers:()Lorg/springframework/http/HttpHeaders;
      17: invokevirtual #132                // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      20: invokevirtual #133                // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      23: aload_2
      24: aload_1
      25: new           #134                // class org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler$ResponseContext
      28: dup
      29: aload_0
      30: aconst_null
      31: invokespecial #135                // Method org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler$ResponseContext."<init>":(Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler;Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler$1;)V
      34: invokeinterface #136,  3          // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.writeTo:(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/function/server/ServerResponse$Context;)Lreactor/core/publisher/Mono;
      39: areturn

  private java.lang.CharSequence lambda$logError$3(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: ldc           #137                // String %s 500 Server Error for %s
       2: iconst_2
       3: anewarray     #138                // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: invokeinterface #105,  1          // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.exchange:()Lorg/springframework/web/server/ServerWebExchange;
      14: invokeinterface #106,  1          // InterfaceMethod org/springframework/web/server/ServerWebExchange.getLogPrefix:()Ljava/lang/String;
      19: aastore
      20: dup
      21: iconst_1
      22: aload_0
      23: aload_1
      24: invokespecial #139                // Method formatRequest:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/String;
      27: aastore
      28: invokestatic  #140                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: areturn

  private reactor.core.publisher.Mono lambda$handle$2(org.springframework.web.server.ServerWebExchange, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #141                // Method write:(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/function/server/ServerResponse;)Lreactor/core/publisher/Mono;
       6: areturn

  private void lambda$handle$1(org.springframework.web.reactive.function.server.ServerRequest, java.lang.Throwable, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: invokevirtual #142                // Method logError:(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/web/reactive/function/server/ServerResponse;Ljava/lang/Throwable;)V
       7: return

  private static reactor.core.publisher.Mono lambda$handle$0(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.HandlerFunction);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #143,  2          // InterfaceMethod org/springframework/web/reactive/function/server/HandlerFunction.handle:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
       7: areturn

  static java.util.List access$100(org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field messageWriters:Ljava/util/List;
       4: areturn

  static java.util.List access$200(org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field viewResolvers:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: new           #144                // class java/util/HashSet
       3: dup
       4: invokespecial #145                // Method java/util/HashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #146                // String AbortedException
      11: invokeinterface #147,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: ldc           #148                // String ClientAbortException
      20: invokeinterface #147,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: ldc           #149                // String EOFException
      29: invokeinterface #147,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: ldc           #150                // String EofException
      38: invokeinterface #147,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: invokestatic  #151                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      48: putstatic     #91                 // Field DISCONNECTED_CLIENT_EXCEPTIONS:Ljava/util/Set;
      51: ldc           #152                // class org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler
      53: invokestatic  #153                // Method org/springframework/http/HttpLogging.forLogName:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      56: putstatic     #103                // Field logger:Lorg/apache/commons/logging/Log;
      59: return
}
