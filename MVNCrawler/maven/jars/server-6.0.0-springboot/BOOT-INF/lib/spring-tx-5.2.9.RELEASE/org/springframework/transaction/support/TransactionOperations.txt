Compiled from "TransactionOperations.java"
public interface org.springframework.transaction.support.TransactionOperations {
  public abstract <T> T execute(org.springframework.transaction.support.TransactionCallback<T>) throws org.springframework.transaction.TransactionException;

  public default void executeWithoutResult(java.util.function.Consumer<org.springframework.transaction.TransactionStatus>) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:doInTransaction:(Ljava/util/function/Consumer;)Lorg/springframework/transaction/support/TransactionCallback;
       7: invokeinterface #2,  2            // InterfaceMethod execute:(Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
      12: pop
      13: return

  public static org.springframework.transaction.support.TransactionOperations withoutTransaction();
    Code:
       0: getstatic     #3                  // Field org/springframework/transaction/support/WithoutTransactionOperations.INSTANCE:Lorg/springframework/transaction/support/WithoutTransactionOperations;
       3: areturn

  private static java.lang.Object lambda$executeWithoutResult$0(java.util.function.Consumer, org.springframework.transaction.TransactionStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: aconst_null
       8: areturn
}
