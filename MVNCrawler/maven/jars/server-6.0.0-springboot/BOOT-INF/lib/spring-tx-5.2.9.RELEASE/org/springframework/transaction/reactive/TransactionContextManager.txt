Compiled from "TransactionContextManager.java"
public abstract class org.springframework.transaction.reactive.TransactionContextManager {
  private org.springframework.transaction.reactive.TransactionContextManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static reactor.core.publisher.Mono<org.springframework.transaction.reactive.TransactionContext> currentContext() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: invokestatic  #2                  // Method reactor/core/publisher/Mono.subscriberContext:()Lreactor/core/publisher/Mono;
       3: invokedynamic #3,  0              // InvokeDynamic #0:accept:()Ljava/util/function/BiConsumer;
       8: invokevirtual #4                  // Method reactor/core/publisher/Mono.handle:(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
      11: areturn

  public static java.util.function.Function<reactor.util.context.Context, reactor.util.context.Context> createTransactionContext();
    Code:
       0: invokedynamic #5,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       5: areturn

  public static java.util.function.Function<reactor.util.context.Context, reactor.util.context.Context> getOrCreateContext();
    Code:
       0: invokedynamic #6,  0              // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       5: areturn

  public static java.util.function.Function<reactor.util.context.Context, reactor.util.context.Context> getOrCreateContextHolder();
    Code:
       0: invokedynamic #7,  0              // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       5: areturn

  private static reactor.util.context.Context lambda$getOrCreateContextHolder$3(reactor.util.context.Context);
    Code:
       0: aload_0
       1: ldc           #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
       3: invokeinterface #9,  2            // InterfaceMethod reactor/util/context/Context.hasKey:(Ljava/lang/Object;)Z
       8: ifne          34
      11: aload_0
      12: ldc           #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
      14: new           #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
      17: dup
      18: new           #10                 // class java/util/ArrayDeque
      21: dup
      22: invokespecial #11                 // Method java/util/ArrayDeque."<init>":()V
      25: invokespecial #12                 // Method org/springframework/transaction/reactive/TransactionContextHolder."<init>":(Ljava/util/Deque;)V
      28: invokeinterface #13,  3           // InterfaceMethod reactor/util/context/Context.put:(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
      33: areturn
      34: aload_0
      35: areturn

  private static reactor.util.context.Context lambda$getOrCreateContext$2(reactor.util.context.Context);
    Code:
       0: aload_0
       1: ldc           #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
       3: invokeinterface #14,  2           // InterfaceMethod reactor/util/context/Context.get:(Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
      11: astore_1
      12: aload_1
      13: invokevirtual #15                 // Method org/springframework/transaction/reactive/TransactionContextHolder.hasContext:()Z
      16: ifeq          32
      19: aload_0
      20: ldc           #16                 // class org/springframework/transaction/reactive/TransactionContext
      22: aload_1
      23: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContextHolder.currentContext:()Lorg/springframework/transaction/reactive/TransactionContext;
      26: invokeinterface #13,  3           // InterfaceMethod reactor/util/context/Context.put:(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
      31: areturn
      32: aload_0
      33: ldc           #16                 // class org/springframework/transaction/reactive/TransactionContext
      35: aload_1
      36: invokevirtual #18                 // Method org/springframework/transaction/reactive/TransactionContextHolder.createContext:()Lorg/springframework/transaction/reactive/TransactionContext;
      39: invokeinterface #13,  3           // InterfaceMethod reactor/util/context/Context.put:(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
      44: areturn

  private static reactor.util.context.Context lambda$createTransactionContext$1(reactor.util.context.Context);
    Code:
       0: aload_0
       1: ldc           #16                 // class org/springframework/transaction/reactive/TransactionContext
       3: new           #16                 // class org/springframework/transaction/reactive/TransactionContext
       6: dup
       7: invokespecial #19                 // Method org/springframework/transaction/reactive/TransactionContext."<init>":()V
      10: invokeinterface #13,  3           // InterfaceMethod reactor/util/context/Context.put:(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
      15: areturn

  private static void lambda$currentContext$0(reactor.util.context.Context, reactor.core.publisher.SynchronousSink);
    Code:
       0: aload_0
       1: ldc           #16                 // class org/springframework/transaction/reactive/TransactionContext
       3: invokeinterface #9,  2            // InterfaceMethod reactor/util/context/Context.hasKey:(Ljava/lang/Object;)Z
       8: ifeq          26
      11: aload_1
      12: aload_0
      13: ldc           #16                 // class org/springframework/transaction/reactive/TransactionContext
      15: invokeinterface #14,  2           // InterfaceMethod reactor/util/context/Context.get:(Ljava/lang/Class;)Ljava/lang/Object;
      20: invokeinterface #20,  2           // InterfaceMethod reactor/core/publisher/SynchronousSink.next:(Ljava/lang/Object;)V
      25: return
      26: aload_0
      27: ldc           #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
      29: invokeinterface #9,  2            // InterfaceMethod reactor/util/context/Context.hasKey:(Ljava/lang/Object;)Z
      34: ifeq          67
      37: aload_0
      38: ldc           #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
      40: invokeinterface #14,  2           // InterfaceMethod reactor/util/context/Context.get:(Ljava/lang/Class;)Ljava/lang/Object;
      45: checkcast     #8                  // class org/springframework/transaction/reactive/TransactionContextHolder
      48: astore_2
      49: aload_2
      50: invokevirtual #15                 // Method org/springframework/transaction/reactive/TransactionContextHolder.hasContext:()Z
      53: ifeq          67
      56: aload_1
      57: aload_2
      58: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContextHolder.currentContext:()Lorg/springframework/transaction/reactive/TransactionContext;
      61: invokeinterface #20,  2           // InterfaceMethod reactor/core/publisher/SynchronousSink.next:(Ljava/lang/Object;)V
      66: return
      67: aload_1
      68: new           #21                 // class org/springframework/transaction/reactive/TransactionContextManager$NoTransactionInContextException
      71: dup
      72: invokespecial #22                 // Method org/springframework/transaction/reactive/TransactionContextManager$NoTransactionInContextException."<init>":()V
      75: invokeinterface #23,  2           // InterfaceMethod reactor/core/publisher/SynchronousSink.error:(Ljava/lang/Throwable;)V
      80: return
}
