Compiled from "TransactionalOperatorExtensions.kt"
public final class org.springframework.transaction.reactive.TransactionalOperatorExtensionsKt {
  public static final <T> kotlinx.coroutines.flow.Flow<T> transactional(kotlinx.coroutines.flow.Flow<? extends T>, org.springframework.transaction.reactive.TransactionalOperator);
    Code:
       0: aload_0
       1: ldc           #10                 // String $this$transactional
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #18                 // String operator
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_1
      13: aload_0
      14: invokestatic  #24                 // Method kotlinx/coroutines/reactor/ReactorFlowKt.asFlux:(Lkotlinx/coroutines/flow/Flow;)Lreactor/core/publisher/Flux;
      17: invokeinterface #29,  2           // InterfaceMethod org/springframework/transaction/reactive/TransactionalOperator.transactional:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
      22: dup
      23: ldc           #31                 // String operator.transactional(asFlux())
      25: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      28: checkcast     #36                 // class org/reactivestreams/Publisher
      31: invokestatic  #42                 // Method kotlinx/coroutines/reactive/ReactiveFlowKt.asFlow:(Lorg/reactivestreams/Publisher;)Lkotlinx/coroutines/flow/Flow;
      34: areturn

  public static final <T> java.lang.Object executeAndAwait(org.springframework.transaction.reactive.TransactionalOperator, kotlin.jvm.functions.Function2<? super org.springframework.transaction.ReactiveTransaction, ? super kotlin.coroutines.Continuation<? super T>, ? extends java.lang.Object>, kotlin.coroutines.Continuation<? super T>);
    Code:
       0: aload_0
       1: new           #50                 // class org/springframework/transaction/reactive/TransactionalOperatorExtensionsKt$executeAndAwait$2
       4: dup
       5: aload_1
       6: invokespecial #54                 // Method org/springframework/transaction/reactive/TransactionalOperatorExtensionsKt$executeAndAwait$2."<init>":(Lkotlin/jvm/functions/Function2;)V
       9: checkcast     #56                 // class org/springframework/transaction/reactive/TransactionCallback
      12: invokeinterface #60,  2           // InterfaceMethod org/springframework/transaction/reactive/TransactionalOperator.execute:(Lorg/springframework/transaction/reactive/TransactionCallback;)Lreactor/core/publisher/Flux;
      17: dup
      18: ldc           #62                 // String execute { status -> monoâ€¦confined) { f(status) } }
      20: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: checkcast     #36                 // class org/reactivestreams/Publisher
      26: aload_2
      27: invokestatic  #68                 // Method kotlinx/coroutines/reactive/AwaitKt.awaitFirstOrNull:(Lorg/reactivestreams/Publisher;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      30: areturn
}
