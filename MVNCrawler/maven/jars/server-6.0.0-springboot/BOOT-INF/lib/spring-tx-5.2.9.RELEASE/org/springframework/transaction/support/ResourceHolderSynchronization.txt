Compiled from "ResourceHolderSynchronization.java"
public abstract class org.springframework.transaction.support.ResourceHolderSynchronization<H extends org.springframework.transaction.support.ResourceHolder, K> implements org.springframework.transaction.support.TransactionSynchronization {
  private final H resourceHolder;

  private final K resourceKey;

  private volatile boolean holderActive;

  public org.springframework.transaction.support.ResourceHolderSynchronization(H, K);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field holderActive:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field resourceKey:Ljava/lang/Object;
      19: return

  public void suspend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      11: invokestatic  #5                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void resume();
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      11: aload_0
      12: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      15: invokestatic  #6                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      18: return

  public void flush();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
       5: invokevirtual #7                  // Method flushResource:(Lorg/springframework/transaction/support/ResourceHolder;)V
       8: return

  public void beforeCommit(boolean);
    Code:
       0: return

  public void beforeCompletion();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method shouldUnbindAtCompletion:()Z
       4: ifeq          39
       7: aload_0
       8: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      11: invokestatic  #5                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: iconst_0
      17: putfield      #2                  // Field holderActive:Z
      20: aload_0
      21: invokevirtual #9                  // Method shouldReleaseBeforeCompletion:()Z
      24: ifeq          39
      27: aload_0
      28: aload_0
      29: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      32: aload_0
      33: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      36: invokevirtual #10                 // Method releaseResource:(Lorg/springframework/transaction/support/ResourceHolder;Ljava/lang/Object;)V
      39: return

  public void afterCommit();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method shouldReleaseBeforeCompletion:()Z
       4: ifne          15
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      12: invokevirtual #11                 // Method processResourceAfterCommit:(Lorg/springframework/transaction/support/ResourceHolder;)V
      15: return

  public void afterCompletion(int);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method shouldUnbindAtCompletion:()Z
       4: ifeq          71
       7: iconst_0
       8: istore_2
       9: aload_0
      10: getfield      #2                  // Field holderActive:Z
      13: ifeq          43
      16: aload_0
      17: iconst_0
      18: putfield      #2                  // Field holderActive:Z
      21: aload_0
      22: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      25: invokestatic  #12                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResourceIfPossible:(Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      33: invokeinterface #13,  1           // InterfaceMethod org/springframework/transaction/support/ResourceHolder.unbound:()V
      38: iconst_1
      39: istore_2
      40: goto          52
      43: aload_0
      44: aload_0
      45: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      48: invokevirtual #14                 // Method shouldReleaseAfterCompletion:(Lorg/springframework/transaction/support/ResourceHolder;)Z
      51: istore_2
      52: iload_2
      53: ifeq          68
      56: aload_0
      57: aload_0
      58: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      61: aload_0
      62: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      65: invokevirtual #10                 // Method releaseResource:(Lorg/springframework/transaction/support/ResourceHolder;Ljava/lang/Object;)V
      68: goto          92
      71: aload_0
      72: aload_0
      73: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      76: aload_0
      77: getfield      #4                  // Field resourceKey:Ljava/lang/Object;
      80: iload_1
      81: ifne          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: invokevirtual #15                 // Method cleanupResource:(Lorg/springframework/transaction/support/ResourceHolder;Ljava/lang/Object;Z)V
      92: aload_0
      93: getfield      #3                  // Field resourceHolder:Lorg/springframework/transaction/support/ResourceHolder;
      96: invokeinterface #16,  1           // InterfaceMethod org/springframework/transaction/support/ResourceHolder.reset:()V
     101: return

  protected boolean shouldUnbindAtCompletion();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean shouldReleaseBeforeCompletion();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean shouldReleaseAfterCompletion(H);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method shouldReleaseBeforeCompletion:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected void flushResource(H);
    Code:
       0: return

  protected void processResourceAfterCommit(H);
    Code:
       0: return

  protected void releaseResource(H, K);
    Code:
       0: return

  protected void cleanupResource(H, K, boolean);
    Code:
       0: return
}
