Compiled from "TransactionSynchronizationManager.java"
public class org.springframework.transaction.reactive.TransactionSynchronizationManager {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.transaction.reactive.TransactionContext transactionContext;

  public org.springframework.transaction.reactive.TransactionSynchronizationManager(org.springframework.transaction.reactive.TransactionContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       9: return

  public static reactor.core.publisher.Mono<org.springframework.transaction.reactive.TransactionSynchronizationManager> forCurrentTransaction();
    Code:
       0: invokestatic  #3                  // Method org/springframework/transaction/reactive/TransactionContextManager.currentContext:()Lreactor/core/publisher/Mono;
       3: invokedynamic #4,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       8: invokevirtual #5                  // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      11: areturn

  public boolean hasResource(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #7                  // Method doGetResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public java.lang.Object getResource(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #7                  // Method doGetResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnull        82
      15: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      18: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      23: ifeq          82
      26: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      29: new           #10                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #12                 // String Retrieved value [
      38: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #15                 // String ] for key [
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #16                 // String ] bound to context [
      56: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      63: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContext.getName:()Ljava/lang/String;
      66: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #18                 // String ]
      71: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      82: aload_3
      83: areturn

  private java.lang.Object doGetResource(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #21                 // Method org/springframework/transaction/reactive/TransactionContext.getResources:()Ljava/util/Map;
       7: aload_1
       8: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public void bindResource(java.lang.Object, java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_3
       5: aload_2
       6: ldc           #23                 // String Value must not be null
       8: invokestatic  #24                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      15: invokevirtual #21                 // Method org/springframework/transaction/reactive/TransactionContext.getResources:()Ljava/util/Map;
      18: astore        4
      20: aload         4
      22: aload_3
      23: aload_2
      24: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: astore        5
      31: aload         5
      33: ifnull        93
      36: new           #26                 // class java/lang/IllegalStateException
      39: dup
      40: new           #10                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #27                 // String Already value [
      49: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload         5
      54: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #15                 // String ] for key [
      59: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_3
      63: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #16                 // String ] bound to context [
      68: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      75: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContext.getName:()Ljava/lang/String;
      78: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #18                 // String ]
      83: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      96: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     101: ifeq          160
     104: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
     107: new           #10                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #29                 // String Bound value [
     116: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_2
     120: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: ldc           #15                 // String ] for key [
     125: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_3
     129: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: ldc           #30                 // String ] to context [
     134: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
     141: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContext.getName:()Ljava/lang/String;
     144: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #18                 // String ]
     149: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     160: return

  public java.lang.Object unbindResource(java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #31                 // Method doUnbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     62
      15: new           #26                 // class java/lang/IllegalStateException
      18: dup
      19: new           #10                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #32                 // String No value for key [
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #16                 // String ] bound to context [
      37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      44: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContext.getName:()Ljava/lang/String;
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #18                 // String ]
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_3
      63: areturn

  public java.lang.Object unbindResourceIfPossible(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #31                 // Method doUnbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private java.lang.Object doUnbindResource(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #21                 // Method org/springframework/transaction/reactive/TransactionContext.getResources:()Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokeinterface #33,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_3
      16: aload_3
      17: ifnull        87
      20: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      23: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      28: ifeq          87
      31: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      34: new           #10                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #34                 // String Removed value [
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #15                 // String ] for key [
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #35                 // String ] from context [
      61: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      68: invokevirtual #17                 // Method org/springframework/transaction/reactive/TransactionContext.getName:()Ljava/lang/String;
      71: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #18                 // String ]
      76: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      87: aload_3
      88: areturn

  public boolean isSynchronizationActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #36                 // Method org/springframework/transaction/reactive/TransactionContext.getSynchronizations:()Ljava/util/Set;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void initSynchronization() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isSynchronizationActive:()Z
       4: ifeq          17
       7: new           #26                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #38                 // String Cannot activate transaction synchronization - already active
      13: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      20: ldc           #39                 // String Initializing transaction synchronization
      22: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      31: new           #40                 // class java/util/LinkedHashSet
      34: dup
      35: invokespecial #41                 // Method java/util/LinkedHashSet."<init>":()V
      38: invokevirtual #42                 // Method org/springframework/transaction/reactive/TransactionContext.setSynchronizations:(Ljava/util/Set;)V
      41: return

  public void registerSynchronization(org.springframework.transaction.reactive.TransactionSynchronization) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: ldc           #43                 // String TransactionSynchronization must not be null
       3: invokestatic  #24                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      10: invokevirtual #36                 // Method org/springframework/transaction/reactive/TransactionContext.getSynchronizations:()Ljava/util/Set;
      13: astore_2
      14: aload_2
      15: ifnonnull     28
      18: new           #26                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #44                 // String Transaction synchronization is not active
      24: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_2
      29: aload_1
      30: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  public java.util.List<org.springframework.transaction.reactive.TransactionSynchronization> getSynchronizations() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #36                 // Method org/springframework/transaction/reactive/TransactionContext.getSynchronizations:()Ljava/util/Set;
       7: astore_1
       8: aload_1
       9: ifnonnull     22
      12: new           #26                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #44                 // String Transaction synchronization is not active
      18: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: invokeinterface #46,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      28: ifeq          35
      31: invokestatic  #47                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      34: areturn
      35: new           #48                 // class java/util/ArrayList
      38: dup
      39: aload_1
      40: invokespecial #49                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      43: astore_2
      44: aload_2
      45: invokestatic  #50                 // Method org/springframework/core/annotation/AnnotationAwareOrderComparator.sort:(Ljava/util/List;)V
      48: aload_2
      49: invokestatic  #51                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      52: areturn

  public void clearSynchronization() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isSynchronizationActive:()Z
       4: ifne          17
       7: new           #26                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #52                 // String Cannot deactivate transaction synchronization - not active
      13: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
      20: ldc           #53                 // String Clearing transaction synchronization
      22: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
      31: aconst_null
      32: invokevirtual #42                 // Method org/springframework/transaction/reactive/TransactionContext.setSynchronizations:(Ljava/util/Set;)V
      35: return

  public void setCurrentTransactionName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: aload_1
       5: invokevirtual #54                 // Method org/springframework/transaction/reactive/TransactionContext.setCurrentTransactionName:(Ljava/lang/String;)V
       8: return

  public java.lang.String getCurrentTransactionName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #55                 // Method org/springframework/transaction/reactive/TransactionContext.getCurrentTransactionName:()Ljava/lang/String;
       7: areturn

  public void setCurrentTransactionReadOnly(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: iload_1
       5: invokevirtual #56                 // Method org/springframework/transaction/reactive/TransactionContext.setCurrentTransactionReadOnly:(Z)V
       8: return

  public boolean isCurrentTransactionReadOnly();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #57                 // Method org/springframework/transaction/reactive/TransactionContext.isCurrentTransactionReadOnly:()Z
       7: ireturn

  public void setCurrentTransactionIsolationLevel(java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: aload_1
       5: invokevirtual #58                 // Method org/springframework/transaction/reactive/TransactionContext.setCurrentTransactionIsolationLevel:(Ljava/lang/Integer;)V
       8: return

  public java.lang.Integer getCurrentTransactionIsolationLevel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #59                 // Method org/springframework/transaction/reactive/TransactionContext.getCurrentTransactionIsolationLevel:()Ljava/lang/Integer;
       7: areturn

  public void setActualTransactionActive(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: iload_1
       5: invokevirtual #60                 // Method org/springframework/transaction/reactive/TransactionContext.setActualTransactionActive:(Z)V
       8: return

  public boolean isActualTransactionActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #61                 // Method org/springframework/transaction/reactive/TransactionContext.isActualTransactionActive:()Z
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionContext:Lorg/springframework/transaction/reactive/TransactionContext;
       4: invokevirtual #62                 // Method org/springframework/transaction/reactive/TransactionContext.clear:()V
       7: return

  static {};
    Code:
       0: ldc           #63                 // class org/springframework/transaction/reactive/TransactionSynchronizationManager
       2: invokestatic  #64                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #8                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
