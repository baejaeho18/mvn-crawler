Compiled from "AbstractReactiveTransactionManager.java"
public abstract class org.springframework.transaction.reactive.AbstractReactiveTransactionManager implements org.springframework.transaction.ReactiveTransactionManager,java.io.Serializable {
  protected transient org.apache.commons.logging.Log logger;

  public org.springframework.transaction.reactive.AbstractReactiveTransactionManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public final reactor.core.publisher.Mono<org.springframework.transaction.ReactiveTransaction> getReactiveTransaction(org.springframework.transaction.TransactionDefinition) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          11
       8: invokestatic  #5                  // InterfaceMethod org/springframework/transaction/TransactionDefinition.withDefaults:()Lorg/springframework/transaction/TransactionDefinition;
      11: astore_2
      12: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.forCurrentTransaction:()Lreactor/core/publisher/Mono;
      15: aload_0
      16: aload_2
      17: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/util/function/Function;
      22: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      25: areturn

  private reactor.core.publisher.Mono<org.springframework.transaction.ReactiveTransaction> handleExistingTransaction(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, java.lang.Object, boolean) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_2
       1: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
       6: iconst_5
       7: if_icmpne     23
      10: new           #11                 // class org/springframework/transaction/IllegalTransactionStateException
      13: dup
      14: ldc           #12                 // String Existing transaction found for transaction marked with propagation \'never\'
      16: invokespecial #13                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      19: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      22: areturn
      23: aload_2
      24: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
      29: iconst_4
      30: if_icmpne     94
      33: iload         4
      35: ifeq          49
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: ldc           #15                 // String Suspending current transaction
      44: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      49: aload_0
      50: aload_1
      51: aload_3
      52: invokespecial #17                 // Method suspend:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      55: astore        5
      57: aload         5
      59: aload_0
      60: aload_1
      61: aload_2
      62: iload         4
      64: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Z)Ljava/util/function/Function;
      69: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      72: aload_0
      73: aload_1
      74: aload_2
      75: iload         4
      77: invokedynamic #20,  0             // InvokeDynamic #2:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Z)Ljava/util/function/Supplier;
      82: invokestatic  #21                 // Method reactor/core/publisher/Mono.fromSupplier:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      85: invokevirtual #22                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      88: ldc           #23                 // class org/springframework/transaction/ReactiveTransaction
      90: invokevirtual #24                 // Method reactor/core/publisher/Mono.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      93: areturn
      94: aload_2
      95: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
     100: iconst_3
     101: if_icmpne     172
     104: iload         4
     106: ifeq          147
     109: aload_0
     110: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     113: new           #25                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #27                 // String Suspending current transaction, creating new transaction with name [
     122: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_2
     126: invokeinterface #29,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getName:()Ljava/lang/String;
     131: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: ldc           #30                 // String ]
     136: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     147: aload_0
     148: aload_1
     149: aload_3
     150: invokespecial #17                 // Method suspend:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     153: astore        5
     155: aload         5
     157: aload_0
     158: aload_1
     159: aload_2
     160: aload_3
     161: iload         4
     163: invokedynamic #32,  0             // InvokeDynamic #3:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;Z)Ljava/util/function/Function;
     168: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     171: areturn
     172: aload_2
     173: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
     178: bipush        6
     180: if_icmpne     265
     183: iload         4
     185: ifeq          226
     188: aload_0
     189: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     192: new           #25                 // class java/lang/StringBuilder
     195: dup
     196: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     199: ldc           #33                 // String Creating nested transaction with name [
     201: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload_2
     205: invokeinterface #29,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getName:()Ljava/lang/String;
     210: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: ldc           #30                 // String ]
     215: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     226: aload_0
     227: aload_1
     228: aload_2
     229: aload_3
     230: iconst_1
     231: iload         4
     233: aconst_null
     234: invokespecial #34                 // Method newReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
     237: astore        5
     239: aload_0
     240: aload_1
     241: aload_3
     242: aload_2
     243: invokevirtual #35                 // Method doBegin:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/TransactionDefinition;)Lreactor/core/publisher/Mono;
     246: aload_0
     247: aload_1
     248: aload         5
     250: aload_2
     251: invokedynamic #36,  0             // InvokeDynamic #4:accept:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)Ljava/util/function/Consumer;
     256: invokevirtual #37                 // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
     259: aload         5
     261: invokevirtual #38                 // Method reactor/core/publisher/Mono.thenReturn:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     264: areturn
     265: iload         4
     267: ifeq          281
     270: aload_0
     271: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     274: ldc           #39                 // String Participating in existing transaction
     276: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     281: aload_0
     282: aload_1
     283: aload_2
     284: aload_3
     285: iconst_0
     286: iload         4
     288: aconst_null
     289: invokespecial #40                 // Method prepareReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
     292: invokestatic  #41                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     295: areturn

  private org.springframework.transaction.reactive.GenericReactiveTransaction prepareReactiveTransaction(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, java.lang.Object, boolean, boolean, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: invokespecial #34                 // Method newReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
      13: astore        7
      15: aload_0
      16: aload_1
      17: aload         7
      19: aload_2
      20: invokespecial #42                 // Method prepareSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)V
      23: aload         7
      25: areturn

  private org.springframework.transaction.reactive.GenericReactiveTransaction newReactiveTransaction(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, java.lang.Object, boolean, boolean, java.lang.Object);
    Code:
       0: new           #43                 // class org/springframework/transaction/reactive/GenericReactiveTransaction
       3: dup
       4: aload_3
       5: iload         4
       7: aload_1
       8: invokevirtual #44                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.isSynchronizationActive:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_2
      20: invokeinterface #45,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
      25: iload         5
      27: aload         6
      29: invokespecial #46                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction."<init>":(Ljava/lang/Object;ZZZZLjava/lang/Object;)V
      32: areturn

  private void prepareSynchronization(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_2
       1: invokevirtual #47                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewSynchronization:()Z
       4: ifeq          66
       7: aload_1
       8: aload_2
       9: invokevirtual #48                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.hasTransaction:()Z
      12: invokevirtual #49                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setActualTransactionActive:(Z)V
      15: aload_1
      16: aload_3
      17: invokeinterface #50,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
      22: iconst_m1
      23: if_icmpeq     38
      26: aload_3
      27: invokeinterface #50,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
      32: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: goto          39
      38: aconst_null
      39: invokevirtual #52                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionIsolationLevel:(Ljava/lang/Integer;)V
      42: aload_1
      43: aload_3
      44: invokeinterface #45,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
      49: invokevirtual #53                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionReadOnly:(Z)V
      52: aload_1
      53: aload_3
      54: invokeinterface #29,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getName:()Ljava/lang/String;
      59: invokevirtual #54                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionName:(Ljava/lang/String;)V
      62: aload_1
      63: invokevirtual #55                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.initSynchronization:()V
      66: return

  private reactor.core.publisher.Mono<org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder> suspend(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.isSynchronizationActive:()Z
       4: ifeq          26
       7: aload_0
       8: aload_1
       9: invokespecial #56                 // Method doSuspendSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Lreactor/core/publisher/Mono;
      12: astore_3
      13: aload_3
      14: aload_0
      15: aload_2
      16: aload_1
      17: invokedynamic #57,  0             // InvokeDynamic #5:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Ljava/lang/Object;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/util/function/Function;
      22: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      25: areturn
      26: aload_2
      27: ifnull        61
      30: aload_0
      31: aload_1
      32: aload_2
      33: invokevirtual #58                 // Method doSuspend:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      36: invokedynamic #59,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      41: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      44: invokestatic  #60                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      47: invokevirtual #61                 // Method reactor/core/publisher/Mono.defaultIfEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      50: astore_3
      51: aload_3
      52: invokedynamic #62,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      57: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      60: areturn
      61: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      64: areturn

  private reactor.core.publisher.Mono<java.lang.Void> resume(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder) throws org.springframework.transaction.TransactionException;
    Code:
       0: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: astore        4
       5: aload_3
       6: ifnull        86
       9: aload_3
      10: invokestatic  #64                 // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder.access$000:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Ljava/lang/Object;
      13: astore        5
      15: aload         5
      17: ifnull        30
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload         5
      25: invokevirtual #65                 // Method doResume:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      28: astore        4
      30: aload_3
      31: invokestatic  #66                 // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder.access$100:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Ljava/util/List;
      34: astore        6
      36: aload         6
      38: ifnull        86
      41: aload_1
      42: aload_3
      43: invokestatic  #67                 // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder.access$200:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Z
      46: invokevirtual #49                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setActualTransactionActive:(Z)V
      49: aload_1
      50: aload_3
      51: invokestatic  #68                 // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder.access$300:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Ljava/lang/Integer;
      54: invokevirtual #52                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionIsolationLevel:(Ljava/lang/Integer;)V
      57: aload_1
      58: aload_3
      59: invokestatic  #69                 // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder.access$400:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Z
      62: invokevirtual #53                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionReadOnly:(Z)V
      65: aload_1
      66: aload_3
      67: invokestatic  #70                 // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder.access$500:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Ljava/lang/String;
      70: invokevirtual #54                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionName:(Ljava/lang/String;)V
      73: aload         4
      75: aload_0
      76: aload_1
      77: aload         6
      79: invokespecial #71                 // Method doResumeSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;)Lreactor/core/publisher/Mono;
      82: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      85: areturn
      86: aload         4
      88: areturn

  private reactor.core.publisher.Mono<java.lang.Void> resumeAfterBeginException(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder, java.lang.Throwable);
    Code:
       0: ldc           #73                 // String Inner transaction begin exception overridden by outer transaction resume exception
       2: astore        5
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #74                 // Method resume:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Lreactor/core/publisher/Mono;
      11: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      14: aload_0
      15: aload         5
      17: aload         4
      19: invokedynamic #76,  0             // InvokeDynamic #8:accept:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      24: invokevirtual #77                 // Method reactor/core/publisher/Mono.doOnError:(Ljava/util/function/Predicate;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      27: areturn

  private reactor.core.publisher.Mono<java.util.List<org.springframework.transaction.reactive.TransactionSynchronization>> doSuspendSynchronization(org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: invokestatic  #79                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
       9: invokedynamic #80,  0             // InvokeDynamic #9:apply:()Ljava/util/function/Function;
      14: invokevirtual #81                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      17: aload_1
      18: aload_2
      19: invokedynamic #82,  0             // InvokeDynamic #10:get:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;)Ljava/util/function/Supplier;
      24: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      27: invokevirtual #84                 // Method reactor/core/publisher/Flux.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      30: areturn

  private reactor.core.publisher.Mono<java.lang.Void> doResumeSynchronization(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.List<org.springframework.transaction.reactive.TransactionSynchronization>);
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.initSynchronization:()V
       4: aload_2
       5: invokestatic  #79                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
       8: aload_1
       9: invokedynamic #85,  0             // InvokeDynamic #11:apply:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/util/function/Function;
      14: invokevirtual #81                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      17: invokevirtual #86                 // Method reactor/core/publisher/Flux.then:()Lreactor/core/publisher/Mono;
      20: areturn

  public final reactor.core.publisher.Mono<java.lang.Void> commit(org.springframework.transaction.ReactiveTransaction) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod org/springframework/transaction/ReactiveTransaction.isCompleted:()Z
       6: ifeq          22
       9: new           #11                 // class org/springframework/transaction/IllegalTransactionStateException
      12: dup
      13: ldc           #88                 // String Transaction is already completed - do not call commit or rollback more than once per transaction
      15: invokespecial #13                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      18: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      21: areturn
      22: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.forCurrentTransaction:()Lreactor/core/publisher/Mono;
      25: aload_0
      26: aload_1
      27: invokedynamic #89,  0             // InvokeDynamic #12:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/ReactiveTransaction;)Ljava/util/function/Function;
      32: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      35: areturn

  private reactor.core.publisher.Mono<java.lang.Void> processCommit(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction) throws org.springframework.transaction.TransactionException;
    Code:
       0: new           #90                 // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #91                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #92                 // Method prepareForCommit:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #93                 // Method triggerBeforeCommit:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      21: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokespecial #94                 // Method triggerBeforeCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      30: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      33: aload_0
      34: aload_3
      35: aload_2
      36: aload_1
      37: invokedynamic #95,  0             // InvokeDynamic #13:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/util/function/Supplier;
      42: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      45: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      48: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      51: aload_0
      52: aload_1
      53: aload_2
      54: aload_3
      55: invokedynamic #96,  0             // InvokeDynamic #14:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
      60: invokevirtual #97                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      63: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      66: aload_0
      67: aload_1
      68: aload_2
      69: invokedynamic #98,  0             // InvokeDynamic #15:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Supplier;
      74: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      77: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      80: astore        4
      82: aload         4
      84: aload_0
      85: aload_1
      86: aload_2
      87: invokedynamic #99,  0             // InvokeDynamic #16:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Function;
      92: invokevirtual #97                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      95: aload_0
      96: aload_1
      97: aload_2
      98: invokespecial #100                // Method cleanupAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
     101: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
     104: areturn

  public final reactor.core.publisher.Mono<java.lang.Void> rollback(org.springframework.transaction.ReactiveTransaction) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod org/springframework/transaction/ReactiveTransaction.isCompleted:()Z
       6: ifeq          22
       9: new           #11                 // class org/springframework/transaction/IllegalTransactionStateException
      12: dup
      13: ldc           #88                 // String Transaction is already completed - do not call commit or rollback more than once per transaction
      15: invokespecial #13                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      18: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      21: areturn
      22: invokestatic  #6                  // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.forCurrentTransaction:()Lreactor/core/publisher/Mono;
      25: aload_0
      26: aload_1
      27: invokedynamic #101,  0            // InvokeDynamic #17:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/ReactiveTransaction;)Ljava/util/function/Function;
      32: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      35: areturn

  private reactor.core.publisher.Mono<java.lang.Void> processRollback(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #94                 // Method triggerBeforeCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
       6: aload_0
       7: aload_2
       8: aload_1
       9: invokedynamic #102,  0            // InvokeDynamic #18:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/util/function/Supplier;
      14: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      17: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      20: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokedynamic #103,  0            // InvokeDynamic #19:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Function;
      31: invokevirtual #104                // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokedynamic #105,  0            // InvokeDynamic #20:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Supplier;
      42: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      45: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      48: aload_0
      49: aload_1
      50: aload_2
      51: invokedynamic #106,  0            // InvokeDynamic #21:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Function;
      56: invokevirtual #97                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      59: aload_0
      60: aload_1
      61: aload_2
      62: invokespecial #100                // Method cleanupAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      65: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      68: areturn

  private reactor.core.publisher.Mono<java.lang.Void> doRollbackOnCommitException(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: invokedynamic #107,  0            // InvokeDynamic #22:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Ljava/lang/Throwable;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/util/function/Supplier;
       9: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      15: aload_0
      16: aload_3
      17: aload_1
      18: aload_2
      19: invokedynamic #108,  0            // InvokeDynamic #23:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Ljava/lang/Throwable;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Function;
      24: invokevirtual #104                // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      27: aload_0
      28: aload_1
      29: aload_2
      30: iconst_1
      31: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
      34: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      37: areturn

  private reactor.core.publisher.Mono<java.lang.Void> triggerBeforeCommit(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_2
       1: invokevirtual #47                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewSynchronization:()Z
       4: ifeq          37
       7: aload_2
       8: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      11: ifeq          25
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #112                // String Triggering beforeCommit synchronization
      20: invokeinterface #113,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      25: aload_1
      26: invokevirtual #78                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
      29: aload_2
      30: invokevirtual #114                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isReadOnly:()Z
      33: invokestatic  #115                // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.triggerBeforeCommit:(Ljava/util/Collection;Z)Lreactor/core/publisher/Mono;
      36: areturn
      37: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      40: areturn

  private reactor.core.publisher.Mono<java.lang.Void> triggerBeforeCompletion(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_2
       1: invokevirtual #47                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewSynchronization:()Z
       4: ifeq          33
       7: aload_2
       8: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      11: ifeq          25
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #116                // String Triggering beforeCompletion synchronization
      20: invokeinterface #113,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      25: aload_1
      26: invokevirtual #78                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
      29: invokestatic  #117                // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.triggerBeforeCompletion:(Ljava/util/Collection;)Lreactor/core/publisher/Mono;
      32: areturn
      33: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      36: areturn

  private reactor.core.publisher.Mono<java.lang.Void> triggerAfterCommit(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_2
       1: invokevirtual #47                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewSynchronization:()Z
       4: ifeq          33
       7: aload_2
       8: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      11: ifeq          25
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #118                // String Triggering afterCommit synchronization
      20: invokeinterface #113,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      25: aload_1
      26: invokevirtual #78                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
      29: invokestatic  #119                // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.invokeAfterCommit:(Ljava/util/Collection;)Lreactor/core/publisher/Mono;
      32: areturn
      33: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      36: areturn

  private reactor.core.publisher.Mono<java.lang.Void> triggerAfterCompletion(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, int);
    Code:
       0: aload_2
       1: invokevirtual #47                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewSynchronization:()Z
       4: ifeq          80
       7: aload_1
       8: invokevirtual #78                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
      11: astore        4
      13: aload_1
      14: invokevirtual #120                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.clearSynchronization:()V
      17: aload_2
      18: invokevirtual #48                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.hasTransaction:()Z
      21: ifeq          31
      24: aload_2
      25: invokevirtual #121                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewTransaction:()Z
      28: ifeq          58
      31: aload_2
      32: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      35: ifeq          49
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: ldc           #122                // String Triggering afterCompletion synchronization
      44: invokeinterface #113,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      49: aload_0
      50: aload_1
      51: aload         4
      53: iload_3
      54: invokespecial #123                // Method invokeAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;I)Lreactor/core/publisher/Mono;
      57: areturn
      58: aload         4
      60: invokeinterface #124,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      65: ifne          80
      68: aload_0
      69: aload_1
      70: aload_2
      71: invokevirtual #125                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.getTransaction:()Ljava/lang/Object;
      74: aload         4
      76: invokevirtual #126                // Method registerAfterCompletionWithExistingTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Ljava/util/List;)Lreactor/core/publisher/Mono;
      79: areturn
      80: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      83: areturn

  private reactor.core.publisher.Mono<java.lang.Void> invokeAfterCompletion(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.List<org.springframework.transaction.reactive.TransactionSynchronization>, int);
    Code:
       0: aload_2
       1: iload_3
       2: invokestatic  #127                // Method org/springframework/transaction/reactive/TransactionSynchronizationUtils.invokeAfterCompletion:(Ljava/util/Collection;I)Lreactor/core/publisher/Mono;
       5: areturn

  private reactor.core.publisher.Mono<java.lang.Void> cleanupAfterCompletion(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #128,  0            // InvokeDynamic #24:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/util/function/Supplier;
       8: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  protected abstract java.lang.Object doGetTransaction(org.springframework.transaction.reactive.TransactionSynchronizationManager) throws org.springframework.transaction.TransactionException;

  protected boolean isExistingTransaction(java.lang.Object) throws org.springframework.transaction.TransactionException;
    Code:
       0: iconst_0
       1: ireturn

  protected abstract reactor.core.publisher.Mono<java.lang.Void> doBegin(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, org.springframework.transaction.TransactionDefinition) throws org.springframework.transaction.TransactionException;

  protected reactor.core.publisher.Mono<java.lang.Object> doSuspend(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object) throws org.springframework.transaction.TransactionException;
    Code:
       0: new           #129                // class org/springframework/transaction/TransactionSuspensionNotSupportedException
       3: dup
       4: new           #25                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #130                // String Transaction manager [
      13: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #131                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #132                // String ] does not support transaction suspension
      28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #133                // Method org/springframework/transaction/TransactionSuspensionNotSupportedException."<init>":(Ljava/lang/String;)V
      37: athrow

  protected reactor.core.publisher.Mono<java.lang.Void> doResume(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, java.lang.Object) throws org.springframework.transaction.TransactionException;
    Code:
       0: new           #129                // class org/springframework/transaction/TransactionSuspensionNotSupportedException
       3: dup
       4: new           #25                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #130                // String Transaction manager [
      13: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #131                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #132                // String ] does not support transaction suspension
      28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #133                // Method org/springframework/transaction/TransactionSuspensionNotSupportedException."<init>":(Ljava/lang/String;)V
      37: athrow

  protected reactor.core.publisher.Mono<java.lang.Void> prepareForCommit(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  protected abstract reactor.core.publisher.Mono<java.lang.Void> doCommit(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction) throws org.springframework.transaction.TransactionException;

  protected abstract reactor.core.publisher.Mono<java.lang.Void> doRollback(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction) throws org.springframework.transaction.TransactionException;

  protected reactor.core.publisher.Mono<java.lang.Void> doSetRollbackOnly(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction) throws org.springframework.transaction.TransactionException;
    Code:
       0: new           #11                 // class org/springframework/transaction/IllegalTransactionStateException
       3: dup
       4: ldc           #134                // String Participating in existing transactions is not supported - when \'isExistingTransaction\' returns true, appropriate \'doSetRollbackOnly\' behavior must be provided
       6: invokespecial #13                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected reactor.core.publisher.Mono<java.lang.Void> registerAfterCompletionWithExistingTransaction(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, java.util.List<org.springframework.transaction.reactive.TransactionSynchronization>) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #135                // String Cannot register Spring after-completion synchronization with existing transaction - processing Spring after-completion callbacks immediately, with outcome status \'unknown\'
       6: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: aload_1
      13: aload_3
      14: iconst_2
      15: invokespecial #123                // Method invokeAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;I)Lreactor/core/publisher/Mono;
      18: areturn

  protected reactor.core.publisher.Mono<java.lang.Void> doCleanupAfterCompletion(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object);
    Code:
       0: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #136                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  private reactor.core.publisher.Mono lambda$cleanupAfterCompletion$33(org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: invokevirtual #137                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.setCompleted:()V
       4: aload_1
       5: invokevirtual #47                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewSynchronization:()Z
       8: ifeq          15
      11: aload_2
      12: invokevirtual #138                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.clear:()V
      15: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      18: astore_3
      19: aload_1
      20: invokevirtual #121                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewTransaction:()Z
      23: ifeq          36
      26: aload_0
      27: aload_2
      28: aload_1
      29: invokevirtual #125                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.getTransaction:()Ljava/lang/Object;
      32: invokevirtual #139                // Method doCleanupAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      35: astore_3
      36: aload_1
      37: invokevirtual #140                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.getSuspendedResources:()Ljava/lang/Object;
      40: ifnull        97
      43: aload_1
      44: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      47: ifeq          61
      50: aload_0
      51: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      54: ldc           #141                // String Resuming suspended transaction after completion of inner transaction
      56: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      61: aload_1
      62: invokevirtual #48                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.hasTransaction:()Z
      65: ifeq          75
      68: aload_1
      69: invokevirtual #125                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.getTransaction:()Ljava/lang/Object;
      72: goto          76
      75: aconst_null
      76: astore        4
      78: aload_3
      79: aload_0
      80: aload_2
      81: aload         4
      83: aload_1
      84: invokevirtual #140                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.getSuspendedResources:()Ljava/lang/Object;
      87: checkcast     #142                // class org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder
      90: invokespecial #74                 // Method resume:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Lreactor/core/publisher/Mono;
      93: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      96: areturn
      97: aload_3
      98: areturn

  private reactor.core.publisher.Mono lambda$doRollbackOnCommitException$32(java.lang.Throwable, org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #143                // String Commit exception overridden by rollback exception
       6: aload_1
       7: invokeinterface #144,  3          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      12: aload_0
      13: aload_2
      14: aload_3
      15: iconst_2
      16: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
      19: aload         4
      21: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      24: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      27: areturn

  private reactor.core.publisher.Mono lambda$doRollbackOnCommitException$31(org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: invokevirtual #121                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewTransaction:()Z
       4: ifeq          33
       7: aload_1
       8: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      11: ifeq          26
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #145                // String Initiating transaction rollback after commit exception
      20: aload_2
      21: invokeinterface #146,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      26: aload_0
      27: aload_3
      28: aload_1
      29: invokevirtual #147                // Method doRollback:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      32: areturn
      33: aload_1
      34: invokevirtual #48                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.hasTransaction:()Z
      37: ifeq          66
      40: aload_1
      41: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      44: ifeq          59
      47: aload_0
      48: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      51: ldc           #148                // String Marking existing transaction as rollback-only after commit exception
      53: aload_2
      54: invokeinterface #146,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      59: aload_0
      60: aload_3
      61: aload_1
      62: invokevirtual #149                // Method doSetRollbackOnly:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      65: areturn
      66: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      69: areturn

  private reactor.core.publisher.Mono lambda$processRollback$30(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #100                // Method cleanupAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
       6: aload_3
       7: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      10: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      13: areturn

  private reactor.core.publisher.Mono lambda$processRollback$29(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
       7: areturn

  private reactor.core.publisher.Mono lambda$processRollback$28(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_2
       4: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
       7: aload_3
       8: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      11: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      14: areturn

  private reactor.core.publisher.Mono lambda$processRollback$27(org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: invokevirtual #121                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewTransaction:()Z
       4: ifeq          32
       7: aload_1
       8: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      11: ifeq          25
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #150                // String Initiating transaction rollback
      20: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      25: aload_0
      26: aload_2
      27: aload_1
      28: invokevirtual #147                // Method doRollback:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      31: areturn
      32: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      35: astore_3
      36: aload_1
      37: invokevirtual #48                 // Method org/springframework/transaction/reactive/GenericReactiveTransaction.hasTransaction:()Z
      40: ifeq          71
      43: aload_1
      44: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      47: ifeq          61
      50: aload_0
      51: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      54: ldc           #151                // String Participating transaction failed - marking existing transaction as rollback-only
      56: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      61: aload_0
      62: aload_2
      63: aload_1
      64: invokevirtual #149                // Method doSetRollbackOnly:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      67: astore_3
      68: goto          82
      71: aload_0
      72: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      75: ldc           #152                // String Should roll back transaction but cannot - no transaction available
      77: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      82: aload_3
      83: areturn

  private reactor.core.publisher.Mono lambda$rollback$26(org.springframework.transaction.ReactiveTransaction, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: checkcast     #43                 // class org/springframework/transaction/reactive/GenericReactiveTransaction
       4: astore_3
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #153                // Method processRollback:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      11: areturn

  private reactor.core.publisher.Mono lambda$processCommit$25(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #100                // Method cleanupAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
       6: aload_3
       7: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      10: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      13: areturn

  private reactor.core.publisher.Mono lambda$processCommit$24(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #154                // Method triggerAfterCommit:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #155,  0            // InvokeDynamic #25:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Ljava/util/function/Function;
      14: invokevirtual #97                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      17: aload_0
      18: aload_1
      19: aload_2
      20: iconst_0
      21: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
      24: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      27: areturn

  private reactor.core.publisher.Mono lambda$null$23(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
       7: aload_3
       8: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      11: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      14: areturn

  private reactor.core.publisher.Mono lambda$processCommit$22(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload         4
       2: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
       5: astore        5
       7: aload         5
       9: astore        6
      11: getstatic     #156                // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.UNEXPECTED_ROLLBACK:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      14: aload         4
      16: invokevirtual #157                // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.test:(Ljava/lang/Throwable;)Z
      19: ifeq          39
      22: aload_0
      23: aload_1
      24: aload_2
      25: iconst_1
      26: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
      29: aload         5
      31: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      34: astore        6
      36: goto          121
      39: getstatic     #158                // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.TRANSACTION_EXCEPTION:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      42: aload         4
      44: invokevirtual #157                // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.test:(Ljava/lang/Throwable;)Z
      47: ifeq          67
      50: aload_0
      51: aload_1
      52: aload_2
      53: iconst_2
      54: invokespecial #110                // Method triggerAfterCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;I)Lreactor/core/publisher/Mono;
      57: aload         5
      59: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      62: astore        6
      64: goto          121
      67: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      70: aload         4
      72: invokevirtual #157                // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.test:(Ljava/lang/Throwable;)Z
      75: ifeq          121
      78: aload_3
      79: invokevirtual #159                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      82: ifne          96
      85: aload_0
      86: aload_1
      87: aload_2
      88: invokespecial #94                 // Method triggerBeforeCompletion:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      91: astore        7
      93: goto          101
      96: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      99: astore        7
     101: aload         7
     103: aload_0
     104: aload_1
     105: aload_2
     106: aload         4
     108: invokespecial #160                // Method doRollbackOnCommitException:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     111: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
     114: aload         5
     116: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
     119: astore        6
     121: aload         6
     123: areturn

  private reactor.core.publisher.Mono lambda$processCommit$21(java.util.concurrent.atomic.AtomicBoolean, org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #161                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aload_2
       6: invokevirtual #121                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isNewTransaction:()Z
       9: ifeq          37
      12: aload_2
      13: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      16: ifeq          30
      19: aload_0
      20: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #162                // String Initiating transaction commit
      25: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      30: aload_0
      31: aload_3
      32: aload_2
      33: invokevirtual #163                // Method doCommit:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      36: areturn
      37: invokestatic  #63                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      40: areturn

  private reactor.core.publisher.Mono lambda$commit$20(org.springframework.transaction.ReactiveTransaction, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_1
       1: checkcast     #43                 // class org/springframework/transaction/reactive/GenericReactiveTransaction
       4: astore_3
       5: aload_3
       6: invokevirtual #164                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isRollbackOnly:()Z
       9: ifeq          37
      12: aload_3
      13: invokevirtual #111                // Method org/springframework/transaction/reactive/GenericReactiveTransaction.isDebug:()Z
      16: ifeq          30
      19: aload_0
      20: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #165                // String Transactional code has requested rollback
      25: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      30: aload_0
      31: aload_2
      32: aload_3
      33: invokespecial #153                // Method processRollback:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      36: areturn
      37: aload_0
      38: aload_2
      39: aload_3
      40: invokespecial #166                // Method processCommit:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;)Lreactor/core/publisher/Mono;
      43: areturn

  private static org.reactivestreams.Publisher lambda$doResumeSynchronization$19(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.TransactionSynchronization);
    Code:
       0: aload_1
       1: invokeinterface #167,  1          // InterfaceMethod org/springframework/transaction/reactive/TransactionSynchronization.resume:()Lreactor/core/publisher/Mono;
       6: aload_0
       7: aload_1
       8: invokedynamic #168,  0            // InvokeDynamic #26:accept:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/TransactionSynchronization;)Ljava/util/function/Consumer;
      13: invokevirtual #37                 // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      16: areturn

  private static void lambda$null$18(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.TransactionSynchronization, java.lang.Void);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #169                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronization;)V
       5: return

  private static reactor.core.publisher.Mono lambda$doSuspendSynchronization$17(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.List);
    Code:
       0: aload_0
       1: invokevirtual #120                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.clearSynchronization:()V
       4: aload_1
       5: invokestatic  #41                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       8: areturn

  private void lambda$resumeAfterBeginException$16(java.lang.String, java.lang.Throwable, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #144,  3          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  private static org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder lambda$suspend$15(java.util.Optional);
    Code:
       0: new           #142                // class org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokevirtual #170                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       9: aconst_null
      10: invokespecial #171                // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder."<init>":(Ljava/lang/Object;Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$1;)V
      13: areturn

  private reactor.core.publisher.Mono lambda$suspend$14(java.lang.Object, org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.List);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokevirtual #58                 // Method doSuspend:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      10: invokedynamic #59,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      15: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      18: invokestatic  #60                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      21: invokevirtual #61                 // Method reactor/core/publisher/Mono.defaultIfEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      24: goto          33
      27: invokestatic  #60                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      30: invokestatic  #41                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      33: astore        4
      35: aload         4
      37: aload_2
      38: aload_3
      39: invokedynamic #172,  0            // InvokeDynamic #27:apply:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;)Ljava/util/function/Function;
      44: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      47: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      50: aload_0
      51: aload_2
      52: aload_3
      53: invokedynamic #173,  0            // InvokeDynamic #28:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;)Ljava/util/function/Function;
      58: invokevirtual #104                // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      61: areturn

  private reactor.core.publisher.Mono lambda$null$13(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.List, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #71                 // Method doResumeSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/List;)Lreactor/core/publisher/Mono;
       6: ldc           #142                // class org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder
       8: invokevirtual #24                 // Method reactor/core/publisher/Mono.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      11: areturn

  private static org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder lambda$null$12(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.List, java.util.Optional);
    Code:
       0: aload_0
       1: invokevirtual #174                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getCurrentTransactionName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aconst_null
       7: invokevirtual #54                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionName:(Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #175                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.isCurrentTransactionReadOnly:()Z
      14: istore        4
      16: aload_0
      17: iconst_0
      18: invokevirtual #53                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionReadOnly:(Z)V
      21: aload_0
      22: invokevirtual #176                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.getCurrentTransactionIsolationLevel:()Ljava/lang/Integer;
      25: astore        5
      27: aload_0
      28: aconst_null
      29: invokevirtual #52                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setCurrentTransactionIsolationLevel:(Ljava/lang/Integer;)V
      32: aload_0
      33: invokevirtual #177                // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.isActualTransactionActive:()Z
      36: istore        6
      38: aload_0
      39: iconst_0
      40: invokevirtual #49                 // Method org/springframework/transaction/reactive/TransactionSynchronizationManager.setActualTransactionActive:(Z)V
      43: new           #142                // class org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder
      46: dup
      47: aload_2
      48: aconst_null
      49: invokevirtual #170                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      52: aload_1
      53: aload_3
      54: iload         4
      56: aload         5
      58: iload         6
      60: aconst_null
      61: invokespecial #178                // Method org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder."<init>":(Ljava/lang/Object;Ljava/util/List;Ljava/lang/String;ZLjava/lang/Integer;ZLorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$1;)V
      64: areturn

  private void lambda$handleExistingTransaction$11(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.TransactionDefinition, java.lang.Void);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #42                 // Method prepareSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)V
       7: return

  private reactor.core.publisher.Mono lambda$handleExistingTransaction$10(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, java.lang.Object, boolean, org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: iload         4
       7: aload         5
       9: invokespecial #34                 // Method newReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
      12: astore        6
      14: aload_0
      15: aload_1
      16: aload_3
      17: aload_2
      18: invokevirtual #35                 // Method doBegin:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/TransactionDefinition;)Lreactor/core/publisher/Mono;
      21: aload_0
      22: aload_1
      23: aload         6
      25: aload_2
      26: invokedynamic #179,  0            // InvokeDynamic #29:accept:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)Ljava/util/function/Consumer;
      31: invokevirtual #37                 // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      34: aload         6
      36: invokevirtual #38                 // Method reactor/core/publisher/Mono.thenReturn:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      39: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      42: aload_0
      43: aload_1
      44: aload_3
      45: aload         5
      47: invokedynamic #180,  0            // InvokeDynamic #30:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Ljava/util/function/Function;
      52: invokevirtual #104                // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      55: areturn

  private reactor.core.publisher.Mono lambda$null$9(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #181                // Method resumeAfterBeginException:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
       9: aload         4
      11: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      14: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      17: areturn

  private void lambda$null$8(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.TransactionDefinition, java.lang.Void);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #42                 // Method prepareSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)V
       7: return

  private org.springframework.transaction.reactive.GenericReactiveTransaction lambda$handleExistingTransaction$7(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iconst_0
       5: iload_3
       6: aconst_null
       7: invokespecial #40                 // Method prepareReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
      10: areturn

  private org.springframework.transaction.reactive.GenericReactiveTransaction lambda$handleExistingTransaction$6(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, boolean, org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iconst_0
       5: iload_3
       6: aload         4
       8: invokespecial #40                 // Method prepareReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
      11: areturn

  private reactor.core.publisher.Mono lambda$getReactiveTransaction$5(org.springframework.transaction.TransactionDefinition, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #182                // Method doGetTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      10: invokeinterface #183,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      15: istore        4
      17: aload_0
      18: aload_3
      19: invokevirtual #184                // Method isExistingTransaction:(Ljava/lang/Object;)Z
      22: ifeq          35
      25: aload_0
      26: aload_2
      27: aload_1
      28: aload_3
      29: iload         4
      31: invokespecial #185                // Method handleExistingTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;Z)Lreactor/core/publisher/Mono;
      34: areturn
      35: aload_1
      36: invokeinterface #186,  1          // InterfaceMethod org/springframework/transaction/TransactionDefinition.getTimeout:()I
      41: iconst_m1
      42: if_icmpge     64
      45: new           #187                // class org/springframework/transaction/InvalidTimeoutException
      48: dup
      49: ldc           #188                // String Invalid transaction timeout
      51: aload_1
      52: invokeinterface #186,  1          // InterfaceMethod org/springframework/transaction/TransactionDefinition.getTimeout:()I
      57: invokespecial #189                // Method org/springframework/transaction/InvalidTimeoutException."<init>":(Ljava/lang/String;I)V
      60: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      63: areturn
      64: aload_1
      65: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
      70: iconst_2
      71: if_icmpne     87
      74: new           #11                 // class org/springframework/transaction/IllegalTransactionStateException
      77: dup
      78: ldc           #190                // String No existing transaction found for transaction marked with propagation \'mandatory\'
      80: invokespecial #13                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      83: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      86: areturn
      87: aload_1
      88: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
      93: ifeq          117
      96: aload_1
      97: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
     102: iconst_3
     103: if_icmpeq     117
     106: aload_1
     107: invokeinterface #9,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getPropagationBehavior:()I
     112: bipush        6
     114: if_icmpne     142
     117: invokestatic  #191                // Method org/springframework/transaction/reactive/TransactionContextManager.currentContext:()Lreactor/core/publisher/Mono;
     120: invokedynamic #192,  0            // InvokeDynamic #31:apply:()Ljava/util/function/Function;
     125: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     128: aload_0
     129: iload         4
     131: aload_1
     132: aload_3
     133: invokedynamic #193,  0            // InvokeDynamic #32:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;ZLorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;)Ljava/util/function/Function;
     138: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     141: areturn
     142: aload_1
     143: invokeinterface #50,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     148: iconst_m1
     149: if_icmpeq     192
     152: aload_0
     153: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     156: invokeinterface #194,  1          // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     161: ifeq          192
     164: aload_0
     165: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     168: new           #25                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #195                // String Custom isolation level specified but no actual transaction initiated; isolation level will effectively be ignored:
     177: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_1
     181: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     184: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: invokeinterface #197,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     192: aload_0
     193: aload_2
     194: aload_1
     195: aconst_null
     196: iconst_1
     197: iload         4
     199: aconst_null
     200: invokespecial #40                 // Method prepareReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
     203: invokestatic  #41                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     206: areturn

  private reactor.core.publisher.Mono lambda$null$4(boolean, org.springframework.transaction.TransactionDefinition, java.lang.Object, org.springframework.transaction.reactive.TransactionSynchronizationManager);
    Code:
       0: aload_0
       1: aload         4
       3: aconst_null
       4: invokespecial #17                 // Method suspend:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       7: invokedynamic #198,  0            // InvokeDynamic #33:apply:()Ljava/util/function/Function;
      12: invokevirtual #19                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      15: invokestatic  #60                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      18: invokevirtual #61                 // Method reactor/core/publisher/Mono.defaultIfEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      21: aload_0
      22: iload_1
      23: aload_2
      24: aload         4
      26: aload_3
      27: invokedynamic #199,  0            // InvokeDynamic #34:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;ZLorg/springframework/transaction/TransactionDefinition;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;)Ljava/util/function/Function;
      32: invokevirtual #8                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      35: areturn

  private reactor.core.publisher.Mono lambda$null$3(boolean, org.springframework.transaction.TransactionDefinition, org.springframework.transaction.reactive.TransactionSynchronizationManager, java.lang.Object, java.util.Optional);
    Code:
       0: iload_1
       1: ifeq          46
       4: aload_0
       5: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #25                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #200                // String Creating new transaction with name [
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_2
      21: invokeinterface #29,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getName:()Ljava/lang/String;
      26: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #201                // String ]:
      31: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      46: aload_0
      47: aload_3
      48: aload_2
      49: aload         4
      51: iload_1
      52: aload         5
      54: invokedynamic #202,  0            // InvokeDynamic #35:get:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZLjava/util/Optional;)Ljava/util/function/Supplier;
      59: invokestatic  #83                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      62: getstatic     #75                 // Field org/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates.RUNTIME_OR_ERROR:Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$ErrorPredicates;
      65: aload_0
      66: aload_3
      67: aload         5
      69: invokedynamic #203,  0            // InvokeDynamic #36:apply:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/util/Optional;)Ljava/util/function/Function;
      74: invokevirtual #104                // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      77: areturn

  private reactor.core.publisher.Mono lambda$null$2(org.springframework.transaction.reactive.TransactionSynchronizationManager, java.util.Optional, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aconst_null
       5: invokevirtual #170                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #142                // class org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder
      11: invokespecial #74                 // Method resume:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder;)Lreactor/core/publisher/Mono;
      14: aload_3
      15: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      18: invokevirtual #72                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      21: areturn

  private reactor.core.publisher.Mono lambda$null$1(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.TransactionDefinition, java.lang.Object, boolean, java.util.Optional);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: iload         4
       7: aload         5
       9: aconst_null
      10: invokevirtual #170                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokespecial #34                 // Method newReactiveTransaction:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/TransactionDefinition;Ljava/lang/Object;ZZLjava/lang/Object;)Lorg/springframework/transaction/reactive/GenericReactiveTransaction;
      16: astore        6
      18: aload_0
      19: aload_1
      20: aload_3
      21: aload_2
      22: invokevirtual #35                 // Method doBegin:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Ljava/lang/Object;Lorg/springframework/transaction/TransactionDefinition;)Lreactor/core/publisher/Mono;
      25: aload_0
      26: aload_1
      27: aload         6
      29: aload_2
      30: invokedynamic #204,  0            // InvokeDynamic #37:accept:(Lorg/springframework/transaction/reactive/AbstractReactiveTransactionManager;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)Ljava/util/function/Consumer;
      35: invokevirtual #37                 // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      38: aload         6
      40: invokevirtual #38                 // Method reactor/core/publisher/Mono.thenReturn:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      43: areturn

  private void lambda$null$0(org.springframework.transaction.reactive.TransactionSynchronizationManager, org.springframework.transaction.reactive.GenericReactiveTransaction, org.springframework.transaction.TransactionDefinition, java.lang.Void);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #42                 // Method prepareSynchronization:(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/transaction/reactive/GenericReactiveTransaction;Lorg/springframework/transaction/TransactionDefinition;)V
       7: return
}
