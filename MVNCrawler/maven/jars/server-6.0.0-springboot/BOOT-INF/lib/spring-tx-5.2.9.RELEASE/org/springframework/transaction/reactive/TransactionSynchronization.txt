Compiled from "TransactionSynchronization.java"
public interface org.springframework.transaction.reactive.TransactionSynchronization {
  public static final int STATUS_COMMITTED;

  public static final int STATUS_ROLLED_BACK;

  public static final int STATUS_UNKNOWN;

  public default reactor.core.publisher.Mono<java.lang.Void> suspend();
    Code:
       0: invokestatic  #1                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  public default reactor.core.publisher.Mono<java.lang.Void> resume();
    Code:
       0: invokestatic  #1                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  public default reactor.core.publisher.Mono<java.lang.Void> beforeCommit(boolean);
    Code:
       0: invokestatic  #1                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  public default reactor.core.publisher.Mono<java.lang.Void> beforeCompletion();
    Code:
       0: invokestatic  #1                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  public default reactor.core.publisher.Mono<java.lang.Void> afterCommit();
    Code:
       0: invokestatic  #1                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn

  public default reactor.core.publisher.Mono<java.lang.Void> afterCompletion(int);
    Code:
       0: invokestatic  #1                  // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
       3: areturn
}
