Compiled from "TransactionAspectSupport.java"
public abstract class org.springframework.transaction.interceptor.TransactionAspectSupport implements org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private static final java.lang.Object DEFAULT_TRANSACTION_MANAGER_KEY;

  private static final boolean vavrPresent;

  private static final boolean reactiveStreamsPresent;

  private static final java.lang.ThreadLocal<org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo> transactionInfoHolder;

  protected final org.apache.commons.logging.Log logger;

  private final org.springframework.core.ReactiveAdapterRegistry reactiveAdapterRegistry;

  private java.lang.String transactionManagerBeanName;

  private org.springframework.transaction.TransactionManager transactionManager;

  private org.springframework.transaction.interceptor.TransactionAttributeSource transactionAttributeSource;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, org.springframework.transaction.TransactionManager> transactionManagerCache;

  private final java.util.concurrent.ConcurrentMap<java.lang.reflect.Method, org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport> transactionSupportCache;

  protected static org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo currentTransactionInfo() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: getstatic     #2                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
       9: areturn

  public static org.springframework.transaction.TransactionStatus currentTransactionStatus() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: invokestatic  #5                  // Method currentTransactionInfo:()Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
       3: astore_0
       4: aload_0
       5: ifnull        15
       8: aload_0
       9: invokestatic  #6                  // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$000:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/TransactionStatus;
      12: ifnonnull     25
      15: new           #7                  // class org/springframework/transaction/NoTransactionException
      18: dup
      19: ldc           #8                  // String No transaction aspect-managed TransactionStatus in scope
      21: invokespecial #9                  // Method org/springframework/transaction/NoTransactionException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: invokestatic  #6                  // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$000:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/TransactionStatus;
      29: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #12                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #14                 // class org/springframework/util/ConcurrentReferenceHashMap
      19: dup
      20: iconst_4
      21: invokespecial #15                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      24: putfield      #16                 // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      27: aload_0
      28: new           #14                 // class org/springframework/util/ConcurrentReferenceHashMap
      31: dup
      32: sipush        1024
      35: invokespecial #15                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      38: putfield      #17                 // Field transactionSupportCache:Ljava/util/concurrent/ConcurrentMap;
      41: getstatic     #18                 // Field reactiveStreamsPresent:Z
      44: ifeq          57
      47: aload_0
      48: invokestatic  #19                 // Method org/springframework/core/ReactiveAdapterRegistry.getSharedInstance:()Lorg/springframework/core/ReactiveAdapterRegistry;
      51: putfield      #20                 // Field reactiveAdapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      54: goto          62
      57: aload_0
      58: aconst_null
      59: putfield      #20                 // Field reactiveAdapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      62: return

  public void setTransactionManagerBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field transactionManagerBeanName:Ljava/lang/String;
       5: return

  protected final java.lang.String getTransactionManagerBeanName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field transactionManagerBeanName:Ljava/lang/String;
       4: areturn

  public void setTransactionManager(org.springframework.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field transactionManager:Lorg/springframework/transaction/TransactionManager;
       5: return

  public org.springframework.transaction.TransactionManager getTransactionManager();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transactionManager:Lorg/springframework/transaction/TransactionManager;
       4: areturn

  public void setTransactionAttributes(java.util.Properties);
    Code:
       0: new           #23                 // class org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource
       3: dup
       4: invokespecial #24                 // Method org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #25                 // Method org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.setProperties:(Ljava/util/Properties;)V
      13: aload_0
      14: aload_2
      15: putfield      #26                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      18: return

  public void setTransactionAttributeSources(org.springframework.transaction.interceptor.TransactionAttributeSource...);
    Code:
       0: aload_0
       1: new           #27                 // class org/springframework/transaction/interceptor/CompositeTransactionAttributeSource
       4: dup
       5: aload_1
       6: invokespecial #28                 // Method org/springframework/transaction/interceptor/CompositeTransactionAttributeSource."<init>":([Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
       9: putfield      #26                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      12: return

  public void setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       5: return

  public org.springframework.transaction.interceptor.TransactionAttributeSource getTransactionAttributeSource();
    Code:
       0: aload_0
       1: getfield      #26                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       4: areturn

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  protected final org.springframework.beans.factory.BeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       4: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getTransactionManager:()Lorg/springframework/transaction/TransactionManager;
       4: ifnonnull     24
       7: aload_0
       8: getfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      11: ifnonnull     24
      14: new           #31                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #32                 // String Set the \'transactionManager\' property or make sure to run within a BeanFactory containing a TransactionManager bean!
      20: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokevirtual #34                 // Method getTransactionAttributeSource:()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      28: ifnonnull     41
      31: new           #31                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #35                 // String Either \'transactionAttributeSource\' or \'transactionAttributes\' is required: If there are no transactional methods, then don\'t use a transaction aspect.
      37: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  protected java.lang.Object invokeWithinTransaction(java.lang.reflect.Method, java.lang.Class<?>, org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getTransactionAttributeSource:()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       4: astore        4
       6: aload         4
       8: ifnull        23
      11: aload         4
      13: aload_1
      14: aload_2
      15: invokeinterface #36,  3           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttributeSource.getTransactionAttribute:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      20: goto          24
      23: aconst_null
      24: astore        5
      26: aload_0
      27: aload         5
      29: invokevirtual #37                 // Method determineTransactionManager:(Lorg/springframework/transaction/interceptor/TransactionAttribute;)Lorg/springframework/transaction/TransactionManager;
      32: astore        6
      34: aload_0
      35: getfield      #20                 // Field reactiveAdapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      38: ifnull        87
      41: aload         6
      43: instanceof    #38                 // class org/springframework/transaction/ReactiveTransactionManager
      46: ifeq          87
      49: aload_0
      50: getfield      #17                 // Field transactionSupportCache:Ljava/util/concurrent/ConcurrentMap;
      53: aload_1
      54: aload_0
      55: aload_1
      56: invokedynamic #39,  0             // InvokeDynamic #0:apply:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Ljava/lang/reflect/Method;)Ljava/util/function/Function;
      61: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      66: checkcast     #41                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ReactiveTransactionSupport
      69: astore        7
      71: aload         7
      73: aload_1
      74: aload_2
      75: aload_3
      76: aload         5
      78: aload         6
      80: checkcast     #38                 // class org/springframework/transaction/ReactiveTransactionManager
      83: invokevirtual #42                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ReactiveTransactionSupport.invokeWithinTransaction:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback;Lorg/springframework/transaction/interceptor/TransactionAttribute;Lorg/springframework/transaction/ReactiveTransactionManager;)Ljava/lang/Object;
      86: areturn
      87: aload_0
      88: aload         6
      90: invokespecial #43                 // Method asPlatformTransactionManager:(Ljava/lang/Object;)Lorg/springframework/transaction/PlatformTransactionManager;
      93: astore        7
      95: aload_0
      96: aload_1
      97: aload_2
      98: aload         5
     100: invokespecial #1                  // Method methodIdentification:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/springframework/transaction/interceptor/TransactionAttribute;)Ljava/lang/String;
     103: astore        8
     105: aload         5
     107: ifnull        118
     110: aload         7
     112: instanceof    #44                 // class org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
     115: ifne          227
     118: aload_0
     119: aload         7
     121: aload         5
     123: aload         8
     125: invokevirtual #45                 // Method createTransactionIfNecessary:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
     128: astore        9
     130: aload_3
     131: invokeinterface #46,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback.proceedWithInvocation:()Ljava/lang/Object;
     136: astore        10
     138: aload_0
     139: aload         9
     141: invokevirtual #47                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     144: goto          171
     147: astore        11
     149: aload_0
     150: aload         9
     152: aload         11
     154: invokevirtual #49                 // Method completeTransactionAfterThrowing:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;Ljava/lang/Throwable;)V
     157: aload         11
     159: athrow
     160: astore        12
     162: aload_0
     163: aload         9
     165: invokevirtual #47                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     168: aload         12
     170: athrow
     171: aload         10
     173: ifnull        218
     176: getstatic     #50                 // Field vavrPresent:Z
     179: ifeq          218
     182: aload         10
     184: invokestatic  #51                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$VavrDelegate.isVavrTry:(Ljava/lang/Object;)Z
     187: ifeq          218
     190: aload         9
     192: invokevirtual #52                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
     195: astore        11
     197: aload         11
     199: ifnull        218
     202: aload         5
     204: ifnull        218
     207: aload         10
     209: aload         5
     211: aload         11
     213: invokestatic  #53                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$VavrDelegate.evaluateTryFailure:(Ljava/lang/Object;Lorg/springframework/transaction/interceptor/TransactionAttribute;Lorg/springframework/transaction/TransactionStatus;)Ljava/lang/Object;
     216: astore        10
     218: aload_0
     219: aload         9
     221: invokevirtual #54                 // Method commitTransactionAfterReturning:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     224: aload         10
     226: areturn
     227: new           #55                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder
     230: dup
     231: aconst_null
     232: invokespecial #56                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$1;)V
     235: astore        10
     237: aload         7
     239: checkcast     #44                 // class org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
     242: aload         5
     244: aload_0
     245: aload         7
     247: aload         5
     249: aload         8
     251: aload_3
     252: aload         10
     254: invokedynamic #57,  0             // InvokeDynamic #1:doInTransaction:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder;)Lorg/springframework/transaction/support/TransactionCallback;
     259: invokeinterface #58,  3           // InterfaceMethod org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.execute:(Lorg/springframework/transaction/TransactionDefinition;Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
     264: astore        9
     266: goto          345
     269: astore        11
     271: aload         11
     273: invokevirtual #60                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException.getCause:()Ljava/lang/Throwable;
     276: athrow
     277: astore        11
     279: aload         10
     281: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     284: ifnull        313
     287: aload_0
     288: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
     291: ldc           #63                 // String Application exception overridden by commit exception
     293: aload         10
     295: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     298: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     303: aload         11
     305: aload         10
     307: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     310: invokevirtual #65                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     313: aload         11
     315: athrow
     316: astore        11
     318: aload         10
     320: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     323: ifnull        342
     326: aload_0
     327: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
     330: ldc           #63                 // String Application exception overridden by commit exception
     332: aload         10
     334: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     337: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     342: aload         11
     344: athrow
     345: aload         10
     347: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     350: ifnull        359
     353: aload         10
     355: getfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     358: athrow
     359: aload         9
     361: areturn
    Exception table:
       from    to  target type
         130   138   147   Class java/lang/Throwable
         130   138   160   any
         147   162   160   any
         237   266   269   Class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException
         237   266   277   Class org/springframework/transaction/TransactionSystemException
         237   266   316   Class java/lang/Throwable

  protected void clearTransactionManagerCache();
    Code:
       0: aload_0
       1: getfield      #16                 // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: aconst_null
      11: putfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      14: return

  protected org.springframework.transaction.TransactionManager determineTransactionManager(org.springframework.transaction.interceptor.TransactionAttribute);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       8: ifnonnull     16
      11: aload_0
      12: invokevirtual #30                 // Method getTransactionManager:()Lorg/springframework/transaction/TransactionManager;
      15: areturn
      16: aload_1
      17: invokeinterface #67,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.getQualifier:()Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: invokestatic  #68                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      27: ifeq          40
      30: aload_0
      31: aload_0
      32: getfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      35: aload_2
      36: invokespecial #69                 // Method determineQualifiedTransactionManager:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/TransactionManager;
      39: areturn
      40: aload_0
      41: getfield      #21                 // Field transactionManagerBeanName:Ljava/lang/String;
      44: invokestatic  #68                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      47: ifeq          63
      50: aload_0
      51: aload_0
      52: getfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      55: aload_0
      56: getfield      #21                 // Field transactionManagerBeanName:Ljava/lang/String;
      59: invokespecial #69                 // Method determineQualifiedTransactionManager:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/TransactionManager;
      62: areturn
      63: aload_0
      64: invokevirtual #30                 // Method getTransactionManager:()Lorg/springframework/transaction/TransactionManager;
      67: astore_3
      68: aload_3
      69: ifnonnull     121
      72: aload_0
      73: getfield      #16                 // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      76: getstatic     #70                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
      79: invokeinterface #71,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #72                 // class org/springframework/transaction/TransactionManager
      87: astore_3
      88: aload_3
      89: ifnonnull     121
      92: aload_0
      93: getfield      #29                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      96: ldc           #72                 // class org/springframework/transaction/TransactionManager
      98: invokeinterface #73,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
     103: checkcast     #72                 // class org/springframework/transaction/TransactionManager
     106: astore_3
     107: aload_0
     108: getfield      #16                 // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
     111: getstatic     #70                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
     114: aload_3
     115: invokeinterface #74,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: aload_3
     122: areturn

  private org.springframework.transaction.TransactionManager determineQualifiedTransactionManager(org.springframework.beans.factory.BeanFactory, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #71,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #72                 // class org/springframework/transaction/TransactionManager
      13: astore_3
      14: aload_3
      15: ifnonnull     41
      18: aload_1
      19: ldc           #72                 // class org/springframework/transaction/TransactionManager
      21: aload_2
      22: invokestatic  #75                 // Method org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.qualifiedBeanOfType:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #72                 // class org/springframework/transaction/TransactionManager
      28: astore_3
      29: aload_0
      30: getfield      #16                 // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      33: aload_2
      34: aload_3
      35: invokeinterface #74,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_3
      42: areturn

  private org.springframework.transaction.PlatformTransactionManager asPlatformTransactionManager(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #76                 // class org/springframework/transaction/PlatformTransactionManager
       8: ifeq          16
      11: aload_1
      12: checkcast     #76                 // class org/springframework/transaction/PlatformTransactionManager
      15: areturn
      16: new           #31                 // class java/lang/IllegalStateException
      19: dup
      20: new           #77                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #79                 // String Specified transaction manager is not a PlatformTransactionManager:
      29: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow

  private java.lang.String methodIdentification(java.lang.reflect.Method, java.lang.Class<?>, org.springframework.transaction.interceptor.TransactionAttribute);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #83                 // Method methodIdentification:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;
       6: astore        4
       8: aload         4
      10: ifnonnull     41
      13: aload_3
      14: instanceof    #84                 // class org/springframework/transaction/interceptor/DefaultTransactionAttribute
      17: ifeq          29
      20: aload_3
      21: checkcast     #84                 // class org/springframework/transaction/interceptor/DefaultTransactionAttribute
      24: invokevirtual #85                 // Method org/springframework/transaction/interceptor/DefaultTransactionAttribute.getDescriptor:()Ljava/lang/String;
      27: astore        4
      29: aload         4
      31: ifnonnull     41
      34: aload_1
      35: aload_2
      36: invokestatic  #86                 // Method org/springframework/util/ClassUtils.getQualifiedMethodName:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;
      39: astore        4
      41: aload         4
      43: areturn

  protected java.lang.String methodIdentification(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aconst_null
       1: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo createTransactionIfNecessary(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        24
       4: aload_2
       5: invokeinterface #87,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.getName:()Ljava/lang/String;
      10: ifnonnull     24
      13: new           #88                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$1
      16: dup
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokespecial #89                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$1."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
      23: astore_2
      24: aconst_null
      25: astore        4
      27: aload_2
      28: ifnull        92
      31: aload_1
      32: ifnull        47
      35: aload_1
      36: aload_2
      37: invokeinterface #90,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.getTransaction:(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
      42: astore        4
      44: goto          92
      47: aload_0
      48: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      51: invokeinterface #91,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      56: ifeq          92
      59: aload_0
      60: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      63: new           #77                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #92                 // String Skipping transactional joinpoint [
      72: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_3
      76: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #93                 // String ] because no transaction manager has been configured
      81: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokeinterface #94,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      92: aload_0
      93: aload_1
      94: aload_2
      95: aload_3
      96: aload         4
      98: invokevirtual #95                 // Method prepareTransactionInfo:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/TransactionStatus;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
     101: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo prepareTransactionInfo(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String, org.springframework.transaction.TransactionStatus);
    Code:
       0: new           #4                  // class org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #96                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo."<init>":(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
      10: astore        5
      12: aload_2
      13: ifnull        75
      16: aload_0
      17: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      20: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      25: ifeq          65
      28: aload_0
      29: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      32: new           #77                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #98                 // String Getting transaction for [
      41: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload         5
      46: invokevirtual #99                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      49: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #100                // String ]
      54: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      65: aload         5
      67: aload         4
      69: invokevirtual #102                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.newTransactionStatus:(Lorg/springframework/transaction/TransactionStatus;)V
      72: goto          120
      75: aload_0
      76: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      79: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      84: ifeq          120
      87: aload_0
      88: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      91: new           #77                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #103                // String No need to create transaction for [
     100: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_3
     104: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #104                // String ]: This method is not transactional.
     109: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     120: aload         5
     122: invokestatic  #105                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$200:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     125: aload         5
     127: areturn

  protected void commitTransactionAfterReturning(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo);
    Code:
       0: aload_1
       1: ifnull        72
       4: aload_1
       5: invokevirtual #52                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
       8: ifnull        72
      11: aload_0
      12: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      15: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      20: ifeq          59
      23: aload_0
      24: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #77                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #106                // String Completing transaction for [
      36: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #99                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      43: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #100                // String ]
      48: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      59: aload_1
      60: invokevirtual #107                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      63: aload_1
      64: invokevirtual #52                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
      67: invokeinterface #108,  2          // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
      72: return

  protected void completeTransactionAfterThrowing(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        185
       4: aload_1
       5: invokevirtual #52                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
       8: ifnull        185
      11: aload_0
      12: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      15: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      20: ifeq          63
      23: aload_0
      24: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #77                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #106                // String Completing transaction for [
      36: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #99                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      43: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #109                // String ] after exception:
      48: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      63: aload_1
      64: invokestatic  #110                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$300:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      67: ifnull        134
      70: aload_1
      71: invokestatic  #110                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$300:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      74: aload_2
      75: invokeinterface #111,  2          // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.rollbackOn:(Ljava/lang/Throwable;)Z
      80: ifeq          134
      83: aload_1
      84: invokevirtual #107                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      87: aload_1
      88: invokevirtual #52                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
      91: invokeinterface #112,  2          // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.rollback:(Lorg/springframework/transaction/TransactionStatus;)V
      96: goto          185
      99: astore_3
     100: aload_0
     101: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
     104: ldc           #113                // String Application exception overridden by rollback exception
     106: aload_2
     107: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     112: aload_3
     113: aload_2
     114: invokevirtual #65                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     117: aload_3
     118: athrow
     119: astore_3
     120: aload_0
     121: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
     124: ldc           #113                // String Application exception overridden by rollback exception
     126: aload_2
     127: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     132: aload_3
     133: athrow
     134: aload_1
     135: invokevirtual #107                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
     138: aload_1
     139: invokevirtual #52                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
     142: invokeinterface #108,  2          // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
     147: goto          185
     150: astore_3
     151: aload_0
     152: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
     155: ldc           #63                 // String Application exception overridden by commit exception
     157: aload_2
     158: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     163: aload_3
     164: aload_2
     165: invokevirtual #65                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     168: aload_3
     169: athrow
     170: astore_3
     171: aload_0
     172: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
     175: ldc           #63                 // String Application exception overridden by commit exception
     177: aload_2
     178: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     183: aload_3
     184: athrow
     185: return
    Exception table:
       from    to  target type
          83    96    99   Class org/springframework/transaction/TransactionSystemException
          83    96   119   Class java/lang/RuntimeException
          83    96   119   Class java/lang/Error
         134   147   150   Class org/springframework/transaction/TransactionSystemException
         134   147   170   Class java/lang/RuntimeException
         134   147   170   Class java/lang/Error

  protected void cleanupTransactionInfo(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokestatic  #116                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$400:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
       8: return

  private java.lang.Object lambda$invokeWithinTransaction$1(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String, org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback, org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolder, org.springframework.transaction.TransactionStatus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         6
       6: invokevirtual #95                 // Method prepareTransactionInfo:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/TransactionStatus;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
       9: astore        7
      11: aload         4
      13: invokeinterface #46,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback.proceedWithInvocation:()Ljava/lang/Object;
      18: astore        8
      20: aload         8
      22: ifnull        49
      25: getstatic     #50                 // Field vavrPresent:Z
      28: ifeq          49
      31: aload         8
      33: invokestatic  #51                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$VavrDelegate.isVavrTry:(Ljava/lang/Object;)Z
      36: ifeq          49
      39: aload         8
      41: aload_2
      42: aload         6
      44: invokestatic  #53                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$VavrDelegate.evaluateTryFailure:(Ljava/lang/Object;Lorg/springframework/transaction/interceptor/TransactionAttribute;Lorg/springframework/transaction/TransactionStatus;)Ljava/lang/Object;
      47: astore        8
      49: aload         8
      51: astore        9
      53: aload_0
      54: aload         7
      56: invokevirtual #47                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      59: aload         9
      61: areturn
      62: astore        8
      64: aload_2
      65: aload         8
      67: invokeinterface #111,  2          // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.rollbackOn:(Ljava/lang/Throwable;)Z
      72: ifeq          99
      75: aload         8
      77: instanceof    #114                // class java/lang/RuntimeException
      80: ifeq          89
      83: aload         8
      85: checkcast     #114                // class java/lang/RuntimeException
      88: athrow
      89: new           #59                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException
      92: dup
      93: aload         8
      95: invokespecial #117                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException."<init>":(Ljava/lang/Throwable;)V
      98: athrow
      99: aload         5
     101: aload         8
     103: putfield      #62                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     106: aconst_null
     107: astore        9
     109: aload_0
     110: aload         7
     112: invokevirtual #47                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     115: aload         9
     117: areturn
     118: astore        10
     120: aload_0
     121: aload         7
     123: invokevirtual #47                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     126: aload         10
     128: athrow
    Exception table:
       from    to  target type
          11    53    62   Class java/lang/Throwable
          11    53   118   any
          62   109   118   any
         118   120   118   any

  private org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport lambda$invokeWithinTransaction$0(java.lang.reflect.Method, java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #118                // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       4: invokestatic  #119                // Method org/springframework/core/KotlinDetector.isKotlinType:(Ljava/lang/Class;)Z
       7: ifeq          49
      10: aload_1
      11: invokestatic  #120                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$KotlinDelegate.access$800:(Ljava/lang/reflect/Method;)Z
      14: ifeq          49
      17: new           #121                // class org/springframework/transaction/TransactionUsageException
      20: dup
      21: new           #77                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #122                // String Unsupported annotated transaction on suspending function detected:
      30: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #123                // String . Use TransactionalOperator.transactional extensions instead.
      39: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #124                // Method org/springframework/transaction/TransactionUsageException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: getfield      #20                 // Field reactiveAdapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      53: aload_1
      54: invokevirtual #125                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      57: invokevirtual #126                // Method org/springframework/core/ReactiveAdapterRegistry.getAdapter:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;
      60: astore_3
      61: aload_3
      62: ifnonnull     95
      65: new           #31                 // class java/lang/IllegalStateException
      68: dup
      69: new           #77                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #127                // String Cannot apply reactive transaction to non-reactive return type:
      78: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_1
      82: invokevirtual #125                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      85: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: new           #41                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ReactiveTransactionSupport
      98: dup
      99: aload_0
     100: aload_3
     101: invokespecial #128                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ReactiveTransactionSupport."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/core/ReactiveAdapter;)V
     104: areturn

  static java.lang.ThreadLocal access$500();
    Code:
       0: getstatic     #2                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
       3: areturn

  static java.lang.String access$600(org.springframework.transaction.interceptor.TransactionAspectSupport, java.lang.reflect.Method, java.lang.Class, org.springframework.transaction.interceptor.TransactionAttribute);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method methodIdentification:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/springframework/transaction/interceptor/TransactionAttribute;)Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: new           #129                // class java/lang/Object
       3: dup
       4: invokespecial #10                 // Method java/lang/Object."<init>":()V
       7: putstatic     #70                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
      10: ldc           #130                // String io.vavr.control.Try
      12: ldc           #131                // class org/springframework/transaction/interceptor/TransactionAspectSupport
      14: invokevirtual #132                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      17: invokestatic  #133                // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      20: putstatic     #50                 // Field vavrPresent:Z
      23: ldc           #134                // String org.reactivestreams.Publisher
      25: ldc           #131                // class org/springframework/transaction/interceptor/TransactionAspectSupport
      27: invokevirtual #132                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      30: invokestatic  #133                // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      33: putstatic     #18                 // Field reactiveStreamsPresent:Z
      36: new           #135                // class org/springframework/core/NamedThreadLocal
      39: dup
      40: ldc           #136                // String Current aspect-driven transaction
      42: invokespecial #137                // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      45: putstatic     #2                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
      48: return
}
