Compiled from "LinkedCaseInsensitiveMap.java"
public class org.springframework.util.LinkedCaseInsensitiveMap<V> implements java.util.Map<java.lang.String, V>, java.io.Serializable, java.lang.Cloneable {
  private final java.util.LinkedHashMap<java.lang.String, V> targetMap;

  private final java.util.HashMap<java.lang.String, java.lang.String> caseInsensitiveKeys;

  private final java.util.Locale locale;

  private volatile transient java.util.Set<java.lang.String> keySet;

  private volatile transient java.util.Collection<V> values;

  private volatile transient java.util.Set<java.util.Map$Entry<java.lang.String, V>> entrySet;

  public org.springframework.util.LinkedCaseInsensitiveMap();
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #4                  // class java/util/Locale
       5: invokespecial #5                  // Method "<init>":(Ljava/util/Locale;)V
       8: return

  public org.springframework.util.LinkedCaseInsensitiveMap(java.util.Locale);
    Code:
       0: aload_0
       1: bipush        16
       3: aload_1
       4: invokespecial #6                  // Method "<init>":(ILjava/util/Locale;)V
       7: return

  public org.springframework.util.LinkedCaseInsensitiveMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #6                  // Method "<init>":(ILjava/util/Locale;)V
       6: return

  public org.springframework.util.LinkedCaseInsensitiveMap(int, java.util.Locale);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class org/springframework/util/LinkedCaseInsensitiveMap$1
       8: dup
       9: aload_0
      10: iload_1
      11: invokespecial #9                  // Method org/springframework/util/LinkedCaseInsensitiveMap$1."<init>":(Lorg/springframework/util/LinkedCaseInsensitiveMap;I)V
      14: putfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      17: aload_0
      18: new           #10                 // class java/util/HashMap
      21: dup
      22: iload_1
      23: invokespecial #11                 // Method java/util/HashMap."<init>":(I)V
      26: putfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
      29: aload_0
      30: aload_2
      31: ifnull        38
      34: aload_2
      35: goto          41
      38: invokestatic  #12                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      41: putfield      #13                 // Field locale:Ljava/util/Locale;
      44: return

  private org.springframework.util.LinkedCaseInsensitiveMap(org.springframework.util.LinkedCaseInsensitiveMap<V>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       9: invokevirtual #14                 // Method java/util/LinkedHashMap.clone:()Ljava/lang/Object;
      12: checkcast     #15                 // class java/util/LinkedHashMap
      15: putfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      18: aload_0
      19: aload_1
      20: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
      23: invokevirtual #16                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
      26: checkcast     #10                 // class java/util/HashMap
      29: putfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
      32: aload_0
      33: aload_1
      34: getfield      #13                 // Field locale:Ljava/util/Locale;
      37: putfield      #13                 // Field locale:Ljava/util/Locale;
      40: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       4: invokevirtual #17                 // Method java/util/LinkedHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       4: invokevirtual #18                 // Method java/util/LinkedHashMap.isEmpty:()Z
       7: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/String
       4: ifeq          29
       7: aload_0
       8: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
      11: aload_0
      12: aload_1
      13: checkcast     #19                 // class java/lang/String
      16: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #21                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       4: aload_1
       5: invokevirtual #22                 // Method java/util/LinkedHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/String
       4: ifeq          39
       7: aload_0
       8: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
      11: aload_0
      12: aload_1
      13: checkcast     #19                 // class java/lang/String
      16: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #23                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #19                 // class java/lang/String
      25: astore_2
      26: aload_2
      27: ifnull        39
      30: aload_0
      31: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      34: aload_2
      35: invokevirtual #24                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn
      39: aconst_null
      40: areturn

  public V getOrDefault(java.lang.Object, V);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/String
       4: ifeq          39
       7: aload_0
       8: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
      11: aload_0
      12: aload_1
      13: checkcast     #19                 // class java/lang/String
      16: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #23                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #19                 // class java/lang/String
      25: astore_3
      26: aload_3
      27: ifnull        39
      30: aload_0
      31: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      34: aload_3
      35: invokevirtual #24                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn
      39: aload_2
      40: areturn

  public V put(java.lang.String, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
       4: aload_0
       5: aload_1
       6: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
       9: aload_1
      10: invokevirtual #25                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #19                 // class java/lang/String
      16: astore_3
      17: aconst_null
      18: astore        4
      20: aload_3
      21: ifnull        42
      24: aload_3
      25: aload_1
      26: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifne          42
      32: aload_0
      33: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      36: aload_3
      37: invokevirtual #27                 // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: astore        4
      42: aload_0
      43: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      46: aload_1
      47: aload_2
      48: invokevirtual #28                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: astore        5
      53: aload         4
      55: ifnull        63
      58: aload         4
      60: goto          65
      63: aload         5
      65: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          10
       9: return
      10: aload_1
      11: aload_0
      12: invokedynamic #30,  0             // InvokeDynamic #0:accept:(Lorg/springframework/util/LinkedCaseInsensitiveMap;)Ljava/util/function/BiConsumer;
      17: invokeinterface #31,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      22: return

  public V putIfAbsent(java.lang.String, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
       4: aload_0
       5: aload_1
       6: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
       9: aload_1
      10: invokevirtual #32                 // Method java/util/HashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #19                 // class java/lang/String
      16: astore_3
      17: aload_3
      18: ifnull        30
      21: aload_0
      22: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      25: aload_3
      26: invokevirtual #24                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: areturn
      30: aload_0
      31: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      34: aload_1
      35: aload_2
      36: invokevirtual #33                 // Method java/util/LinkedHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: areturn

  public V computeIfAbsent(java.lang.String, java.util.function.Function<? super java.lang.String, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
       4: aload_0
       5: aload_1
       6: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
       9: aload_1
      10: invokevirtual #32                 // Method java/util/HashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #19                 // class java/lang/String
      16: astore_3
      17: aload_3
      18: ifnull        30
      21: aload_0
      22: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      25: aload_3
      26: invokevirtual #24                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: areturn
      30: aload_0
      31: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      34: aload_1
      35: aload_2
      36: invokevirtual #34                 // Method java/util/LinkedHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      39: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/String
       4: ifeq          29
       7: aload_0
       8: aload_1
       9: checkcast     #19                 // class java/lang/String
      12: invokespecial #3                  // Method removeCaseInsensitiveKey:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: ifnull        29
      20: aload_0
      21: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      24: aload_2
      25: invokevirtual #27                 // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn
      29: aconst_null
      30: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
       4: invokevirtual #35                 // Method java/util/HashMap.clear:()V
       7: aload_0
       8: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      11: invokevirtual #36                 // Method java/util/LinkedHashMap.clear:()V
      14: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #37                 // Field keySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: new           #38                 // class org/springframework/util/LinkedCaseInsensitiveMap$KeySet
      12: dup
      13: aload_0
      14: aload_0
      15: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      18: invokevirtual #39                 // Method java/util/LinkedHashMap.keySet:()Ljava/util/Set;
      21: invokespecial #40                 // Method org/springframework/util/LinkedCaseInsensitiveMap$KeySet."<init>":(Lorg/springframework/util/LinkedCaseInsensitiveMap;Ljava/util/Set;)V
      24: astore_1
      25: aload_0
      26: aload_1
      27: putfield      #37                 // Field keySet:Ljava/util/Set;
      30: aload_1
      31: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #41                 // Field values:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: new           #42                 // class org/springframework/util/LinkedCaseInsensitiveMap$Values
      12: dup
      13: aload_0
      14: aload_0
      15: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      18: invokevirtual #43                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      21: invokespecial #44                 // Method org/springframework/util/LinkedCaseInsensitiveMap$Values."<init>":(Lorg/springframework/util/LinkedCaseInsensitiveMap;Ljava/util/Collection;)V
      24: astore_1
      25: aload_0
      26: aload_1
      27: putfield      #41                 // Field values:Ljava/util/Collection;
      30: aload_1
      31: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #45                 // Field entrySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: new           #46                 // class org/springframework/util/LinkedCaseInsensitiveMap$EntrySet
      12: dup
      13: aload_0
      14: aload_0
      15: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
      18: invokevirtual #47                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      21: invokespecial #48                 // Method org/springframework/util/LinkedCaseInsensitiveMap$EntrySet."<init>":(Lorg/springframework/util/LinkedCaseInsensitiveMap;Ljava/util/Set;)V
      24: astore_1
      25: aload_0
      26: aload_1
      27: putfield      #45                 // Field entrySet:Ljava/util/Set;
      30: aload_1
      31: areturn

  public org.springframework.util.LinkedCaseInsensitiveMap<V> clone();
    Code:
       0: new           #49                 // class org/springframework/util/LinkedCaseInsensitiveMap
       3: dup
       4: aload_0
       5: invokespecial #50                 // Method "<init>":(Lorg/springframework/util/LinkedCaseInsensitiveMap;)V
       8: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     16
       5: aload_0
       6: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       9: aload_1
      10: invokevirtual #51                 // Method java/util/LinkedHashMap.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       4: invokevirtual #52                 // Method java/util/LinkedHashMap.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       4: invokevirtual #53                 // Method java/util/LinkedHashMap.toString:()Ljava/lang/String;
       7: areturn

  public java.util.Locale getLocale();
    Code:
       0: aload_0
       1: getfield      #13                 // Field locale:Ljava/util/Locale;
       4: areturn

  protected java.lang.String convertKey(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #54                 // Method getLocale:()Ljava/util/Locale;
       5: invokevirtual #55                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       8: areturn

  protected boolean removeEldestEntry(java.util.Map$Entry<java.lang.String, V>);
    Code:
       0: iconst_0
       1: ireturn

  private java.lang.String removeCaseInsensitiveKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
       4: aload_0
       5: aload_1
       6: invokevirtual #20                 // Method convertKey:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #56                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #19                 // class java/lang/String
      15: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method clone:()Lorg/springframework/util/LinkedCaseInsensitiveMap;
       4: areturn

  public java.lang.Object computeIfAbsent(java.lang.Object, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/lang/String
       5: aload_2
       6: invokevirtual #58                 // Method computeIfAbsent:(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/lang/String
       5: aload_2
       6: invokevirtual #59                 // Method putIfAbsent:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/lang/String
       5: aload_2
       6: invokevirtual #60                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  static java.lang.String access$000(org.springframework.util.LinkedCaseInsensitiveMap, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method removeCaseInsensitiveKey:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.util.HashMap access$400(org.springframework.util.LinkedCaseInsensitiveMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseInsensitiveKeys:Ljava/util/HashMap;
       4: areturn

  static java.util.LinkedHashMap access$500(org.springframework.util.LinkedCaseInsensitiveMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetMap:Ljava/util/LinkedHashMap;
       4: areturn
}
