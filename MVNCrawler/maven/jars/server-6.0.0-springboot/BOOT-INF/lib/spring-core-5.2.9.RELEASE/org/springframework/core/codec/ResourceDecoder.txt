Compiled from "ResourceDecoder.java"
public class org.springframework.core.codec.ResourceDecoder extends org.springframework.core.codec.AbstractDataBufferDecoder<org.springframework.core.io.Resource> {
  public static java.lang.String FILENAME_HINT;

  public org.springframework.core.codec.ResourceDecoder();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      10: aastore
      11: invokespecial #3                  // Method org/springframework/core/codec/AbstractDataBufferDecoder."<init>":([Lorg/springframework/util/MimeType;)V
      14: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: ldc           #4                  // class org/springframework/core/io/Resource
       2: aload_1
       3: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          25
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #7                  // Method org/springframework/core/codec/AbstractDataBufferDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.Resource> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #8                  // Method decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
       9: invokestatic  #9                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: areturn

  public org.springframework.core.io.Resource decode(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
       6: newarray       byte
       8: astore        5
      10: aload_1
      11: aload         5
      13: invokeinterface #11,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.read:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      18: pop
      19: aload_1
      20: invokestatic  #12                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      23: pop
      24: aload_0
      25: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      28: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      33: ifeq          79
      36: aload_0
      37: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      40: new           #15                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      47: aload         4
      49: invokestatic  #17                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      52: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #19                 // String Read
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload         5
      62: arraylength
      63: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: ldc           #21                 // String  bytes
      68: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      79: aload_2
      80: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      83: astore        6
      85: aload         4
      87: ifnull        106
      90: aload         4
      92: getstatic     #24                 // Field FILENAME_HINT:Ljava/lang/String;
      95: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #26                 // class java/lang/String
     103: goto          107
     106: aconst_null
     107: astore        7
     109: aload         6
     111: ldc           #27                 // class org/springframework/core/io/InputStreamResource
     113: if_acmpne     138
     116: new           #28                 // class org/springframework/core/codec/ResourceDecoder$1
     119: dup
     120: aload_0
     121: new           #29                 // class java/io/ByteArrayInputStream
     124: dup
     125: aload         5
     127: invokespecial #30                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     130: aload         7
     132: aload         5
     134: invokespecial #31                 // Method org/springframework/core/codec/ResourceDecoder$1."<init>":(Lorg/springframework/core/codec/ResourceDecoder;Ljava/io/InputStream;Ljava/lang/String;[B)V
     137: areturn
     138: ldc           #4                  // class org/springframework/core/io/Resource
     140: aload         6
     142: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     145: ifeq          161
     148: new           #32                 // class org/springframework/core/codec/ResourceDecoder$2
     151: dup
     152: aload_0
     153: aload         5
     155: aload         7
     157: invokespecial #33                 // Method org/springframework/core/codec/ResourceDecoder$2."<init>":(Lorg/springframework/core/codec/ResourceDecoder;[BLjava/lang/String;)V
     160: areturn
     161: new           #34                 // class java/lang/IllegalStateException
     164: dup
     165: new           #15                 // class java/lang/StringBuilder
     168: dup
     169: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     172: ldc           #35                 // String Unsupported resource class:
     174: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload         6
     179: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     182: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     188: athrow

  public java.lang.Object decode(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map) throws org.springframework.core.codec.DecodingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #38                 // Method decode:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/Resource;
       9: areturn

  static {};
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // class org/springframework/core/codec/ResourceDecoder
       9: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #41                 // String .filename
      17: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #24                 // Field FILENAME_HINT:Ljava/lang/String;
      26: return
}
