Compiled from "InputStreamResource.java"
public class org.springframework.core.io.InputStreamResource extends org.springframework.core.io.AbstractResource {
  private final java.io.InputStream inputStream;

  private final java.lang.String description;

  private boolean read;

  public org.springframework.core.io.InputStreamResource(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String resource loaded through InputStream
       4: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
       7: return

  public org.springframework.core.io.InputStreamResource(java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/core/io/AbstractResource."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field read:Z
       9: aload_1
      10: ldc           #5                  // String InputStream must not be null
      12: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field inputStream:Ljava/io/InputStream;
      20: aload_0
      21: aload_2
      22: ifnull        29
      25: aload_2
      26: goto          31
      29: ldc           #8                  // String
      31: putfield      #9                  // Field description:Ljava/lang/String;
      34: return

  public boolean exists();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOpen();
    Code:
       0: iconst_1
       1: ireturn

  public java.io.InputStream getInputStream() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field read:Z
       4: ifeq          17
       7: new           #10                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #11                 // String InputStream has already been read - do not use InputStreamResource if a stream needs to be read multiple times
      13: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #4                  // Field read:Z
      22: aload_0
      23: getfield      #7                  // Field inputStream:Ljava/io/InputStream;
      26: areturn

  public java.lang.String getDescription();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #15                 // String InputStream resource [
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field description:Ljava/lang/String;
      16: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #17                 // String ]
      21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     29
       5: aload_1
       6: instanceof    #19                 // class org/springframework/core/io/InputStreamResource
       9: ifeq          33
      12: aload_1
      13: checkcast     #19                 // class org/springframework/core/io/InputStreamResource
      16: getfield      #7                  // Field inputStream:Ljava/io/InputStream;
      19: aload_0
      20: getfield      #7                  // Field inputStream:Ljava/io/InputStream;
      23: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #21                 // Method java/lang/Object.hashCode:()I
       7: ireturn
}
