Compiled from "Hints.java"
public abstract class org.springframework.core.codec.Hints {
  public static final java.lang.String LOG_PREFIX_HINT;

  public static final java.lang.String SUPPRESS_LOGGING_HINT;

  public org.springframework.core.codec.Hints();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.String, java.lang.Object> from(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
       5: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> none();
    Code:
       0: invokestatic  #3                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public static <T> T getRequiredHint(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     36
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: new           #5                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #7                  // String No hints map for required hint \'
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #9                  // String \'
      26: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: astore_2
      44: aload_2
      45: ifnonnull     80
      48: new           #4                  // class java/lang/IllegalArgumentException
      51: dup
      52: new           #5                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #13                 // String Hints map must contain the hint \'
      61: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #9                  // String \'
      70: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_2
      81: areturn

  public static java.lang.String getLogPrefix(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: getstatic     #14                 // Field LOG_PREFIX_HINT:Ljava/lang/String;
       8: ldc           #15                 // String
      10: invokeinterface #16,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #17                 // class java/lang/String
      18: goto          23
      21: ldc           #15                 // String
      23: areturn

  public static boolean isLoggingSuppressed(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        30
       4: aload_0
       5: getstatic     #18                 // Field SUPPRESS_LOGGING_HINT:Ljava/lang/String;
       8: iconst_0
       9: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      12: invokeinterface #16,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #20                 // class java/lang/Boolean
      20: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static java.util.Map<java.lang.String, java.lang.Object> merge(java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          22
       9: aload_1
      10: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      15: ifeq          22
      18: invokestatic  #3                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      21: areturn
      22: aload_1
      23: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      28: ifeq          33
      31: aload_0
      32: areturn
      33: aload_0
      34: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      39: ifeq          44
      42: aload_1
      43: areturn
      44: new           #23                 // class java/util/HashMap
      47: dup
      48: aload_0
      49: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
      54: aload_1
      55: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
      60: iadd
      61: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      64: astore_2
      65: aload_2
      66: aload_0
      67: invokeinterface #26,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      72: aload_2
      73: aload_1
      74: invokeinterface #26,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      79: aload_2
      80: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> merge(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          15
       9: aload_1
      10: aload_2
      11: invokestatic  #2                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      14: areturn
      15: new           #23                 // class java/util/HashMap
      18: dup
      19: aload_0
      20: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
      25: iconst_1
      26: iadd
      27: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      30: astore_3
      31: aload_3
      32: aload_0
      33: invokeinterface #26,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      38: aload_3
      39: aload_1
      40: aload_2
      41: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_3
      48: areturn

  static {};
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // class org/apache/commons/logging/Log
       9: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #30                 // String .PREFIX
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #14                 // Field LOG_PREFIX_HINT:Ljava/lang/String;
      26: new           #5                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #28                 // class org/apache/commons/logging/Log
      35: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #31                 // String .SUPPRESS_LOGGING
      43: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: putstatic     #18                 // Field SUPPRESS_LOGGING_HINT:Ljava/lang/String;
      52: return
}
