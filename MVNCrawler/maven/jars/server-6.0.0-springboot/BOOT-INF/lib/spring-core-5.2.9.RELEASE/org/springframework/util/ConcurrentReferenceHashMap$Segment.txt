Compiled from "ConcurrentReferenceHashMap.java"
public final class org.springframework.util.ConcurrentReferenceHashMap$Segment extends java.util.concurrent.locks.ReentrantLock {
  private final org.springframework.util.ConcurrentReferenceHashMap<K, V>.ReferenceManager referenceManager;

  private final int initialSize;

  private volatile org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] references;

  private final java.util.concurrent.atomic.AtomicInteger count;

  private int resizeThreshold;

  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  public org.springframework.util.ConcurrentReferenceHashMap$Segment(org.springframework.util.ConcurrentReferenceHashMap, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       9: aload_0
      10: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_0
      15: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: aload_1
      23: invokevirtual #8                  // Method org/springframework/util/ConcurrentReferenceHashMap.createReferenceManager:()Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      26: putfield      #9                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      29: aload_0
      30: iload_2
      31: putfield      #10                 // Field initialSize:I
      34: aload_0
      35: aload_0
      36: iload_2
      37: invokespecial #11                 // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      40: putfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      43: aload_0
      44: iload_3
      45: putfield      #12                 // Field resizeThreshold:I
      48: return

  public org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> getReference(java.lang.Object, int, org.springframework.util.ConcurrentReferenceHashMap$Restructure);
    Code:
       0: aload_3
       1: getstatic     #13                 // Field org/springframework/util/ConcurrentReferenceHashMap$Restructure.WHEN_NECESSARY:Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;
       4: if_acmpne     12
       7: aload_0
       8: iconst_0
       9: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
      12: aload_0
      13: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      19: ifne          24
      22: aconst_null
      23: areturn
      24: aload_0
      25: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      28: astore        4
      30: aload_0
      31: iload_2
      32: aload         4
      34: invokespecial #16                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
      37: istore        5
      39: aload         4
      41: iload         5
      43: aaload
      44: astore        6
      46: aload_0
      47: aload         6
      49: aload_1
      50: iload_2
      51: invokespecial #17                 // Method findInChain:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      54: areturn

  public <T> T doTask(int, java.lang.Object, org.springframework.util.ConcurrentReferenceHashMap<K, V>.Task<T>);
    Code:
       0: aload_3
       1: getstatic     #18                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESIZE:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
       4: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
       7: istore        4
       9: aload_3
      10: getstatic     #20                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_BEFORE:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      13: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
      16: ifeq          25
      19: aload_0
      20: iload         4
      22: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
      25: aload_3
      26: getstatic     #21                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      29: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
      32: ifeq          53
      35: aload_0
      36: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      39: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      42: ifne          53
      45: aload_3
      46: aconst_null
      47: aconst_null
      48: aconst_null
      49: invokevirtual #22                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;
      52: areturn
      53: aload_0
      54: invokevirtual #23                 // Method lock:()V
      57: aload_0
      58: iload_1
      59: aload_0
      60: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      63: invokespecial #16                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
      66: istore        5
      68: aload_0
      69: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      72: iload         5
      74: aaload
      75: astore        6
      77: aload_0
      78: aload         6
      80: aload_2
      81: iload_1
      82: invokespecial #17                 // Method findInChain:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      85: astore        7
      87: aload         7
      89: ifnull        102
      92: aload         7
      94: invokeinterface #24,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      99: goto          103
     102: aconst_null
     103: astore        8
     105: aload_0
     106: aload_2
     107: iload_1
     108: aload         6
     110: iload         5
     112: invokedynamic #25,  0             // InvokeDynamic #0:add:(Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;
     117: astore        9
     119: aload_3
     120: aload         7
     122: aload         8
     124: aload         9
     126: invokevirtual #22                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;
     129: astore        10
     131: aload_0
     132: invokevirtual #26                 // Method unlock:()V
     135: aload_3
     136: getstatic     #27                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
     139: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
     142: ifeq          151
     145: aload_0
     146: iload         4
     148: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
     151: aload         10
     153: areturn
     154: astore        11
     156: aload_0
     157: invokevirtual #26                 // Method unlock:()V
     160: aload_3
     161: getstatic     #27                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
     164: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
     167: ifeq          176
     170: aload_0
     171: iload         4
     173: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
     176: aload         11
     178: athrow
    Exception table:
       from    to  target type
          57   131   154   any
         154   156   154   any

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifne          11
      10: return
      11: aload_0
      12: invokevirtual #23                 // Method lock:()V
      15: aload_0
      16: aload_0
      17: aload_0
      18: getfield      #10                 // Field initialSize:I
      21: invokespecial #11                 // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      24: putfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      32: arraylength
      33: i2f
      34: aload_0
      35: getfield      #3                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      38: invokevirtual #28                 // Method org/springframework/util/ConcurrentReferenceHashMap.getLoadFactor:()F
      41: fmul
      42: f2i
      43: putfield      #12                 // Field resizeThreshold:I
      46: aload_0
      47: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      50: iconst_0
      51: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      54: aload_0
      55: invokevirtual #26                 // Method unlock:()V
      58: goto          68
      61: astore_1
      62: aload_0
      63: invokevirtual #26                 // Method unlock:()V
      66: aload_1
      67: athrow
      68: return
    Exception table:
       from    to  target type
          15    54    61   any

  protected final void restructureIfNecessary(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_2
       8: iload_1
       9: ifeq          28
      12: iload_2
      13: ifle          28
      16: iload_2
      17: aload_0
      18: getfield      #12                 // Field resizeThreshold:I
      21: if_icmplt     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_3
      30: aload_0
      31: getfield      #9                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      34: invokevirtual #30                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      37: astore        4
      39: aload         4
      41: ifnonnull     48
      44: iload_3
      45: ifeq          55
      48: aload_0
      49: iload_1
      50: aload         4
      52: invokespecial #31                 // Method restructure:(ZLorg/springframework/util/ConcurrentReferenceHashMap$Reference;)V
      55: return

  private void restructure(boolean, org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method lock:()V
       4: aload_0
       5: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      11: istore        4
      13: invokestatic  #32                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      16: astore        5
      18: aload_2
      19: ifnull        55
      22: new           #33                 // class java/util/HashSet
      25: dup
      26: invokespecial #34                 // Method java/util/HashSet."<init>":()V
      29: astore        5
      31: aload_2
      32: ifnull        55
      35: aload         5
      37: aload_2
      38: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: getfield      #9                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      48: invokevirtual #30                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      51: astore_2
      52: goto          31
      55: iload         4
      57: aload         5
      59: invokeinterface #36,  1           // InterfaceMethod java/util/Set.size:()I
      64: isub
      65: istore        4
      67: iload         4
      69: ifle          85
      72: iload         4
      74: aload_0
      75: getfield      #12                 // Field resizeThreshold:I
      78: if_icmplt     85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore_3
      87: iconst_0
      88: istore        6
      90: aload_0
      91: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      94: arraylength
      95: istore        7
      97: iload_1
      98: ifeq          121
     101: iload_3
     102: ifeq          121
     105: iload         7
     107: ldc           #37                 // int 1073741824
     109: if_icmpge     121
     112: iload         7
     114: iconst_1
     115: ishl
     116: istore        7
     118: iconst_1
     119: istore        6
     121: iload         6
     123: ifeq          135
     126: aload_0
     127: iload         7
     129: invokespecial #11                 // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     132: goto          139
     135: aload_0
     136: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     139: astore        8
     141: iconst_0
     142: istore        9
     144: iload         9
     146: aload_0
     147: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     150: arraylength
     151: if_icmpge     256
     154: aload_0
     155: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     158: iload         9
     160: aaload
     161: astore_2
     162: iload         6
     164: ifne          173
     167: aload         8
     169: iload         9
     171: aconst_null
     172: aastore
     173: aload_2
     174: ifnull        250
     177: aload         5
     179: aload_2
     180: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     185: ifne          240
     188: aload_2
     189: invokeinterface #24,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
     194: astore        10
     196: aload         10
     198: ifnull        240
     201: aload_0
     202: aload_2
     203: invokeinterface #39,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
     208: aload         8
     210: invokespecial #16                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
     213: istore        11
     215: aload         8
     217: iload         11
     219: aload_0
     220: getfield      #9                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
     223: aload         10
     225: aload_2
     226: invokeinterface #39,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
     231: aload         8
     233: iload         11
     235: aaload
     236: invokevirtual #40                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.createReference:(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     239: aastore
     240: aload_2
     241: invokeinterface #41,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     246: astore_2
     247: goto          173
     250: iinc          9, 1
     253: goto          144
     256: iload         6
     258: ifeq          286
     261: aload_0
     262: aload         8
     264: putfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     267: aload_0
     268: aload_0
     269: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     272: arraylength
     273: i2f
     274: aload_0
     275: getfield      #3                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
     278: invokevirtual #28                 // Method org/springframework/util/ConcurrentReferenceHashMap.getLoadFactor:()F
     281: fmul
     282: f2i
     283: putfield      #12                 // Field resizeThreshold:I
     286: aload_0
     287: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
     290: iload         4
     292: iconst_0
     293: invokestatic  #42                 // Method java/lang/Math.max:(II)I
     296: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     299: aload_0
     300: invokevirtual #26                 // Method unlock:()V
     303: goto          315
     306: astore        12
     308: aload_0
     309: invokevirtual #26                 // Method unlock:()V
     312: aload         12
     314: athrow
     315: return
    Exception table:
       from    to  target type
           4   299   306   any
         306   308   306   any

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> findInChain(org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>, java.lang.Object, int);
    Code:
       0: aload_1
       1: astore        4
       3: aload         4
       5: ifnull        64
       8: aload         4
      10: invokeinterface #39,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
      15: iload_3
      16: if_icmpne     52
      19: aload         4
      21: invokeinterface #24,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      26: astore        5
      28: aload         5
      30: ifnull        52
      33: aload         5
      35: invokevirtual #43                 // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.getKey:()Ljava/lang/Object;
      38: astore        6
      40: aload         6
      42: aload_2
      43: invokestatic  #44                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          52
      49: aload         4
      51: areturn
      52: aload         4
      54: invokeinterface #41,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      59: astore        4
      61: goto          3
      64: aconst_null
      65: areturn

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] createReferenceArray(int);
    Code:
       0: iload_1
       1: anewarray     #45                 // class org/springframework/util/ConcurrentReferenceHashMap$Reference
       4: areturn

  private int getIndex(int, org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[]);
    Code:
       0: iload_1
       1: aload_2
       2: arraylength
       3: iconst_1
       4: isub
       5: iand
       6: ireturn

  public final int getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: arraylength
       5: ireturn

  public final int getCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  private void lambda$doTask$0(java.lang.Object, int, org.springframework.util.ConcurrentReferenceHashMap$Reference, int, java.lang.Object);
    Code:
       0: new           #46                 // class org/springframework/util/ConcurrentReferenceHashMap$Entry
       3: dup
       4: aload_1
       5: aload         5
       7: invokespecial #47                 // Method org/springframework/util/ConcurrentReferenceHashMap$Entry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      10: astore        6
      12: aload_0
      13: getfield      #9                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      16: aload         6
      18: iload_2
      19: aload_3
      20: invokevirtual #40                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.createReference:(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      23: astore        7
      25: aload_0
      26: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      29: iload         4
      31: aload         7
      33: aastore
      34: aload_0
      35: getfield      #7                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      38: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      41: pop
      42: return

  static org.springframework.util.ConcurrentReferenceHashMap$Reference[] access$300(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: getfield      #2                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: areturn
}
