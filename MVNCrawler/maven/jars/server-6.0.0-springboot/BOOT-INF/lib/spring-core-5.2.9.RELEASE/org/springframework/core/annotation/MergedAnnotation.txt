Compiled from "MergedAnnotation.java"
public interface org.springframework.core.annotation.MergedAnnotation<A extends java.lang.annotation.Annotation> {
  public static final java.lang.String VALUE;

  public abstract java.lang.Class<A> getType();

  public abstract boolean isPresent();

  public abstract boolean isDirectlyPresent();

  public abstract boolean isMetaPresent();

  public abstract int getDistance();

  public abstract int getAggregateIndex();

  public abstract java.lang.Object getSource();

  public abstract org.springframework.core.annotation.MergedAnnotation<?> getMetaSource();

  public abstract org.springframework.core.annotation.MergedAnnotation<?> getRoot();

  public abstract java.util.List<java.lang.Class<? extends java.lang.annotation.Annotation>> getMetaTypes();

  public abstract boolean hasNonDefaultValue(java.lang.String);

  public abstract boolean hasDefaultValue(java.lang.String) throws java.util.NoSuchElementException;

  public abstract byte getByte(java.lang.String) throws java.util.NoSuchElementException;

  public abstract byte[] getByteArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract boolean getBoolean(java.lang.String) throws java.util.NoSuchElementException;

  public abstract boolean[] getBooleanArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract char getChar(java.lang.String) throws java.util.NoSuchElementException;

  public abstract char[] getCharArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract short getShort(java.lang.String) throws java.util.NoSuchElementException;

  public abstract short[] getShortArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract int getInt(java.lang.String) throws java.util.NoSuchElementException;

  public abstract int[] getIntArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract long getLong(java.lang.String) throws java.util.NoSuchElementException;

  public abstract long[] getLongArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract double getDouble(java.lang.String) throws java.util.NoSuchElementException;

  public abstract double[] getDoubleArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract float getFloat(java.lang.String) throws java.util.NoSuchElementException;

  public abstract float[] getFloatArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract java.lang.String getString(java.lang.String) throws java.util.NoSuchElementException;

  public abstract java.lang.String[] getStringArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract java.lang.Class<?> getClass(java.lang.String) throws java.util.NoSuchElementException;

  public abstract java.lang.Class<?>[] getClassArray(java.lang.String) throws java.util.NoSuchElementException;

  public abstract <E extends java.lang.Enum<E>> E getEnum(java.lang.String, java.lang.Class<E>) throws java.util.NoSuchElementException;

  public abstract <E extends java.lang.Enum<E>> E[] getEnumArray(java.lang.String, java.lang.Class<E>) throws java.util.NoSuchElementException;

  public abstract <T extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<T> getAnnotation(java.lang.String, java.lang.Class<T>) throws java.util.NoSuchElementException;

  public abstract <T extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<T>[] getAnnotationArray(java.lang.String, java.lang.Class<T>) throws java.util.NoSuchElementException;

  public abstract java.util.Optional<java.lang.Object> getValue(java.lang.String);

  public abstract <T> java.util.Optional<T> getValue(java.lang.String, java.lang.Class<T>);

  public abstract java.util.Optional<java.lang.Object> getDefaultValue(java.lang.String);

  public abstract <T> java.util.Optional<T> getDefaultValue(java.lang.String, java.lang.Class<T>);

  public abstract org.springframework.core.annotation.MergedAnnotation<A> filterDefaultValues();

  public abstract org.springframework.core.annotation.MergedAnnotation<A> filterAttributes(java.util.function.Predicate<java.lang.String>);

  public abstract org.springframework.core.annotation.MergedAnnotation<A> withNonMergedAttributes();

  public abstract org.springframework.core.annotation.AnnotationAttributes asAnnotationAttributes(org.springframework.core.annotation.MergedAnnotation$Adapt...);

  public abstract java.util.Map<java.lang.String, java.lang.Object> asMap(org.springframework.core.annotation.MergedAnnotation$Adapt...);

  public abstract <T extends java.util.Map<java.lang.String, java.lang.Object>> T asMap(java.util.function.Function<org.springframework.core.annotation.MergedAnnotation<?>, T>, org.springframework.core.annotation.MergedAnnotation$Adapt...);

  public abstract A synthesize() throws java.util.NoSuchElementException;

  public abstract java.util.Optional<A> synthesize(java.util.function.Predicate<? super org.springframework.core.annotation.MergedAnnotation<A>>) throws java.util.NoSuchElementException;

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> missing();
    Code:
       0: invokestatic  #1                  // Method org/springframework/core/annotation/MissingMergedAnnotation.getInstance:()Lorg/springframework/core/annotation/MergedAnnotation;
       3: areturn

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> from(A);
    Code:
       0: aconst_null
       1: aload_0
       2: invokestatic  #2                  // InterfaceMethod from:(Ljava/lang/Object;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;
       5: areturn

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> from(java.lang.Object, A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method org/springframework/core/annotation/TypeMappedAnnotation.from:(Ljava/lang/Object;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;
       5: areturn

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> of(java.lang.Class<A>);
    Code:
       0: aconst_null
       1: aload_0
       2: aconst_null
       3: invokestatic  #4                  // InterfaceMethod of:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;
       6: areturn

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> of(java.lang.Class<A>, java.util.Map<java.lang.String, ?>);
    Code:
       0: aconst_null
       1: aload_0
       2: aload_1
       3: invokestatic  #4                  // InterfaceMethod of:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;
       6: areturn

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> of(java.lang.reflect.AnnotatedElement, java.lang.Class<A>, java.util.Map<java.lang.String, ?>);
    Code:
       0: aconst_null
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokestatic  #5                  // InterfaceMethod of:(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;
       7: areturn

  public static <A extends java.lang.annotation.Annotation> org.springframework.core.annotation.MergedAnnotation<A> of(java.lang.ClassLoader, java.lang.Object, java.lang.Class<A>, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #6                  // Method org/springframework/core/annotation/TypeMappedAnnotation.of:(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;
       7: areturn
}
