Compiled from "ConcurrentReferenceHashMap.java"
class org.springframework.util.ConcurrentReferenceHashMap$EntryIterator implements java.util.Iterator<java.util.Map$Entry<K, V>> {
  private int segmentIndex;

  private int referenceIndex;

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] references;

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> reference;

  private org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V> next;

  private org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V> last;

  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  public org.springframework.util.ConcurrentReferenceHashMap$EntryIterator(org.springframework.util.ConcurrentReferenceHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokespecial #3                  // Method moveToNextSegment:()V
      13: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getNextIfNecessary:()V
       4: aload_0
       5: getfield      #5                  // Field next:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V> next();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getNextIfNecessary:()V
       4: aload_0
       5: getfield      #5                  // Field next:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
       8: ifnonnull     19
      11: new           #6                  // class java/util/NoSuchElementException
      14: dup
      15: invokespecial #7                  // Method java/util/NoSuchElementException."<init>":()V
      18: athrow
      19: aload_0
      20: aload_0
      21: getfield      #5                  // Field next:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      24: putfield      #8                  // Field last:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      27: aload_0
      28: aconst_null
      29: putfield      #5                  // Field next:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      32: aload_0
      33: getfield      #8                  // Field last:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      36: areturn

  private void getNextIfNecessary();
    Code:
       0: aload_0
       1: getfield      #5                  // Field next:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
       4: ifnonnull     35
       7: aload_0
       8: invokespecial #9                  // Method moveToNextReference:()V
      11: aload_0
      12: getfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      15: ifnonnull     19
      18: return
      19: aload_0
      20: aload_0
      21: getfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      24: invokeinterface #11,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      29: putfield      #5                  // Field next:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      32: goto          0
      35: return

  private void moveToNextReference();
    Code:
       0: aload_0
       1: getfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: ifnull        20
       7: aload_0
       8: aload_0
       9: getfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      12: invokeinterface #12,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      17: putfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      20: aload_0
      21: getfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      24: ifnonnull     84
      27: aload_0
      28: getfield      #13                 // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      31: ifnull        84
      34: aload_0
      35: getfield      #14                 // Field referenceIndex:I
      38: aload_0
      39: getfield      #13                 // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      42: arraylength
      43: if_icmplt     58
      46: aload_0
      47: invokespecial #3                  // Method moveToNextSegment:()V
      50: aload_0
      51: iconst_0
      52: putfield      #14                 // Field referenceIndex:I
      55: goto          20
      58: aload_0
      59: aload_0
      60: getfield      #13                 // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      63: aload_0
      64: getfield      #14                 // Field referenceIndex:I
      67: aaload
      68: putfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      71: aload_0
      72: dup
      73: getfield      #14                 // Field referenceIndex:I
      76: iconst_1
      77: iadd
      78: putfield      #14                 // Field referenceIndex:I
      81: goto          20
      84: return

  private void moveToNextSegment();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #10                 // Field reference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       5: aload_0
       6: aconst_null
       7: putfield      #13                 // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      10: aload_0
      11: getfield      #15                 // Field segmentIndex:I
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      18: invokestatic  #16                 // Method org/springframework/util/ConcurrentReferenceHashMap.access$200:(Lorg/springframework/util/ConcurrentReferenceHashMap;)[Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;
      21: arraylength
      22: if_icmpge     54
      25: aload_0
      26: aload_0
      27: getfield      #1                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      30: invokestatic  #16                 // Method org/springframework/util/ConcurrentReferenceHashMap.access$200:(Lorg/springframework/util/ConcurrentReferenceHashMap;)[Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;
      33: aload_0
      34: getfield      #15                 // Field segmentIndex:I
      37: aaload
      38: invokestatic  #17                 // Method org/springframework/util/ConcurrentReferenceHashMap$Segment.access$300:(Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      41: putfield      #13                 // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      44: aload_0
      45: dup
      46: getfield      #15                 // Field segmentIndex:I
      49: iconst_1
      50: iadd
      51: putfield      #15                 // Field segmentIndex:I
      54: return

  public void remove();
    Code:
       0: aload_0
       1: getfield      #8                  // Field last:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #18                 // String No element to remove
      14: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #1                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      21: aload_0
      22: getfield      #8                  // Field last:Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      25: invokevirtual #20                 // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.getKey:()Ljava/lang/Object;
      28: invokevirtual #21                 // Method org/springframework/util/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method next:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
       4: areturn
}
