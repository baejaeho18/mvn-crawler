Compiled from "AbstractStaxXMLReader.java"
abstract class org.springframework.util.xml.AbstractStaxXMLReader extends org.springframework.util.xml.AbstractXMLReader {
  private static final java.lang.String NAMESPACES_FEATURE_NAME;

  private static final java.lang.String NAMESPACE_PREFIXES_FEATURE_NAME;

  private static final java.lang.String IS_STANDALONE_FEATURE_NAME;

  private boolean namespacesFeature;

  private boolean namespacePrefixesFeature;

  private java.lang.Boolean isStandalone;

  private final java.util.Map<java.lang.String, java.lang.String> namespaces;

  org.springframework.util.xml.AbstractStaxXMLReader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/util/xml/AbstractXMLReader."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field namespacesFeature:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field namespacePrefixesFeature:Z
      14: aload_0
      15: new           #4                  // class java/util/LinkedHashMap
      18: dup
      19: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
      22: putfield      #6                  // Field namespaces:Ljava/util/Map;
      25: return

  public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
    Code:
       0: aload_1
       1: astore_2
       2: iconst_m1
       3: istore_3
       4: aload_2
       5: invokevirtual #7                  // Method java/lang/String.hashCode:()I
       8: lookupswitch  { // 3
           -1847794159: 44
            1832771215: 72
            1922977163: 58
               default: 83
          }
      44: aload_2
      45: ldc           #8                  // String http://xml.org/sax/features/namespaces
      47: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          83
      53: iconst_0
      54: istore_3
      55: goto          83
      58: aload_2
      59: ldc           #10                 // String http://xml.org/sax/features/namespace-prefixes
      61: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifeq          83
      67: iconst_1
      68: istore_3
      69: goto          83
      72: aload_2
      73: ldc           #11                 // String http://xml.org/sax/features/is-standalone
      75: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifeq          83
      81: iconst_2
      82: istore_3
      83: iload_3
      84: tableswitch   { // 0 to 2
                     0: 112
                     1: 117
                     2: 122
               default: 147
          }
     112: aload_0
     113: getfield      #2                  // Field namespacesFeature:Z
     116: ireturn
     117: aload_0
     118: getfield      #3                  // Field namespacePrefixesFeature:Z
     121: ireturn
     122: aload_0
     123: getfield      #12                 // Field isStandalone:Ljava/lang/Boolean;
     126: ifnull        137
     129: aload_0
     130: getfield      #12                 // Field isStandalone:Ljava/lang/Boolean;
     133: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     136: ireturn
     137: new           #14                 // class org/xml/sax/SAXNotSupportedException
     140: dup
     141: ldc           #15                 // String startDocument() callback not completed yet
     143: invokespecial #16                 // Method org/xml/sax/SAXNotSupportedException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: aload_0
     148: aload_1
     149: invokespecial #17                 // Method org/springframework/util/xml/AbstractXMLReader.getFeature:(Ljava/lang/String;)Z
     152: ireturn

  public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
    Code:
       0: ldc           #8                  // String http://xml.org/sax/features/namespaces
       2: aload_1
       3: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          17
       9: aload_0
      10: iload_2
      11: putfield      #2                  // Field namespacesFeature:Z
      14: goto          40
      17: ldc           #10                 // String http://xml.org/sax/features/namespace-prefixes
      19: aload_1
      20: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          34
      26: aload_0
      27: iload_2
      28: putfield      #3                  // Field namespacePrefixesFeature:Z
      31: goto          40
      34: aload_0
      35: aload_1
      36: iload_2
      37: invokespecial #19                 // Method org/springframework/util/xml/AbstractXMLReader.setFeature:(Ljava/lang/String;Z)V
      40: return

  protected void setStandalone(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #12                 // Field isStandalone:Ljava/lang/Boolean;
       8: return

  protected boolean hasNamespacesFeature();
    Code:
       0: aload_0
       1: getfield      #2                  // Field namespacesFeature:Z
       4: ireturn

  protected boolean hasNamespacePrefixesFeature();
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespacePrefixesFeature:Z
       4: ireturn

  protected java.lang.String toQualifiedName(javax.xml.namespace.QName);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #22                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       9: ifne          17
      12: aload_1
      13: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      16: areturn
      17: new           #24                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_2
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #27                 // String :
      30: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      37: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  public final void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method parse:()V
       4: return

  public final void parse(java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method parse:()V
       4: return

  private void parse() throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method parseInternal:()V
       4: goto          65
       7: astore_1
       8: aconst_null
       9: astore_2
      10: aload_1
      11: invokevirtual #32                 // Method javax/xml/stream/XMLStreamException.getLocation:()Ljavax/xml/stream/Location;
      14: ifnull        29
      17: new           #33                 // class org/springframework/util/xml/AbstractStaxXMLReader$StaxLocator
      20: dup
      21: aload_1
      22: invokevirtual #32                 // Method javax/xml/stream/XMLStreamException.getLocation:()Ljavax/xml/stream/Location;
      25: invokespecial #34                 // Method org/springframework/util/xml/AbstractStaxXMLReader$StaxLocator."<init>":(Ljavax/xml/stream/Location;)V
      28: astore_2
      29: new           #35                 // class org/xml/sax/SAXParseException
      32: dup
      33: aload_1
      34: invokevirtual #36                 // Method javax/xml/stream/XMLStreamException.getMessage:()Ljava/lang/String;
      37: aload_2
      38: aload_1
      39: invokespecial #37                 // Method org/xml/sax/SAXParseException."<init>":(Ljava/lang/String;Lorg/xml/sax/Locator;Ljava/lang/Exception;)V
      42: astore_3
      43: aload_0
      44: invokevirtual #38                 // Method getErrorHandler:()Lorg/xml/sax/ErrorHandler;
      47: ifnull        63
      50: aload_0
      51: invokevirtual #38                 // Method getErrorHandler:()Lorg/xml/sax/ErrorHandler;
      54: aload_3
      55: invokeinterface #39,  2           // InterfaceMethod org/xml/sax/ErrorHandler.fatalError:(Lorg/xml/sax/SAXParseException;)V
      60: goto          65
      63: aload_3
      64: athrow
      65: return
    Exception table:
       from    to  target type
           0     4     7   Class javax/xml/stream/XMLStreamException

  protected abstract void parseInternal() throws org.xml.sax.SAXException, javax.xml.stream.XMLStreamException;

  protected void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
       4: ifnull        61
       7: aload_2
       8: invokestatic  #22                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          61
      14: aload_1
      15: ifnonnull     21
      18: ldc           #41                 // String
      20: astore_1
      21: aload_2
      22: aload_0
      23: getfield      #6                  // Field namespaces:Ljava/util/Map;
      26: aload_1
      27: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifne          61
      38: aload_0
      39: invokevirtual #40                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      42: aload_1
      43: aload_2
      44: invokeinterface #43,  3           // InterfaceMethod org/xml/sax/ContentHandler.startPrefixMapping:(Ljava/lang/String;Ljava/lang/String;)V
      49: aload_0
      50: getfield      #6                  // Field namespaces:Ljava/util/Map;
      53: aload_1
      54: aload_2
      55: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: return

  protected void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
       4: ifnull        41
       7: aload_0
       8: getfield      #6                  // Field namespaces:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #45,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          41
      20: aload_0
      21: invokevirtual #40                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      24: aload_1
      25: invokeinterface #46,  2           // InterfaceMethod org/xml/sax/ContentHandler.endPrefixMapping:(Ljava/lang/String;)V
      30: aload_0
      31: getfield      #6                  // Field namespaces:Ljava/util/Map;
      34: aload_1
      35: invokeinterface #47,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: return
}
