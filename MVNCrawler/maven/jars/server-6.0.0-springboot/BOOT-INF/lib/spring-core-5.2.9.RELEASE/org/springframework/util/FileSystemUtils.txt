Compiled from "FileSystemUtils.java"
public abstract class org.springframework.util.FileSystemUtils {
  public org.springframework.util.FileSystemUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean deleteRecursively(java.io.File);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      10: invokestatic  #3                  // Method deleteRecursively:(Ljava/nio/file/Path;)Z
      13: ireturn
      14: astore_1
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           6    13    14   Class java/io/IOException

  public static boolean deleteRecursively(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: iconst_0
       8: anewarray     #5                  // class java/nio/file/LinkOption
      11: invokestatic  #6                  // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: new           #7                  // class org/springframework/util/FileSystemUtils$1
      23: dup
      24: invokespecial #8                  // Method org/springframework/util/FileSystemUtils$1."<init>":()V
      27: invokestatic  #9                  // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      30: pop
      31: iconst_1
      32: ireturn

  public static void copyRecursively(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #10                 // String Source File must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #12                 // String Destination File must not be null
       9: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokevirtual #2                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      16: aload_1
      17: invokevirtual #2                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      20: invokestatic  #13                 // Method copyRecursively:(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      23: return

  public static void copyRecursively(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #14                 // String Source Path must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #15                 // String Destination Path must not be null
       9: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: ldc           #16                 // class java/nio/file/attribute/BasicFileAttributes
      15: iconst_0
      16: anewarray     #5                  // class java/nio/file/LinkOption
      19: invokestatic  #17                 // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;
      22: astore_2
      23: aload_2
      24: invokeinterface #18,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.isDirectory:()Z
      29: ifeq          57
      32: aload_0
      33: getstatic     #19                 // Field java/nio/file/FileVisitOption.FOLLOW_LINKS:Ljava/nio/file/FileVisitOption;
      36: invokestatic  #20                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      39: ldc           #22                 // int 2147483647
      41: new           #23                 // class org/springframework/util/FileSystemUtils$2
      44: dup
      45: aload_1
      46: aload_0
      47: invokespecial #24                 // Method org/springframework/util/FileSystemUtils$2."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      50: invokestatic  #25                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      53: pop
      54: goto          89
      57: aload_2
      58: invokeinterface #26,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.isRegularFile:()Z
      63: ifeq          79
      66: aload_0
      67: aload_1
      68: iconst_0
      69: anewarray     #27                 // class java/nio/file/CopyOption
      72: invokestatic  #28                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      75: pop
      76: goto          89
      79: new           #29                 // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #30                 // String Source File must denote a directory or file
      85: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: return
}
