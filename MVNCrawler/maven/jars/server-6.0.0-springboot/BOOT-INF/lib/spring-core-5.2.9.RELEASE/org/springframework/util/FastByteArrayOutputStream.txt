Compiled from "FastByteArrayOutputStream.java"
public class org.springframework.util.FastByteArrayOutputStream extends java.io.OutputStream {
  private static final int DEFAULT_BLOCK_SIZE;

  private final java.util.Deque<byte[]> buffers;

  private final int initialBlockSize;

  private int nextBlockSize;

  private int alreadyBufferedSize;

  private int index;

  private boolean closed;

  public org.springframework.util.FastByteArrayOutputStream();
    Code:
       0: aload_0
       1: sipush        256
       4: invokespecial #4                  // Method "<init>":(I)V
       7: return

  public org.springframework.util.FastByteArrayOutputStream(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #2                  // Field buffers:Ljava/util/Deque;
      15: aload_0
      16: iconst_0
      17: putfield      #8                  // Field nextBlockSize:I
      20: aload_0
      21: iconst_0
      22: putfield      #9                  // Field alreadyBufferedSize:I
      25: aload_0
      26: iconst_0
      27: putfield      #1                  // Field index:I
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field closed:Z
      35: iload_1
      36: ifle          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ldc           #11                 // String Initial block size must be greater than 0
      46: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      49: aload_0
      50: iload_1
      51: putfield      #13                 // Field initialBlockSize:I
      54: aload_0
      55: iload_1
      56: putfield      #8                  // Field nextBlockSize:I
      59: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field closed:Z
       4: ifeq          17
       7: new           #14                 // class java/io/IOException
      10: dup
      11: ldc           #15                 // String Stream closed
      13: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field buffers:Ljava/util/Deque;
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peekLast:()Ljava/lang/Object;
      26: ifnull        49
      29: aload_0
      30: getfield      #2                  // Field buffers:Ljava/util/Deque;
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
      38: checkcast     #19                 // class "[B"
      41: arraylength
      42: aload_0
      43: getfield      #1                  // Field index:I
      46: if_icmpne     54
      49: aload_0
      50: iconst_1
      51: invokespecial #20                 // Method addBuffer:(I)V
      54: aload_0
      55: getfield      #2                  // Field buffers:Ljava/util/Deque;
      58: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
      63: checkcast     #19                 // class "[B"
      66: aload_0
      67: dup
      68: getfield      #1                  // Field index:I
      71: dup_x1
      72: iconst_1
      73: iadd
      74: putfield      #1                  // Field index:I
      77: iload_1
      78: i2b
      79: bastore
      80: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iflt          16
       4: iload_2
       5: iload_3
       6: iadd
       7: aload_1
       8: arraylength
       9: if_icmpgt     16
      12: iload_3
      13: ifge          24
      16: new           #21                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: invokespecial #22                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #10                 // Field closed:Z
      28: ifeq          41
      31: new           #14                 // class java/io/IOException
      34: dup
      35: ldc           #15                 // String Stream closed
      37: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #2                  // Field buffers:Ljava/util/Deque;
      45: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peekLast:()Ljava/lang/Object;
      50: ifnull        73
      53: aload_0
      54: getfield      #2                  // Field buffers:Ljava/util/Deque;
      57: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
      62: checkcast     #19                 // class "[B"
      65: arraylength
      66: aload_0
      67: getfield      #1                  // Field index:I
      70: if_icmpne     78
      73: aload_0
      74: iload_3
      75: invokespecial #20                 // Method addBuffer:(I)V
      78: aload_0
      79: getfield      #1                  // Field index:I
      82: iload_3
      83: iadd
      84: aload_0
      85: getfield      #2                  // Field buffers:Ljava/util/Deque;
      88: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
      93: checkcast     #19                 // class "[B"
      96: arraylength
      97: if_icmple     208
     100: iload_2
     101: istore        4
     103: aload_0
     104: getfield      #1                  // Field index:I
     107: aload_0
     108: getfield      #2                  // Field buffers:Ljava/util/Deque;
     111: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
     116: checkcast     #19                 // class "[B"
     119: arraylength
     120: if_icmpne     128
     123: aload_0
     124: iload_3
     125: invokespecial #20                 // Method addBuffer:(I)V
     128: aload_0
     129: getfield      #2                  // Field buffers:Ljava/util/Deque;
     132: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
     137: checkcast     #19                 // class "[B"
     140: arraylength
     141: aload_0
     142: getfield      #1                  // Field index:I
     145: isub
     146: istore        5
     148: iload_3
     149: iload         5
     151: if_icmpge     157
     154: iload_3
     155: istore        5
     157: aload_1
     158: iload         4
     160: aload_0
     161: getfield      #2                  // Field buffers:Ljava/util/Deque;
     164: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
     169: aload_0
     170: getfield      #1                  // Field index:I
     173: iload         5
     175: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     178: iload         4
     180: iload         5
     182: iadd
     183: istore        4
     185: aload_0
     186: dup
     187: getfield      #1                  // Field index:I
     190: iload         5
     192: iadd
     193: putfield      #1                  // Field index:I
     196: iload_3
     197: iload         5
     199: isub
     200: istore_3
     201: iload_3
     202: ifgt          103
     205: goto          237
     208: aload_1
     209: iload_2
     210: aload_0
     211: getfield      #2                  // Field buffers:Ljava/util/Deque;
     214: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.getLast:()Ljava/lang/Object;
     219: aload_0
     220: getfield      #1                  // Field index:I
     223: iload_3
     224: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     227: aload_0
     228: dup
     229: getfield      #1                  // Field index:I
     232: iload_3
     233: iadd
     234: putfield      #1                  // Field index:I
     237: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field closed:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokevirtual #25                 // Method toByteArrayUnsafe:()[B
       8: invokespecial #26                 // Method java/lang/String."<init>":([B)V
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #9                  // Field alreadyBufferedSize:I
       4: aload_0
       5: getfield      #1                  // Field index:I
       8: iadd
       9: ireturn

  public byte[] toByteArrayUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method size:()I
       4: istore_1
       5: iload_1
       6: ifne          13
       9: iconst_0
      10: newarray       byte
      12: areturn
      13: aload_0
      14: iload_1
      15: invokevirtual #28                 // Method resize:(I)V
      18: aload_0
      19: getfield      #2                  // Field buffers:Ljava/util/Deque;
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
      27: checkcast     #19                 // class "[B"
      30: areturn

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method toByteArrayUnsafe:()[B
       4: astore_1
       5: aload_1
       6: invokevirtual #30                 // Method "[B".clone:()Ljava/lang/Object;
       9: checkcast     #19                 // class "[B"
      12: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffers:Ljava/util/Deque;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Deque.clear:()V
       9: aload_0
      10: aload_0
      11: getfield      #13                 // Field initialBlockSize:I
      14: putfield      #8                  // Field nextBlockSize:I
      17: aload_0
      18: iconst_0
      19: putfield      #10                 // Field closed:Z
      22: aload_0
      23: iconst_0
      24: putfield      #1                  // Field index:I
      27: aload_0
      28: iconst_0
      29: putfield      #9                  // Field alreadyBufferedSize:I
      32: return

  public java.io.InputStream getInputStream();
    Code:
       0: new           #32                 // class org/springframework/util/FastByteArrayOutputStream$FastByteArrayInputStream
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method org/springframework/util/FastByteArrayOutputStream$FastByteArrayInputStream."<init>":(Lorg/springframework/util/FastByteArrayOutputStream;)V
       8: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffers:Ljava/util/Deque;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          62
      19: aload_2
      20: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #19                 // class "[B"
      28: astore_3
      29: aload_2
      30: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          49
      38: aload_1
      39: aload_3
      40: iconst_0
      41: aload_3
      42: arraylength
      43: invokevirtual #37                 // Method java/io/OutputStream.write:([BII)V
      46: goto          59
      49: aload_1
      50: aload_3
      51: iconst_0
      52: aload_0
      53: getfield      #1                  // Field index:I
      56: invokevirtual #37                 // Method java/io/OutputStream.write:([BII)V
      59: goto          10
      62: return

  public void resize(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #27                 // Method size:()I
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #38                 // String New capacity must not be smaller than current size
      15: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      18: aload_0
      19: getfield      #2                  // Field buffers:Ljava/util/Deque;
      22: invokeinterface #39,  1           // InterfaceMethod java/util/Deque.peekFirst:()Ljava/lang/Object;
      27: ifnonnull     43
      30: aload_0
      31: iload_1
      32: aload_0
      33: invokevirtual #27                 // Method size:()I
      36: isub
      37: putfield      #8                  // Field nextBlockSize:I
      40: goto          195
      43: aload_0
      44: invokevirtual #27                 // Method size:()I
      47: iload_1
      48: if_icmpne     71
      51: aload_0
      52: getfield      #2                  // Field buffers:Ljava/util/Deque;
      55: invokeinterface #29,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
      60: checkcast     #19                 // class "[B"
      63: arraylength
      64: iload_1
      65: if_icmpne     71
      68: goto          195
      71: aload_0
      72: invokevirtual #27                 // Method size:()I
      75: istore_2
      76: iload_1
      77: newarray       byte
      79: astore_3
      80: iconst_0
      81: istore        4
      83: aload_0
      84: getfield      #2                  // Field buffers:Ljava/util/Deque;
      87: invokeinterface #34,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      92: astore        5
      94: aload         5
      96: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          165
     104: aload         5
     106: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #19                 // class "[B"
     114: astore        6
     116: aload         5
     118: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ifeq          149
     126: aload         6
     128: iconst_0
     129: aload_3
     130: iload         4
     132: aload         6
     134: arraylength
     135: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     138: iload         4
     140: aload         6
     142: arraylength
     143: iadd
     144: istore        4
     146: goto          162
     149: aload         6
     151: iconst_0
     152: aload_3
     153: iload         4
     155: aload_0
     156: getfield      #1                  // Field index:I
     159: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     162: goto          94
     165: aload_0
     166: getfield      #2                  // Field buffers:Ljava/util/Deque;
     169: invokeinterface #31,  1           // InterfaceMethod java/util/Deque.clear:()V
     174: aload_0
     175: getfield      #2                  // Field buffers:Ljava/util/Deque;
     178: aload_3
     179: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     184: pop
     185: aload_0
     186: iload_2
     187: putfield      #1                  // Field index:I
     190: aload_0
     191: iconst_0
     192: putfield      #9                  // Field alreadyBufferedSize:I
     195: return

  private void addBuffer(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffers:Ljava/util/Deque;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peekLast:()Ljava/lang/Object;
       9: ifnull        30
      12: aload_0
      13: dup
      14: getfield      #9                  // Field alreadyBufferedSize:I
      17: aload_0
      18: getfield      #1                  // Field index:I
      21: iadd
      22: putfield      #9                  // Field alreadyBufferedSize:I
      25: aload_0
      26: iconst_0
      27: putfield      #1                  // Field index:I
      30: aload_0
      31: getfield      #8                  // Field nextBlockSize:I
      34: iload_1
      35: if_icmpge     46
      38: aload_0
      39: iload_1
      40: invokestatic  #41                 // Method nextPowerOf2:(I)I
      43: putfield      #8                  // Field nextBlockSize:I
      46: aload_0
      47: getfield      #2                  // Field buffers:Ljava/util/Deque;
      50: aload_0
      51: getfield      #8                  // Field nextBlockSize:I
      54: newarray       byte
      56: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_0
      63: dup
      64: getfield      #8                  // Field nextBlockSize:I
      67: iconst_2
      68: imul
      69: putfield      #8                  // Field nextBlockSize:I
      72: return

  private static int nextPowerOf2(int);
    Code:
       0: iinc          0, -1
       3: iload_0
       4: iconst_1
       5: ishr
       6: iload_0
       7: ior
       8: istore_0
       9: iload_0
      10: iconst_2
      11: ishr
      12: iload_0
      13: ior
      14: istore_0
      15: iload_0
      16: iconst_4
      17: ishr
      18: iload_0
      19: ior
      20: istore_0
      21: iload_0
      22: bipush        8
      24: ishr
      25: iload_0
      26: ior
      27: istore_0
      28: iload_0
      29: bipush        16
      31: ishr
      32: iload_0
      33: ior
      34: istore_0
      35: iinc          0, 1
      38: iload_0
      39: ireturn

  static java.util.Deque access$000(org.springframework.util.FastByteArrayOutputStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffers:Ljava/util/Deque;
       4: areturn

  static int access$100(org.springframework.util.FastByteArrayOutputStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field index:I
       4: ireturn
}
