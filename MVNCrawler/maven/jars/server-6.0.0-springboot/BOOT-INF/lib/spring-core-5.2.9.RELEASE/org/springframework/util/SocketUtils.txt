Compiled from "SocketUtils.java"
public class org.springframework.util.SocketUtils {
  public static final int PORT_RANGE_MIN;

  public static final int PORT_RANGE_MAX;

  private static final java.util.Random random;

  public org.springframework.util.SocketUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static int findAvailableTcpPort();
    Code:
       0: sipush        1024
       3: invokestatic  #4                  // Method findAvailableTcpPort:(I)I
       6: ireturn

  public static int findAvailableTcpPort(int);
    Code:
       0: iload_0
       1: ldc           #5                  // int 65535
       3: invokestatic  #6                  // Method findAvailableTcpPort:(II)I
       6: ireturn

  public static int findAvailableTcpPort(int, int);
    Code:
       0: getstatic     #7                  // Field org/springframework/util/SocketUtils$SocketType.TCP:Lorg/springframework/util/SocketUtils$SocketType;
       3: iload_0
       4: iload_1
       5: invokevirtual #8                  // Method org/springframework/util/SocketUtils$SocketType.findAvailablePort:(II)I
       8: ireturn

  public static java.util.SortedSet<java.lang.Integer> findAvailableTcpPorts(int);
    Code:
       0: iload_0
       1: sipush        1024
       4: ldc           #5                  // int 65535
       6: invokestatic  #9                  // Method findAvailableTcpPorts:(III)Ljava/util/SortedSet;
       9: areturn

  public static java.util.SortedSet<java.lang.Integer> findAvailableTcpPorts(int, int, int);
    Code:
       0: getstatic     #7                  // Field org/springframework/util/SocketUtils$SocketType.TCP:Lorg/springframework/util/SocketUtils$SocketType;
       3: iload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #10                 // Method org/springframework/util/SocketUtils$SocketType.findAvailablePorts:(III)Ljava/util/SortedSet;
       9: areturn

  public static int findAvailableUdpPort();
    Code:
       0: sipush        1024
       3: invokestatic  #11                 // Method findAvailableUdpPort:(I)I
       6: ireturn

  public static int findAvailableUdpPort(int);
    Code:
       0: iload_0
       1: ldc           #5                  // int 65535
       3: invokestatic  #12                 // Method findAvailableUdpPort:(II)I
       6: ireturn

  public static int findAvailableUdpPort(int, int);
    Code:
       0: getstatic     #13                 // Field org/springframework/util/SocketUtils$SocketType.UDP:Lorg/springframework/util/SocketUtils$SocketType;
       3: iload_0
       4: iload_1
       5: invokevirtual #8                  // Method org/springframework/util/SocketUtils$SocketType.findAvailablePort:(II)I
       8: ireturn

  public static java.util.SortedSet<java.lang.Integer> findAvailableUdpPorts(int);
    Code:
       0: iload_0
       1: sipush        1024
       4: ldc           #5                  // int 65535
       6: invokestatic  #14                 // Method findAvailableUdpPorts:(III)Ljava/util/SortedSet;
       9: areturn

  public static java.util.SortedSet<java.lang.Integer> findAvailableUdpPorts(int, int, int);
    Code:
       0: getstatic     #13                 // Field org/springframework/util/SocketUtils$SocketType.UDP:Lorg/springframework/util/SocketUtils$SocketType;
       3: iload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #10                 // Method org/springframework/util/SocketUtils$SocketType.findAvailablePorts:(III)Ljava/util/SortedSet;
       9: areturn

  static java.util.Random access$100();
    Code:
       0: getstatic     #1                  // Field random:Ljava/util/Random;
       3: areturn

  static {};
    Code:
       0: new           #15                 // class java/util/Random
       3: dup
       4: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
       7: invokespecial #17                 // Method java/util/Random."<init>":(J)V
      10: putstatic     #1                  // Field random:Ljava/util/Random;
      13: return
}
