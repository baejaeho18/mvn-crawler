Compiled from "ClassVisitor.java"
public abstract class org.springframework.asm.ClassVisitor {
  protected final int api;

  protected org.springframework.asm.ClassVisitor cv;

  public org.springframework.asm.ClassVisitor(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(ILorg/springframework/asm/ClassVisitor;)V
       6: return

  public org.springframework.asm.ClassVisitor(int, org.springframework.asm.ClassVisitor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ldc           #4                  // int 458752
       7: if_icmpeq     61
      10: iload_1
      11: ldc           #5                  // int 393216
      13: if_icmpeq     61
      16: iload_1
      17: ldc           #6                  // int 327680
      19: if_icmpeq     61
      22: iload_1
      23: ldc           #7                  // int 262144
      25: if_icmpeq     61
      28: iload_1
      29: ldc           #8                  // int 17301504
      31: if_icmpeq     61
      34: new           #9                  // class java/lang/IllegalArgumentException
      37: dup
      38: new           #10                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #12                 // String Unsupported api
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: iload_1
      51: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: iload_1
      63: putfield      #17                 // Field api:I
      66: aload_0
      67: aload_2
      68: putfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      71: return

  public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        23
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: iload_1
      12: iload_2
      13: aload_3
      14: aload         4
      16: aload         5
      18: aload         6
      20: invokevirtual #19                 // Method visit:(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
      23: return

  public void visitSource(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: aload_1
      12: aload_2
      13: invokevirtual #20                 // Method visitSource:(Ljava/lang/String;Ljava/lang/String;)V
      16: return

  public org.springframework.asm.ModuleVisitor visitModule(java.lang.String, int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field api:I
       4: ldc           #5                  // int 393216
       6: if_icmpge     19
       9: new           #21                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #22                 // String This feature requires ASM6
      15: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      23: ifnull        37
      26: aload_0
      27: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      30: aload_1
      31: iload_2
      32: aload_3
      33: invokevirtual #24                 // Method visitModule:(Ljava/lang/String;ILjava/lang/String;)Lorg/springframework/asm/ModuleVisitor;
      36: areturn
      37: aconst_null
      38: areturn

  public void visitNestHost(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field api:I
       4: ldc           #4                  // int 458752
       6: if_icmpge     19
       9: new           #21                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #25                 // String This feature requires ASM7
      15: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      23: ifnull        34
      26: aload_0
      27: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      30: aload_1
      31: invokevirtual #26                 // Method visitNestHost:(Ljava/lang/String;)V
      34: return

  public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        17
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #27                 // Method visitOuterClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      17: return

  public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        17
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: aload_1
      12: iload_2
      13: invokevirtual #28                 // Method visitAnnotation:(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
      16: areturn
      17: aconst_null
      18: areturn

  public org.springframework.asm.AnnotationVisitor visitTypeAnnotation(int, org.springframework.asm.TypePath, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field api:I
       4: ldc           #6                  // int 327680
       6: if_icmpge     19
       9: new           #21                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #29                 // String This feature requires ASM5
      15: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      23: ifnull        39
      26: aload_0
      27: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      30: iload_1
      31: aload_2
      32: aload_3
      33: iload         4
      35: invokevirtual #30                 // Method visitTypeAnnotation:(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
      38: areturn
      39: aconst_null
      40: areturn

  public void visitAttribute(org.springframework.asm.Attribute);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        15
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: aload_1
      12: invokevirtual #31                 // Method visitAttribute:(Lorg/springframework/asm/Attribute;)V
      15: return

  public void visitNestMember(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field api:I
       4: ldc           #4                  // int 458752
       6: if_icmpge     19
       9: new           #21                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #25                 // String This feature requires ASM7
      15: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      23: ifnull        34
      26: aload_0
      27: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      30: aload_1
      31: invokevirtual #32                 // Method visitNestMember:(Ljava/lang/String;)V
      34: return

  public void visitPermittedSubtypeExperimental(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field api:I
       4: ldc           #8                  // int 17301504
       6: if_icmpeq     19
       9: new           #21                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #33                 // String This feature requires ASM8_EXPERIMENTAL
      15: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      23: ifnull        34
      26: aload_0
      27: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      30: aload_1
      31: invokevirtual #34                 // Method visitPermittedSubtypeExperimental:(Ljava/lang/String;)V
      34: return

  public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        19
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: aload_1
      12: aload_2
      13: aload_3
      14: iload         4
      16: invokevirtual #35                 // Method visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
      19: return

  public org.springframework.asm.RecordComponentVisitor visitRecordComponentExperimental(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field api:I
       4: ldc           #8                  // int 17301504
       6: if_icmpge     19
       9: new           #21                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #33                 // String This feature requires ASM8_EXPERIMENTAL
      15: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      23: ifnull        39
      26: aload_0
      27: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      30: iload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: invokevirtual #36                 // Method visitRecordComponentExperimental:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/RecordComponentVisitor;
      38: areturn
      39: aconst_null
      40: areturn

  public org.springframework.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        22
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: iload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: aload         5
      18: invokevirtual #37                 // Method visitField:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
      21: areturn
      22: aconst_null
      23: areturn

  public org.springframework.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        22
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: iload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: aload         5
      18: invokevirtual #38                 // Method visitMethod:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
      21: areturn
      22: aconst_null
      23: areturn

  public void visitEnd();
    Code:
       0: aload_0
       1: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
       4: ifnull        14
       7: aload_0
       8: getfield      #18                 // Field cv:Lorg/springframework/asm/ClassVisitor;
      11: invokevirtual #39                 // Method visitEnd:()V
      14: return
}
