Compiled from "CharSequenceEncoder.java"
public final class org.springframework.core.codec.CharSequenceEncoder extends org.springframework.core.codec.AbstractEncoder<java.lang.CharSequence> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private final java.util.concurrent.ConcurrentMap<java.nio.charset.Charset, java.lang.Float> charsetToMaxBytesPerChar;

  private org.springframework.core.codec.CharSequenceEncoder(org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/core/codec/AbstractEncoder."<init>":([Lorg/springframework/util/MimeType;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: iconst_3
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field charsetToMaxBytesPerChar:Ljava/util/concurrent/ConcurrentMap;
      17: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #6                  // Method org/springframework/core/codec/AbstractEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      11: ifeq          27
      14: ldc           #7                  // class java/lang/CharSequence
      16: aload_3
      17: invokevirtual #8                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<? extends java.lang.CharSequence>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: aload_0
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokedynamic #10,  0             // InvokeDynamic #0:apply:(Lorg/springframework/core/codec/CharSequenceEncoder;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/util/function/Function;
      16: invokevirtual #11                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      19: areturn

  public org.springframework.core.io.buffer.DataBuffer encodeValue(java.lang.CharSequence, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload         5
       2: invokestatic  #12                 // Method org/springframework/core/codec/Hints.isLoggingSuppressed:(Ljava/util/Map;)Z
       5: ifne          23
       8: aload_0
       9: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      12: aload_1
      13: aload         5
      15: invokedynamic #14,  0             // InvokeDynamic #1:apply:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/util/function/Function;
      20: invokestatic  #15                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      23: iconst_1
      24: istore        6
      26: aload_0
      27: aload         4
      29: invokespecial #16                 // Method getCharset:(Lorg/springframework/util/MimeType;)Ljava/nio/charset/Charset;
      32: astore        7
      34: aload_0
      35: aload_1
      36: aload         7
      38: invokevirtual #17                 // Method calculateCapacity:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I
      41: istore        8
      43: aload_2
      44: iload         8
      46: invokeinterface #18,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      51: astore        9
      53: aload         9
      55: aload_1
      56: aload         7
      58: invokeinterface #19,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
      63: pop
      64: iconst_0
      65: istore        6
      67: iload         6
      69: ifeq          132
      72: aload         9
      74: invokestatic  #20                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      77: pop
      78: goto          132
      81: astore        10
      83: new           #22                 // class org/springframework/core/codec/EncodingException
      86: dup
      87: new           #23                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #25                 // String String encoding error:
      96: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         10
     101: invokevirtual #27                 // Method java/nio/charset/CoderMalfunctionError.getMessage:()Ljava/lang/String;
     104: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: aload         10
     112: invokespecial #29                 // Method org/springframework/core/codec/EncodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     115: athrow
     116: astore        11
     118: iload         6
     120: ifeq          129
     123: aload         9
     125: invokestatic  #20                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     128: pop
     129: aload         11
     131: athrow
     132: aload         9
     134: areturn
    Exception table:
       from    to  target type
          53    67    81   Class java/nio/charset/CoderMalfunctionError
          53    67   116   any
          81   118   116   any

  int calculateCapacity(java.lang.CharSequence, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #4                  // Field charsetToMaxBytesPerChar:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokedynamic #30,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      10: invokeinterface #31,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #32                 // class java/lang/Float
      18: invokevirtual #33                 // Method java/lang/Float.floatValue:()F
      21: fstore_3
      22: aload_1
      23: invokeinterface #34,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      28: i2f
      29: fload_3
      30: fmul
      31: fstore        4
      33: fload         4
      35: f2d
      36: invokestatic  #35                 // Method java/lang/Math.ceil:(D)D
      39: d2i
      40: ireturn

  private java.nio.charset.Charset getCharset(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: invokevirtual #36                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
       8: ifnull        16
      11: aload_1
      12: invokevirtual #36                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      15: areturn
      16: getstatic     #37                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      19: areturn

  public static org.springframework.core.codec.CharSequenceEncoder textPlainOnly();
    Code:
       0: new           #38                 // class org/springframework/core/codec/CharSequenceEncoder
       3: dup
       4: iconst_1
       5: anewarray     #39                 // class org/springframework/util/MimeType
       8: dup
       9: iconst_0
      10: new           #39                 // class org/springframework/util/MimeType
      13: dup
      14: ldc           #40                 // String text
      16: ldc           #41                 // String plain
      18: getstatic     #37                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      21: invokespecial #42                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      24: aastore
      25: invokespecial #43                 // Method "<init>":([Lorg/springframework/util/MimeType;)V
      28: areturn

  public static org.springframework.core.codec.CharSequenceEncoder allMimeTypes();
    Code:
       0: new           #38                 // class org/springframework/core/codec/CharSequenceEncoder
       3: dup
       4: iconst_2
       5: anewarray     #39                 // class org/springframework/util/MimeType
       8: dup
       9: iconst_0
      10: new           #39                 // class org/springframework/util/MimeType
      13: dup
      14: ldc           #40                 // String text
      16: ldc           #41                 // String plain
      18: getstatic     #37                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      21: invokespecial #42                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      24: aastore
      25: dup
      26: iconst_1
      27: getstatic     #44                 // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      30: aastore
      31: invokespecial #43                 // Method "<init>":([Lorg/springframework/util/MimeType;)V
      34: areturn

  public org.springframework.core.io.buffer.DataBuffer encodeValue(java.lang.Object, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/CharSequence
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #45                 // Method encodeValue:(Ljava/lang/CharSequence;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
      14: areturn

  private static java.lang.Float lambda$calculateCapacity$2(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       4: invokevirtual #47                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
       7: invokestatic  #48                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      10: areturn

  private static java.lang.String lambda$encodeValue$1(java.lang.CharSequence, java.util.Map, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #49                 // Method java/lang/Boolean.booleanValue:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #50                 // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      16: astore_3
      17: new           #23                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokestatic  #51                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      28: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #52                 // String Writing
      33: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$0(org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload         5
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokevirtual #45                 // Method encodeValue:(Ljava/lang/CharSequence;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
      11: areturn

  static {};
    Code:
       0: getstatic     #53                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #37                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: return
}
