Compiled from "LocalVariableTableParameterNameDiscoverer.java"
class org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor extends org.springframework.asm.MethodVisitor {
  private static final java.lang.String CONSTRUCTOR;

  private final java.lang.Class<?> clazz;

  private final java.util.Map<java.lang.reflect.Executable, java.lang.String[]> executableMap;

  private final java.lang.String name;

  private final org.springframework.asm.Type[] args;

  private final java.lang.String[] parameterNames;

  private final boolean isStatic;

  private boolean hasLvtInfo;

  private final int[] lvtSlotIndex;

  public org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor(java.lang.Class<?>, java.util.Map<java.lang.reflect.Executable, java.lang.String[]>, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: ldc           #2                  // int 17301504
       3: invokespecial #3                  // Method org/springframework/asm/MethodVisitor."<init>":(I)V
       6: aload_0
       7: iconst_0
       8: putfield      #4                  // Field hasLvtInfo:Z
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field clazz:Ljava/lang/Class;
      16: aload_0
      17: aload_2
      18: putfield      #6                  // Field executableMap:Ljava/util/Map;
      21: aload_0
      22: aload_3
      23: putfield      #7                  // Field name:Ljava/lang/String;
      26: aload_0
      27: aload         4
      29: invokestatic  #8                  // Method org/springframework/asm/Type.getArgumentTypes:(Ljava/lang/String;)[Lorg/springframework/asm/Type;
      32: putfield      #9                  // Field args:[Lorg/springframework/asm/Type;
      35: aload_0
      36: aload_0
      37: getfield      #9                  // Field args:[Lorg/springframework/asm/Type;
      40: arraylength
      41: anewarray     #10                 // class java/lang/String
      44: putfield      #11                 // Field parameterNames:[Ljava/lang/String;
      47: aload_0
      48: iload         5
      50: putfield      #12                 // Field isStatic:Z
      53: aload_0
      54: iload         5
      56: aload_0
      57: getfield      #9                  // Field args:[Lorg/springframework/asm/Type;
      60: invokestatic  #13                 // Method computeLvtSlotIndices:(Z[Lorg/springframework/asm/Type;)[I
      63: putfield      #14                 // Field lvtSlotIndex:[I
      66: return

  public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.springframework.asm.Label, org.springframework.asm.Label, int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field hasLvtInfo:Z
       5: iconst_0
       6: istore        7
       8: iload         7
      10: aload_0
      11: getfield      #14                 // Field lvtSlotIndex:[I
      14: arraylength
      15: if_icmpge     44
      18: aload_0
      19: getfield      #14                 // Field lvtSlotIndex:[I
      22: iload         7
      24: iaload
      25: iload         6
      27: if_icmpne     38
      30: aload_0
      31: getfield      #11                 // Field parameterNames:[Ljava/lang/String;
      34: iload         7
      36: aload_1
      37: aastore
      38: iinc          7, 1
      41: goto          8
      44: return

  public void visitEnd();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasLvtInfo:Z
       4: ifne          22
       7: aload_0
       8: getfield      #12                 // Field isStatic:Z
      11: ifeq          40
      14: aload_0
      15: getfield      #11                 // Field parameterNames:[Ljava/lang/String;
      18: arraylength
      19: ifne          40
      22: aload_0
      23: getfield      #6                  // Field executableMap:Ljava/util/Map;
      26: aload_0
      27: invokespecial #15                 // Method resolveExecutable:()Ljava/lang/reflect/Executable;
      30: aload_0
      31: getfield      #11                 // Field parameterNames:[Ljava/lang/String;
      34: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: return

  private java.lang.reflect.Executable resolveExecutable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field clazz:Ljava/lang/Class;
       4: invokevirtual #17                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field args:[Lorg/springframework/asm/Type;
      12: arraylength
      13: anewarray     #18                 // class java/lang/Class
      16: astore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #9                  // Field args:[Lorg/springframework/asm/Type;
      24: arraylength
      25: if_icmpge     50
      28: aload_2
      29: iload_3
      30: aload_0
      31: getfield      #9                  // Field args:[Lorg/springframework/asm/Type;
      34: iload_3
      35: aaload
      36: invokevirtual #19                 // Method org/springframework/asm/Type.getClassName:()Ljava/lang/String;
      39: aload_1
      40: invokestatic  #20                 // Method org/springframework/util/ClassUtils.resolveClassName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      43: aastore
      44: iinc          3, 1
      47: goto          19
      50: ldc           #22                 // String <init>
      52: aload_0
      53: getfield      #7                  // Field name:Ljava/lang/String;
      56: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifeq          71
      62: aload_0
      63: getfield      #5                  // Field clazz:Ljava/lang/Class;
      66: aload_2
      67: invokevirtual #24                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      70: areturn
      71: aload_0
      72: getfield      #5                  // Field clazz:Ljava/lang/Class;
      75: aload_0
      76: getfield      #7                  // Field name:Ljava/lang/String;
      79: aload_2
      80: invokevirtual #25                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      83: areturn
      84: astore_3
      85: new           #27                 // class java/lang/IllegalStateException
      88: dup
      89: new           #28                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #30                 // String Method [
      98: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #7                  // Field name:Ljava/lang/String;
     105: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #32                 // String ] was discovered in the .class file but cannot be resolved in the class object
     110: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: aload_3
     117: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     120: athrow
    Exception table:
       from    to  target type
          50    70    84   Class java/lang/NoSuchMethodException
          71    83    84   Class java/lang/NoSuchMethodException

  private static int[] computeLvtSlotIndices(boolean, org.springframework.asm.Type[]);
    Code:
       0: aload_1
       1: arraylength
       2: newarray       int
       4: astore_2
       5: iload_0
       6: ifeq          13
       9: iconst_0
      10: goto          14
      13: iconst_1
      14: istore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: aload_1
      21: arraylength
      22: if_icmpge     55
      25: aload_2
      26: iload         4
      28: iload_3
      29: iastore
      30: aload_1
      31: iload         4
      33: aaload
      34: invokestatic  #35                 // Method isWideType:(Lorg/springframework/asm/Type;)Z
      37: ifeq          46
      40: iinc          3, 2
      43: goto          49
      46: iinc          3, 1
      49: iinc          4, 1
      52: goto          18
      55: aload_2
      56: areturn

  private static boolean isWideType(org.springframework.asm.Type);
    Code:
       0: aload_0
       1: getstatic     #36                 // Field org/springframework/asm/Type.LONG_TYPE:Lorg/springframework/asm/Type;
       4: if_acmpeq     14
       7: aload_0
       8: getstatic     #37                 // Field org/springframework/asm/Type.DOUBLE_TYPE:Lorg/springframework/asm/Type;
      11: if_acmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
}
