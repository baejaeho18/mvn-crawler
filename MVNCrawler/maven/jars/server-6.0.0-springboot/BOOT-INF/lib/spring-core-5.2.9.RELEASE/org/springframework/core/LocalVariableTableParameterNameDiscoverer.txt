Compiled from "LocalVariableTableParameterNameDiscoverer.java"
public class org.springframework.core.LocalVariableTableParameterNameDiscoverer implements org.springframework.core.ParameterNameDiscoverer {
  private static final org.apache.commons.logging.Log logger;

  private static final java.util.Map<java.lang.reflect.Executable, java.lang.String[]> NO_DEBUG_INFO_MAP;

  private final java.util.Map<java.lang.Class<?>, java.util.Map<java.lang.reflect.Executable, java.lang.String[]>> parameterNamesCache;

  public org.springframework.core.LocalVariableTableParameterNameDiscoverer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        32
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field parameterNamesCache:Ljava/util/Map;
      17: return

  public java.lang.String[] getParameterNames(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #6                  // Method doGetParameterNames:(Ljava/lang/reflect/Executable;)[Ljava/lang/String;
      10: areturn

  public java.lang.String[] getParameterNames(java.lang.reflect.Constructor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method doGetParameterNames:(Ljava/lang/reflect/Executable;)[Ljava/lang/String;
       5: areturn

  private java.lang.String[] doGetParameterNames(java.lang.reflect.Executable);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/reflect/Executable.getDeclaringClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field parameterNamesCache:Ljava/util/Map;
       9: aload_2
      10: aload_0
      11: invokedynamic #8,  0              // InvokeDynamic #0:apply:(Lorg/springframework/core/LocalVariableTableParameterNameDiscoverer;)Ljava/util/function/Function;
      16: invokeinterface #9,  3            // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      21: checkcast     #10                 // class java/util/Map
      24: astore_3
      25: aload_3
      26: getstatic     #11                 // Field NO_DEBUG_INFO_MAP:Ljava/util/Map;
      29: if_acmpeq     45
      32: aload_3
      33: aload_1
      34: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #13                 // class "[Ljava/lang/String;"
      42: goto          46
      45: aconst_null
      46: areturn

  private java.util.Map<java.lang.reflect.Executable, java.lang.String[]> inspectClass(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_1
       2: invokestatic  #14                 // Method org/springframework/util/ClassUtils.getClassFileName:(Ljava/lang/Class;)Ljava/lang/String;
       5: invokevirtual #15                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       8: astore_2
       9: aload_2
      10: ifnonnull     60
      13: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      16: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      21: ifeq          56
      24: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #18                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #20                 // String Cannot find \'.class\' file for class [
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #23                 // String ] - unable to determine constructor/method parameter names
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      56: getstatic     #11                 // Field NO_DEBUG_INFO_MAP:Ljava/util/Map;
      59: areturn
      60: new           #26                 // class org/springframework/asm/ClassReader
      63: dup
      64: aload_2
      65: invokespecial #27                 // Method org/springframework/asm/ClassReader."<init>":(Ljava/io/InputStream;)V
      68: astore_3
      69: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      72: dup
      73: bipush        32
      75: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      78: astore        4
      80: aload_3
      81: new           #28                 // class org/springframework/core/LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor
      84: dup
      85: aload_1
      86: aload         4
      88: invokespecial #29                 // Method org/springframework/core/LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor."<init>":(Ljava/lang/Class;Ljava/util/Map;)V
      91: iconst_0
      92: invokevirtual #30                 // Method org/springframework/asm/ClassReader.accept:(Lorg/springframework/asm/ClassVisitor;I)V
      95: aload         4
      97: astore        5
      99: aload_2
     100: invokevirtual #31                 // Method java/io/InputStream.close:()V
     103: goto          108
     106: astore        6
     108: aload         5
     110: areturn
     111: astore_3
     112: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     115: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     120: ifeq          156
     123: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     126: new           #18                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #33                 // String Exception thrown while reading \'.class\' file for class [
     135: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_1
     139: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     142: ldc           #23                 // String ] - unable to determine constructor/method parameter names
     144: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: aload_3
     151: invokeinterface #34,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     156: aload_2
     157: invokevirtual #31                 // Method java/io/InputStream.close:()V
     160: goto          237
     163: astore_3
     164: goto          237
     167: astore_3
     168: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     171: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     176: ifeq          212
     179: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     182: new           #18                 // class java/lang/StringBuilder
     185: dup
     186: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #36                 // String ASM ClassReader failed to parse class file [
     191: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_1
     195: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #37                 // String ], probably due to a new Java class file version that isn\'t supported yet - unable to determine constructor/method parameter names
     200: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: aload_3
     207: invokeinterface #34,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     212: aload_2
     213: invokevirtual #31                 // Method java/io/InputStream.close:()V
     216: goto          237
     219: astore_3
     220: goto          237
     223: astore        7
     225: aload_2
     226: invokevirtual #31                 // Method java/io/InputStream.close:()V
     229: goto          234
     232: astore        8
     234: aload         7
     236: athrow
     237: getstatic     #11                 // Field NO_DEBUG_INFO_MAP:Ljava/util/Map;
     240: areturn
    Exception table:
       from    to  target type
          99   103   106   Class java/io/IOException
          60    99   111   Class java/io/IOException
         156   160   163   Class java/io/IOException
          60    99   167   Class java/lang/IllegalArgumentException
         212   216   219   Class java/io/IOException
          60    99   223   any
         111   156   223   any
         167   212   223   any
         225   229   232   Class java/io/IOException
         223   225   223   any

  static {};
    Code:
       0: ldc           #38                 // class org/springframework/core/LocalVariableTableParameterNameDiscoverer
       2: invokestatic  #39                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       8: invokestatic  #40                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      11: putstatic     #11                 // Field NO_DEBUG_INFO_MAP:Ljava/util/Map;
      14: return
}
