Compiled from "PropertySource.java"
public abstract class org.springframework.core.env.PropertySource<T> {
  protected final org.apache.commons.logging.Log logger;

  protected final java.lang.String name;

  protected final T source;

  public org.springframework.core.env.PropertySource(java.lang.String, T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #5                  // String Property source name must contain at least one character
      18: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      21: aload_2
      22: ldc           #7                  // String Property source must not be null
      24: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      27: aload_0
      28: aload_1
      29: putfield      #9                  // Field name:Ljava/lang/String;
      32: aload_0
      33: aload_2
      34: putfield      #10                 // Field source:Ljava/lang/Object;
      37: return

  public org.springframework.core.env.PropertySource(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #11                 // class java/lang/Object
       5: dup
       6: invokespecial #1                  // Method java/lang/Object."<init>":()V
       9: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public T getSource();
    Code:
       0: aload_0
       1: getfield      #10                 // Field source:Ljava/lang/Object;
       4: areturn

  public boolean containsProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public abstract java.lang.Object getProperty(java.lang.String);

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     29
       5: aload_1
       6: instanceof    #14                 // class org/springframework/core/env/PropertySource
       9: ifeq          33
      12: aload_0
      13: invokevirtual #15                 // Method getName:()Ljava/lang/String;
      16: aload_1
      17: checkcast     #14                 // class org/springframework/core/env/PropertySource
      20: invokevirtual #15                 // Method getName:()Ljava/lang/String;
      23: invokestatic  #16                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getName:()Ljava/lang/String;
       4: invokestatic  #17                 // Method org/springframework/util/ObjectUtils.nullSafeHashCode:(Ljava/lang/Object;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          74
      12: new           #19                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokevirtual #21                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      26: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #23                 // String @
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokestatic  #24                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      38: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #26                 // String  {name=\'
      43: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #15                 // Method getName:()Ljava/lang/String;
      50: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #27                 // String \', properties=
      55: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #28                 // Method getSource:()Ljava/lang/Object;
      62: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #30                 // String }
      67: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn
      74: new           #19                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      81: aload_0
      82: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      85: invokevirtual #21                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      88: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #26                 // String  {name=\'
      93: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #15                 // Method getName:()Ljava/lang/String;
     100: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #32                 // String \'}
     105: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  public static org.springframework.core.env.PropertySource<?> named(java.lang.String);
    Code:
       0: new           #33                 // class org/springframework/core/env/PropertySource$ComparisonPropertySource
       3: dup
       4: aload_0
       5: invokespecial #34                 // Method org/springframework/core/env/PropertySource$ComparisonPropertySource."<init>":(Ljava/lang/String;)V
       8: areturn
}
