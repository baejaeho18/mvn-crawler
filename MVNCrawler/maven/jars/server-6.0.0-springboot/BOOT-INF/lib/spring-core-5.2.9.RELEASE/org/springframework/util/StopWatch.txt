Compiled from "StopWatch.java"
public class org.springframework.util.StopWatch {
  private final java.lang.String id;

  private boolean keepTaskList;

  private final java.util.List<org.springframework.util.StopWatch$TaskInfo> taskList;

  private long startTimeNanos;

  private java.lang.String currentTaskName;

  private org.springframework.util.StopWatch$TaskInfo lastTaskInfo;

  private int taskCount;

  private long totalTimeNanos;

  public org.springframework.util.StopWatch();
    Code:
       0: aload_0
       1: ldc           #3                  // String
       3: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
       6: return

  public org.springframework.util.StopWatch(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #6                  // Field keepTaskList:Z
       9: aload_0
      10: new           #7                  // class java/util/LinkedList
      13: dup
      14: invokespecial #8                  // Method java/util/LinkedList."<init>":()V
      17: putfield      #9                  // Field taskList:Ljava/util/List;
      20: aload_0
      21: aload_1
      22: putfield      #10                 // Field id:Ljava/lang/String;
      25: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field id:Ljava/lang/String;
       4: areturn

  public void setKeepTaskList(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field keepTaskList:Z
       5: return

  public void start() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc           #3                  // String
       3: invokevirtual #11                 // Method start:(Ljava/lang/String;)V
       6: return

  public void start(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field currentTaskName:Ljava/lang/String;
       4: ifnull        17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String Can\'t start StopWatch: it\'s already running
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #12                 // Field currentTaskName:Ljava/lang/String;
      22: aload_0
      23: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      26: putfield      #17                 // Field startTimeNanos:J
      29: return

  public void stop() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field currentTaskName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #18                 // String Can\'t stop StopWatch: it\'s not running
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      20: aload_0
      21: getfield      #17                 // Field startTimeNanos:J
      24: lsub
      25: lstore_1
      26: aload_0
      27: dup
      28: getfield      #19                 // Field totalTimeNanos:J
      31: lload_1
      32: ladd
      33: putfield      #19                 // Field totalTimeNanos:J
      36: aload_0
      37: new           #20                 // class org/springframework/util/StopWatch$TaskInfo
      40: dup
      41: aload_0
      42: getfield      #12                 // Field currentTaskName:Ljava/lang/String;
      45: lload_1
      46: invokespecial #21                 // Method org/springframework/util/StopWatch$TaskInfo."<init>":(Ljava/lang/String;J)V
      49: putfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
      52: aload_0
      53: getfield      #6                  // Field keepTaskList:Z
      56: ifeq          73
      59: aload_0
      60: getfield      #9                  // Field taskList:Ljava/util/List;
      63: aload_0
      64: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
      67: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_0
      74: dup
      75: getfield      #24                 // Field taskCount:I
      78: iconst_1
      79: iadd
      80: putfield      #24                 // Field taskCount:I
      83: aload_0
      84: aconst_null
      85: putfield      #12                 // Field currentTaskName:Ljava/lang/String;
      88: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #12                 // Field currentTaskName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String currentTaskName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field currentTaskName:Ljava/lang/String;
       4: areturn

  public long getLastTaskTimeNanos() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
       4: ifnonnull     17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String No tasks run: can\'t get last task interval
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
      21: invokevirtual #26                 // Method org/springframework/util/StopWatch$TaskInfo.getTimeNanos:()J
      24: lreturn

  public long getLastTaskTimeMillis() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
       4: ifnonnull     17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String No tasks run: can\'t get last task interval
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
      21: invokevirtual #27                 // Method org/springframework/util/StopWatch$TaskInfo.getTimeMillis:()J
      24: lreturn

  public java.lang.String getLastTaskName() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
       4: ifnonnull     17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #28                 // String No tasks run: can\'t get last task name
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
      21: invokevirtual #29                 // Method org/springframework/util/StopWatch$TaskInfo.getTaskName:()Ljava/lang/String;
      24: areturn

  public org.springframework.util.StopWatch$TaskInfo getLastTaskInfo() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
       4: ifnonnull     17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String No tasks run: can\'t get last task info
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #22                 // Field lastTaskInfo:Lorg/springframework/util/StopWatch$TaskInfo;
      21: areturn

  public long getTotalTimeNanos();
    Code:
       0: aload_0
       1: getfield      #19                 // Field totalTimeNanos:J
       4: lreturn

  public long getTotalTimeMillis();
    Code:
       0: aload_0
       1: getfield      #19                 // Field totalTimeNanos:J
       4: invokestatic  #2                  // Method nanosToMillis:(J)J
       7: lreturn

  public double getTotalTimeSeconds();
    Code:
       0: aload_0
       1: getfield      #19                 // Field totalTimeNanos:J
       4: invokestatic  #1                  // Method nanosToSeconds:(J)D
       7: dreturn

  public int getTaskCount();
    Code:
       0: aload_0
       1: getfield      #24                 // Field taskCount:I
       4: ireturn

  public org.springframework.util.StopWatch$TaskInfo[] getTaskInfo();
    Code:
       0: aload_0
       1: getfield      #6                  // Field keepTaskList:Z
       4: ifne          17
       7: new           #31                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #32                 // String Task info is not being kept!
      13: invokespecial #33                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #9                  // Field taskList:Ljava/util/List;
      21: iconst_0
      22: anewarray     #20                 // class org/springframework/util/StopWatch$TaskInfo
      25: invokeinterface #34,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      30: checkcast     #35                 // class "[Lorg/springframework/util/StopWatch$TaskInfo;"
      33: areturn

  public java.lang.String shortSummary();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #38                 // String StopWatch \'
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #40                 // Method getId:()Ljava/lang/String;
      16: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #41                 // String \': running time =
      21: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #42                 // Method getTotalTimeNanos:()J
      28: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #44                 // String  ns
      33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public java.lang.String prettyPrint();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #46                 // Method shortSummary:()Ljava/lang/String;
       8: invokespecial #47                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: bipush        10
      15: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: pop
      19: aload_0
      20: getfield      #6                  // Field keepTaskList:Z
      23: ifne          36
      26: aload_1
      27: ldc           #49                 // String No task info kept
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: goto          180
      36: aload_1
      37: ldc           #50                 // String ---------------------------------------------\n
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_1
      44: ldc           #51                 // String ns         %     Task name\n
      46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: aload_1
      51: ldc           #50                 // String ---------------------------------------------\n
      53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: invokestatic  #52                 // Method java/text/NumberFormat.getNumberInstance:()Ljava/text/NumberFormat;
      60: astore_2
      61: aload_2
      62: bipush        9
      64: invokevirtual #53                 // Method java/text/NumberFormat.setMinimumIntegerDigits:(I)V
      67: aload_2
      68: iconst_0
      69: invokevirtual #54                 // Method java/text/NumberFormat.setGroupingUsed:(Z)V
      72: invokestatic  #55                 // Method java/text/NumberFormat.getPercentInstance:()Ljava/text/NumberFormat;
      75: astore_3
      76: aload_3
      77: iconst_3
      78: invokevirtual #53                 // Method java/text/NumberFormat.setMinimumIntegerDigits:(I)V
      81: aload_3
      82: iconst_0
      83: invokevirtual #54                 // Method java/text/NumberFormat.setGroupingUsed:(Z)V
      86: aload_0
      87: invokevirtual #56                 // Method getTaskInfo:()[Lorg/springframework/util/StopWatch$TaskInfo;
      90: astore        4
      92: aload         4
      94: arraylength
      95: istore        5
      97: iconst_0
      98: istore        6
     100: iload         6
     102: iload         5
     104: if_icmpge     180
     107: aload         4
     109: iload         6
     111: aaload
     112: astore        7
     114: aload_1
     115: aload_2
     116: aload         7
     118: invokevirtual #26                 // Method org/springframework/util/StopWatch$TaskInfo.getTimeNanos:()J
     121: invokevirtual #57                 // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
     124: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #58                 // String
     129: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: pop
     133: aload_1
     134: aload_3
     135: aload         7
     137: invokevirtual #26                 // Method org/springframework/util/StopWatch$TaskInfo.getTimeNanos:()J
     140: l2d
     141: aload_0
     142: invokevirtual #42                 // Method getTotalTimeNanos:()J
     145: l2d
     146: ddiv
     147: invokevirtual #59                 // Method java/text/NumberFormat.format:(D)Ljava/lang/String;
     150: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: ldc           #58                 // String
     155: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: pop
     159: aload_1
     160: aload         7
     162: invokevirtual #29                 // Method org/springframework/util/StopWatch$TaskInfo.getTaskName:()Ljava/lang/String;
     165: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: ldc           #60                 // String \n
     170: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: pop
     174: iinc          6, 1
     177: goto          100
     180: aload_1
     181: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: areturn

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #46                 // Method shortSummary:()Ljava/lang/String;
       8: invokespecial #47                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_0
      13: getfield      #6                  // Field keepTaskList:Z
      16: ifeq          122
      19: aload_0
      20: invokevirtual #56                 // Method getTaskInfo:()[Lorg/springframework/util/StopWatch$TaskInfo;
      23: astore_2
      24: aload_2
      25: arraylength
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload         4
      32: iload_3
      33: if_icmpge     119
      36: aload_2
      37: iload         4
      39: aaload
      40: astore        5
      42: aload_1
      43: ldc           #61                 // String ; [
      45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload         5
      50: invokevirtual #29                 // Method org/springframework/util/StopWatch$TaskInfo.getTaskName:()Ljava/lang/String;
      53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #62                 // String ] took
      58: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload         5
      63: invokevirtual #26                 // Method org/springframework/util/StopWatch$TaskInfo.getTimeNanos:()J
      66: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      69: ldc           #44                 // String  ns
      71: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: ldc2_w        #63                 // double 100.0d
      78: aload         5
      80: invokevirtual #26                 // Method org/springframework/util/StopWatch$TaskInfo.getTimeNanos:()J
      83: l2d
      84: dmul
      85: aload_0
      86: invokevirtual #42                 // Method getTotalTimeNanos:()J
      89: l2d
      90: ddiv
      91: invokestatic  #65                 // Method java/lang/Math.round:(D)J
      94: lstore        6
      96: aload_1
      97: ldc           #66                 // String  =
      99: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: lload         6
     104: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     107: ldc           #67                 // String %
     109: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: pop
     113: iinc          4, 1
     116: goto          30
     119: goto          129
     122: aload_1
     123: ldc           #68                 // String ; no task info kept
     125: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: areturn

  private static long nanosToMillis(long);
    Code:
       0: getstatic     #69                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: lload_0
       4: invokevirtual #70                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       7: lreturn

  private static double nanosToSeconds(long);
    Code:
       0: lload_0
       1: l2d
       2: ldc2_w        #71                 // double 1.0E9d
       5: ddiv
       6: dreturn

  static long access$000(long);
    Code:
       0: lload_0
       1: invokestatic  #2                  // Method nanosToMillis:(J)J
       4: lreturn

  static double access$100(long);
    Code:
       0: lload_0
       1: invokestatic  #1                  // Method nanosToSeconds:(J)D
       4: dreturn
}
