Compiled from "MonoToListenableFutureAdapter.java"
public class org.springframework.util.concurrent.MonoToListenableFutureAdapter<T> implements org.springframework.util.concurrent.ListenableFuture<T> {
  private final reactor.core.publisher.MonoProcessor<T> processor;

  private final org.springframework.util.concurrent.ListenableFutureCallbackRegistry<T> registry;

  public org.springframework.util.concurrent.MonoToListenableFutureAdapter(reactor.core.publisher.Mono<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/util/concurrent/ListenableFutureCallbackRegistry
       8: dup
       9: invokespecial #3                  // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry."<init>":()V
      12: putfield      #4                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
      15: aload_1
      16: ldc           #5                  // String Mono must not be null
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: aload_0
      24: getfield      #4                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
      27: dup
      28: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: pop
      32: invokedynamic #8,  0              // InvokeDynamic #0:accept:(Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;)Ljava/util/function/Consumer;
      37: invokevirtual #9                  // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      40: aload_0
      41: getfield      #4                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
      44: dup
      45: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: pop
      49: invokedynamic #10,  0             // InvokeDynamic #1:accept:(Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;)Ljava/util/function/Consumer;
      54: invokevirtual #11                 // Method reactor/core/publisher/Mono.doOnError:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      57: invokevirtual #12                 // Method reactor/core/publisher/Mono.toProcessor:()Lreactor/core/publisher/MonoProcessor;
      60: putfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
      63: return

  public T get();
    Code:
       0: aload_0
       1: getfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
       4: invokevirtual #14                 // Method reactor/core/publisher/MonoProcessor.block:()Ljava/lang/Object;
       7: areturn

  public T get(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #15                 // String TimeUnit must not be null
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       9: lload_1
      10: aload_3
      11: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      14: invokestatic  #18                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      17: astore        4
      19: aload_0
      20: getfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
      23: aload         4
      25: invokevirtual #19                 // Method reactor/core/publisher/MonoProcessor.block:(Ljava/time/Duration;)Ljava/lang/Object;
      28: areturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isCancelled:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
      13: invokevirtual #21                 // Method reactor/core/publisher/MonoProcessor.cancel:()V
      16: aload_0
      17: getfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
      20: invokevirtual #22                 // Method reactor/core/publisher/MonoProcessor.isCancelled:()Z
      23: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
       4: invokevirtual #22                 // Method reactor/core/publisher/MonoProcessor.isCancelled:()Z
       7: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #13                 // Field processor:Lreactor/core/publisher/MonoProcessor;
       4: invokevirtual #23                 // Method reactor/core/publisher/MonoProcessor.isTerminated:()Z
       7: ireturn

  public void addCallback(org.springframework.util.concurrent.ListenableFutureCallback<? super T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
       4: aload_1
       5: invokevirtual #24                 // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry.addCallback:(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
       8: return

  public void addCallback(org.springframework.util.concurrent.SuccessCallback<? super T>, org.springframework.util.concurrent.FailureCallback);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
       4: aload_1
       5: invokevirtual #25                 // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry.addSuccessCallback:(Lorg/springframework/util/concurrent/SuccessCallback;)V
       8: aload_0
       9: getfield      #4                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
      12: aload_2
      13: invokevirtual #26                 // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry.addFailureCallback:(Lorg/springframework/util/concurrent/FailureCallback;)V
      16: return
}
