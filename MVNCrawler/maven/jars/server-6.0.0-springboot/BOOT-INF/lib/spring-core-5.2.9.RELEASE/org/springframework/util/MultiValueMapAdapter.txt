Compiled from "MultiValueMapAdapter.java"
class org.springframework.util.MultiValueMapAdapter<K, V> implements org.springframework.util.MultiValueMap<K, V>, java.io.Serializable {
  private final java.util.Map<K, java.util.List<V>> targetMap;

  org.springframework.util.MultiValueMapAdapter(java.util.Map<K, java.util.List<V>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field targetMap:Ljava/util/Map;
       9: return

  public V getFirst(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        37
      18: aload_2
      19: invokeinterface #5,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      24: ifne          37
      27: aload_2
      28: iconst_0
      29: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: goto          38
      37: aconst_null
      38: areturn

  public void add(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #7,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokeinterface #8,  3            // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #4                  // class java/util/List
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  public void addAll(K, java.util.List<? extends V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #10,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      10: invokeinterface #8,  3            // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #4                  // class java/util/List
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #11,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: return

  public void addAll(org.springframework.util.MultiValueMap<K, V>);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/springframework/util/MultiValueMap.entrySet:()Ljava/util/Set;
       6: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #16                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #4                  // class java/util/List
      47: invokevirtual #19                 // Method addAll:(Ljava/lang/Object;Ljava/util/List;)V
      50: goto          12
      53: return

  public void set(K, V);
    Code:
       0: new           #20                 // class java/util/LinkedList
       3: dup
       4: invokespecial #21                 // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #2                  // Field targetMap:Ljava/util/Map;
      20: aload_1
      21: aload_3
      22: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void setAll(java.util.Map<K, V>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #23,  0             // InvokeDynamic #2:accept:(Lorg/springframework/util/MultiValueMapAdapter;)Ljava/util/function/BiConsumer;
       7: invokeinterface #24,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public java.util.Map<K, V> toSingleValueMap();
    Code:
       0: new           #25                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field targetMap:Ljava/util/Map;
       8: invokeinterface #26,  1           // InterfaceMethod java/util/Map.size:()I
      13: invokespecial #27                 // Method java/util/LinkedHashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #2                  // Field targetMap:Ljava/util/Map;
      21: aload_1
      22: invokedynamic #28,  0             // InvokeDynamic #3:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      27: invokeinterface #24,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      32: aload_1
      33: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.List<V> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class java/util/List
      13: areturn

  public java.util.List<V> put(K, java.util.List<V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/List
      14: areturn

  public java.util.List<V> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class java/util/List
      13: areturn

  public void putAll(java.util.Map<? extends K, ? extends java.util.List<V>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<java.util.List<V>> values();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<K, java.util.List<V>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     18
       5: aload_0
       6: getfield      #2                  // Field targetMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #38,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetMap:Ljava/util/Map;
       4: invokevirtual #40                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #4                  // class java/util/List
       6: invokevirtual #42                 // Method put:(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  private static void lambda$toSingleValueMap$2(java.util.Map, java.lang.Object, java.util.List);
    Code:
       0: aload_2
       1: ifnull        28
       4: aload_2
       5: invokeinterface #5,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifne          28
      13: aload_0
      14: aload_1
      15: aload_2
      16: iconst_0
      17: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  private static java.util.List lambda$addAll$1(java.lang.Object);
    Code:
       0: new           #20                 // class java/util/LinkedList
       3: dup
       4: invokespecial #21                 // Method java/util/LinkedList."<init>":()V
       7: areturn

  private static java.util.List lambda$add$0(java.lang.Object);
    Code:
       0: new           #20                 // class java/util/LinkedList
       3: dup
       4: invokespecial #21                 // Method java/util/LinkedList."<init>":()V
       7: areturn
}
