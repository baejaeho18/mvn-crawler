Compiled from "AbstractDecoder.java"
public abstract class org.springframework.core.codec.AbstractDecoder<T> implements org.springframework.core.codec.Decoder<T> {
  private final java.util.List<org.springframework.util.MimeType> decodableMimeTypes;

  protected org.apache.commons.logging.Log logger;

  protected org.springframework.core.codec.AbstractDecoder(org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aload_1
      17: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: putfield      #6                  // Field decodableMimeTypes:Ljava/util/List;
      23: return

  public void setLogger(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       5: return

  public org.apache.commons.logging.Log getLogger();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  public java.util.List<org.springframework.util.MimeType> getDecodableMimeTypes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field decodableMimeTypes:Ljava/util/List;
       4: areturn

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: getfield      #6                  // Field decodableMimeTypes:Ljava/util/List;
      10: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          50
      25: aload_3
      26: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #10                 // class org/springframework/util/MimeType
      34: astore        4
      36: aload         4
      38: aload_2
      39: invokevirtual #11                 // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: goto          16
      50: iconst_0
      51: ireturn

  public reactor.core.publisher.Mono<T> decodeToMono(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
