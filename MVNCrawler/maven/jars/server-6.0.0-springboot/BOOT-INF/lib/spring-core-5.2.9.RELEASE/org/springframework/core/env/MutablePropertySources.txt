Compiled from "MutablePropertySources.java"
public class org.springframework.core.env.MutablePropertySources implements org.springframework.core.env.PropertySources {
  private final java.util.List<org.springframework.core.env.PropertySource<?>> propertySourceList;

  public org.springframework.core.env.MutablePropertySources();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field propertySourceList:Ljava/util/List;
      15: return

  public org.springframework.core.env.MutablePropertySources(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method "<init>":()V
       4: aload_1
       5: invokeinterface #6,  1            // InterfaceMethod org/springframework/core/env/PropertySources.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          38
      20: aload_2
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #9                  // class org/springframework/core/env/PropertySource
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #10                 // Method addLast:(Lorg/springframework/core/env/PropertySource;)V
      35: goto          11
      38: return

  public java.util.Iterator<org.springframework.core.env.PropertySource<?>> iterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public java.util.Spliterator<org.springframework.core.env.PropertySource<?>> spliterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: iconst_0
       5: invokestatic  #12                 // Method java/util/Spliterators.spliterator:(Ljava/util/Collection;I)Ljava/util/Spliterator;
       8: areturn

  public java.util.stream.Stream<org.springframework.core.env.PropertySource<?>> stream();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class org/springframework/core/env/PropertySource
      28: astore_3
      29: aload_3
      30: invokevirtual #14                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: goto          10
      45: iconst_0
      46: ireturn

  public org.springframework.core.env.PropertySource<?> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class org/springframework/core/env/PropertySource
      28: astore_3
      29: aload_3
      30: invokevirtual #14                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aconst_null
      46: areturn

  public void addFirst(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokevirtual #16                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      12: aload_0
      13: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      16: iconst_0
      17: aload_1
      18: invokeinterface #17,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      23: aload_2
      24: monitorexit
      25: goto          33
      28: astore_3
      29: aload_2
      30: monitorexit
      31: aload_3
      32: athrow
      33: return
    Exception table:
       from    to  target type
           7    25    28   any
          28    31    28   any

  public void addLast(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokevirtual #16                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      12: aload_0
      13: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      16: aload_1
      17: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_2
      24: monitorexit
      25: goto          33
      28: astore_3
      29: aload_2
      30: monitorexit
      31: aload_3
      32: athrow
      33: return
    Exception table:
       from    to  target type
           7    25    28   any
          28    31    28   any

  public void addBefore(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #19                 // Method assertLegalRelativeAddition:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
       6: aload_0
       7: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      10: dup
      11: astore_3
      12: monitorenter
      13: aload_0
      14: aload_2
      15: invokevirtual #16                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      18: aload_0
      19: aload_1
      20: invokespecial #20                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      23: istore        4
      25: aload_0
      26: iload         4
      28: aload_2
      29: invokespecial #21                 // Method addAtIndex:(ILorg/springframework/core/env/PropertySource;)V
      32: aload_3
      33: monitorexit
      34: goto          44
      37: astore        5
      39: aload_3
      40: monitorexit
      41: aload         5
      43: athrow
      44: return
    Exception table:
       from    to  target type
          13    34    37   any
          37    41    37   any

  public void addAfter(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #19                 // Method assertLegalRelativeAddition:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
       6: aload_0
       7: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      10: dup
      11: astore_3
      12: monitorenter
      13: aload_0
      14: aload_2
      15: invokevirtual #16                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      18: aload_0
      19: aload_1
      20: invokespecial #20                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      23: istore        4
      25: aload_0
      26: iload         4
      28: iconst_1
      29: iadd
      30: aload_2
      31: invokespecial #21                 // Method addAtIndex:(ILorg/springframework/core/env/PropertySource;)V
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        5
      41: aload_3
      42: monitorexit
      43: aload         5
      45: athrow
      46: return
    Exception table:
       from    to  target type
          13    36    39   any
          39    43    39   any

  public int precedenceOf(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      10: ireturn

  public org.springframework.core.env.PropertySource<?> remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      11: aload_1
      12: invokestatic  #23                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      15: invokeinterface #22,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      20: istore_3
      21: iload_3
      22: iconst_m1
      23: if_icmpeq     42
      26: aload_0
      27: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      30: iload_3
      31: invokeinterface #24,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      36: checkcast     #9                  // class org/springframework/core/env/PropertySource
      39: goto          43
      42: aconst_null
      43: aload_2
      44: monitorexit
      45: areturn
      46: astore        4
      48: aload_2
      49: monitorexit
      50: aload         4
      52: athrow
    Exception table:
       from    to  target type
           7    45    46   any
          46    50    46   any

  public void replace(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokespecial #20                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      12: istore        4
      14: aload_0
      15: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      18: iload         4
      20: aload_2
      21: invokeinterface #25,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_3
      28: monitorexit
      29: goto          39
      32: astore        5
      34: aload_3
      35: monitorexit
      36: aload         5
      38: athrow
      39: return
    Exception table:
       from    to  target type
           7    29    32   any
          32    36    32   any

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  protected void assertLegalRelativeAddition(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_2
       1: invokevirtual #14                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
       4: astore_3
       5: aload_1
       6: aload_3
       7: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          45
      13: new           #28                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #29                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #31                 // String PropertySource named \'
      26: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_3
      30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #33                 // String \' cannot be added relative to itself
      35: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  protected void removeIfPresent(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private void addAtIndex(int, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #16                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
       5: aload_0
       6: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       9: iload_1
      10: aload_2
      11: invokeinterface #17,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      16: return

  private int assertPresentAndGetIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokestatic  #23                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokeinterface #22,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      13: istore_2
      14: iload_2
      15: iconst_m1
      16: if_icmpne     51
      19: new           #28                 // class java/lang/IllegalArgumentException
      22: dup
      23: new           #29                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #31                 // String PropertySource named \'
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #37                 // String \' does not exist
      41: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_2
      52: ireturn
}
