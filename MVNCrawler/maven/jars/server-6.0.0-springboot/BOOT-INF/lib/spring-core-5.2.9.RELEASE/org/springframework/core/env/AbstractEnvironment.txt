Compiled from "AbstractEnvironment.java"
public abstract class org.springframework.core.env.AbstractEnvironment implements org.springframework.core.env.ConfigurableEnvironment {
  public static final java.lang.String IGNORE_GETENV_PROPERTY_NAME;

  public static final java.lang.String ACTIVE_PROFILES_PROPERTY_NAME;

  public static final java.lang.String DEFAULT_PROFILES_PROPERTY_NAME;

  protected static final java.lang.String RESERVED_DEFAULT_PROFILE_NAME;

  protected final org.apache.commons.logging.Log logger;

  private final java.util.Set<java.lang.String> activeProfiles;

  private final java.util.Set<java.lang.String> defaultProfiles;

  private final org.springframework.core.env.MutablePropertySources propertySources;

  private final org.springframework.core.env.ConfigurablePropertyResolver propertyResolver;

  public org.springframework.core.env.AbstractEnvironment();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #7                  // Field activeProfiles:Ljava/util/Set;
      26: aload_0
      27: new           #5                  // class java/util/LinkedHashSet
      30: dup
      31: aload_0
      32: invokevirtual #8                  // Method getReservedDefaultProfiles:()Ljava/util/Set;
      35: invokespecial #9                  // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      38: putfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      41: aload_0
      42: new           #11                 // class org/springframework/core/env/MutablePropertySources
      45: dup
      46: invokespecial #12                 // Method org/springframework/core/env/MutablePropertySources."<init>":()V
      49: putfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      52: aload_0
      53: new           #14                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      56: dup
      57: aload_0
      58: getfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      61: invokespecial #15                 // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      64: putfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
      67: aload_0
      68: aload_0
      69: getfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      72: invokevirtual #17                 // Method customizePropertySources:(Lorg/springframework/core/env/MutablePropertySources;)V
      75: return

  protected void customizePropertySources(org.springframework.core.env.MutablePropertySources);
    Code:
       0: return

  protected java.util.Set<java.lang.String> getReservedDefaultProfiles();
    Code:
       0: ldc           #19                 // String default
       2: invokestatic  #20                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       5: areturn

  public java.lang.String[] getActiveProfiles();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method doGetActiveProfiles:()Ljava/util/Set;
       4: invokestatic  #22                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
       7: areturn

  protected java.util.Set<java.lang.String> doGetActiveProfiles();
    Code:
       0: aload_0
       1: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      16: ifeq          44
      19: aload_0
      20: ldc           #24                 // String spring.profiles.active
      22: invokevirtual #25                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_2
      26: aload_2
      27: invokestatic  #26                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      30: ifeq          44
      33: aload_0
      34: aload_2
      35: invokestatic  #27                 // Method org/springframework/util/StringUtils.trimAllWhitespace:(Ljava/lang/String;)Ljava/lang/String;
      38: invokestatic  #28                 // Method org/springframework/util/StringUtils.commaDelimitedListToStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      41: invokevirtual #29                 // Method setActiveProfiles:([Ljava/lang/String;)V
      44: aload_0
      45: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      48: aload_1
      49: monitorexit
      50: areturn
      51: astore_3
      52: aload_1
      53: monitorexit
      54: aload_3
      55: athrow
    Exception table:
       from    to  target type
           7    50    51   any
          51    54    51   any

  public void setActiveProfiles(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #30                 // String Profile array must not be null
       3: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      10: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      15: ifeq          49
      18: aload_0
      19: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      22: new           #33                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #35                 // String Activating profiles
      31: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokestatic  #37                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      53: dup
      54: astore_2
      55: monitorenter
      56: aload_0
      57: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      60: invokeinterface #41,  1           // InterfaceMethod java/util/Set.clear:()V
      65: aload_1
      66: astore_3
      67: aload_3
      68: arraylength
      69: istore        4
      71: iconst_0
      72: istore        5
      74: iload         5
      76: iload         4
      78: if_icmpge     111
      81: aload_3
      82: iload         5
      84: aaload
      85: astore        6
      87: aload_0
      88: aload         6
      90: invokevirtual #42                 // Method validateProfile:(Ljava/lang/String;)V
      93: aload_0
      94: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      97: aload         6
      99: invokeinterface #43,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     104: pop
     105: iinc          5, 1
     108: goto          74
     111: aload_2
     112: monitorexit
     113: goto          123
     116: astore        7
     118: aload_2
     119: monitorexit
     120: aload         7
     122: athrow
     123: return
    Exception table:
       from    to  target type
          56   113   116   any
         116   120   116   any

  public void addActiveProfile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #33                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #44                 // String Activating profile \'
      25: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #45                 // String \'
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: aload_1
      47: invokevirtual #42                 // Method validateProfile:(Ljava/lang/String;)V
      50: aload_0
      51: invokevirtual #21                 // Method doGetActiveProfiles:()Ljava/util/Set;
      54: pop
      55: aload_0
      56: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      59: dup
      60: astore_2
      61: monitorenter
      62: aload_0
      63: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      66: aload_1
      67: invokeinterface #43,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_2
      74: monitorexit
      75: goto          83
      78: astore_3
      79: aload_2
      80: monitorexit
      81: aload_3
      82: athrow
      83: return
    Exception table:
       from    to  target type
          62    75    78   any
          78    81    78   any

  public java.lang.String[] getDefaultProfiles();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method doGetDefaultProfiles:()Ljava/util/Set;
       4: invokestatic  #22                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
       7: areturn

  protected java.util.Set<java.lang.String> doGetDefaultProfiles();
    Code:
       0: aload_0
       1: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      11: aload_0
      12: invokevirtual #8                  // Method getReservedDefaultProfiles:()Ljava/util/Set;
      15: invokeinterface #47,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      20: ifeq          48
      23: aload_0
      24: ldc           #48                 // String spring.profiles.default
      26: invokevirtual #25                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
      29: astore_2
      30: aload_2
      31: invokestatic  #26                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      34: ifeq          48
      37: aload_0
      38: aload_2
      39: invokestatic  #27                 // Method org/springframework/util/StringUtils.trimAllWhitespace:(Ljava/lang/String;)Ljava/lang/String;
      42: invokestatic  #28                 // Method org/springframework/util/StringUtils.commaDelimitedListToStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      45: invokevirtual #49                 // Method setDefaultProfiles:([Ljava/lang/String;)V
      48: aload_0
      49: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      52: aload_1
      53: monitorexit
      54: areturn
      55: astore_3
      56: aload_1
      57: monitorexit
      58: aload_3
      59: athrow
    Exception table:
       from    to  target type
           7    54    55   any
          55    58    55   any

  public void setDefaultProfiles(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #30                 // String Profile array must not be null
       3: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      17: invokeinterface #41,  1           // InterfaceMethod java/util/Set.clear:()V
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     68
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload_0
      45: aload         6
      47: invokevirtual #42                 // Method validateProfile:(Ljava/lang/String;)V
      50: aload_0
      51: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      54: aload         6
      56: invokeinterface #43,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: iinc          5, 1
      65: goto          31
      68: aload_2
      69: monitorexit
      70: goto          80
      73: astore        7
      75: aload_2
      76: monitorexit
      77: aload         7
      79: athrow
      80: return
    Exception table:
       from    to  target type
          13    70    73   any
          73    77    73   any

  public boolean acceptsProfiles(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #50                 // String Must specify at least one profile
       3: invokestatic  #51                 // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     77
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload         5
      28: invokestatic  #52                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      31: ifeq          60
      34: aload         5
      36: iconst_0
      37: invokevirtual #53                 // Method java/lang/String.charAt:(I)C
      40: bipush        33
      42: if_icmpne     60
      45: aload_0
      46: aload         5
      48: iconst_1
      49: invokevirtual #54                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      52: invokevirtual #55                 // Method isProfileActive:(Ljava/lang/String;)Z
      55: ifne          71
      58: iconst_1
      59: ireturn
      60: aload_0
      61: aload         5
      63: invokevirtual #55                 // Method isProfileActive:(Ljava/lang/String;)Z
      66: ifeq          71
      69: iconst_1
      70: ireturn
      71: iinc          4, 1
      74: goto          14
      77: iconst_0
      78: ireturn

  public boolean acceptsProfiles(org.springframework.core.env.Profiles);
    Code:
       0: aload_1
       1: ldc           #56                 // String Profiles must not be null
       3: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: aload_0
       8: invokedynamic #57,  0             // InvokeDynamic #0:test:(Lorg/springframework/core/env/AbstractEnvironment;)Ljava/util/function/Predicate;
      13: invokeinterface #58,  2           // InterfaceMethod org/springframework/core/env/Profiles.matches:(Ljava/util/function/Predicate;)Z
      18: ireturn

  protected boolean isProfileActive(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method validateProfile:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #21                 // Method doGetActiveProfiles:()Ljava/util/Set;
       9: astore_2
      10: aload_2
      11: aload_1
      12: invokeinterface #59,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifne          42
      20: aload_2
      21: invokeinterface #23,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      26: ifeq          46
      29: aload_0
      30: invokevirtual #46                 // Method doGetDefaultProfiles:()Ljava/util/Set;
      33: aload_1
      34: invokeinterface #59,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  protected void validateProfile(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #26                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifne          39
       7: new           #60                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #33                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #61                 // String Invalid profile [
      20: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #62                 // String ]: must contain text
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_1
      40: iconst_0
      41: invokevirtual #53                 // Method java/lang/String.charAt:(I)C
      44: bipush        33
      46: if_icmpne     81
      49: new           #60                 // class java/lang/IllegalArgumentException
      52: dup
      53: new           #33                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #61                 // String Invalid profile [
      62: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_1
      66: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #64                 // String ]: must not begin with ! operator
      71: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  public org.springframework.core.env.MutablePropertySources getPropertySources();
    Code:
       0: aload_0
       1: getfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getSystemProperties();
    Code:
       0: invokestatic  #65                 // Method java/lang/System.getProperties:()Ljava/util/Properties;
       3: areturn
       4: astore_1
       5: new           #67                 // class org/springframework/core/env/AbstractEnvironment$1
       8: dup
       9: aload_0
      10: invokespecial #68                 // Method org/springframework/core/env/AbstractEnvironment$1."<init>":(Lorg/springframework/core/env/AbstractEnvironment;)V
      13: areturn
    Exception table:
       from    to  target type
           0     3     4   Class java/security/AccessControlException

  public java.util.Map<java.lang.String, java.lang.Object> getSystemEnvironment();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method suppressGetenvAccess:()Z
       4: ifeq          11
       7: invokestatic  #70                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: areturn
      11: invokestatic  #71                 // Method java/lang/System.getenv:()Ljava/util/Map;
      14: areturn
      15: astore_1
      16: new           #72                 // class org/springframework/core/env/AbstractEnvironment$2
      19: dup
      20: aload_0
      21: invokespecial #73                 // Method org/springframework/core/env/AbstractEnvironment$2."<init>":(Lorg/springframework/core/env/AbstractEnvironment;)V
      24: areturn
    Exception table:
       from    to  target type
          11    14    15   Class java/security/AccessControlException

  protected boolean suppressGetenvAccess();
    Code:
       0: ldc           #74                 // String spring.getenv.ignore
       2: invokestatic  #75                 // Method org/springframework/core/SpringProperties.getFlag:(Ljava/lang/String;)Z
       5: ireturn

  public void merge(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_1
       1: invokeinterface #76,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
       6: invokevirtual #77                 // Method org/springframework/core/env/MutablePropertySources.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          54
      19: aload_2
      20: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #80                 // class org/springframework/core/env/PropertySource
      28: astore_3
      29: aload_0
      30: getfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      33: aload_3
      34: invokevirtual #81                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      37: invokevirtual #82                 // Method org/springframework/core/env/MutablePropertySources.contains:(Ljava/lang/String;)Z
      40: ifne          51
      43: aload_0
      44: getfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      47: aload_3
      48: invokevirtual #83                 // Method org/springframework/core/env/MutablePropertySources.addLast:(Lorg/springframework/core/env/PropertySource;)V
      51: goto          10
      54: aload_1
      55: invokeinterface #84,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getActiveProfiles:()[Ljava/lang/String;
      60: astore_2
      61: aload_2
      62: invokestatic  #85                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      65: ifne          96
      68: aload_0
      69: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      72: dup
      73: astore_3
      74: monitorenter
      75: aload_0
      76: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      79: aload_2
      80: invokestatic  #86                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      83: pop
      84: aload_3
      85: monitorexit
      86: goto          96
      89: astore        4
      91: aload_3
      92: monitorexit
      93: aload         4
      95: athrow
      96: aload_1
      97: invokeinterface #87,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getDefaultProfiles:()[Ljava/lang/String;
     102: astore_3
     103: aload_3
     104: invokestatic  #85                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
     107: ifne          153
     110: aload_0
     111: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
     114: dup
     115: astore        4
     117: monitorenter
     118: aload_0
     119: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
     122: ldc           #19                 // String default
     124: invokeinterface #88,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     129: pop
     130: aload_0
     131: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
     134: aload_3
     135: invokestatic  #86                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
     138: pop
     139: aload         4
     141: monitorexit
     142: goto          153
     145: astore        5
     147: aload         4
     149: monitorexit
     150: aload         5
     152: athrow
     153: return
    Exception table:
       from    to  target type
          75    86    89   any
          89    93    89   any
         118   142   145   any
         145   150   145   any

  public org.springframework.core.convert.support.ConfigurableConversionService getConversionService();
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: invokeinterface #89,  1           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getConversionService:()Lorg/springframework/core/convert/support/ConfigurableConversionService;
       9: areturn

  public void setConversionService(org.springframework.core.convert.support.ConfigurableConversionService);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.setConversionService:(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V
      10: return

  public void setPlaceholderPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #91,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.setPlaceholderPrefix:(Ljava/lang/String;)V
      10: return

  public void setPlaceholderSuffix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.setPlaceholderSuffix:(Ljava/lang/String;)V
      10: return

  public void setValueSeparator(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #93,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.setValueSeparator:(Ljava/lang/String;)V
      10: return

  public void setIgnoreUnresolvableNestedPlaceholders(boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: iload_1
       5: invokeinterface #94,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.setIgnoreUnresolvableNestedPlaceholders:(Z)V
      10: return

  public void setRequiredProperties(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #95,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.setRequiredProperties:([Ljava/lang/String;)V
      10: return

  public void validateRequiredProperties() throws org.springframework.core.env.MissingRequiredPropertiesException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: invokeinterface #96,  1           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.validateRequiredProperties:()V
       9: return

  public boolean containsProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #97,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.containsProperty:(Ljava/lang/String;)Z
      10: ireturn

  public java.lang.String getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.lang.String getProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #99,  3           // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: areturn

  public <T> T getProperty(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #100,  3          // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      11: areturn

  public <T> T getProperty(java.lang.String, java.lang.Class<T>, T);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #101,  4          // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public java.lang.String getRequiredProperty(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #102,  2          // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getRequiredProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public <T> T getRequiredProperty(java.lang.String, java.lang.Class<T>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #103,  3          // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.getRequiredProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      11: areturn

  public java.lang.String resolvePlaceholders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #104,  2          // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.lang.String resolveRequiredPlaceholders(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyResolver:Lorg/springframework/core/env/ConfigurablePropertyResolver;
       4: aload_1
       5: invokeinterface #105,  2          // InterfaceMethod org/springframework/core/env/ConfigurablePropertyResolver.resolveRequiredPlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #106                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #107                // String  {activeProfiles=
      19: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #7                  // Field activeProfiles:Ljava/util/Set;
      26: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #108                // String , defaultProfiles=
      31: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #10                 // Field defaultProfiles:Ljava/util/Set;
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #109                // String , propertySources=
      43: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #13                 // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #110                // String }
      55: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn
}
