Compiled from "DataBufferDecoder.java"
public class org.springframework.core.codec.DataBufferDecoder extends org.springframework.core.codec.AbstractDataBufferDecoder<org.springframework.core.io.buffer.DataBuffer> {
  public org.springframework.core.codec.DataBufferDecoder();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      10: aastore
      11: invokespecial #3                  // Method org/springframework/core/codec/AbstractDataBufferDecoder."<init>":([Lorg/springframework/util/MimeType;)V
      14: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: ldc           #4                  // class org/springframework/core/io/buffer/DataBuffer
       2: aload_1
       3: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          25
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #7                  // Method org/springframework/core/codec/AbstractDataBufferDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: areturn

  public org.springframework.core.io.buffer.DataBuffer decode(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          58
      12: aload_0
      13: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #11                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      23: aload         4
      25: invokestatic  #13                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #15                 // String Read
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokeinterface #16,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
      42: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #18                 // String  bytes
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      58: aload_1
      59: areturn

  public java.lang.Object decode(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map) throws org.springframework.core.codec.DecodingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #21                 // Method decode:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
       9: areturn
}
