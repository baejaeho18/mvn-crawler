Compiled from "ServerHttpSecurity.java"
public class org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec {
  private org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher serverWebExchangeMatcher;

  private org.springframework.security.web.PortMapper portMapper;

  final org.springframework.security.config.web.server.ServerHttpSecurity this$0;

  public org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec(org.springframework.security.config.web.server.ServerHttpSecurity);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/security/config/web/server/ServerHttpSecurity;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec httpsRedirectWhen(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher...);
    Code:
       0: aload_0
       1: new           #3                  // class org/springframework/security/web/server/util/matcher/OrServerWebExchangeMatcher
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method org/springframework/security/web/server/util/matcher/OrServerWebExchangeMatcher."<init>":([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
       9: putfield      #5                  // Field serverWebExchangeMatcher:Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
      12: aload_0
      13: areturn

  public org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec httpsRedirectWhen(java.util.function.Function<org.springframework.web.server.ServerWebExchange, java.lang.Boolean>);
    Code:
       0: aload_1
       1: invokedynamic #6,  0              // InvokeDynamic #0:matches:(Ljava/util/function/Function;)Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
       6: astore_2
       7: aload_0
       8: iconst_1
       9: anewarray     #7                  // class org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher
      12: dup
      13: iconst_0
      14: aload_2
      15: aastore
      16: invokevirtual #8                  // Method httpsRedirectWhen:([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpsRedirectSpec;
      19: areturn

  public org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec portMapper(org.springframework.security.web.PortMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
       5: aload_0
       6: areturn

  protected void configure(org.springframework.security.config.web.server.ServerHttpSecurity);
    Code:
       0: new           #10                 // class org/springframework/security/web/server/transport/HttpsRedirectWebFilter
       3: dup
       4: invokespecial #11                 // Method org/springframework/security/web/server/transport/HttpsRedirectWebFilter."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field serverWebExchangeMatcher:Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
      12: ifnull        23
      15: aload_2
      16: aload_0
      17: getfield      #5                  // Field serverWebExchangeMatcher:Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
      20: invokevirtual #12                 // Method org/springframework/security/web/server/transport/HttpsRedirectWebFilter.setRequiresHttpsRedirectMatcher:(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
      23: aload_0
      24: getfield      #9                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      27: ifnull        38
      30: aload_2
      31: aload_0
      32: getfield      #9                  // Field portMapper:Lorg/springframework/security/web/PortMapper;
      35: invokevirtual #13                 // Method org/springframework/security/web/server/transport/HttpsRedirectWebFilter.setPortMapper:(Lorg/springframework/security/web/PortMapper;)V
      38: aload_1
      39: aload_2
      40: getstatic     #14                 // Field org/springframework/security/config/web/server/SecurityWebFiltersOrder.HTTPS_REDIRECT:Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;
      43: invokevirtual #15                 // Method org/springframework/security/config/web/server/ServerHttpSecurity.addFilterAt:(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
      46: pop
      47: return

  public org.springframework.security.config.web.server.ServerHttpSecurity and();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/security/config/web/server/ServerHttpSecurity;
       4: areturn

  private static reactor.core.publisher.Mono lambda$httpsRedirectWhen$0(java.util.function.Function, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #16,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #17                 // class java/lang/Boolean
      10: invokevirtual #18                 // Method java/lang/Boolean.booleanValue:()Z
      13: ifeq          22
      16: invokestatic  #19                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.match:()Lreactor/core/publisher/Mono;
      19: goto          25
      22: invokestatic  #20                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.notMatch:()Lreactor/core/publisher/Mono;
      25: areturn
}
