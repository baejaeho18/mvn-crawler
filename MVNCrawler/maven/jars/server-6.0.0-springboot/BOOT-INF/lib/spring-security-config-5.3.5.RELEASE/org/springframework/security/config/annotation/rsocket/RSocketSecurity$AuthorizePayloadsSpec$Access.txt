Compiled from "RSocketSecurity.java"
public class org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec$Access {
  private final org.springframework.security.rsocket.util.matcher.PayloadExchangeMatcher matcher;

  final org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec this$1;

  private org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec$Access(org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec, org.springframework.security.rsocket.util.matcher.PayloadExchangeMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$1:Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field matcher:Lorg/springframework/security/rsocket/util/matcher/PayloadExchangeMatcher;
      14: return

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec authenticated();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method org/springframework/security/authorization/AuthenticatedReactiveAuthorizationManager.authenticated:()Lorg/springframework/security/authorization/AuthenticatedReactiveAuthorizationManager;
       4: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       7: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec hasAuthority(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method org/springframework/security/authorization/AuthorityReactiveAuthorizationManager.hasAuthority:(Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorityReactiveAuthorizationManager;
       5: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       8: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec hasRole(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method org/springframework/security/authorization/AuthorityReactiveAuthorizationManager.hasRole:(Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorityReactiveAuthorizationManager;
       5: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       8: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec hasAnyRole(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method org/springframework/security/authorization/AuthorityReactiveAuthorizationManager.hasAnyRole:([Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorityReactiveAuthorizationManager;
       5: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       8: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec permitAll();
    Code:
       0: aload_0
       1: invokedynamic #10,  0             // InvokeDynamic #0:check:()Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
       6: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       9: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec hasAnyAuthority(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method org/springframework/security/authorization/AuthorityReactiveAuthorizationManager.hasAnyAuthority:([Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorityReactiveAuthorizationManager;
       5: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       8: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec access(org.springframework.security.authorization.ReactiveAuthorizationManager<org.springframework.security.rsocket.util.matcher.PayloadExchangeAuthorizationContext>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$1:Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       4: invokestatic  #12                 // Method org/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec.access$700:(Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;)Lorg/springframework/security/rsocket/authorization/PayloadExchangeMatcherReactiveAuthorizationManager$Builder;
       7: new           #13                 // class org/springframework/security/rsocket/util/matcher/PayloadExchangeMatcherEntry
      10: dup
      11: aload_0
      12: getfield      #4                  // Field matcher:Lorg/springframework/security/rsocket/util/matcher/PayloadExchangeMatcher;
      15: aload_1
      16: invokespecial #14                 // Method org/springframework/security/rsocket/util/matcher/PayloadExchangeMatcherEntry."<init>":(Lorg/springframework/security/rsocket/util/matcher/PayloadExchangeMatcher;Ljava/lang/Object;)V
      19: invokevirtual #15                 // Method org/springframework/security/rsocket/authorization/PayloadExchangeMatcherReactiveAuthorizationManager$Builder.add:(Lorg/springframework/security/rsocket/util/matcher/PayloadExchangeMatcherEntry;)Lorg/springframework/security/rsocket/authorization/PayloadExchangeMatcherReactiveAuthorizationManager$Builder;
      22: pop
      23: aload_0
      24: getfield      #2                  // Field this$1:Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
      27: areturn

  public org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec denyAll();
    Code:
       0: aload_0
       1: invokedynamic #16,  0             // InvokeDynamic #1:check:()Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
       6: invokevirtual #6                  // Method access:(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
       9: areturn

  private static reactor.core.publisher.Mono lambda$denyAll$1(reactor.core.publisher.Mono, org.springframework.security.rsocket.util.matcher.PayloadExchangeAuthorizationContext);
    Code:
       0: new           #17                 // class org/springframework/security/authorization/AuthorizationDecision
       3: dup
       4: iconst_0
       5: invokespecial #18                 // Method org/springframework/security/authorization/AuthorizationDecision."<init>":(Z)V
       8: invokestatic  #19                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      11: areturn

  private static reactor.core.publisher.Mono lambda$permitAll$0(reactor.core.publisher.Mono, org.springframework.security.rsocket.util.matcher.PayloadExchangeAuthorizationContext);
    Code:
       0: new           #17                 // class org/springframework/security/authorization/AuthorizationDecision
       3: dup
       4: iconst_1
       5: invokespecial #18                 // Method org/springframework/security/authorization/AuthorizationDecision."<init>":(Z)V
       8: invokestatic  #19                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      11: areturn

  org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec$Access(org.springframework.security.config.annotation.rsocket.RSocketSecurity$AuthorizePayloadsSpec, org.springframework.security.rsocket.util.matcher.PayloadExchangeMatcher, org.springframework.security.config.annotation.rsocket.RSocketSecurity$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;Lorg/springframework/security/rsocket/util/matcher/PayloadExchangeMatcher;)V
       6: return
}
