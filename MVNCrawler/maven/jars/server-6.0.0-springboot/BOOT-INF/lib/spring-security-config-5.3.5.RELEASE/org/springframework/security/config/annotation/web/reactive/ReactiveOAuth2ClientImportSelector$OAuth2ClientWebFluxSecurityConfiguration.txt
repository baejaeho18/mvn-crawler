Compiled from "ReactiveOAuth2ClientImportSelector.java"
class org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector$OAuth2ClientWebFluxSecurityConfiguration implements org.springframework.web.reactive.config.WebFluxConfigurer {
  private org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository clientRegistrationRepository;

  private org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository authorizedClientRepository;

  private org.springframework.security.oauth2.client.ReactiveOAuth2AuthorizedClientService authorizedClientService;

  org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector$OAuth2ClientWebFluxSecurityConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void configureArgumentResolvers(org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field authorizedClientRepository:Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
       4: ifnull        73
       7: aload_0
       8: getfield      #3                  // Field clientRegistrationRepository:Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;
      11: ifnull        73
      14: invokestatic  #4                  // Method org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder.builder:()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder;
      17: invokevirtual #5                  // Method org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder.authorizationCode:()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder;
      20: invokevirtual #6                  // Method org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder.refreshToken:()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder;
      23: invokevirtual #7                  // Method org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder.clientCredentials:()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder;
      26: invokevirtual #8                  // Method org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder.password:()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder;
      29: invokevirtual #9                  // Method org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProviderBuilder.build:()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProvider;
      32: astore_2
      33: new           #10                 // class org/springframework/security/oauth2/client/web/DefaultReactiveOAuth2AuthorizedClientManager
      36: dup
      37: aload_0
      38: getfield      #3                  // Field clientRegistrationRepository:Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;
      41: aload_0
      42: invokespecial #11                 // Method getAuthorizedClientRepository:()Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
      45: invokespecial #12                 // Method org/springframework/security/oauth2/client/web/DefaultReactiveOAuth2AuthorizedClientManager."<init>":(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;)V
      48: astore_3
      49: aload_3
      50: aload_2
      51: invokevirtual #13                 // Method org/springframework/security/oauth2/client/web/DefaultReactiveOAuth2AuthorizedClientManager.setAuthorizedClientProvider:(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientProvider;)V
      54: aload_1
      55: iconst_1
      56: anewarray     #14                 // class org/springframework/web/reactive/result/method/HandlerMethodArgumentResolver
      59: dup
      60: iconst_0
      61: new           #15                 // class org/springframework/security/oauth2/client/web/reactive/result/method/annotation/OAuth2AuthorizedClientArgumentResolver
      64: dup
      65: aload_3
      66: invokespecial #16                 // Method org/springframework/security/oauth2/client/web/reactive/result/method/annotation/OAuth2AuthorizedClientArgumentResolver."<init>":(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientManager;)V
      69: aastore
      70: invokevirtual #17                 // Method org/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer.addCustomResolver:([Lorg/springframework/web/reactive/result/method/HandlerMethodArgumentResolver;)V
      73: return

  public void setClientRegistrationRepository(org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field clientRegistrationRepository:Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;
       5: return

  public void setAuthorizedClientRepository(org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field authorizedClientRepository:Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
       5: return

  public void setAuthorizedClientService(java.util.List<org.springframework.security.oauth2.client.ReactiveOAuth2AuthorizedClientService>);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmpne     24
      10: aload_0
      11: aload_1
      12: iconst_0
      13: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      18: checkcast     #20                 // class org/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService
      21: putfield      #21                 // Field authorizedClientService:Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;
      24: return

  private org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository getAuthorizedClientRepository();
    Code:
       0: aload_0
       1: getfield      #2                  // Field authorizedClientRepository:Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
       4: ifnull        12
       7: aload_0
       8: getfield      #2                  // Field authorizedClientRepository:Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
      11: areturn
      12: aload_0
      13: getfield      #21                 // Field authorizedClientService:Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;
      16: ifnull        31
      19: new           #22                 // class org/springframework/security/oauth2/client/web/server/AuthenticatedPrincipalServerOAuth2AuthorizedClientRepository
      22: dup
      23: aload_0
      24: getfield      #21                 // Field authorizedClientService:Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;
      27: invokespecial #23                 // Method org/springframework/security/oauth2/client/web/server/AuthenticatedPrincipalServerOAuth2AuthorizedClientRepository."<init>":(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;)V
      30: areturn
      31: aconst_null
      32: areturn
}
