Compiled from "DefaultFilterChainValidator.java"
public class org.springframework.security.config.http.DefaultFilterChainValidator implements org.springframework.security.web.FilterChainProxy$FilterChainValidator {
  private final org.apache.commons.logging.Log logger;

  public org.springframework.security.config.http.DefaultFilterChainValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public void validate(org.springframework.security.web.FilterChainProxy);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/security/web/FilterChainProxy.getFilterChains:()Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_2
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class org/springframework/security/web/SecurityFilterChain
      28: astore_3
      29: aload_0
      30: aload_1
      31: aload_3
      32: invokeinterface #10,  1           // InterfaceMethod org/springframework/security/web/SecurityFilterChain.getFilters:()Ljava/util/List;
      37: invokespecial #11                 // Method checkLoginPageIsntProtected:(Lorg/springframework/security/web/FilterChainProxy;Ljava/util/List;)V
      40: aload_0
      41: aload_3
      42: invokeinterface #10,  1           // InterfaceMethod org/springframework/security/web/SecurityFilterChain.getFilters:()Ljava/util/List;
      47: invokespecial #12                 // Method checkFilterStack:(Ljava/util/List;)V
      50: goto          10
      53: aload_0
      54: new           #13                 // class java/util/ArrayList
      57: dup
      58: aload_1
      59: invokevirtual #5                  // Method org/springframework/security/web/FilterChainProxy.getFilterChains:()Ljava/util/List;
      62: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      65: invokespecial #15                 // Method checkPathOrder:(Ljava/util/List;)V
      68: aload_0
      69: new           #13                 // class java/util/ArrayList
      72: dup
      73: aload_1
      74: invokevirtual #5                  // Method org/springframework/security/web/FilterChainProxy.getFilterChains:()Ljava/util/List;
      77: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      80: invokespecial #16                 // Method checkForDuplicateMatchers:(Ljava/util/List;)V
      83: return

  private void checkPathOrder(java.util.List<org.springframework.security.web.SecurityFilterChain>);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          61
      16: aload_2
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #17                 // class org/springframework/security/web/DefaultSecurityFilterChain
      25: invokevirtual #18                 // Method org/springframework/security/web/DefaultSecurityFilterChain.getRequestMatcher:()Lorg/springframework/security/web/util/matcher/RequestMatcher;
      28: astore_3
      29: getstatic     #19                 // Field org/springframework/security/web/util/matcher/AnyRequestMatcher.INSTANCE:Lorg/springframework/security/web/util/matcher/RequestMatcher;
      32: aload_3
      33: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          58
      39: aload_2
      40: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          58
      48: new           #21                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #22                 // String A universal match pattern (\'/**\') is defined  before other patterns in the filter chain, causing them to be ignored. Please check the ordering in your <security:http> namespace or FilterChainProxy bean configuration
      54: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: goto          7
      61: return

  private void checkForDuplicateMatchers(java.util.List<org.springframework.security.web.SecurityFilterChain>);
    Code:
       0: aload_1
       1: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmple     107
      10: aload_1
      11: iconst_0
      12: invokeinterface #25,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      17: checkcast     #17                 // class org/springframework/security/web/DefaultSecurityFilterChain
      20: astore_2
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          104
      37: aload_3
      38: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #9                  // class org/springframework/security/web/SecurityFilterChain
      46: astore        4
      48: aload_2
      49: invokevirtual #18                 // Method org/springframework/security/web/DefaultSecurityFilterChain.getRequestMatcher:()Lorg/springframework/security/web/util/matcher/RequestMatcher;
      52: aload         4
      54: checkcast     #17                 // class org/springframework/security/web/DefaultSecurityFilterChain
      57: invokevirtual #18                 // Method org/springframework/security/web/DefaultSecurityFilterChain.getRequestMatcher:()Lorg/springframework/security/web/util/matcher/RequestMatcher;
      60: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          101
      66: new           #21                 // class java/lang/IllegalArgumentException
      69: dup
      70: new           #26                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #28                 // String The FilterChainProxy contains two filter chains using the matcher
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #18                 // Method org/springframework/security/web/DefaultSecurityFilterChain.getRequestMatcher:()Lorg/springframework/security/web/util/matcher/RequestMatcher;
      86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: ldc           #31                 // String . If you are using multiple <http> namespace elements, you must use a \'pattern\' attribute to define the request patterns to which they apply.
      91: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: goto          28
     104: goto          0
     107: return

  private <F extends javax.servlet.Filter> F getFilter(java.lang.Class<F>, java.util.List<javax.servlet.Filter>);
    Code:
       0: aload_2
       1: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          45
      16: aload_3
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #33                 // class javax/servlet/Filter
      25: astore        4
      27: aload_1
      28: aload         4
      30: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #34                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      36: ifeq          42
      39: aload         4
      41: areturn
      42: goto          7
      45: aconst_null
      46: areturn

  private void checkFilterStack(java.util.List<javax.servlet.Filter>);
    Code:
       0: aload_0
       1: ldc           #35                 // class org/springframework/security/web/context/SecurityContextPersistenceFilter
       3: aload_1
       4: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
       7: aload_0
       8: ldc           #37                 // class org/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter
      10: aload_1
      11: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      14: aload_0
      15: ldc           #38                 // class org/springframework/security/web/session/SessionManagementFilter
      17: aload_1
      18: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      21: aload_0
      22: ldc           #39                 // class org/springframework/security/web/authentication/www/BasicAuthenticationFilter
      24: aload_1
      25: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      28: aload_0
      29: ldc           #40                 // class org/springframework/security/web/servletapi/SecurityContextHolderAwareRequestFilter
      31: aload_1
      32: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      35: aload_0
      36: ldc           #41                 // class org/springframework/security/web/jaasapi/JaasApiIntegrationFilter
      38: aload_1
      39: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      42: aload_0
      43: ldc           #42                 // class org/springframework/security/web/access/ExceptionTranslationFilter
      45: aload_1
      46: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      49: aload_0
      50: ldc           #43                 // class org/springframework/security/web/access/intercept/FilterSecurityInterceptor
      52: aload_1
      53: invokespecial #36                 // Method checkForDuplicates:(Ljava/lang/Class;Ljava/util/List;)V
      56: return

  private void checkForDuplicates(java.lang.Class<? extends javax.servlet.Filter>, java.util.List<javax.servlet.Filter>);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_2
       4: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
       9: if_icmpge     140
      12: aload_2
      13: iload_3
      14: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #33                 // class javax/servlet/Filter
      22: astore        4
      24: aload_1
      25: aload         4
      27: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #34                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      33: ifeq          134
      36: iload_3
      37: iconst_1
      38: iadd
      39: istore        5
      41: iload         5
      43: aload_2
      44: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      49: if_icmpge     134
      52: aload_2
      53: iload         5
      55: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      60: checkcast     #33                 // class javax/servlet/Filter
      63: astore        6
      65: aload_1
      66: aload         6
      68: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      71: invokevirtual #34                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      74: ifeq          128
      77: aload_0
      78: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      81: new           #26                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #45                 // String Possible error: Filters at position
      90: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: iload_3
      94: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #47                 // String  and
      99: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: iload         5
     104: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     107: ldc           #48                 // String  are both instances of
     109: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
     116: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     127: return
     128: iinc          5, 1
     131: goto          41
     134: iinc          3, 1
     137: goto          2
     140: return

  private void checkLoginPageIsntProtected(org.springframework.security.web.FilterChainProxy, java.util.List<javax.servlet.Filter>);
    Code:
       0: aload_0
       1: ldc           #42                 // class org/springframework/security/web/access/ExceptionTranslationFilter
       3: aload_2
       4: invokespecial #51                 // Method getFilter:(Ljava/lang/Class;Ljava/util/List;)Ljavax/servlet/Filter;
       7: checkcast     #42                 // class org/springframework/security/web/access/ExceptionTranslationFilter
      10: astore_3
      11: aload_3
      12: ifnull        25
      15: aload_3
      16: invokevirtual #52                 // Method org/springframework/security/web/access/ExceptionTranslationFilter.getAuthenticationEntryPoint:()Lorg/springframework/security/web/AuthenticationEntryPoint;
      19: instanceof    #53                 // class org/springframework/security/web/authentication/LoginUrlAuthenticationEntryPoint
      22: ifne          26
      25: return
      26: aload_3
      27: invokevirtual #52                 // Method org/springframework/security/web/access/ExceptionTranslationFilter.getAuthenticationEntryPoint:()Lorg/springframework/security/web/AuthenticationEntryPoint;
      30: checkcast     #53                 // class org/springframework/security/web/authentication/LoginUrlAuthenticationEntryPoint
      33: invokevirtual #54                 // Method org/springframework/security/web/authentication/LoginUrlAuthenticationEntryPoint.getLoginFormUrl:()Ljava/lang/String;
      36: astore        4
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: new           #26                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #55                 // String Checking whether login URL \'
      51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload         4
      56: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #56                 // String \' is accessible with your configuration
      61: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      72: new           #58                 // class org/springframework/security/web/FilterInvocation
      75: dup
      76: aload         4
      78: ldc           #59                 // String POST
      80: invokespecial #60                 // Method org/springframework/security/web/FilterInvocation."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      83: astore        5
      85: aconst_null
      86: astore        6
      88: aload_1
      89: aload         4
      91: invokevirtual #61                 // Method org/springframework/security/web/FilterChainProxy.getFilters:(Ljava/lang/String;)Ljava/util/List;
      94: astore        6
      96: goto          112
      99: astore        7
     101: aload_0
     102: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     105: ldc           #63                 // String Failed to obtain filter chain information for the login page. Unable to complete check.
     107: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     112: aload         6
     114: ifnull        127
     117: aload         6
     119: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     124: ifeq          139
     127: aload_0
     128: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     131: ldc           #65                 // String Filter chain is empty for the login page
     133: invokeinterface #66,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     138: return
     139: aload_0
     140: ldc           #67                 // class org/springframework/security/web/authentication/ui/DefaultLoginPageGeneratingFilter
     142: aload         6
     144: invokespecial #51                 // Method getFilter:(Ljava/lang/Class;Ljava/util/List;)Ljavax/servlet/Filter;
     147: ifnull        162
     150: aload_0
     151: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     154: ldc           #68                 // String Default generated login page is in use
     156: invokeinterface #66,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     161: return
     162: aload_0
     163: ldc           #43                 // class org/springframework/security/web/access/intercept/FilterSecurityInterceptor
     165: aload         6
     167: invokespecial #51                 // Method getFilter:(Ljava/lang/Class;Ljava/util/List;)Ljavax/servlet/Filter;
     170: checkcast     #43                 // class org/springframework/security/web/access/intercept/FilterSecurityInterceptor
     173: astore        7
     175: aload         7
     177: invokevirtual #69                 // Method org/springframework/security/web/access/intercept/FilterSecurityInterceptor.getSecurityMetadataSource:()Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
     180: astore        8
     182: aload         8
     184: aload         5
     186: invokeinterface #70,  2           // InterfaceMethod org/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource.getAttributes:(Ljava/lang/Object;)Ljava/util/Collection;
     191: astore        9
     193: aload         9
     195: ifnonnull     229
     198: aload_0
     199: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     202: ldc           #71                 // String No access attributes defined for login page URL
     204: invokeinterface #66,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     209: aload         7
     211: invokevirtual #72                 // Method org/springframework/security/web/access/intercept/FilterSecurityInterceptor.isRejectPublicInvocations:()Z
     214: ifeq          228
     217: aload_0
     218: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     221: ldc           #73                 // String FilterSecurityInterceptor is configured to reject public invocations. Your login page may not be accessible.
     223: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     228: return
     229: aload_0
     230: ldc           #74                 // class org/springframework/security/web/authentication/AnonymousAuthenticationFilter
     232: aload         6
     234: invokespecial #51                 // Method getFilter:(Ljava/lang/Class;Ljava/util/List;)Ljavax/servlet/Filter;
     237: checkcast     #74                 // class org/springframework/security/web/authentication/AnonymousAuthenticationFilter
     240: astore        10
     242: aload         10
     244: ifnonnull     259
     247: aload_0
     248: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     251: ldc           #75                 // String The login page is being protected by the filter chain, but you don\'t appear to have anonymous authentication enabled. This is almost certainly an error.
     253: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     258: return
     259: new           #76                 // class org/springframework/security/authentication/AnonymousAuthenticationToken
     262: dup
     263: ldc           #77                 // String key
     265: aload         10
     267: invokevirtual #78                 // Method org/springframework/security/web/authentication/AnonymousAuthenticationFilter.getPrincipal:()Ljava/lang/Object;
     270: aload         10
     272: invokevirtual #79                 // Method org/springframework/security/web/authentication/AnonymousAuthenticationFilter.getAuthorities:()Ljava/util/List;
     275: invokespecial #80                 // Method org/springframework/security/authentication/AnonymousAuthenticationToken."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Collection;)V
     278: astore        11
     280: aload         7
     282: invokevirtual #81                 // Method org/springframework/security/web/access/intercept/FilterSecurityInterceptor.getAccessDecisionManager:()Lorg/springframework/security/access/AccessDecisionManager;
     285: aload         11
     287: aload         5
     289: aload         9
     291: invokeinterface #82,  4           // InterfaceMethod org/springframework/security/access/AccessDecisionManager.decide:(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)V
     296: goto          353
     299: astore        12
     301: aload_0
     302: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     305: new           #26                 // class java/lang/StringBuilder
     308: dup
     309: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     312: ldc           #84                 // String Anonymous access to the login page doesn\'t appear to be enabled. This is almost certainly an error. Please check your configuration allows unauthenticated access to the configured login page. (Simulated access was rejected:
     314: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: aload         12
     319: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     322: ldc           #85                 // String )
     324: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     327: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     330: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     335: goto          353
     338: astore        12
     340: aload_0
     341: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     344: ldc           #86                 // String Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.
     346: aload         12
     348: invokeinterface #87,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     353: return
    Exception table:
       from    to  target type
          88    96    99   Class java/lang/Exception
         280   296   299   Class org/springframework/security/access/AccessDeniedException
         280   296   338   Class java/lang/Exception
}
