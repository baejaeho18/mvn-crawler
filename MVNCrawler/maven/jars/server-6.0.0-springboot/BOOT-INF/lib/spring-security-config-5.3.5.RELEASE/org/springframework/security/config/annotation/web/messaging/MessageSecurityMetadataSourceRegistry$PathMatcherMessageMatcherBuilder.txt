Compiled from "MessageSecurityMetadataSourceRegistry.java"
class org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry$PathMatcherMessageMatcherBuilder implements org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry$MatcherBuilder {
  private final java.lang.String pattern;

  private final org.springframework.messaging.simp.SimpMessageType type;

  final org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry this$0;

  private org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry$PathMatcherMessageMatcherBuilder(org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry, java.lang.String, org.springframework.messaging.simp.SimpMessageType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field pattern:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field type:Lorg/springframework/messaging/simp/SimpMessageType;
      19: return

  public org.springframework.security.messaging.util.matcher.MessageMatcher<?> build();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:Lorg/springframework/messaging/simp/SimpMessageType;
       4: ifnonnull     26
       7: new           #6                  // class org/springframework/security/messaging/util/matcher/SimpDestinationMessageMatcher
      10: dup
      11: aload_0
      12: getfield      #4                  // Field pattern:Ljava/lang/String;
      15: aload_0
      16: getfield      #2                  // Field this$0:Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
      19: invokestatic  #7                  // Method org/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry.access$800:(Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$DelegatingPathMatcher;
      22: invokespecial #8                  // Method org/springframework/security/messaging/util/matcher/SimpDestinationMessageMatcher."<init>":(Ljava/lang/String;Lorg/springframework/util/PathMatcher;)V
      25: areturn
      26: getstatic     #9                  // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
      29: aload_0
      30: getfield      #5                  // Field type:Lorg/springframework/messaging/simp/SimpMessageType;
      33: if_acmpne     51
      36: aload_0
      37: getfield      #4                  // Field pattern:Ljava/lang/String;
      40: aload_0
      41: getfield      #2                  // Field this$0:Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
      44: invokestatic  #7                  // Method org/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry.access$800:(Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$DelegatingPathMatcher;
      47: invokestatic  #10                 // Method org/springframework/security/messaging/util/matcher/SimpDestinationMessageMatcher.createMessageMatcher:(Ljava/lang/String;Lorg/springframework/util/PathMatcher;)Lorg/springframework/security/messaging/util/matcher/SimpDestinationMessageMatcher;
      50: areturn
      51: getstatic     #11                 // Field org/springframework/messaging/simp/SimpMessageType.SUBSCRIBE:Lorg/springframework/messaging/simp/SimpMessageType;
      54: aload_0
      55: getfield      #5                  // Field type:Lorg/springframework/messaging/simp/SimpMessageType;
      58: if_acmpne     76
      61: aload_0
      62: getfield      #4                  // Field pattern:Ljava/lang/String;
      65: aload_0
      66: getfield      #2                  // Field this$0:Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
      69: invokestatic  #7                  // Method org/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry.access$800:(Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$DelegatingPathMatcher;
      72: invokestatic  #12                 // Method org/springframework/security/messaging/util/matcher/SimpDestinationMessageMatcher.createSubscribeMatcher:(Ljava/lang/String;Lorg/springframework/util/PathMatcher;)Lorg/springframework/security/messaging/util/matcher/SimpDestinationMessageMatcher;
      75: areturn
      76: new           #13                 // class java/lang/IllegalStateException
      79: dup
      80: new           #14                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      87: aload_0
      88: getfield      #5                  // Field type:Lorg/springframework/messaging/simp/SimpMessageType;
      91: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #17                 // String  is not supported since it does not have a destination
      96: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     105: athrow

  org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry$PathMatcherMessageMatcherBuilder(org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry, java.lang.String, org.springframework.messaging.simp.SimpMessageType, org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method "<init>":(Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;Ljava/lang/String;Lorg/springframework/messaging/simp/SimpMessageType;)V
       7: return
}
