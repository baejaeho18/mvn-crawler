Compiled from "RequiresChannelDsl.kt"
public final class org.springframework.security.config.web.servlet.RequiresChannelDsl extends org.springframework.security.config.web.servlet.AbstractRequestMatcherDsl {
  private final java.util.List<org.springframework.security.config.web.servlet.AbstractRequestMatcherDsl$AuthorizationRule> channelSecurityRules;

  private final java.lang.String HANDLER_MAPPING_INTROSPECTOR;

  private final boolean MVC_PRESENT;

  private java.util.List<? extends org.springframework.security.web.access.channel.ChannelProcessor> channelProcessors;

  private final java.lang.String requiresSecure;

  private final java.lang.String requiresInsecure;

  public final java.util.List<org.springframework.security.web.access.channel.ChannelProcessor> getChannelProcessors();
    Code:
       0: aload_0
       1: getfield      #21                 // Field channelProcessors:Ljava/util/List;
       4: areturn

  public final void setChannelProcessors(java.util.List<? extends org.springframework.security.web.access.channel.ChannelProcessor>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field channelProcessors:Ljava/util/List;
       5: return

  public final void secure(org.springframework.security.web.util.matcher.RequestMatcher, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String matches
       3: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #40                 // String attribute
       9: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #42                 // Field channelSecurityRules:Ljava/util/List;
      16: new           #44                 // class org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule
      19: dup
      20: aload_1
      21: aload_2
      22: invokespecial #47                 // Method org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule."<init>":(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
      25: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: return

  public static void secure$default(org.springframework.security.config.web.servlet.RequiresChannelDsl, org.springframework.security.web.util.matcher.RequestMatcher, java.lang.String, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          16
       6: getstatic     #61                 // Field org/springframework/security/web/util/matcher/AnyRequestMatcher.INSTANCE:Lorg/springframework/security/web/util/matcher/RequestMatcher;
       9: dup
      10: ldc           #63                 // String AnyRequestMatcher.INSTANCE
      12: invokestatic  #66                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: astore_1
      16: iload_3
      17: iconst_2
      18: iand
      19: ifeq          25
      22: ldc           #68                 // String REQUIRES_SECURE_CHANNEL
      24: astore_2
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokevirtual #70                 // Method secure:(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
      31: return

  public final void secure(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #73                 // String pattern
       3: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #40                 // String attribute
       9: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #75                 // Field MVC_PRESENT:Z
      16: ifeq          45
      19: aload_0
      20: getfield      #42                 // Field channelSecurityRules:Ljava/util/List;
      23: new           #77                 // class org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule
      26: dup
      27: aload_1
      28: getstatic     #83                 // Field org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType.MVC:Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
      31: aconst_null
      32: aload_2
      33: invokespecial #86                 // Method org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule."<init>":(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)V
      36: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: goto          68
      45: aload_0
      46: getfield      #42                 // Field channelSecurityRules:Ljava/util/List;
      49: new           #77                 // class org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule
      52: dup
      53: aload_1
      54: getstatic     #89                 // Field org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType.ANT:Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
      57: aconst_null
      58: aload_2
      59: invokespecial #86                 // Method org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule."<init>":(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)V
      62: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: return

  public static void secure$default(org.springframework.security.config.web.servlet.RequiresChannelDsl, java.lang.String, java.lang.String, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          9
       6: ldc           #68                 // String REQUIRES_SECURE_CHANNEL
       8: astore_2
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #92                 // Method secure:(Ljava/lang/String;Ljava/lang/String;)V
      15: return

  public final void secure(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #73                 // String pattern
       3: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #95                 // String servletPath
       9: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #40                 // String attribute
      15: invokestatic  #38                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: getfield      #75                 // Field MVC_PRESENT:Z
      22: ifeq          51
      25: aload_0
      26: getfield      #42                 // Field channelSecurityRules:Ljava/util/List;
      29: new           #77                 // class org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule
      32: dup
      33: aload_1
      34: getstatic     #83                 // Field org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType.MVC:Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
      37: aload_2
      38: aload_3
      39: invokespecial #86                 // Method org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule."<init>":(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)V
      42: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: goto          74
      51: aload_0
      52: getfield      #42                 // Field channelSecurityRules:Ljava/util/List;
      55: new           #77                 // class org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule
      58: dup
      59: aload_1
      60: getstatic     #89                 // Field org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType.ANT:Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
      63: aload_2
      64: aload_3
      65: invokespecial #86                 // Method org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule."<init>":(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)V
      68: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: return

  public static void secure$default(org.springframework.security.config.web.servlet.RequiresChannelDsl, java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         4
       2: iconst_4
       3: iand
       4: ifeq          10
       7: ldc           #68                 // String REQUIRES_SECURE_CHANNEL
       9: astore_3
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #98                 // Method secure:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      17: return

  public final java.lang.String getRequiresSecure();
    Code:
       0: aload_0
       1: getfield      #103                // Field requiresSecure:Ljava/lang/String;
       4: areturn

  public final java.lang.String getRequiresInsecure();
    Code:
       0: aload_0
       1: getfield      #109                // Field requiresInsecure:Ljava/lang/String;
       4: areturn

  public final kotlin.jvm.functions.Function1<org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer<org.springframework.security.config.annotation.web.builders.HttpSecurity>.ChannelRequestMatcherRegistry, kotlin.Unit> get$spring_security_config();
    Code:
       0: new           #114                // class org/springframework/security/config/web/servlet/RequiresChannelDsl$get$1
       3: dup
       4: aload_0
       5: invokespecial #117                // Method org/springframework/security/config/web/servlet/RequiresChannelDsl$get$1."<init>":(Lorg/springframework/security/config/web/servlet/RequiresChannelDsl;)V
       8: checkcast     #119                // class kotlin/jvm/functions/Function1
      11: areturn

  public org.springframework.security.config.web.servlet.RequiresChannelDsl();
    Code:
       0: aload_0
       1: invokespecial #122                // Method org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl."<init>":()V
       4: aload_0
       5: astore_2
       6: iconst_0
       7: istore_1
       8: new           #124                // class java/util/ArrayList
      11: dup
      12: invokespecial #125                // Method java/util/ArrayList."<init>":()V
      15: checkcast     #49                 // class java/util/List
      18: astore_3
      19: aload_2
      20: aload_3
      21: putfield      #42                 // Field channelSecurityRules:Ljava/util/List;
      24: aload_0
      25: ldc           #11                 // String org.springframework.web.servlet.handler.HandlerMappingIntrospector
      27: putfield      #127                // Field HANDLER_MAPPING_INTROSPECTOR:Ljava/lang/String;
      30: aload_0
      31: aload_0
      32: getfield      #127                // Field HANDLER_MAPPING_INTROSPECTOR:Ljava/lang/String;
      35: ldc           #2                  // class org/springframework/security/config/web/servlet/RequiresChannelDsl
      37: invokevirtual #133                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      40: invokestatic  #139                // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      43: putfield      #75                 // Field MVC_PRESENT:Z
      46: aload_0
      47: ldc           #68                 // String REQUIRES_SECURE_CHANNEL
      49: putfield      #103                // Field requiresSecure:Ljava/lang/String;
      52: aload_0
      53: ldc           #106                // String REQUIRES_INSECURE_CHANNEL
      55: putfield      #109                // Field requiresInsecure:Ljava/lang/String;
      58: return

  public static final java.util.List access$getChannelSecurityRules$p(org.springframework.security.config.web.servlet.RequiresChannelDsl);
    Code:
       0: aload_0
       1: getfield      #42                 // Field channelSecurityRules:Ljava/util/List;
       4: areturn
}
