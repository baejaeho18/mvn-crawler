Compiled from "AuthenticationConfiguration.java"
class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$LazyPasswordEncoder implements org.springframework.security.crypto.password.PasswordEncoder {
  private org.springframework.context.ApplicationContext applicationContext;

  private org.springframework.security.crypto.password.PasswordEncoder passwordEncoder;

  org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$LazyPasswordEncoder(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       9: return

  public java.lang.String encode(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getPasswordEncoder:()Lorg/springframework/security/crypto/password/PasswordEncoder;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/springframework/security/crypto/password/PasswordEncoder.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;
      10: areturn

  public boolean matches(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getPasswordEncoder:()Lorg/springframework/security/crypto/password/PasswordEncoder;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod org/springframework/security/crypto/password/PasswordEncoder.matches:(Ljava/lang/CharSequence;Ljava/lang/String;)Z
      11: ireturn

  public boolean upgradeEncoding(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getPasswordEncoder:()Lorg/springframework/security/crypto/password/PasswordEncoder;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/springframework/security/crypto/password/PasswordEncoder.upgradeEncoding:(Ljava/lang/String;)Z
      10: ireturn

  private org.springframework.security.crypto.password.PasswordEncoder getPasswordEncoder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field passwordEncoder:Lorg/springframework/security/crypto/password/PasswordEncoder;
       4: ifnull        12
       7: aload_0
       8: getfield      #7                  // Field passwordEncoder:Lorg/springframework/security/crypto/password/PasswordEncoder;
      11: areturn
      12: aload_0
      13: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      16: ldc           #8                  // class org/springframework/security/crypto/password/PasswordEncoder
      18: invokestatic  #9                  // Method org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration.access$000:(Lorg/springframework/context/ApplicationContext;Ljava/lang/Class;)Ljava/lang/Object;
      21: checkcast     #8                  // class org/springframework/security/crypto/password/PasswordEncoder
      24: astore_1
      25: aload_1
      26: ifnonnull     33
      29: invokestatic  #10                 // Method org/springframework/security/crypto/factory/PasswordEncoderFactories.createDelegatingPasswordEncoder:()Lorg/springframework/security/crypto/password/PasswordEncoder;
      32: astore_1
      33: aload_0
      34: aload_1
      35: putfield      #7                  // Field passwordEncoder:Lorg/springframework/security/crypto/password/PasswordEncoder;
      38: aload_1
      39: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getPasswordEncoder:()Lorg/springframework/security/crypto/password/PasswordEncoder;
       4: invokevirtual #11                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
