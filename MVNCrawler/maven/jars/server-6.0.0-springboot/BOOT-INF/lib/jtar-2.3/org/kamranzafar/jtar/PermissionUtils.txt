Compiled from "PermissionUtils.java"
public class org.kamranzafar.jtar.PermissionUtils {
  private static java.util.Map<java.nio.file.attribute.PosixFilePermission, java.lang.Integer> posixPermissionToInteger;

  private static final boolean isPosix;

  public org.kamranzafar.jtar.PermissionUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int permissions(java.io.File);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String File is null.
      10: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #5                  // Method java/io/File.exists:()Z
      18: ifne          53
      21: new           #6                  // class java/lang/IllegalArgumentException
      24: dup
      25: new           #7                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #9                  // String File
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #12                 // String  does not exist.
      43: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: getstatic     #15                 // Field isPosix:Z
      56: ifeq          66
      59: aload_0
      60: invokestatic  #16                 // Method posixPermissions:(Ljava/io/File;)I
      63: goto          73
      66: aload_0
      67: invokestatic  #17                 // Method standardPermissions:(Ljava/io/File;)Ljava/lang/Integer;
      70: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      73: ireturn

  private static int posixPermissions(java.io.File);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       6: iconst_0
       7: anewarray     #20                 // class java/nio/file/LinkOption
      10: invokestatic  #21                 // Method java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;
      13: astore_2
      14: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          83
      37: aload_3
      38: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #27                 // class java/util/Map$Entry
      46: astore        4
      48: aload_2
      49: aload         4
      51: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      56: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      61: ifeq          80
      64: iload_1
      65: aload         4
      67: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #31                 // class java/lang/Integer
      75: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      78: iadd
      79: istore_1
      80: goto          28
      83: goto          96
      86: astore_2
      87: new           #33                 // class java/lang/RuntimeException
      90: dup
      91: aload_2
      92: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      95: athrow
      96: iload_1
      97: ireturn
    Exception table:
       from    to  target type
           2    83    86   Class java/io/IOException

  private static java.util.Set<org.kamranzafar.jtar.PermissionUtils$StandardFilePermission> readStandardPermissions(java.io.File);
    Code:
       0: new           #35                 // class java/util/HashSet
       3: dup
       4: invokespecial #36                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #37                 // Method java/io/File.canExecute:()Z
      12: ifeq          25
      15: aload_1
      16: getstatic     #38                 // Field org/kamranzafar/jtar/PermissionUtils$StandardFilePermission.EXECUTE:Lorg/kamranzafar/jtar/PermissionUtils$StandardFilePermission;
      19: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_0
      26: invokevirtual #40                 // Method java/io/File.canWrite:()Z
      29: ifeq          42
      32: aload_1
      33: getstatic     #41                 // Field org/kamranzafar/jtar/PermissionUtils$StandardFilePermission.WRITE:Lorg/kamranzafar/jtar/PermissionUtils$StandardFilePermission;
      36: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: invokevirtual #42                 // Method java/io/File.canRead:()Z
      46: ifeq          59
      49: aload_1
      50: getstatic     #43                 // Field org/kamranzafar/jtar/PermissionUtils$StandardFilePermission.READ:Lorg/kamranzafar/jtar/PermissionUtils$StandardFilePermission;
      53: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: areturn

  private static java.lang.Integer standardPermissions(java.io.File);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokestatic  #44                 // Method readStandardPermissions:(Ljava/io/File;)Ljava/util/Set;
       6: astore_2
       7: aload_2
       8: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          45
      23: aload_3
      24: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #45                 // class org/kamranzafar/jtar/PermissionUtils$StandardFilePermission
      32: astore        4
      34: iload_1
      35: aload         4
      37: invokestatic  #46                 // Method org/kamranzafar/jtar/PermissionUtils$StandardFilePermission.access$000:(Lorg/kamranzafar/jtar/PermissionUtils$StandardFilePermission;)I
      40: iadd
      41: istore_1
      42: goto          14
      45: iload_1
      46: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: areturn

  static {};
    Code:
       0: new           #48                 // class java/util/HashMap
       3: dup
       4: invokespecial #49                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      10: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      13: getstatic     #50                 // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
      16: bipush        64
      18: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      30: getstatic     #52                 // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      33: sipush        128
      36: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      48: getstatic     #53                 // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;
      51: sipush        256
      54: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      66: getstatic     #54                 // Field java/nio/file/attribute/PosixFilePermission.GROUP_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
      69: bipush        8
      71: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
      83: getstatic     #55                 // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      86: bipush        16
      88: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
     100: getstatic     #56                 // Field java/nio/file/attribute/PosixFilePermission.GROUP_READ:Ljava/nio/file/attribute/PosixFilePermission;
     103: bipush        32
     105: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
     117: getstatic     #57                 // Field java/nio/file/attribute/PosixFilePermission.OTHERS_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     120: iconst_1
     121: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     124: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
     133: getstatic     #58                 // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     136: iconst_2
     137: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     140: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: getstatic     #22                 // Field posixPermissionToInteger:Ljava/util/Map;
     149: getstatic     #59                 // Field java/nio/file/attribute/PosixFilePermission.OTHERS_READ:Ljava/nio/file/attribute/PosixFilePermission;
     152: iconst_4
     153: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     156: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: pop
     162: invokestatic  #60                 // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
     165: invokevirtual #61                 // Method java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;
     168: ldc           #62                 // String posix
     170: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     175: putstatic     #15                 // Field isPosix:Z
     178: return
}
