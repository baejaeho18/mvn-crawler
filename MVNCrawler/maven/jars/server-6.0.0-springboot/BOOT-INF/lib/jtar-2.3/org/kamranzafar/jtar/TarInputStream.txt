Compiled from "TarInputStream.java"
public class org.kamranzafar.jtar.TarInputStream extends java.io.FilterInputStream {
  private static final int SKIP_BUFFER_SIZE;

  private org.kamranzafar.jtar.TarEntry currentEntry;

  private long currentFileSize;

  private long bytesRead;

  private boolean defaultSkip;

  public org.kamranzafar.jtar.TarInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field defaultSkip:Z
      10: aload_0
      11: lconst_0
      12: putfield      #3                  // Field currentFileSize:J
      15: aload_0
      16: lconst_0
      17: putfield      #4                  // Field bytesRead:J
      20: return

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized void mark(int);
    Code:
       0: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: new           #5                  // class java/io/IOException
       3: dup
       4: ldc           #6                  // String mark/reset not supported
       6: invokespecial #7                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: iconst_0
       7: iconst_1
       8: invokevirtual #8                  // Method read:([BII)I
      11: istore_2
      12: iload_2
      13: iconst_m1
      14: if_icmpeq     25
      17: sipush        255
      20: aload_1
      21: iconst_0
      22: baload
      23: iand
      24: ireturn
      25: iload_2
      26: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
       4: ifnull        56
       7: aload_0
       8: getfield      #3                  // Field currentFileSize:J
      11: aload_0
      12: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      15: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      18: lcmp
      19: ifne          24
      22: iconst_m1
      23: ireturn
      24: aload_0
      25: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      28: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      31: aload_0
      32: getfield      #3                  // Field currentFileSize:J
      35: lsub
      36: iload_3
      37: i2l
      38: lcmp
      39: ifge          56
      42: aload_0
      43: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      46: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      49: aload_0
      50: getfield      #3                  // Field currentFileSize:J
      53: lsub
      54: l2i
      55: istore_3
      56: aload_0
      57: aload_1
      58: iload_2
      59: iload_3
      60: invokespecial #11                 // Method java/io/FilterInputStream.read:([BII)I
      63: istore        4
      65: iload         4
      67: iconst_m1
      68: if_icmpeq     102
      71: aload_0
      72: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      75: ifnull        90
      78: aload_0
      79: dup
      80: getfield      #3                  // Field currentFileSize:J
      83: iload         4
      85: i2l
      86: ladd
      87: putfield      #3                  // Field currentFileSize:J
      90: aload_0
      91: dup
      92: getfield      #4                  // Field bytesRead:J
      95: iload         4
      97: i2l
      98: ladd
      99: putfield      #4                  // Field bytesRead:J
     102: iload         4
     104: ireturn

  public org.kamranzafar.jtar.TarEntry getNextEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method closeCurrentEntry:()V
       4: sipush        512
       7: newarray       byte
       9: astore_1
      10: sipush        512
      13: newarray       byte
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: sipush        512
      22: if_icmpge     63
      25: aload_0
      26: aload_2
      27: iconst_0
      28: sipush        512
      31: iload_3
      32: isub
      33: invokevirtual #8                  // Method read:([BII)I
      36: istore        4
      38: iload         4
      40: ifge          46
      43: goto          63
      46: aload_2
      47: iconst_0
      48: aload_1
      49: iload_3
      50: iload         4
      52: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: iload_3
      56: iload         4
      58: iadd
      59: istore_3
      60: goto          18
      63: iconst_1
      64: istore        4
      66: aload_1
      67: astore        5
      69: aload         5
      71: arraylength
      72: istore        6
      74: iconst_0
      75: istore        7
      77: iload         7
      79: iload         6
      81: if_icmpge     108
      84: aload         5
      86: iload         7
      88: baload
      89: istore        8
      91: iload         8
      93: ifeq          102
      96: iconst_0
      97: istore        4
      99: goto          108
     102: iinc          7, 1
     105: goto          77
     108: iload         4
     110: ifne          125
     113: aload_0
     114: new           #15                 // class org/kamranzafar/jtar/TarEntry
     117: dup
     118: aload_1
     119: invokespecial #16                 // Method org/kamranzafar/jtar/TarEntry."<init>":([B)V
     122: putfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
     125: aload_0
     126: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
     129: areturn

  public long getCurrentOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytesRead:J
       4: lreturn

  protected void closeCurrentEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
       4: ifnull        114
       7: aload_0
       8: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      11: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      14: aload_0
      15: getfield      #3                  // Field currentFileSize:J
      18: lcmp
      19: ifle          100
      22: lconst_0
      23: lstore_1
      24: lload_1
      25: aload_0
      26: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      29: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      32: aload_0
      33: getfield      #3                  // Field currentFileSize:J
      36: lsub
      37: lcmp
      38: ifge          100
      41: aload_0
      42: aload_0
      43: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      46: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      49: aload_0
      50: getfield      #3                  // Field currentFileSize:J
      53: lsub
      54: lload_1
      55: lsub
      56: invokevirtual #17                 // Method skip:(J)J
      59: lstore_3
      60: lload_3
      61: lconst_0
      62: lcmp
      63: ifne          93
      66: aload_0
      67: getfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
      70: invokevirtual #10                 // Method org/kamranzafar/jtar/TarEntry.getSize:()J
      73: aload_0
      74: getfield      #3                  // Field currentFileSize:J
      77: lsub
      78: lconst_0
      79: lcmp
      80: ifle          93
      83: new           #5                  // class java/io/IOException
      86: dup
      87: ldc           #18                 // String Possible tar file corruption
      89: invokespecial #7                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: lload_1
      94: lload_3
      95: ladd
      96: lstore_1
      97: goto          24
     100: aload_0
     101: aconst_null
     102: putfield      #9                  // Field currentEntry:Lorg/kamranzafar/jtar/TarEntry;
     105: aload_0
     106: lconst_0
     107: putfield      #3                  // Field currentFileSize:J
     110: aload_0
     111: invokevirtual #19                 // Method skipPad:()V
     114: return

  protected void skipPad() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytesRead:J
       4: lconst_0
       5: lcmp
       6: ifle          58
       9: aload_0
      10: getfield      #4                  // Field bytesRead:J
      13: ldc2_w        #20                 // long 512l
      16: lrem
      17: l2i
      18: istore_1
      19: iload_1
      20: ifle          58
      23: lconst_0
      24: lstore_2
      25: lload_2
      26: sipush        512
      29: iload_1
      30: isub
      31: i2l
      32: lcmp
      33: ifge          58
      36: aload_0
      37: sipush        512
      40: iload_1
      41: isub
      42: i2l
      43: lload_2
      44: lsub
      45: invokevirtual #17                 // Method skip:(J)J
      48: lstore        4
      50: lload_2
      51: lload         4
      53: ladd
      54: lstore_2
      55: goto          25
      58: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultSkip:Z
       4: ifeq          25
       7: aload_0
       8: lload_1
       9: invokespecial #22                 // Method java/io/FilterInputStream.skip:(J)J
      12: lstore_3
      13: aload_0
      14: dup
      15: getfield      #4                  // Field bytesRead:J
      18: lload_3
      19: ladd
      20: putfield      #4                  // Field bytesRead:J
      23: lload_3
      24: lreturn
      25: lload_1
      26: lconst_0
      27: lcmp
      28: ifgt          33
      31: lconst_0
      32: lreturn
      33: lload_1
      34: lstore_3
      35: sipush        2048
      38: newarray       byte
      40: astore        5
      42: lload_3
      43: lconst_0
      44: lcmp
      45: ifle          90
      48: aload_0
      49: aload         5
      51: iconst_0
      52: lload_3
      53: ldc2_w        #24                 // long 2048l
      56: lcmp
      57: ifge          64
      60: lload_3
      61: goto          67
      64: ldc2_w        #24                 // long 2048l
      67: l2i
      68: invokevirtual #8                  // Method read:([BII)I
      71: istore        6
      73: iload         6
      75: ifge          81
      78: goto          90
      81: lload_3
      82: iload         6
      84: i2l
      85: lsub
      86: lstore_3
      87: goto          42
      90: lload_1
      91: lload_3
      92: lsub
      93: lreturn

  public boolean isDefaultSkip();
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultSkip:Z
       4: ireturn

  public void setDefaultSkip(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field defaultSkip:Z
       5: return
}
