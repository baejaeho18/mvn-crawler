Compiled from "CustomResourceDefinitionStatusFluent.java"
public interface io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent<A extends io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames getAcceptedNames();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames buildAcceptedNames();

  public abstract A withAcceptedNames(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames);

  public abstract java.lang.Boolean hasAcceptedNames();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$AcceptedNamesNested<A> withNewAcceptedNames();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$AcceptedNamesNested<A> withNewAcceptedNamesLike(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames);

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$AcceptedNamesNested<A> editAcceptedNames();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$AcceptedNamesNested<A> editOrNewAcceptedNames();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$AcceptedNamesNested<A> editOrNewAcceptedNamesLike(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames);

  public abstract A addToConditions(int, io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition);

  public abstract A setToConditions(int, io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition);

  public abstract A addToConditions(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition>);

  public abstract A removeFromConditions(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition>);

  public abstract A removeMatchingFromConditions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionConditionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition> getConditions();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition> buildConditions();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition buildCondition(int);

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition buildFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition buildLastCondition();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition buildMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionConditionBuilder>);

  public abstract A withConditions(java.util.List<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition>);

  public abstract A withConditions(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract A addNewCondition(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> addNewConditionLike(io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition);

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition);

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatusFluent$ConditionsNested<A> editMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinitionConditionBuilder>);

  public abstract A addToStoredVersions(int, java.lang.String);

  public abstract A setToStoredVersions(int, java.lang.String);

  public abstract A addToStoredVersions(java.lang.String...);

  public abstract A addAllToStoredVersions(java.util.Collection<java.lang.String>);

  public abstract A removeFromStoredVersions(java.lang.String...);

  public abstract A removeAllFromStoredVersions(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getStoredVersions();

  public abstract java.lang.String getStoredVersion(int);

  public abstract java.lang.String getFirstStoredVersion();

  public abstract java.lang.String getLastStoredVersion();

  public abstract java.lang.String getMatchingStoredVersion(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingStoredVersion(io.fabric8.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withStoredVersions(java.util.List<java.lang.String>);

  public abstract A withStoredVersions(java.lang.String...);

  public abstract java.lang.Boolean hasStoredVersions();

  public abstract A addNewStoredVersion(java.lang.String);

  public abstract A addNewStoredVersion(java.lang.StringBuilder);

  public abstract A addNewStoredVersion(java.lang.StringBuffer);
}
