Compiled from "MarkupSelectorItems.java"
final class org.attoparser.select.MarkupSelectorItems$SelectorRepository {
  private static final int SELECTOR_ITEMS_MAX_SIZE;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<org.attoparser.select.IMarkupSelectorItem>> CASE_INSENSITIVE_SELECTOR_ITEMS;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<org.attoparser.select.IMarkupSelectorItem>> CASE_SENSITIVE_SELECTOR_ITEMS;

  org.attoparser.select.MarkupSelectorItems$SelectorRepository();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        20
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field CASE_INSENSITIVE_SELECTOR_ITEMS:Ljava/util/concurrent/ConcurrentHashMap;
      17: aload_0
      18: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: bipush        20
      24: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      27: putfield      #5                  // Field CASE_SENSITIVE_SELECTOR_ITEMS:Ljava/util/concurrent/ConcurrentHashMap;
      30: return

  java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<org.attoparser.select.IMarkupSelectorItem>> getMap(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #4                  // Field CASE_INSENSITIVE_SELECTOR_ITEMS:Ljava/util/concurrent/ConcurrentHashMap;
       8: goto          15
      11: aload_0
      12: getfield      #5                  // Field CASE_SENSITIVE_SELECTOR_ITEMS:Ljava/util/concurrent/ConcurrentHashMap;
      15: areturn
}
