Compiled from "MarkupEventProcessorHandler.java"
final class org.attoparser.MarkupEventProcessorHandler extends org.attoparser.AbstractChainedMarkupHandler {
  private static final int DEFAULT_STACK_LEN;

  private static final int DEFAULT_ATTRIBUTE_NAMES_LEN;

  private org.attoparser.ParseStatus status;

  private boolean useStack;

  private boolean autoOpen;

  private boolean autoClose;

  private boolean requireBalancedElements;

  private boolean requireNoUnmatchedCloseElements;

  private org.attoparser.config.ParseConfiguration$PrologParseConfiguration prologParseConfiguration;

  private org.attoparser.config.ParseConfiguration$UniqueRootElementPresence uniqueRootElementPresence;

  private boolean caseSensitive;

  private boolean requireWellFormedAttributeValues;

  private boolean requireUniqueAttributesInElement;

  private boolean validateProlog;

  private boolean prologPresenceForbidden;

  private boolean xmlDeclarationPresenceForbidden;

  private boolean doctypePresenceForbidden;

  private org.attoparser.MarkupEventProcessorHandler$StructureNamesRepository structureNamesRepository;

  private char[][] elementStack;

  private int elementStackSize;

  private boolean validPrologXmlDeclarationRead;

  private boolean validPrologDocTypeRead;

  private boolean elementRead;

  private char[] rootElementName;

  private char[][] currentElementAttributeNames;

  private int currentElementAttributeNamesSize;

  private boolean closeElementIsMatched;

  org.attoparser.MarkupEventProcessorHandler(org.attoparser.IMarkupHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/attoparser/AbstractChainedMarkupHandler."<init>":(Lorg/attoparser/IMarkupHandler;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field validPrologXmlDeclarationRead:Z
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field validPrologDocTypeRead:Z
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field elementRead:Z
      20: aload_0
      21: aconst_null
      22: putfield      #5                  // Field rootElementName:[C
      25: aload_0
      26: aconst_null
      27: putfield      #6                  // Field currentElementAttributeNames:[[C
      30: aload_0
      31: iconst_0
      32: putfield      #7                  // Field currentElementAttributeNamesSize:I
      35: aload_0
      36: iconst_1
      37: putfield      #8                  // Field closeElementIsMatched:Z
      40: return

  public void setParseStatus(org.attoparser.ParseStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
       5: aload_0
       6: aload_1
       7: invokespecial #10                 // Method org/attoparser/AbstractChainedMarkupHandler.setParseStatus:(Lorg/attoparser/ParseStatus;)V
      10: return

  public void setParseConfiguration(org.attoparser.config.ParseConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method org/attoparser/config/ParseConfiguration.isCaseSensitive:()Z
       5: putfield      #12                 // Field caseSensitive:Z
       8: aload_0
       9: getstatic     #13                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.NO_BALANCING:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      12: aload_1
      13: invokevirtual #14                 // Method org/attoparser/config/ParseConfiguration.getElementBalancing:()Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      16: if_acmpne     43
      19: aload_1
      20: invokevirtual #15                 // Method org/attoparser/config/ParseConfiguration.isUniqueAttributesInElementRequired:()Z
      23: ifne          43
      26: aload_1
      27: invokevirtual #16                 // Method org/attoparser/config/ParseConfiguration.isNoUnmatchedCloseElementsRequired:()Z
      30: ifne          43
      33: getstatic     #17                 // Field org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.NOT_VALIDATED:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      36: aload_1
      37: invokevirtual #18                 // Method org/attoparser/config/ParseConfiguration.getUniqueRootElementPresence:()Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      40: if_acmpeq     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: putfield      #19                 // Field useStack:Z
      51: aload_0
      52: getstatic     #20                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.AUTO_OPEN_CLOSE:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      55: aload_1
      56: invokevirtual #14                 // Method org/attoparser/config/ParseConfiguration.getElementBalancing:()Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      59: if_acmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: putfield      #21                 // Field autoOpen:Z
      70: aload_0
      71: getstatic     #20                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.AUTO_OPEN_CLOSE:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      74: aload_1
      75: invokevirtual #14                 // Method org/attoparser/config/ParseConfiguration.getElementBalancing:()Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      78: if_acmpeq     91
      81: getstatic     #22                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.AUTO_CLOSE:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      84: aload_1
      85: invokevirtual #14                 // Method org/attoparser/config/ParseConfiguration.getElementBalancing:()Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      88: if_acmpne     95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: putfield      #23                 // Field autoClose:Z
      99: aload_0
     100: getstatic     #24                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.REQUIRE_BALANCED:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
     103: aload_1
     104: invokevirtual #14                 // Method org/attoparser/config/ParseConfiguration.getElementBalancing:()Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
     107: if_acmpne     114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: putfield      #25                 // Field requireBalancedElements:Z
     118: aload_0
     119: aload_0
     120: getfield      #25                 // Field requireBalancedElements:Z
     123: ifne          133
     126: aload_1
     127: invokevirtual #16                 // Method org/attoparser/config/ParseConfiguration.isNoUnmatchedCloseElementsRequired:()Z
     130: ifeq          137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: putfield      #26                 // Field requireNoUnmatchedCloseElements:Z
     141: aload_0
     142: aload_1
     143: invokevirtual #27                 // Method org/attoparser/config/ParseConfiguration.getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     146: putfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     149: aload_0
     150: getfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     153: invokevirtual #29                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.validateConfiguration:()V
     156: aload_0
     157: aload_1
     158: invokevirtual #18                 // Method org/attoparser/config/ParseConfiguration.getUniqueRootElementPresence:()Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
     161: putfield      #30                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
     164: aload_0
     165: aload_1
     166: invokevirtual #31                 // Method org/attoparser/config/ParseConfiguration.isXmlWellFormedAttributeValuesRequired:()Z
     169: putfield      #32                 // Field requireWellFormedAttributeValues:Z
     172: aload_0
     173: aload_1
     174: invokevirtual #15                 // Method org/attoparser/config/ParseConfiguration.isUniqueAttributesInElementRequired:()Z
     177: putfield      #33                 // Field requireUniqueAttributesInElement:Z
     180: aload_0
     181: aload_0
     182: getfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     185: invokevirtual #34                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.isValidateProlog:()Z
     188: putfield      #35                 // Field validateProlog:Z
     191: aload_0
     192: aload_0
     193: getfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     196: invokevirtual #36                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.getPrologPresence:()Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     199: invokevirtual #37                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.isForbidden:()Z
     202: putfield      #38                 // Field prologPresenceForbidden:Z
     205: aload_0
     206: aload_0
     207: getfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     210: invokevirtual #39                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.getXmlDeclarationPresence:()Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     213: invokevirtual #40                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.isRequired:()Z
     216: putfield      #41                 // Field xmlDeclarationPresenceForbidden:Z
     219: aload_0
     220: aload_0
     221: getfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     224: invokevirtual #42                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.getDoctypePresence:()Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     227: invokevirtual #40                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.isRequired:()Z
     230: putfield      #43                 // Field doctypePresenceForbidden:Z
     233: aload_0
     234: getfield      #19                 // Field useStack:Z
     237: ifeq          268
     240: aload_0
     241: bipush        10
     243: anewarray     #45                 // class "[C"
     246: putfield      #46                 // Field elementStack:[[C
     249: aload_0
     250: iconst_0
     251: putfield      #47                 // Field elementStackSize:I
     254: aload_0
     255: new           #48                 // class org/attoparser/MarkupEventProcessorHandler$StructureNamesRepository
     258: dup
     259: invokespecial #49                 // Method org/attoparser/MarkupEventProcessorHandler$StructureNamesRepository."<init>":()V
     262: putfield      #50                 // Field structureNamesRepository:Lorg/attoparser/MarkupEventProcessorHandler$StructureNamesRepository;
     265: goto          283
     268: aload_0
     269: aconst_null
     270: putfield      #46                 // Field elementStack:[[C
     273: aload_0
     274: iconst_0
     275: putfield      #47                 // Field elementStackSize:I
     278: aload_0
     279: aconst_null
     280: putfield      #50                 // Field structureNamesRepository:Lorg/attoparser/MarkupEventProcessorHandler$StructureNamesRepository;
     283: aload_0
     284: aload_1
     285: invokespecial #51                 // Method org/attoparser/AbstractChainedMarkupHandler.setParseConfiguration:(Lorg/attoparser/config/ParseConfiguration;)V
     288: return

  public void handleDocumentEnd(long, long, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field requireBalancedElements:Z
       4: ifeq          64
       7: aload_0
       8: getfield      #47                 // Field elementStackSize:I
      11: ifle          64
      14: aload_0
      15: invokespecial #52                 // Method popFromStack:()[C
      18: astore        7
      20: new           #53                 // class org/attoparser/ParseException
      23: dup
      24: new           #54                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #56                 // String Malformed markup: element \"
      33: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: new           #58                 // class java/lang/String
      39: dup
      40: aload         7
      42: iconst_0
      43: aload         7
      45: arraylength
      46: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
      49: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #60                 // String \" is never closed (no closing tag at the end of document)
      54: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #62                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: getfield      #4                  // Field elementRead:Z
      68: ifne          108
      71: aload_0
      72: getfield      #3                  // Field validPrologDocTypeRead:Z
      75: ifeq          88
      78: aload_0
      79: getfield      #30                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      82: invokevirtual #63                 // Method org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.isDependsOnPrologDoctype:()Z
      85: ifne          98
      88: aload_0
      89: getfield      #30                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      92: invokevirtual #64                 // Method org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.isRequiredAlways:()Z
      95: ifeq          108
      98: new           #53                 // class org/attoparser/ParseException
     101: dup
     102: ldc           #65                 // String Malformed markup: no root element present
     104: invokespecial #62                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: getfield      #19                 // Field useStack:Z
     112: ifeq          123
     115: aload_0
     116: iload         5
     118: iload         6
     120: invokespecial #66                 // Method cleanStack:(II)V
     123: aload_0
     124: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     127: lload_1
     128: lload_3
     129: iload         5
     131: iload         6
     133: invokeinterface #68,  7           // InterfaceMethod org/attoparser/IMarkupHandler.handleDocumentEnd:(JJII)V
     138: return

  public void handleXmlDeclaration(char[], int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field validateProlog:Z
       4: ifeq          35
       7: aload_0
       8: getfield      #38                 // Field prologPresenceForbidden:Z
      11: ifne          21
      14: aload_0
      15: getfield      #41                 // Field xmlDeclarationPresenceForbidden:Z
      18: ifeq          35
      21: new           #53                 // class org/attoparser/ParseException
      24: dup
      25: ldc           #69                 // String An XML Declaration has been found, but it wasn\'t allowed
      27: iload         20
      29: iload         21
      31: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      34: athrow
      35: aload_0
      36: getfield      #35                 // Field validateProlog:Z
      39: ifeq          105
      42: aload_0
      43: getfield      #2                  // Field validPrologXmlDeclarationRead:Z
      46: ifeq          63
      49: new           #53                 // class org/attoparser/ParseException
      52: dup
      53: ldc           #71                 // String Malformed markup: Only one XML Declaration can appear in document
      55: iload         20
      57: iload         21
      59: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      62: athrow
      63: aload_0
      64: getfield      #3                  // Field validPrologDocTypeRead:Z
      67: ifeq          84
      70: new           #53                 // class org/attoparser/ParseException
      73: dup
      74: ldc           #72                 // String Malformed markup: XML Declaration must appear before DOCTYPE
      76: iload         20
      78: iload         21
      80: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      83: athrow
      84: aload_0
      85: getfield      #4                  // Field elementRead:Z
      88: ifeq          105
      91: new           #53                 // class org/attoparser/ParseException
      94: dup
      95: ldc           #73                 // String Malformed markup: XML Declaration must appear before any elements in document
      97: iload         20
      99: iload         21
     101: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     104: athrow
     105: aload_0
     106: getfield      #35                 // Field validateProlog:Z
     109: ifeq          117
     112: aload_0
     113: iconst_1
     114: putfield      #2                  // Field validPrologXmlDeclarationRead:Z
     117: aload_0
     118: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     121: aload_1
     122: iload_2
     123: iload_3
     124: iload         4
     126: iload         5
     128: iload         6
     130: iload         7
     132: iload         8
     134: iload         9
     136: iload         10
     138: iload         11
     140: iload         12
     142: iload         13
     144: iload         14
     146: iload         15
     148: iload         16
     150: iload         17
     152: iload         18
     154: iload         19
     156: iload         20
     158: iload         21
     160: invokeinterface #74,  22          // InterfaceMethod org/attoparser/IMarkupHandler.handleXmlDeclaration:([CIIIIIIIIIIIIIIIIIIII)V
     165: return

  public void handleStandaloneElementStart(char[], int, int, boolean, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field useStack:Z
       4: ifeq          42
       7: aload_0
       8: getfield      #47                 // Field elementStackSize:I
      11: ifne          25
      14: aload_0
      15: aload_1
      16: iload_2
      17: iload_3
      18: iload         5
      20: iload         6
      22: invokespecial #75                 // Method checkValidRootElement:([CIIII)V
      25: aload_0
      26: getfield      #33                 // Field requireUniqueAttributesInElement:Z
      29: ifeq          42
      32: aload_0
      33: aconst_null
      34: putfield      #6                  // Field currentElementAttributeNames:[[C
      37: aload_0
      38: iconst_0
      39: putfield      #7                  // Field currentElementAttributeNamesSize:I
      42: aload_0
      43: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      46: iconst_0
      47: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
      50: aload_0
      51: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      54: aconst_null
      55: putfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
      58: aload_0
      59: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      62: aconst_null
      63: putfield      #78                 // Field org/attoparser/ParseStatus.autoOpenLimits:[[C
      66: aload_0
      67: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      70: aconst_null
      71: putfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
      74: aload_0
      75: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      78: aconst_null
      79: putfield      #80                 // Field org/attoparser/ParseStatus.autoCloseLimits:[[C
      82: aload_0
      83: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      86: iconst_1
      87: putfield      #81                 // Field org/attoparser/ParseStatus.avoidStacking:Z
      90: aload_0
      91: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      94: aload_1
      95: iload_2
      96: iload_3
      97: iload         4
      99: iload         5
     101: iload         6
     103: invokeinterface #82,  7           // InterfaceMethod org/attoparser/IMarkupHandler.handleStandaloneElementStart:([CIIZII)V
     108: aload_0
     109: getfield      #19                 // Field useStack:Z
     112: ifeq          245
     115: aload_0
     116: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     119: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     122: ifnonnull     135
     125: aload_0
     126: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     129: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     132: ifnull        225
     135: aload_0
     136: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     139: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     142: ifnull        167
     145: aload_0
     146: aload_0
     147: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     150: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     153: aload_0
     154: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     157: getfield      #80                 // Field org/attoparser/ParseStatus.autoCloseLimits:[[C
     160: iload         5
     162: iload         6
     164: invokespecial #83                 // Method autoClose:([[C[[CII)V
     167: aload_0
     168: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     171: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     174: ifnull        199
     177: aload_0
     178: aload_0
     179: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     182: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     185: aload_0
     186: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     189: getfield      #78                 // Field org/attoparser/ParseStatus.autoOpenLimits:[[C
     192: iload         5
     194: iload         6
     196: invokespecial #84                 // Method autoOpen:([[C[[CII)V
     199: aload_0
     200: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     203: iconst_1
     204: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
     207: aload_0
     208: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     211: aload_1
     212: iload_2
     213: iload_3
     214: iload         4
     216: iload         5
     218: iload         6
     220: invokeinterface #82,  7           // InterfaceMethod org/attoparser/IMarkupHandler.handleStandaloneElementStart:([CIIZII)V
     225: aload_0
     226: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     229: getfield      #81                 // Field org/attoparser/ParseStatus.avoidStacking:Z
     232: ifne          291
     235: aload_0
     236: aload_1
     237: iload_2
     238: iload_3
     239: invokespecial #85                 // Method pushToStack:([CII)V
     242: goto          291
     245: aload_0
     246: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     249: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     252: ifnonnull     265
     255: aload_0
     256: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     259: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     262: ifnull        291
     265: aload_0
     266: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     269: iconst_1
     270: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
     273: aload_0
     274: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     277: aload_1
     278: iload_2
     279: iload_3
     280: iload         4
     282: iload         5
     284: iload         6
     286: invokeinterface #82,  7           // InterfaceMethod org/attoparser/IMarkupHandler.handleStandaloneElementStart:([CIIZII)V
     291: aload_0
     292: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     295: iconst_1
     296: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
     299: return

  public void handleStandaloneElementEnd(char[], int, int, boolean, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field elementRead:Z
       5: aload_0
       6: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: iload         5
      16: iload         6
      18: invokeinterface #86,  7           // InterfaceMethod org/attoparser/IMarkupHandler.handleStandaloneElementEnd:([CIIZII)V
      23: return

  public void handleOpenElementStart(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field useStack:Z
       4: ifeq          42
       7: aload_0
       8: getfield      #47                 // Field elementStackSize:I
      11: ifne          25
      14: aload_0
      15: aload_1
      16: iload_2
      17: iload_3
      18: iload         4
      20: iload         5
      22: invokespecial #75                 // Method checkValidRootElement:([CIIII)V
      25: aload_0
      26: getfield      #33                 // Field requireUniqueAttributesInElement:Z
      29: ifeq          42
      32: aload_0
      33: aconst_null
      34: putfield      #6                  // Field currentElementAttributeNames:[[C
      37: aload_0
      38: iconst_0
      39: putfield      #7                  // Field currentElementAttributeNamesSize:I
      42: aload_0
      43: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      46: iconst_0
      47: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
      50: aload_0
      51: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      54: aconst_null
      55: putfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
      58: aload_0
      59: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      62: aconst_null
      63: putfield      #78                 // Field org/attoparser/ParseStatus.autoOpenLimits:[[C
      66: aload_0
      67: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      70: aconst_null
      71: putfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
      74: aload_0
      75: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      78: aconst_null
      79: putfield      #80                 // Field org/attoparser/ParseStatus.autoCloseLimits:[[C
      82: aload_0
      83: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
      86: iconst_0
      87: putfield      #81                 // Field org/attoparser/ParseStatus.avoidStacking:Z
      90: aload_0
      91: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      94: aload_1
      95: iload_2
      96: iload_3
      97: iload         4
      99: iload         5
     101: invokeinterface #87,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleOpenElementStart:([CIIII)V
     106: aload_0
     107: getfield      #19                 // Field useStack:Z
     110: ifeq          241
     113: aload_0
     114: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     117: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     120: ifnonnull     133
     123: aload_0
     124: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     127: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     130: ifnull        221
     133: aload_0
     134: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     137: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     140: ifnull        165
     143: aload_0
     144: aload_0
     145: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     148: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     151: aload_0
     152: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     155: getfield      #80                 // Field org/attoparser/ParseStatus.autoCloseLimits:[[C
     158: iload         4
     160: iload         5
     162: invokespecial #83                 // Method autoClose:([[C[[CII)V
     165: aload_0
     166: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     169: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     172: ifnull        197
     175: aload_0
     176: aload_0
     177: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     180: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     183: aload_0
     184: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     187: getfield      #78                 // Field org/attoparser/ParseStatus.autoOpenLimits:[[C
     190: iload         4
     192: iload         5
     194: invokespecial #84                 // Method autoOpen:([[C[[CII)V
     197: aload_0
     198: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     201: iconst_1
     202: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
     205: aload_0
     206: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     209: aload_1
     210: iload_2
     211: iload_3
     212: iload         4
     214: iload         5
     216: invokeinterface #87,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleOpenElementStart:([CIIII)V
     221: aload_0
     222: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     225: getfield      #81                 // Field org/attoparser/ParseStatus.avoidStacking:Z
     228: ifne          285
     231: aload_0
     232: aload_1
     233: iload_2
     234: iload_3
     235: invokespecial #85                 // Method pushToStack:([CII)V
     238: goto          285
     241: aload_0
     242: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     245: getfield      #77                 // Field org/attoparser/ParseStatus.autoOpenParents:[[C
     248: ifnonnull     261
     251: aload_0
     252: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     255: getfield      #79                 // Field org/attoparser/ParseStatus.autoCloseRequired:[[C
     258: ifnull        285
     261: aload_0
     262: getfield      #9                  // Field status:Lorg/attoparser/ParseStatus;
     265: iconst_1
     266: putfield      #76                 // Field org/attoparser/ParseStatus.autoOpenCloseDone:Z
     269: aload_0
     270: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     273: aload_1
     274: iload_2
     275: iload_3
     276: iload         4
     278: iload         5
     280: invokeinterface #87,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleOpenElementStart:([CIIII)V
     285: return

  public void handleOpenElementEnd(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field elementRead:Z
       5: aload_0
       6: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: iload         5
      16: invokeinterface #88,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleOpenElementEnd:([CIIII)V
      21: return

  public void handleAutoOpenElementStart(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: new           #89                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #90                 // String handleAutoOpenElementStart should never be called on MarkupEventProcessor, as these events should originate in this class
       6: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void handleAutoOpenElementEnd(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: new           #89                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #92                 // String handleAutoOpenElementEnd should never be called on MarkupEventProcessor, as these events should originate in this class
       6: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void handleCloseElementStart(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field useStack:Z
       4: ifeq          80
       7: aload_0
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: iload         5
      16: invokespecial #93                 // Method checkStackForElement:([CIIII)Z
      19: putfield      #8                  // Field closeElementIsMatched:Z
      22: aload_0
      23: getfield      #33                 // Field requireUniqueAttributesInElement:Z
      26: ifeq          39
      29: aload_0
      30: aconst_null
      31: putfield      #6                  // Field currentElementAttributeNames:[[C
      34: aload_0
      35: iconst_0
      36: putfield      #7                  // Field currentElementAttributeNamesSize:I
      39: aload_0
      40: getfield      #8                  // Field closeElementIsMatched:Z
      43: ifeq          63
      46: aload_0
      47: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      50: aload_1
      51: iload_2
      52: iload_3
      53: iload         4
      55: iload         5
      57: invokeinterface #94,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleCloseElementStart:([CIIII)V
      62: return
      63: aload_0
      64: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      67: aload_1
      68: iload_2
      69: iload_3
      70: iload         4
      72: iload         5
      74: invokeinterface #95,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleUnmatchedCloseElementStart:([CIIII)V
      79: return
      80: aload_0
      81: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      84: aload_1
      85: iload_2
      86: iload_3
      87: iload         4
      89: iload         5
      91: invokeinterface #94,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleCloseElementStart:([CIIII)V
      96: return

  public void handleCloseElementEnd(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field elementRead:Z
       5: aload_0
       6: getfield      #19                 // Field useStack:Z
       9: ifeq          36
      12: aload_0
      13: getfield      #8                  // Field closeElementIsMatched:Z
      16: ifne          36
      19: aload_0
      20: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      23: aload_1
      24: iload_2
      25: iload_3
      26: iload         4
      28: iload         5
      30: invokeinterface #96,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleUnmatchedCloseElementEnd:([CIIII)V
      35: return
      36: aload_0
      37: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      40: aload_1
      41: iload_2
      42: iload_3
      43: iload         4
      45: iload         5
      47: invokeinterface #97,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleCloseElementEnd:([CIIII)V
      52: return

  public void handleAutoCloseElementStart(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: new           #89                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #98                 // String handleAutoCloseElementStart should never be called on MarkupEventProcessor, as these events should originate in this class
       6: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void handleAutoCloseElementEnd(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: new           #89                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #99                 // String handleAutoCloseElementEnd should never be called on MarkupEventProcessor, as these events should originate in this class
       6: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void handleUnmatchedCloseElementStart(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: new           #89                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #100                // String handleUnmatchedCloseElementStart should never be called on MarkupEventProcessor, as these events should originate in this class
       6: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void handleUnmatchedCloseElementEnd(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: new           #89                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #101                // String handleUnmatchedCloseElementEnd should never be called on MarkupEventProcessor, as these events should originate in this class
       6: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void handleAttribute(char[], int, int, int, int, int, int, int, int, int, int, int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field useStack:Z
       4: ifeq          196
       7: aload_0
       8: getfield      #33                 // Field requireUniqueAttributesInElement:Z
      11: ifeq          196
      14: aload_0
      15: getfield      #6                  // Field currentElementAttributeNames:[[C
      18: ifnonnull     29
      21: aload_0
      22: iconst_3
      23: anewarray     #45                 // class "[C"
      26: putfield      #6                  // Field currentElementAttributeNames:[[C
      29: iconst_0
      30: istore        16
      32: iload         16
      34: aload_0
      35: getfield      #7                  // Field currentElementAttributeNamesSize:I
      38: if_icmpge     121
      41: aload_0
      42: getfield      #12                 // Field caseSensitive:Z
      45: aload_0
      46: getfield      #6                  // Field currentElementAttributeNames:[[C
      49: iload         16
      51: aaload
      52: iconst_0
      53: aload_0
      54: getfield      #6                  // Field currentElementAttributeNames:[[C
      57: iload         16
      59: aaload
      60: arraylength
      61: aload_1
      62: iload_2
      63: iload_3
      64: invokestatic  #102                // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
      67: ifeq          115
      70: new           #53                 // class org/attoparser/ParseException
      73: dup
      74: new           #54                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #103                // String Malformed markup: Attribute \"
      83: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: new           #58                 // class java/lang/String
      89: dup
      90: aload_1
      91: iload_2
      92: iload_3
      93: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
      96: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #104                // String \" appears more than once in element
     101: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: iload         4
     109: iload         5
     111: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     114: athrow
     115: iinc          16, 1
     118: goto          32
     121: aload_0
     122: getfield      #7                  // Field currentElementAttributeNamesSize:I
     125: aload_0
     126: getfield      #6                  // Field currentElementAttributeNames:[[C
     129: arraylength
     130: if_icmpne     167
     133: aload_0
     134: getfield      #6                  // Field currentElementAttributeNames:[[C
     137: arraylength
     138: iconst_3
     139: iadd
     140: anewarray     #45                 // class "[C"
     143: astore        16
     145: aload_0
     146: getfield      #6                  // Field currentElementAttributeNames:[[C
     149: iconst_0
     150: aload         16
     152: iconst_0
     153: aload_0
     154: getfield      #6                  // Field currentElementAttributeNames:[[C
     157: arraylength
     158: invokestatic  #105                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     161: aload_0
     162: aload         16
     164: putfield      #6                  // Field currentElementAttributeNames:[[C
     167: aload_0
     168: getfield      #6                  // Field currentElementAttributeNames:[[C
     171: aload_0
     172: getfield      #7                  // Field currentElementAttributeNamesSize:I
     175: aload_0
     176: getfield      #50                 // Field structureNamesRepository:Lorg/attoparser/MarkupEventProcessorHandler$StructureNamesRepository;
     179: aload_1
     180: iload_2
     181: iload_3
     182: invokevirtual #106                // Method org/attoparser/MarkupEventProcessorHandler$StructureNamesRepository.getStructureName:([CII)[C
     185: aastore
     186: aload_0
     187: dup
     188: getfield      #7                  // Field currentElementAttributeNamesSize:I
     191: iconst_1
     192: iadd
     193: putfield      #7                  // Field currentElementAttributeNamesSize:I
     196: aload_0
     197: getfield      #32                 // Field requireWellFormedAttributeValues:Z
     200: ifeq          310
     203: iload         7
     205: ifne          253
     208: new           #53                 // class org/attoparser/ParseException
     211: dup
     212: new           #54                 // class java/lang/StringBuilder
     215: dup
     216: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     219: ldc           #103                // String Malformed markup: Attribute \"
     221: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: new           #58                 // class java/lang/String
     227: dup
     228: aload_1
     229: iload_2
     230: iload_3
     231: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     234: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #107                // String \" must include an equals (=) sign and a value surrounded by quotes
     239: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: iload         8
     247: iload         9
     249: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     252: athrow
     253: iload         13
     255: ifeq          265
     258: iload         13
     260: iload         11
     262: if_icmpne     310
     265: new           #53                 // class org/attoparser/ParseException
     268: dup
     269: new           #54                 // class java/lang/StringBuilder
     272: dup
     273: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     276: ldc           #108                // String Malformed markup: Value for attribute \"
     278: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: new           #58                 // class java/lang/String
     284: dup
     285: aload_1
     286: iload_2
     287: iload_3
     288: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     291: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: ldc           #109                // String \" must be surrounded by quotes
     296: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     302: iload         14
     304: iload         15
     306: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     309: athrow
     310: aload_0
     311: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     314: aload_1
     315: iload_2
     316: iload_3
     317: iload         4
     319: iload         5
     321: iload         6
     323: iload         7
     325: iload         8
     327: iload         9
     329: iload         10
     331: iload         11
     333: iload         12
     335: iload         13
     337: iload         14
     339: iload         15
     341: invokeinterface #110,  16         // InterfaceMethod org/attoparser/IMarkupHandler.handleAttribute:([CIIIIIIIIIIIIII)V
     346: return

  public void handleDocType(char[], int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field validateProlog:Z
       4: ifeq          253
       7: aload_0
       8: getfield      #38                 // Field prologPresenceForbidden:Z
      11: ifne          21
      14: aload_0
      15: getfield      #43                 // Field doctypePresenceForbidden:Z
      18: ifeq          35
      21: new           #53                 // class org/attoparser/ParseException
      24: dup
      25: ldc           #111                // String A DOCTYPE clause has been found, but it wasn\'t allowed
      27: iload         28
      29: iload         29
      31: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      34: athrow
      35: aload_0
      36: getfield      #3                  // Field validPrologDocTypeRead:Z
      39: ifeq          56
      42: new           #53                 // class org/attoparser/ParseException
      45: dup
      46: ldc           #112                // String Malformed markup: Only one DOCTYPE clause can appear in document
      48: iload         28
      50: iload         29
      52: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      55: athrow
      56: aload_0
      57: getfield      #4                  // Field elementRead:Z
      60: ifeq          77
      63: new           #53                 // class org/attoparser/ParseException
      66: dup
      67: ldc           #113                // String Malformed markup: DOCTYPE must appear before any elements in document
      69: iload         28
      71: iload         29
      73: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      76: athrow
      77: aload_0
      78: getfield      #28                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      81: invokevirtual #114                // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.isRequireDoctypeKeywordsUpperCase:()Z
      84: ifeq          253
      87: iload_3
      88: ifle          167
      91: iload_2
      92: iload_3
      93: iadd
      94: istore        30
      96: iload_2
      97: istore        31
      99: iload         31
     101: iload         30
     103: if_icmpge     167
     106: aload_1
     107: iload         31
     109: caload
     110: invokestatic  #115                // Method java/lang/Character.isLowerCase:(C)Z
     113: ifeq          161
     116: new           #53                 // class org/attoparser/ParseException
     119: dup
     120: new           #54                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #116                // String Malformed markup: DOCTYPE requires upper-case keywords (\"
     129: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: new           #58                 // class java/lang/String
     135: dup
     136: aload_1
     137: iload_2
     138: iload_3
     139: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     142: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #117                // String \" was found)
     147: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: iload         28
     155: iload         29
     157: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     160: athrow
     161: iinc          31, 1
     164: goto          99
     167: iload         11
     169: ifle          253
     172: iload         10
     174: iload         11
     176: iadd
     177: istore        30
     179: iload         10
     181: istore        31
     183: iload         31
     185: iload         30
     187: if_icmpge     253
     190: aload_1
     191: iload         31
     193: caload
     194: invokestatic  #115                // Method java/lang/Character.isLowerCase:(C)Z
     197: ifeq          247
     200: new           #53                 // class org/attoparser/ParseException
     203: dup
     204: new           #54                 // class java/lang/StringBuilder
     207: dup
     208: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     211: ldc           #116                // String Malformed markup: DOCTYPE requires upper-case keywords (\"
     213: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: new           #58                 // class java/lang/String
     219: dup
     220: aload_1
     221: iload         10
     223: iload         11
     225: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     228: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: ldc           #117                // String \" was found)
     233: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     239: iload         28
     241: iload         29
     243: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     246: athrow
     247: iinc          31, 1
     250: goto          183
     253: aload_0
     254: getfield      #19                 // Field useStack:Z
     257: ifeq          276
     260: aload_0
     261: aload_0
     262: getfield      #50                 // Field structureNamesRepository:Lorg/attoparser/MarkupEventProcessorHandler$StructureNamesRepository;
     265: aload_1
     266: iload         6
     268: iload         7
     270: invokevirtual #106                // Method org/attoparser/MarkupEventProcessorHandler$StructureNamesRepository.getStructureName:([CII)[C
     273: putfield      #5                  // Field rootElementName:[C
     276: aload_0
     277: getfield      #35                 // Field validateProlog:Z
     280: ifeq          288
     283: aload_0
     284: iconst_1
     285: putfield      #3                  // Field validPrologDocTypeRead:Z
     288: aload_0
     289: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     292: aload_1
     293: iload_2
     294: iload_3
     295: iload         4
     297: iload         5
     299: iload         6
     301: iload         7
     303: iload         8
     305: iload         9
     307: iload         10
     309: iload         11
     311: iload         12
     313: iload         13
     315: iload         14
     317: iload         15
     319: iload         16
     321: iload         17
     323: iload         18
     325: iload         19
     327: iload         20
     329: iload         21
     331: iload         22
     333: iload         23
     335: iload         24
     337: iload         25
     339: iload         26
     341: iload         27
     343: iload         28
     345: iload         29
     347: invokeinterface #118,  30         // InterfaceMethod org/attoparser/IMarkupHandler.handleDocType:([CIIIIIIIIIIIIIIIIIIIIIIIIIIII)V
     352: return

  private void checkValidRootElement(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field validateProlog:Z
       4: ifne          39
       7: aload_0
       8: getfield      #4                  // Field elementRead:Z
      11: ifeq          38
      14: aload_0
      15: getfield      #30                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      18: invokevirtual #64                 // Method org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.isRequiredAlways:()Z
      21: ifeq          38
      24: new           #53                 // class org/attoparser/ParseException
      27: dup
      28: ldc           #119                // String Malformed markup: Only one root element is allowed
      30: iload         4
      32: iload         5
      34: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      37: athrow
      38: return
      39: aload_0
      40: getfield      #3                  // Field validPrologDocTypeRead:Z
      43: ifeq          186
      46: aload_0
      47: getfield      #4                  // Field elementRead:Z
      50: ifeq          99
      53: new           #53                 // class org/attoparser/ParseException
      56: dup
      57: new           #54                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #120                // String Malformed markup: Only one root element (with name \"
      66: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: new           #58                 // class java/lang/String
      72: dup
      73: aload_0
      74: getfield      #5                  // Field rootElementName:[C
      77: invokespecial #121                // Method java/lang/String."<init>":([C)V
      80: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #122                // String \" is allowed
      85: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: iload         4
      93: iload         5
      95: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      98: athrow
      99: aload_0
     100: getfield      #12                 // Field caseSensitive:Z
     103: aload_0
     104: getfield      #5                  // Field rootElementName:[C
     107: iconst_0
     108: aload_0
     109: getfield      #5                  // Field rootElementName:[C
     112: arraylength
     113: aload_1
     114: iload_2
     115: iload_3
     116: invokestatic  #102                // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     119: ifne          186
     122: new           #53                 // class org/attoparser/ParseException
     125: dup
     126: new           #54                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #123                // String Malformed markup: Root element should be \"
     135: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: new           #58                 // class java/lang/String
     141: dup
     142: aload_0
     143: getfield      #5                  // Field rootElementName:[C
     146: invokespecial #121                // Method java/lang/String."<init>":([C)V
     149: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #124                // String \", but \"
     154: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: new           #58                 // class java/lang/String
     160: dup
     161: aload_1
     162: iload_2
     163: iload_3
     164: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     167: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: ldc           #125                // String \" has been found
     172: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: iload         4
     180: iload         5
     182: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     185: athrow
     186: return

  private boolean checkStackForElement(char[], int, int, int, int) throws org.attoparser.ParseException;
    Code:
       0: iconst_0
       1: istore        6
       3: aload_0
       4: iload         6
       6: invokespecial #126                // Method peekFromStack:(I)[C
       9: astore        7
      11: aload         7
      13: ifnull        229
      16: aload_0
      17: getfield      #12                 // Field caseSensitive:Z
      20: aload         7
      22: iconst_0
      23: aload         7
      25: arraylength
      26: aload_1
      27: iload_2
      28: iload_3
      29: invokestatic  #102                // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
      32: ifeq          160
      35: iconst_0
      36: istore        8
      38: iload         8
      40: iload         6
      42: if_icmpge     153
      45: aload_0
      46: invokespecial #52                 // Method popFromStack:()[C
      49: astore        7
      51: aload_0
      52: getfield      #23                 // Field autoClose:Z
      55: ifeq          99
      58: aload_0
      59: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      62: aload         7
      64: iconst_0
      65: aload         7
      67: arraylength
      68: iload         4
      70: iload         5
      72: invokeinterface #127,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoCloseElementStart:([CIIII)V
      77: aload_0
      78: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      81: aload         7
      83: iconst_0
      84: aload         7
      86: arraylength
      87: iload         4
      89: iload         5
      91: invokeinterface #128,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoCloseElementEnd:([CIIII)V
      96: goto          147
      99: new           #53                 // class org/attoparser/ParseException
     102: dup
     103: new           #54                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #56                 // String Malformed markup: element \"
     112: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: new           #58                 // class java/lang/String
     118: dup
     119: aload         7
     121: iconst_0
     122: aload         7
     124: arraylength
     125: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     128: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #129                // String \" is never closed
     133: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: iload         4
     141: iload         5
     143: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     146: athrow
     147: iinc          8, 1
     150: goto          38
     153: aload_0
     154: invokespecial #52                 // Method popFromStack:()[C
     157: pop
     158: iconst_1
     159: ireturn
     160: aload_0
     161: getfield      #25                 // Field requireBalancedElements:Z
     164: ifeq          215
     167: new           #53                 // class org/attoparser/ParseException
     170: dup
     171: new           #54                 // class java/lang/StringBuilder
     174: dup
     175: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     178: ldc           #56                 // String Malformed markup: element \"
     180: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: new           #58                 // class java/lang/String
     186: dup
     187: aload         7
     189: iconst_0
     190: aload         7
     192: arraylength
     193: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     196: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: ldc           #129                // String \" is never closed
     201: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: iload         4
     209: iload         5
     211: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     214: athrow
     215: aload_0
     216: iinc          6, 1
     219: iload         6
     221: invokespecial #126                // Method peekFromStack:(I)[C
     224: astore        7
     226: goto          11
     229: aload_0
     230: getfield      #26                 // Field requireNoUnmatchedCloseElements:Z
     233: ifeq          281
     236: new           #53                 // class org/attoparser/ParseException
     239: dup
     240: new           #54                 // class java/lang/StringBuilder
     243: dup
     244: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     247: ldc           #130                // String Malformed markup: closing element \"
     249: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: new           #58                 // class java/lang/String
     255: dup
     256: aload_1
     257: iload_2
     258: iload_3
     259: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     262: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: ldc           #131                // String \" is never open
     267: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: iload         4
     275: iload         5
     277: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     280: athrow
     281: iconst_0
     282: ireturn

  private void cleanStack(int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field elementStackSize:I
       4: ifle          108
       7: aload_0
       8: invokespecial #52                 // Method popFromStack:()[C
      11: astore_3
      12: aload_3
      13: ifnull        108
      16: aload_0
      17: getfield      #23                 // Field autoClose:Z
      20: ifeq          56
      23: aload_0
      24: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      27: aload_3
      28: iconst_0
      29: aload_3
      30: arraylength
      31: iload_1
      32: iload_2
      33: invokeinterface #127,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoCloseElementStart:([CIIII)V
      38: aload_0
      39: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
      42: aload_3
      43: iconst_0
      44: aload_3
      45: arraylength
      46: iload_1
      47: iload_2
      48: invokeinterface #128,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoCloseElementEnd:([CIIII)V
      53: goto          100
      56: new           #53                 // class org/attoparser/ParseException
      59: dup
      60: new           #54                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #56                 // String Malformed markup: element \"
      69: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: new           #58                 // class java/lang/String
      75: dup
      76: aload_3
      77: iconst_0
      78: aload_3
      79: arraylength
      80: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
      83: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #129                // String \" is never closed
      88: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: iload_1
      95: iload_2
      96: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
      99: athrow
     100: aload_0
     101: invokespecial #52                 // Method popFromStack:()[C
     104: astore_3
     105: goto          12
     108: return

  private void autoClose(char[][], char[][], int, int) throws org.attoparser.ParseException;
    Code:
       0: iconst_0
       1: istore        5
       3: iconst_0
       4: istore        6
       6: aload_0
       7: iload         5
       9: invokespecial #126                // Method peekFromStack:(I)[C
      12: astore        7
      14: aload         7
      16: ifnull        131
      19: aload_2
      20: ifnull        66
      23: iconst_0
      24: istore        8
      26: aload_2
      27: arraylength
      28: istore        9
      30: iload         9
      32: iinc          9, -1
      35: ifeq          66
      38: aload_0
      39: getfield      #12                 // Field caseSensitive:Z
      42: aload_2
      43: iload         8
      45: aaload
      46: aload         7
      48: invokestatic  #132                // Method org/attoparser/util/TextUtil.equals:(Z[C[C)Z
      51: ifeq          60
      54: aconst_null
      55: astore        7
      57: goto          66
      60: iinc          8, 1
      63: goto          30
      66: aload         7
      68: ifnull        14
      71: iconst_0
      72: istore        8
      74: aload_1
      75: arraylength
      76: istore        9
      78: iload         9
      80: iinc          9, -1
      83: ifeq          117
      86: aload_0
      87: getfield      #12                 // Field caseSensitive:Z
      90: aload_1
      91: iload         8
      93: aaload
      94: aload         7
      96: invokestatic  #132                // Method org/attoparser/util/TextUtil.equals:(Z[C[C)Z
      99: ifeq          111
     102: iload         5
     104: iconst_1
     105: iadd
     106: istore        6
     108: goto          117
     111: iinc          8, 1
     114: goto          78
     117: aload_0
     118: iinc          5, 1
     121: iload         5
     123: invokespecial #126                // Method peekFromStack:(I)[C
     126: astore        7
     128: goto          14
     131: iload         6
     133: istore        9
     135: iload         9
     137: iinc          9, -1
     140: ifeq          249
     143: aload_0
     144: invokespecial #52                 // Method popFromStack:()[C
     147: astore        7
     149: aload_0
     150: getfield      #25                 // Field requireBalancedElements:Z
     153: ifeq          203
     156: new           #53                 // class org/attoparser/ParseException
     159: dup
     160: new           #54                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     167: ldc           #56                 // String Malformed markup: element \"
     169: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: new           #58                 // class java/lang/String
     175: dup
     176: aload         7
     178: iconst_0
     179: aload         7
     181: arraylength
     182: invokespecial #59                 // Method java/lang/String."<init>":([CII)V
     185: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: ldc           #133                // String \" is not closed where it should be
     190: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: iload_3
     197: iload         4
     199: invokespecial #70                 // Method org/attoparser/ParseException."<init>":(Ljava/lang/String;II)V
     202: athrow
     203: aload_0
     204: getfield      #23                 // Field autoClose:Z
     207: ifeq          135
     210: aload_0
     211: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     214: aload         7
     216: iconst_0
     217: aload         7
     219: arraylength
     220: iload_3
     221: iload         4
     223: invokeinterface #127,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoCloseElementStart:([CIIII)V
     228: aload_0
     229: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     232: aload         7
     234: iconst_0
     235: aload         7
     237: arraylength
     238: iload_3
     239: iload         4
     241: invokeinterface #128,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoCloseElementEnd:([CIIII)V
     246: goto          135
     249: return

  private void autoOpen(char[][], char[][], int, int) throws org.attoparser.ParseException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field autoOpen:Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore        5
      11: aload_2
      12: ifnonnull     98
      15: aload_0
      16: getfield      #47                 // Field elementStackSize:I
      19: aload_1
      20: arraylength
      21: if_icmplt     25
      24: return
      25: aload_0
      26: iconst_0
      27: invokespecial #126                // Method peekFromStack:(I)[C
      30: astore        8
      32: aload         8
      34: ifnonnull     44
      37: aload_1
      38: arraylength
      39: istore        5
      41: goto          89
      44: aload_1
      45: arraylength
      46: istore        7
      48: aload         8
      50: ifnull        89
      53: iload         7
      55: iinc          7, -1
      58: ifeq          89
      61: aload_0
      62: getfield      #12                 // Field caseSensitive:Z
      65: aload_1
      66: iload         7
      68: aaload
      69: aload         8
      71: invokestatic  #132                // Method org/attoparser/util/TextUtil.equals:(Z[C[C)Z
      74: ifeq          48
      77: aload_1
      78: arraylength
      79: iload         7
      81: isub
      82: iconst_1
      83: isub
      84: istore        5
      86: goto          89
      89: iload         5
      91: ifne          95
      94: return
      95: goto          152
      98: aload_0
      99: iconst_0
     100: invokespecial #126                // Method peekFromStack:(I)[C
     103: astore        8
     105: aload         8
     107: ifnull        148
     110: iconst_0
     111: istore        6
     113: aload_2
     114: arraylength
     115: istore        7
     117: iload         7
     119: iinc          7, -1
     122: ifeq          148
     125: aload_0
     126: getfield      #12                 // Field caseSensitive:Z
     129: aload_2
     130: iload         6
     132: aaload
     133: aload         8
     135: invokestatic  #132                // Method org/attoparser/util/TextUtil.equals:(Z[C[C)Z
     138: ifeq          142
     141: return
     142: iinc          6, 1
     145: goto          117
     148: aload_1
     149: arraylength
     150: istore        5
     152: iload         5
     154: istore        7
     156: aload_1
     157: arraylength
     158: iload         5
     160: isub
     161: istore        6
     163: iload         7
     165: iinc          7, -1
     168: ifeq          235
     171: aload_0
     172: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     175: aload_1
     176: iload         6
     178: aaload
     179: iconst_0
     180: aload_1
     181: iload         6
     183: aaload
     184: arraylength
     185: iload_3
     186: iload         4
     188: invokeinterface #134,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoOpenElementStart:([CIIII)V
     193: aload_0
     194: invokevirtual #67                 // Method getNext:()Lorg/attoparser/IMarkupHandler;
     197: aload_1
     198: iload         6
     200: aaload
     201: iconst_0
     202: aload_1
     203: iload         6
     205: aaload
     206: arraylength
     207: iload_3
     208: iload         4
     210: invokeinterface #135,  6          // InterfaceMethod org/attoparser/IMarkupHandler.handleAutoOpenElementEnd:([CIIII)V
     215: aload_0
     216: aload_1
     217: iload         6
     219: aaload
     220: iconst_0
     221: aload_1
     222: iload         6
     224: aaload
     225: arraylength
     226: invokespecial #85                 // Method pushToStack:([CII)V
     229: iinc          6, 1
     232: goto          163
     235: return

  private void pushToStack(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #47                 // Field elementStackSize:I
       4: aload_0
       5: getfield      #46                 // Field elementStack:[[C
       8: arraylength
       9: if_icmpne     16
      12: aload_0
      13: invokespecial #136                // Method growStack:()V
      16: aload_0
      17: getfield      #46                 // Field elementStack:[[C
      20: aload_0
      21: getfield      #47                 // Field elementStackSize:I
      24: aload_0
      25: getfield      #50                 // Field structureNamesRepository:Lorg/attoparser/MarkupEventProcessorHandler$StructureNamesRepository;
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokevirtual #106                // Method org/attoparser/MarkupEventProcessorHandler$StructureNamesRepository.getStructureName:([CII)[C
      34: aastore
      35: aload_0
      36: dup
      37: getfield      #47                 // Field elementStackSize:I
      40: iconst_1
      41: iadd
      42: putfield      #47                 // Field elementStackSize:I
      45: return

  private char[] peekFromStack(int);
    Code:
       0: aload_0
       1: getfield      #47                 // Field elementStackSize:I
       4: iload_1
       5: if_icmpgt     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #46                 // Field elementStack:[[C
      14: aload_0
      15: getfield      #47                 // Field elementStackSize:I
      18: iconst_1
      19: isub
      20: iload_1
      21: isub
      22: aaload
      23: areturn

  private char[] popFromStack();
    Code:
       0: aload_0
       1: getfield      #47                 // Field elementStackSize:I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #46                 // Field elementStack:[[C
      13: aload_0
      14: getfield      #47                 // Field elementStackSize:I
      17: iconst_1
      18: isub
      19: aaload
      20: astore_1
      21: aload_0
      22: getfield      #46                 // Field elementStack:[[C
      25: aload_0
      26: getfield      #47                 // Field elementStackSize:I
      29: iconst_1
      30: isub
      31: aconst_null
      32: aastore
      33: aload_0
      34: dup
      35: getfield      #47                 // Field elementStackSize:I
      38: iconst_1
      39: isub
      40: putfield      #47                 // Field elementStackSize:I
      43: aload_1
      44: areturn

  private void growStack();
    Code:
       0: aload_0
       1: getfield      #46                 // Field elementStack:[[C
       4: arraylength
       5: bipush        10
       7: iadd
       8: istore_1
       9: iload_1
      10: anewarray     #45                 // class "[C"
      13: astore_2
      14: aload_0
      15: getfield      #46                 // Field elementStack:[[C
      18: iconst_0
      19: aload_2
      20: iconst_0
      21: aload_0
      22: getfield      #46                 // Field elementStack:[[C
      25: arraylength
      26: invokestatic  #105                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_0
      30: aload_2
      31: putfield      #46                 // Field elementStack:[[C
      34: return
}
