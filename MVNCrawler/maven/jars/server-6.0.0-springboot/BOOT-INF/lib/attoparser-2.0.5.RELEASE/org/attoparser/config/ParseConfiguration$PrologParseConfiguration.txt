Compiled from "ParseConfiguration.java"
public class org.attoparser.config.ParseConfiguration$PrologParseConfiguration implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private boolean validateProlog;

  private org.attoparser.config.ParseConfiguration$PrologPresence prologPresence;

  private org.attoparser.config.ParseConfiguration$PrologPresence xmlDeclarationPresence;

  private org.attoparser.config.ParseConfiguration$PrologPresence doctypePresence;

  private boolean requireDoctypeKeywordsUpperCase;

  protected org.attoparser.config.ParseConfiguration$PrologParseConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field validateProlog:Z
       9: aload_0
      10: getstatic     #3                  // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      13: putfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      16: aload_0
      17: getstatic     #3                  // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      20: putfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      23: aload_0
      24: getstatic     #3                  // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      27: putfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      30: aload_0
      31: iconst_1
      32: putfield      #7                  // Field requireDoctypeKeywordsUpperCase:Z
      35: return

  public boolean isValidateProlog();
    Code:
       0: aload_0
       1: getfield      #2                  // Field validateProlog:Z
       4: ireturn

  public void setValidateProlog(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field validateProlog:Z
       5: return

  public org.attoparser.config.ParseConfiguration$PrologPresence getPrologPresence();
    Code:
       0: aload_0
       1: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
       4: areturn

  public void setPrologPresence(org.attoparser.config.ParseConfiguration$PrologPresence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
       4: ldc           #8                  // String Prolog presence cannot be null
       6: invokestatic  #9                  // Method org/attoparser/config/ParseConfiguration.access$000:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      14: return

  public org.attoparser.config.ParseConfiguration$PrologPresence getXmlDeclarationPresence();
    Code:
       0: aload_0
       1: getfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
       4: areturn

  public void setXmlDeclarationPresence(org.attoparser.config.ParseConfiguration$PrologPresence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
       4: ldc           #10                 // String XML Declaration presence cannot be null
       6: invokestatic  #9                  // Method org/attoparser/config/ParseConfiguration.access$000:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      14: return

  public org.attoparser.config.ParseConfiguration$PrologPresence getDoctypePresence();
    Code:
       0: aload_0
       1: getfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
       4: areturn

  public void setDoctypePresence(org.attoparser.config.ParseConfiguration$PrologPresence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
       4: ldc           #11                 // String DOCTYPE presence cannot be null
       6: invokestatic  #9                  // Method org/attoparser/config/ParseConfiguration.access$000:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      14: return

  public boolean isRequireDoctypeKeywordsUpperCase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requireDoctypeKeywordsUpperCase:Z
       4: ireturn

  public void setRequireDoctypeKeywordsUpperCase(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field requireDoctypeKeywordsUpperCase:Z
       5: return

  public void validateConfiguration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field validateProlog:Z
       4: ifne          8
       7: return
       8: getstatic     #12                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.FORBIDDEN:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      11: aload_0
      12: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      15: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      18: ifeq          48
      21: getstatic     #12                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.FORBIDDEN:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      24: aload_0
      25: getfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      28: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      31: ifeq          115
      34: getstatic     #12                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.FORBIDDEN:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      37: aload_0
      38: getfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      41: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      44: ifeq          115
      47: return
      48: getstatic     #14                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.REQUIRED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      51: aload_0
      52: getfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      55: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      58: ifne          74
      61: getstatic     #14                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.REQUIRED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      64: aload_0
      65: getfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      68: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      71: ifeq          75
      74: return
      75: getstatic     #3                  // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      78: aload_0
      79: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      82: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      85: ifeq          115
      88: getstatic     #12                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.FORBIDDEN:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      91: aload_0
      92: getfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      95: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
      98: ifeq          114
     101: getstatic     #12                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.FORBIDDEN:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     104: aload_0
     105: getfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     108: invokevirtual #13                 // Method org/attoparser/config/ParseConfiguration$PrologPresence.equals:(Ljava/lang/Object;)Z
     111: ifne          115
     114: return
     115: new           #15                 // class java/lang/IllegalArgumentException
     118: dup
     119: new           #16                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #18                 // String Prolog parsing configuration is not valid: Prolog presence:
     128: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     135: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: ldc           #21                 // String , XML Declaration presence:
     140: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: getfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     147: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     150: ldc           #22                 // String , DOCTYPE presence:
     152: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_0
     156: getfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     159: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     162: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     168: athrow

  public org.attoparser.config.ParseConfiguration$PrologParseConfiguration clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #26                 // class org/attoparser/config/ParseConfiguration$PrologParseConfiguration
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field validateProlog:Z
      13: putfield      #2                  // Field validateProlog:Z
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      21: putfield      #4                  // Field prologPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      29: putfield      #6                  // Field doctypePresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      32: aload_1
      33: aload_0
      34: getfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      37: putfield      #5                  // Field xmlDeclarationPresence:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      40: aload_1
      41: aload_0
      42: getfield      #7                  // Field requireDoctypeKeywordsUpperCase:Z
      45: putfield      #7                  // Field requireDoctypeKeywordsUpperCase:Z
      48: aload_1
      49: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
       4: areturn
}
