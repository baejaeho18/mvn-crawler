Compiled from "HtmlCDATAContentElement.java"
class org.attoparser.HtmlCDATAContentElement extends org.attoparser.HtmlElement {
  private static final char[] ELEMENT_SCRIPT_NAME;

  private static final char[] ATTRIBUTE_TYPE_NAME;

  private static final char[] ATTRIBUTE_TYPE_JAVASCRIPT_VALUE;

  private static final char[] ATTRIBUTE_TYPE_ECMASCRIPT_VALUE;

  private static final char[] ATTRIBUTE_TYPE_TEXT_JAVASCRIPT_VALUE;

  private static final char[] ATTRIBUTE_TYPE_TEXT_ECMASCRIPT_VALUE;

  private static final char[] ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE;

  private static final char[] ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE;

  private final char[] nameLower;

  private final char[] nameUpper;

  private final char[] limitSequenceLower;

  private final char[] limitSequenceUpper;

  public org.attoparser.HtmlCDATAContentElement(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/attoparser/HtmlElement."<init>":(Ljava/lang/String;)V
       5: aload_1
       6: invokevirtual #2                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       9: astore_2
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      14: astore_3
      15: aload_0
      16: aload_2
      17: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      20: putfield      #5                  // Field nameLower:[C
      23: aload_0
      24: aload_3
      25: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      28: putfield      #6                  // Field nameUpper:[C
      31: aload_0
      32: new           #7                  // class java/lang/StringBuilder
      35: dup
      36: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #9                  // String </
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_2
      45: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #11                 // String >
      50: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      59: putfield      #13                 // Field limitSequenceLower:[C
      62: aload_0
      63: new           #7                  // class java/lang/StringBuilder
      66: dup
      67: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #9                  // String </
      72: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_3
      76: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #11                 // String >
      81: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      90: putfield      #14                 // Field limitSequenceUpper:[C
      93: return

  public void handleOpenElementStart(char[], int, int, int, int, org.attoparser.IMarkupHandler, org.attoparser.ParseStatus, boolean, boolean) throws org.attoparser.ParseException;
    Code:
       0: aload         7
       2: iconst_1
       3: putfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
       6: aload         6
       8: aload_1
       9: iload_2
      10: iload_3
      11: iload         4
      13: iload         5
      15: invokeinterface #16,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleOpenElementStart:([CIIII)V
      20: return

  public void handleOpenElementEnd(char[], int, int, int, int, org.attoparser.IMarkupHandler, org.attoparser.ParseStatus, boolean, boolean) throws org.attoparser.ParseException;
    Code:
       0: aload         6
       2: aload_1
       3: iload_2
       4: iload_3
       5: iload         4
       7: iload         5
       9: invokeinterface #17,  6           // InterfaceMethod org/attoparser/IMarkupHandler.handleOpenElementEnd:([CIIII)V
      14: aload         7
      16: getfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
      19: ifeq          40
      22: aload         7
      24: aload_0
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokespecial #18                 // Method computeLimitSequence:([CII)[C
      31: invokevirtual #19                 // Method org/attoparser/ParseStatus.setParsingDisabled:([C)V
      34: aload         7
      36: iconst_0
      37: putfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
      40: return

  public void handleAttribute(char[], int, int, int, int, int, int, int, int, int, int, int, int, int, int, org.attoparser.IMarkupHandler, org.attoparser.ParseStatus, boolean, boolean) throws org.attoparser.ParseException;
    Code:
       0: iconst_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: getstatic     #20                 // Field ATTRIBUTE_TYPE_NAME:[C
       7: iconst_0
       8: getstatic     #20                 // Field ATTRIBUTE_TYPE_NAME:[C
      11: arraylength
      12: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
      15: ifeq          233
      18: iconst_1
      19: aload_0
      20: getfield      #5                  // Field nameLower:[C
      23: iconst_0
      24: aload_0
      25: getfield      #5                  // Field nameLower:[C
      28: arraylength
      29: getstatic     #22                 // Field ELEMENT_SCRIPT_NAME:[C
      32: iconst_0
      33: getstatic     #22                 // Field ELEMENT_SCRIPT_NAME:[C
      36: arraylength
      37: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
      40: ifeq          233
      43: aload         17
      45: iconst_0
      46: putfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
      49: iconst_0
      50: aload_1
      51: iload         10
      53: iload         11
      55: getstatic     #23                 // Field ATTRIBUTE_TYPE_JAVASCRIPT_VALUE:[C
      58: iconst_0
      59: getstatic     #23                 // Field ATTRIBUTE_TYPE_JAVASCRIPT_VALUE:[C
      62: arraylength
      63: invokestatic  #24                 // Method org/attoparser/util/TextUtil.endsWith:(Z[CII[CII)Z
      66: ifne          89
      69: iconst_0
      70: aload_1
      71: iload         10
      73: iload         11
      75: getstatic     #25                 // Field ATTRIBUTE_TYPE_ECMASCRIPT_VALUE:[C
      78: iconst_0
      79: getstatic     #25                 // Field ATTRIBUTE_TYPE_ECMASCRIPT_VALUE:[C
      82: arraylength
      83: invokestatic  #24                 // Method org/attoparser/util/TextUtil.endsWith:(Z[CII[CII)Z
      86: ifeq          233
      89: iconst_0
      90: aload_1
      91: iload         10
      93: iload         11
      95: getstatic     #23                 // Field ATTRIBUTE_TYPE_JAVASCRIPT_VALUE:[C
      98: iconst_0
      99: getstatic     #23                 // Field ATTRIBUTE_TYPE_JAVASCRIPT_VALUE:[C
     102: arraylength
     103: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     106: ifne          129
     109: iconst_0
     110: aload_1
     111: iload         10
     113: iload         11
     115: getstatic     #25                 // Field ATTRIBUTE_TYPE_ECMASCRIPT_VALUE:[C
     118: iconst_0
     119: getstatic     #25                 // Field ATTRIBUTE_TYPE_ECMASCRIPT_VALUE:[C
     122: arraylength
     123: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     126: ifeq          138
     129: aload         17
     131: iconst_1
     132: putfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
     135: goto          233
     138: iconst_0
     139: aload_1
     140: iload         10
     142: iload         11
     144: getstatic     #26                 // Field ATTRIBUTE_TYPE_TEXT_JAVASCRIPT_VALUE:[C
     147: iconst_0
     148: getstatic     #26                 // Field ATTRIBUTE_TYPE_TEXT_JAVASCRIPT_VALUE:[C
     151: arraylength
     152: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     155: ifne          178
     158: iconst_0
     159: aload_1
     160: iload         10
     162: iload         11
     164: getstatic     #27                 // Field ATTRIBUTE_TYPE_TEXT_ECMASCRIPT_VALUE:[C
     167: iconst_0
     168: getstatic     #27                 // Field ATTRIBUTE_TYPE_TEXT_ECMASCRIPT_VALUE:[C
     171: arraylength
     172: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     175: ifeq          187
     178: aload         17
     180: iconst_1
     181: putfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
     184: goto          233
     187: iconst_0
     188: aload_1
     189: iload         10
     191: iload         11
     193: getstatic     #28                 // Field ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE:[C
     196: iconst_0
     197: getstatic     #28                 // Field ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE:[C
     200: arraylength
     201: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     204: ifne          227
     207: iconst_0
     208: aload_1
     209: iload         10
     211: iload         11
     213: getstatic     #29                 // Field ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE:[C
     216: iconst_0
     217: getstatic     #29                 // Field ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE:[C
     220: arraylength
     221: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
     224: ifeq          233
     227: aload         17
     229: iconst_1
     230: putfield      #15                 // Field org/attoparser/ParseStatus.shouldDisableParsing:Z
     233: aload         16
     235: aload_1
     236: iload_2
     237: iload_3
     238: iload         4
     240: iload         5
     242: iload         6
     244: iload         7
     246: iload         8
     248: iload         9
     250: iload         10
     252: iload         11
     254: iload         12
     256: iload         13
     258: iload         14
     260: iload         15
     262: invokeinterface #30,  16          // InterfaceMethod org/attoparser/IMarkupHandler.handleAttribute:([CIIIIIIIIIIIIII)V
     267: return

  private char[] computeLimitSequence(char[], int, int);
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #5                  // Field nameLower:[C
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field nameLower:[C
      10: arraylength
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
      17: ifeq          25
      20: aload_0
      21: getfield      #13                 // Field limitSequenceLower:[C
      24: areturn
      25: iconst_1
      26: aload_0
      27: getfield      #6                  // Field nameUpper:[C
      30: iconst_0
      31: aload_0
      32: getfield      #6                  // Field nameUpper:[C
      35: arraylength
      36: aload_1
      37: iload_2
      38: iload_3
      39: invokestatic  #21                 // Method org/attoparser/util/TextUtil.equals:(Z[CII[CII)Z
      42: ifeq          50
      45: aload_0
      46: getfield      #14                 // Field limitSequenceUpper:[C
      49: areturn
      50: iload_3
      51: iconst_3
      52: iadd
      53: newarray       char
      55: astore        4
      57: aload         4
      59: iconst_0
      60: bipush        60
      62: castore
      63: aload         4
      65: iconst_1
      66: bipush        47
      68: castore
      69: aload_1
      70: iload_2
      71: aload         4
      73: iconst_2
      74: iload_3
      75: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload         4
      80: iload_3
      81: iconst_2
      82: iadd
      83: bipush        62
      85: castore
      86: aload         4
      88: areturn

  static {};
    Code:
       0: ldc           #32                 // String script
       2: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
       5: putstatic     #22                 // Field ELEMENT_SCRIPT_NAME:[C
       8: ldc           #33                 // String type
      10: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      13: putstatic     #20                 // Field ATTRIBUTE_TYPE_NAME:[C
      16: ldc           #34                 // String javascript
      18: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      21: putstatic     #23                 // Field ATTRIBUTE_TYPE_JAVASCRIPT_VALUE:[C
      24: ldc           #35                 // String ecmascript
      26: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      29: putstatic     #25                 // Field ATTRIBUTE_TYPE_ECMASCRIPT_VALUE:[C
      32: ldc           #36                 // String text/javascript
      34: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      37: putstatic     #26                 // Field ATTRIBUTE_TYPE_TEXT_JAVASCRIPT_VALUE:[C
      40: ldc           #37                 // String text/ecmascript
      42: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      45: putstatic     #27                 // Field ATTRIBUTE_TYPE_TEXT_ECMASCRIPT_VALUE:[C
      48: ldc           #38                 // String application/javascript
      50: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      53: putstatic     #28                 // Field ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE:[C
      56: ldc           #39                 // String application/ecmascript
      58: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      61: putstatic     #29                 // Field ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE:[C
      64: return
}
