Compiled from "Element.java"
public class org.attoparser.dom.Element extends org.attoparser.dom.AbstractNestableNode implements java.io.Serializable {
  private static final long serialVersionUID;

  private java.lang.String elementName;

  private java.util.Map<java.lang.String, java.lang.String> attributes;

  private int attributesLen;

  public org.attoparser.dom.Element(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/attoparser/dom/AbstractNestableNode."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field attributes:Ljava/util/Map;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field attributesLen:I
      14: aload_1
      15: ifnonnull     28
      18: new           #4                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #5                  // String Element name cannot be null
      24: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #7                  // Field elementName:Ljava/lang/String;
      33: return

  public java.lang.String getElementName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field elementName:Ljava/lang/String;
       4: areturn

  public void setElementName(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #5                  // String Element name cannot be null
      10: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field elementName:Ljava/lang/String;
      19: return

  public boolean elementNameMatches(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field elementName:Ljava/lang/String;
       4: aload_1
       5: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  public int numAttributes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ireturn

  public boolean hasAttributes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ifle          18
       7: aload_0
       8: getfield      #2                  // Field attributes:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #9,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ireturn
      18: iconst_0
      19: ireturn

  public java.lang.String getAttributeValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ifle          21
       7: aload_0
       8: getfield      #2                  // Field attributes:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #11                 // class java/lang/String
      20: areturn
      21: aconst_null
      22: areturn

  public java.util.Map<java.lang.String, java.lang.String> getAttributeMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ifle          15
       7: aload_0
       8: getfield      #2                  // Field attributes:Ljava/util/Map;
      11: invokestatic  #12                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      14: areturn
      15: invokestatic  #13                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      18: areturn

  public void addAttribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ifne          18
       7: aload_0
       8: new           #14                 // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #2                  // Field attributes:Ljava/util/Map;
      18: aload_0
      19: getfield      #2                  // Field attributes:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: dup
      32: getfield      #3                  // Field attributesLen:I
      35: iconst_1
      36: iadd
      37: putfield      #3                  // Field attributesLen:I
      40: return

  public void addAttributes(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        47
       4: aload_0
       5: getfield      #3                  // Field attributesLen:I
       8: ifne          22
      11: aload_0
      12: new           #14                 // class java/util/LinkedHashMap
      15: dup
      16: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":()V
      19: putfield      #2                  // Field attributes:Ljava/util/Map;
      22: aload_0
      23: getfield      #2                  // Field attributes:Ljava/util/Map;
      26: aload_1
      27: invokeinterface #17,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      32: aload_0
      33: dup
      34: getfield      #3                  // Field attributesLen:I
      37: aload_1
      38: invokeinterface #18,  1           // InterfaceMethod java/util/Map.size:()I
      43: iadd
      44: putfield      #3                  // Field attributesLen:I
      47: return

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributesLen:I
       4: ifle          53
       7: aload_0
       8: getfield      #2                  // Field attributes:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #9,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          53
      20: aload_0
      21: getfield      #2                  // Field attributes:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #19,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: dup
      33: getfield      #3                  // Field attributesLen:I
      36: iconst_1
      37: isub
      38: putfield      #3                  // Field attributesLen:I
      41: aload_0
      42: getfield      #3                  // Field attributesLen:I
      45: ifne          53
      48: aload_0
      49: aconst_null
      50: putfield      #2                  // Field attributes:Ljava/util/Map;
      53: return

  public void clearAttributes();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field attributes:Ljava/util/Map;
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field attributesLen:I
      10: return

  public org.attoparser.dom.Element cloneNode(org.attoparser.dom.INestableNode);
    Code:
       0: new           #20                 // class org/attoparser/dom/Element
       3: dup
       4: aload_0
       5: getfield      #7                  // Field elementName:Ljava/lang/String;
       8: invokespecial #21                 // Method "<init>":(Ljava/lang/String;)V
      11: astore_2
      12: aload_2
      13: aload_0
      14: getfield      #2                  // Field attributes:Ljava/util/Map;
      17: invokevirtual #22                 // Method addAttributes:(Ljava/util/Map;)V
      20: aload_0
      21: invokevirtual #23                 // Method getChildren:()Ljava/util/List;
      24: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          69
      39: aload_3
      40: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #27                 // class org/attoparser/dom/INode
      48: astore        4
      50: aload         4
      52: aload_2
      53: invokeinterface #28,  2           // InterfaceMethod org/attoparser/dom/INode.cloneNode:(Lorg/attoparser/dom/INestableNode;)Lorg/attoparser/dom/INode;
      58: astore        5
      60: aload_2
      61: aload         5
      63: invokevirtual #29                 // Method addChild:(Lorg/attoparser/dom/INode;)V
      66: goto          30
      69: aload_2
      70: aload_0
      71: invokevirtual #30                 // Method getLine:()Ljava/lang/Integer;
      74: invokevirtual #31                 // Method setLine:(Ljava/lang/Integer;)V
      77: aload_2
      78: aload_0
      79: invokevirtual #32                 // Method getCol:()Ljava/lang/Integer;
      82: invokevirtual #33                 // Method setCol:(Ljava/lang/Integer;)V
      85: aload_2
      86: aload_1
      87: invokevirtual #34                 // Method setParent:(Lorg/attoparser/dom/INestableNode;)V
      90: aload_2
      91: areturn

  public void addChild(org.attoparser.dom.INode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method org/attoparser/dom/AbstractNestableNode.addChild:(Lorg/attoparser/dom/INode;)V
       5: return

  public org.attoparser.dom.INode getFirstChildOfType(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method org/attoparser/dom/AbstractNestableNode.getFirstChildOfType:(Ljava/lang/Class;)Lorg/attoparser/dom/INode;
       5: areturn

  public org.attoparser.dom.INode getFirstChild();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/attoparser/dom/AbstractNestableNode.getFirstChild:()Lorg/attoparser/dom/INode;
       4: areturn

  public java.util.List getChildrenOfType(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method org/attoparser/dom/AbstractNestableNode.getChildrenOfType:(Ljava/lang/Class;)Ljava/util/List;
       5: areturn

  public java.util.List getChildren();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/attoparser/dom/AbstractNestableNode.getChildren:()Ljava/util/List;
       4: areturn

  public int numChildren();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/attoparser/dom/AbstractNestableNode.numChildren:()I
       4: ireturn

  public boolean hasChildren();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/attoparser/dom/AbstractNestableNode.hasChildren:()Z
       4: ireturn

  public org.attoparser.dom.INode cloneNode(org.attoparser.dom.INestableNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method cloneNode:(Lorg/attoparser/dom/INestableNode;)Lorg/attoparser/dom/Element;
       5: areturn

  public void setParent(org.attoparser.dom.INestableNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method org/attoparser/dom/AbstractNestableNode.setParent:(Lorg/attoparser/dom/INestableNode;)V
       5: return

  public org.attoparser.dom.INestableNode getParent();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/attoparser/dom/AbstractNestableNode.getParent:()Lorg/attoparser/dom/INestableNode;
       4: areturn

  public boolean hasParent();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method org/attoparser/dom/AbstractNestableNode.hasParent:()Z
       4: ireturn

  public void setCol(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method org/attoparser/dom/AbstractNestableNode.setCol:(Ljava/lang/Integer;)V
       5: return

  public java.lang.Integer getCol();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method org/attoparser/dom/AbstractNestableNode.getCol:()Ljava/lang/Integer;
       4: areturn

  public boolean hasCol();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method org/attoparser/dom/AbstractNestableNode.hasCol:()Z
       4: ireturn

  public void setLine(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #49                 // Method org/attoparser/dom/AbstractNestableNode.setLine:(Ljava/lang/Integer;)V
       5: return

  public java.lang.Integer getLine();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method org/attoparser/dom/AbstractNestableNode.getLine:()Ljava/lang/Integer;
       4: areturn

  public boolean hasLine();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method org/attoparser/dom/AbstractNestableNode.hasLine:()Z
       4: ireturn
}
