Compiled from "ParseConfiguration.java"
public final class org.attoparser.config.ParseConfiguration implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private static final org.attoparser.config.ParseConfiguration DEFAULT_HTML_PARSE_CONFIGURATION;

  private static final org.attoparser.config.ParseConfiguration DEFAULT_XML_PARSE_CONFIGURATION;

  private org.attoparser.config.ParseConfiguration$ParsingMode mode;

  private boolean caseSensitive;

  private boolean textSplittable;

  private org.attoparser.config.ParseConfiguration$ElementBalancing elementBalancing;

  private boolean noUnmatchedCloseElementsRequired;

  private boolean xmlWellFormedAttributeValuesRequired;

  private boolean uniqueAttributesInElementRequired;

  private org.attoparser.config.ParseConfiguration$PrologParseConfiguration prologParseConfiguration;

  private org.attoparser.config.ParseConfiguration$UniqueRootElementPresence uniqueRootElementPresence;

  public static org.attoparser.config.ParseConfiguration htmlConfiguration();
    Code:
       0: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
       3: invokevirtual #3                  // Method clone:()Lorg/attoparser/config/ParseConfiguration;
       6: areturn
       7: astore_0
       8: new           #5                  // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/CloneNotSupportedException

  public static org.attoparser.config.ParseConfiguration xmlConfiguration();
    Code:
       0: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
       3: invokevirtual #3                  // Method clone:()Lorg/attoparser/config/ParseConfiguration;
       6: areturn
       7: astore_0
       8: new           #5                  // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/CloneNotSupportedException

  private org.attoparser.config.ParseConfiguration();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #9                  // Field org/attoparser/config/ParseConfiguration$ParsingMode.XML:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
       8: putfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
      11: aload_0
      12: iconst_1
      13: putfield      #11                 // Field caseSensitive:Z
      16: aload_0
      17: iconst_0
      18: putfield      #12                 // Field textSplittable:Z
      21: aload_0
      22: getstatic     #13                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.NO_BALANCING:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      25: putfield      #14                 // Field elementBalancing:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      28: aload_0
      29: iconst_0
      30: putfield      #15                 // Field noUnmatchedCloseElementsRequired:Z
      33: aload_0
      34: iconst_0
      35: putfield      #16                 // Field xmlWellFormedAttributeValuesRequired:Z
      38: aload_0
      39: iconst_0
      40: putfield      #17                 // Field uniqueAttributesInElementRequired:Z
      43: aload_0
      44: new           #18                 // class org/attoparser/config/ParseConfiguration$PrologParseConfiguration
      47: dup
      48: invokespecial #19                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration."<init>":()V
      51: putfield      #20                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      54: aload_0
      55: getstatic     #21                 // Field org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.DEPENDS_ON_PROLOG_DOCTYPE:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      58: putfield      #22                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      61: return

  public org.attoparser.config.ParseConfiguration$ParsingMode getMode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
       4: areturn

  public void setMode(org.attoparser.config.ParseConfiguration$ParsingMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
       5: getstatic     #23                 // Field org/attoparser/config/ParseConfiguration$ParsingMode.HTML:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
       8: aload_0
       9: getfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
      12: invokevirtual #24                 // Method org/attoparser/config/ParseConfiguration$ParsingMode.equals:(Ljava/lang/Object;)Z
      15: ifeq          23
      18: aload_0
      19: iconst_0
      20: putfield      #11                 // Field caseSensitive:Z
      23: return

  public boolean isCaseSensitive();
    Code:
       0: aload_0
       1: getfield      #11                 // Field caseSensitive:Z
       4: ireturn

  public void setCaseSensitive(boolean);
    Code:
       0: iload_1
       1: ifeq          27
       4: getstatic     #23                 // Field org/attoparser/config/ParseConfiguration$ParsingMode.HTML:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
       7: aload_0
       8: getfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
      11: invokevirtual #24                 // Method org/attoparser/config/ParseConfiguration$ParsingMode.equals:(Ljava/lang/Object;)Z
      14: ifeq          27
      17: new           #25                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #26                 // String Cannot set parser as case-sensitive for HTML mode. Use XML mode instead.
      23: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: putfield      #11                 // Field caseSensitive:Z
      32: return

  public boolean isTextSplittable();
    Code:
       0: aload_0
       1: getfield      #12                 // Field textSplittable:Z
       4: ireturn

  public void setTextSplittable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field textSplittable:Z
       5: return

  public org.attoparser.config.ParseConfiguration$ElementBalancing getElementBalancing();
    Code:
       0: aload_0
       1: getfield      #14                 // Field elementBalancing:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
       4: areturn

  public void setElementBalancing(org.attoparser.config.ParseConfiguration$ElementBalancing);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field elementBalancing:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
       5: return

  public org.attoparser.config.ParseConfiguration$PrologParseConfiguration getPrologParseConfiguration();
    Code:
       0: aload_0
       1: getfield      #20                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
       4: areturn

  public boolean isNoUnmatchedCloseElementsRequired();
    Code:
       0: aload_0
       1: getfield      #15                 // Field noUnmatchedCloseElementsRequired:Z
       4: ireturn

  public void setNoUnmatchedCloseElementsRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field noUnmatchedCloseElementsRequired:Z
       5: return

  public boolean isXmlWellFormedAttributeValuesRequired();
    Code:
       0: aload_0
       1: getfield      #16                 // Field xmlWellFormedAttributeValuesRequired:Z
       4: ireturn

  public void setXmlWellFormedAttributeValuesRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field xmlWellFormedAttributeValuesRequired:Z
       5: return

  public boolean isUniqueAttributesInElementRequired();
    Code:
       0: aload_0
       1: getfield      #17                 // Field uniqueAttributesInElementRequired:Z
       4: ireturn

  public void setUniqueAttributesInElementRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field uniqueAttributesInElementRequired:Z
       5: return

  public org.attoparser.config.ParseConfiguration$UniqueRootElementPresence getUniqueRootElementPresence();
    Code:
       0: aload_0
       1: getfield      #22                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
       4: areturn

  public void setUniqueRootElementPresence(org.attoparser.config.ParseConfiguration$UniqueRootElementPresence);
    Code:
       0: aload_1
       1: ldc           #28                 // String The \"unique root element presence\" configuration value cannot be null
       3: invokestatic  #1                  // Method validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #22                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      11: return

  public org.attoparser.config.ParseConfiguration clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #30                 // class org/attoparser/config/ParseConfiguration
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
      13: putfield      #10                 // Field mode:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
      16: aload_1
      17: aload_0
      18: getfield      #11                 // Field caseSensitive:Z
      21: putfield      #11                 // Field caseSensitive:Z
      24: aload_1
      25: aload_0
      26: getfield      #14                 // Field elementBalancing:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      29: putfield      #14                 // Field elementBalancing:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      32: aload_1
      33: aload_0
      34: getfield      #17                 // Field uniqueAttributesInElementRequired:Z
      37: putfield      #17                 // Field uniqueAttributesInElementRequired:Z
      40: aload_1
      41: aload_0
      42: getfield      #16                 // Field xmlWellFormedAttributeValuesRequired:Z
      45: putfield      #16                 // Field xmlWellFormedAttributeValuesRequired:Z
      48: aload_1
      49: aload_0
      50: getfield      #22                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      53: putfield      #22                 // Field uniqueRootElementPresence:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      56: aload_1
      57: aload_0
      58: getfield      #20                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      61: invokevirtual #31                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.clone:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      64: putfield      #20                 // Field prologParseConfiguration:Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      67: aload_1
      68: areturn

  private static void validateNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     13
       4: new           #25                 // class java/lang/IllegalArgumentException
       7: dup
       8: aload_1
       9: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method clone:()Lorg/attoparser/config/ParseConfiguration;
       4: areturn

  static void access$000(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       5: return

  static {};
    Code:
       0: new           #30                 // class org/attoparser/config/ParseConfiguration
       3: dup
       4: invokespecial #32                 // Method "<init>":()V
       7: putstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      10: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      13: getstatic     #23                 // Field org/attoparser/config/ParseConfiguration$ParsingMode.HTML:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
      16: invokevirtual #33                 // Method setMode:(Lorg/attoparser/config/ParseConfiguration$ParsingMode;)V
      19: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      22: iconst_0
      23: invokevirtual #34                 // Method setTextSplittable:(Z)V
      26: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      29: getstatic     #35                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.AUTO_CLOSE:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
      32: invokevirtual #36                 // Method setElementBalancing:(Lorg/attoparser/config/ParseConfiguration$ElementBalancing;)V
      35: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      38: iconst_0
      39: invokevirtual #37                 // Method setNoUnmatchedCloseElementsRequired:(Z)V
      42: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      45: iconst_0
      46: invokevirtual #38                 // Method setUniqueAttributesInElementRequired:(Z)V
      49: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      52: iconst_0
      53: invokevirtual #39                 // Method setXmlWellFormedAttributeValuesRequired:(Z)V
      56: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      59: getstatic     #40                 // Field org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.NOT_VALIDATED:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
      62: invokevirtual #41                 // Method setUniqueRootElementPresence:(Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;)V
      65: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      68: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      71: iconst_0
      72: invokevirtual #43                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setValidateProlog:(Z)V
      75: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      78: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      81: getstatic     #44                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      84: invokevirtual #45                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setPrologPresence:(Lorg/attoparser/config/ParseConfiguration$PrologPresence;)V
      87: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
      90: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
      93: getstatic     #44                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
      96: invokevirtual #46                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setXmlDeclarationPresence:(Lorg/attoparser/config/ParseConfiguration$PrologPresence;)V
      99: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     102: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     105: getstatic     #44                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     108: invokevirtual #47                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setDoctypePresence:(Lorg/attoparser/config/ParseConfiguration$PrologPresence;)V
     111: getstatic     #2                  // Field DEFAULT_HTML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     114: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     117: iconst_0
     118: invokevirtual #48                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setRequireDoctypeKeywordsUpperCase:(Z)V
     121: new           #30                 // class org/attoparser/config/ParseConfiguration
     124: dup
     125: invokespecial #32                 // Method "<init>":()V
     128: putstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     131: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     134: getstatic     #9                  // Field org/attoparser/config/ParseConfiguration$ParsingMode.XML:Lorg/attoparser/config/ParseConfiguration$ParsingMode;
     137: invokevirtual #33                 // Method setMode:(Lorg/attoparser/config/ParseConfiguration$ParsingMode;)V
     140: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     143: iconst_0
     144: invokevirtual #34                 // Method setTextSplittable:(Z)V
     147: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     150: getstatic     #49                 // Field org/attoparser/config/ParseConfiguration$ElementBalancing.REQUIRE_BALANCED:Lorg/attoparser/config/ParseConfiguration$ElementBalancing;
     153: invokevirtual #36                 // Method setElementBalancing:(Lorg/attoparser/config/ParseConfiguration$ElementBalancing;)V
     156: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     159: iconst_1
     160: invokevirtual #37                 // Method setNoUnmatchedCloseElementsRequired:(Z)V
     163: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     166: iconst_1
     167: invokevirtual #38                 // Method setUniqueAttributesInElementRequired:(Z)V
     170: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     173: iconst_1
     174: invokevirtual #39                 // Method setXmlWellFormedAttributeValuesRequired:(Z)V
     177: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     180: getstatic     #21                 // Field org/attoparser/config/ParseConfiguration$UniqueRootElementPresence.DEPENDS_ON_PROLOG_DOCTYPE:Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;
     183: invokevirtual #41                 // Method setUniqueRootElementPresence:(Lorg/attoparser/config/ParseConfiguration$UniqueRootElementPresence;)V
     186: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     189: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     192: iconst_1
     193: invokevirtual #43                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setValidateProlog:(Z)V
     196: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     199: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     202: getstatic     #44                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     205: invokevirtual #45                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setPrologPresence:(Lorg/attoparser/config/ParseConfiguration$PrologPresence;)V
     208: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     211: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     214: getstatic     #44                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     217: invokevirtual #46                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setXmlDeclarationPresence:(Lorg/attoparser/config/ParseConfiguration$PrologPresence;)V
     220: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     223: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     226: getstatic     #44                 // Field org/attoparser/config/ParseConfiguration$PrologPresence.ALLOWED:Lorg/attoparser/config/ParseConfiguration$PrologPresence;
     229: invokevirtual #47                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setDoctypePresence:(Lorg/attoparser/config/ParseConfiguration$PrologPresence;)V
     232: getstatic     #7                  // Field DEFAULT_XML_PARSE_CONFIGURATION:Lorg/attoparser/config/ParseConfiguration;
     235: invokevirtual #42                 // Method getPrologParseConfiguration:()Lorg/attoparser/config/ParseConfiguration$PrologParseConfiguration;
     238: iconst_1
     239: invokevirtual #48                 // Method org/attoparser/config/ParseConfiguration$PrologParseConfiguration.setRequireDoctypeKeywordsUpperCase:(Z)V
     242: return
}
