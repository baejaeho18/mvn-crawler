Compiled from "ExternalMetricSourceFluent.java"
public interface io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent<A extends io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getMetricName();

  public abstract A withMetricName(java.lang.String);

  public abstract java.lang.Boolean hasMetricName();

  public abstract A withNewMetricName(java.lang.String);

  public abstract A withNewMetricName(java.lang.StringBuilder);

  public abstract A withNewMetricName(java.lang.StringBuffer);

  public abstract io.fabric8.kubernetes.api.model.LabelSelector getMetricSelector();

  public abstract io.fabric8.kubernetes.api.model.LabelSelector buildMetricSelector();

  public abstract A withMetricSelector(io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract java.lang.Boolean hasMetricSelector();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent$MetricSelectorNested<A> withNewMetricSelector();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent$MetricSelectorNested<A> withNewMetricSelectorLike(io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent$MetricSelectorNested<A> editMetricSelector();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent$MetricSelectorNested<A> editOrNewMetricSelector();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.ExternalMetricSourceFluent$MetricSelectorNested<A> editOrNewMetricSelectorLike(io.fabric8.kubernetes.api.model.LabelSelector);

  public abstract io.fabric8.kubernetes.api.model.Quantity getTargetAverageValue();

  public abstract A withTargetAverageValue(io.fabric8.kubernetes.api.model.Quantity);

  public abstract java.lang.Boolean hasTargetAverageValue();

  public abstract A withNewTargetAverageValue(java.lang.String, java.lang.String);

  public abstract A withNewTargetAverageValue(java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.Quantity getTargetValue();

  public abstract A withTargetValue(io.fabric8.kubernetes.api.model.Quantity);

  public abstract java.lang.Boolean hasTargetValue();

  public abstract A withNewTargetValue(java.lang.String, java.lang.String);

  public abstract A withNewTargetValue(java.lang.String);
}
