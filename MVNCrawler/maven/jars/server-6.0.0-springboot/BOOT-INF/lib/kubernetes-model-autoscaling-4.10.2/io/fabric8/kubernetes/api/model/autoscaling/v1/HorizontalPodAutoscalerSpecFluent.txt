Compiled from "HorizontalPodAutoscalerSpecFluent.java"
public interface io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent<A extends io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Integer getMaxReplicas();

  public abstract A withMaxReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasMaxReplicas();

  public abstract java.lang.Integer getMinReplicas();

  public abstract A withMinReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasMinReplicas();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.CrossVersionObjectReference getScaleTargetRef();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.CrossVersionObjectReference buildScaleTargetRef();

  public abstract A withScaleTargetRef(io.fabric8.kubernetes.api.model.autoscaling.v1.CrossVersionObjectReference);

  public abstract java.lang.Boolean hasScaleTargetRef();

  public abstract A withNewScaleTargetRef(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent$ScaleTargetRefNested<A> withNewScaleTargetRef();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent$ScaleTargetRefNested<A> withNewScaleTargetRefLike(io.fabric8.kubernetes.api.model.autoscaling.v1.CrossVersionObjectReference);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent$ScaleTargetRefNested<A> editScaleTargetRef();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent$ScaleTargetRefNested<A> editOrNewScaleTargetRef();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v1.HorizontalPodAutoscalerSpecFluent$ScaleTargetRefNested<A> editOrNewScaleTargetRefLike(io.fabric8.kubernetes.api.model.autoscaling.v1.CrossVersionObjectReference);

  public abstract java.lang.Integer getTargetCPUUtilizationPercentage();

  public abstract A withTargetCPUUtilizationPercentage(java.lang.Integer);

  public abstract java.lang.Boolean hasTargetCPUUtilizationPercentage();
}
