Compiled from "HorizontalPodAutoscalerStatusFluent.java"
public interface io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent<A extends io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent<A>> extends io.fabric8.kubernetes.api.builder.Fluent<A> {
  public abstract A addToConditions(int, io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition);

  public abstract A setToConditions(int, io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition);

  public abstract A addToConditions(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition>);

  public abstract A removeFromConditions(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition>);

  public abstract A removeMatchingFromConditions(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerConditionBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition> getConditions();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition> buildConditions();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition buildCondition(int);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition buildFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition buildLastCondition();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition buildMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerConditionBuilder>);

  public abstract A withConditions(java.util.List<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition>);

  public abstract A withConditions(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract A addNewCondition(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> addNewConditionLike(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerCondition);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$ConditionsNested<A> editMatchingCondition(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerConditionBuilder>);

  public abstract A addToCurrentMetrics(int, io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus);

  public abstract A setToCurrentMetrics(int, io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus);

  public abstract A addToCurrentMetrics(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus...);

  public abstract A addAllToCurrentMetrics(java.util.Collection<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus>);

  public abstract A removeFromCurrentMetrics(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus...);

  public abstract A removeAllFromCurrentMetrics(java.util.Collection<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus>);

  public abstract A removeMatchingFromCurrentMetrics(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatusBuilder>);

  public abstract java.util.List<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus> getCurrentMetrics();

  public abstract java.util.List<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus> buildCurrentMetrics();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus buildCurrentMetric(int);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus buildFirstCurrentMetric();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus buildLastCurrentMetric();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus buildMatchingCurrentMetric(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingCurrentMetric(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatusBuilder>);

  public abstract A withCurrentMetrics(java.util.List<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus>);

  public abstract A withCurrentMetrics(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus...);

  public abstract java.lang.Boolean hasCurrentMetrics();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> addNewCurrentMetric();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> addNewCurrentMetricLike(io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> setNewCurrentMetricLike(int, io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatus);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> editCurrentMetric(int);

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> editFirstCurrentMetric();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> editLastCurrentMetric();

  public abstract io.fabric8.kubernetes.api.model.autoscaling.v2beta1.HorizontalPodAutoscalerStatusFluent$CurrentMetricsNested<A> editMatchingCurrentMetric(io.fabric8.kubernetes.api.builder.Predicate<io.fabric8.kubernetes.api.model.autoscaling.v2beta1.MetricStatusBuilder>);

  public abstract java.lang.Integer getCurrentReplicas();

  public abstract A withCurrentReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasCurrentReplicas();

  public abstract java.lang.Integer getDesiredReplicas();

  public abstract A withDesiredReplicas(java.lang.Integer);

  public abstract java.lang.Boolean hasDesiredReplicas();

  public abstract java.lang.String getLastScaleTime();

  public abstract A withLastScaleTime(java.lang.String);

  public abstract java.lang.Boolean hasLastScaleTime();

  public abstract A withNewLastScaleTime(java.lang.String);

  public abstract A withNewLastScaleTime(java.lang.StringBuilder);

  public abstract A withNewLastScaleTime(java.lang.StringBuffer);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();
}
