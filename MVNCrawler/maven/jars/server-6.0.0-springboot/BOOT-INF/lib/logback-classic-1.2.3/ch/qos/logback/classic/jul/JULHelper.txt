Compiled from "JULHelper.java"
public class ch.qos.logback.classic.jul.JULHelper {
  public ch.qos.logback.classic.jul.JULHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static final boolean isRegularNonRootLogger(java.util.logging.Logger);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/util/logging/Logger.getName:()Ljava/lang/String;
      10: ldc           #3                  // String
      12: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public static final boolean isRoot(java.util.logging.Logger);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/util/logging/Logger.getName:()Ljava/lang/String;
      10: ldc           #3                  // String
      12: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ireturn

  public static java.util.logging.Level asJULLevel(ch.qos.logback.classic.Level);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #6                  // String Unexpected level [null]
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #8                  // Field ch/qos/logback/classic/Level.levelInt:I
      18: lookupswitch  { // 7
           -2147483648: 84
                  5000: 88
                 10000: 92
                 20000: 96
                 30000: 100
                 40000: 104
            2147483647: 108
               default: 112
          }
      84: getstatic     #9                  // Field java/util/logging/Level.ALL:Ljava/util/logging/Level;
      87: areturn
      88: getstatic     #10                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      91: areturn
      92: getstatic     #11                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      95: areturn
      96: getstatic     #12                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      99: areturn
     100: getstatic     #13                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     103: areturn
     104: getstatic     #14                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
     107: areturn
     108: getstatic     #15                 // Field java/util/logging/Level.OFF:Ljava/util/logging/Level;
     111: areturn
     112: new           #5                  // class java/lang/IllegalArgumentException
     115: dup
     116: new           #16                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #18                 // String Unexpected level [
     125: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: ldc           #21                 // String ]
     134: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     143: athrow

  public static java.lang.String asJULLoggerName(java.lang.String);
    Code:
       0: ldc           #23                 // String ROOT
       2: aload_0
       3: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          12
       9: ldc           #3                  // String
      11: areturn
      12: aload_0
      13: areturn

  public static java.util.logging.Logger asJULLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method asJULLoggerName:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: invokestatic  #25                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: areturn

  public static java.util.logging.Logger asJULLogger(ch.qos.logback.classic.Logger);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ch/qos/logback/classic/Logger.getName:()Ljava/lang/String;
       4: invokestatic  #27                 // Method asJULLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       7: areturn
}
