Compiled from "LoggingEvent.java"
public class ch.qos.logback.classic.spi.LoggingEvent implements ch.qos.logback.classic.spi.ILoggingEvent {
  transient java.lang.String fqnOfLoggerClass;

  private java.lang.String threadName;

  private java.lang.String loggerName;

  private ch.qos.logback.classic.LoggerContext loggerContext;

  private ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO;

  private transient ch.qos.logback.classic.Level level;

  private java.lang.String message;

  transient java.lang.String formattedMessage;

  private transient java.lang.Object[] argumentArray;

  private ch.qos.logback.classic.spi.ThrowableProxy throwableProxy;

  private java.lang.StackTraceElement[] callerDataArray;

  private org.slf4j.Marker marker;

  private java.util.Map<java.lang.String, java.lang.String> mdcPropertyMap;

  private long timeStamp;

  public ch.qos.logback.classic.spi.LoggingEvent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public ch.qos.logback.classic.spi.LoggingEvent(java.lang.String, ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level, java.lang.String, java.lang.Throwable, java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field fqnOfLoggerClass:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method ch/qos/logback/classic/Logger.getName:()Ljava/lang/String;
      14: putfield      #4                  // Field loggerName:Ljava/lang/String;
      17: aload_0
      18: aload_2
      19: invokevirtual #5                  // Method ch/qos/logback/classic/Logger.getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      22: putfield      #6                  // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      30: invokevirtual #7                  // Method ch/qos/logback/classic/LoggerContext.getLoggerContextRemoteView:()Lch/qos/logback/classic/spi/LoggerContextVO;
      33: putfield      #8                  // Field loggerContextVO:Lch/qos/logback/classic/spi/LoggerContextVO;
      36: aload_0
      37: aload_3
      38: putfield      #9                  // Field level:Lch/qos/logback/classic/Level;
      41: aload_0
      42: aload         4
      44: putfield      #10                 // Field message:Ljava/lang/String;
      47: aload_0
      48: aload         6
      50: putfield      #11                 // Field argumentArray:[Ljava/lang/Object;
      53: aload         5
      55: ifnonnull     66
      58: aload_0
      59: aload         6
      61: invokespecial #12                 // Method extractThrowableAnRearrangeArguments:([Ljava/lang/Object;)Ljava/lang/Throwable;
      64: astore        5
      66: aload         5
      68: ifnull        105
      71: aload_0
      72: new           #13                 // class ch/qos/logback/classic/spi/ThrowableProxy
      75: dup
      76: aload         5
      78: invokespecial #14                 // Method ch/qos/logback/classic/spi/ThrowableProxy."<init>":(Ljava/lang/Throwable;)V
      81: putfield      #15                 // Field throwableProxy:Lch/qos/logback/classic/spi/ThrowableProxy;
      84: aload_2
      85: invokevirtual #5                  // Method ch/qos/logback/classic/Logger.getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      88: astore        7
      90: aload         7
      92: invokevirtual #16                 // Method ch/qos/logback/classic/LoggerContext.isPackagingDataEnabled:()Z
      95: ifeq          105
      98: aload_0
      99: getfield      #15                 // Field throwableProxy:Lch/qos/logback/classic/spi/ThrowableProxy;
     102: invokevirtual #17                 // Method ch/qos/logback/classic/spi/ThrowableProxy.calculatePackagingData:()V
     105: aload_0
     106: invokestatic  #18                 // Method java/lang/System.currentTimeMillis:()J
     109: putfield      #19                 // Field timeStamp:J
     112: return

  private java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[]);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method ch/qos/logback/classic/spi/EventArgUtil.extractThrowable:([Ljava/lang/Object;)Ljava/lang/Throwable;
       4: astore_2
       5: aload_2
       6: invokestatic  #21                 // Method ch/qos/logback/classic/spi/EventArgUtil.successfulExtraction:(Ljava/lang/Throwable;)Z
       9: ifeq          20
      12: aload_0
      13: aload_1
      14: invokestatic  #22                 // Method ch/qos/logback/classic/spi/EventArgUtil.trimmedCopy:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: putfield      #11                 // Field argumentArray:[Ljava/lang/Object;
      20: aload_2
      21: areturn

  public void setArgumentArray(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #11                 // Field argumentArray:[Ljava/lang/Object;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #24                 // String argArray has been already set
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #11                 // Field argumentArray:[Ljava/lang/Object;
      22: return

  public java.lang.Object[] getArgumentArray();
    Code:
       0: aload_0
       1: getfield      #11                 // Field argumentArray:[Ljava/lang/Object;
       4: areturn

  public ch.qos.logback.classic.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field level:Lch/qos/logback/classic/Level;
       4: areturn

  public java.lang.String getLoggerName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerName:Ljava/lang/String;
       4: areturn

  public void setLoggerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field loggerName:Ljava/lang/String;
       5: return

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field threadName:Ljava/lang/String;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #27                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: invokevirtual #28                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      14: putfield      #26                 // Field threadName:Ljava/lang/String;
      17: aload_0
      18: getfield      #26                 // Field threadName:Ljava/lang/String;
      21: areturn

  public void setThreadName(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field threadName:Ljava/lang/String;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #29                 // String threadName has been already set
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #26                 // Field threadName:Ljava/lang/String;
      22: return

  public ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy();
    Code:
       0: aload_0
       1: getfield      #15                 // Field throwableProxy:Lch/qos/logback/classic/spi/ThrowableProxy;
       4: areturn

  public void setThrowableProxy(ch.qos.logback.classic.spi.ThrowableProxy);
    Code:
       0: aload_0
       1: getfield      #15                 // Field throwableProxy:Lch/qos/logback/classic/spi/ThrowableProxy;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String ThrowableProxy has been already set.
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #15                 // Field throwableProxy:Lch/qos/logback/classic/spi/ThrowableProxy;
      22: return

  public void prepareForDeferredProcessing();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getFormattedMessage:()Ljava/lang/String;
       4: pop
       5: aload_0
       6: invokevirtual #32                 // Method getThreadName:()Ljava/lang/String;
       9: pop
      10: aload_0
      11: invokevirtual #33                 // Method getMDCPropertyMap:()Ljava/util/Map;
      14: pop
      15: return

  public ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerContextVO:Lch/qos/logback/classic/spi/LoggerContextVO;
       4: areturn

  public void setLoggerContextRemoteView(ch.qos.logback.classic.spi.LoggerContextVO);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field loggerContextVO:Lch/qos/logback/classic/spi/LoggerContextVO;
       5: return

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #10                 // Field message:Ljava/lang/String;
       4: areturn

  public void setMessage(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field message:Ljava/lang/String;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #34                 // String The message for this event has been set already.
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #10                 // Field message:Ljava/lang/String;
      22: return

  public long getTimeStamp();
    Code:
       0: aload_0
       1: getfield      #19                 // Field timeStamp:J
       4: lreturn

  public void setTimeStamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #19                 // Field timeStamp:J
       5: return

  public void setLevel(ch.qos.logback.classic.Level);
    Code:
       0: aload_0
       1: getfield      #9                  // Field level:Lch/qos/logback/classic/Level;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #35                 // String The level has been already set for this event.
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #9                  // Field level:Lch/qos/logback/classic/Level;
      22: return

  public java.lang.StackTraceElement[] getCallerData();
    Code:
       0: aload_0
       1: getfield      #36                 // Field callerDataArray:[Ljava/lang/StackTraceElement;
       4: ifnonnull     39
       7: aload_0
       8: new           #37                 // class java/lang/Throwable
      11: dup
      12: invokespecial #38                 // Method java/lang/Throwable."<init>":()V
      15: aload_0
      16: getfield      #2                  // Field fqnOfLoggerClass:Ljava/lang/String;
      19: aload_0
      20: getfield      #6                  // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      23: invokevirtual #39                 // Method ch/qos/logback/classic/LoggerContext.getMaxCallerDataDepth:()I
      26: aload_0
      27: getfield      #6                  // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      30: invokevirtual #40                 // Method ch/qos/logback/classic/LoggerContext.getFrameworkPackages:()Ljava/util/List;
      33: invokestatic  #41                 // Method ch/qos/logback/classic/spi/CallerData.extract:(Ljava/lang/Throwable;Ljava/lang/String;ILjava/util/List;)[Ljava/lang/StackTraceElement;
      36: putfield      #36                 // Field callerDataArray:[Ljava/lang/StackTraceElement;
      39: aload_0
      40: getfield      #36                 // Field callerDataArray:[Ljava/lang/StackTraceElement;
      43: areturn

  public boolean hasCallerData();
    Code:
       0: aload_0
       1: getfield      #36                 // Field callerDataArray:[Ljava/lang/StackTraceElement;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setCallerData(java.lang.StackTraceElement[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field callerDataArray:[Ljava/lang/StackTraceElement;
       5: return

  public org.slf4j.Marker getMarker();
    Code:
       0: aload_0
       1: getfield      #42                 // Field marker:Lorg/slf4j/Marker;
       4: areturn

  public void setMarker(org.slf4j.Marker);
    Code:
       0: aload_0
       1: getfield      #42                 // Field marker:Lorg/slf4j/Marker;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String The marker has been already set for this event.
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #42                 // Field marker:Lorg/slf4j/Marker;
      22: return

  public long getContextBirthTime();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerContextVO:Lch/qos/logback/classic/spi/LoggerContextVO;
       4: invokevirtual #44                 // Method ch/qos/logback/classic/spi/LoggerContextVO.getBirthTime:()J
       7: lreturn

  public java.lang.String getFormattedMessage();
    Code:
       0: aload_0
       1: getfield      #45                 // Field formattedMessage:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #45                 // Field formattedMessage:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #11                 // Field argumentArray:[Ljava/lang/Object;
      16: ifnull        40
      19: aload_0
      20: aload_0
      21: getfield      #10                 // Field message:Ljava/lang/String;
      24: aload_0
      25: getfield      #11                 // Field argumentArray:[Ljava/lang/Object;
      28: invokestatic  #46                 // Method org/slf4j/helpers/MessageFormatter.arrayFormat:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;
      31: invokevirtual #47                 // Method org/slf4j/helpers/FormattingTuple.getMessage:()Ljava/lang/String;
      34: putfield      #45                 // Field formattedMessage:Ljava/lang/String;
      37: goto          48
      40: aload_0
      41: aload_0
      42: getfield      #10                 // Field message:Ljava/lang/String;
      45: putfield      #45                 // Field formattedMessage:Ljava/lang/String;
      48: aload_0
      49: getfield      #45                 // Field formattedMessage:Ljava/lang/String;
      52: areturn

  public java.util.Map<java.lang.String, java.lang.String> getMDCPropertyMap();
    Code:
       0: aload_0
       1: getfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
       4: ifnonnull     42
       7: invokestatic  #49                 // Method org/slf4j/MDC.getMDCAdapter:()Lorg/slf4j/spi/MDCAdapter;
      10: astore_1
      11: aload_1
      12: instanceof    #50                 // class ch/qos/logback/classic/util/LogbackMDCAdapter
      15: ifeq          32
      18: aload_0
      19: aload_1
      20: checkcast     #50                 // class ch/qos/logback/classic/util/LogbackMDCAdapter
      23: invokevirtual #51                 // Method ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap:()Ljava/util/Map;
      26: putfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
      29: goto          42
      32: aload_0
      33: aload_1
      34: invokeinterface #52,  1           // InterfaceMethod org/slf4j/spi/MDCAdapter.getCopyOfContextMap:()Ljava/util/Map;
      39: putfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
      42: aload_0
      43: getfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
      46: ifnonnull     56
      49: aload_0
      50: invokestatic  #53                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      53: putfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
      56: aload_0
      57: getfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
      60: areturn

  public void setMDCPropertyMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
       4: ifnull        17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #54                 // String The MDCPropertyMap has been already set for this event.
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #48                 // Field mdcPropertyMap:Ljava/util/Map;
      22: return

  public java.util.Map<java.lang.String, java.lang.String> getMdc();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getMDCPropertyMap:()Ljava/util/Map;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #55                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        91
      11: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #9                  // Field level:Lch/qos/logback/classic/Level;
      20: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc           #59                 // String ]
      25: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: invokevirtual #31                 // Method getFormattedMessage:()Ljava/lang/String;
      34: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: new           #62                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #55                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #64                 // String  does not support serialization.
      20: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #65                 // String Use LoggerEventVO instance instead. See also LoggerEventVO.build method.
      25: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      34: athrow
}
