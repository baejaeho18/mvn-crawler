Compiled from "CheckSignatureAdapter.java"
public class org.objectweb.asm.util.CheckSignatureAdapter extends org.objectweb.asm.signature.SignatureVisitor {
  public static final int CLASS_SIGNATURE;

  public static final int METHOD_SIGNATURE;

  public static final int TYPE_SIGNATURE;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_FORMAL_TYPE_PARAMETER_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_CLASS_BOUND_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_INTERFACE_BOUND_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_SUPER_CLASS_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_INTERFACE_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_PARAMETER_TYPE_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_RETURN_TYPE_STATES;

  private static final java.util.EnumSet<org.objectweb.asm.util.CheckSignatureAdapter$State> VISIT_EXCEPTION_TYPE_STATES;

  private static final java.lang.String INVALID;

  private final int type;

  private org.objectweb.asm.util.CheckSignatureAdapter$State state;

  private boolean canBeVoid;

  private final org.objectweb.asm.signature.SignatureVisitor signatureVisitor;

  public org.objectweb.asm.util.CheckSignatureAdapter(int, org.objectweb.asm.signature.SignatureVisitor);
    Code:
       0: aload_0
       1: ldc           #39                 // int 458752
       3: iload_1
       4: aload_2
       5: invokespecial #42                 // Method "<init>":(IILorg/objectweb/asm/signature/SignatureVisitor;)V
       8: return

  protected org.objectweb.asm.util.CheckSignatureAdapter(int, int, org.objectweb.asm.signature.SignatureVisitor);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #47                 // Method org/objectweb/asm/signature/SignatureVisitor."<init>":(I)V
       5: aload_0
       6: iload_2
       7: putfield      #49                 // Field type:I
      10: aload_0
      11: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      14: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      17: aload_0
      18: aload_3
      19: putfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      22: return

  public void visitFormalTypeParameter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpeq     21
       8: getstatic     #61                 // Field VISIT_FORMAL_TYPE_PARAMETER_STATES:Ljava/util/EnumSet;
      11: aload_0
      12: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      18: ifne          29
      21: new           #69                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: aload_0
      30: aload_1
      31: ldc           #74                 // String formal type parameter
      33: invokespecial #78                 // Method checkIdentifier:(Ljava/lang/String;Ljava/lang/String;)V
      36: aload_0
      37: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      40: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      43: aload_0
      44: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      47: ifnull        58
      50: aload_0
      51: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      54: aload_1
      55: invokevirtual #83                 // Method org/objectweb/asm/signature/SignatureVisitor.visitFormalTypeParameter:(Ljava/lang/String;)V
      58: return

  public org.objectweb.asm.signature.SignatureVisitor visitClassBound();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpeq     21
       8: getstatic     #88                 // Field VISIT_CLASS_BOUND_STATES:Ljava/util/EnumSet;
      11: aload_0
      12: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      18: ifne          29
      21: new           #69                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: aload_0
      30: getstatic     #91                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.BOUND:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      33: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      36: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      39: dup
      40: iconst_2
      41: aload_0
      42: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      45: ifnonnull     52
      48: aconst_null
      49: goto          59
      52: aload_0
      53: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      56: invokevirtual #93                 // Method org/objectweb/asm/signature/SignatureVisitor.visitClassBound:()Lorg/objectweb/asm/signature/SignatureVisitor;
      59: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      62: areturn

  public org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpeq     21
       8: getstatic     #98                 // Field VISIT_INTERFACE_BOUND_STATES:Ljava/util/EnumSet;
      11: aload_0
      12: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      18: ifne          29
      21: new           #69                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      32: dup
      33: iconst_2
      34: aload_0
      35: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      38: ifnonnull     45
      41: aconst_null
      42: goto          52
      45: aload_0
      46: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      49: invokevirtual #100                // Method org/objectweb/asm/signature/SignatureVisitor.visitInterfaceBound:()Lorg/objectweb/asm/signature/SignatureVisitor;
      52: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      55: areturn

  public org.objectweb.asm.signature.SignatureVisitor visitSuperclass();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: ifne          20
       7: getstatic     #103                // Field VISIT_SUPER_CLASS_STATES:Ljava/util/EnumSet;
      10: aload_0
      11: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      14: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      17: ifne          28
      20: new           #69                 // class java/lang/IllegalStateException
      23: dup
      24: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      27: athrow
      28: aload_0
      29: getstatic     #106                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.SUPER:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      32: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      35: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      38: dup
      39: iconst_2
      40: aload_0
      41: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      44: ifnonnull     51
      47: aconst_null
      48: goto          58
      51: aload_0
      52: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      55: invokevirtual #108                // Method org/objectweb/asm/signature/SignatureVisitor.visitSuperclass:()Lorg/objectweb/asm/signature/SignatureVisitor;
      58: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      61: areturn

  public org.objectweb.asm.signature.SignatureVisitor visitInterface();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: ifne          20
       7: getstatic     #111                // Field VISIT_INTERFACE_STATES:Ljava/util/EnumSet;
      10: aload_0
      11: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      14: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      17: ifne          28
      20: new           #69                 // class java/lang/IllegalStateException
      23: dup
      24: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      27: athrow
      28: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      31: dup
      32: iconst_2
      33: aload_0
      34: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      37: ifnonnull     44
      40: aconst_null
      41: goto          51
      44: aload_0
      45: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      48: invokevirtual #113                // Method org/objectweb/asm/signature/SignatureVisitor.visitInterface:()Lorg/objectweb/asm/signature/SignatureVisitor;
      51: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      54: areturn

  public org.objectweb.asm.signature.SignatureVisitor visitParameterType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_1
       5: if_icmpne     21
       8: getstatic     #116                // Field VISIT_PARAMETER_TYPE_STATES:Ljava/util/EnumSet;
      11: aload_0
      12: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      18: ifne          29
      21: new           #69                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: aload_0
      30: getstatic     #119                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.PARAM:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      33: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      36: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      39: dup
      40: iconst_2
      41: aload_0
      42: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      45: ifnonnull     52
      48: aconst_null
      49: goto          59
      52: aload_0
      53: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      56: invokevirtual #121                // Method org/objectweb/asm/signature/SignatureVisitor.visitParameterType:()Lorg/objectweb/asm/signature/SignatureVisitor;
      59: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      62: areturn

  public org.objectweb.asm.signature.SignatureVisitor visitReturnType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_1
       5: if_icmpne     21
       8: getstatic     #124                // Field VISIT_RETURN_TYPE_STATES:Ljava/util/EnumSet;
      11: aload_0
      12: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      18: ifne          29
      21: new           #69                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: aload_0
      30: getstatic     #127                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.RETURN:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      33: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      36: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      39: dup
      40: iconst_2
      41: aload_0
      42: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      45: ifnonnull     52
      48: aconst_null
      49: goto          59
      52: aload_0
      53: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      56: invokevirtual #129                // Method org/objectweb/asm/signature/SignatureVisitor.visitReturnType:()Lorg/objectweb/asm/signature/SignatureVisitor;
      59: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      62: astore_1
      63: aload_1
      64: iconst_1
      65: putfield      #131                // Field canBeVoid:Z
      68: aload_1
      69: areturn

  public org.objectweb.asm.signature.SignatureVisitor visitExceptionType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_1
       5: if_icmpne     21
       8: getstatic     #135                // Field VISIT_EXCEPTION_TYPE_STATES:Ljava/util/EnumSet;
      11: aload_0
      12: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: invokevirtual #67                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      18: ifne          29
      21: new           #69                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      32: dup
      33: iconst_2
      34: aload_0
      35: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      38: ifnonnull     45
      41: aconst_null
      42: goto          52
      45: aload_0
      46: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      49: invokevirtual #137                // Method org/objectweb/asm/signature/SignatureVisitor.visitExceptionType:()Lorg/objectweb/asm/signature/SignatureVisitor;
      52: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      55: areturn

  public void visitBaseType(char);
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpne     18
       8: aload_0
       9: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      12: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: if_acmpeq     26
      18: new           #69                 // class java/lang/IllegalStateException
      21: dup
      22: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      25: athrow
      26: iload_1
      27: bipush        86
      29: if_icmpne     49
      32: aload_0
      33: getfield      #131                // Field canBeVoid:Z
      36: ifne          69
      39: new           #141                // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #143                // String Base type descriptor can\'t be V
      45: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: ldc           #147                // String ZCBSIFJD
      51: iload_1
      52: invokevirtual #153                // Method java/lang/String.indexOf:(I)I
      55: iconst_m1
      56: if_icmpne     69
      59: new           #141                // class java/lang/IllegalArgumentException
      62: dup
      63: ldc           #155                // String Base type descriptor must be one of ZCBSIFJD
      65: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: getstatic     #158                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.SIMPLE_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      73: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      76: aload_0
      77: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      80: ifnull        91
      83: aload_0
      84: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      87: iload_1
      88: invokevirtual #160                // Method org/objectweb/asm/signature/SignatureVisitor.visitBaseType:(C)V
      91: return

  public void visitTypeVariable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpne     18
       8: aload_0
       9: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      12: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: if_acmpeq     26
      18: new           #69                 // class java/lang/IllegalStateException
      21: dup
      22: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      25: athrow
      26: aload_0
      27: aload_1
      28: ldc           #165                // String type variable
      30: invokespecial #78                 // Method checkIdentifier:(Ljava/lang/String;Ljava/lang/String;)V
      33: aload_0
      34: getstatic     #158                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.SIMPLE_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      37: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      40: aload_0
      41: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      44: ifnull        55
      47: aload_0
      48: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      51: aload_1
      52: invokevirtual #167                // Method org/objectweb/asm/signature/SignatureVisitor.visitTypeVariable:(Ljava/lang/String;)V
      55: return

  public org.objectweb.asm.signature.SignatureVisitor visitArrayType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpne     18
       8: aload_0
       9: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      12: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: if_acmpeq     26
      18: new           #69                 // class java/lang/IllegalStateException
      21: dup
      22: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      25: athrow
      26: aload_0
      27: getstatic     #158                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.SIMPLE_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      30: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      33: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      36: dup
      37: iconst_2
      38: aload_0
      39: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      42: ifnonnull     49
      45: aconst_null
      46: goto          56
      49: aload_0
      50: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      53: invokevirtual #170                // Method org/objectweb/asm/signature/SignatureVisitor.visitArrayType:()Lorg/objectweb/asm/signature/SignatureVisitor;
      56: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      59: areturn

  public void visitClassType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #49                 // Field type:I
       4: iconst_2
       5: if_icmpne     18
       8: aload_0
       9: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      12: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      15: if_acmpeq     26
      18: new           #69                 // class java/lang/IllegalStateException
      21: dup
      22: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      25: athrow
      26: aload_0
      27: aload_1
      28: ldc           #173                // String class name
      30: invokespecial #176                // Method checkClassName:(Ljava/lang/String;Ljava/lang/String;)V
      33: aload_0
      34: getstatic     #179                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.CLASS_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      37: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      40: aload_0
      41: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      44: ifnull        55
      47: aload_0
      48: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      51: aload_1
      52: invokevirtual #181                // Method org/objectweb/asm/signature/SignatureVisitor.visitClassType:(Ljava/lang/String;)V
      55: return

  public void visitInnerClassType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       4: getstatic     #179                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.CLASS_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       7: if_acmpeq     18
      10: new           #69                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: ldc           #184                // String inner class name
      22: invokespecial #78                 // Method checkIdentifier:(Ljava/lang/String;Ljava/lang/String;)V
      25: aload_0
      26: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      29: ifnull        40
      32: aload_0
      33: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      36: aload_1
      37: invokevirtual #186                // Method org/objectweb/asm/signature/SignatureVisitor.visitInnerClassType:(Ljava/lang/String;)V
      40: return

  public void visitTypeArgument();
    Code:
       0: aload_0
       1: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       4: getstatic     #179                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.CLASS_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       7: if_acmpeq     18
      10: new           #69                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      22: ifnull        32
      25: aload_0
      26: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      29: invokevirtual #189                // Method org/objectweb/asm/signature/SignatureVisitor.visitTypeArgument:()V
      32: return

  public org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char);
    Code:
       0: aload_0
       1: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       4: getstatic     #179                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.CLASS_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       7: if_acmpeq     18
      10: new           #69                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: ldc           #192                // String +-=
      20: iload_1
      21: invokevirtual #153                // Method java/lang/String.indexOf:(I)I
      24: iconst_m1
      25: if_icmpne     38
      28: new           #141                // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #194                // String Wildcard must be one of +-=
      34: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: new           #2                  // class org/objectweb/asm/util/CheckSignatureAdapter
      41: dup
      42: iconst_2
      43: aload_0
      44: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      47: ifnonnull     54
      50: aconst_null
      51: goto          62
      54: aload_0
      55: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      58: iload_1
      59: invokevirtual #196                // Method org/objectweb/asm/signature/SignatureVisitor.visitTypeArgument:(C)Lorg/objectweb/asm/signature/SignatureVisitor;
      62: invokespecial #95                 // Method "<init>":(ILorg/objectweb/asm/signature/SignatureVisitor;)V
      65: areturn

  public void visitEnd();
    Code:
       0: aload_0
       1: getfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       4: getstatic     #179                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.CLASS_TYPE:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       7: if_acmpeq     18
      10: new           #69                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getstatic     #201                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.END:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      22: putfield      #54                 // Field state:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      25: aload_0
      26: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      29: ifnull        39
      32: aload_0
      33: getfield      #56                 // Field signatureVisitor:Lorg/objectweb/asm/signature/SignatureVisitor;
      36: invokevirtual #203                // Method org/objectweb/asm/signature/SignatureVisitor.visitEnd:()V
      39: return

  private void checkClassName(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #207                // Method java/lang/String.length:()I
       8: ifne          43
      11: new           #141                // class java/lang/IllegalArgumentException
      14: dup
      15: new           #209                // class java/lang/StringBuilder
      18: dup
      19: invokespecial #210                // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #29                 // String Invalid
      24: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #216                // String  (must not be null or empty)
      33: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iconst_0
      44: istore_3
      45: iload_3
      46: aload_1
      47: invokevirtual #207                // Method java/lang/String.length:()I
      50: if_icmpge     109
      53: ldc           #222                // String .;[<>:
      55: aload_1
      56: iload_3
      57: invokevirtual #226                // Method java/lang/String.charAt:(I)C
      60: invokevirtual #153                // Method java/lang/String.indexOf:(I)I
      63: iconst_m1
      64: if_icmpeq     103
      67: new           #141                // class java/lang/IllegalArgumentException
      70: dup
      71: new           #209                // class java/lang/StringBuilder
      74: dup
      75: invokespecial #210                // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #29                 // String Invalid
      80: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #228                // String  (must not contain . ; [ < > or :):
      89: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: iinc          3, 1
     106: goto          45
     109: return

  private void checkIdentifier(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #207                // Method java/lang/String.length:()I
       8: ifne          43
      11: new           #141                // class java/lang/IllegalArgumentException
      14: dup
      15: new           #209                // class java/lang/StringBuilder
      18: dup
      19: invokespecial #210                // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #29                 // String Invalid
      24: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #216                // String  (must not be null or empty)
      33: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iconst_0
      44: istore_3
      45: iload_3
      46: aload_1
      47: invokevirtual #207                // Method java/lang/String.length:()I
      50: if_icmpge     109
      53: ldc           #232                // String .;[/<>:
      55: aload_1
      56: iload_3
      57: invokevirtual #226                // Method java/lang/String.charAt:(I)C
      60: invokevirtual #153                // Method java/lang/String.indexOf:(I)I
      63: iconst_m1
      64: if_icmpeq     103
      67: new           #141                // class java/lang/IllegalArgumentException
      70: dup
      71: new           #209                // class java/lang/StringBuilder
      74: dup
      75: invokespecial #210                // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #29                 // String Invalid
      80: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #234                // String  (must not contain . ; [ / < > or :):
      89: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #214                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: iinc          3, 1
     106: goto          45
     109: return

  static {};
    Code:
       0: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       3: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       6: getstatic     #91                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.BOUND:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
       9: invokestatic  #239                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      12: putstatic     #61                 // Field VISIT_FORMAL_TYPE_PARAMETER_STATES:Ljava/util/EnumSet;
      15: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      18: invokestatic  #242                // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      21: putstatic     #88                 // Field VISIT_CLASS_BOUND_STATES:Ljava/util/EnumSet;
      24: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      27: getstatic     #91                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.BOUND:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      30: invokestatic  #245                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      33: putstatic     #98                 // Field VISIT_INTERFACE_BOUND_STATES:Ljava/util/EnumSet;
      36: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      39: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      42: getstatic     #91                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.BOUND:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      45: invokestatic  #239                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      48: putstatic     #103                // Field VISIT_SUPER_CLASS_STATES:Ljava/util/EnumSet;
      51: getstatic     #106                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.SUPER:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      54: invokestatic  #242                // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      57: putstatic     #111                // Field VISIT_INTERFACE_STATES:Ljava/util/EnumSet;
      60: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      63: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      66: getstatic     #91                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.BOUND:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      69: getstatic     #119                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.PARAM:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      72: invokestatic  #248                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      75: putstatic     #116                // Field VISIT_PARAMETER_TYPE_STATES:Ljava/util/EnumSet;
      78: getstatic     #52                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.EMPTY:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      81: getstatic     #81                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.FORMAL:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      84: getstatic     #91                 // Field org/objectweb/asm/util/CheckSignatureAdapter$State.BOUND:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      87: getstatic     #119                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.PARAM:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      90: invokestatic  #248                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      93: putstatic     #124                // Field VISIT_RETURN_TYPE_STATES:Ljava/util/EnumSet;
      96: getstatic     #127                // Field org/objectweb/asm/util/CheckSignatureAdapter$State.RETURN:Lorg/objectweb/asm/util/CheckSignatureAdapter$State;
      99: invokestatic  #242                // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
     102: putstatic     #135                // Field VISIT_EXCEPTION_TYPE_STATES:Ljava/util/EnumSet;
     105: return
}
