Compiled from "DateTimeZoneBuilder.java"
final class org.joda.time.tz.DateTimeZoneBuilder$Recurrence {
  final org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear;

  final java.lang.String iNameKey;

  final int iSaveMillis;

  static org.joda.time.tz.DateTimeZoneBuilder$Recurrence readFrom(java.io.DataInput) throws java.io.IOException;
    Code:
       0: new           #1                  // class org/joda/time/tz/DateTimeZoneBuilder$Recurrence
       3: dup
       4: aload_0
       5: invokestatic  #2                  // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.readFrom:(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       8: aload_0
       9: invokeinterface #3,  1            // InterfaceMethod java/io/DataInput.readUTF:()Ljava/lang/String;
      14: aload_0
      15: invokestatic  #4                  // Method org/joda/time/tz/DateTimeZoneBuilder.readMillis:(Ljava/io/DataInput;)J
      18: l2i
      19: invokespecial #5                  // Method "<init>":(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V
      22: areturn

  org.joda.time.tz.DateTimeZoneBuilder$Recurrence(org.joda.time.tz.DateTimeZoneBuilder$OfYear, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field iNameKey:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #9                  // Field iSaveMillis:I
      19: return

  public org.joda.time.tz.DateTimeZoneBuilder$OfYear getOfYear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       4: areturn

  public long next(long, int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       4: lload_1
       5: iload_3
       6: iload         4
       8: invokevirtual #10                 // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.next:(JII)J
      11: lreturn

  public long previous(long, int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       4: lload_1
       5: iload_3
       6: iload         4
       8: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.previous:(JII)J
      11: lreturn

  public java.lang.String getNameKey();
    Code:
       0: aload_0
       1: getfield      #8                  // Field iNameKey:Ljava/lang/String;
       4: areturn

  public int getSaveMillis();
    Code:
       0: aload_0
       1: getfield      #9                  // Field iSaveMillis:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class org/joda/time/tz/DateTimeZoneBuilder$Recurrence
      11: ifeq          64
      14: aload_1
      15: checkcast     #1                  // class org/joda/time/tz/DateTimeZoneBuilder$Recurrence
      18: astore_2
      19: aload_0
      20: getfield      #9                  // Field iSaveMillis:I
      23: aload_2
      24: getfield      #9                  // Field iSaveMillis:I
      27: if_icmpne     62
      30: aload_0
      31: getfield      #8                  // Field iNameKey:Ljava/lang/String;
      34: aload_2
      35: getfield      #8                  // Field iNameKey:Ljava/lang/String;
      38: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          62
      44: aload_0
      45: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
      48: aload_2
      49: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
      52: invokevirtual #13                 // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.equals:(Ljava/lang/Object;)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn
      64: iconst_0
      65: ireturn

  public void writeTo(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       4: aload_1
       5: invokevirtual #14                 // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.writeTo:(Ljava/io/DataOutput;)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field iNameKey:Ljava/lang/String;
      13: invokeinterface #15,  2           // InterfaceMethod java/io/DataOutput.writeUTF:(Ljava/lang/String;)V
      18: aload_1
      19: aload_0
      20: getfield      #9                  // Field iSaveMillis:I
      23: i2l
      24: invokestatic  #16                 // Method org/joda/time/tz/DateTimeZoneBuilder.writeMillis:(Ljava/io/DataOutput;J)V
      27: return

  org.joda.time.tz.DateTimeZoneBuilder$Recurrence rename(java.lang.String);
    Code:
       0: new           #1                  // class org/joda/time/tz/DateTimeZoneBuilder$Recurrence
       3: dup
       4: aload_0
       5: getfield      #7                  // Field iOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field iSaveMillis:I
      13: invokespecial #5                  // Method "<init>":(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V
      16: areturn

  org.joda.time.tz.DateTimeZoneBuilder$Recurrence renameAppend(java.lang.String);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_0
       9: getfield      #8                  // Field iNameKey:Ljava/lang/String;
      12: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokevirtual #21                 // Method java/lang/String.intern:()Ljava/lang/String;
      25: invokevirtual #22                 // Method rename:(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      28: areturn
}
