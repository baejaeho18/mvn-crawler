Compiled from "DecoratedDateTimeField.java"
public abstract class org.joda.time.field.DecoratedDateTimeField extends org.joda.time.field.BaseDateTimeField {
  private static final long serialVersionUID;

  private final org.joda.time.DateTimeField iField;

  protected org.joda.time.field.DecoratedDateTimeField(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/joda/time/field/BaseDateTimeField."<init>":(Lorg/joda/time/DateTimeFieldType;)V
       5: aload_1
       6: ifnonnull     19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String The field must not be null
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: invokevirtual #5                  // Method org/joda/time/DateTimeField.isSupported:()Z
      23: ifne          36
      26: new           #2                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #6                  // String The field must be supported
      32: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
      41: return

  public final org.joda.time.DateTimeField getWrappedField();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: areturn

  public boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #8                  // Method org/joda/time/DateTimeField.isLenient:()Z
       7: ireturn

  public int get(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: invokevirtual #9                  // Method org/joda/time/DateTimeField.get:(J)I
       8: ireturn

  public long set(long, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: iload_3
       6: invokevirtual #10                 // Method org/joda/time/DateTimeField.set:(JI)J
       9: lreturn

  public org.joda.time.DurationField getDurationField();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #11                 // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
       7: areturn

  public org.joda.time.DurationField getRangeDurationField();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #12                 // Method org/joda/time/DateTimeField.getRangeDurationField:()Lorg/joda/time/DurationField;
       7: areturn

  public int getMinimumValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #13                 // Method org/joda/time/DateTimeField.getMinimumValue:()I
       7: ireturn

  public int getMaximumValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #14                 // Method org/joda/time/DateTimeField.getMaximumValue:()I
       7: ireturn

  public long roundFloor(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field iField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: invokevirtual #15                 // Method org/joda/time/DateTimeField.roundFloor:(J)J
       8: lreturn
}
