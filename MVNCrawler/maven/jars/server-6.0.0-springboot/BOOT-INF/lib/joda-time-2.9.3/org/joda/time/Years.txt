Compiled from "Years.java"
public final class org.joda.time.Years extends org.joda.time.base.BaseSingleFieldPeriod {
  public static final org.joda.time.Years ZERO;

  public static final org.joda.time.Years ONE;

  public static final org.joda.time.Years TWO;

  public static final org.joda.time.Years THREE;

  public static final org.joda.time.Years MAX_VALUE;

  public static final org.joda.time.Years MIN_VALUE;

  private static final org.joda.time.format.PeriodFormatter PARSER;

  private static final long serialVersionUID;

  public static org.joda.time.Years years(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 6
           -2147483648: 80
                     0: 60
                     1: 64
                     2: 68
                     3: 72
            2147483647: 76
               default: 84
          }
      60: getstatic     #1                  // Field ZERO:Lorg/joda/time/Years;
      63: areturn
      64: getstatic     #2                  // Field ONE:Lorg/joda/time/Years;
      67: areturn
      68: getstatic     #3                  // Field TWO:Lorg/joda/time/Years;
      71: areturn
      72: getstatic     #4                  // Field THREE:Lorg/joda/time/Years;
      75: areturn
      76: getstatic     #5                  // Field MAX_VALUE:Lorg/joda/time/Years;
      79: areturn
      80: getstatic     #6                  // Field MIN_VALUE:Lorg/joda/time/Years;
      83: areturn
      84: new           #7                  // class org/joda/time/Years
      87: dup
      88: iload_0
      89: invokespecial #8                  // Method "<init>":(I)V
      92: areturn

  public static org.joda.time.Years yearsBetween(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method org/joda/time/DurationFieldType.years:()Lorg/joda/time/DurationFieldType;
       5: invokestatic  #10                 // Method org/joda/time/base/BaseSingleFieldPeriod.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I
       8: istore_2
       9: iload_2
      10: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      13: areturn

  public static org.joda.time.Years yearsBetween(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial);
    Code:
       0: aload_0
       1: instanceof    #12                 // class org/joda/time/LocalDate
       4: ifeq          51
       7: aload_1
       8: instanceof    #12                 // class org/joda/time/LocalDate
      11: ifeq          51
      14: aload_0
      15: invokeinterface #13,  1           // InterfaceMethod org/joda/time/ReadablePartial.getChronology:()Lorg/joda/time/Chronology;
      20: invokestatic  #14                 // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      23: astore_2
      24: aload_2
      25: invokevirtual #15                 // Method org/joda/time/Chronology.years:()Lorg/joda/time/DurationField;
      28: aload_1
      29: checkcast     #12                 // class org/joda/time/LocalDate
      32: invokevirtual #16                 // Method org/joda/time/LocalDate.getLocalMillis:()J
      35: aload_0
      36: checkcast     #12                 // class org/joda/time/LocalDate
      39: invokevirtual #16                 // Method org/joda/time/LocalDate.getLocalMillis:()J
      42: invokevirtual #17                 // Method org/joda/time/DurationField.getDifference:(JJ)I
      45: istore_3
      46: iload_3
      47: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      50: areturn
      51: aload_0
      52: aload_1
      53: getstatic     #1                  // Field ZERO:Lorg/joda/time/Years;
      56: invokestatic  #18                 // Method org/joda/time/base/BaseSingleFieldPeriod.between:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePeriod;)I
      59: istore_2
      60: iload_2
      61: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      64: areturn

  public static org.joda.time.Years yearsIn(org.joda.time.ReadableInterval);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #1                  // Field ZERO:Lorg/joda/time/Years;
       7: areturn
       8: aload_0
       9: invokeinterface #19,  1           // InterfaceMethod org/joda/time/ReadableInterval.getStart:()Lorg/joda/time/DateTime;
      14: aload_0
      15: invokeinterface #20,  1           // InterfaceMethod org/joda/time/ReadableInterval.getEnd:()Lorg/joda/time/DateTime;
      20: invokestatic  #9                  // Method org/joda/time/DurationFieldType.years:()Lorg/joda/time/DurationFieldType;
      23: invokestatic  #10                 // Method org/joda/time/base/BaseSingleFieldPeriod.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I
      26: istore_1
      27: iload_1
      28: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      31: areturn

  public static org.joda.time.Years parseYears(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #1                  // Field ZERO:Lorg/joda/time/Years;
       7: areturn
       8: getstatic     #21                 // Field PARSER:Lorg/joda/time/format/PeriodFormatter;
      11: aload_0
      12: invokevirtual #22                 // Method org/joda/time/format/PeriodFormatter.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;
      15: astore_1
      16: aload_1
      17: invokevirtual #23                 // Method org/joda/time/Period.getYears:()I
      20: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      23: areturn

  private org.joda.time.Years(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #24                 // Method org/joda/time/base/BaseSingleFieldPeriod."<init>":(I)V
       5: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getValue:()I
       4: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
       7: areturn

  public org.joda.time.DurationFieldType getFieldType();
    Code:
       0: invokestatic  #9                  // Method org/joda/time/DurationFieldType.years:()Lorg/joda/time/DurationFieldType;
       3: areturn

  public org.joda.time.PeriodType getPeriodType();
    Code:
       0: invokestatic  #26                 // Method org/joda/time/PeriodType.years:()Lorg/joda/time/PeriodType;
       3: areturn

  public int getYears();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getValue:()I
       4: ireturn

  public org.joda.time.Years plus(int);
    Code:
       0: iload_1
       1: ifne          6
       4: aload_0
       5: areturn
       6: aload_0
       7: invokevirtual #25                 // Method getValue:()I
      10: iload_1
      11: invokestatic  #27                 // Method org/joda/time/field/FieldUtils.safeAdd:(II)I
      14: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      17: areturn

  public org.joda.time.Years plus(org.joda.time.Years);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #25                 // Method getValue:()I
      11: invokevirtual #28                 // Method plus:(I)Lorg/joda/time/Years;
      14: areturn

  public org.joda.time.Years minus(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #29                 // Method org/joda/time/field/FieldUtils.safeNegate:(I)I
       5: invokevirtual #28                 // Method plus:(I)Lorg/joda/time/Years;
       8: areturn

  public org.joda.time.Years minus(org.joda.time.Years);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #25                 // Method getValue:()I
      11: invokevirtual #30                 // Method minus:(I)Lorg/joda/time/Years;
      14: areturn

  public org.joda.time.Years multipliedBy(int);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getValue:()I
       4: iload_1
       5: invokestatic  #31                 // Method org/joda/time/field/FieldUtils.safeMultiply:(II)I
       8: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      11: areturn

  public org.joda.time.Years dividedBy(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     7
       5: aload_0
       6: areturn
       7: aload_0
       8: invokevirtual #25                 // Method getValue:()I
      11: iload_1
      12: idiv
      13: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      16: areturn

  public org.joda.time.Years negated();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getValue:()I
       4: invokestatic  #29                 // Method org/joda/time/field/FieldUtils.safeNegate:(I)I
       7: invokestatic  #11                 // Method years:(I)Lorg/joda/time/Years;
      10: areturn

  public boolean isGreaterThan(org.joda.time.Years);
    Code:
       0: aload_1
       1: ifnonnull     17
       4: aload_0
       5: invokevirtual #25                 // Method getValue:()I
       8: ifle          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokevirtual #25                 // Method getValue:()I
      21: aload_1
      22: invokevirtual #25                 // Method getValue:()I
      25: if_icmple     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean isLessThan(org.joda.time.Years);
    Code:
       0: aload_1
       1: ifnonnull     17
       4: aload_0
       5: invokevirtual #25                 // Method getValue:()I
       8: ifge          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokevirtual #25                 // Method getValue:()I
      21: aload_1
      22: invokevirtual #25                 // Method getValue:()I
      25: if_icmpge     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public java.lang.String toString();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #34                 // String P
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #25                 // Method getValue:()I
      16: invokestatic  #36                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      19: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #37                 // String Y
      24: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  static {};
    Code:
       0: new           #7                  // class org/joda/time/Years
       3: dup
       4: iconst_0
       5: invokespecial #8                  // Method "<init>":(I)V
       8: putstatic     #1                  // Field ZERO:Lorg/joda/time/Years;
      11: new           #7                  // class org/joda/time/Years
      14: dup
      15: iconst_1
      16: invokespecial #8                  // Method "<init>":(I)V
      19: putstatic     #2                  // Field ONE:Lorg/joda/time/Years;
      22: new           #7                  // class org/joda/time/Years
      25: dup
      26: iconst_2
      27: invokespecial #8                  // Method "<init>":(I)V
      30: putstatic     #3                  // Field TWO:Lorg/joda/time/Years;
      33: new           #7                  // class org/joda/time/Years
      36: dup
      37: iconst_3
      38: invokespecial #8                  // Method "<init>":(I)V
      41: putstatic     #4                  // Field THREE:Lorg/joda/time/Years;
      44: new           #7                  // class org/joda/time/Years
      47: dup
      48: ldc           #39                 // int 2147483647
      50: invokespecial #8                  // Method "<init>":(I)V
      53: putstatic     #5                  // Field MAX_VALUE:Lorg/joda/time/Years;
      56: new           #7                  // class org/joda/time/Years
      59: dup
      60: ldc           #40                 // int -2147483648
      62: invokespecial #8                  // Method "<init>":(I)V
      65: putstatic     #6                  // Field MIN_VALUE:Lorg/joda/time/Years;
      68: invokestatic  #41                 // Method org/joda/time/format/ISOPeriodFormat.standard:()Lorg/joda/time/format/PeriodFormatter;
      71: invokestatic  #26                 // Method org/joda/time/PeriodType.years:()Lorg/joda/time/PeriodType;
      74: invokevirtual #42                 // Method org/joda/time/format/PeriodFormatter.withParseType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/format/PeriodFormatter;
      77: putstatic     #21                 // Field PARSER:Lorg/joda/time/format/PeriodFormatter;
      80: return
}
