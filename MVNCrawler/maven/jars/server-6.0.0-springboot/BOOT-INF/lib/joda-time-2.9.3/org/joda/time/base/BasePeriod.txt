Compiled from "BasePeriod.java"
public abstract class org.joda.time.base.BasePeriod extends org.joda.time.base.AbstractPeriod implements org.joda.time.ReadablePeriod,java.io.Serializable {
  private static final long serialVersionUID;

  private static final org.joda.time.ReadablePeriod DUMMY_PERIOD;

  private final org.joda.time.PeriodType iType;

  private final int[] iValues;

  protected org.joda.time.base.BasePeriod(int, int, int, int, int, int, int, int, org.joda.time.PeriodType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload         9
       7: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
      10: astore        9
      12: aload_0
      13: aload         9
      15: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      18: aload_0
      19: aload_0
      20: iload_1
      21: iload_2
      22: iload_3
      23: iload         4
      25: iload         5
      27: iload         6
      29: iload         7
      31: iload         8
      33: invokespecial #4                  // Method setPeriodInternal:(IIIIIIII)[I
      36: putfield      #5                  // Field iValues:[I
      39: return

  protected org.joda.time.base.BasePeriod(long, long, org.joda.time.PeriodType, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload         5
       7: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
      10: astore        5
      12: aload         6
      14: invokestatic  #6                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      17: astore        6
      19: aload_0
      20: aload         5
      22: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      25: aload_0
      26: aload         6
      28: aload_0
      29: lload_1
      30: lload_3
      31: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;JJ)[I
      34: putfield      #5                  // Field iValues:[I
      37: return

  protected org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant, org.joda.time.PeriodType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload_3
       6: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
       9: astore_3
      10: aload_1
      11: ifnonnull     36
      14: aload_2
      15: ifnonnull     36
      18: aload_0
      19: aload_3
      20: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      23: aload_0
      24: aload_0
      25: invokevirtual #8                  // Method size:()I
      28: newarray       int
      30: putfield      #5                  // Field iValues:[I
      33: goto          74
      36: aload_1
      37: invokestatic  #9                  // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
      40: lstore        4
      42: aload_2
      43: invokestatic  #9                  // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
      46: lstore        6
      48: aload_1
      49: aload_2
      50: invokestatic  #10                 // Method org/joda/time/DateTimeUtils.getIntervalChronology:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;
      53: astore        8
      55: aload_0
      56: aload_3
      57: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      60: aload_0
      61: aload         8
      63: aload_0
      64: lload         4
      66: lload         6
      68: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;JJ)[I
      71: putfield      #5                  // Field iValues:[I
      74: return

  protected org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial, org.joda.time.PeriodType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     22
      12: new           #11                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #12                 // String ReadablePartial objects must not be null
      18: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: instanceof    #14                 // class org/joda/time/base/BaseLocal
      26: ifeq          108
      29: aload_2
      30: instanceof    #14                 // class org/joda/time/base/BaseLocal
      33: ifeq          108
      36: aload_1
      37: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: aload_2
      41: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: if_acmpne     108
      47: aload_0
      48: aload_3
      49: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
      52: astore_3
      53: aload_1
      54: checkcast     #14                 // class org/joda/time/base/BaseLocal
      57: invokevirtual #16                 // Method org/joda/time/base/BaseLocal.getLocalMillis:()J
      60: lstore        4
      62: aload_2
      63: checkcast     #14                 // class org/joda/time/base/BaseLocal
      66: invokevirtual #16                 // Method org/joda/time/base/BaseLocal.getLocalMillis:()J
      69: lstore        6
      71: aload_1
      72: invokeinterface #17,  1           // InterfaceMethod org/joda/time/ReadablePartial.getChronology:()Lorg/joda/time/Chronology;
      77: astore        8
      79: aload         8
      81: invokestatic  #6                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      84: astore        8
      86: aload_0
      87: aload_3
      88: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      91: aload_0
      92: aload         8
      94: aload_0
      95: lload         4
      97: lload         6
      99: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;JJ)[I
     102: putfield      #5                  // Field iValues:[I
     105: goto          250
     108: aload_1
     109: invokeinterface #18,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
     114: aload_2
     115: invokeinterface #18,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
     120: if_icmpeq     133
     123: new           #11                 // class java/lang/IllegalArgumentException
     126: dup
     127: ldc           #19                 // String ReadablePartial objects must have the same set of fields
     129: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     132: athrow
     133: iconst_0
     134: istore        4
     136: aload_1
     137: invokeinterface #18,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
     142: istore        5
     144: iload         4
     146: iload         5
     148: if_icmpge     186
     151: aload_1
     152: iload         4
     154: invokeinterface #20,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
     159: aload_2
     160: iload         4
     162: invokeinterface #20,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
     167: if_acmpeq     180
     170: new           #11                 // class java/lang/IllegalArgumentException
     173: dup
     174: ldc           #19                 // String ReadablePartial objects must have the same set of fields
     176: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: iinc          4, 1
     183: goto          144
     186: aload_1
     187: invokestatic  #21                 // Method org/joda/time/DateTimeUtils.isContiguous:(Lorg/joda/time/ReadablePartial;)Z
     190: ifne          203
     193: new           #11                 // class java/lang/IllegalArgumentException
     196: dup
     197: ldc           #22                 // String ReadablePartial objects must be contiguous
     199: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     202: athrow
     203: aload_0
     204: aload_0
     205: aload_3
     206: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
     209: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
     212: aload_1
     213: invokeinterface #17,  1           // InterfaceMethod org/joda/time/ReadablePartial.getChronology:()Lorg/joda/time/Chronology;
     218: invokestatic  #6                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
     221: invokevirtual #23                 // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
     224: astore        4
     226: aload_0
     227: aload         4
     229: aload_0
     230: aload         4
     232: aload_1
     233: lconst_0
     234: invokevirtual #24                 // Method org/joda/time/Chronology.set:(Lorg/joda/time/ReadablePartial;J)J
     237: aload         4
     239: aload_2
     240: lconst_0
     241: invokevirtual #24                 // Method org/joda/time/Chronology.set:(Lorg/joda/time/ReadablePartial;J)J
     244: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;JJ)[I
     247: putfield      #5                  // Field iValues:[I
     250: return

  protected org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration, org.joda.time.PeriodType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload_3
       6: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
       9: astore_3
      10: aload_1
      11: invokestatic  #9                  // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
      14: lstore        4
      16: aload_2
      17: invokestatic  #25                 // Method org/joda/time/DateTimeUtils.getDurationMillis:(Lorg/joda/time/ReadableDuration;)J
      20: lstore        6
      22: lload         4
      24: lload         6
      26: invokestatic  #26                 // Method org/joda/time/field/FieldUtils.safeAdd:(JJ)J
      29: lstore        8
      31: aload_1
      32: invokestatic  #27                 // Method org/joda/time/DateTimeUtils.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;
      35: astore        10
      37: aload_0
      38: aload_3
      39: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      42: aload_0
      43: aload         10
      45: aload_0
      46: lload         4
      48: lload         8
      50: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;JJ)[I
      53: putfield      #5                  // Field iValues:[I
      56: return

  protected org.joda.time.base.BasePeriod(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant, org.joda.time.PeriodType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload_3
       6: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
       9: astore_3
      10: aload_1
      11: invokestatic  #25                 // Method org/joda/time/DateTimeUtils.getDurationMillis:(Lorg/joda/time/ReadableDuration;)J
      14: lstore        4
      16: aload_2
      17: invokestatic  #9                  // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
      20: lstore        6
      22: lload         6
      24: lload         4
      26: invokestatic  #28                 // Method org/joda/time/field/FieldUtils.safeSubtract:(JJ)J
      29: lstore        8
      31: aload_2
      32: invokestatic  #27                 // Method org/joda/time/DateTimeUtils.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;
      35: astore        10
      37: aload_0
      38: aload_3
      39: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      42: aload_0
      43: aload         10
      45: aload_0
      46: lload         8
      48: lload         6
      50: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;JJ)[I
      53: putfield      #5                  // Field iValues:[I
      56: return

  protected org.joda.time.base.BasePeriod(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: invokestatic  #29                 // Method org/joda/time/PeriodType.standard:()Lorg/joda/time/PeriodType;
       8: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      11: invokestatic  #30                 // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
      14: getstatic     #31                 // Field DUMMY_PERIOD:Lorg/joda/time/ReadablePeriod;
      17: lload_1
      18: invokevirtual #32                 // Method org/joda/time/chrono/ISOChronology.get:(Lorg/joda/time/ReadablePeriod;J)[I
      21: astore_3
      22: aload_0
      23: bipush        8
      25: newarray       int
      27: putfield      #5                  // Field iValues:[I
      30: aload_3
      31: iconst_0
      32: aload_0
      33: getfield      #5                  // Field iValues:[I
      36: iconst_4
      37: iconst_4
      38: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: return

  protected org.joda.time.base.BasePeriod(long, org.joda.time.PeriodType, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload_3
       6: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
       9: astore_3
      10: aload         4
      12: invokestatic  #6                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      15: astore        4
      17: aload_0
      18: aload_3
      19: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      22: aload_0
      23: aload         4
      25: aload_0
      26: lload_1
      27: invokevirtual #34                 // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePeriod;J)[I
      30: putfield      #5                  // Field iValues:[I
      33: return

  protected org.joda.time.base.BasePeriod(java.lang.Object, org.joda.time.PeriodType, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: invokestatic  #35                 // Method org/joda/time/convert/ConverterManager.getInstance:()Lorg/joda/time/convert/ConverterManager;
       7: aload_1
       8: invokevirtual #36                 // Method org/joda/time/convert/ConverterManager.getPeriodConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PeriodConverter;
      11: astore        4
      13: aload_2
      14: ifnonnull     28
      17: aload         4
      19: aload_1
      20: invokeinterface #37,  2           // InterfaceMethod org/joda/time/convert/PeriodConverter.getPeriodType:(Ljava/lang/Object;)Lorg/joda/time/PeriodType;
      25: goto          29
      28: aload_2
      29: astore_2
      30: aload_0
      31: aload_2
      32: invokevirtual #2                  // Method checkPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
      35: astore_2
      36: aload_0
      37: aload_2
      38: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
      41: aload_0
      42: instanceof    #38                 // class org/joda/time/ReadWritablePeriod
      45: ifeq          79
      48: aload_0
      49: aload_0
      50: invokevirtual #8                  // Method size:()I
      53: newarray       int
      55: putfield      #5                  // Field iValues:[I
      58: aload_3
      59: invokestatic  #6                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      62: astore_3
      63: aload         4
      65: aload_0
      66: checkcast     #38                 // class org/joda/time/ReadWritablePeriod
      69: aload_1
      70: aload_3
      71: invokeinterface #39,  4           // InterfaceMethod org/joda/time/convert/PeriodConverter.setInto:(Lorg/joda/time/ReadWritablePeriod;Ljava/lang/Object;Lorg/joda/time/Chronology;)V
      76: goto          96
      79: aload_0
      80: new           #40                 // class org/joda/time/MutablePeriod
      83: dup
      84: aload_1
      85: aload_2
      86: aload_3
      87: invokespecial #41                 // Method org/joda/time/MutablePeriod."<init>":(Ljava/lang/Object;Lorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V
      90: invokevirtual #42                 // Method org/joda/time/MutablePeriod.getValues:()[I
      93: putfield      #5                  // Field iValues:[I
      96: return

  protected org.joda.time.base.BasePeriod(int[], org.joda.time.PeriodType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joda/time/base/AbstractPeriod."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field iValues:[I
      14: return

  protected org.joda.time.PeriodType checkPeriodType(org.joda.time.PeriodType);
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method org/joda/time/DateTimeUtils.getPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;
       4: areturn

  public org.joda.time.PeriodType getPeriodType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iType:Lorg/joda/time/PeriodType;
       4: areturn

  public int getValue(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iValues:[I
       4: iload_1
       5: iaload
       6: ireturn

  public org.joda.time.Duration toDurationFrom(org.joda.time.ReadableInstant);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
       4: lstore_2
       5: aload_1
       6: invokestatic  #27                 // Method org/joda/time/DateTimeUtils.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;
       9: astore        4
      11: aload         4
      13: aload_0
      14: lload_2
      15: iconst_1
      16: invokevirtual #44                 // Method org/joda/time/Chronology.add:(Lorg/joda/time/ReadablePeriod;JI)J
      19: lstore        5
      21: new           #45                 // class org/joda/time/Duration
      24: dup
      25: lload_2
      26: lload         5
      28: invokespecial #46                 // Method org/joda/time/Duration."<init>":(JJ)V
      31: areturn

  public org.joda.time.Duration toDurationTo(org.joda.time.ReadableInstant);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
       4: lstore_2
       5: aload_1
       6: invokestatic  #27                 // Method org/joda/time/DateTimeUtils.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;
       9: astore        4
      11: aload         4
      13: aload_0
      14: lload_2
      15: iconst_m1
      16: invokevirtual #44                 // Method org/joda/time/Chronology.add:(Lorg/joda/time/ReadablePeriod;JI)J
      19: lstore        5
      21: new           #45                 // class org/joda/time/Duration
      24: dup
      25: lload         5
      27: lload_2
      28: invokespecial #46                 // Method org/joda/time/Duration."<init>":(JJ)V
      31: areturn

  private void checkAndUpdate(org.joda.time.DurationFieldType, int[], int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method indexOf:(Lorg/joda/time/DurationFieldType;)I
       5: istore        4
       7: iload         4
       9: iconst_m1
      10: if_icmpne     52
      13: iload_3
      14: ifeq          57
      17: new           #11                 // class java/lang/IllegalArgumentException
      20: dup
      21: new           #48                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #50                 // String Period does not support field \'
      30: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #52                 // Method org/joda/time/DurationFieldType.getName:()Ljava/lang/String;
      37: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #53                 // String \'
      42: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_2
      53: iload         4
      55: iload_3
      56: iastore
      57: return

  protected void setPeriod(org.joda.time.ReadablePeriod);
    Code:
       0: aload_1
       1: ifnonnull     17
       4: aload_0
       5: aload_0
       6: invokevirtual #8                  // Method size:()I
       9: newarray       int
      11: invokevirtual #55                 // Method setValues:([I)V
      14: goto          22
      17: aload_0
      18: aload_1
      19: invokespecial #56                 // Method setPeriodInternal:(Lorg/joda/time/ReadablePeriod;)V
      22: return

  private void setPeriodInternal(org.joda.time.ReadablePeriod);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method size:()I
       4: newarray       int
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_1
      10: invokeinterface #57,  1           // InterfaceMethod org/joda/time/ReadablePeriod.size:()I
      15: istore        4
      17: iload_3
      18: iload         4
      20: if_icmpge     56
      23: aload_1
      24: iload_3
      25: invokeinterface #58,  2           // InterfaceMethod org/joda/time/ReadablePeriod.getFieldType:(I)Lorg/joda/time/DurationFieldType;
      30: astore        5
      32: aload_1
      33: iload_3
      34: invokeinterface #59,  2           // InterfaceMethod org/joda/time/ReadablePeriod.getValue:(I)I
      39: istore        6
      41: aload_0
      42: aload         5
      44: aload_2
      45: iload         6
      47: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      50: iinc          3, 1
      53: goto          17
      56: aload_0
      57: aload_2
      58: invokevirtual #55                 // Method setValues:([I)V
      61: return

  protected void setPeriod(int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: invokespecial #4                  // Method setPeriodInternal:(IIIIIIII)[I
      17: astore        9
      19: aload_0
      20: aload         9
      22: invokevirtual #55                 // Method setValues:([I)V
      25: return

  private int[] setPeriodInternal(int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method size:()I
       4: newarray       int
       6: astore        9
       8: aload_0
       9: invokestatic  #61                 // Method org/joda/time/DurationFieldType.years:()Lorg/joda/time/DurationFieldType;
      12: aload         9
      14: iload_1
      15: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      18: aload_0
      19: invokestatic  #62                 // Method org/joda/time/DurationFieldType.months:()Lorg/joda/time/DurationFieldType;
      22: aload         9
      24: iload_2
      25: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      28: aload_0
      29: invokestatic  #63                 // Method org/joda/time/DurationFieldType.weeks:()Lorg/joda/time/DurationFieldType;
      32: aload         9
      34: iload_3
      35: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      38: aload_0
      39: invokestatic  #64                 // Method org/joda/time/DurationFieldType.days:()Lorg/joda/time/DurationFieldType;
      42: aload         9
      44: iload         4
      46: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      49: aload_0
      50: invokestatic  #65                 // Method org/joda/time/DurationFieldType.hours:()Lorg/joda/time/DurationFieldType;
      53: aload         9
      55: iload         5
      57: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      60: aload_0
      61: invokestatic  #66                 // Method org/joda/time/DurationFieldType.minutes:()Lorg/joda/time/DurationFieldType;
      64: aload         9
      66: iload         6
      68: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      71: aload_0
      72: invokestatic  #67                 // Method org/joda/time/DurationFieldType.seconds:()Lorg/joda/time/DurationFieldType;
      75: aload         9
      77: iload         7
      79: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      82: aload_0
      83: invokestatic  #68                 // Method org/joda/time/DurationFieldType.millis:()Lorg/joda/time/DurationFieldType;
      86: aload         9
      88: iload         8
      90: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      93: aload         9
      95: areturn

  protected void setField(org.joda.time.DurationFieldType, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field iValues:[I
       5: aload_1
       6: iload_2
       7: invokevirtual #69                 // Method setFieldInto:([ILorg/joda/time/DurationFieldType;I)V
      10: return

  protected void setFieldInto(int[], org.joda.time.DurationFieldType, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #47                 // Method indexOf:(Lorg/joda/time/DurationFieldType;)I
       5: istore        4
       7: iload         4
       9: iconst_m1
      10: if_icmpne     53
      13: iload_3
      14: ifne          21
      17: aload_2
      18: ifnonnull     58
      21: new           #11                 // class java/lang/IllegalArgumentException
      24: dup
      25: new           #48                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #50                 // String Period does not support field \'
      34: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #53                 // String \'
      43: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_1
      54: iload         4
      56: iload_3
      57: iastore
      58: return

  protected void addField(org.joda.time.DurationFieldType, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field iValues:[I
       5: aload_1
       6: iload_2
       7: invokevirtual #71                 // Method addFieldInto:([ILorg/joda/time/DurationFieldType;I)V
      10: return

  protected void addFieldInto(int[], org.joda.time.DurationFieldType, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #47                 // Method indexOf:(Lorg/joda/time/DurationFieldType;)I
       5: istore        4
       7: iload         4
       9: iconst_m1
      10: if_icmpne     53
      13: iload_3
      14: ifne          21
      17: aload_2
      18: ifnonnull     65
      21: new           #11                 // class java/lang/IllegalArgumentException
      24: dup
      25: new           #48                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #50                 // String Period does not support field \'
      34: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #53                 // String \'
      43: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_1
      54: iload         4
      56: aload_1
      57: iload         4
      59: iaload
      60: iload_3
      61: invokestatic  #72                 // Method org/joda/time/field/FieldUtils.safeAdd:(II)I
      64: iastore
      65: return

  protected void mergePeriod(org.joda.time.ReadablePeriod);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: aload_0
       6: aload_0
       7: invokevirtual #73                 // Method getValues:()[I
      10: aload_1
      11: invokevirtual #74                 // Method mergePeriodInto:([ILorg/joda/time/ReadablePeriod;)[I
      14: invokevirtual #55                 // Method setValues:([I)V
      17: return

  protected int[] mergePeriodInto(int[], org.joda.time.ReadablePeriod);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokeinterface #57,  1           // InterfaceMethod org/joda/time/ReadablePeriod.size:()I
       8: istore        4
      10: iload_3
      11: iload         4
      13: if_icmpge     49
      16: aload_2
      17: iload_3
      18: invokeinterface #58,  2           // InterfaceMethod org/joda/time/ReadablePeriod.getFieldType:(I)Lorg/joda/time/DurationFieldType;
      23: astore        5
      25: aload_2
      26: iload_3
      27: invokeinterface #59,  2           // InterfaceMethod org/joda/time/ReadablePeriod.getValue:(I)I
      32: istore        6
      34: aload_0
      35: aload         5
      37: aload_1
      38: iload         6
      40: invokespecial #60                 // Method checkAndUpdate:(Lorg/joda/time/DurationFieldType;[II)V
      43: iinc          3, 1
      46: goto          10
      49: aload_1
      50: areturn

  protected void addPeriod(org.joda.time.ReadablePeriod);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: aload_0
       6: aload_0
       7: invokevirtual #73                 // Method getValues:()[I
      10: aload_1
      11: invokevirtual #75                 // Method addPeriodInto:([ILorg/joda/time/ReadablePeriod;)[I
      14: invokevirtual #55                 // Method setValues:([I)V
      17: return

  protected int[] addPeriodInto(int[], org.joda.time.ReadablePeriod);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokeinterface #57,  1           // InterfaceMethod org/joda/time/ReadablePeriod.size:()I
       8: istore        4
      10: iload_3
      11: iload         4
      13: if_icmpge     110
      16: aload_2
      17: iload_3
      18: invokeinterface #58,  2           // InterfaceMethod org/joda/time/ReadablePeriod.getFieldType:(I)Lorg/joda/time/DurationFieldType;
      23: astore        5
      25: aload_2
      26: iload_3
      27: invokeinterface #59,  2           // InterfaceMethod org/joda/time/ReadablePeriod.getValue:(I)I
      32: istore        6
      34: iload         6
      36: ifeq          104
      39: aload_0
      40: aload         5
      42: invokevirtual #47                 // Method indexOf:(Lorg/joda/time/DurationFieldType;)I
      45: istore        7
      47: iload         7
      49: iconst_m1
      50: if_icmpne     89
      53: new           #11                 // class java/lang/IllegalArgumentException
      56: dup
      57: new           #48                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #50                 // String Period does not support field \'
      66: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload         5
      71: invokevirtual #52                 // Method org/joda/time/DurationFieldType.getName:()Ljava/lang/String;
      74: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #53                 // String \'
      79: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_1
      90: iload         7
      92: aload_0
      93: iload         7
      95: invokevirtual #76                 // Method getValue:(I)I
      98: iload         6
     100: invokestatic  #72                 // Method org/joda/time/field/FieldUtils.safeAdd:(II)I
     103: iastore
     104: iinc          3, 1
     107: goto          10
     110: aload_1
     111: areturn

  protected void setValue(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iValues:[I
       4: iload_1
       5: iload_2
       6: iastore
       7: return

  protected void setValues(int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: getfield      #5                  // Field iValues:[I
       6: iconst_0
       7: aload_0
       8: getfield      #5                  // Field iValues:[I
      11: arraylength
      12: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      15: return

  static {};
    Code:
       0: new           #77                 // class org/joda/time/base/BasePeriod$1
       3: dup
       4: invokespecial #78                 // Method org/joda/time/base/BasePeriod$1."<init>":()V
       7: putstatic     #31                 // Field DUMMY_PERIOD:Lorg/joda/time/ReadablePeriod;
      10: return
}
