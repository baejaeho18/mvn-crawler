Compiled from "DateTimeFormatterBuilder.java"
final class org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId extends java.lang.Enum<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId> implements org.joda.time.format.InternalPrinter, org.joda.time.format.InternalParser {
  public static final org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId INSTANCE;

  private static final java.util.List<java.lang.String> ALL_IDS;

  static final int MAX_LENGTH;

  private static final org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[] $VALUES;

  public static final org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
       3: invokevirtual #2                  // Method "[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;"
       9: areturn

  public static org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
      10: areturn

  private org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public int estimatePrintedLength();
    Code:
       0: getstatic     #7                  // Field MAX_LENGTH:I
       3: ireturn

  public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload         6
       3: ifnull        14
       6: aload         6
       8: invokevirtual #8                  // Method org/joda/time/DateTimeZone.getID:()Ljava/lang/String;
      11: goto          16
      14: ldc           #9                  // String
      16: invokeinterface #10,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      21: pop
      22: return

  public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException;
    Code:
       0: return

  public int estimateParsedLength();
    Code:
       0: getstatic     #7                  // Field MAX_LENGTH:I
       3: ireturn

  public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_2
       4: iload_3
       5: invokestatic  #11                 // Method prefixedStartPosition:(Ljava/lang/CharSequence;I)I
       8: istore        5
      10: iload         5
      12: istore        6
      14: iload         6
      16: getstatic     #12                 // Field ALL_IDS:Ljava/util/List;
      19: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      24: if_icmpge     80
      27: getstatic     #12                 // Field ALL_IDS:Ljava/util/List;
      30: iload         6
      32: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #15                 // class java/lang/String
      40: astore        7
      42: aload_2
      43: iload_3
      44: aload         7
      46: invokestatic  #16                 // Method org/joda/time/format/DateTimeFormatterBuilder.csStartsWith:(Ljava/lang/CharSequence;ILjava/lang/String;)Z
      49: ifeq          80
      52: aload         4
      54: ifnull        70
      57: aload         7
      59: invokevirtual #17                 // Method java/lang/String.length:()I
      62: aload         4
      64: invokevirtual #17                 // Method java/lang/String.length:()I
      67: if_icmple     74
      70: aload         7
      72: astore        4
      74: iinc          6, 1
      77: goto          14
      80: aload         4
      82: ifnull        102
      85: aload_1
      86: aload         4
      88: invokestatic  #18                 // Method org/joda/time/DateTimeZone.forID:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      91: invokevirtual #19                 // Method org/joda/time/format/DateTimeParserBucket.setZone:(Lorg/joda/time/DateTimeZone;)V
      94: iload_3
      95: aload         4
      97: invokevirtual #17                 // Method java/lang/String.length:()I
     100: iadd
     101: ireturn
     102: iload_3
     103: iconst_m1
     104: ixor
     105: ireturn

  private static int prefixedStartPosition(java.lang.CharSequence, int);
    Code:
       0: iconst_0
       1: istore_2
       2: getstatic     #12                 // Field ALL_IDS:Ljava/util/List;
       5: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_1
      11: isub
      12: istore_3
      13: iload_2
      14: iload_3
      15: if_icmpgt     81
      18: iload_2
      19: iload_3
      20: iadd
      21: iconst_1
      22: iushr
      23: istore        4
      25: getstatic     #12                 // Field ALL_IDS:Ljava/util/List;
      28: iload         4
      30: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      35: checkcast     #15                 // class java/lang/String
      38: astore        5
      40: aload_0
      41: iload_1
      42: aload         5
      44: invokestatic  #20                 // Method org/joda/time/format/DateTimeFormatterBuilder.csCompare:(Ljava/lang/CharSequence;ILjava/lang/String;)I
      47: istore        6
      49: iload         6
      51: ifle          62
      54: iload         4
      56: iconst_1
      57: isub
      58: istore_3
      59: goto          78
      62: iload         6
      64: ifge          75
      67: iload         4
      69: iconst_1
      70: iadd
      71: istore_2
      72: goto          78
      75: iload         4
      77: ireturn
      78: goto          13
      81: iload_2
      82: ireturn

  static {};
    Code:
       0: new           #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
       3: dup
       4: ldc           #21                 // String INSTANCE
       6: iconst_0
       7: invokespecial #22                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #23                 // Field INSTANCE:Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
      13: iconst_1
      14: anewarray     #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
      17: dup
      18: iconst_0
      19: getstatic     #23                 // Field INSTANCE:Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
      26: new           #24                 // class java/util/ArrayList
      29: dup
      30: invokestatic  #25                 // Method org/joda/time/DateTimeZone.getAvailableIDs:()Ljava/util/Set;
      33: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      36: putstatic     #12                 // Field ALL_IDS:Ljava/util/List;
      39: getstatic     #12                 // Field ALL_IDS:Ljava/util/List;
      42: invokestatic  #27                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      45: iconst_0
      46: istore_0
      47: getstatic     #12                 // Field ALL_IDS:Ljava/util/List;
      50: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore_1
      56: aload_1
      57: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          87
      65: aload_1
      66: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #15                 // class java/lang/String
      74: astore_2
      75: iload_0
      76: aload_2
      77: invokevirtual #17                 // Method java/lang/String.length:()I
      80: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      83: istore_0
      84: goto          56
      87: iload_0
      88: putstatic     #7                  // Field MAX_LENGTH:I
      91: return
}
