Compiled from "LenientDateTimeField.java"
public class org.joda.time.field.LenientDateTimeField extends org.joda.time.field.DelegatedDateTimeField {
  private static final long serialVersionUID;

  private final org.joda.time.Chronology iBase;

  public static org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #1                  // class org/joda/time/field/StrictDateTimeField
      10: ifeq          21
      13: aload_0
      14: checkcast     #1                  // class org/joda/time/field/StrictDateTimeField
      17: invokevirtual #2                  // Method org/joda/time/field/StrictDateTimeField.getWrappedField:()Lorg/joda/time/DateTimeField;
      20: astore_0
      21: aload_0
      22: invokevirtual #3                  // Method org/joda/time/DateTimeField.isLenient:()Z
      25: ifeq          30
      28: aload_0
      29: areturn
      30: new           #4                  // class org/joda/time/field/LenientDateTimeField
      33: dup
      34: aload_0
      35: aload_1
      36: invokespecial #5                  // Method "<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/Chronology;)V
      39: areturn

  protected org.joda.time.field.LenientDateTimeField(org.joda.time.DateTimeField, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/joda/time/field/DelegatedDateTimeField."<init>":(Lorg/joda/time/DateTimeField;)V
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field iBase:Lorg/joda/time/Chronology;
      10: return

  public final boolean isLenient();
    Code:
       0: iconst_1
       1: ireturn

  public long set(long, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field iBase:Lorg/joda/time/Chronology;
       4: invokevirtual #8                  // Method org/joda/time/Chronology.getZone:()Lorg/joda/time/DateTimeZone;
       7: lload_1
       8: invokevirtual #9                  // Method org/joda/time/DateTimeZone.convertUTCToLocal:(J)J
      11: lstore        4
      13: iload_3
      14: i2l
      15: aload_0
      16: lload_1
      17: invokevirtual #10                 // Method get:(J)I
      20: i2l
      21: invokestatic  #11                 // Method org/joda/time/field/FieldUtils.safeSubtract:(JJ)J
      24: lstore        6
      26: aload_0
      27: invokevirtual #12                 // Method getType:()Lorg/joda/time/DateTimeFieldType;
      30: aload_0
      31: getfield      #7                  // Field iBase:Lorg/joda/time/Chronology;
      34: invokevirtual #13                 // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
      37: invokevirtual #14                 // Method org/joda/time/DateTimeFieldType.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;
      40: lload         4
      42: lload         6
      44: invokevirtual #15                 // Method org/joda/time/DateTimeField.add:(JJ)J
      47: lstore        4
      49: aload_0
      50: getfield      #7                  // Field iBase:Lorg/joda/time/Chronology;
      53: invokevirtual #8                  // Method org/joda/time/Chronology.getZone:()Lorg/joda/time/DateTimeZone;
      56: lload         4
      58: iconst_0
      59: lload_1
      60: invokevirtual #16                 // Method org/joda/time/DateTimeZone.convertLocalToUTC:(JZJ)J
      63: lreturn
}
