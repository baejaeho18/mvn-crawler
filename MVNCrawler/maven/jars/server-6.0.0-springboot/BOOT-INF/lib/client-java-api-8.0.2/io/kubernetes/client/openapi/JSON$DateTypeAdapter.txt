Compiled from "JSON.java"
public class io.kubernetes.client.openapi.JSON$DateTypeAdapter extends com.google.gson.TypeAdapter<java.util.Date> {
  private java.text.DateFormat dateFormat;

  public io.kubernetes.client.openapi.JSON$DateTypeAdapter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/gson/TypeAdapter."<init>":()V
       4: return

  public io.kubernetes.client.openapi.JSON$DateTypeAdapter(java.text.DateFormat);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/gson/TypeAdapter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dateFormat:Ljava/text/DateFormat;
       9: return

  public void setFormat(java.text.DateFormat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field dateFormat:Ljava/text/DateFormat;
       5: return

  public void write(com.google.gson.stream.JsonWriter, java.util.Date) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_1
       5: invokevirtual #3                  // Method com/google/gson/stream/JsonWriter.nullValue:()Lcom/google/gson/stream/JsonWriter;
       8: pop
       9: goto          48
      12: aload_0
      13: getfield      #2                  // Field dateFormat:Ljava/text/DateFormat;
      16: ifnull        31
      19: aload_0
      20: getfield      #2                  // Field dateFormat:Ljava/text/DateFormat;
      23: aload_2
      24: invokevirtual #4                  // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      27: astore_3
      28: goto          42
      31: invokestatic  #5                  // Method org/joda/time/format/ISODateTimeFormat.basicDateTime:()Lorg/joda/time/format/DateTimeFormatter;
      34: aload_2
      35: invokevirtual #6                  // Method java/util/Date.getTime:()J
      38: invokevirtual #7                  // Method org/joda/time/format/DateTimeFormatter.print:(J)Ljava/lang/String;
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #8                  // Method com/google/gson/stream/JsonWriter.value:(Ljava/lang/String;)Lcom/google/gson/stream/JsonWriter;
      47: pop
      48: return

  public java.util.Date read(com.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: getstatic     #9                  // Field io/kubernetes/client/openapi/JSON$1.$SwitchMap$com$google$gson$stream$JsonToken:[I
       3: aload_1
       4: invokevirtual #10                 // Method com/google/gson/stream/JsonReader.peek:()Lcom/google/gson/stream/JsonToken;
       7: invokevirtual #11                 // Method com/google/gson/stream/JsonToken.ordinal:()I
      10: iaload
      11: lookupswitch  { // 1
                     1: 28
               default: 34
          }
      28: aload_1
      29: invokevirtual #12                 // Method com/google/gson/stream/JsonReader.nextNull:()V
      32: aconst_null
      33: areturn
      34: aload_1
      35: invokevirtual #13                 // Method com/google/gson/stream/JsonReader.nextString:()Ljava/lang/String;
      38: astore_2
      39: aload_0
      40: getfield      #2                  // Field dateFormat:Ljava/text/DateFormat;
      43: ifnull        55
      46: aload_0
      47: getfield      #2                  // Field dateFormat:Ljava/text/DateFormat;
      50: aload_2
      51: invokevirtual #14                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      54: areturn
      55: invokestatic  #5                  // Method org/joda/time/format/ISODateTimeFormat.basicDateTime:()Lorg/joda/time/format/DateTimeFormatter;
      58: aload_2
      59: invokevirtual #15                 // Method org/joda/time/format/DateTimeFormatter.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;
      62: invokevirtual #16                 // Method org/joda/time/DateTime.toDate:()Ljava/util/Date;
      65: areturn
      66: astore_3
      67: new           #18                 // class com/google/gson/JsonParseException
      70: dup
      71: aload_3
      72: invokespecial #19                 // Method com/google/gson/JsonParseException."<init>":(Ljava/lang/Throwable;)V
      75: athrow
      76: astore_2
      77: new           #18                 // class com/google/gson/JsonParseException
      80: dup
      81: aload_2
      82: invokespecial #19                 // Method com/google/gson/JsonParseException."<init>":(Ljava/lang/Throwable;)V
      85: athrow
    Exception table:
       from    to  target type
          39    54    66   Class java/text/ParseException
          55    65    66   Class java/text/ParseException
           0    33    76   Class java/lang/IllegalArgumentException
          34    54    76   Class java/lang/IllegalArgumentException
          55    65    76   Class java/lang/IllegalArgumentException
          66    76    76   Class java/lang/IllegalArgumentException

  public java.lang.Object read(com.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method read:(Lcom/google/gson/stream/JsonReader;)Ljava/util/Date;
       5: areturn

  public void write(com.google.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #22                 // class java/util/Date
       6: invokevirtual #23                 // Method write:(Lcom/google/gson/stream/JsonWriter;Ljava/util/Date;)V
       9: return
}
