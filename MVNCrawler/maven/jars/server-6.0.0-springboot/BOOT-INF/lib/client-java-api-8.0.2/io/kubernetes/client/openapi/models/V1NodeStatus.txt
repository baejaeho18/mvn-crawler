Compiled from "V1NodeStatus.java"
public class io.kubernetes.client.openapi.models.V1NodeStatus {
  public static final java.lang.String SERIALIZED_NAME_ADDRESSES;

  private java.util.List<io.kubernetes.client.openapi.models.V1NodeAddress> addresses;

  public static final java.lang.String SERIALIZED_NAME_ALLOCATABLE;

  private java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity> allocatable;

  public static final java.lang.String SERIALIZED_NAME_CAPACITY;

  private java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity> capacity;

  public static final java.lang.String SERIALIZED_NAME_CONDITIONS;

  private java.util.List<io.kubernetes.client.openapi.models.V1NodeCondition> conditions;

  public static final java.lang.String SERIALIZED_NAME_CONFIG;

  private io.kubernetes.client.openapi.models.V1NodeConfigStatus config;

  public static final java.lang.String SERIALIZED_NAME_DAEMON_ENDPOINTS;

  private io.kubernetes.client.openapi.models.V1NodeDaemonEndpoints daemonEndpoints;

  public static final java.lang.String SERIALIZED_NAME_IMAGES;

  private java.util.List<io.kubernetes.client.openapi.models.V1ContainerImage> images;

  public static final java.lang.String SERIALIZED_NAME_NODE_INFO;

  private io.kubernetes.client.openapi.models.V1NodeSystemInfo nodeInfo;

  public static final java.lang.String SERIALIZED_NAME_PHASE;

  private java.lang.String phase;

  public static final java.lang.String SERIALIZED_NAME_VOLUMES_ATTACHED;

  private java.util.List<io.kubernetes.client.openapi.models.V1AttachedVolume> volumesAttached;

  public static final java.lang.String SERIALIZED_NAME_VOLUMES_IN_USE;

  private java.util.List<java.lang.String> volumesInUse;

  public io.kubernetes.client.openapi.models.V1NodeStatus();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field addresses:Ljava/util/List;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field allocatable:Ljava/util/Map;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field capacity:Ljava/util/Map;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field conditions:Ljava/util/List;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field images:Ljava/util/List;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field volumesAttached:Ljava/util/List;
      34: aload_0
      35: aconst_null
      36: putfield      #8                  // Field volumesInUse:Ljava/util/List;
      39: return

  public io.kubernetes.client.openapi.models.V1NodeStatus addresses(java.util.List<io.kubernetes.client.openapi.models.V1NodeAddress>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field addresses:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus addAddressesItem(io.kubernetes.client.openapi.models.V1NodeAddress);
    Code:
       0: aload_0
       1: getfield      #2                  // Field addresses:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #2                  // Field addresses:Ljava/util/List;
      18: aload_0
      19: getfield      #2                  // Field addresses:Ljava/util/List;
      22: aload_1
      23: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: areturn

  public java.util.List<io.kubernetes.client.openapi.models.V1NodeAddress> getAddresses();
    Code:
       0: aload_0
       1: getfield      #2                  // Field addresses:Ljava/util/List;
       4: areturn

  public void setAddresses(java.util.List<io.kubernetes.client.openapi.models.V1NodeAddress>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field addresses:Ljava/util/List;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus allocatable(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field allocatable:Ljava/util/Map;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus putAllocatableItem(java.lang.String, io.kubernetes.client.custom.Quantity);
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocatable:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #12                 // class java/util/HashMap
      11: dup
      12: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      15: putfield      #3                  // Field allocatable:Ljava/util/Map;
      18: aload_0
      19: getfield      #3                  // Field allocatable:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity> getAllocatable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocatable:Ljava/util/Map;
       4: areturn

  public void setAllocatable(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field allocatable:Ljava/util/Map;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus capacity(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field capacity:Ljava/util/Map;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus putCapacityItem(java.lang.String, io.kubernetes.client.custom.Quantity);
    Code:
       0: aload_0
       1: getfield      #4                  // Field capacity:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #12                 // class java/util/HashMap
      11: dup
      12: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      15: putfield      #4                  // Field capacity:Ljava/util/Map;
      18: aload_0
      19: getfield      #4                  // Field capacity:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity> getCapacity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field capacity:Ljava/util/Map;
       4: areturn

  public void setCapacity(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field capacity:Ljava/util/Map;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus conditions(java.util.List<io.kubernetes.client.openapi.models.V1NodeCondition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field conditions:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus addConditionsItem(io.kubernetes.client.openapi.models.V1NodeCondition);
    Code:
       0: aload_0
       1: getfield      #5                  // Field conditions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #5                  // Field conditions:Ljava/util/List;
      18: aload_0
      19: getfield      #5                  // Field conditions:Ljava/util/List;
      22: aload_1
      23: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: areturn

  public java.util.List<io.kubernetes.client.openapi.models.V1NodeCondition> getConditions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field conditions:Ljava/util/List;
       4: areturn

  public void setConditions(java.util.List<io.kubernetes.client.openapi.models.V1NodeCondition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field conditions:Ljava/util/List;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus config(io.kubernetes.client.openapi.models.V1NodeConfigStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeConfigStatus getConfig();
    Code:
       0: aload_0
       1: getfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
       4: areturn

  public void setConfig(io.kubernetes.client.openapi.models.V1NodeConfigStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus daemonEndpoints(io.kubernetes.client.openapi.models.V1NodeDaemonEndpoints);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeDaemonEndpoints getDaemonEndpoints();
    Code:
       0: aload_0
       1: getfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
       4: areturn

  public void setDaemonEndpoints(io.kubernetes.client.openapi.models.V1NodeDaemonEndpoints);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus images(java.util.List<io.kubernetes.client.openapi.models.V1ContainerImage>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field images:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus addImagesItem(io.kubernetes.client.openapi.models.V1ContainerImage);
    Code:
       0: aload_0
       1: getfield      #6                  // Field images:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #6                  // Field images:Ljava/util/List;
      18: aload_0
      19: getfield      #6                  // Field images:Ljava/util/List;
      22: aload_1
      23: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: areturn

  public java.util.List<io.kubernetes.client.openapi.models.V1ContainerImage> getImages();
    Code:
       0: aload_0
       1: getfield      #6                  // Field images:Ljava/util/List;
       4: areturn

  public void setImages(java.util.List<io.kubernetes.client.openapi.models.V1ContainerImage>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field images:Ljava/util/List;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus nodeInfo(io.kubernetes.client.openapi.models.V1NodeSystemInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeSystemInfo getNodeInfo();
    Code:
       0: aload_0
       1: getfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
       4: areturn

  public void setNodeInfo(io.kubernetes.client.openapi.models.V1NodeSystemInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus phase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field phase:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getPhase();
    Code:
       0: aload_0
       1: getfield      #18                 // Field phase:Ljava/lang/String;
       4: areturn

  public void setPhase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field phase:Ljava/lang/String;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus volumesAttached(java.util.List<io.kubernetes.client.openapi.models.V1AttachedVolume>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field volumesAttached:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus addVolumesAttachedItem(io.kubernetes.client.openapi.models.V1AttachedVolume);
    Code:
       0: aload_0
       1: getfield      #7                  // Field volumesAttached:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #7                  // Field volumesAttached:Ljava/util/List;
      18: aload_0
      19: getfield      #7                  // Field volumesAttached:Ljava/util/List;
      22: aload_1
      23: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: areturn

  public java.util.List<io.kubernetes.client.openapi.models.V1AttachedVolume> getVolumesAttached();
    Code:
       0: aload_0
       1: getfield      #7                  // Field volumesAttached:Ljava/util/List;
       4: areturn

  public void setVolumesAttached(java.util.List<io.kubernetes.client.openapi.models.V1AttachedVolume>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field volumesAttached:Ljava/util/List;
       5: return

  public io.kubernetes.client.openapi.models.V1NodeStatus volumesInUse(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field volumesInUse:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.models.V1NodeStatus addVolumesInUseItem(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field volumesInUse:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #8                  // Field volumesInUse:Ljava/util/List;
      18: aload_0
      19: getfield      #8                  // Field volumesInUse:Ljava/util/List;
      22: aload_1
      23: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: areturn

  public java.util.List<java.lang.String> getVolumesInUse();
    Code:
       0: aload_0
       1: getfield      #8                  // Field volumesInUse:Ljava/util/List;
       4: areturn

  public void setVolumesInUse(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field volumesInUse:Ljava/util/List;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #20                 // class io/kubernetes/client/openapi/models/V1NodeStatus
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field addresses:Ljava/util/List;
      33: aload_2
      34: getfield      #2                  // Field addresses:Ljava/util/List;
      37: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          187
      43: aload_0
      44: getfield      #3                  // Field allocatable:Ljava/util/Map;
      47: aload_2
      48: getfield      #3                  // Field allocatable:Ljava/util/Map;
      51: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          187
      57: aload_0
      58: getfield      #4                  // Field capacity:Ljava/util/Map;
      61: aload_2
      62: getfield      #4                  // Field capacity:Ljava/util/Map;
      65: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: ifeq          187
      71: aload_0
      72: getfield      #5                  // Field conditions:Ljava/util/List;
      75: aload_2
      76: getfield      #5                  // Field conditions:Ljava/util/List;
      79: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      82: ifeq          187
      85: aload_0
      86: getfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
      89: aload_2
      90: getfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
      93: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifeq          187
      99: aload_0
     100: getfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
     103: aload_2
     104: getfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
     107: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     110: ifeq          187
     113: aload_0
     114: getfield      #6                  // Field images:Ljava/util/List;
     117: aload_2
     118: getfield      #6                  // Field images:Ljava/util/List;
     121: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     124: ifeq          187
     127: aload_0
     128: getfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
     131: aload_2
     132: getfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
     135: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     138: ifeq          187
     141: aload_0
     142: getfield      #18                 // Field phase:Ljava/lang/String;
     145: aload_2
     146: getfield      #18                 // Field phase:Ljava/lang/String;
     149: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     152: ifeq          187
     155: aload_0
     156: getfield      #7                  // Field volumesAttached:Ljava/util/List;
     159: aload_2
     160: getfield      #7                  // Field volumesAttached:Ljava/util/List;
     163: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     166: ifeq          187
     169: aload_0
     170: getfield      #8                  // Field volumesInUse:Ljava/util/List;
     173: aload_2
     174: getfield      #8                  // Field volumesInUse:Ljava/util/List;
     177: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     180: ifeq          187
     183: iconst_1
     184: goto          188
     187: iconst_0
     188: ireturn

  public int hashCode();
    Code:
       0: bipush        11
       2: anewarray     #22                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #2                  // Field addresses:Ljava/util/List;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #3                  // Field allocatable:Ljava/util/Map;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #4                  // Field capacity:Ljava/util/Map;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_0
      29: getfield      #5                  // Field conditions:Ljava/util/List;
      32: aastore
      33: dup
      34: iconst_4
      35: aload_0
      36: getfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
      39: aastore
      40: dup
      41: iconst_5
      42: aload_0
      43: getfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
      46: aastore
      47: dup
      48: bipush        6
      50: aload_0
      51: getfield      #6                  // Field images:Ljava/util/List;
      54: aastore
      55: dup
      56: bipush        7
      58: aload_0
      59: getfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
      62: aastore
      63: dup
      64: bipush        8
      66: aload_0
      67: getfield      #18                 // Field phase:Ljava/lang/String;
      70: aastore
      71: dup
      72: bipush        9
      74: aload_0
      75: getfield      #7                  // Field volumesAttached:Ljava/util/List;
      78: aastore
      79: dup
      80: bipush        10
      82: aload_0
      83: getfield      #8                  // Field volumesInUse:Ljava/util/List;
      86: aastore
      87: invokestatic  #23                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      90: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #26                 // String class V1NodeStatus {\n
      11: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #28                 // String     addresses:
      18: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: aload_0
      23: getfield      #2                  // Field addresses:Ljava/util/List;
      26: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #30                 // String \n
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: ldc           #31                 // String     allocatable:
      41: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: aload_0
      46: getfield      #3                  // Field allocatable:Ljava/util/Map;
      49: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #30                 // String \n
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: ldc           #32                 // String     capacity:
      64: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: aload_0
      69: getfield      #4                  // Field capacity:Ljava/util/Map;
      72: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
      75: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #30                 // String \n
      80: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: ldc           #33                 // String     conditions:
      87: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: aload_0
      92: getfield      #5                  // Field conditions:Ljava/util/List;
      95: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
      98: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #30                 // String \n
     103: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: pop
     107: aload_1
     108: ldc           #34                 // String     config:
     110: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: aload_0
     115: getfield      #15                 // Field config:Lio/kubernetes/client/openapi/models/V1NodeConfigStatus;
     118: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     121: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #30                 // String \n
     126: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: pop
     130: aload_1
     131: ldc           #35                 // String     daemonEndpoints:
     133: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_0
     137: aload_0
     138: getfield      #16                 // Field daemonEndpoints:Lio/kubernetes/client/openapi/models/V1NodeDaemonEndpoints;
     141: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     144: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #30                 // String \n
     149: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: pop
     153: aload_1
     154: ldc           #36                 // String     images:
     156: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_0
     160: aload_0
     161: getfield      #6                  // Field images:Ljava/util/List;
     164: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     167: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: ldc           #30                 // String \n
     172: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: pop
     176: aload_1
     177: ldc           #37                 // String     nodeInfo:
     179: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload_0
     183: aload_0
     184: getfield      #17                 // Field nodeInfo:Lio/kubernetes/client/openapi/models/V1NodeSystemInfo;
     187: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     190: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: ldc           #30                 // String \n
     195: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: pop
     199: aload_1
     200: ldc           #38                 // String     phase:
     202: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: aload_0
     206: aload_0
     207: getfield      #18                 // Field phase:Ljava/lang/String;
     210: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     213: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: ldc           #30                 // String \n
     218: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: pop
     222: aload_1
     223: ldc           #39                 // String     volumesAttached:
     225: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload_0
     229: aload_0
     230: getfield      #7                  // Field volumesAttached:Ljava/util/List;
     233: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     236: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: ldc           #30                 // String \n
     241: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: pop
     245: aload_1
     246: ldc           #40                 // String     volumesInUse:
     248: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: aload_0
     252: aload_0
     253: getfield      #8                  // Field volumesInUse:Ljava/util/List;
     256: invokespecial #29                 // Method toIndentedString:(Ljava/lang/Object;)Ljava/lang/String;
     259: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: ldc           #30                 // String \n
     264: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: pop
     268: aload_1
     269: ldc           #41                 // String }
     271: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: pop
     275: aload_1
     276: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     279: areturn

  private java.lang.String toIndentedString(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #43                 // String null
       6: areturn
       7: aload_1
       8: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: ldc           #30                 // String \n
      13: ldc           #45                 // String \n
      15: invokevirtual #46                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      18: areturn
}
