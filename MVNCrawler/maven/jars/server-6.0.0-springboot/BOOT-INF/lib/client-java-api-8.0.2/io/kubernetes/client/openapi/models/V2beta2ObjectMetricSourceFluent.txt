Compiled from "V2beta2ObjectMetricSourceFluent.java"
public interface io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent<A extends io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V2beta2CrossVersionObjectReference getDescribedObject();

  public abstract io.kubernetes.client.openapi.models.V2beta2CrossVersionObjectReference buildDescribedObject();

  public abstract A withDescribedObject(io.kubernetes.client.openapi.models.V2beta2CrossVersionObjectReference);

  public abstract java.lang.Boolean hasDescribedObject();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$DescribedObjectNested<A> withNewDescribedObject();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$DescribedObjectNested<A> withNewDescribedObjectLike(io.kubernetes.client.openapi.models.V2beta2CrossVersionObjectReference);

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$DescribedObjectNested<A> editDescribedObject();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$DescribedObjectNested<A> editOrNewDescribedObject();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$DescribedObjectNested<A> editOrNewDescribedObjectLike(io.kubernetes.client.openapi.models.V2beta2CrossVersionObjectReference);

  public abstract io.kubernetes.client.openapi.models.V2beta2MetricIdentifier getMetric();

  public abstract io.kubernetes.client.openapi.models.V2beta2MetricIdentifier buildMetric();

  public abstract A withMetric(io.kubernetes.client.openapi.models.V2beta2MetricIdentifier);

  public abstract java.lang.Boolean hasMetric();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$MetricNested<A> withNewMetric();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$MetricNested<A> withNewMetricLike(io.kubernetes.client.openapi.models.V2beta2MetricIdentifier);

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$MetricNested<A> editMetric();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$MetricNested<A> editOrNewMetric();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$MetricNested<A> editOrNewMetricLike(io.kubernetes.client.openapi.models.V2beta2MetricIdentifier);

  public abstract io.kubernetes.client.openapi.models.V2beta2MetricTarget getTarget();

  public abstract io.kubernetes.client.openapi.models.V2beta2MetricTarget buildTarget();

  public abstract A withTarget(io.kubernetes.client.openapi.models.V2beta2MetricTarget);

  public abstract java.lang.Boolean hasTarget();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$TargetNested<A> withNewTarget();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$TargetNested<A> withNewTargetLike(io.kubernetes.client.openapi.models.V2beta2MetricTarget);

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$TargetNested<A> editTarget();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$TargetNested<A> editOrNewTarget();

  public abstract io.kubernetes.client.openapi.models.V2beta2ObjectMetricSourceFluent$TargetNested<A> editOrNewTargetLike(io.kubernetes.client.openapi.models.V2beta2MetricTarget);
}
