Compiled from "V1beta1NetworkPolicyEgressRuleFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent<A extends io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToPorts(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract A setToPorts(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract A addToPorts(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort...);

  public abstract A addAllToPorts(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort>);

  public abstract A removeFromPorts(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort...);

  public abstract A removeAllFromPorts(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort>);

  public abstract A removeMatchingFromPorts(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort> getPorts();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort> buildPorts();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildPort(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildFirstPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildLastPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract java.lang.Boolean hasMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract A withPorts(java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort>);

  public abstract A withPorts(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort...);

  public abstract java.lang.Boolean hasPorts();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> addNewPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> addNewPortLike(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> setNewPortLike(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> editPort(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> editFirstPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> editLastPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$PortsNested<A> editMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract A addToTo(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract A setToTo(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract A addToTo(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer...);

  public abstract A addAllToTo(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer>);

  public abstract A removeFromTo(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer...);

  public abstract A removeAllFromTo(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer>);

  public abstract A removeMatchingFromTo(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer> getTo();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer> buildTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildTo(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildFirstTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildLastTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildMatchingTo(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract java.lang.Boolean hasMatchingTo(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract A withTo(java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer>);

  public abstract A withTo(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer...);

  public abstract java.lang.Boolean hasTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> addNewTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> addNewToLike(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> setNewToLike(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> editTo(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> editFirstTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> editLastTo();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyEgressRuleFluent$ToNested<A> editMatchingTo(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);
}
