Compiled from "V1PodConditionFluent.java"
public interface io.kubernetes.client.openapi.models.V1PodConditionFluent<A extends io.kubernetes.client.openapi.models.V1PodConditionFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract org.joda.time.DateTime getLastProbeTime();

  public abstract A withLastProbeTime(org.joda.time.DateTime);

  public abstract java.lang.Boolean hasLastProbeTime();

  public abstract A withNewLastProbeTime(int, int, int, int, int);

  public abstract A withNewLastProbeTime(java.lang.Object);

  public abstract A withNewLastProbeTime(long);

  public abstract org.joda.time.DateTime getLastTransitionTime();

  public abstract A withLastTransitionTime(org.joda.time.DateTime);

  public abstract java.lang.Boolean hasLastTransitionTime();

  public abstract A withNewLastTransitionTime(int, int, int, int, int);

  public abstract A withNewLastTransitionTime(java.lang.Object);

  public abstract A withNewLastTransitionTime(long);

  public abstract java.lang.String getMessage();

  public abstract A withMessage(java.lang.String);

  public abstract java.lang.Boolean hasMessage();

  public abstract A withNewMessage(java.lang.String);

  public abstract A withNewMessage(java.lang.StringBuilder);

  public abstract A withNewMessage(java.lang.StringBuffer);

  public abstract java.lang.String getReason();

  public abstract A withReason(java.lang.String);

  public abstract java.lang.Boolean hasReason();

  public abstract A withNewReason(java.lang.String);

  public abstract A withNewReason(java.lang.StringBuilder);

  public abstract A withNewReason(java.lang.StringBuffer);

  public abstract java.lang.String getStatus();

  public abstract A withStatus(java.lang.String);

  public abstract java.lang.Boolean hasStatus();

  public abstract A withNewStatus(java.lang.String);

  public abstract A withNewStatus(java.lang.StringBuilder);

  public abstract A withNewStatus(java.lang.StringBuffer);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
