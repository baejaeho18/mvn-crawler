Compiled from "V1alpha1PodPresetSpecFluent.java"
public interface io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent<A extends io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToEnv(int, io.kubernetes.client.openapi.models.V1EnvVar);

  public abstract A setToEnv(int, io.kubernetes.client.openapi.models.V1EnvVar);

  public abstract A addToEnv(io.kubernetes.client.openapi.models.V1EnvVar...);

  public abstract A addAllToEnv(java.util.Collection<io.kubernetes.client.openapi.models.V1EnvVar>);

  public abstract A removeFromEnv(io.kubernetes.client.openapi.models.V1EnvVar...);

  public abstract A removeAllFromEnv(java.util.Collection<io.kubernetes.client.openapi.models.V1EnvVar>);

  public abstract A removeMatchingFromEnv(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvVarBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EnvVar> getEnv();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EnvVar> buildEnv();

  public abstract io.kubernetes.client.openapi.models.V1EnvVar buildEnv(int);

  public abstract io.kubernetes.client.openapi.models.V1EnvVar buildFirstEnv();

  public abstract io.kubernetes.client.openapi.models.V1EnvVar buildLastEnv();

  public abstract io.kubernetes.client.openapi.models.V1EnvVar buildMatchingEnv(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvVarBuilder>);

  public abstract java.lang.Boolean hasMatchingEnv(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvVarBuilder>);

  public abstract A withEnv(java.util.List<io.kubernetes.client.openapi.models.V1EnvVar>);

  public abstract A withEnv(io.kubernetes.client.openapi.models.V1EnvVar...);

  public abstract java.lang.Boolean hasEnv();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> addNewEnv();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> addNewEnvLike(io.kubernetes.client.openapi.models.V1EnvVar);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> setNewEnvLike(int, io.kubernetes.client.openapi.models.V1EnvVar);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> editEnv(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> editFirstEnv();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> editLastEnv();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvNested<A> editMatchingEnv(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvVarBuilder>);

  public abstract A addToEnvFrom(int, io.kubernetes.client.openapi.models.V1EnvFromSource);

  public abstract A setToEnvFrom(int, io.kubernetes.client.openapi.models.V1EnvFromSource);

  public abstract A addToEnvFrom(io.kubernetes.client.openapi.models.V1EnvFromSource...);

  public abstract A addAllToEnvFrom(java.util.Collection<io.kubernetes.client.openapi.models.V1EnvFromSource>);

  public abstract A removeFromEnvFrom(io.kubernetes.client.openapi.models.V1EnvFromSource...);

  public abstract A removeAllFromEnvFrom(java.util.Collection<io.kubernetes.client.openapi.models.V1EnvFromSource>);

  public abstract A removeMatchingFromEnvFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvFromSourceBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EnvFromSource> getEnvFrom();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EnvFromSource> buildEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1EnvFromSource buildEnvFrom(int);

  public abstract io.kubernetes.client.openapi.models.V1EnvFromSource buildFirstEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1EnvFromSource buildLastEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1EnvFromSource buildMatchingEnvFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvFromSourceBuilder>);

  public abstract java.lang.Boolean hasMatchingEnvFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvFromSourceBuilder>);

  public abstract A withEnvFrom(java.util.List<io.kubernetes.client.openapi.models.V1EnvFromSource>);

  public abstract A withEnvFrom(io.kubernetes.client.openapi.models.V1EnvFromSource...);

  public abstract java.lang.Boolean hasEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> addNewEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> addNewEnvFromLike(io.kubernetes.client.openapi.models.V1EnvFromSource);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> setNewEnvFromLike(int, io.kubernetes.client.openapi.models.V1EnvFromSource);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> editEnvFrom(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> editFirstEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> editLastEnvFrom();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$EnvFromNested<A> editMatchingEnvFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EnvFromSourceBuilder>);

  public abstract io.kubernetes.client.openapi.models.V1LabelSelector getSelector();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelector buildSelector();

  public abstract A withSelector(io.kubernetes.client.openapi.models.V1LabelSelector);

  public abstract java.lang.Boolean hasSelector();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$SelectorNested<A> withNewSelector();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$SelectorNested<A> withNewSelectorLike(io.kubernetes.client.openapi.models.V1LabelSelector);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$SelectorNested<A> editSelector();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$SelectorNested<A> editOrNewSelector();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$SelectorNested<A> editOrNewSelectorLike(io.kubernetes.client.openapi.models.V1LabelSelector);

  public abstract A addToVolumeMounts(int, io.kubernetes.client.openapi.models.V1VolumeMount);

  public abstract A setToVolumeMounts(int, io.kubernetes.client.openapi.models.V1VolumeMount);

  public abstract A addToVolumeMounts(io.kubernetes.client.openapi.models.V1VolumeMount...);

  public abstract A addAllToVolumeMounts(java.util.Collection<io.kubernetes.client.openapi.models.V1VolumeMount>);

  public abstract A removeFromVolumeMounts(io.kubernetes.client.openapi.models.V1VolumeMount...);

  public abstract A removeAllFromVolumeMounts(java.util.Collection<io.kubernetes.client.openapi.models.V1VolumeMount>);

  public abstract A removeMatchingFromVolumeMounts(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeMountBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1VolumeMount> getVolumeMounts();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1VolumeMount> buildVolumeMounts();

  public abstract io.kubernetes.client.openapi.models.V1VolumeMount buildVolumeMount(int);

  public abstract io.kubernetes.client.openapi.models.V1VolumeMount buildFirstVolumeMount();

  public abstract io.kubernetes.client.openapi.models.V1VolumeMount buildLastVolumeMount();

  public abstract io.kubernetes.client.openapi.models.V1VolumeMount buildMatchingVolumeMount(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeMountBuilder>);

  public abstract java.lang.Boolean hasMatchingVolumeMount(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeMountBuilder>);

  public abstract A withVolumeMounts(java.util.List<io.kubernetes.client.openapi.models.V1VolumeMount>);

  public abstract A withVolumeMounts(io.kubernetes.client.openapi.models.V1VolumeMount...);

  public abstract java.lang.Boolean hasVolumeMounts();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> addNewVolumeMount();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> addNewVolumeMountLike(io.kubernetes.client.openapi.models.V1VolumeMount);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> setNewVolumeMountLike(int, io.kubernetes.client.openapi.models.V1VolumeMount);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> editVolumeMount(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> editFirstVolumeMount();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> editLastVolumeMount();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumeMountsNested<A> editMatchingVolumeMount(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeMountBuilder>);

  public abstract A addToVolumes(int, io.kubernetes.client.openapi.models.V1Volume);

  public abstract A setToVolumes(int, io.kubernetes.client.openapi.models.V1Volume);

  public abstract A addToVolumes(io.kubernetes.client.openapi.models.V1Volume...);

  public abstract A addAllToVolumes(java.util.Collection<io.kubernetes.client.openapi.models.V1Volume>);

  public abstract A removeFromVolumes(io.kubernetes.client.openapi.models.V1Volume...);

  public abstract A removeAllFromVolumes(java.util.Collection<io.kubernetes.client.openapi.models.V1Volume>);

  public abstract A removeMatchingFromVolumes(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1Volume> getVolumes();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1Volume> buildVolumes();

  public abstract io.kubernetes.client.openapi.models.V1Volume buildVolume(int);

  public abstract io.kubernetes.client.openapi.models.V1Volume buildFirstVolume();

  public abstract io.kubernetes.client.openapi.models.V1Volume buildLastVolume();

  public abstract io.kubernetes.client.openapi.models.V1Volume buildMatchingVolume(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeBuilder>);

  public abstract java.lang.Boolean hasMatchingVolume(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeBuilder>);

  public abstract A withVolumes(java.util.List<io.kubernetes.client.openapi.models.V1Volume>);

  public abstract A withVolumes(io.kubernetes.client.openapi.models.V1Volume...);

  public abstract java.lang.Boolean hasVolumes();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> addNewVolume();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> addNewVolumeLike(io.kubernetes.client.openapi.models.V1Volume);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> setNewVolumeLike(int, io.kubernetes.client.openapi.models.V1Volume);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> editVolume(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> editFirstVolume();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> editLastVolume();

  public abstract io.kubernetes.client.openapi.models.V1alpha1PodPresetSpecFluent$VolumesNested<A> editMatchingVolume(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeBuilder>);
}
