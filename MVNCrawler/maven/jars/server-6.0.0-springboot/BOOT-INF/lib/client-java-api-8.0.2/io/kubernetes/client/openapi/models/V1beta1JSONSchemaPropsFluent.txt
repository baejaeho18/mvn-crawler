Compiled from "V1beta1JSONSchemaPropsFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent<A extends io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getRef();

  public abstract A withRef(java.lang.String);

  public abstract java.lang.Boolean hasRef();

  public abstract A withNewRef(java.lang.String);

  public abstract A withNewRef(java.lang.StringBuilder);

  public abstract A withNewRef(java.lang.StringBuffer);

  public abstract java.lang.String getSchema();

  public abstract A withSchema(java.lang.String);

  public abstract java.lang.Boolean hasSchema();

  public abstract A withNewSchema(java.lang.String);

  public abstract A withNewSchema(java.lang.StringBuilder);

  public abstract A withNewSchema(java.lang.StringBuffer);

  public abstract java.lang.Object getAdditionalItems();

  public abstract A withAdditionalItems(java.lang.Object);

  public abstract java.lang.Boolean hasAdditionalItems();

  public abstract java.lang.Object getAdditionalProperties();

  public abstract A withAdditionalProperties(java.lang.Object);

  public abstract java.lang.Boolean hasAdditionalProperties();

  public abstract A addToAllOf(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A setToAllOf(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A addToAllOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract A addAllToAllOf(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeFromAllOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract A removeAllFromAllOf(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeMatchingFromAllOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> getAllOf();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> buildAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildAllOf(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildFirstAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildLastAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildMatchingAllOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.lang.Boolean hasMatchingAllOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract A withAllOf(java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A withAllOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract java.lang.Boolean hasAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> addNewAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> addNewAllOfLike(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> setNewAllOfLike(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> editAllOf(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> editFirstAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> editLastAllOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AllOfNested<A> editMatchingAllOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract A addToAnyOf(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A setToAnyOf(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A addToAnyOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract A addAllToAnyOf(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeFromAnyOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract A removeAllFromAnyOf(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeMatchingFromAnyOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> getAnyOf();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> buildAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildAnyOf(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildFirstAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildLastAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildMatchingAnyOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.lang.Boolean hasMatchingAnyOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract A withAnyOf(java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A withAnyOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract java.lang.Boolean hasAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> addNewAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> addNewAnyOfLike(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> setNewAnyOfLike(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> editAnyOf(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> editFirstAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> editLastAnyOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$AnyOfNested<A> editMatchingAnyOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.lang.Object getDefault();

  public abstract A withDefault(java.lang.Object);

  public abstract java.lang.Boolean hasDefault();

  public abstract A addToDefinitions(java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A addToDefinitions(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeFromDefinitions(java.lang.String);

  public abstract A removeFromDefinitions(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> getDefinitions();

  public abstract A withDefinitions(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract java.lang.Boolean hasDefinitions();

  public abstract A addToDependencies(java.lang.String, java.lang.Object);

  public abstract A addToDependencies(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract A removeFromDependencies(java.lang.String);

  public abstract A removeFromDependencies(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.util.Map<java.lang.String, java.lang.Object> getDependencies();

  public abstract A withDependencies(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.lang.Boolean hasDependencies();

  public abstract java.lang.String getDescription();

  public abstract A withDescription(java.lang.String);

  public abstract java.lang.Boolean hasDescription();

  public abstract A withNewDescription(java.lang.String);

  public abstract A withNewDescription(java.lang.StringBuilder);

  public abstract A withNewDescription(java.lang.StringBuffer);

  public abstract A addToEnum(int, java.lang.Object);

  public abstract A setToEnum(int, java.lang.Object);

  public abstract A addToEnum(java.lang.Object...);

  public abstract A addAllToEnum(java.util.Collection<java.lang.Object>);

  public abstract A removeFromEnum(java.lang.Object...);

  public abstract A removeAllFromEnum(java.util.Collection<java.lang.Object>);

  public abstract java.util.List<java.lang.Object> getEnum();

  public abstract java.lang.Object getEnum(int);

  public abstract java.lang.Object getFirstEnum();

  public abstract java.lang.Object getLastEnum();

  public abstract java.lang.Object getMatchingEnum(io.kubernetes.client.fluent.Predicate<java.lang.Object>);

  public abstract java.lang.Boolean hasMatchingEnum(io.kubernetes.client.fluent.Predicate<java.lang.Object>);

  public abstract A withEnum(java.util.List<java.lang.Object>);

  public abstract A withEnum(java.lang.Object...);

  public abstract java.lang.Boolean hasEnum();

  public abstract java.lang.Object getExample();

  public abstract A withExample(java.lang.Object);

  public abstract java.lang.Boolean hasExample();

  public abstract java.lang.Boolean isExclusiveMaximum();

  public abstract A withExclusiveMaximum(java.lang.Boolean);

  public abstract java.lang.Boolean hasExclusiveMaximum();

  public abstract A withNewExclusiveMaximum(java.lang.String);

  public abstract A withNewExclusiveMaximum(boolean);

  public abstract java.lang.Boolean isExclusiveMinimum();

  public abstract A withExclusiveMinimum(java.lang.Boolean);

  public abstract java.lang.Boolean hasExclusiveMinimum();

  public abstract A withNewExclusiveMinimum(java.lang.String);

  public abstract A withNewExclusiveMinimum(boolean);

  public abstract io.kubernetes.client.openapi.models.V1beta1ExternalDocumentation getExternalDocs();

  public abstract io.kubernetes.client.openapi.models.V1beta1ExternalDocumentation buildExternalDocs();

  public abstract A withExternalDocs(io.kubernetes.client.openapi.models.V1beta1ExternalDocumentation);

  public abstract java.lang.Boolean hasExternalDocs();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$ExternalDocsNested<A> withNewExternalDocs();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$ExternalDocsNested<A> withNewExternalDocsLike(io.kubernetes.client.openapi.models.V1beta1ExternalDocumentation);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$ExternalDocsNested<A> editExternalDocs();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$ExternalDocsNested<A> editOrNewExternalDocs();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$ExternalDocsNested<A> editOrNewExternalDocsLike(io.kubernetes.client.openapi.models.V1beta1ExternalDocumentation);

  public abstract java.lang.String getFormat();

  public abstract A withFormat(java.lang.String);

  public abstract java.lang.Boolean hasFormat();

  public abstract A withNewFormat(java.lang.String);

  public abstract A withNewFormat(java.lang.StringBuilder);

  public abstract A withNewFormat(java.lang.StringBuffer);

  public abstract java.lang.String getId();

  public abstract A withId(java.lang.String);

  public abstract java.lang.Boolean hasId();

  public abstract A withNewId(java.lang.String);

  public abstract A withNewId(java.lang.StringBuilder);

  public abstract A withNewId(java.lang.StringBuffer);

  public abstract java.lang.Object getItems();

  public abstract A withItems(java.lang.Object);

  public abstract java.lang.Boolean hasItems();

  public abstract java.lang.Long getMaxItems();

  public abstract A withMaxItems(java.lang.Long);

  public abstract java.lang.Boolean hasMaxItems();

  public abstract java.lang.Long getMaxLength();

  public abstract A withMaxLength(java.lang.Long);

  public abstract java.lang.Boolean hasMaxLength();

  public abstract java.lang.Long getMaxProperties();

  public abstract A withMaxProperties(java.lang.Long);

  public abstract java.lang.Boolean hasMaxProperties();

  public abstract java.lang.Double getMaximum();

  public abstract A withMaximum(java.lang.Double);

  public abstract java.lang.Boolean hasMaximum();

  public abstract java.lang.Long getMinItems();

  public abstract A withMinItems(java.lang.Long);

  public abstract java.lang.Boolean hasMinItems();

  public abstract java.lang.Long getMinLength();

  public abstract A withMinLength(java.lang.Long);

  public abstract java.lang.Boolean hasMinLength();

  public abstract java.lang.Long getMinProperties();

  public abstract A withMinProperties(java.lang.Long);

  public abstract java.lang.Boolean hasMinProperties();

  public abstract java.lang.Double getMinimum();

  public abstract A withMinimum(java.lang.Double);

  public abstract java.lang.Boolean hasMinimum();

  public abstract java.lang.Double getMultipleOf();

  public abstract A withMultipleOf(java.lang.Double);

  public abstract java.lang.Boolean hasMultipleOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps getNot();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildNot();

  public abstract A withNot(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract java.lang.Boolean hasNot();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$NotNested<A> withNewNot();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$NotNested<A> withNewNotLike(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$NotNested<A> editNot();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$NotNested<A> editOrNewNot();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$NotNested<A> editOrNewNotLike(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract java.lang.Boolean isNullable();

  public abstract A withNullable(java.lang.Boolean);

  public abstract java.lang.Boolean hasNullable();

  public abstract A withNewNullable(java.lang.String);

  public abstract A withNewNullable(boolean);

  public abstract A addToOneOf(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A setToOneOf(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A addToOneOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract A addAllToOneOf(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeFromOneOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract A removeAllFromOneOf(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeMatchingFromOneOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> getOneOf();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> buildOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildOneOf(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildFirstOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildLastOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps buildMatchingOneOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.lang.Boolean hasMatchingOneOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract A withOneOf(java.util.List<io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A withOneOf(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps...);

  public abstract java.lang.Boolean hasOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> addNewOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> addNewOneOfLike(io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> setNewOneOfLike(int, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> editOneOf(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> editFirstOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> editLastOneOf();

  public abstract io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsFluent$OneOfNested<A> editMatchingOneOf(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1JSONSchemaPropsBuilder>);

  public abstract java.lang.String getPattern();

  public abstract A withPattern(java.lang.String);

  public abstract java.lang.Boolean hasPattern();

  public abstract A withNewPattern(java.lang.String);

  public abstract A withNewPattern(java.lang.StringBuilder);

  public abstract A withNewPattern(java.lang.StringBuffer);

  public abstract A addToPatternProperties(java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A addToPatternProperties(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeFromPatternProperties(java.lang.String);

  public abstract A removeFromPatternProperties(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> getPatternProperties();

  public abstract A withPatternProperties(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract java.lang.Boolean hasPatternProperties();

  public abstract A addToProperties(java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps);

  public abstract A addToProperties(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract A removeFromProperties(java.lang.String);

  public abstract A removeFromProperties(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps> getProperties();

  public abstract A withProperties(java.util.Map<java.lang.String, io.kubernetes.client.openapi.models.V1beta1JSONSchemaProps>);

  public abstract java.lang.Boolean hasProperties();

  public abstract A addToRequired(int, java.lang.String);

  public abstract A setToRequired(int, java.lang.String);

  public abstract A addToRequired(java.lang.String...);

  public abstract A addAllToRequired(java.util.Collection<java.lang.String>);

  public abstract A removeFromRequired(java.lang.String...);

  public abstract A removeAllFromRequired(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getRequired();

  public abstract java.lang.String getRequired(int);

  public abstract java.lang.String getFirstRequired();

  public abstract java.lang.String getLastRequired();

  public abstract java.lang.String getMatchingRequired(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingRequired(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withRequired(java.util.List<java.lang.String>);

  public abstract A withRequired(java.lang.String...);

  public abstract java.lang.Boolean hasRequired();

  public abstract A addNewRequired(java.lang.String);

  public abstract A addNewRequired(java.lang.StringBuilder);

  public abstract A addNewRequired(java.lang.StringBuffer);

  public abstract java.lang.String getTitle();

  public abstract A withTitle(java.lang.String);

  public abstract java.lang.Boolean hasTitle();

  public abstract A withNewTitle(java.lang.String);

  public abstract A withNewTitle(java.lang.StringBuilder);

  public abstract A withNewTitle(java.lang.StringBuffer);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);

  public abstract java.lang.Boolean isUniqueItems();

  public abstract A withUniqueItems(java.lang.Boolean);

  public abstract java.lang.Boolean hasUniqueItems();

  public abstract A withNewUniqueItems(java.lang.String);

  public abstract A withNewUniqueItems(boolean);
}
