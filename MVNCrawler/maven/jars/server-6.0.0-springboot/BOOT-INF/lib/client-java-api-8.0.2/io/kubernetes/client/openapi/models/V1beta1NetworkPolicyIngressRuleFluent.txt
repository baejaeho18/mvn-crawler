Compiled from "V1beta1NetworkPolicyIngressRuleFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent<A extends io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToFrom(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract A setToFrom(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract A addToFrom(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer...);

  public abstract A addAllToFrom(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer>);

  public abstract A removeFromFrom(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer...);

  public abstract A removeAllFromFrom(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer>);

  public abstract A removeMatchingFromFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer> getFrom();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer> buildFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildFrom(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildFirstFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildLastFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer buildMatchingFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract java.lang.Boolean hasMatchingFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract A withFrom(java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer>);

  public abstract A withFrom(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer...);

  public abstract java.lang.Boolean hasFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> addNewFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> addNewFromLike(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> setNewFromLike(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeer);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> editFrom(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> editFirstFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> editLastFrom();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$FromNested<A> editMatchingFrom(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPeerBuilder>);

  public abstract A addToPorts(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract A setToPorts(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract A addToPorts(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort...);

  public abstract A addAllToPorts(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort>);

  public abstract A removeFromPorts(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort...);

  public abstract A removeAllFromPorts(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort>);

  public abstract A removeMatchingFromPorts(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort> getPorts();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort> buildPorts();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildPort(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildFirstPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildLastPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort buildMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract java.lang.Boolean hasMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);

  public abstract A withPorts(java.util.List<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort>);

  public abstract A withPorts(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort...);

  public abstract java.lang.Boolean hasPorts();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> addNewPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> addNewPortLike(io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> setNewPortLike(int, io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPort);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> editPort(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> editFirstPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> editLastPort();

  public abstract io.kubernetes.client.openapi.models.V1beta1NetworkPolicyIngressRuleFluent$PortsNested<A> editMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NetworkPolicyPortBuilder>);
}
