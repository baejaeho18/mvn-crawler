Compiled from "NetworkingV1beta1HTTPIngressRuleValueFluent.java"
public interface io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent<A extends io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToPaths(int, io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath);

  public abstract A setToPaths(int, io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath);

  public abstract A addToPaths(io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath...);

  public abstract A addAllToPaths(java.util.Collection<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath>);

  public abstract A removeFromPaths(io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath...);

  public abstract A removeAllFromPaths(java.util.Collection<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath>);

  public abstract A removeMatchingFromPaths(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPathBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath> getPaths();

  public abstract java.util.List<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath> buildPaths();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath buildPath(int);

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath buildFirstPath();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath buildLastPath();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath buildMatchingPath(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPathBuilder>);

  public abstract java.lang.Boolean hasMatchingPath(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPathBuilder>);

  public abstract A withPaths(java.util.List<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath>);

  public abstract A withPaths(io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath...);

  public abstract java.lang.Boolean hasPaths();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> addNewPath();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> addNewPathLike(io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath);

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> setNewPathLike(int, io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPath);

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> editPath(int);

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> editFirstPath();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> editLastPath();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressRuleValueFluent$PathsNested<A> editMatchingPath(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.NetworkingV1beta1HTTPIngressPathBuilder>);
}
