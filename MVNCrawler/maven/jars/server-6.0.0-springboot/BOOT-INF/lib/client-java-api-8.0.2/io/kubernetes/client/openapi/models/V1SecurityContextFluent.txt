Compiled from "V1SecurityContextFluent.java"
public interface io.kubernetes.client.openapi.models.V1SecurityContextFluent<A extends io.kubernetes.client.openapi.models.V1SecurityContextFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.Boolean isAllowPrivilegeEscalation();

  public abstract A withAllowPrivilegeEscalation(java.lang.Boolean);

  public abstract java.lang.Boolean hasAllowPrivilegeEscalation();

  public abstract A withNewAllowPrivilegeEscalation(java.lang.String);

  public abstract A withNewAllowPrivilegeEscalation(boolean);

  public abstract io.kubernetes.client.openapi.models.V1Capabilities getCapabilities();

  public abstract io.kubernetes.client.openapi.models.V1Capabilities buildCapabilities();

  public abstract A withCapabilities(io.kubernetes.client.openapi.models.V1Capabilities);

  public abstract java.lang.Boolean hasCapabilities();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$CapabilitiesNested<A> withNewCapabilities();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$CapabilitiesNested<A> withNewCapabilitiesLike(io.kubernetes.client.openapi.models.V1Capabilities);

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$CapabilitiesNested<A> editCapabilities();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$CapabilitiesNested<A> editOrNewCapabilities();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$CapabilitiesNested<A> editOrNewCapabilitiesLike(io.kubernetes.client.openapi.models.V1Capabilities);

  public abstract java.lang.Boolean isPrivileged();

  public abstract A withPrivileged(java.lang.Boolean);

  public abstract java.lang.Boolean hasPrivileged();

  public abstract A withNewPrivileged(java.lang.String);

  public abstract A withNewPrivileged(boolean);

  public abstract java.lang.String getProcMount();

  public abstract A withProcMount(java.lang.String);

  public abstract java.lang.Boolean hasProcMount();

  public abstract A withNewProcMount(java.lang.String);

  public abstract A withNewProcMount(java.lang.StringBuilder);

  public abstract A withNewProcMount(java.lang.StringBuffer);

  public abstract java.lang.Boolean isReadOnlyRootFilesystem();

  public abstract A withReadOnlyRootFilesystem(java.lang.Boolean);

  public abstract java.lang.Boolean hasReadOnlyRootFilesystem();

  public abstract A withNewReadOnlyRootFilesystem(java.lang.String);

  public abstract A withNewReadOnlyRootFilesystem(boolean);

  public abstract java.lang.Long getRunAsGroup();

  public abstract A withRunAsGroup(java.lang.Long);

  public abstract java.lang.Boolean hasRunAsGroup();

  public abstract java.lang.Boolean isRunAsNonRoot();

  public abstract A withRunAsNonRoot(java.lang.Boolean);

  public abstract java.lang.Boolean hasRunAsNonRoot();

  public abstract A withNewRunAsNonRoot(java.lang.String);

  public abstract A withNewRunAsNonRoot(boolean);

  public abstract java.lang.Long getRunAsUser();

  public abstract A withRunAsUser(java.lang.Long);

  public abstract java.lang.Boolean hasRunAsUser();

  public abstract io.kubernetes.client.openapi.models.V1SELinuxOptions getSeLinuxOptions();

  public abstract io.kubernetes.client.openapi.models.V1SELinuxOptions buildSeLinuxOptions();

  public abstract A withSeLinuxOptions(io.kubernetes.client.openapi.models.V1SELinuxOptions);

  public abstract java.lang.Boolean hasSeLinuxOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$SeLinuxOptionsNested<A> withNewSeLinuxOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$SeLinuxOptionsNested<A> withNewSeLinuxOptionsLike(io.kubernetes.client.openapi.models.V1SELinuxOptions);

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$SeLinuxOptionsNested<A> editSeLinuxOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$SeLinuxOptionsNested<A> editOrNewSeLinuxOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$SeLinuxOptionsNested<A> editOrNewSeLinuxOptionsLike(io.kubernetes.client.openapi.models.V1SELinuxOptions);

  public abstract io.kubernetes.client.openapi.models.V1WindowsSecurityContextOptions getWindowsOptions();

  public abstract io.kubernetes.client.openapi.models.V1WindowsSecurityContextOptions buildWindowsOptions();

  public abstract A withWindowsOptions(io.kubernetes.client.openapi.models.V1WindowsSecurityContextOptions);

  public abstract java.lang.Boolean hasWindowsOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$WindowsOptionsNested<A> withNewWindowsOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$WindowsOptionsNested<A> withNewWindowsOptionsLike(io.kubernetes.client.openapi.models.V1WindowsSecurityContextOptions);

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$WindowsOptionsNested<A> editWindowsOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$WindowsOptionsNested<A> editOrNewWindowsOptions();

  public abstract io.kubernetes.client.openapi.models.V1SecurityContextFluent$WindowsOptionsNested<A> editOrNewWindowsOptionsLike(io.kubernetes.client.openapi.models.V1WindowsSecurityContextOptions);
}
