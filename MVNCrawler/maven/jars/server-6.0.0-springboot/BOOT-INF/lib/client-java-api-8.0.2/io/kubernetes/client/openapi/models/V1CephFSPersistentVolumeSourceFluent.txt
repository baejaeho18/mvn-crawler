Compiled from "V1CephFSPersistentVolumeSourceFluent.java"
public interface io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent<A extends io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToMonitors(int, java.lang.String);

  public abstract A setToMonitors(int, java.lang.String);

  public abstract A addToMonitors(java.lang.String...);

  public abstract A addAllToMonitors(java.util.Collection<java.lang.String>);

  public abstract A removeFromMonitors(java.lang.String...);

  public abstract A removeAllFromMonitors(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getMonitors();

  public abstract java.lang.String getMonitor(int);

  public abstract java.lang.String getFirstMonitor();

  public abstract java.lang.String getLastMonitor();

  public abstract java.lang.String getMatchingMonitor(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingMonitor(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withMonitors(java.util.List<java.lang.String>);

  public abstract A withMonitors(java.lang.String...);

  public abstract java.lang.Boolean hasMonitors();

  public abstract A addNewMonitor(java.lang.String);

  public abstract A addNewMonitor(java.lang.StringBuilder);

  public abstract A addNewMonitor(java.lang.StringBuffer);

  public abstract java.lang.String getPath();

  public abstract A withPath(java.lang.String);

  public abstract java.lang.Boolean hasPath();

  public abstract A withNewPath(java.lang.String);

  public abstract A withNewPath(java.lang.StringBuilder);

  public abstract A withNewPath(java.lang.StringBuffer);

  public abstract java.lang.Boolean isReadOnly();

  public abstract A withReadOnly(java.lang.Boolean);

  public abstract java.lang.Boolean hasReadOnly();

  public abstract A withNewReadOnly(java.lang.String);

  public abstract A withNewReadOnly(boolean);

  public abstract java.lang.String getSecretFile();

  public abstract A withSecretFile(java.lang.String);

  public abstract java.lang.Boolean hasSecretFile();

  public abstract A withNewSecretFile(java.lang.String);

  public abstract A withNewSecretFile(java.lang.StringBuilder);

  public abstract A withNewSecretFile(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1SecretReference getSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1SecretReference buildSecretRef();

  public abstract A withSecretRef(io.kubernetes.client.openapi.models.V1SecretReference);

  public abstract java.lang.Boolean hasSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRefLike(io.kubernetes.client.openapi.models.V1SecretReference);

  public abstract io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent$SecretRefNested<A> editSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRefLike(io.kubernetes.client.openapi.models.V1SecretReference);

  public abstract java.lang.String getUser();

  public abstract A withUser(java.lang.String);

  public abstract java.lang.Boolean hasUser();

  public abstract A withNewUser(java.lang.String);

  public abstract A withNewUser(java.lang.StringBuilder);

  public abstract A withNewUser(java.lang.StringBuffer);
}
