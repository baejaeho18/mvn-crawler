Compiled from "V1ISCSIPersistentVolumeSourceFluent.java"
public interface io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent<A extends io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.Boolean isChapAuthDiscovery();

  public abstract A withChapAuthDiscovery(java.lang.Boolean);

  public abstract java.lang.Boolean hasChapAuthDiscovery();

  public abstract A withNewChapAuthDiscovery(java.lang.String);

  public abstract A withNewChapAuthDiscovery(boolean);

  public abstract java.lang.Boolean isChapAuthSession();

  public abstract A withChapAuthSession(java.lang.Boolean);

  public abstract java.lang.Boolean hasChapAuthSession();

  public abstract A withNewChapAuthSession(java.lang.String);

  public abstract A withNewChapAuthSession(boolean);

  public abstract java.lang.String getFsType();

  public abstract A withFsType(java.lang.String);

  public abstract java.lang.Boolean hasFsType();

  public abstract A withNewFsType(java.lang.String);

  public abstract A withNewFsType(java.lang.StringBuilder);

  public abstract A withNewFsType(java.lang.StringBuffer);

  public abstract java.lang.String getInitiatorName();

  public abstract A withInitiatorName(java.lang.String);

  public abstract java.lang.Boolean hasInitiatorName();

  public abstract A withNewInitiatorName(java.lang.String);

  public abstract A withNewInitiatorName(java.lang.StringBuilder);

  public abstract A withNewInitiatorName(java.lang.StringBuffer);

  public abstract java.lang.String getIqn();

  public abstract A withIqn(java.lang.String);

  public abstract java.lang.Boolean hasIqn();

  public abstract A withNewIqn(java.lang.String);

  public abstract A withNewIqn(java.lang.StringBuilder);

  public abstract A withNewIqn(java.lang.StringBuffer);

  public abstract java.lang.String getIscsiInterface();

  public abstract A withIscsiInterface(java.lang.String);

  public abstract java.lang.Boolean hasIscsiInterface();

  public abstract A withNewIscsiInterface(java.lang.String);

  public abstract A withNewIscsiInterface(java.lang.StringBuilder);

  public abstract A withNewIscsiInterface(java.lang.StringBuffer);

  public abstract java.lang.Integer getLun();

  public abstract A withLun(java.lang.Integer);

  public abstract java.lang.Boolean hasLun();

  public abstract A addToPortals(int, java.lang.String);

  public abstract A setToPortals(int, java.lang.String);

  public abstract A addToPortals(java.lang.String...);

  public abstract A addAllToPortals(java.util.Collection<java.lang.String>);

  public abstract A removeFromPortals(java.lang.String...);

  public abstract A removeAllFromPortals(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getPortals();

  public abstract java.lang.String getPortal(int);

  public abstract java.lang.String getFirstPortal();

  public abstract java.lang.String getLastPortal();

  public abstract java.lang.String getMatchingPortal(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingPortal(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withPortals(java.util.List<java.lang.String>);

  public abstract A withPortals(java.lang.String...);

  public abstract java.lang.Boolean hasPortals();

  public abstract A addNewPortal(java.lang.String);

  public abstract A addNewPortal(java.lang.StringBuilder);

  public abstract A addNewPortal(java.lang.StringBuffer);

  public abstract java.lang.Boolean isReadOnly();

  public abstract A withReadOnly(java.lang.Boolean);

  public abstract java.lang.Boolean hasReadOnly();

  public abstract A withNewReadOnly(java.lang.String);

  public abstract A withNewReadOnly(boolean);

  public abstract io.kubernetes.client.openapi.models.V1SecretReference getSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1SecretReference buildSecretRef();

  public abstract A withSecretRef(io.kubernetes.client.openapi.models.V1SecretReference);

  public abstract java.lang.Boolean hasSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRefLike(io.kubernetes.client.openapi.models.V1SecretReference);

  public abstract io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent$SecretRefNested<A> editSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRef();

  public abstract io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRefLike(io.kubernetes.client.openapi.models.V1SecretReference);

  public abstract java.lang.String getTargetPortal();

  public abstract A withTargetPortal(java.lang.String);

  public abstract java.lang.Boolean hasTargetPortal();

  public abstract A withNewTargetPortal(java.lang.String);

  public abstract A withNewTargetPortal(java.lang.StringBuilder);

  public abstract A withNewTargetPortal(java.lang.StringBuffer);
}
