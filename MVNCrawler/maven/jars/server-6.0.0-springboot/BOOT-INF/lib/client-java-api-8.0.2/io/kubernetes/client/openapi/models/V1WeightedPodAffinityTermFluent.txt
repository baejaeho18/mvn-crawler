Compiled from "V1WeightedPodAffinityTermFluent.java"
public interface io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent<A extends io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V1PodAffinityTerm getPodAffinityTerm();

  public abstract io.kubernetes.client.openapi.models.V1PodAffinityTerm buildPodAffinityTerm();

  public abstract A withPodAffinityTerm(io.kubernetes.client.openapi.models.V1PodAffinityTerm);

  public abstract java.lang.Boolean hasPodAffinityTerm();

  public abstract io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent$PodAffinityTermNested<A> withNewPodAffinityTerm();

  public abstract io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent$PodAffinityTermNested<A> withNewPodAffinityTermLike(io.kubernetes.client.openapi.models.V1PodAffinityTerm);

  public abstract io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent$PodAffinityTermNested<A> editPodAffinityTerm();

  public abstract io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent$PodAffinityTermNested<A> editOrNewPodAffinityTerm();

  public abstract io.kubernetes.client.openapi.models.V1WeightedPodAffinityTermFluent$PodAffinityTermNested<A> editOrNewPodAffinityTermLike(io.kubernetes.client.openapi.models.V1PodAffinityTerm);

  public abstract java.lang.Integer getWeight();

  public abstract A withWeight(java.lang.Integer);

  public abstract java.lang.Boolean hasWeight();
}
