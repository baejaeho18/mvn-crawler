Compiled from "V1EndpointSubsetFluent.java"
public interface io.kubernetes.client.openapi.models.V1EndpointSubsetFluent<A extends io.kubernetes.client.openapi.models.V1EndpointSubsetFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToAddresses(int, io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract A setToAddresses(int, io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract A addToAddresses(io.kubernetes.client.openapi.models.V1EndpointAddress...);

  public abstract A addAllToAddresses(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointAddress>);

  public abstract A removeFromAddresses(io.kubernetes.client.openapi.models.V1EndpointAddress...);

  public abstract A removeAllFromAddresses(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointAddress>);

  public abstract A removeMatchingFromAddresses(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointAddress> getAddresses();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointAddress> buildAddresses();

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildAddress(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildFirstAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildLastAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildMatchingAddress(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract java.lang.Boolean hasMatchingAddress(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract A withAddresses(java.util.List<io.kubernetes.client.openapi.models.V1EndpointAddress>);

  public abstract A withAddresses(io.kubernetes.client.openapi.models.V1EndpointAddress...);

  public abstract java.lang.Boolean hasAddresses();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> addNewAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> addNewAddressLike(io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> setNewAddressLike(int, io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> editAddress(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> editFirstAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> editLastAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$AddressesNested<A> editMatchingAddress(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract A addToNotReadyAddresses(int, io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract A setToNotReadyAddresses(int, io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract A addToNotReadyAddresses(io.kubernetes.client.openapi.models.V1EndpointAddress...);

  public abstract A addAllToNotReadyAddresses(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointAddress>);

  public abstract A removeFromNotReadyAddresses(io.kubernetes.client.openapi.models.V1EndpointAddress...);

  public abstract A removeAllFromNotReadyAddresses(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointAddress>);

  public abstract A removeMatchingFromNotReadyAddresses(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointAddress> getNotReadyAddresses();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointAddress> buildNotReadyAddresses();

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildNotReadyAddress(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildFirstNotReadyAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildLastNotReadyAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointAddress buildMatchingNotReadyAddress(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract java.lang.Boolean hasMatchingNotReadyAddress(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract A withNotReadyAddresses(java.util.List<io.kubernetes.client.openapi.models.V1EndpointAddress>);

  public abstract A withNotReadyAddresses(io.kubernetes.client.openapi.models.V1EndpointAddress...);

  public abstract java.lang.Boolean hasNotReadyAddresses();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> addNewNotReadyAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> addNewNotReadyAddressLike(io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> setNewNotReadyAddressLike(int, io.kubernetes.client.openapi.models.V1EndpointAddress);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> editNotReadyAddress(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> editFirstNotReadyAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> editLastNotReadyAddress();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$NotReadyAddressesNested<A> editMatchingNotReadyAddress(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointAddressBuilder>);

  public abstract A addToPorts(int, io.kubernetes.client.openapi.models.V1EndpointPort);

  public abstract A setToPorts(int, io.kubernetes.client.openapi.models.V1EndpointPort);

  public abstract A addToPorts(io.kubernetes.client.openapi.models.V1EndpointPort...);

  public abstract A addAllToPorts(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointPort>);

  public abstract A removeFromPorts(io.kubernetes.client.openapi.models.V1EndpointPort...);

  public abstract A removeAllFromPorts(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointPort>);

  public abstract A removeMatchingFromPorts(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointPortBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointPort> getPorts();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointPort> buildPorts();

  public abstract io.kubernetes.client.openapi.models.V1EndpointPort buildPort(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointPort buildFirstPort();

  public abstract io.kubernetes.client.openapi.models.V1EndpointPort buildLastPort();

  public abstract io.kubernetes.client.openapi.models.V1EndpointPort buildMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointPortBuilder>);

  public abstract java.lang.Boolean hasMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointPortBuilder>);

  public abstract A withPorts(java.util.List<io.kubernetes.client.openapi.models.V1EndpointPort>);

  public abstract A withPorts(io.kubernetes.client.openapi.models.V1EndpointPort...);

  public abstract java.lang.Boolean hasPorts();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> addNewPort();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> addNewPortLike(io.kubernetes.client.openapi.models.V1EndpointPort);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> setNewPortLike(int, io.kubernetes.client.openapi.models.V1EndpointPort);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> editPort(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> editFirstPort();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> editLastPort();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubsetFluent$PortsNested<A> editMatchingPort(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointPortBuilder>);
}
