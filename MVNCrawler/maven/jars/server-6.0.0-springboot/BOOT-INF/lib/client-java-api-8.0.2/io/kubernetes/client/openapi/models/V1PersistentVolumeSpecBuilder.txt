Compiled from "V1PersistentVolumeSpecBuilder.java"
public class io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder extends io.kubernetes.client.openapi.models.V1PersistentVolumeSpecFluentImpl<io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder> implements io.kubernetes.client.fluent.VisitableBuilder<io.kubernetes.client.openapi.models.V1PersistentVolumeSpec, io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder> {
  io.kubernetes.client.openapi.models.V1PersistentVolumeSpecFluent<?> fluent;

  java.lang.Boolean validationEnabled;

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/Boolean;)V
       8: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(java.lang.Boolean);
    Code:
       0: aload_0
       1: new           #3                  // class io/kubernetes/client/openapi/models/V1PersistentVolumeSpec
       4: dup
       5: invokespecial #4                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec."<init>":()V
       8: aload_1
       9: invokespecial #5                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpec;Ljava/lang/Boolean;)V
      12: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(io.kubernetes.client.openapi.models.V1PersistentVolumeSpecFluent<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #6                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;Ljava/lang/Boolean;)V
       9: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(io.kubernetes.client.openapi.models.V1PersistentVolumeSpecFluent<?>, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class io/kubernetes/client/openapi/models/V1PersistentVolumeSpec
       5: dup
       6: invokespecial #4                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec."<init>":()V
       9: aload_2
      10: invokespecial #7                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpec;Ljava/lang/Boolean;)V
      13: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(io.kubernetes.client.openapi.models.V1PersistentVolumeSpecFluent<?>, io.kubernetes.client.openapi.models.V1PersistentVolumeSpec);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokespecial #7                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpec;Ljava/lang/Boolean;)V
      10: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(io.kubernetes.client.openapi.models.V1PersistentVolumeSpecFluent<?>, io.kubernetes.client.openapi.models.V1PersistentVolumeSpec, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluentImpl."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
       9: aload_1
      10: aload_2
      11: invokevirtual #10                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAccessModes:()Ljava/util/List;
      14: invokeinterface #11,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withAccessModes:(Ljava/util/List;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      19: pop
      20: aload_1
      21: aload_2
      22: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAwsElasticBlockStore:()Lio/kubernetes/client/openapi/models/V1AWSElasticBlockStoreVolumeSource;
      25: invokeinterface #13,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withAwsElasticBlockStore:(Lio/kubernetes/client/openapi/models/V1AWSElasticBlockStoreVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      30: pop
      31: aload_1
      32: aload_2
      33: invokevirtual #14                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAzureDisk:()Lio/kubernetes/client/openapi/models/V1AzureDiskVolumeSource;
      36: invokeinterface #15,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withAzureDisk:(Lio/kubernetes/client/openapi/models/V1AzureDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      41: pop
      42: aload_1
      43: aload_2
      44: invokevirtual #16                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAzureFile:()Lio/kubernetes/client/openapi/models/V1AzureFilePersistentVolumeSource;
      47: invokeinterface #17,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withAzureFile:(Lio/kubernetes/client/openapi/models/V1AzureFilePersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      52: pop
      53: aload_1
      54: aload_2
      55: invokevirtual #18                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCapacity:()Ljava/util/Map;
      58: invokeinterface #19,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withCapacity:(Ljava/util/Map;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      63: pop
      64: aload_1
      65: aload_2
      66: invokevirtual #20                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCephfs:()Lio/kubernetes/client/openapi/models/V1CephFSPersistentVolumeSource;
      69: invokeinterface #21,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withCephfs:(Lio/kubernetes/client/openapi/models/V1CephFSPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      74: pop
      75: aload_1
      76: aload_2
      77: invokevirtual #22                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCinder:()Lio/kubernetes/client/openapi/models/V1CinderPersistentVolumeSource;
      80: invokeinterface #23,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withCinder:(Lio/kubernetes/client/openapi/models/V1CinderPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      85: pop
      86: aload_1
      87: aload_2
      88: invokevirtual #24                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getClaimRef:()Lio/kubernetes/client/openapi/models/V1ObjectReference;
      91: invokeinterface #25,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withClaimRef:(Lio/kubernetes/client/openapi/models/V1ObjectReference;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      96: pop
      97: aload_1
      98: aload_2
      99: invokevirtual #26                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCsi:()Lio/kubernetes/client/openapi/models/V1CSIPersistentVolumeSource;
     102: invokeinterface #27,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withCsi:(Lio/kubernetes/client/openapi/models/V1CSIPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     107: pop
     108: aload_1
     109: aload_2
     110: invokevirtual #28                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getFc:()Lio/kubernetes/client/openapi/models/V1FCVolumeSource;
     113: invokeinterface #29,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withFc:(Lio/kubernetes/client/openapi/models/V1FCVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     118: pop
     119: aload_1
     120: aload_2
     121: invokevirtual #30                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getFlexVolume:()Lio/kubernetes/client/openapi/models/V1FlexPersistentVolumeSource;
     124: invokeinterface #31,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withFlexVolume:(Lio/kubernetes/client/openapi/models/V1FlexPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     129: pop
     130: aload_1
     131: aload_2
     132: invokevirtual #32                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getFlocker:()Lio/kubernetes/client/openapi/models/V1FlockerVolumeSource;
     135: invokeinterface #33,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withFlocker:(Lio/kubernetes/client/openapi/models/V1FlockerVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     140: pop
     141: aload_1
     142: aload_2
     143: invokevirtual #34                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getGcePersistentDisk:()Lio/kubernetes/client/openapi/models/V1GCEPersistentDiskVolumeSource;
     146: invokeinterface #35,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withGcePersistentDisk:(Lio/kubernetes/client/openapi/models/V1GCEPersistentDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     151: pop
     152: aload_1
     153: aload_2
     154: invokevirtual #36                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getGlusterfs:()Lio/kubernetes/client/openapi/models/V1GlusterfsPersistentVolumeSource;
     157: invokeinterface #37,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withGlusterfs:(Lio/kubernetes/client/openapi/models/V1GlusterfsPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     162: pop
     163: aload_1
     164: aload_2
     165: invokevirtual #38                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getHostPath:()Lio/kubernetes/client/openapi/models/V1HostPathVolumeSource;
     168: invokeinterface #39,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withHostPath:(Lio/kubernetes/client/openapi/models/V1HostPathVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     173: pop
     174: aload_1
     175: aload_2
     176: invokevirtual #40                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getIscsi:()Lio/kubernetes/client/openapi/models/V1ISCSIPersistentVolumeSource;
     179: invokeinterface #41,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withIscsi:(Lio/kubernetes/client/openapi/models/V1ISCSIPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     184: pop
     185: aload_1
     186: aload_2
     187: invokevirtual #42                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getLocal:()Lio/kubernetes/client/openapi/models/V1LocalVolumeSource;
     190: invokeinterface #43,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withLocal:(Lio/kubernetes/client/openapi/models/V1LocalVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     195: pop
     196: aload_1
     197: aload_2
     198: invokevirtual #44                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getMountOptions:()Ljava/util/List;
     201: invokeinterface #45,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withMountOptions:(Ljava/util/List;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     206: pop
     207: aload_1
     208: aload_2
     209: invokevirtual #46                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getNfs:()Lio/kubernetes/client/openapi/models/V1NFSVolumeSource;
     212: invokeinterface #47,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withNfs:(Lio/kubernetes/client/openapi/models/V1NFSVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     217: pop
     218: aload_1
     219: aload_2
     220: invokevirtual #48                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getNodeAffinity:()Lio/kubernetes/client/openapi/models/V1VolumeNodeAffinity;
     223: invokeinterface #49,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withNodeAffinity:(Lio/kubernetes/client/openapi/models/V1VolumeNodeAffinity;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     228: pop
     229: aload_1
     230: aload_2
     231: invokevirtual #50                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getPersistentVolumeReclaimPolicy:()Ljava/lang/String;
     234: invokeinterface #51,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withPersistentVolumeReclaimPolicy:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     239: pop
     240: aload_1
     241: aload_2
     242: invokevirtual #52                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getPhotonPersistentDisk:()Lio/kubernetes/client/openapi/models/V1PhotonPersistentDiskVolumeSource;
     245: invokeinterface #53,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withPhotonPersistentDisk:(Lio/kubernetes/client/openapi/models/V1PhotonPersistentDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     250: pop
     251: aload_1
     252: aload_2
     253: invokevirtual #54                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getPortworxVolume:()Lio/kubernetes/client/openapi/models/V1PortworxVolumeSource;
     256: invokeinterface #55,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withPortworxVolume:(Lio/kubernetes/client/openapi/models/V1PortworxVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     261: pop
     262: aload_1
     263: aload_2
     264: invokevirtual #56                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getQuobyte:()Lio/kubernetes/client/openapi/models/V1QuobyteVolumeSource;
     267: invokeinterface #57,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withQuobyte:(Lio/kubernetes/client/openapi/models/V1QuobyteVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     272: pop
     273: aload_1
     274: aload_2
     275: invokevirtual #58                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getRbd:()Lio/kubernetes/client/openapi/models/V1RBDPersistentVolumeSource;
     278: invokeinterface #59,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withRbd:(Lio/kubernetes/client/openapi/models/V1RBDPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     283: pop
     284: aload_1
     285: aload_2
     286: invokevirtual #60                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getScaleIO:()Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;
     289: invokeinterface #61,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withScaleIO:(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     294: pop
     295: aload_1
     296: aload_2
     297: invokevirtual #62                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getStorageClassName:()Ljava/lang/String;
     300: invokeinterface #63,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withStorageClassName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     305: pop
     306: aload_1
     307: aload_2
     308: invokevirtual #64                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getStorageos:()Lio/kubernetes/client/openapi/models/V1StorageOSPersistentVolumeSource;
     311: invokeinterface #65,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withStorageos:(Lio/kubernetes/client/openapi/models/V1StorageOSPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     316: pop
     317: aload_1
     318: aload_2
     319: invokevirtual #66                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getVolumeMode:()Ljava/lang/String;
     322: invokeinterface #67,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withVolumeMode:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     327: pop
     328: aload_1
     329: aload_2
     330: invokevirtual #68                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getVsphereVolume:()Lio/kubernetes/client/openapi/models/V1VsphereVirtualDiskVolumeSource;
     333: invokeinterface #69,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.withVsphereVolume:(Lio/kubernetes/client/openapi/models/V1VsphereVirtualDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     338: pop
     339: aload_0
     340: aload_3
     341: putfield      #70                 // Field validationEnabled:Ljava/lang/Boolean;
     344: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(io.kubernetes.client.openapi.models.V1PersistentVolumeSpec);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #5                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpec;Ljava/lang/Boolean;)V
       9: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpecBuilder(io.kubernetes.client.openapi.models.V1PersistentVolumeSpec, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluentImpl."<init>":()V
       4: aload_0
       5: aload_0
       6: putfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
       9: aload_0
      10: aload_1
      11: invokevirtual #10                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAccessModes:()Ljava/util/List;
      14: invokevirtual #71                 // Method withAccessModes:(Ljava/util/List;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAwsElasticBlockStore:()Lio/kubernetes/client/openapi/models/V1AWSElasticBlockStoreVolumeSource;
      23: invokevirtual #72                 // Method withAwsElasticBlockStore:(Lio/kubernetes/client/openapi/models/V1AWSElasticBlockStoreVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      26: pop
      27: aload_0
      28: aload_1
      29: invokevirtual #14                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAzureDisk:()Lio/kubernetes/client/openapi/models/V1AzureDiskVolumeSource;
      32: invokevirtual #73                 // Method withAzureDisk:(Lio/kubernetes/client/openapi/models/V1AzureDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      35: pop
      36: aload_0
      37: aload_1
      38: invokevirtual #16                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getAzureFile:()Lio/kubernetes/client/openapi/models/V1AzureFilePersistentVolumeSource;
      41: invokevirtual #74                 // Method withAzureFile:(Lio/kubernetes/client/openapi/models/V1AzureFilePersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      44: pop
      45: aload_0
      46: aload_1
      47: invokevirtual #18                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCapacity:()Ljava/util/Map;
      50: invokevirtual #75                 // Method withCapacity:(Ljava/util/Map;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      53: pop
      54: aload_0
      55: aload_1
      56: invokevirtual #20                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCephfs:()Lio/kubernetes/client/openapi/models/V1CephFSPersistentVolumeSource;
      59: invokevirtual #76                 // Method withCephfs:(Lio/kubernetes/client/openapi/models/V1CephFSPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      62: pop
      63: aload_0
      64: aload_1
      65: invokevirtual #22                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCinder:()Lio/kubernetes/client/openapi/models/V1CinderPersistentVolumeSource;
      68: invokevirtual #77                 // Method withCinder:(Lio/kubernetes/client/openapi/models/V1CinderPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      71: pop
      72: aload_0
      73: aload_1
      74: invokevirtual #24                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getClaimRef:()Lio/kubernetes/client/openapi/models/V1ObjectReference;
      77: invokevirtual #78                 // Method withClaimRef:(Lio/kubernetes/client/openapi/models/V1ObjectReference;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      80: pop
      81: aload_0
      82: aload_1
      83: invokevirtual #26                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getCsi:()Lio/kubernetes/client/openapi/models/V1CSIPersistentVolumeSource;
      86: invokevirtual #79                 // Method withCsi:(Lio/kubernetes/client/openapi/models/V1CSIPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      89: pop
      90: aload_0
      91: aload_1
      92: invokevirtual #28                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getFc:()Lio/kubernetes/client/openapi/models/V1FCVolumeSource;
      95: invokevirtual #80                 // Method withFc:(Lio/kubernetes/client/openapi/models/V1FCVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      98: pop
      99: aload_0
     100: aload_1
     101: invokevirtual #30                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getFlexVolume:()Lio/kubernetes/client/openapi/models/V1FlexPersistentVolumeSource;
     104: invokevirtual #81                 // Method withFlexVolume:(Lio/kubernetes/client/openapi/models/V1FlexPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     107: pop
     108: aload_0
     109: aload_1
     110: invokevirtual #32                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getFlocker:()Lio/kubernetes/client/openapi/models/V1FlockerVolumeSource;
     113: invokevirtual #82                 // Method withFlocker:(Lio/kubernetes/client/openapi/models/V1FlockerVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     116: pop
     117: aload_0
     118: aload_1
     119: invokevirtual #34                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getGcePersistentDisk:()Lio/kubernetes/client/openapi/models/V1GCEPersistentDiskVolumeSource;
     122: invokevirtual #83                 // Method withGcePersistentDisk:(Lio/kubernetes/client/openapi/models/V1GCEPersistentDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     125: pop
     126: aload_0
     127: aload_1
     128: invokevirtual #36                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getGlusterfs:()Lio/kubernetes/client/openapi/models/V1GlusterfsPersistentVolumeSource;
     131: invokevirtual #84                 // Method withGlusterfs:(Lio/kubernetes/client/openapi/models/V1GlusterfsPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     134: pop
     135: aload_0
     136: aload_1
     137: invokevirtual #38                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getHostPath:()Lio/kubernetes/client/openapi/models/V1HostPathVolumeSource;
     140: invokevirtual #85                 // Method withHostPath:(Lio/kubernetes/client/openapi/models/V1HostPathVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     143: pop
     144: aload_0
     145: aload_1
     146: invokevirtual #40                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getIscsi:()Lio/kubernetes/client/openapi/models/V1ISCSIPersistentVolumeSource;
     149: invokevirtual #86                 // Method withIscsi:(Lio/kubernetes/client/openapi/models/V1ISCSIPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     152: pop
     153: aload_0
     154: aload_1
     155: invokevirtual #42                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getLocal:()Lio/kubernetes/client/openapi/models/V1LocalVolumeSource;
     158: invokevirtual #87                 // Method withLocal:(Lio/kubernetes/client/openapi/models/V1LocalVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     161: pop
     162: aload_0
     163: aload_1
     164: invokevirtual #44                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getMountOptions:()Ljava/util/List;
     167: invokevirtual #88                 // Method withMountOptions:(Ljava/util/List;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     170: pop
     171: aload_0
     172: aload_1
     173: invokevirtual #46                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getNfs:()Lio/kubernetes/client/openapi/models/V1NFSVolumeSource;
     176: invokevirtual #89                 // Method withNfs:(Lio/kubernetes/client/openapi/models/V1NFSVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     179: pop
     180: aload_0
     181: aload_1
     182: invokevirtual #48                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getNodeAffinity:()Lio/kubernetes/client/openapi/models/V1VolumeNodeAffinity;
     185: invokevirtual #90                 // Method withNodeAffinity:(Lio/kubernetes/client/openapi/models/V1VolumeNodeAffinity;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     188: pop
     189: aload_0
     190: aload_1
     191: invokevirtual #50                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getPersistentVolumeReclaimPolicy:()Ljava/lang/String;
     194: invokevirtual #91                 // Method withPersistentVolumeReclaimPolicy:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     197: pop
     198: aload_0
     199: aload_1
     200: invokevirtual #52                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getPhotonPersistentDisk:()Lio/kubernetes/client/openapi/models/V1PhotonPersistentDiskVolumeSource;
     203: invokevirtual #92                 // Method withPhotonPersistentDisk:(Lio/kubernetes/client/openapi/models/V1PhotonPersistentDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     206: pop
     207: aload_0
     208: aload_1
     209: invokevirtual #54                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getPortworxVolume:()Lio/kubernetes/client/openapi/models/V1PortworxVolumeSource;
     212: invokevirtual #93                 // Method withPortworxVolume:(Lio/kubernetes/client/openapi/models/V1PortworxVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     215: pop
     216: aload_0
     217: aload_1
     218: invokevirtual #56                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getQuobyte:()Lio/kubernetes/client/openapi/models/V1QuobyteVolumeSource;
     221: invokevirtual #94                 // Method withQuobyte:(Lio/kubernetes/client/openapi/models/V1QuobyteVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     224: pop
     225: aload_0
     226: aload_1
     227: invokevirtual #58                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getRbd:()Lio/kubernetes/client/openapi/models/V1RBDPersistentVolumeSource;
     230: invokevirtual #95                 // Method withRbd:(Lio/kubernetes/client/openapi/models/V1RBDPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     233: pop
     234: aload_0
     235: aload_1
     236: invokevirtual #60                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getScaleIO:()Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;
     239: invokevirtual #96                 // Method withScaleIO:(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     242: pop
     243: aload_0
     244: aload_1
     245: invokevirtual #62                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getStorageClassName:()Ljava/lang/String;
     248: invokevirtual #97                 // Method withStorageClassName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     251: pop
     252: aload_0
     253: aload_1
     254: invokevirtual #64                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getStorageos:()Lio/kubernetes/client/openapi/models/V1StorageOSPersistentVolumeSource;
     257: invokevirtual #98                 // Method withStorageos:(Lio/kubernetes/client/openapi/models/V1StorageOSPersistentVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     260: pop
     261: aload_0
     262: aload_1
     263: invokevirtual #66                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getVolumeMode:()Ljava/lang/String;
     266: invokevirtual #99                 // Method withVolumeMode:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     269: pop
     270: aload_0
     271: aload_1
     272: invokevirtual #68                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.getVsphereVolume:()Lio/kubernetes/client/openapi/models/V1VsphereVirtualDiskVolumeSource;
     275: invokevirtual #100                // Method withVsphereVolume:(Lio/kubernetes/client/openapi/models/V1VsphereVirtualDiskVolumeSource;)Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     278: pop
     279: aload_0
     280: aload_2
     281: putfield      #70                 // Field validationEnabled:Ljava/lang/Boolean;
     284: return

  public io.kubernetes.client.openapi.models.V1PersistentVolumeSpec build();
    Code:
       0: new           #3                  // class io/kubernetes/client/openapi/models/V1PersistentVolumeSpec
       3: dup
       4: invokespecial #4                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      13: invokeinterface #101,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getAccessModes:()Ljava/util/List;
      18: invokevirtual #102                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setAccessModes:(Ljava/util/List;)V
      21: aload_1
      22: aload_0
      23: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      26: invokeinterface #103,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getAwsElasticBlockStore:()Lio/kubernetes/client/openapi/models/V1AWSElasticBlockStoreVolumeSource;
      31: invokevirtual #104                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setAwsElasticBlockStore:(Lio/kubernetes/client/openapi/models/V1AWSElasticBlockStoreVolumeSource;)V
      34: aload_1
      35: aload_0
      36: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      39: invokeinterface #105,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getAzureDisk:()Lio/kubernetes/client/openapi/models/V1AzureDiskVolumeSource;
      44: invokevirtual #106                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setAzureDisk:(Lio/kubernetes/client/openapi/models/V1AzureDiskVolumeSource;)V
      47: aload_1
      48: aload_0
      49: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      52: invokeinterface #107,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getAzureFile:()Lio/kubernetes/client/openapi/models/V1AzureFilePersistentVolumeSource;
      57: invokevirtual #108                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setAzureFile:(Lio/kubernetes/client/openapi/models/V1AzureFilePersistentVolumeSource;)V
      60: aload_1
      61: aload_0
      62: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      65: invokeinterface #109,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getCapacity:()Ljava/util/Map;
      70: invokevirtual #110                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setCapacity:(Ljava/util/Map;)V
      73: aload_1
      74: aload_0
      75: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      78: invokeinterface #111,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getCephfs:()Lio/kubernetes/client/openapi/models/V1CephFSPersistentVolumeSource;
      83: invokevirtual #112                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setCephfs:(Lio/kubernetes/client/openapi/models/V1CephFSPersistentVolumeSource;)V
      86: aload_1
      87: aload_0
      88: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      91: invokeinterface #113,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getCinder:()Lio/kubernetes/client/openapi/models/V1CinderPersistentVolumeSource;
      96: invokevirtual #114                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setCinder:(Lio/kubernetes/client/openapi/models/V1CinderPersistentVolumeSource;)V
      99: aload_1
     100: aload_0
     101: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     104: invokeinterface #115,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getClaimRef:()Lio/kubernetes/client/openapi/models/V1ObjectReference;
     109: invokevirtual #116                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setClaimRef:(Lio/kubernetes/client/openapi/models/V1ObjectReference;)V
     112: aload_1
     113: aload_0
     114: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     117: invokeinterface #117,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getCsi:()Lio/kubernetes/client/openapi/models/V1CSIPersistentVolumeSource;
     122: invokevirtual #118                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setCsi:(Lio/kubernetes/client/openapi/models/V1CSIPersistentVolumeSource;)V
     125: aload_1
     126: aload_0
     127: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     130: invokeinterface #119,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getFc:()Lio/kubernetes/client/openapi/models/V1FCVolumeSource;
     135: invokevirtual #120                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setFc:(Lio/kubernetes/client/openapi/models/V1FCVolumeSource;)V
     138: aload_1
     139: aload_0
     140: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     143: invokeinterface #121,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getFlexVolume:()Lio/kubernetes/client/openapi/models/V1FlexPersistentVolumeSource;
     148: invokevirtual #122                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setFlexVolume:(Lio/kubernetes/client/openapi/models/V1FlexPersistentVolumeSource;)V
     151: aload_1
     152: aload_0
     153: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     156: invokeinterface #123,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getFlocker:()Lio/kubernetes/client/openapi/models/V1FlockerVolumeSource;
     161: invokevirtual #124                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setFlocker:(Lio/kubernetes/client/openapi/models/V1FlockerVolumeSource;)V
     164: aload_1
     165: aload_0
     166: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     169: invokeinterface #125,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getGcePersistentDisk:()Lio/kubernetes/client/openapi/models/V1GCEPersistentDiskVolumeSource;
     174: invokevirtual #126                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setGcePersistentDisk:(Lio/kubernetes/client/openapi/models/V1GCEPersistentDiskVolumeSource;)V
     177: aload_1
     178: aload_0
     179: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     182: invokeinterface #127,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getGlusterfs:()Lio/kubernetes/client/openapi/models/V1GlusterfsPersistentVolumeSource;
     187: invokevirtual #128                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setGlusterfs:(Lio/kubernetes/client/openapi/models/V1GlusterfsPersistentVolumeSource;)V
     190: aload_1
     191: aload_0
     192: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     195: invokeinterface #129,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getHostPath:()Lio/kubernetes/client/openapi/models/V1HostPathVolumeSource;
     200: invokevirtual #130                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setHostPath:(Lio/kubernetes/client/openapi/models/V1HostPathVolumeSource;)V
     203: aload_1
     204: aload_0
     205: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     208: invokeinterface #131,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getIscsi:()Lio/kubernetes/client/openapi/models/V1ISCSIPersistentVolumeSource;
     213: invokevirtual #132                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setIscsi:(Lio/kubernetes/client/openapi/models/V1ISCSIPersistentVolumeSource;)V
     216: aload_1
     217: aload_0
     218: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     221: invokeinterface #133,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getLocal:()Lio/kubernetes/client/openapi/models/V1LocalVolumeSource;
     226: invokevirtual #134                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setLocal:(Lio/kubernetes/client/openapi/models/V1LocalVolumeSource;)V
     229: aload_1
     230: aload_0
     231: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     234: invokeinterface #135,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getMountOptions:()Ljava/util/List;
     239: invokevirtual #136                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setMountOptions:(Ljava/util/List;)V
     242: aload_1
     243: aload_0
     244: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     247: invokeinterface #137,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getNfs:()Lio/kubernetes/client/openapi/models/V1NFSVolumeSource;
     252: invokevirtual #138                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setNfs:(Lio/kubernetes/client/openapi/models/V1NFSVolumeSource;)V
     255: aload_1
     256: aload_0
     257: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     260: invokeinterface #139,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getNodeAffinity:()Lio/kubernetes/client/openapi/models/V1VolumeNodeAffinity;
     265: invokevirtual #140                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setNodeAffinity:(Lio/kubernetes/client/openapi/models/V1VolumeNodeAffinity;)V
     268: aload_1
     269: aload_0
     270: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     273: invokeinterface #141,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getPersistentVolumeReclaimPolicy:()Ljava/lang/String;
     278: invokevirtual #142                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setPersistentVolumeReclaimPolicy:(Ljava/lang/String;)V
     281: aload_1
     282: aload_0
     283: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     286: invokeinterface #143,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getPhotonPersistentDisk:()Lio/kubernetes/client/openapi/models/V1PhotonPersistentDiskVolumeSource;
     291: invokevirtual #144                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setPhotonPersistentDisk:(Lio/kubernetes/client/openapi/models/V1PhotonPersistentDiskVolumeSource;)V
     294: aload_1
     295: aload_0
     296: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     299: invokeinterface #145,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getPortworxVolume:()Lio/kubernetes/client/openapi/models/V1PortworxVolumeSource;
     304: invokevirtual #146                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setPortworxVolume:(Lio/kubernetes/client/openapi/models/V1PortworxVolumeSource;)V
     307: aload_1
     308: aload_0
     309: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     312: invokeinterface #147,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getQuobyte:()Lio/kubernetes/client/openapi/models/V1QuobyteVolumeSource;
     317: invokevirtual #148                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setQuobyte:(Lio/kubernetes/client/openapi/models/V1QuobyteVolumeSource;)V
     320: aload_1
     321: aload_0
     322: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     325: invokeinterface #149,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getRbd:()Lio/kubernetes/client/openapi/models/V1RBDPersistentVolumeSource;
     330: invokevirtual #150                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setRbd:(Lio/kubernetes/client/openapi/models/V1RBDPersistentVolumeSource;)V
     333: aload_1
     334: aload_0
     335: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     338: invokeinterface #151,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getScaleIO:()Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;
     343: invokevirtual #152                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setScaleIO:(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;)V
     346: aload_1
     347: aload_0
     348: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     351: invokeinterface #153,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getStorageClassName:()Ljava/lang/String;
     356: invokevirtual #154                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setStorageClassName:(Ljava/lang/String;)V
     359: aload_1
     360: aload_0
     361: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     364: invokeinterface #155,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getStorageos:()Lio/kubernetes/client/openapi/models/V1StorageOSPersistentVolumeSource;
     369: invokevirtual #156                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setStorageos:(Lio/kubernetes/client/openapi/models/V1StorageOSPersistentVolumeSource;)V
     372: aload_1
     373: aload_0
     374: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     377: invokeinterface #157,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getVolumeMode:()Ljava/lang/String;
     382: invokevirtual #158                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setVolumeMode:(Ljava/lang/String;)V
     385: aload_1
     386: aload_0
     387: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
     390: invokeinterface #159,  1          // InterfaceMethod io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent.getVsphereVolume:()Lio/kubernetes/client/openapi/models/V1VsphereVirtualDiskVolumeSource;
     395: invokevirtual #160                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpec.setVsphereVolume:(Lio/kubernetes/client/openapi/models/V1VsphereVirtualDiskVolumeSource;)V
     398: aload_1
     399: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #161                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #161                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #162                // Method io/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #163                // class io/kubernetes/client/openapi/models/V1PersistentVolumeSpecBuilder
      38: astore_2
      39: aload_0
      40: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      43: ifnull        71
      46: aload_0
      47: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      50: aload_0
      51: if_acmpeq     71
      54: aload_0
      55: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      58: aload_2
      59: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      62: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifne          88
      68: goto          86
      71: aload_2
      72: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      75: ifnull        88
      78: aload_0
      79: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpecFluent;
      82: aload_0
      83: if_acmpeq     88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: getfield      #70                 // Field validationEnabled:Ljava/lang/Boolean;
      92: ifnull        112
      95: aload_0
      96: getfield      #70                 // Field validationEnabled:Ljava/lang/Boolean;
      99: aload_2
     100: getfield      #70                 // Field validationEnabled:Ljava/lang/Boolean;
     103: invokevirtual #165                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     106: ifne          121
     109: goto          119
     112: aload_2
     113: getfield      #70                 // Field validationEnabled:Ljava/lang/Boolean;
     116: ifnull        121
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method build:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeSpec;
       4: areturn
}
