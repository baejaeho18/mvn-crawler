Compiled from "V1beta1CertificateSigningRequestSpecFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1CertificateSigningRequestSpecFluent<A extends io.kubernetes.client.openapi.models.V1beta1CertificateSigningRequestSpecFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToExtra(java.lang.String, java.util.List<java.lang.String>);

  public abstract A addToExtra(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);

  public abstract A removeFromExtra(java.lang.String);

  public abstract A removeFromExtra(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);

  public abstract java.util.Map<java.lang.String, java.util.List<java.lang.String>> getExtra();

  public abstract A withExtra(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);

  public abstract java.lang.Boolean hasExtra();

  public abstract A addToGroups(int, java.lang.String);

  public abstract A setToGroups(int, java.lang.String);

  public abstract A addToGroups(java.lang.String...);

  public abstract A addAllToGroups(java.util.Collection<java.lang.String>);

  public abstract A removeFromGroups(java.lang.String...);

  public abstract A removeAllFromGroups(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getGroups();

  public abstract java.lang.String getGroup(int);

  public abstract java.lang.String getFirstGroup();

  public abstract java.lang.String getLastGroup();

  public abstract java.lang.String getMatchingGroup(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingGroup(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withGroups(java.util.List<java.lang.String>);

  public abstract A withGroups(java.lang.String...);

  public abstract java.lang.Boolean hasGroups();

  public abstract A addNewGroup(java.lang.String);

  public abstract A addNewGroup(java.lang.StringBuilder);

  public abstract A addNewGroup(java.lang.StringBuffer);

  public abstract A withRequest(byte...);

  public abstract byte[] getRequest();

  public abstract A addToRequest(int, java.lang.Byte);

  public abstract A setToRequest(int, java.lang.Byte);

  public abstract A addToRequest(java.lang.Byte...);

  public abstract A addAllToRequest(java.util.Collection<java.lang.Byte>);

  public abstract A removeFromRequest(java.lang.Byte...);

  public abstract A removeAllFromRequest(java.util.Collection<java.lang.Byte>);

  public abstract java.lang.Boolean hasRequest();

  public abstract A addNewRequest(java.lang.String);

  public abstract A addNewRequest(byte);

  public abstract java.lang.String getUid();

  public abstract A withUid(java.lang.String);

  public abstract java.lang.Boolean hasUid();

  public abstract A withNewUid(java.lang.String);

  public abstract A withNewUid(java.lang.StringBuilder);

  public abstract A withNewUid(java.lang.StringBuffer);

  public abstract A addToUsages(int, java.lang.String);

  public abstract A setToUsages(int, java.lang.String);

  public abstract A addToUsages(java.lang.String...);

  public abstract A addAllToUsages(java.util.Collection<java.lang.String>);

  public abstract A removeFromUsages(java.lang.String...);

  public abstract A removeAllFromUsages(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getUsages();

  public abstract java.lang.String getUsage(int);

  public abstract java.lang.String getFirstUsage();

  public abstract java.lang.String getLastUsage();

  public abstract java.lang.String getMatchingUsage(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingUsage(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withUsages(java.util.List<java.lang.String>);

  public abstract A withUsages(java.lang.String...);

  public abstract java.lang.Boolean hasUsages();

  public abstract A addNewUsage(java.lang.String);

  public abstract A addNewUsage(java.lang.StringBuilder);

  public abstract A addNewUsage(java.lang.StringBuffer);

  public abstract java.lang.String getUsername();

  public abstract A withUsername(java.lang.String);

  public abstract java.lang.Boolean hasUsername();

  public abstract A withNewUsername(java.lang.String);

  public abstract A withNewUsername(java.lang.StringBuilder);

  public abstract A withNewUsername(java.lang.StringBuffer);
}
