Compiled from "V1ResourceQuotaSpecFluent.java"
public interface io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent<A extends io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToHard(java.lang.String, io.kubernetes.client.custom.Quantity);

  public abstract A addToHard(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);

  public abstract A removeFromHard(java.lang.String);

  public abstract A removeFromHard(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);

  public abstract java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity> getHard();

  public abstract A withHard(java.util.Map<java.lang.String, io.kubernetes.client.custom.Quantity>);

  public abstract java.lang.Boolean hasHard();

  public abstract io.kubernetes.client.openapi.models.V1ScopeSelector getScopeSelector();

  public abstract io.kubernetes.client.openapi.models.V1ScopeSelector buildScopeSelector();

  public abstract A withScopeSelector(io.kubernetes.client.openapi.models.V1ScopeSelector);

  public abstract java.lang.Boolean hasScopeSelector();

  public abstract io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent$ScopeSelectorNested<A> withNewScopeSelector();

  public abstract io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent$ScopeSelectorNested<A> withNewScopeSelectorLike(io.kubernetes.client.openapi.models.V1ScopeSelector);

  public abstract io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent$ScopeSelectorNested<A> editScopeSelector();

  public abstract io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent$ScopeSelectorNested<A> editOrNewScopeSelector();

  public abstract io.kubernetes.client.openapi.models.V1ResourceQuotaSpecFluent$ScopeSelectorNested<A> editOrNewScopeSelectorLike(io.kubernetes.client.openapi.models.V1ScopeSelector);

  public abstract A addToScopes(int, java.lang.String);

  public abstract A setToScopes(int, java.lang.String);

  public abstract A addToScopes(java.lang.String...);

  public abstract A addAllToScopes(java.util.Collection<java.lang.String>);

  public abstract A removeFromScopes(java.lang.String...);

  public abstract A removeAllFromScopes(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getScopes();

  public abstract java.lang.String getScope(int);

  public abstract java.lang.String getFirstScope();

  public abstract java.lang.String getLastScope();

  public abstract java.lang.String getMatchingScope(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingScope(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withScopes(java.util.List<java.lang.String>);

  public abstract A withScopes(java.lang.String...);

  public abstract java.lang.Boolean hasScopes();

  public abstract A addNewScope(java.lang.String);

  public abstract A addNewScope(java.lang.StringBuilder);

  public abstract A addNewScope(java.lang.StringBuffer);
}
