Compiled from "V2beta1ExternalMetricSourceFluent.java"
public interface io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent<A extends io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getMetricName();

  public abstract A withMetricName(java.lang.String);

  public abstract java.lang.Boolean hasMetricName();

  public abstract A withNewMetricName(java.lang.String);

  public abstract A withNewMetricName(java.lang.StringBuilder);

  public abstract A withNewMetricName(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1LabelSelector getMetricSelector();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelector buildMetricSelector();

  public abstract A withMetricSelector(io.kubernetes.client.openapi.models.V1LabelSelector);

  public abstract java.lang.Boolean hasMetricSelector();

  public abstract io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent$MetricSelectorNested<A> withNewMetricSelector();

  public abstract io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent$MetricSelectorNested<A> withNewMetricSelectorLike(io.kubernetes.client.openapi.models.V1LabelSelector);

  public abstract io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent$MetricSelectorNested<A> editMetricSelector();

  public abstract io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent$MetricSelectorNested<A> editOrNewMetricSelector();

  public abstract io.kubernetes.client.openapi.models.V2beta1ExternalMetricSourceFluent$MetricSelectorNested<A> editOrNewMetricSelectorLike(io.kubernetes.client.openapi.models.V1LabelSelector);

  public abstract io.kubernetes.client.custom.Quantity getTargetAverageValue();

  public abstract A withTargetAverageValue(io.kubernetes.client.custom.Quantity);

  public abstract java.lang.Boolean hasTargetAverageValue();

  public abstract A withNewTargetAverageValue(java.lang.String);

  public abstract io.kubernetes.client.custom.Quantity getTargetValue();

  public abstract A withTargetValue(io.kubernetes.client.custom.Quantity);

  public abstract java.lang.Boolean hasTargetValue();

  public abstract A withNewTargetValue(java.lang.String);
}
