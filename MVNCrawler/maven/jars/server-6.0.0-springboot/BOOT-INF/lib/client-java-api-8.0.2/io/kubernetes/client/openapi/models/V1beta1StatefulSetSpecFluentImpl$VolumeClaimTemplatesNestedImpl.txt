Compiled from "V1beta1StatefulSetSpecFluentImpl.java"
public class io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluentImpl$VolumeClaimTemplatesNestedImpl<N> extends io.kubernetes.client.openapi.models.V1PersistentVolumeClaimFluentImpl<io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluent$VolumeClaimTemplatesNested<N>> implements io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluent$VolumeClaimTemplatesNested<N>, io.kubernetes.client.fluent.Nested<N> {
  private final io.kubernetes.client.openapi.models.V1PersistentVolumeClaimBuilder builder;

  private final int index;

  final io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluentImpl this$0;

  io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluentImpl$VolumeClaimTemplatesNestedImpl(io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluentImpl, int, io.kubernetes.client.openapi.models.V1PersistentVolumeClaim);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/kubernetes/client/openapi/models/V1beta1StatefulSetSpecFluentImpl;
       5: aload_0
       6: invokespecial #2                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimFluentImpl."<init>":()V
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field index:I
      14: aload_0
      15: new           #4                  // class io/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder
      18: dup
      19: aload_0
      20: aload_3
      21: invokespecial #5                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder."<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimFluent;Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaim;)V
      24: putfield      #6                  // Field builder:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder;
      27: return

  io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluentImpl$VolumeClaimTemplatesNestedImpl(io.kubernetes.client.openapi.models.V1beta1StatefulSetSpecFluentImpl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/kubernetes/client/openapi/models/V1beta1StatefulSetSpecFluentImpl;
       5: aload_0
       6: invokespecial #2                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimFluentImpl."<init>":()V
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field index:I
      14: aload_0
      15: new           #4                  // class io/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder
      18: dup
      19: aload_0
      20: invokespecial #7                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder."<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimFluent;)V
      23: putfield      #6                  // Field builder:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder;
      26: return

  public N and();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/kubernetes/client/openapi/models/V1beta1StatefulSetSpecFluentImpl;
       4: aload_0
       5: getfield      #3                  // Field index:I
       8: aload_0
       9: getfield      #6                  // Field builder:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder;
      12: invokevirtual #8                  // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimBuilder.build:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaim;
      15: invokevirtual #9                  // Method io/kubernetes/client/openapi/models/V1beta1StatefulSetSpecFluentImpl.setToVolumeClaimTemplates:(ILio/kubernetes/client/openapi/models/V1PersistentVolumeClaim;)Lio/kubernetes/client/openapi/models/V1beta1StatefulSetSpecFluent;
      18: areturn

  public N endVolumeClaimTemplate();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method and:()Ljava/lang/Object;
       4: areturn
}
