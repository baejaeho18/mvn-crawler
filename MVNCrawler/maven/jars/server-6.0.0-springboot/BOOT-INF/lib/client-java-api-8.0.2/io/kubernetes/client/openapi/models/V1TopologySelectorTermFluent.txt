Compiled from "V1TopologySelectorTermFluent.java"
public interface io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent<A extends io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToMatchLabelExpressions(int, io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement);

  public abstract A setToMatchLabelExpressions(int, io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement);

  public abstract A addToMatchLabelExpressions(io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement...);

  public abstract A addAllToMatchLabelExpressions(java.util.Collection<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement>);

  public abstract A removeFromMatchLabelExpressions(io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement...);

  public abstract A removeAllFromMatchLabelExpressions(java.util.Collection<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement>);

  public abstract A removeMatchingFromMatchLabelExpressions(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirementBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement> getMatchLabelExpressions();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement> buildMatchLabelExpressions();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement buildMatchLabelExpression(int);

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement buildFirstMatchLabelExpression();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement buildLastMatchLabelExpression();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement buildMatchingMatchLabelExpression(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirementBuilder>);

  public abstract java.lang.Boolean hasMatchingMatchLabelExpression(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirementBuilder>);

  public abstract A withMatchLabelExpressions(java.util.List<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement>);

  public abstract A withMatchLabelExpressions(io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement...);

  public abstract java.lang.Boolean hasMatchLabelExpressions();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> addNewMatchLabelExpression();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> addNewMatchLabelExpressionLike(io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement);

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> setNewMatchLabelExpressionLike(int, io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirement);

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> editMatchLabelExpression(int);

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> editFirstMatchLabelExpression();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> editLastMatchLabelExpression();

  public abstract io.kubernetes.client.openapi.models.V1TopologySelectorTermFluent$MatchLabelExpressionsNested<A> editMatchingMatchLabelExpression(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TopologySelectorLabelRequirementBuilder>);
}
