Compiled from "RuntimeRawExtensionFluentImpl.java"
public class io.kubernetes.client.openapi.models.RuntimeRawExtensionFluentImpl<A extends io.kubernetes.client.openapi.models.RuntimeRawExtensionFluent<A>> extends io.kubernetes.client.fluent.BaseFluent<A> implements io.kubernetes.client.openapi.models.RuntimeRawExtensionFluent<A> {
  private java.util.List<java.lang.Byte> raw;

  public io.kubernetes.client.openapi.models.RuntimeRawExtensionFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/kubernetes/client/fluent/BaseFluent."<init>":()V
       4: return

  public io.kubernetes.client.openapi.models.RuntimeRawExtensionFluentImpl(io.kubernetes.client.openapi.models.RuntimeRawExtension);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/kubernetes/client/fluent/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method io/kubernetes/client/openapi/models/RuntimeRawExtension.getRaw:()[B
       9: invokevirtual #3                  // Method withRaw:([B)Lio/kubernetes/client/openapi/models/RuntimeRawExtensionFluent;
      12: pop
      13: return

  public A withRaw(byte...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #4                  // Field raw:Ljava/util/List;
      11: invokeinterface #5,  1            // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        63
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     63
      34: aload_2
      35: iload         4
      37: baload
      38: istore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #6                  // class java/lang/Byte
      45: dup
      46: iconst_0
      47: iload         5
      49: invokestatic  #7                  // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      52: aastore
      53: invokevirtual #8                  // Method addToRaw:([Ljava/lang/Byte;)Lio/kubernetes/client/openapi/models/RuntimeRawExtensionFluent;
      56: pop
      57: iinc          4, 1
      60: goto          28
      63: aload_0
      64: areturn

  public byte[] getRaw();
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #4                  // Field raw:Ljava/util/List;
      11: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      16: goto          20
      19: iconst_0
      20: istore_1
      21: iload_1
      22: newarray       byte
      24: astore_2
      25: iload_1
      26: ifne          31
      29: aload_2
      30: areturn
      31: iconst_0
      32: istore_3
      33: aload_0
      34: getfield      #4                  // Field raw:Ljava/util/List;
      37: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          80
      54: aload         4
      56: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #6                  // class java/lang/Byte
      64: invokevirtual #13                 // Method java/lang/Byte.byteValue:()B
      67: istore        5
      69: aload_2
      70: iload_3
      71: iinc          3, 1
      74: iload         5
      76: bastore
      77: goto          44
      80: aload_2
      81: areturn

  public A addToRaw(int, java.lang.Byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnonnull     12
       7: aload_0
       8: aconst_null
       9: putfield      #4                  // Field raw:Ljava/util/List;
      12: aload_0
      13: getfield      #4                  // Field raw:Ljava/util/List;
      16: iload_1
      17: aload_2
      18: invokeinterface #14,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      23: aload_0
      24: areturn

  public A setToRaw(int, java.lang.Byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnonnull     12
       7: aload_0
       8: aconst_null
       9: putfield      #4                  // Field raw:Ljava/util/List;
      12: aload_0
      13: getfield      #4                  // Field raw:Ljava/util/List;
      16: iload_1
      17: aload_2
      18: invokeinterface #15,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: areturn

  public A addToRaw(java.lang.Byte...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnonnull     12
       7: aload_0
       8: aconst_null
       9: putfield      #4                  // Field raw:Ljava/util/List;
      12: aload_1
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     50
      26: aload_2
      27: iload         4
      29: aaload
      30: astore        5
      32: aload_0
      33: getfield      #4                  // Field raw:Ljava/util/List;
      36: aload         5
      38: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: iinc          4, 1
      47: goto          20
      50: aload_0
      51: areturn

  public A addAllToRaw(java.util.Collection<java.lang.Byte>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnonnull     12
       7: aload_0
       8: aconst_null
       9: putfield      #4                  // Field raw:Ljava/util/List;
      12: aload_1
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          52
      28: aload_2
      29: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #6                  // class java/lang/Byte
      37: astore_3
      38: aload_0
      39: getfield      #4                  // Field raw:Ljava/util/List;
      42: aload_3
      43: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: goto          19
      52: aload_0
      53: areturn

  public A removeFromRaw(java.lang.Byte...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     45
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #4                  // Field raw:Ljava/util/List;
      24: ifnull        39
      27: aload_0
      28: getfield      #4                  // Field raw:Ljava/util/List;
      31: aload         5
      33: invokeinterface #18,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      38: pop
      39: iinc          4, 1
      42: goto          8
      45: aload_0
      46: areturn

  public A removeAllFromRaw(java.util.Collection<java.lang.Byte>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #6                  // class java/lang/Byte
      25: astore_3
      26: aload_0
      27: getfield      #4                  // Field raw:Ljava/util/List;
      30: ifnull        44
      33: aload_0
      34: getfield      #4                  // Field raw:Ljava/util/List;
      37: aload_3
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      43: pop
      44: goto          7
      47: aload_0
      48: areturn

  public java.lang.Boolean hasRaw();
    Code:
       0: aload_0
       1: getfield      #4                  // Field raw:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field raw:Ljava/util/List;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public A addNewRaw(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #6                  // class java/lang/Byte
       5: dup
       6: iconst_0
       7: new           #6                  // class java/lang/Byte
      10: dup
      11: aload_1
      12: invokespecial #21                 // Method java/lang/Byte."<init>":(Ljava/lang/String;)V
      15: aastore
      16: invokevirtual #8                  // Method addToRaw:([Ljava/lang/Byte;)Lio/kubernetes/client/openapi/models/RuntimeRawExtensionFluent;
      19: areturn

  public A addNewRaw(byte);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #6                  // class java/lang/Byte
       5: dup
       6: iconst_0
       7: new           #6                  // class java/lang/Byte
      10: dup
      11: iload_1
      12: invokespecial #22                 // Method java/lang/Byte."<init>":(B)V
      15: aastore
      16: invokevirtual #8                  // Method addToRaw:([Ljava/lang/Byte;)Lio/kubernetes/client/openapi/models/RuntimeRawExtensionFluent;
      19: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #24                 // class io/kubernetes/client/openapi/models/RuntimeRawExtensionFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field raw:Ljava/util/List;
      33: ifnull        55
      36: aload_0
      37: getfield      #4                  // Field raw:Ljava/util/List;
      40: aload_2
      41: getfield      #4                  // Field raw:Ljava/util/List;
      44: invokeinterface #25,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      49: ifne          64
      52: goto          62
      55: aload_2
      56: getfield      #4                  // Field raw:Ljava/util/List;
      59: ifnull        64
      62: iconst_0
      63: ireturn
      64: iconst_1
      65: ireturn
}
