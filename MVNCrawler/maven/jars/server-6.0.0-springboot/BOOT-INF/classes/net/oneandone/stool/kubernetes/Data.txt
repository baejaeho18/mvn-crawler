Compiled from "Data.java"
public class net.oneandone.stool.kubernetes.Data extends net.oneandone.stool.kubernetes.Volume {
  public final boolean secret;

  private final java.util.Map<java.lang.String, java.lang.String> keyToPaths;

  private final java.util.Map<java.lang.String, byte[]> data;

  public static net.oneandone.stool.kubernetes.Data configMap(java.lang.String);
    Code:
       0: new           #1                  // class net/oneandone/stool/kubernetes/Data
       3: dup
       4: iconst_0
       5: aload_0
       6: invokespecial #3                  // Method "<init>":(ZLjava/lang/String;)V
       9: areturn

  public static net.oneandone.stool.kubernetes.Data secrets(java.lang.String);
    Code:
       0: new           #1                  // class net/oneandone/stool/kubernetes/Data
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #3                  // Method "<init>":(ZLjava/lang/String;)V
       9: areturn

  private net.oneandone.stool.kubernetes.Data(boolean, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #7                  // Method net/oneandone/stool/kubernetes/Volume."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iload_1
       7: putfield      #12                 // Field secret:Z
      10: aload_0
      11: new           #16                 // class java/util/HashMap
      14: dup
      15: invokespecial #18                 // Method java/util/HashMap."<init>":()V
      18: putfield      #21                 // Field keyToPaths:Ljava/util/Map;
      21: aload_0
      22: new           #16                 // class java/util/HashMap
      25: dup
      26: invokespecial #18                 // Method java/util/HashMap."<init>":()V
      29: putfield      #25                 // Field data:Ljava/util/Map;
      32: return

  public void addDirectory(net.oneandone.sushi.fs.file.FileNode, net.oneandone.sushi.fs.file.FileNode) throws java.io.IOException;
    Code:
       0: aload_2
       1: iconst_1
       2: anewarray     #28                 // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #30                 // String **/*
       9: aastore
      10: invokevirtual #32                 // Method net/oneandone/sushi/fs/file/FileNode.find:([Ljava/lang/String;)Ljava/util/List;
      13: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          68
      28: aload_3
      29: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #33                 // class net/oneandone/sushi/fs/file/FileNode
      37: astore        4
      39: aload         4
      41: invokevirtual #54                 // Method net/oneandone/sushi/fs/file/FileNode.isDirectory:()Z
      44: ifeq          50
      47: goto          19
      50: aload_0
      51: aload         4
      53: aload_1
      54: invokevirtual #57                 // Method net/oneandone/sushi/fs/file/FileNode.getRelative:(Lnet/oneandone/sushi/fs/Node;)Ljava/lang/String;
      57: aload         4
      59: invokevirtual #61                 // Method net/oneandone/sushi/fs/file/FileNode.readBytes:()[B
      62: invokevirtual #65                 // Method add:(Ljava/lang/String;[B)V
      65: goto          19
      68: return

  public void addUtf8(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #69                 // String utf8
       5: invokevirtual #71                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
       8: invokevirtual #65                 // Method add:(Ljava/lang/String;[B)V
      11: goto          24
      14: astore_3
      15: new           #77                 // class java/lang/IllegalStateException
      18: dup
      19: aload_3
      20: invokespecial #79                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: return
    Exception table:
       from    to  target type
           0    11    14   Class java/io/UnsupportedEncodingException

  public void add(java.lang.String, byte[]);
    Code:
       0: aload_1
       1: invokestatic  #82                 // Method pathToKey:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #21                 // Field keyToPaths:Ljava/util/Map;
       9: aload_3
      10: aload_1
      11: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #25                 // Field data:Ljava/util/Map;
      21: aload_3
      22: aload_2
      23: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: return

  private static java.lang.String pathToKey(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #92                 // String /
       3: ldc           #94                 // String _
       5: invokevirtual #96                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
       8: bipush        58
      10: bipush        45
      12: invokevirtual #100                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      15: areturn

  public void define(net.oneandone.stool.kubernetes.Engine) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field secret:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #103                // Field name:Ljava/lang/String;
      12: aload_0
      13: getfield      #25                 // Field data:Ljava/util/Map;
      16: invokevirtual #107                // Method net/oneandone/stool/kubernetes/Engine.secretCreate:(Ljava/lang/String;Ljava/util/Map;)V
      19: goto          34
      22: aload_1
      23: aload_0
      24: getfield      #103                // Field name:Ljava/lang/String;
      27: aload_0
      28: getfield      #25                 // Field data:Ljava/util/Map;
      31: invokevirtual #113                // Method net/oneandone/stool/kubernetes/Engine.configMapCreateBinary:(Ljava/lang/String;Ljava/util/Map;)V
      34: return

  public io.kubernetes.client.openapi.models.V1Volume volume();
    Code:
       0: aload_0
       1: getfield      #21                 // Field keyToPaths:Ljava/util/Map;
       4: ifnull        108
       7: new           #116                // class java/util/ArrayList
      10: dup
      11: invokespecial #118                // Method java/util/ArrayList."<init>":()V
      14: astore_3
      15: aload_0
      16: getfield      #21                 // Field keyToPaths:Ljava/util/Map;
      19: invokeinterface #119,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #123,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          105
      41: aload         4
      43: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #126                // class java/util/Map$Entry
      51: astore        5
      53: aload_3
      54: new           #128                // class io/kubernetes/client/openapi/models/V1KeyToPathBuilder
      57: dup
      58: invokespecial #130                // Method io/kubernetes/client/openapi/models/V1KeyToPathBuilder."<init>":()V
      61: aload         5
      63: invokeinterface #131,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      68: checkcast     #28                 // class java/lang/String
      71: invokevirtual #134                // Method io/kubernetes/client/openapi/models/V1KeyToPathBuilder.withKey:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1KeyToPathFluent;
      74: checkcast     #128                // class io/kubernetes/client/openapi/models/V1KeyToPathBuilder
      77: aload         5
      79: invokeinterface #138,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      84: checkcast     #28                 // class java/lang/String
      87: invokevirtual #141                // Method io/kubernetes/client/openapi/models/V1KeyToPathBuilder.withPath:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1KeyToPathFluent;
      90: checkcast     #128                // class io/kubernetes/client/openapi/models/V1KeyToPathBuilder
      93: invokevirtual #144                // Method io/kubernetes/client/openapi/models/V1KeyToPathBuilder.build:()Lio/kubernetes/client/openapi/models/V1KeyToPath;
      96: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     101: pop
     102: goto          31
     105: goto          110
     108: aconst_null
     109: astore_3
     110: aload_0
     111: getfield      #12                 // Field secret:Z
     114: ifeq          173
     117: new           #151                // class io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder
     120: dup
     121: invokespecial #153                // Method io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder."<init>":()V
     124: aload_0
     125: getfield      #103                // Field name:Ljava/lang/String;
     128: invokevirtual #154                // Method io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder.withSecretName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1SecretVolumeSourceFluent;
     131: checkcast     #151                // class io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder
     134: aload_3
     135: invokevirtual #158                // Method io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder.withItems:(Ljava/util/List;)Lio/kubernetes/client/openapi/models/V1SecretVolumeSourceFluent;
     138: checkcast     #151                // class io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder
     141: invokevirtual #162                // Method io/kubernetes/client/openapi/models/V1SecretVolumeSourceBuilder.build:()Lio/kubernetes/client/openapi/models/V1SecretVolumeSource;
     144: astore_1
     145: new           #165                // class io/kubernetes/client/openapi/models/V1VolumeBuilder
     148: dup
     149: invokespecial #167                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder."<init>":()V
     152: aload_0
     153: getfield      #103                // Field name:Ljava/lang/String;
     156: invokevirtual #168                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder.withName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1VolumeFluent;
     159: checkcast     #165                // class io/kubernetes/client/openapi/models/V1VolumeBuilder
     162: aload_1
     163: invokevirtual #172                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder.withSecret:(Lio/kubernetes/client/openapi/models/V1SecretVolumeSource;)Lio/kubernetes/client/openapi/models/V1VolumeFluent;
     166: checkcast     #165                // class io/kubernetes/client/openapi/models/V1VolumeBuilder
     169: invokevirtual #176                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder.build:()Lio/kubernetes/client/openapi/models/V1Volume;
     172: areturn
     173: new           #179                // class io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder
     176: dup
     177: invokespecial #181                // Method io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder."<init>":()V
     180: aload_0
     181: getfield      #103                // Field name:Ljava/lang/String;
     184: invokevirtual #182                // Method io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder.withName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceFluent;
     187: checkcast     #179                // class io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder
     190: aload_3
     191: invokevirtual #185                // Method io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder.withItems:(Ljava/util/List;)Lio/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceFluent;
     194: checkcast     #179                // class io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder
     197: invokevirtual #188                // Method io/kubernetes/client/openapi/models/V1ConfigMapVolumeSourceBuilder.build:()Lio/kubernetes/client/openapi/models/V1ConfigMapVolumeSource;
     200: astore_2
     201: new           #165                // class io/kubernetes/client/openapi/models/V1VolumeBuilder
     204: dup
     205: invokespecial #167                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder."<init>":()V
     208: aload_0
     209: getfield      #103                // Field name:Ljava/lang/String;
     212: invokevirtual #168                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder.withName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1VolumeFluent;
     215: checkcast     #165                // class io/kubernetes/client/openapi/models/V1VolumeBuilder
     218: aload_2
     219: invokevirtual #191                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder.withConfigMap:(Lio/kubernetes/client/openapi/models/V1ConfigMapVolumeSource;)Lio/kubernetes/client/openapi/models/V1VolumeFluent;
     222: checkcast     #165                // class io/kubernetes/client/openapi/models/V1VolumeBuilder
     225: invokevirtual #176                // Method io/kubernetes/client/openapi/models/V1VolumeBuilder.build:()Lio/kubernetes/client/openapi/models/V1Volume;
     228: areturn

  public void mounts(net.oneandone.stool.kubernetes.Volume$Mount, java.util.List<io.kubernetes.client.openapi.models.V1VolumeMount>);
    Code:
       0: aload_1
       1: getfield      #195                // Field net/oneandone/stool/kubernetes/Volume$Mount.subPaths:Z
       4: ifeq          96
       7: aload_0
       8: getfield      #21                 // Field keyToPaths:Ljava/util/Map;
      11: invokeinterface #200,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #204,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          93
      33: aload         4
      35: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #28                 // class java/lang/String
      43: astore        5
      45: new           #207                // class io/kubernetes/client/openapi/models/V1VolumeMount
      48: dup
      49: invokespecial #209                // Method io/kubernetes/client/openapi/models/V1VolumeMount."<init>":()V
      52: astore_3
      53: aload_3
      54: aload_0
      55: getfield      #103                // Field name:Ljava/lang/String;
      58: invokevirtual #210                // Method io/kubernetes/client/openapi/models/V1VolumeMount.setName:(Ljava/lang/String;)V
      61: aload_3
      62: aload_1
      63: getfield      #213                // Field net/oneandone/stool/kubernetes/Volume$Mount.path:Ljava/lang/String;
      66: aload         5
      68: invokedynamic #216,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      73: invokevirtual #220                // Method io/kubernetes/client/openapi/models/V1VolumeMount.setMountPath:(Ljava/lang/String;)V
      76: aload_3
      77: aload         5
      79: invokevirtual #223                // Method io/kubernetes/client/openapi/models/V1VolumeMount.setSubPath:(Ljava/lang/String;)V
      82: aload_2
      83: aload_3
      84: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      89: pop
      90: goto          23
      93: goto          128
      96: new           #207                // class io/kubernetes/client/openapi/models/V1VolumeMount
      99: dup
     100: invokespecial #209                // Method io/kubernetes/client/openapi/models/V1VolumeMount."<init>":()V
     103: astore_3
     104: aload_3
     105: aload_0
     106: getfield      #103                // Field name:Ljava/lang/String;
     109: invokevirtual #210                // Method io/kubernetes/client/openapi/models/V1VolumeMount.setName:(Ljava/lang/String;)V
     112: aload_3
     113: aload_1
     114: getfield      #213                // Field net/oneandone/stool/kubernetes/Volume$Mount.path:Ljava/lang/String;
     117: invokevirtual #220                // Method io/kubernetes/client/openapi/models/V1VolumeMount.setMountPath:(Ljava/lang/String;)V
     120: aload_2
     121: aload_3
     122: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     127: pop
     128: return

  public void addRelative(net.oneandone.sushi.fs.file.FileNode, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokedynamic #226,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       6: astore        4
       8: aload_3
       9: aload         4
      11: invokevirtual #228                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      14: ifne          26
      17: new           #232                // class java/lang/IllegalArgumentException
      20: dup
      21: aload_3
      22: invokespecial #234                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_3
      28: aload         4
      30: invokevirtual #235                // Method java/lang/String.length:()I
      33: invokevirtual #239                // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: aload_1
      37: invokevirtual #61                 // Method net/oneandone/sushi/fs/file/FileNode.readBytes:()[B
      40: invokevirtual #65                 // Method add:(Ljava/lang/String;[B)V
      43: return
}
