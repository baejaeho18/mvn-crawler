Compiled from "Archive.java"
public interface org.springframework.boot.loader.archive.Archive extends java.lang.Iterable<org.springframework.boot.loader.archive.Archive$Entry>, java.lang.AutoCloseable {
  public abstract java.net.URL getUrl() throws java.net.MalformedURLException;

  public abstract java.util.jar.Manifest getManifest() throws java.io.IOException;

  public default java.util.Iterator<org.springframework.boot.loader.archive.Archive> getNestedArchives(org.springframework.boot.loader.archive.Archive$EntryFilter, org.springframework.boot.loader.archive.Archive$EntryFilter) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #1,  0              // InvokeDynamic #0:matches:(Lorg/springframework/boot/loader/archive/Archive$EntryFilter;Lorg/springframework/boot/loader/archive/Archive$EntryFilter;)Lorg/springframework/boot/loader/archive/Archive$EntryFilter;
       7: astore_3
       8: aload_0
       9: aload_3
      10: invokeinterface #2,  2            // InterfaceMethod getNestedArchives:(Lorg/springframework/boot/loader/archive/Archive$EntryFilter;)Ljava/util/List;
      15: astore        4
      17: aload         4
      19: invokeinterface #3,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: areturn

  public default java.util.List<org.springframework.boot.loader.archive.Archive> getNestedArchives(org.springframework.boot.loader.archive.Archive$EntryFilter) throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #5                  // String Unexpected call to getNestedArchives(filter)
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public abstract java.util.Iterator<org.springframework.boot.loader.archive.Archive$Entry> iterator();

  public default void forEach(java.util.function.Consumer<? super org.springframework.boot.loader.archive.Archive$Entry>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #8,  1            // InterfaceMethod iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          41
      21: aload_2
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #11                 // class org/springframework/boot/loader/archive/Archive$Entry
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      38: goto          12
      41: return

  public default java.util.Spliterator<org.springframework.boot.loader.archive.Archive$Entry> spliterator();
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod iterator:()Ljava/util/Iterator;
       6: iconst_0
       7: invokestatic  #13                 // Method java/util/Spliterators.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;
      10: areturn

  public default boolean isExploded();
    Code:
       0: iconst_0
       1: ireturn

  public default void close() throws java.lang.Exception;
    Code:
       0: return

  private static boolean lambda$getNestedArchives$0(org.springframework.boot.loader.archive.Archive$EntryFilter, org.springframework.boot.loader.archive.Archive$EntryFilter, org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: aload_2
       6: invokeinterface #14,  2           // InterfaceMethod org/springframework/boot/loader/archive/Archive$EntryFilter.matches:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Z
      11: ifeq          32
      14: aload_1
      15: ifnull        28
      18: aload_1
      19: aload_2
      20: invokeinterface #14,  2           // InterfaceMethod org/springframework/boot/loader/archive/Archive$EntryFilter.matches:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn
}
