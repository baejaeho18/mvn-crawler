Compiled from "JarLauncher.java"
public class org.springframework.boot.loader.JarLauncher extends org.springframework.boot.loader.ExecutableArchiveLauncher {
  private static final java.lang.String DEFAULT_CLASSPATH_INDEX_LOCATION;

  static final org.springframework.boot.loader.archive.Archive$EntryFilter NESTED_ARCHIVE_ENTRY_FILTER;

  public org.springframework.boot.loader.JarLauncher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/loader/ExecutableArchiveLauncher."<init>":()V
       4: return

  protected org.springframework.boot.loader.JarLauncher(org.springframework.boot.loader.archive.Archive);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/boot/loader/ExecutableArchiveLauncher."<init>":(Lorg/springframework/boot/loader/archive/Archive;)V
       5: return

  protected org.springframework.boot.loader.ClassPathIndexFile getClassPathIndex(org.springframework.boot.loader.archive.Archive) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/springframework/boot/loader/archive/ExplodedArchive
       4: ifeq          24
       7: aload_0
       8: aload_1
       9: invokespecial #4                  // Method getClassPathIndexFileLocation:(Lorg/springframework/boot/loader/archive/Archive;)Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokeinterface #5,  1            // InterfaceMethod org/springframework/boot/loader/archive/Archive.getUrl:()Ljava/net/URL;
      19: aload_2
      20: invokestatic  #6                  // Method org/springframework/boot/loader/ClassPathIndexFile.loadIfPossible:(Ljava/net/URL;Ljava/lang/String;)Lorg/springframework/boot/loader/ClassPathIndexFile;
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #7                  // Method org/springframework/boot/loader/ExecutableArchiveLauncher.getClassPathIndex:(Lorg/springframework/boot/loader/archive/Archive;)Lorg/springframework/boot/loader/ClassPathIndexFile;
      29: areturn

  private java.lang.String getClassPathIndexFileLocation(org.springframework.boot.loader.archive.Archive) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod org/springframework/boot/loader/archive/Archive.getManifest:()Ljava/util/jar/Manifest;
       6: astore_2
       7: aload_2
       8: ifnull        18
      11: aload_2
      12: invokevirtual #9                  // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
      15: goto          19
      18: aconst_null
      19: astore_3
      20: aload_3
      21: ifnull        33
      24: aload_3
      25: ldc           #11                 // String Spring-Boot-Classpath-Index
      27: invokevirtual #12                 // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      30: goto          34
      33: aconst_null
      34: astore        4
      36: aload         4
      38: ifnull        46
      41: aload         4
      43: goto          48
      46: ldc           #14                 // String BOOT-INF/classpath.idx
      48: areturn

  protected boolean isPostProcessingClassPathArchives();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isSearchCandidate(org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive$Entry.getName:()Ljava/lang/String;
       6: ldc           #16                 // String BOOT-INF/
       8: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      11: ireturn

  protected boolean isNestedArchive(org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: getstatic     #18                 // Field NESTED_ARCHIVE_ENTRY_FILTER:Lorg/springframework/boot/loader/archive/Archive$EntryFilter;
       3: aload_1
       4: invokeinterface #19,  2           // InterfaceMethod org/springframework/boot/loader/archive/Archive$EntryFilter.matches:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Z
       9: ireturn

  public static void main(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: new           #13                 // class org/springframework/boot/loader/JarLauncher
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: aload_0
       8: invokevirtual #21                 // Method launch:([Ljava/lang/String;)V
      11: return

  private static boolean lambda$static$0(org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive$Entry.isDirectory:()Z
       6: ifeq          21
       9: aload_0
      10: invokeinterface #15,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive$Entry.getName:()Ljava/lang/String;
      15: ldc           #23                 // String BOOT-INF/classes/
      17: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ireturn
      21: aload_0
      22: invokeinterface #15,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive$Entry.getName:()Ljava/lang/String;
      27: ldc           #25                 // String BOOT-INF/lib/
      29: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      32: ireturn

  static {};
    Code:
       0: invokedynamic #26,  0             // InvokeDynamic #0:matches:()Lorg/springframework/boot/loader/archive/Archive$EntryFilter;
       5: putstatic     #18                 // Field NESTED_ARCHIVE_ENTRY_FILTER:Lorg/springframework/boot/loader/archive/Archive$EntryFilter;
       8: return
}
