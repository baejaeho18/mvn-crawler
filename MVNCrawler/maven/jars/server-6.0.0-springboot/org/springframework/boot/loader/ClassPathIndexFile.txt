Compiled from "ClassPathIndexFile.java"
final class org.springframework.boot.loader.ClassPathIndexFile {
  private final java.io.File root;

  private final java.util.List<java.lang.String> lines;

  private org.springframework.boot.loader.ClassPathIndexFile(java.io.File, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field root:Ljava/io/File;
       9: aload_0
      10: aload_2
      11: invokeinterface #3,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #4,  0              // InvokeDynamic #0:apply:(Lorg/springframework/boot/loader/ClassPathIndexFile;)Ljava/util/function/Function;
      22: invokeinterface #5,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: invokestatic  #6                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      30: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      35: checkcast     #8                  // class java/util/List
      38: putfield      #9                  // Field lines:Ljava/util/List;
      41: return

  private java.lang.String extractName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #10                 // String - \"
       3: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          30
       9: aload_1
      10: ldc           #12                 // String \"
      12: invokevirtual #13                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          30
      18: aload_1
      19: iconst_3
      20: aload_1
      21: invokevirtual #14                 // Method java/lang/String.length:()I
      24: iconst_1
      25: isub
      26: invokevirtual #15                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      29: areturn
      30: new           #16                 // class java/lang/IllegalStateException
      33: dup
      34: new           #17                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #19                 // String Malformed classpath index line [
      43: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #21                 // String ]
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow

  int size();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lines:Ljava/util/List;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  boolean containsEntry(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #25                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #9                  // Field lines:Ljava/util/List;
      17: aload_1
      18: invokeinterface #26,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      23: ireturn

  java.util.List<java.net.URL> getUrls();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lines:Ljava/util/List;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: invokedynamic #27,  0             // InvokeDynamic #1:apply:(Lorg/springframework/boot/loader/ClassPathIndexFile;)Ljava/util/function/Function;
      15: invokeinterface #5,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: invokestatic  #6                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #8                  // class java/util/List
      31: invokestatic  #28                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      34: areturn

  private java.net.URL asUrl(java.lang.String);
    Code:
       0: new           #29                 // class java/io/File
       3: dup
       4: aload_0
       5: getfield      #2                  // Field root:Ljava/io/File;
       8: aload_1
       9: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: invokevirtual #31                 // Method java/io/File.toURI:()Ljava/net/URI;
      15: invokevirtual #32                 // Method java/net/URI.toURL:()Ljava/net/URL;
      18: areturn
      19: astore_2
      20: new           #16                 // class java/lang/IllegalStateException
      23: dup
      24: aload_2
      25: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/net/MalformedURLException

  static org.springframework.boot.loader.ClassPathIndexFile loadIfPossible(java.net.URL, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method asFile:(Ljava/net/URL;)Ljava/io/File;
       4: aload_1
       5: invokestatic  #36                 // Method loadIfPossible:(Ljava/io/File;Ljava/lang/String;)Lorg/springframework/boot/loader/ClassPathIndexFile;
       8: areturn

  private static org.springframework.boot.loader.ClassPathIndexFile loadIfPossible(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #29                 // class java/io/File
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      10: invokestatic  #37                 // Method loadIfPossible:(Ljava/io/File;Ljava/io/File;)Lorg/springframework/boot/loader/ClassPathIndexFile;
      13: areturn

  private static org.springframework.boot.loader.ClassPathIndexFile loadIfPossible(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method java/io/File.exists:()Z
       4: ifeq          115
       7: aload_1
       8: invokevirtual #39                 // Method java/io/File.isFile:()Z
      11: ifeq          115
      14: new           #40                 // class java/io/FileInputStream
      17: dup
      18: aload_1
      19: invokespecial #41                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      22: astore_2
      23: aconst_null
      24: astore_3
      25: new           #42                 // class org/springframework/boot/loader/ClassPathIndexFile
      28: dup
      29: aload_0
      30: aload_2
      31: invokestatic  #43                 // Method loadLines:(Ljava/io/InputStream;)Ljava/util/List;
      34: invokespecial #44                 // Method "<init>":(Ljava/io/File;Ljava/util/List;)V
      37: astore        4
      39: aload_2
      40: ifnull        69
      43: aload_3
      44: ifnull        65
      47: aload_2
      48: invokevirtual #45                 // Method java/io/InputStream.close:()V
      51: goto          69
      54: astore        5
      56: aload_3
      57: aload         5
      59: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      62: goto          69
      65: aload_2
      66: invokevirtual #45                 // Method java/io/InputStream.close:()V
      69: aload         4
      71: areturn
      72: astore        4
      74: aload         4
      76: astore_3
      77: aload         4
      79: athrow
      80: astore        6
      82: aload_2
      83: ifnull        112
      86: aload_3
      87: ifnull        108
      90: aload_2
      91: invokevirtual #45                 // Method java/io/InputStream.close:()V
      94: goto          112
      97: astore        7
      99: aload_3
     100: aload         7
     102: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     105: goto          112
     108: aload_2
     109: invokevirtual #45                 // Method java/io/InputStream.close:()V
     112: aload         6
     114: athrow
     115: aconst_null
     116: areturn
    Exception table:
       from    to  target type
          47    51    54   Class java/lang/Throwable
          25    39    72   Class java/lang/Throwable
          25    39    80   any
          90    94    97   Class java/lang/Throwable
          72    82    80   any

  private static java.util.List<java.lang.String> loadLines(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #48                 // class java/util/ArrayList
       3: dup
       4: invokespecial #49                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: new           #50                 // class java/io/BufferedReader
      11: dup
      12: new           #51                 // class java/io/InputStreamReader
      15: dup
      16: aload_0
      17: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      20: invokespecial #53                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      23: invokespecial #54                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      26: astore_2
      27: aload_2
      28: invokevirtual #55                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      31: astore_3
      32: aload_3
      33: ifnull        62
      36: aload_3
      37: invokevirtual #56                 // Method java/lang/String.trim:()Ljava/lang/String;
      40: invokevirtual #25                 // Method java/lang/String.isEmpty:()Z
      43: ifne          54
      46: aload_1
      47: aload_3
      48: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_2
      55: invokevirtual #55                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      58: astore_3
      59: goto          32
      62: aload_1
      63: invokestatic  #28                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      66: areturn

  private static java.io.File asFile(java.net.URL);
    Code:
       0: ldc           #58                 // String file
       2: aload_0
       3: invokevirtual #59                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       6: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          22
      12: new           #61                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #62                 // String URL does not reference a file
      18: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: new           #29                 // class java/io/File
      25: dup
      26: aload_0
      27: invokevirtual #64                 // Method java/net/URL.toURI:()Ljava/net/URI;
      30: invokespecial #65                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      33: areturn
      34: astore_1
      35: new           #29                 // class java/io/File
      38: dup
      39: aload_0
      40: invokevirtual #67                 // Method java/net/URL.getPath:()Ljava/lang/String;
      43: invokespecial #68                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      46: areturn
    Exception table:
       from    to  target type
          22    33    34   Class java/net/URISyntaxException
}
