Compiled from "ExecutableArchiveLauncher.java"
public abstract class org.springframework.boot.loader.ExecutableArchiveLauncher extends org.springframework.boot.loader.Launcher {
  private static final java.lang.String START_CLASS_ATTRIBUTE;

  protected static final java.lang.String BOOT_CLASSPATH_INDEX_ATTRIBUTE;

  private final org.springframework.boot.loader.archive.Archive archive;

  private final org.springframework.boot.loader.ClassPathIndexFile classPathIndex;

  public org.springframework.boot.loader.ExecutableArchiveLauncher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/loader/Launcher."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method createArchive:()Lorg/springframework/boot/loader/archive/Archive;
       9: putfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
      18: invokevirtual #4                  // Method getClassPathIndex:(Lorg/springframework/boot/loader/archive/Archive;)Lorg/springframework/boot/loader/ClassPathIndexFile;
      21: putfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
      24: goto          37
      27: astore_1
      28: new           #7                  // class java/lang/IllegalStateException
      31: dup
      32: aload_1
      33: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      36: athrow
      37: return
    Exception table:
       from    to  target type
           4    24    27   Class java/lang/Exception

  protected org.springframework.boot.loader.ExecutableArchiveLauncher(org.springframework.boot.loader.archive.Archive);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/loader/Launcher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
       9: aload_0
      10: aload_0
      11: aload_0
      12: getfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
      15: invokevirtual #4                  // Method getClassPathIndex:(Lorg/springframework/boot/loader/archive/Archive;)Lorg/springframework/boot/loader/ClassPathIndexFile;
      18: putfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
      21: goto          34
      24: astore_2
      25: new           #7                  // class java/lang/IllegalStateException
      28: dup
      29: aload_2
      30: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
      34: return
    Exception table:
       from    to  target type
           4    21    24   Class java/lang/Exception

  protected org.springframework.boot.loader.ClassPathIndexFile getClassPathIndex(org.springframework.boot.loader.archive.Archive) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.String getMainClass() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
       4: invokeinterface #9,  1            // InterfaceMethod org/springframework/boot/loader/archive/Archive.getManifest:()Ljava/util/jar/Manifest;
       9: astore_1
      10: aconst_null
      11: astore_2
      12: aload_1
      13: ifnull        26
      16: aload_1
      17: invokevirtual #10                 // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
      20: ldc           #12                 // String Start-Class
      22: invokevirtual #13                 // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_2
      26: aload_2
      27: ifnonnull     57
      30: new           #7                  // class java/lang/IllegalStateException
      33: dup
      34: new           #14                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #16                 // String No \'Start-Class\' manifest entry specified in
      43: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_2
      58: areturn

  protected java.lang.ClassLoader createClassLoader(java.util.Iterator<org.springframework.boot.loader.archive.Archive>) throws java.lang.Exception;
    Code:
       0: new           #21                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method guessClassPathSize:()I
       8: invokespecial #23                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_2
      12: aload_1
      13: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          45
      21: aload_2
      22: aload_1
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #26                 // class org/springframework/boot/loader/archive/Archive
      31: invokeinterface #27,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive.getUrl:()Ljava/net/URL;
      36: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: goto          12
      45: aload_0
      46: getfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
      49: ifnull        66
      52: aload_2
      53: aload_0
      54: getfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
      57: invokevirtual #29                 // Method org/springframework/boot/loader/ClassPathIndexFile.getUrls:()Ljava/util/List;
      60: invokeinterface #30,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      65: pop
      66: aload_0
      67: aload_2
      68: iconst_0
      69: anewarray     #31                 // class java/net/URL
      72: invokeinterface #32,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      77: checkcast     #33                 // class "[Ljava/net/URL;"
      80: invokevirtual #34                 // Method createClassLoader:([Ljava/net/URL;)Ljava/lang/ClassLoader;
      83: areturn

  private int guessClassPathSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
       4: ifnull        18
       7: aload_0
       8: getfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
      11: invokevirtual #35                 // Method org/springframework/boot/loader/ClassPathIndexFile.size:()I
      14: bipush        10
      16: iadd
      17: ireturn
      18: bipush        50
      20: ireturn

  protected java.util.Iterator<org.springframework.boot.loader.archive.Archive> getClassPathArchivesIterator() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokedynamic #36,  0             // InvokeDynamic #0:matches:(Lorg/springframework/boot/loader/ExecutableArchiveLauncher;)Lorg/springframework/boot/loader/archive/Archive$EntryFilter;
       6: astore_1
       7: aload_0
       8: getfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
      11: aload_1
      12: aload_0
      13: invokedynamic #37,  0             // InvokeDynamic #1:matches:(Lorg/springframework/boot/loader/ExecutableArchiveLauncher;)Lorg/springframework/boot/loader/archive/Archive$EntryFilter;
      18: invokeinterface #38,  3           // InterfaceMethod org/springframework/boot/loader/archive/Archive.getNestedArchives:(Lorg/springframework/boot/loader/archive/Archive$EntryFilter;Lorg/springframework/boot/loader/archive/Archive$EntryFilter;)Ljava/util/Iterator;
      23: astore_2
      24: aload_0
      25: invokevirtual #39                 // Method isPostProcessingClassPathArchives:()Z
      28: ifeq          37
      31: aload_0
      32: aload_2
      33: invokespecial #40                 // Method applyClassPathArchivePostProcessing:(Ljava/util/Iterator;)Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: areturn

  private boolean isEntryIndexed(org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: aload_0
       1: getfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
       4: ifnull        21
       7: aload_0
       8: getfield      #5                  // Field classPathIndex:Lorg/springframework/boot/loader/ClassPathIndexFile;
      11: aload_1
      12: invokeinterface #41,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive$Entry.getName:()Ljava/lang/String;
      17: invokevirtual #42                 // Method org/springframework/boot/loader/ClassPathIndexFile.containsEntry:(Ljava/lang/String;)Z
      20: ireturn
      21: iconst_0
      22: ireturn

  private java.util.Iterator<org.springframework.boot.loader.archive.Archive> applyClassPathArchivePostProcessing(java.util.Iterator<org.springframework.boot.loader.archive.Archive>) throws java.lang.Exception;
    Code:
       0: new           #21                 // class java/util/ArrayList
       3: dup
       4: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          33
      17: aload_2
      18: aload_1
      19: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: goto          8
      33: aload_0
      34: aload_2
      35: invokevirtual #44                 // Method postProcessClassPathArchives:(Ljava/util/List;)V
      38: aload_2
      39: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      44: areturn

  protected boolean isSearchCandidate(org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: iconst_1
       1: ireturn

  protected abstract boolean isNestedArchive(org.springframework.boot.loader.archive.Archive$Entry);

  protected boolean isPostProcessingClassPathArchives();
    Code:
       0: iconst_1
       1: ireturn

  protected void postProcessClassPathArchives(java.util.List<org.springframework.boot.loader.archive.Archive>) throws java.lang.Exception;
    Code:
       0: return

  protected boolean isExploded();
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
       4: invokeinterface #46,  1           // InterfaceMethod org/springframework/boot/loader/archive/Archive.isExploded:()Z
       9: ireturn

  protected final org.springframework.boot.loader.archive.Archive getArchive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field archive:Lorg/springframework/boot/loader/archive/Archive;
       4: areturn

  private boolean lambda$getClassPathArchivesIterator$0(org.springframework.boot.loader.archive.Archive$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method isNestedArchive:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokespecial #48                 // Method isEntryIndexed:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
