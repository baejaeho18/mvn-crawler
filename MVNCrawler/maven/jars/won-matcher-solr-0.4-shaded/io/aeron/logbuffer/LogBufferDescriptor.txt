Compiled from "LogBufferDescriptor.java"
public class io.aeron.logbuffer.LogBufferDescriptor {
  public static final int PARTITION_COUNT;

  public static final int LOG_META_DATA_SECTION_INDEX;

  public static final int TERM_MIN_LENGTH;

  public static final int TERM_TAIL_COUNTERS_OFFSET;

  public static final int LOG_ACTIVE_PARTITION_INDEX_OFFSET;

  public static final int LOG_TIME_OF_LAST_SM_OFFSET;

  public static final int LOG_INITIAL_TERM_ID_OFFSET;

  public static final int LOG_DEFAULT_FRAME_HEADER_LENGTH_OFFSET;

  public static final int LOG_MTU_LENGTH_OFFSET;

  public static final int LOG_CORRELATION_ID_OFFSET;

  public static final int LOG_DEFAULT_FRAME_HEADER_OFFSET;

  public static final int LOG_DEFAULT_FRAME_HEADER_MAX_LENGTH;

  public static final int LOG_META_DATA_LENGTH;

  public io.aeron.logbuffer.LogBufferDescriptor();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public static void checkTermLength(int);
    Code:
       0: iload_0
       1: ldc           #6                  // int 65536
       3: if_icmpge     40
       6: ldc           #7                  // String Term length less than min length of %d, length=%d
       8: iconst_2
       9: anewarray     #8                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: ldc           #6                  // int 65536
      16: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: aastore
      20: dup
      21: iconst_1
      22: iload_0
      23: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: astore_1
      31: new           #11                 // class java/lang/IllegalStateException
      34: dup
      35: aload_1
      36: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_0
      41: bipush        31
      43: iand
      44: ifeq          81
      47: ldc           #13                 // String Term length not a multiple of %d, length=%d
      49: iconst_2
      50: anewarray     #8                  // class java/lang/Object
      53: dup
      54: iconst_0
      55: bipush        32
      57: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aastore
      61: dup
      62: iconst_1
      63: iload_0
      64: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: astore_1
      72: new           #11                 // class java/lang/IllegalStateException
      75: dup
      76: aload_1
      77: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  public static int initialTermId(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field LOG_INITIAL_TERM_ID_OFFSET:I
       4: invokevirtual #15                 // Method org/agrona/concurrent/UnsafeBuffer.getInt:(I)I
       7: ireturn

  public static void initialTermId(org.agrona.concurrent.UnsafeBuffer, int);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field LOG_INITIAL_TERM_ID_OFFSET:I
       4: iload_1
       5: invokevirtual #16                 // Method org/agrona/concurrent/UnsafeBuffer.putInt:(II)V
       8: return

  public static int mtuLength(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: getstatic     #17                 // Field LOG_MTU_LENGTH_OFFSET:I
       4: invokevirtual #15                 // Method org/agrona/concurrent/UnsafeBuffer.getInt:(I)I
       7: ireturn

  public static void mtuLength(org.agrona.concurrent.UnsafeBuffer, int);
    Code:
       0: aload_0
       1: getstatic     #17                 // Field LOG_MTU_LENGTH_OFFSET:I
       4: iload_1
       5: invokevirtual #16                 // Method org/agrona/concurrent/UnsafeBuffer.putInt:(II)V
       8: return

  public static long correlationId(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field LOG_CORRELATION_ID_OFFSET:I
       4: invokevirtual #19                 // Method org/agrona/concurrent/UnsafeBuffer.getLong:(I)J
       7: lreturn

  public static void correlationId(org.agrona.concurrent.UnsafeBuffer, long);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field LOG_CORRELATION_ID_OFFSET:I
       4: lload_1
       5: invokevirtual #20                 // Method org/agrona/concurrent/UnsafeBuffer.putLong:(IJ)V
       8: return

  public static long timeOfLastStatusMessage(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: getstatic     #21                 // Field LOG_TIME_OF_LAST_SM_OFFSET:I
       4: invokevirtual #22                 // Method org/agrona/concurrent/UnsafeBuffer.getLongVolatile:(I)J
       7: lreturn

  public static void timeOfLastStatusMessage(org.agrona.concurrent.UnsafeBuffer, long);
    Code:
       0: aload_0
       1: getstatic     #21                 // Field LOG_TIME_OF_LAST_SM_OFFSET:I
       4: lload_1
       5: invokevirtual #23                 // Method org/agrona/concurrent/UnsafeBuffer.putLongOrdered:(IJ)V
       8: return

  public static int activePartitionIndex(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field LOG_ACTIVE_PARTITION_INDEX_OFFSET:I
       4: invokevirtual #25                 // Method org/agrona/concurrent/UnsafeBuffer.getIntVolatile:(I)I
       7: ireturn

  public static void activePartitionIndex(org.agrona.concurrent.UnsafeBuffer, int);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field LOG_ACTIVE_PARTITION_INDEX_OFFSET:I
       4: iload_1
       5: invokevirtual #26                 // Method org/agrona/concurrent/UnsafeBuffer.putIntOrdered:(II)V
       8: return

  public static int nextPartitionIndex(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: iconst_3
       4: irem
       5: ireturn

  public static int indexByTerm(int, int);
    Code:
       0: iload_1
       1: iload_0
       2: isub
       3: iconst_3
       4: irem
       5: ireturn

  public static int indexByTermCount(long);
    Code:
       0: lload_0
       1: ldc2_w        #27                 // long 3l
       4: lrem
       5: l2i
       6: ireturn

  public static int indexByPosition(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: lushr
       3: ldc2_w        #27                 // long 3l
       6: lrem
       7: l2i
       8: ireturn

  public static long computePosition(int, int, int, int);
    Code:
       0: iload_0
       1: iload_3
       2: isub
       3: i2l
       4: lstore        4
       6: lload         4
       8: iload_2
       9: lshl
      10: iload_1
      11: i2l
      12: ladd
      13: lreturn

  public static long computeTermBeginPosition(int, int, int);
    Code:
       0: iload_0
       1: iload_2
       2: isub
       3: i2l
       4: lstore_3
       5: lload_3
       6: iload_1
       7: lshl
       8: lreturn

  public static int computeTermIdFromPosition(long, int, int);
    Code:
       0: lload_0
       1: iload_2
       2: lushr
       3: l2i
       4: iload_3
       5: iadd
       6: ireturn

  public static int computeTermOffsetFromPosition(long, int);
    Code:
       0: lconst_1
       1: iload_2
       2: lshl
       3: lconst_1
       4: lsub
       5: lstore_3
       6: lload_0
       7: lload_3
       8: land
       9: l2i
      10: ireturn

  public static long computeLogLength(int);
    Code:
       0: iload_0
       1: iconst_3
       2: imul
       3: getstatic     #29                 // Field LOG_META_DATA_LENGTH:I
       6: iadd
       7: i2l
       8: lreturn

  public static int computeTermLength(long);
    Code:
       0: lload_0
       1: getstatic     #29                 // Field LOG_META_DATA_LENGTH:I
       4: i2l
       5: lsub
       6: ldc2_w        #27                 // long 3l
       9: ldiv
      10: l2i
      11: ireturn

  public static void storeDefaultFrameHeader(org.agrona.concurrent.UnsafeBuffer, org.agrona.DirectBuffer);
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
       6: bipush        32
       8: if_icmpeq     48
      11: new           #31                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #32                 // String Default header of %d not equal to %d
      17: iconst_2
      18: anewarray     #8                  // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokeinterface #30,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
      29: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: dup
      34: iconst_1
      35: bipush        32
      37: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getstatic     #34                 // Field LOG_DEFAULT_FRAME_HEADER_LENGTH_OFFSET:I
      52: bipush        32
      54: invokevirtual #16                 // Method org/agrona/concurrent/UnsafeBuffer.putInt:(II)V
      57: aload_0
      58: getstatic     #35                 // Field LOG_DEFAULT_FRAME_HEADER_OFFSET:I
      61: aload_1
      62: iconst_0
      63: bipush        32
      65: invokevirtual #36                 // Method org/agrona/concurrent/UnsafeBuffer.putBytes:(ILorg/agrona/DirectBuffer;II)V
      68: return

  public static org.agrona.concurrent.UnsafeBuffer defaultFrameHeader(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: new           #37                 // class org/agrona/concurrent/UnsafeBuffer
       3: dup
       4: aload_0
       5: getstatic     #35                 // Field LOG_DEFAULT_FRAME_HEADER_OFFSET:I
       8: bipush        32
      10: invokespecial #38                 // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Lorg/agrona/DirectBuffer;II)V
      13: areturn

  public static void applyDefaultHeader(org.agrona.concurrent.UnsafeBuffer, org.agrona.concurrent.UnsafeBuffer, int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getstatic     #35                 // Field LOG_DEFAULT_FRAME_HEADER_OFFSET:I
       6: bipush        32
       8: invokevirtual #36                 // Method org/agrona/concurrent/UnsafeBuffer.putBytes:(ILorg/agrona/DirectBuffer;II)V
      11: return

  public static void rotateLog(org.agrona.concurrent.UnsafeBuffer, int, int);
    Code:
       0: iload_1
       1: invokestatic  #39                 // Method nextPartitionIndex:(I)I
       4: istore_3
       5: aload_0
       6: iload_3
       7: iload_2
       8: invokestatic  #40                 // Method initialiseTailWithTermId:(Lorg/agrona/concurrent/UnsafeBuffer;II)V
      11: aload_0
      12: iload_3
      13: invokestatic  #41                 // Method activePartitionIndex:(Lorg/agrona/concurrent/UnsafeBuffer;I)V
      16: return

  public static void initialiseTailWithTermId(org.agrona.concurrent.UnsafeBuffer, int, int);
    Code:
       0: aload_0
       1: getstatic     #42                 // Field TERM_TAIL_COUNTERS_OFFSET:I
       4: iload_1
       5: bipush        8
       7: imul
       8: iadd
       9: iload_2
      10: i2l
      11: bipush        32
      13: lshl
      14: invokevirtual #20                 // Method org/agrona/concurrent/UnsafeBuffer.putLong:(IJ)V
      17: return

  public static int termId(long);
    Code:
       0: lload_0
       1: bipush        32
       3: lushr
       4: l2i
       5: ireturn

  public static int termOffset(long, long);
    Code:
       0: lload_0
       1: ldc2_w        #43                 // long 4294967295l
       4: land
       5: lstore        4
       7: lload         4
       9: lload_2
      10: invokestatic  #45                 // Method java/lang/Math.min:(JJ)J
      13: l2i
      14: ireturn

  public static long rawTailVolatile(org.agrona.concurrent.UnsafeBuffer, int);
    Code:
       0: aload_0
       1: getstatic     #42                 // Field TERM_TAIL_COUNTERS_OFFSET:I
       4: bipush        8
       6: iload_1
       7: imul
       8: iadd
       9: invokevirtual #22                 // Method org/agrona/concurrent/UnsafeBuffer.getLongVolatile:(I)J
      12: lreturn

  public static long rawTailVolatile(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method activePartitionIndex:(Lorg/agrona/concurrent/UnsafeBuffer;)I
       4: istore_1
       5: aload_0
       6: getstatic     #42                 // Field TERM_TAIL_COUNTERS_OFFSET:I
       9: bipush        8
      11: iload_1
      12: imul
      13: iadd
      14: invokevirtual #22                 // Method org/agrona/concurrent/UnsafeBuffer.getLongVolatile:(I)J
      17: lreturn

  static {};
    Code:
       0: iconst_0
       1: istore_0
       2: iload_0
       3: putstatic     #42                 // Field TERM_TAIL_COUNTERS_OFFSET:I
       6: iinc          0, 24
       9: iload_0
      10: putstatic     #24                 // Field LOG_ACTIVE_PARTITION_INDEX_OFFSET:I
      13: sipush        128
      16: istore_0
      17: iload_0
      18: putstatic     #21                 // Field LOG_TIME_OF_LAST_SM_OFFSET:I
      21: iinc_w        0, 128
      27: iload_0
      28: putstatic     #18                 // Field LOG_CORRELATION_ID_OFFSET:I
      31: getstatic     #18                 // Field LOG_CORRELATION_ID_OFFSET:I
      34: bipush        8
      36: iadd
      37: putstatic     #14                 // Field LOG_INITIAL_TERM_ID_OFFSET:I
      40: getstatic     #14                 // Field LOG_INITIAL_TERM_ID_OFFSET:I
      43: iconst_4
      44: iadd
      45: putstatic     #34                 // Field LOG_DEFAULT_FRAME_HEADER_LENGTH_OFFSET:I
      48: getstatic     #34                 // Field LOG_DEFAULT_FRAME_HEADER_LENGTH_OFFSET:I
      51: iconst_4
      52: iadd
      53: putstatic     #17                 // Field LOG_MTU_LENGTH_OFFSET:I
      56: iinc          0, 64
      59: iload_0
      60: putstatic     #35                 // Field LOG_DEFAULT_FRAME_HEADER_OFFSET:I
      63: iload_0
      64: sipush        128
      67: iadd
      68: putstatic     #29                 // Field LOG_META_DATA_LENGTH:I
      71: return
}
