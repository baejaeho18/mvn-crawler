Compiled from "ActiveSubscriptions.java"
class io.aeron.ActiveSubscriptions {
  private final org.agrona.collections.Int2ObjectHashMap<java.util.List<io.aeron.Subscription>> subscriptionsByStreamIdMap;

  io.aeron.ActiveSubscriptions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/agrona/collections/Int2ObjectHashMap
       8: dup
       9: invokespecial #3                  // Method org/agrona/collections/Int2ObjectHashMap."<init>":()V
      12: putfield      #4                  // Field subscriptionsByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      15: return

  public void forEach(int, java.util.function.Consumer<io.aeron.Subscription>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscriptionsByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       4: iload_1
       5: invokevirtual #5                  // Method org/agrona/collections/Int2ObjectHashMap.get:(I)Ljava/lang/Object;
       8: checkcast     #6                  // class java/util/List
      11: astore_3
      12: aconst_null
      13: aload_3
      14: if_acmpeq     24
      17: aload_3
      18: aload_2
      19: invokeinterface #7,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      24: return

  public void add(io.aeron.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscriptionsByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       4: aload_1
       5: invokevirtual #8                  // Method io/aeron/Subscription.streamId:()I
       8: invokedynamic #9,  0              // InvokeDynamic #0:apply:()Ljava/util/function/IntFunction;
      13: invokevirtual #10                 // Method org/agrona/collections/Int2ObjectHashMap.computeIfAbsent:(ILjava/util/function/IntFunction;)Ljava/lang/Object;
      16: checkcast     #6                  // class java/util/List
      19: aload_1
      20: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: return

  public void remove(io.aeron.Subscription);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method io/aeron/Subscription.streamId:()I
       4: istore_2
       5: aload_0
       6: getfield      #4                  // Field subscriptionsByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       9: iload_2
      10: invokevirtual #5                  // Method org/agrona/collections/Int2ObjectHashMap.get:(I)Ljava/lang/Object;
      13: checkcast     #6                  // class java/util/List
      16: astore_3
      17: aconst_null
      18: aload_3
      19: if_acmpeq     50
      22: aload_3
      23: aload_1
      24: invokeinterface #12,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      29: ifeq          50
      32: aload_3
      33: invokeinterface #13,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      38: ifeq          50
      41: aload_0
      42: getfield      #4                  // Field subscriptionsByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      45: iload_2
      46: invokevirtual #14                 // Method org/agrona/collections/Int2ObjectHashMap.remove:(I)Ljava/lang/Object;
      49: pop
      50: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscriptionsByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       4: invokevirtual #15                 // Method org/agrona/collections/Int2ObjectHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      17: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      22: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      25: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      30: checkcast     #6                  // class java/util/List
      33: invokedynamic #21,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      38: invokeinterface #7,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      43: return

  private static java.util.List lambda$add$0(int);
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
       7: areturn
}
