Compiled from "LogBuffers.java"
public class io.aeron.LogBuffers implements java.lang.AutoCloseable {
  private final int termLength;

  private final java.nio.channels.FileChannel fileChannel;

  private final org.agrona.concurrent.UnsafeBuffer[] termBuffers;

  private final org.agrona.concurrent.UnsafeBuffer logMetaDataBuffer;

  private final java.nio.MappedByteBuffer[] mappedByteBuffers;

  public io.aeron.LogBuffers(java.lang.String, java.nio.channels.FileChannel$MapMode);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_3
       6: anewarray     #3                  // class org/agrona/concurrent/UnsafeBuffer
       9: putfield      #4                  // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
      12: aload_0
      13: aload_1
      14: iconst_0
      15: anewarray     #5                  // class java/lang/String
      18: invokestatic  #6                  // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      21: iconst_2
      22: anewarray     #7                  // class java/nio/file/OpenOption
      25: dup
      26: iconst_0
      27: getstatic     #8                  // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      30: aastore
      31: dup
      32: iconst_1
      33: getstatic     #9                  // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
      36: aastore
      37: invokestatic  #10                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      40: putfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      43: aload_0
      44: getfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      47: invokevirtual #12                 // Method java/nio/channels/FileChannel.size:()J
      50: lstore_3
      51: lload_3
      52: invokestatic  #13                 // Method io/aeron/logbuffer/LogBufferDescriptor.computeTermLength:(J)I
      55: istore        5
      57: iload         5
      59: invokestatic  #14                 // Method io/aeron/logbuffer/LogBufferDescriptor.checkTermLength:(I)V
      62: aload_0
      63: iload         5
      65: putfield      #15                 // Field termLength:I
      68: lload_3
      69: ldc2_w        #17                 // long 2147483647l
      72: lcmp
      73: ifge          165
      76: aload_0
      77: getfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      80: aload_2
      81: lconst_0
      82: lload_3
      83: invokevirtual #19                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
      86: astore        6
      88: aload_0
      89: iconst_1
      90: anewarray     #20                 // class java/nio/MappedByteBuffer
      93: dup
      94: iconst_0
      95: aload         6
      97: aastore
      98: putfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
     101: iconst_0
     102: istore        7
     104: iload         7
     106: iconst_3
     107: if_icmpge     139
     110: aload_0
     111: getfield      #4                  // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
     114: iload         7
     116: new           #3                  // class org/agrona/concurrent/UnsafeBuffer
     119: dup
     120: aload         6
     122: iload         7
     124: iload         5
     126: imul
     127: iload         5
     129: invokespecial #22                 // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Ljava/nio/ByteBuffer;II)V
     132: aastore
     133: iinc          7, 1
     136: goto          104
     139: aload_0
     140: new           #3                  // class org/agrona/concurrent/UnsafeBuffer
     143: dup
     144: aload         6
     146: lload_3
     147: getstatic     #23                 // Field io/aeron/logbuffer/LogBufferDescriptor.LOG_META_DATA_LENGTH:I
     150: i2l
     151: lsub
     152: l2i
     153: getstatic     #23                 // Field io/aeron/logbuffer/LogBufferDescriptor.LOG_META_DATA_LENGTH:I
     156: invokespecial #22                 // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Ljava/nio/ByteBuffer;II)V
     159: putfield      #24                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     162: goto          281
     165: aload_0
     166: iconst_4
     167: anewarray     #20                 // class java/nio/MappedByteBuffer
     170: putfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
     173: iconst_0
     174: istore        6
     176: iload         6
     178: iconst_3
     179: if_icmpge     234
     182: aload_0
     183: getfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
     186: iload         6
     188: aload_0
     189: getfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
     192: aload_2
     193: iload         5
     195: i2l
     196: iload         6
     198: i2l
     199: lmul
     200: iload         5
     202: i2l
     203: invokevirtual #19                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
     206: aastore
     207: aload_0
     208: getfield      #4                  // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
     211: iload         6
     213: new           #3                  // class org/agrona/concurrent/UnsafeBuffer
     216: dup
     217: aload_0
     218: getfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
     221: iload         6
     223: aaload
     224: invokespecial #25                 // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     227: aastore
     228: iinc          6, 1
     231: goto          176
     234: aload_0
     235: getfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
     238: aload_2
     239: lload_3
     240: getstatic     #23                 // Field io/aeron/logbuffer/LogBufferDescriptor.LOG_META_DATA_LENGTH:I
     243: i2l
     244: lsub
     245: getstatic     #23                 // Field io/aeron/logbuffer/LogBufferDescriptor.LOG_META_DATA_LENGTH:I
     248: i2l
     249: invokevirtual #19                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
     252: astore        6
     254: aload_0
     255: getfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
     258: aload_0
     259: getfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
     262: arraylength
     263: iconst_1
     264: isub
     265: aload         6
     267: aastore
     268: aload_0
     269: new           #3                  // class org/agrona/concurrent/UnsafeBuffer
     272: dup
     273: aload         6
     275: invokespecial #25                 // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     278: putfield      #24                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     281: goto          294
     284: astore_3
     285: new           #27                 // class java/lang/RuntimeException
     288: dup
     289: aload_3
     290: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     293: athrow
     294: aload_0
     295: getfield      #4                  // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
     298: astore_3
     299: aload_3
     300: arraylength
     301: istore        4
     303: iconst_0
     304: istore        5
     306: iload         5
     308: iload         4
     310: if_icmpge     330
     313: aload_3
     314: iload         5
     316: aaload
     317: astore        6
     319: aload         6
     321: invokevirtual #29                 // Method org/agrona/concurrent/UnsafeBuffer.verifyAlignment:()V
     324: iinc          5, 1
     327: goto          306
     330: aload_0
     331: getfield      #24                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     334: invokevirtual #29                 // Method org/agrona/concurrent/UnsafeBuffer.verifyAlignment:()V
     337: return
    Exception table:
       from    to  target type
          12   281   284   Class java/io/IOException

  public org.agrona.concurrent.UnsafeBuffer[] termBuffers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
       4: areturn

  public org.agrona.concurrent.UnsafeBuffer metaDataBuffer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
       4: areturn

  public java.nio.channels.FileChannel fileChannel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: invokestatic  #30                 // Method org/agrona/CloseHelper.close:(Ljava/lang/AutoCloseable;)V
       7: aload_0
       8: getfield      #21                 // Field mappedByteBuffers:[Ljava/nio/MappedByteBuffer;
      11: astore_1
      12: aload_1
      13: arraylength
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     38
      22: aload_1
      23: iload_3
      24: aaload
      25: astore        4
      27: aload         4
      29: invokestatic  #31                 // Method org/agrona/IoUtil.unmap:(Ljava/nio/MappedByteBuffer;)V
      32: iinc          3, 1
      35: goto          17
      38: return

  public int termLength();
    Code:
       0: aload_0
       1: getfield      #15                 // Field termLength:I
       4: ireturn
}
