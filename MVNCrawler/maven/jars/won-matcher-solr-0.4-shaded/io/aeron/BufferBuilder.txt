Compiled from "BufferBuilder.java"
public class io.aeron.BufferBuilder {
  public static final int INITIAL_CAPACITY;

  private final org.agrona.MutableDirectBuffer mutableDirectBuffer;

  private byte[] buffer;

  private int limit;

  private int capacity;

  public io.aeron.BufferBuilder();
    Code:
       0: aload_0
       1: sipush        4096
       4: invokespecial #2                  // Method "<init>":(I)V
       7: return

  public io.aeron.BufferBuilder(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field limit:I
       9: aload_0
      10: iload_1
      11: invokestatic  #5                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      14: putfield      #6                  // Field capacity:I
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field capacity:I
      22: newarray       byte
      24: putfield      #7                  // Field buffer:[B
      27: aload_0
      28: new           #8                  // class org/agrona/concurrent/UnsafeBuffer
      31: dup
      32: aload_0
      33: getfield      #7                  // Field buffer:[B
      36: invokespecial #9                  // Method org/agrona/concurrent/UnsafeBuffer."<init>":([B)V
      39: putfield      #10                 // Field mutableDirectBuffer:Lorg/agrona/MutableDirectBuffer;
      42: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field capacity:I
       4: ireturn

  public int limit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field limit:I
       4: ireturn

  public void limit(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #6                  // Field capacity:I
       9: if_icmplt     46
      12: new           #11                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #12                 // String Limit outside range: capacity=%d limit=%d
      18: iconst_2
      19: anewarray     #13                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #6                  // Field capacity:I
      28: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: dup
      33: iconst_1
      34: iload_1
      35: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: iload_1
      48: putfield      #4                  // Field limit:I
      51: return

  public org.agrona.MutableDirectBuffer buffer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field mutableDirectBuffer:Lorg/agrona/MutableDirectBuffer;
       4: areturn

  public io.aeron.BufferBuilder reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field limit:I
       5: aload_0
       6: areturn

  public io.aeron.BufferBuilder compact();
    Code:
       0: aload_0
       1: sipush        4096
       4: aload_0
       5: getfield      #4                  // Field limit:I
       8: invokestatic  #5                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      11: invokestatic  #17                 // Method java/lang/Math.max:(II)I
      14: putfield      #6                  // Field capacity:I
      17: aload_0
      18: aload_0
      19: getfield      #7                  // Field buffer:[B
      22: aload_0
      23: getfield      #6                  // Field capacity:I
      26: invokestatic  #18                 // Method java/util/Arrays.copyOf:([BI)[B
      29: putfield      #7                  // Field buffer:[B
      32: aload_0
      33: getfield      #10                 // Field mutableDirectBuffer:Lorg/agrona/MutableDirectBuffer;
      36: aload_0
      37: getfield      #7                  // Field buffer:[B
      40: invokeinterface #19,  2           // InterfaceMethod org/agrona/MutableDirectBuffer.wrap:([B)V
      45: aload_0
      46: areturn

  public io.aeron.BufferBuilder append(org.agrona.DirectBuffer, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #20                 // Method ensureCapacity:(I)V
       5: aload_1
       6: iload_2
       7: aload_0
       8: getfield      #7                  // Field buffer:[B
      11: aload_0
      12: getfield      #4                  // Field limit:I
      15: iload_3
      16: invokeinterface #21,  5           // InterfaceMethod org/agrona/DirectBuffer.getBytes:(I[BII)V
      21: aload_0
      22: dup
      23: getfield      #4                  // Field limit:I
      26: iload_3
      27: iadd
      28: putfield      #4                  // Field limit:I
      31: aload_0
      32: areturn

  private void ensureCapacity(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field limit:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: ifge          47
      11: ldc           #22                 // String Insufficient capacity: limit=%d additional=%d
      13: iconst_2
      14: anewarray     #13                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #4                  // Field limit:I
      23: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: dup
      28: iconst_1
      29: iload_1
      30: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: astore_3
      38: new           #23                 // class java/lang/IllegalStateException
      41: dup
      42: aload_3
      43: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload_2
      48: aload_0
      49: getfield      #6                  // Field capacity:I
      52: if_icmple     96
      55: aload_0
      56: getfield      #6                  // Field capacity:I
      59: iload_2
      60: invokestatic  #25                 // Method findSuitableCapacity:(II)I
      63: istore_3
      64: aload_0
      65: getfield      #7                  // Field buffer:[B
      68: iload_3
      69: invokestatic  #18                 // Method java/util/Arrays.copyOf:([BI)[B
      72: astore        4
      74: aload_0
      75: iload_3
      76: putfield      #6                  // Field capacity:I
      79: aload_0
      80: aload         4
      82: putfield      #7                  // Field buffer:[B
      85: aload_0
      86: getfield      #10                 // Field mutableDirectBuffer:Lorg/agrona/MutableDirectBuffer;
      89: aload         4
      91: invokeinterface #19,  2           // InterfaceMethod org/agrona/MutableDirectBuffer.wrap:([B)V
      96: return

  private static int findSuitableCapacity(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: ishl
       3: istore_0
       4: iload_0
       5: iload_1
       6: if_icmplt     0
       9: iload_0
      10: ireturn
}
