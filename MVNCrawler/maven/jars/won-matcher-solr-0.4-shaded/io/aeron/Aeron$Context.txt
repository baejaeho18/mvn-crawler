Compiled from "Aeron.java"
public class io.aeron.Aeron$Context extends io.aeron.CommonContext {
  private final java.util.concurrent.atomic.AtomicBoolean isClosed;

  private org.agrona.concurrent.EpochClock epochClock;

  private org.agrona.concurrent.NanoClock nanoClock;

  private org.agrona.concurrent.IdleStrategy idleStrategy;

  private org.agrona.concurrent.broadcast.CopyBroadcastReceiver toClientBuffer;

  private org.agrona.concurrent.ringbuffer.RingBuffer toDriverBuffer;

  private java.nio.MappedByteBuffer cncByteBuffer;

  private org.agrona.concurrent.AtomicBuffer cncMetaDataBuffer;

  private io.aeron.LogBuffersFactory logBuffersFactory;

  private org.agrona.ErrorHandler errorHandler;

  private io.aeron.AvailableImageHandler availableImageHandler;

  private io.aeron.UnavailableImageHandler unavailableImageHandler;

  private long keepAliveInterval;

  private long interServiceTimeout;

  private long publicationConnectionTimeout;

  private java.nio.channels.FileChannel$MapMode imageMapMode;

  private java.util.concurrent.ThreadFactory threadFactory;

  public io.aeron.Aeron$Context();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/aeron/CommonContext."<init>":()V
       4: aload_0
       5: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #15                 // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: getstatic     #16                 // Field io/aeron/Aeron.KEEPALIVE_INTERVAL_NS:J
      20: putfield      #17                 // Field keepAliveInterval:J
      23: aload_0
      24: getstatic     #18                 // Field io/aeron/Aeron.INTER_SERVICE_TIMEOUT_NS:J
      27: putfield      #19                 // Field interServiceTimeout:J
      30: aload_0
      31: getstatic     #20                 // Field io/aeron/Aeron.PUBLICATION_CONNECTION_TIMEOUT_MS:J
      34: putfield      #21                 // Field publicationConnectionTimeout:J
      37: aload_0
      38: invokedynamic #22,  0             // InvokeDynamic #0:newThread:()Ljava/util/concurrent/ThreadFactory;
      43: putfield      #1                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      46: return

  public io.aeron.Aeron$Context conclude();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/aeron/CommonContext.conclude:()Lio/aeron/CommonContext;
       4: pop
       5: aconst_null
       6: aload_0
       7: getfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
      10: if_acmpne     24
      13: aload_0
      14: new           #24                 // class org/agrona/concurrent/SystemEpochClock
      17: dup
      18: invokespecial #25                 // Method org/agrona/concurrent/SystemEpochClock."<init>":()V
      21: putfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
      24: aconst_null
      25: aload_0
      26: getfield      #10                 // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
      29: if_acmpne     43
      32: aload_0
      33: new           #26                 // class org/agrona/concurrent/SystemNanoClock
      36: dup
      37: invokespecial #27                 // Method org/agrona/concurrent/SystemNanoClock."<init>":()V
      40: putfield      #10                 // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
      43: aconst_null
      44: aload_0
      45: getfield      #2                  // Field idleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      48: if_acmpne     65
      51: aload_0
      52: new           #28                 // class org/agrona/concurrent/SleepingIdleStrategy
      55: dup
      56: getstatic     #29                 // Field io/aeron/Aeron.IDLE_SLEEP_NS:J
      59: invokespecial #30                 // Method org/agrona/concurrent/SleepingIdleStrategy."<init>":(J)V
      62: putfield      #2                  // Field idleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      65: aload_0
      66: invokevirtual #31                 // Method cncFile:()Ljava/io/File;
      69: ifnull        76
      72: aload_0
      73: invokespecial #32                 // Method connectToDriver:()V
      76: aconst_null
      77: aload_0
      78: getfield      #9                  // Field toClientBuffer:Lorg/agrona/concurrent/broadcast/CopyBroadcastReceiver;
      81: if_acmpne     115
      84: new           #33                 // class org/agrona/concurrent/broadcast/BroadcastReceiver
      87: dup
      88: aload_0
      89: getfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
      92: aload_0
      93: getfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
      96: invokestatic  #36                 // Method io/aeron/CncFileDescriptor.createToClientsBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
      99: invokespecial #37                 // Method org/agrona/concurrent/broadcast/BroadcastReceiver."<init>":(Lorg/agrona/concurrent/AtomicBuffer;)V
     102: astore_1
     103: aload_0
     104: new           #38                 // class org/agrona/concurrent/broadcast/CopyBroadcastReceiver
     107: dup
     108: aload_1
     109: invokespecial #39                 // Method org/agrona/concurrent/broadcast/CopyBroadcastReceiver."<init>":(Lorg/agrona/concurrent/broadcast/BroadcastReceiver;)V
     112: putfield      #9                  // Field toClientBuffer:Lorg/agrona/concurrent/broadcast/CopyBroadcastReceiver;
     115: aconst_null
     116: aload_0
     117: getfield      #7                  // Field toDriverBuffer:Lorg/agrona/concurrent/ringbuffer/RingBuffer;
     120: if_acmpne     145
     123: aload_0
     124: new           #40                 // class org/agrona/concurrent/ringbuffer/ManyToOneRingBuffer
     127: dup
     128: aload_0
     129: getfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     132: aload_0
     133: getfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
     136: invokestatic  #41                 // Method io/aeron/CncFileDescriptor.createToDriverBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     139: invokespecial #42                 // Method org/agrona/concurrent/ringbuffer/ManyToOneRingBuffer."<init>":(Lorg/agrona/concurrent/AtomicBuffer;)V
     142: putfield      #7                  // Field toDriverBuffer:Lorg/agrona/concurrent/ringbuffer/RingBuffer;
     145: aload_0
     146: invokevirtual #43                 // Method countersMetaDataBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
     149: ifnonnull     168
     152: aload_0
     153: aload_0
     154: getfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     157: aload_0
     158: getfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
     161: invokestatic  #44                 // Method io/aeron/CncFileDescriptor.createCountersMetaDataBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     164: invokevirtual #45                 // Method countersMetaDataBuffer:(Lorg/agrona/concurrent/UnsafeBuffer;)Lio/aeron/CommonContext;
     167: pop
     168: aload_0
     169: invokevirtual #46                 // Method countersValuesBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
     172: ifnonnull     191
     175: aload_0
     176: aload_0
     177: getfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     180: aload_0
     181: getfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
     184: invokestatic  #47                 // Method io/aeron/CncFileDescriptor.createCountersValuesBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     187: invokevirtual #48                 // Method countersValuesBuffer:(Lorg/agrona/concurrent/UnsafeBuffer;)Lio/aeron/CommonContext;
     190: pop
     191: aload_0
     192: aload_0
     193: getfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
     196: invokestatic  #49                 // Method io/aeron/CncFileDescriptor.clientLivenessTimeout:(Lorg/agrona/DirectBuffer;)J
     199: putfield      #19                 // Field interServiceTimeout:J
     202: aconst_null
     203: aload_0
     204: getfield      #8                  // Field logBuffersFactory:Lio/aeron/LogBuffersFactory;
     207: if_acmpne     221
     210: aload_0
     211: new           #50                 // class io/aeron/MappedLogBuffersFactory
     214: dup
     215: invokespecial #51                 // Method io/aeron/MappedLogBuffersFactory."<init>":()V
     218: putfield      #8                  // Field logBuffersFactory:Lio/aeron/LogBuffersFactory;
     221: aconst_null
     222: aload_0
     223: getfield      #6                  // Field errorHandler:Lorg/agrona/ErrorHandler;
     226: if_acmpne     236
     229: aload_0
     230: getstatic     #52                 // Field io/aeron/Aeron.DEFAULT_ERROR_HANDLER:Lorg/agrona/ErrorHandler;
     233: putfield      #6                  // Field errorHandler:Lorg/agrona/ErrorHandler;
     236: aconst_null
     237: aload_0
     238: getfield      #5                  // Field availableImageHandler:Lio/aeron/AvailableImageHandler;
     241: if_acmpne     253
     244: aload_0
     245: invokedynamic #53,  0             // InvokeDynamic #1:onAvailableImage:()Lio/aeron/AvailableImageHandler;
     250: putfield      #5                  // Field availableImageHandler:Lio/aeron/AvailableImageHandler;
     253: aconst_null
     254: aload_0
     255: getfield      #4                  // Field unavailableImageHandler:Lio/aeron/UnavailableImageHandler;
     258: if_acmpne     270
     261: aload_0
     262: invokedynamic #54,  0             // InvokeDynamic #2:onUnavailableImage:()Lio/aeron/UnavailableImageHandler;
     267: putfield      #4                  // Field unavailableImageHandler:Lio/aeron/UnavailableImageHandler;
     270: aconst_null
     271: aload_0
     272: getfield      #3                  // Field imageMapMode:Ljava/nio/channels/FileChannel$MapMode;
     275: if_acmpne     285
     278: aload_0
     279: getstatic     #55                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
     282: putfield      #3                  // Field imageMapMode:Ljava/nio/channels/FileChannel$MapMode;
     285: aload_0
     286: areturn

  public io.aeron.Aeron$Context epochClock(org.agrona.concurrent.EpochClock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context nanoClock(org.agrona.concurrent.NanoClock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context idleStrategy(org.agrona.concurrent.IdleStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field idleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context toClientBuffer(org.agrona.concurrent.broadcast.CopyBroadcastReceiver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field toClientBuffer:Lorg/agrona/concurrent/broadcast/CopyBroadcastReceiver;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context toDriverBuffer(org.agrona.concurrent.ringbuffer.RingBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field toDriverBuffer:Lorg/agrona/concurrent/ringbuffer/RingBuffer;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context bufferManager(io.aeron.LogBuffersFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field logBuffersFactory:Lio/aeron/LogBuffersFactory;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context errorHandler(org.agrona.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field errorHandler:Lorg/agrona/ErrorHandler;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context availableImageHandler(io.aeron.AvailableImageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field availableImageHandler:Lio/aeron/AvailableImageHandler;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context unavailableImageHandler(io.aeron.UnavailableImageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field unavailableImageHandler:Lio/aeron/UnavailableImageHandler;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context keepAliveInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field keepAliveInterval:J
       5: aload_0
       6: areturn

  public long keepAliveInterval();
    Code:
       0: aload_0
       1: getfield      #17                 // Field keepAliveInterval:J
       4: lreturn

  public io.aeron.Aeron$Context driverTimeoutMs(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #56                 // Method io/aeron/CommonContext.driverTimeoutMs:(J)Lio/aeron/CommonContext;
       5: pop
       6: aload_0
       7: areturn

  public long interServiceTimeout();
    Code:
       0: aload_0
       1: getfield      #19                 // Field interServiceTimeout:J
       4: lreturn

  public io.aeron.Aeron$Context aeronDirectoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #57                 // Method io/aeron/CommonContext.aeronDirectoryName:(Ljava/lang/String;)Lio/aeron/CommonContext;
       5: pop
       6: aload_0
       7: areturn

  public io.aeron.Aeron$Context publicationConnectionTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #21                 // Field publicationConnectionTimeout:J
       5: aload_0
       6: areturn

  public long publicationConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #21                 // Field publicationConnectionTimeout:J
       4: lreturn

  public io.aeron.Aeron$Context imageMapMode(java.nio.channels.FileChannel$MapMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field imageMapMode:Ljava/nio/channels/FileChannel$MapMode;
       5: aload_0
       6: areturn

  public io.aeron.Aeron$Context threadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public java.util.concurrent.ThreadFactory threadFactory();
    Code:
       0: aload_0
       1: getfield      #1                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #15                 // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          23
      12: aload_0
      13: getfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
      16: invokestatic  #59                 // Method org/agrona/IoUtil.unmap:(Ljava/nio/MappedByteBuffer;)V
      19: aload_0
      20: invokespecial #60                 // Method io/aeron/CommonContext.close:()V
      23: return

  private void connectToDriver();
    Code:
       0: aload_0
       1: getfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
       4: invokeinterface #61,  1           // InterfaceMethod org/agrona/concurrent/EpochClock.time:()J
       9: lstore_1
      10: aload_0
      11: invokevirtual #31                 // Method cncFile:()Ljava/io/File;
      14: astore_3
      15: aload_3
      16: invokevirtual #62                 // Method java/io/File.exists:()Z
      19: ifne          77
      22: aload_0
      23: getfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
      26: invokeinterface #61,  1           // InterfaceMethod org/agrona/concurrent/EpochClock.time:()J
      31: lload_1
      32: aload_0
      33: invokevirtual #63                 // Method driverTimeoutMs:()J
      36: ladd
      37: lcmp
      38: ifle          71
      41: new           #64                 // class io/aeron/exceptions/DriverTimeoutException
      44: dup
      45: new           #65                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #67                 // String CnC file not found:
      54: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #69                 // Method java/io/File.getName:()Ljava/lang/String;
      61: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #71                 // Method io/aeron/exceptions/DriverTimeoutException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: invokestatic  #72                 // Method java/lang/Thread.yield:()V
      74: goto          15
      77: aload_0
      78: aload_0
      79: invokevirtual #31                 // Method cncFile:()Ljava/io/File;
      82: ldc           #74                 // String cnc.dat
      84: invokestatic  #75                 // Method org/agrona/IoUtil.mapExistingFile:(Ljava/io/File;Ljava/lang/String;)Ljava/nio/MappedByteBuffer;
      87: putfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
      90: aload_0
      91: aload_0
      92: getfield      #34                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
      95: invokestatic  #76                 // Method io/aeron/CncFileDescriptor.createMetaDataBuffer:(Ljava/nio/ByteBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
      98: putfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
     101: iconst_0
     102: aload_0
     103: getfield      #35                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/AtomicBuffer;
     106: iconst_0
     107: invokestatic  #77                 // Method io/aeron/CncFileDescriptor.cncVersionOffset:(I)I
     110: invokeinterface #78,  2           // InterfaceMethod org/agrona/concurrent/AtomicBuffer.getInt:(I)I
     115: dup
     116: istore        4
     118: if_icmpne     156
     121: aload_0
     122: getfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
     125: invokeinterface #61,  1           // InterfaceMethod org/agrona/concurrent/EpochClock.time:()J
     130: lload_1
     131: aload_0
     132: invokevirtual #63                 // Method driverTimeoutMs:()J
     135: ladd
     136: lcmp
     137: ifle          150
     140: new           #64                 // class io/aeron/exceptions/DriverTimeoutException
     143: dup
     144: ldc           #79                 // String CnC file is created by not initialised.
     146: invokespecial #71                 // Method io/aeron/exceptions/DriverTimeoutException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: invokestatic  #72                 // Method java/lang/Thread.yield:()V
     153: goto          101
     156: iconst_5
     157: iload         4
     159: if_icmpeq     190
     162: new           #80                 // class java/lang/IllegalStateException
     165: dup
     166: new           #65                 // class java/lang/StringBuilder
     169: dup
     170: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
     173: ldc           #81                 // String Aeron CnC file version not supported: version=
     175: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: iload         4
     180: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     183: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     189: athrow
     190: return

  public io.aeron.CommonContext driverTimeoutMs(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #84                 // Method driverTimeoutMs:(J)Lio/aeron/Aeron$Context;
       5: areturn

  public io.aeron.CommonContext aeronDirectoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #85                 // Method aeronDirectoryName:(Ljava/lang/String;)Lio/aeron/Aeron$Context;
       5: areturn

  public io.aeron.CommonContext conclude();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method conclude:()Lio/aeron/Aeron$Context;
       4: areturn

  private static void lambda$conclude$1(io.aeron.Image);
    Code:
       0: return

  private static void lambda$conclude$0(io.aeron.Image);
    Code:
       0: return

  static org.agrona.concurrent.EpochClock access$000(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #11                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
       4: areturn

  static org.agrona.concurrent.NanoClock access$100(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #10                 // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
       4: areturn

  static org.agrona.concurrent.broadcast.CopyBroadcastReceiver access$200(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #9                  // Field toClientBuffer:Lorg/agrona/concurrent/broadcast/CopyBroadcastReceiver;
       4: areturn

  static io.aeron.LogBuffersFactory access$300(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #8                  // Field logBuffersFactory:Lio/aeron/LogBuffersFactory;
       4: areturn

  static org.agrona.concurrent.ringbuffer.RingBuffer access$400(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #7                  // Field toDriverBuffer:Lorg/agrona/concurrent/ringbuffer/RingBuffer;
       4: areturn

  static org.agrona.ErrorHandler access$500(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorHandler:Lorg/agrona/ErrorHandler;
       4: areturn

  static io.aeron.AvailableImageHandler access$600(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #5                  // Field availableImageHandler:Lio/aeron/AvailableImageHandler;
       4: areturn

  static io.aeron.UnavailableImageHandler access$700(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #4                  // Field unavailableImageHandler:Lio/aeron/UnavailableImageHandler;
       4: areturn

  static java.nio.channels.FileChannel$MapMode access$800(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #3                  // Field imageMapMode:Ljava/nio/channels/FileChannel$MapMode;
       4: areturn

  static org.agrona.concurrent.IdleStrategy access$900(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #2                  // Field idleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  static java.util.concurrent.ThreadFactory access$1000(io.aeron.Aeron$Context);
    Code:
       0: aload_0
       1: getfield      #1                  // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn
}
