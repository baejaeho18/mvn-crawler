Compiled from "Publication.java"
public class io.aeron.Publication implements java.lang.AutoCloseable {
  public static final long NOT_CONNECTED;

  public static final long BACK_PRESSURED;

  public static final long ADMIN_ACTION;

  public static final long CLOSED;

  private final long registrationId;

  private int refCount;

  private final int streamId;

  private final int sessionId;

  private final int initialTermId;

  private final int maxMessageLength;

  private final int maxPayloadLength;

  private final int positionBitsToShift;

  private volatile boolean isClosed;

  private final io.aeron.logbuffer.TermAppender[] termAppenders;

  private final org.agrona.concurrent.status.ReadablePosition positionLimit;

  private final org.agrona.concurrent.UnsafeBuffer logMetaDataBuffer;

  private final io.aeron.logbuffer.HeaderWriter headerWriter;

  private final io.aeron.LogBuffers logBuffers;

  private final io.aeron.ClientConductor clientConductor;

  private final java.lang.String channel;

  io.aeron.Publication(io.aeron.ClientConductor, java.lang.String, int, int, org.agrona.concurrent.status.ReadablePosition, io.aeron.LogBuffers, long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field refCount:I
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field isClosed:Z
      14: aload_0
      15: iconst_3
      16: anewarray     #7                  // class io/aeron/logbuffer/TermAppender
      19: putfield      #8                  // Field termAppenders:[Lio/aeron/logbuffer/TermAppender;
      22: aload         6
      24: invokevirtual #9                  // Method io/aeron/LogBuffers.termBuffers:()[Lorg/agrona/concurrent/UnsafeBuffer;
      27: astore        9
      29: aload         6
      31: invokevirtual #10                 // Method io/aeron/LogBuffers.metaDataBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
      34: astore        10
      36: iconst_0
      37: istore        11
      39: iload         11
      41: iconst_3
      42: if_icmpge     74
      45: aload_0
      46: getfield      #8                  // Field termAppenders:[Lio/aeron/logbuffer/TermAppender;
      49: iload         11
      51: new           #7                  // class io/aeron/logbuffer/TermAppender
      54: dup
      55: aload         9
      57: iload         11
      59: aaload
      60: aload         10
      62: iload         11
      64: invokespecial #11                 // Method io/aeron/logbuffer/TermAppender."<init>":(Lorg/agrona/concurrent/UnsafeBuffer;Lorg/agrona/concurrent/UnsafeBuffer;I)V
      67: aastore
      68: iinc          11, 1
      71: goto          39
      74: aload         6
      76: invokevirtual #12                 // Method io/aeron/LogBuffers.termLength:()I
      79: istore        11
      81: aload_0
      82: aload         10
      84: invokestatic  #13                 // Method io/aeron/logbuffer/LogBufferDescriptor.mtuLength:(Lorg/agrona/concurrent/UnsafeBuffer;)I
      87: bipush        32
      89: isub
      90: putfield      #14                 // Field maxPayloadLength:I
      93: aload_0
      94: iload         11
      96: invokestatic  #15                 // Method io/aeron/logbuffer/FrameDescriptor.computeMaxMessageLength:(I)I
      99: putfield      #16                 // Field maxMessageLength:I
     102: aload_0
     103: aload_1
     104: putfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
     107: aload_0
     108: aload_2
     109: putfield      #18                 // Field channel:Ljava/lang/String;
     112: aload_0
     113: iload_3
     114: putfield      #19                 // Field streamId:I
     117: aload_0
     118: iload         4
     120: putfield      #20                 // Field sessionId:I
     123: aload_0
     124: aload         10
     126: invokestatic  #21                 // Method io/aeron/logbuffer/LogBufferDescriptor.initialTermId:(Lorg/agrona/concurrent/UnsafeBuffer;)I
     129: putfield      #22                 // Field initialTermId:I
     132: aload_0
     133: aload         10
     135: putfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     138: aload_0
     139: lload         7
     141: putfield      #24                 // Field registrationId:J
     144: aload_0
     145: aload         5
     147: putfield      #25                 // Field positionLimit:Lorg/agrona/concurrent/status/ReadablePosition;
     150: aload_0
     151: aload         6
     153: putfield      #3                  // Field logBuffers:Lio/aeron/LogBuffers;
     156: aload_0
     157: iload         11
     159: invokestatic  #26                 // Method java/lang/Integer.numberOfTrailingZeros:(I)I
     162: putfield      #27                 // Field positionBitsToShift:I
     165: aload_0
     166: new           #28                 // class io/aeron/logbuffer/HeaderWriter
     169: dup
     170: aload         10
     172: invokestatic  #29                 // Method io/aeron/logbuffer/LogBufferDescriptor.defaultFrameHeader:(Lorg/agrona/concurrent/UnsafeBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     175: invokespecial #30                 // Method io/aeron/logbuffer/HeaderWriter."<init>":(Lorg/agrona/concurrent/UnsafeBuffer;)V
     178: putfield      #31                 // Field headerWriter:Lio/aeron/logbuffer/HeaderWriter;
     181: return

  public int termBufferLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field logBuffers:Lio/aeron/LogBuffers;
       4: invokevirtual #12                 // Method io/aeron/LogBuffers.termLength:()I
       7: ireturn

  public java.lang.String channel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field channel:Ljava/lang/String;
       4: areturn

  public int streamId();
    Code:
       0: aload_0
       1: getfield      #19                 // Field streamId:I
       4: ireturn

  public int sessionId();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionId:I
       4: ireturn

  public int initialTermId();
    Code:
       0: aload_0
       1: getfield      #22                 // Field initialTermId:I
       4: ireturn

  public int maxMessageLength();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maxMessageLength:I
       4: ireturn

  public int maxPayloadLength();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxPayloadLength:I
       4: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isClosed:Z
       4: ifne          28
       7: aload_0
       8: getfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
      11: aload_0
      12: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      15: invokestatic  #32                 // Method io/aeron/logbuffer/LogBufferDescriptor.timeOfLastStatusMessage:(Lorg/agrona/concurrent/UnsafeBuffer;)J
      18: invokevirtual #33                 // Method io/aeron/ClientConductor.isPublicationConnected:(J)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: dup
       9: getfield      #5                  // Field refCount:I
      12: iconst_1
      13: isub
      14: dup_x1
      15: putfield      #5                  // Field refCount:I
      18: ifne          25
      21: aload_0
      22: invokevirtual #34                 // Method release:()V
      25: aload_1
      26: monitorexit
      27: goto          35
      30: astore_2
      31: aload_1
      32: monitorexit
      33: aload_2
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    27    30   any
          30    33    30   any

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isClosed:Z
       4: ireturn

  void release();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isClosed:Z
       4: ifne          20
       7: aload_0
       8: iconst_1
       9: putfield      #6                  // Field isClosed:Z
      12: aload_0
      13: getfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
      16: aload_0
      17: invokevirtual #35                 // Method io/aeron/ClientConductor.releasePublication:(Lio/aeron/Publication;)V
      20: return

  public long position();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isClosed:Z
       4: ifeq          11
       7: ldc2_w        #37                 // long -4l
      10: lreturn
      11: aload_0
      12: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      15: invokestatic  #39                 // Method io/aeron/logbuffer/LogBufferDescriptor.rawTailVolatile:(Lorg/agrona/concurrent/UnsafeBuffer;)J
      18: lstore_1
      19: lload_1
      20: aload_0
      21: getfield      #3                  // Field logBuffers:Lio/aeron/LogBuffers;
      24: invokevirtual #12                 // Method io/aeron/LogBuffers.termLength:()I
      27: i2l
      28: invokestatic  #40                 // Method io/aeron/logbuffer/LogBufferDescriptor.termOffset:(JJ)I
      31: istore_3
      32: lload_1
      33: invokestatic  #41                 // Method io/aeron/logbuffer/LogBufferDescriptor.termId:(J)I
      36: iload_3
      37: aload_0
      38: getfield      #27                 // Field positionBitsToShift:I
      41: aload_0
      42: getfield      #22                 // Field initialTermId:I
      45: invokestatic  #42                 // Method io/aeron/logbuffer/LogBufferDescriptor.computePosition:(IIII)J
      48: lreturn

  public long positionLimit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isClosed:Z
       4: ifeq          11
       7: ldc2_w        #37                 // long -4l
      10: lreturn
      11: aload_0
      12: getfield      #25                 // Field positionLimit:Lorg/agrona/concurrent/status/ReadablePosition;
      15: invokeinterface #43,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.getVolatile:()J
      20: lreturn

  public long offer(org.agrona.DirectBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokeinterface #44,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
       9: invokevirtual #45                 // Method offer:(Lorg/agrona/DirectBuffer;II)J
      12: lreturn

  public long offer(org.agrona.DirectBuffer, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #46                 // Method offer:(Lorg/agrona/DirectBuffer;IILio/aeron/ReservedValueSupplier;)J
       8: lreturn

  public long offer(org.agrona.DirectBuffer, int, int, io.aeron.ReservedValueSupplier);
    Code:
       0: ldc2_w        #37                 // long -4l
       3: lstore        5
       5: aload_0
       6: getfield      #6                  // Field isClosed:Z
       9: ifne          185
      12: aload_0
      13: getfield      #25                 // Field positionLimit:Lorg/agrona/concurrent/status/ReadablePosition;
      16: invokeinterface #43,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.getVolatile:()J
      21: lstore        7
      23: aload_0
      24: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      27: invokestatic  #47                 // Method io/aeron/logbuffer/LogBufferDescriptor.activePartitionIndex:(Lorg/agrona/concurrent/UnsafeBuffer;)I
      30: istore        9
      32: aload_0
      33: getfield      #8                  // Field termAppenders:[Lio/aeron/logbuffer/TermAppender;
      36: iload         9
      38: aaload
      39: astore        10
      41: aload         10
      43: invokevirtual #48                 // Method io/aeron/logbuffer/TermAppender.rawTailVolatile:()J
      46: lstore        11
      48: lload         11
      50: ldc2_w        #49                 // long 4294967295l
      53: land
      54: lstore        13
      56: lload         11
      58: invokestatic  #41                 // Method io/aeron/logbuffer/LogBufferDescriptor.termId:(J)I
      61: aload_0
      62: getfield      #27                 // Field positionBitsToShift:I
      65: aload_0
      66: getfield      #22                 // Field initialTermId:I
      69: invokestatic  #51                 // Method io/aeron/logbuffer/LogBufferDescriptor.computeTermBeginPosition:(III)J
      72: lload         13
      74: ladd
      75: lstore        15
      77: lload         15
      79: lload         7
      81: lcmp
      82: ifge          155
      85: iload_3
      86: aload_0
      87: getfield      #14                 // Field maxPayloadLength:I
      90: if_icmpgt     112
      93: aload         10
      95: aload_0
      96: getfield      #31                 // Field headerWriter:Lio/aeron/logbuffer/HeaderWriter;
      99: aload_1
     100: iload_2
     101: iload_3
     102: aload         4
     104: invokevirtual #52                 // Method io/aeron/logbuffer/TermAppender.appendUnfragmentedMessage:(Lio/aeron/logbuffer/HeaderWriter;Lorg/agrona/DirectBuffer;IILio/aeron/ReservedValueSupplier;)J
     107: lstore        17
     109: goto          137
     112: aload_0
     113: iload_3
     114: invokespecial #53                 // Method checkForMaxMessageLength:(I)V
     117: aload         10
     119: aload_0
     120: getfield      #31                 // Field headerWriter:Lio/aeron/logbuffer/HeaderWriter;
     123: aload_1
     124: iload_2
     125: iload_3
     126: aload_0
     127: getfield      #14                 // Field maxPayloadLength:I
     130: aload         4
     132: invokevirtual #54                 // Method io/aeron/logbuffer/TermAppender.appendFragmentedMessage:(Lio/aeron/logbuffer/HeaderWriter;Lorg/agrona/DirectBuffer;IIILio/aeron/ReservedValueSupplier;)J
     135: lstore        17
     137: aload_0
     138: iload         9
     140: lload         13
     142: l2i
     143: lload         15
     145: lload         17
     147: invokespecial #55                 // Method newPosition:(IIJJ)J
     150: lstore        5
     152: goto          185
     155: aload_0
     156: getfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
     159: aload_0
     160: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     163: invokestatic  #32                 // Method io/aeron/logbuffer/LogBufferDescriptor.timeOfLastStatusMessage:(Lorg/agrona/concurrent/UnsafeBuffer;)J
     166: invokevirtual #33                 // Method io/aeron/ClientConductor.isPublicationConnected:(J)Z
     169: ifeq          180
     172: ldc2_w        #56                 // long -2l
     175: lstore        5
     177: goto          185
     180: ldc2_w        #58                 // long -1l
     183: lstore        5
     185: lload         5
     187: lreturn

  public long tryClaim(int, io.aeron.logbuffer.BufferClaim);
    Code:
       0: ldc2_w        #37                 // long -4l
       3: lstore_3
       4: aload_0
       5: getfield      #6                  // Field isClosed:Z
       8: ifne          147
      11: aload_0
      12: iload_1
      13: invokespecial #60                 // Method checkForMaxPayloadLength:(I)V
      16: aload_0
      17: getfield      #25                 // Field positionLimit:Lorg/agrona/concurrent/status/ReadablePosition;
      20: invokeinterface #43,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.getVolatile:()J
      25: lstore        5
      27: aload_0
      28: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      31: invokestatic  #47                 // Method io/aeron/logbuffer/LogBufferDescriptor.activePartitionIndex:(Lorg/agrona/concurrent/UnsafeBuffer;)I
      34: istore        7
      36: aload_0
      37: getfield      #8                  // Field termAppenders:[Lio/aeron/logbuffer/TermAppender;
      40: iload         7
      42: aaload
      43: astore        8
      45: aload         8
      47: invokevirtual #48                 // Method io/aeron/logbuffer/TermAppender.rawTailVolatile:()J
      50: lstore        9
      52: lload         9
      54: ldc2_w        #49                 // long 4294967295l
      57: land
      58: lstore        11
      60: lload         9
      62: invokestatic  #41                 // Method io/aeron/logbuffer/LogBufferDescriptor.termId:(J)I
      65: aload_0
      66: getfield      #27                 // Field positionBitsToShift:I
      69: aload_0
      70: getfield      #22                 // Field initialTermId:I
      73: invokestatic  #51                 // Method io/aeron/logbuffer/LogBufferDescriptor.computeTermBeginPosition:(III)J
      76: lload         11
      78: ladd
      79: lstore        13
      81: lload         13
      83: lload         5
      85: lcmp
      86: ifge          119
      89: aload         8
      91: aload_0
      92: getfield      #31                 // Field headerWriter:Lio/aeron/logbuffer/HeaderWriter;
      95: iload_1
      96: aload_2
      97: invokevirtual #61                 // Method io/aeron/logbuffer/TermAppender.claim:(Lio/aeron/logbuffer/HeaderWriter;ILio/aeron/logbuffer/BufferClaim;)J
     100: lstore        15
     102: aload_0
     103: iload         7
     105: lload         11
     107: l2i
     108: lload         13
     110: lload         15
     112: invokespecial #55                 // Method newPosition:(IIJJ)J
     115: lstore_3
     116: goto          147
     119: aload_0
     120: getfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
     123: aload_0
     124: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     127: invokestatic  #32                 // Method io/aeron/logbuffer/LogBufferDescriptor.timeOfLastStatusMessage:(Lorg/agrona/concurrent/UnsafeBuffer;)J
     130: invokevirtual #33                 // Method io/aeron/ClientConductor.isPublicationConnected:(J)Z
     133: ifeq          143
     136: ldc2_w        #56                 // long -2l
     139: lstore_3
     140: goto          147
     143: ldc2_w        #58                 // long -1l
     146: lstore_3
     147: lload_3
     148: lreturn

  public long registrationId();
    Code:
       0: aload_0
       1: getfield      #24                 // Field registrationId:J
       4: lreturn

  void incRef();
    Code:
       0: aload_0
       1: getfield      #17                 // Field clientConductor:Lio/aeron/ClientConductor;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: dup
       9: getfield      #5                  // Field refCount:I
      12: iconst_1
      13: iadd
      14: putfield      #5                  // Field refCount:I
      17: aload_1
      18: monitorexit
      19: goto          27
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any

  private long newPosition(int, int, long, long);
    Code:
       0: ldc2_w        #62                 // long -3l
       3: lstore        7
       5: lload         5
       7: invokestatic  #64                 // Method io/aeron/logbuffer/TermAppender.termOffset:(J)I
      10: istore        9
      12: iload         9
      14: ifle          30
      17: lload_3
      18: iload_2
      19: i2l
      20: lsub
      21: iload         9
      23: i2l
      24: ladd
      25: lstore        7
      27: goto          68
      30: iload         9
      32: iconst_m1
      33: if_icmpne     68
      36: iload_1
      37: invokestatic  #65                 // Method io/aeron/logbuffer/LogBufferDescriptor.nextPartitionIndex:(I)I
      40: istore        10
      42: aload_0
      43: getfield      #8                  // Field termAppenders:[Lio/aeron/logbuffer/TermAppender;
      46: iload         10
      48: aaload
      49: lload         5
      51: invokestatic  #66                 // Method io/aeron/logbuffer/TermAppender.termId:(J)I
      54: iconst_1
      55: iadd
      56: invokevirtual #67                 // Method io/aeron/logbuffer/TermAppender.tailTermId:(I)V
      59: aload_0
      60: getfield      #23                 // Field logMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      63: iload         10
      65: invokestatic  #68                 // Method io/aeron/logbuffer/LogBufferDescriptor.activePartitionIndex:(Lorg/agrona/concurrent/UnsafeBuffer;I)V
      68: lload         7
      70: lreturn

  private void checkForMaxPayloadLength(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #14                 // Field maxPayloadLength:I
       5: if_icmple     42
       8: new           #69                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #70                 // String Claim exceeds maxPayloadLength of %d, length=%d
      14: iconst_2
      15: anewarray     #71                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #14                 // Field maxPayloadLength:I
      24: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: dup
      29: iconst_1
      30: iload_1
      31: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  private void checkForMaxMessageLength(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #16                 // Field maxMessageLength:I
       5: if_icmple     42
       8: new           #69                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #75                 // String Encoded message exceeds maxMessageLength of %d, length=%d
      14: iconst_2
      15: anewarray     #71                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #16                 // Field maxMessageLength:I
      24: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: dup
      29: iconst_1
      30: iload_1
      31: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  org.agrona.ManagedResource managedResource();
    Code:
       0: new           #76                 // class io/aeron/Publication$PublicationManagedResource
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #77                 // Method io/aeron/Publication$PublicationManagedResource."<init>":(Lio/aeron/Publication;Lio/aeron/Publication$1;)V
       9: areturn

  static io.aeron.LogBuffers access$100(io.aeron.Publication);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logBuffers:Lio/aeron/LogBuffers;
       4: areturn
}
