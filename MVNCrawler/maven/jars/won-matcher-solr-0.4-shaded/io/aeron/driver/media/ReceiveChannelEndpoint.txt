Compiled from "ReceiveChannelEndpoint.java"
public class io.aeron.driver.media.ReceiveChannelEndpoint extends io.aeron.driver.media.UdpChannelTransport {
  private final io.aeron.driver.DataPacketDispatcher dispatcher;

  private final java.nio.ByteBuffer smBuffer;

  private final io.aeron.protocol.StatusMessageFlyweight statusMessageFlyweight;

  private final java.nio.ByteBuffer nakBuffer;

  private final io.aeron.protocol.NakFlyweight nakFlyweight;

  private final org.agrona.concurrent.status.AtomicCounter shortSends;

  private final org.agrona.concurrent.status.AtomicCounter possibleTtlAsymmetry;

  private final org.agrona.concurrent.status.AtomicCounter statusIndicator;

  private final org.agrona.collections.Int2ObjectHashMap<org.agrona.collections.MutableInteger> refCountByStreamIdMap;

  private volatile boolean isClosed;

  public io.aeron.driver.media.ReceiveChannelEndpoint(io.aeron.driver.media.UdpChannel, io.aeron.driver.DataPacketDispatcher, org.agrona.concurrent.status.AtomicCounter, io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #2                  // Method io/aeron/driver/media/UdpChannel.remoteData:()Ljava/net/InetSocketAddress;
       6: aload_1
       7: invokevirtual #2                  // Method io/aeron/driver/media/UdpChannel.remoteData:()Ljava/net/InetSocketAddress;
      10: aconst_null
      11: aload         4
      13: invokevirtual #3                  // Method io/aeron/driver/MediaDriver$Context.errorLog:()Lorg/agrona/concurrent/errors/DistinctErrorLog;
      16: aload         4
      18: invokevirtual #4                  // Method io/aeron/driver/MediaDriver$Context.systemCounters:()Lio/aeron/driver/status/SystemCounters;
      21: getstatic     #5                  // Field io/aeron/driver/status/SystemCounterDescriptor.INVALID_PACKETS:Lio/aeron/driver/status/SystemCounterDescriptor;
      24: invokevirtual #6                  // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
      27: invokespecial #7                  // Method io/aeron/driver/media/UdpChannelTransport."<init>":(Lio/aeron/driver/media/UdpChannel;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/agrona/concurrent/errors/DistinctErrorLog;Lorg/agrona/concurrent/status/AtomicCounter;)V
      30: aload_0
      31: new           #8                  // class org/agrona/collections/Int2ObjectHashMap
      34: dup
      35: invokespecial #9                  // Method org/agrona/collections/Int2ObjectHashMap."<init>":()V
      38: putfield      #10                 // Field refCountByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      41: aload_0
      42: iconst_0
      43: putfield      #11                 // Field isClosed:Z
      46: aload_0
      47: aload_2
      48: putfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
      51: aload_0
      52: aload_3
      53: putfield      #13                 // Field statusIndicator:Lorg/agrona/concurrent/status/AtomicCounter;
      56: aload_0
      57: aload         4
      59: invokevirtual #4                  // Method io/aeron/driver/MediaDriver$Context.systemCounters:()Lio/aeron/driver/status/SystemCounters;
      62: getstatic     #14                 // Field io/aeron/driver/status/SystemCounterDescriptor.SHORT_SENDS:Lio/aeron/driver/status/SystemCounterDescriptor;
      65: invokevirtual #6                  // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
      68: putfield      #15                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
      71: aload_0
      72: aload         4
      74: invokevirtual #4                  // Method io/aeron/driver/MediaDriver$Context.systemCounters:()Lio/aeron/driver/status/SystemCounters;
      77: getstatic     #16                 // Field io/aeron/driver/status/SystemCounterDescriptor.POSSIBLE_TTL_ASYMMETRY:Lio/aeron/driver/status/SystemCounterDescriptor;
      80: invokevirtual #6                  // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
      83: putfield      #17                 // Field possibleTtlAsymmetry:Lorg/agrona/concurrent/status/AtomicCounter;
      86: aload         4
      88: invokevirtual #18                 // Method io/aeron/driver/MediaDriver$Context.receiveChannelEndpointThreadLocals:()Lio/aeron/driver/media/ReceiveChannelEndpointThreadLocals;
      91: astore        5
      93: aload_0
      94: aload         5
      96: invokevirtual #19                 // Method io/aeron/driver/media/ReceiveChannelEndpointThreadLocals.smBuffer:()Ljava/nio/ByteBuffer;
      99: putfield      #20                 // Field smBuffer:Ljava/nio/ByteBuffer;
     102: aload_0
     103: aload         5
     105: invokevirtual #21                 // Method io/aeron/driver/media/ReceiveChannelEndpointThreadLocals.statusMessageFlyweight:()Lio/aeron/protocol/StatusMessageFlyweight;
     108: putfield      #22                 // Field statusMessageFlyweight:Lio/aeron/protocol/StatusMessageFlyweight;
     111: aload_0
     112: aload         5
     114: invokevirtual #23                 // Method io/aeron/driver/media/ReceiveChannelEndpointThreadLocals.nakBuffer:()Ljava/nio/ByteBuffer;
     117: putfield      #24                 // Field nakBuffer:Ljava/nio/ByteBuffer;
     120: aload_0
     121: aload         5
     123: invokevirtual #25                 // Method io/aeron/driver/media/ReceiveChannelEndpointThreadLocals.nakFlyweight:()Lio/aeron/protocol/NakFlyweight;
     126: putfield      #26                 // Field nakFlyweight:Lio/aeron/protocol/NakFlyweight;
     129: return

  public int sendTo(java.nio.ByteBuffer, java.net.InetSocketAddress);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #27                 // Field sendDatagramChannel:Ljava/nio/channels/DatagramChannel;
       6: aload_1
       7: aload_2
       8: invokevirtual #28                 // Method java/nio/channels/DatagramChannel.send:(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
      11: istore_3
      12: goto          22
      15: astore        4
      17: aload         4
      19: invokestatic  #30                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
      22: iload_3
      23: ireturn
    Exception table:
       from    to  target type
           2    12    15   Class java/io/IOException

  public java.lang.String originalUriString();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method udpChannel:()Lio/aeron/driver/media/UdpChannel;
       4: invokevirtual #32                 // Method io/aeron/driver/media/UdpChannel.originalUriString:()Ljava/lang/String;
       7: areturn

  public org.agrona.concurrent.status.AtomicCounter statusIndicator();
    Code:
       0: aload_0
       1: getfield      #13                 // Field statusIndicator:Lorg/agrona/concurrent/status/AtomicCounter;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method io/aeron/driver/media/UdpChannelTransport.close:()V
       4: aload_0
       5: iconst_1
       6: putfield      #11                 // Field isClosed:Z
       9: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field isClosed:Z
       4: ireturn

  public void openChannel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field statusIndicator:Lorg/agrona/concurrent/status/AtomicCounter;
       5: invokevirtual #34                 // Method openDatagramChannel:(Lorg/agrona/concurrent/status/AtomicCounter;)V
       8: return

  public void possibleTtlAsymmetryEncountered();
    Code:
       0: aload_0
       1: getfield      #17                 // Field possibleTtlAsymmetry:Lorg/agrona/concurrent/status/AtomicCounter;
       4: invokevirtual #35                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
       7: pop2
       8: return

  public int incRefToStream(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field refCountByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       4: iload_1
       5: invokevirtual #36                 // Method org/agrona/collections/Int2ObjectHashMap.get:(I)Ljava/lang/Object;
       8: checkcast     #37                 // class org/agrona/collections/MutableInteger
      11: astore_2
      12: aconst_null
      13: aload_2
      14: if_acmpne     35
      17: new           #37                 // class org/agrona/collections/MutableInteger
      20: dup
      21: invokespecial #38                 // Method org/agrona/collections/MutableInteger."<init>":()V
      24: astore_2
      25: aload_0
      26: getfield      #10                 // Field refCountByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      29: iload_1
      30: aload_2
      31: invokevirtual #39                 // Method org/agrona/collections/Int2ObjectHashMap.put:(ILjava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: dup
      37: getfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      40: iconst_1
      41: iadd
      42: putfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      45: aload_2
      46: getfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      49: ireturn

  public int decRefToStream(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field refCountByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       4: iload_1
       5: invokevirtual #36                 // Method org/agrona/collections/Int2ObjectHashMap.get:(I)Ljava/lang/Object;
       8: checkcast     #37                 // class org/agrona/collections/MutableInteger
      11: astore_2
      12: aconst_null
      13: aload_2
      14: if_acmpne     44
      17: new           #41                 // class java/lang/IllegalStateException
      20: dup
      21: new           #42                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #44                 // String Could not find stream Id to decrement:
      30: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_1
      34: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_2
      45: dup
      46: getfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      49: iconst_1
      50: isub
      51: putfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      54: iconst_0
      55: aload_2
      56: getfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      59: if_icmpne     71
      62: aload_0
      63: getfield      #10                 // Field refCountByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      66: iload_1
      67: invokevirtual #49                 // Method org/agrona/collections/Int2ObjectHashMap.remove:(I)Ljava/lang/Object;
      70: pop
      71: aload_2
      72: getfield      #40                 // Field org/agrona/collections/MutableInteger.value:I
      75: ireturn

  public int streamCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field refCountByStreamIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       4: invokevirtual #50                 // Method org/agrona/collections/Int2ObjectHashMap.size:()I
       7: ireturn

  public int onDataPacket(io.aeron.protocol.DataHeaderFlyweight, org.agrona.concurrent.UnsafeBuffer, int, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: aload_0
       5: aload_1
       6: aload_2
       7: iload_3
       8: aload         4
      10: invokevirtual #51                 // Method io/aeron/driver/DataPacketDispatcher.onDataPacket:(Lio/aeron/driver/media/ReceiveChannelEndpoint;Lio/aeron/protocol/DataHeaderFlyweight;Lorg/agrona/concurrent/UnsafeBuffer;ILjava/net/InetSocketAddress;)I
      13: ireturn

  public void onSetupMessage(io.aeron.protocol.SetupFlyweight, org.agrona.concurrent.UnsafeBuffer, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #52                 // Method io/aeron/driver/DataPacketDispatcher.onSetupMessage:(Lio/aeron/driver/media/ReceiveChannelEndpoint;Lio/aeron/protocol/SetupFlyweight;Lorg/agrona/concurrent/UnsafeBuffer;Ljava/net/InetSocketAddress;)V
      11: return

  public void sendSetupElicitingStatusMessage(java.net.InetSocketAddress, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: iconst_0
       6: iconst_0
       7: sipush        128
      10: invokevirtual #53                 // Method sendStatusMessage:(Ljava/net/InetSocketAddress;IIIIIS)V
      13: return

  public void validateWindowMaxLength(int);
    Code:
       0: aload_0
       1: getstatic     #54                 // Field java/net/StandardSocketOptions.SO_RCVBUF:Ljava/net/SocketOption;
       4: invokevirtual #55                 // Method getOption:(Ljava/net/SocketOption;)Ljava/lang/Object;
       7: checkcast     #56                 // class java/lang/Integer
      10: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
      13: istore_2
      14: iload_1
      15: iload_2
      16: if_icmple     55
      19: new           #58                 // class io/aeron/driver/exceptions/ConfigurationException
      22: dup
      23: ldc           #59                 // String Max Window length greater than socket SO_RCVBUF, increase %s to match window: windowMaxLength=%d, SO_RCVBUF=%d
      25: iconst_3
      26: anewarray     #60                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: ldc           #62                 // String aeron.rcv.initial.window.length
      33: aastore
      34: dup
      35: iconst_1
      36: iload_1
      37: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: dup
      42: iconst_2
      43: iload_2
      44: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: invokestatic  #64                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: invokespecial #65                 // Method io/aeron/driver/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return

  public void validateSenderMtuLength(int);
    Code:
       0: aload_0
       1: getstatic     #54                 // Field java/net/StandardSocketOptions.SO_RCVBUF:Ljava/net/SocketOption;
       4: invokevirtual #55                 // Method getOption:(Ljava/net/SocketOption;)Ljava/lang/Object;
       7: checkcast     #56                 // class java/lang/Integer
      10: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
      13: istore_2
      14: iload_1
      15: invokestatic  #66                 // Method io/aeron/driver/Configuration.validateMtuLength:(I)V
      18: iload_1
      19: iload_2
      20: if_icmple     59
      23: new           #58                 // class io/aeron/driver/exceptions/ConfigurationException
      26: dup
      27: ldc           #67                 // String Sender MTU greater than socket SO_RCVBUF, increase %s to match MTU: senderMtuLength=%d, SO_RCVBUF=%d
      29: iconst_3
      30: anewarray     #60                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: ldc           #68                 // String aeron.socket.so_rcvbuf
      37: aastore
      38: dup
      39: iconst_1
      40: iload_1
      41: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: aastore
      45: dup
      46: iconst_2
      47: iload_2
      48: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: invokestatic  #64                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      55: invokespecial #65                 // Method io/aeron/driver/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: return

  public void sendStatusMessage(java.net.InetSocketAddress, int, int, int, int, int, short);
    Code:
       0: aload_0
       1: getfield      #11                 // Field isClosed:Z
       4: ifne          74
       7: aload_0
       8: getfield      #20                 // Field smBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      14: pop
      15: aload_0
      16: getfield      #22                 // Field statusMessageFlyweight:Lio/aeron/protocol/StatusMessageFlyweight;
      19: iload_2
      20: invokevirtual #70                 // Method io/aeron/protocol/StatusMessageFlyweight.sessionId:(I)Lio/aeron/protocol/StatusMessageFlyweight;
      23: iload_3
      24: invokevirtual #71                 // Method io/aeron/protocol/StatusMessageFlyweight.streamId:(I)Lio/aeron/protocol/StatusMessageFlyweight;
      27: iload         4
      29: invokevirtual #72                 // Method io/aeron/protocol/StatusMessageFlyweight.consumptionTermId:(I)Lio/aeron/protocol/StatusMessageFlyweight;
      32: iload         5
      34: invokevirtual #73                 // Method io/aeron/protocol/StatusMessageFlyweight.consumptionTermOffset:(I)Lio/aeron/protocol/StatusMessageFlyweight;
      37: iload         6
      39: invokevirtual #74                 // Method io/aeron/protocol/StatusMessageFlyweight.receiverWindowLength:(I)Lio/aeron/protocol/StatusMessageFlyweight;
      42: iload         7
      44: invokevirtual #75                 // Method io/aeron/protocol/StatusMessageFlyweight.flags:(S)Lio/aeron/protocol/HeaderFlyweight;
      47: pop
      48: aload_0
      49: aload_0
      50: getfield      #20                 // Field smBuffer:Ljava/nio/ByteBuffer;
      53: aload_1
      54: invokevirtual #76                 // Method sendTo:(Ljava/nio/ByteBuffer;Ljava/net/InetSocketAddress;)I
      57: istore        8
      59: bipush        28
      61: iload         8
      63: if_icmpeq     74
      66: aload_0
      67: getfield      #15                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
      70: invokevirtual #77                 // Method org/agrona/concurrent/status/AtomicCounter.increment:()J
      73: pop2
      74: return

  public void sendNakMessage(java.net.InetSocketAddress, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field isClosed:Z
       4: ifne          69
       7: aload_0
       8: getfield      #24                 // Field nakBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      14: pop
      15: aload_0
      16: getfield      #26                 // Field nakFlyweight:Lio/aeron/protocol/NakFlyweight;
      19: iload_3
      20: invokevirtual #78                 // Method io/aeron/protocol/NakFlyweight.streamId:(I)Lio/aeron/protocol/NakFlyweight;
      23: iload_2
      24: invokevirtual #79                 // Method io/aeron/protocol/NakFlyweight.sessionId:(I)Lio/aeron/protocol/NakFlyweight;
      27: iload         4
      29: invokevirtual #80                 // Method io/aeron/protocol/NakFlyweight.termId:(I)Lio/aeron/protocol/NakFlyweight;
      32: iload         5
      34: invokevirtual #81                 // Method io/aeron/protocol/NakFlyweight.termOffset:(I)Lio/aeron/protocol/NakFlyweight;
      37: iload         6
      39: invokevirtual #82                 // Method io/aeron/protocol/NakFlyweight.length:(I)Lio/aeron/protocol/NakFlyweight;
      42: pop
      43: aload_0
      44: aload_0
      45: getfield      #24                 // Field nakBuffer:Ljava/nio/ByteBuffer;
      48: aload_1
      49: invokevirtual #76                 // Method sendTo:(Ljava/nio/ByteBuffer;Ljava/net/InetSocketAddress;)I
      52: istore        7
      54: bipush        28
      56: iload         7
      58: if_icmpeq     69
      61: aload_0
      62: getfield      #15                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
      65: invokevirtual #77                 // Method org/agrona/concurrent/status/AtomicCounter.increment:()J
      68: pop2
      69: return

  public void removePendingSetup(int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: iload_1
       5: iload_2
       6: invokevirtual #84                 // Method io/aeron/driver/DataPacketDispatcher.removePendingSetup:(II)V
       9: return

  public void removePublicationImage(io.aeron.driver.PublicationImage);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: aload_1
       5: invokevirtual #85                 // Method io/aeron/driver/DataPacketDispatcher.removePublicationImage:(Lio/aeron/driver/PublicationImage;)V
       8: return

  public void addSubscription(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: iload_1
       5: invokevirtual #86                 // Method io/aeron/driver/DataPacketDispatcher.addSubscription:(I)V
       8: return

  public void removeSubscription(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: iload_1
       5: invokevirtual #87                 // Method io/aeron/driver/DataPacketDispatcher.removeSubscription:(I)V
       8: return

  public void addPublicationImage(io.aeron.driver.PublicationImage);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: aload_1
       5: invokevirtual #88                 // Method io/aeron/driver/DataPacketDispatcher.addPublicationImage:(Lio/aeron/driver/PublicationImage;)V
       8: return

  public void removeCoolDown(int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatcher:Lio/aeron/driver/DataPacketDispatcher;
       4: iload_1
       5: iload_2
       6: invokevirtual #89                 // Method io/aeron/driver/DataPacketDispatcher.removeCoolDown:(II)V
       9: return
}
