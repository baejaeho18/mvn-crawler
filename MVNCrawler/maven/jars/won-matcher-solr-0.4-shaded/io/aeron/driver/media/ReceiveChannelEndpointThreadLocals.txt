Compiled from "ReceiveChannelEndpointThreadLocals.java"
public class io.aeron.driver.media.ReceiveChannelEndpointThreadLocals {
  private final java.nio.ByteBuffer smBuffer;

  private final io.aeron.protocol.StatusMessageFlyweight statusMessageFlyweight;

  private final java.nio.ByteBuffer nakBuffer;

  private final io.aeron.protocol.NakFlyweight nakFlyweight;

  public io.aeron.driver.media.ReceiveChannelEndpointThreadLocals();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: bipush        64
       6: bipush        64
       8: invokestatic  #3                  // Method io/aeron/driver/media/NetworkUtil.allocateDirectAlignedAndPadded:(II)Ljava/nio/ByteBuffer;
      11: astore_1
      12: aload_1
      13: bipush        28
      15: invokevirtual #5                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: aload_1
      21: invokevirtual #6                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      24: putfield      #7                  // Field smBuffer:Ljava/nio/ByteBuffer;
      27: aload_0
      28: new           #4                  // class io/aeron/protocol/StatusMessageFlyweight
      31: dup
      32: aload_0
      33: getfield      #7                  // Field smBuffer:Ljava/nio/ByteBuffer;
      36: invokespecial #8                  // Method io/aeron/protocol/StatusMessageFlyweight."<init>":(Ljava/nio/ByteBuffer;)V
      39: putfield      #9                  // Field statusMessageFlyweight:Lio/aeron/protocol/StatusMessageFlyweight;
      42: bipush        28
      44: bipush        32
      46: invokestatic  #10                 // Method org/agrona/BitUtil.align:(II)I
      49: istore_2
      50: aload_1
      51: iload_2
      52: bipush        28
      54: iadd
      55: invokevirtual #5                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      58: iload_2
      59: invokevirtual #12                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      62: pop
      63: aload_0
      64: aload_1
      65: invokevirtual #6                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      68: putfield      #13                 // Field nakBuffer:Ljava/nio/ByteBuffer;
      71: aload_0
      72: new           #11                 // class io/aeron/protocol/NakFlyweight
      75: dup
      76: aload_0
      77: getfield      #13                 // Field nakBuffer:Ljava/nio/ByteBuffer;
      80: invokespecial #14                 // Method io/aeron/protocol/NakFlyweight."<init>":(Ljava/nio/ByteBuffer;)V
      83: putfield      #15                 // Field nakFlyweight:Lio/aeron/protocol/NakFlyweight;
      86: aload_0
      87: getfield      #9                  // Field statusMessageFlyweight:Lio/aeron/protocol/StatusMessageFlyweight;
      90: iconst_0
      91: invokevirtual #17                 // Method io/aeron/protocol/StatusMessageFlyweight.version:(S)Lio/aeron/protocol/HeaderFlyweight;
      94: iconst_3
      95: invokevirtual #18                 // Method io/aeron/protocol/HeaderFlyweight.headerType:(I)Lio/aeron/protocol/HeaderFlyweight;
      98: bipush        28
     100: invokevirtual #19                 // Method io/aeron/protocol/HeaderFlyweight.frameLength:(I)Lio/aeron/protocol/HeaderFlyweight;
     103: pop
     104: aload_0
     105: getfield      #15                 // Field nakFlyweight:Lio/aeron/protocol/NakFlyweight;
     108: iconst_0
     109: invokevirtual #20                 // Method io/aeron/protocol/NakFlyweight.version:(S)Lio/aeron/protocol/HeaderFlyweight;
     112: iconst_2
     113: invokevirtual #18                 // Method io/aeron/protocol/HeaderFlyweight.headerType:(I)Lio/aeron/protocol/HeaderFlyweight;
     116: bipush        28
     118: invokevirtual #19                 // Method io/aeron/protocol/HeaderFlyweight.frameLength:(I)Lio/aeron/protocol/HeaderFlyweight;
     121: pop
     122: return

  public java.nio.ByteBuffer smBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field smBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public io.aeron.protocol.StatusMessageFlyweight statusMessageFlyweight();
    Code:
       0: aload_0
       1: getfield      #9                  // Field statusMessageFlyweight:Lio/aeron/protocol/StatusMessageFlyweight;
       4: areturn

  public java.nio.ByteBuffer nakBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field nakBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public io.aeron.protocol.NakFlyweight nakFlyweight();
    Code:
       0: aload_0
       1: getfield      #15                 // Field nakFlyweight:Lio/aeron/protocol/NakFlyweight;
       4: areturn
}
