Compiled from "SendChannelEndpoint.java"
public class io.aeron.driver.media.SendChannelEndpoint extends io.aeron.driver.media.UdpChannelTransport {
  private final org.agrona.collections.Int2ObjectHashMap<io.aeron.driver.NetworkPublication> driversPublicationByStreamId;

  private final org.agrona.collections.BiInt2ObjectMap<io.aeron.driver.NetworkPublication> sendersPublicationByStreamAndSessionId;

  private final org.agrona.concurrent.status.AtomicCounter statusMessagesReceived;

  private final org.agrona.concurrent.status.AtomicCounter nakMessagesReceived;

  private final org.agrona.concurrent.status.AtomicCounter statusIndicator;

  public io.aeron.driver.media.SendChannelEndpoint(io.aeron.driver.media.UdpChannel, org.agrona.concurrent.status.AtomicCounter, io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #2                  // Method io/aeron/driver/media/UdpChannel.remoteControl:()Ljava/net/InetSocketAddress;
       6: aload_1
       7: invokevirtual #3                  // Method io/aeron/driver/media/UdpChannel.localControl:()Ljava/net/InetSocketAddress;
      10: aload_1
      11: invokevirtual #4                  // Method io/aeron/driver/media/UdpChannel.remoteData:()Ljava/net/InetSocketAddress;
      14: aload_3
      15: invokevirtual #5                  // Method io/aeron/driver/MediaDriver$Context.errorLog:()Lorg/agrona/concurrent/errors/DistinctErrorLog;
      18: aload_3
      19: invokevirtual #6                  // Method io/aeron/driver/MediaDriver$Context.systemCounters:()Lio/aeron/driver/status/SystemCounters;
      22: getstatic     #7                  // Field io/aeron/driver/status/SystemCounterDescriptor.INVALID_PACKETS:Lio/aeron/driver/status/SystemCounterDescriptor;
      25: invokevirtual #8                  // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
      28: invokespecial #9                  // Method io/aeron/driver/media/UdpChannelTransport."<init>":(Lio/aeron/driver/media/UdpChannel;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/agrona/concurrent/errors/DistinctErrorLog;Lorg/agrona/concurrent/status/AtomicCounter;)V
      31: aload_0
      32: new           #10                 // class org/agrona/collections/Int2ObjectHashMap
      35: dup
      36: invokespecial #11                 // Method org/agrona/collections/Int2ObjectHashMap."<init>":()V
      39: putfield      #12                 // Field driversPublicationByStreamId:Lorg/agrona/collections/Int2ObjectHashMap;
      42: aload_0
      43: new           #13                 // class org/agrona/collections/BiInt2ObjectMap
      46: dup
      47: invokespecial #14                 // Method org/agrona/collections/BiInt2ObjectMap."<init>":()V
      50: putfield      #15                 // Field sendersPublicationByStreamAndSessionId:Lorg/agrona/collections/BiInt2ObjectMap;
      53: aload_0
      54: aload_3
      55: invokevirtual #6                  // Method io/aeron/driver/MediaDriver$Context.systemCounters:()Lio/aeron/driver/status/SystemCounters;
      58: getstatic     #16                 // Field io/aeron/driver/status/SystemCounterDescriptor.NAK_MESSAGES_RECEIVED:Lio/aeron/driver/status/SystemCounterDescriptor;
      61: invokevirtual #8                  // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
      64: putfield      #17                 // Field nakMessagesReceived:Lorg/agrona/concurrent/status/AtomicCounter;
      67: aload_0
      68: aload_3
      69: invokevirtual #6                  // Method io/aeron/driver/MediaDriver$Context.systemCounters:()Lio/aeron/driver/status/SystemCounters;
      72: getstatic     #18                 // Field io/aeron/driver/status/SystemCounterDescriptor.STATUS_MESSAGES_RECEIVED:Lio/aeron/driver/status/SystemCounterDescriptor;
      75: invokevirtual #8                  // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
      78: putfield      #19                 // Field statusMessagesReceived:Lorg/agrona/concurrent/status/AtomicCounter;
      81: aload_0
      82: aload_2
      83: putfield      #20                 // Field statusIndicator:Lorg/agrona/concurrent/status/AtomicCounter;
      86: return

  public void openChannel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field statusIndicator:Lorg/agrona/concurrent/status/AtomicCounter;
       5: invokevirtual #21                 // Method openDatagramChannel:(Lorg/agrona/concurrent/status/AtomicCounter;)V
       8: return

  public java.lang.String originalUriString();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method udpChannel:()Lio/aeron/driver/media/UdpChannel;
       4: invokevirtual #23                 // Method io/aeron/driver/media/UdpChannel.originalUriString:()Ljava/lang/String;
       7: areturn

  public org.agrona.concurrent.status.AtomicCounter statusIndicator();
    Code:
       0: aload_0
       1: getfield      #20                 // Field statusIndicator:Lorg/agrona/concurrent/status/AtomicCounter;
       4: areturn

  public io.aeron.driver.NetworkPublication getPublication(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field driversPublicationByStreamId:Lorg/agrona/collections/Int2ObjectHashMap;
       4: iload_1
       5: invokevirtual #24                 // Method org/agrona/collections/Int2ObjectHashMap.get:(I)Ljava/lang/Object;
       8: checkcast     #25                 // class io/aeron/driver/NetworkPublication
      11: areturn

  public void addPublication(io.aeron.driver.NetworkPublication);
    Code:
       0: aload_0
       1: getfield      #12                 // Field driversPublicationByStreamId:Lorg/agrona/collections/Int2ObjectHashMap;
       4: aload_1
       5: invokevirtual #26                 // Method io/aeron/driver/NetworkPublication.streamId:()I
       8: aload_1
       9: invokevirtual #27                 // Method org/agrona/collections/Int2ObjectHashMap.put:(ILjava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public io.aeron.driver.NetworkPublication removePublication(io.aeron.driver.NetworkPublication);
    Code:
       0: aload_0
       1: getfield      #12                 // Field driversPublicationByStreamId:Lorg/agrona/collections/Int2ObjectHashMap;
       4: aload_1
       5: invokevirtual #26                 // Method io/aeron/driver/NetworkPublication.streamId:()I
       8: invokevirtual #28                 // Method org/agrona/collections/Int2ObjectHashMap.remove:(I)Ljava/lang/Object;
      11: checkcast     #25                 // class io/aeron/driver/NetworkPublication
      14: areturn

  public int sessionCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field driversPublicationByStreamId:Lorg/agrona/collections/Int2ObjectHashMap;
       4: invokevirtual #29                 // Method org/agrona/collections/Int2ObjectHashMap.size:()I
       7: ireturn

  public void registerForSend(io.aeron.driver.NetworkPublication);
    Code:
       0: aload_0
       1: getfield      #15                 // Field sendersPublicationByStreamAndSessionId:Lorg/agrona/collections/BiInt2ObjectMap;
       4: aload_1
       5: invokevirtual #30                 // Method io/aeron/driver/NetworkPublication.sessionId:()I
       8: aload_1
       9: invokevirtual #26                 // Method io/aeron/driver/NetworkPublication.streamId:()I
      12: aload_1
      13: invokevirtual #31                 // Method org/agrona/collections/BiInt2ObjectMap.put:(IILjava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void unregisterForSend(io.aeron.driver.NetworkPublication);
    Code:
       0: aload_0
       1: getfield      #15                 // Field sendersPublicationByStreamAndSessionId:Lorg/agrona/collections/BiInt2ObjectMap;
       4: aload_1
       5: invokevirtual #30                 // Method io/aeron/driver/NetworkPublication.sessionId:()I
       8: aload_1
       9: invokevirtual #26                 // Method io/aeron/driver/NetworkPublication.streamId:()I
      12: invokevirtual #32                 // Method org/agrona/collections/BiInt2ObjectMap.remove:(II)Ljava/lang/Object;
      15: pop
      16: return

  public int send(java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: aload_0
       5: getfield      #33                 // Field connectAddress:Ljava/net/InetSocketAddress;
       8: invokevirtual #34                 // Method presend:(Ljava/nio/ByteBuffer;Ljava/net/InetSocketAddress;)V
      11: aload_0
      12: getfield      #35                 // Field sendDatagramChannel:Ljava/nio/channels/DatagramChannel;
      15: aload_1
      16: invokevirtual #36                 // Method java/nio/channels/DatagramChannel.write:(Ljava/nio/ByteBuffer;)I
      19: istore_2
      20: goto          32
      23: astore_3
      24: goto          32
      27: astore_3
      28: aload_3
      29: invokestatic  #40                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
      32: iload_2
      33: ireturn
    Exception table:
       from    to  target type
           2    20    23   Class java/net/PortUnreachableException
           2    20    23   Class java/nio/channels/ClosedChannelException
           2    20    27   Class java/io/IOException

  protected void presend(java.nio.ByteBuffer, java.net.InetSocketAddress);
    Code:
       0: return

  public void onStatusMessage(io.aeron.protocol.StatusMessageFlyweight, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: getfield      #15                 // Field sendersPublicationByStreamAndSessionId:Lorg/agrona/collections/BiInt2ObjectMap;
       4: aload_1
       5: invokevirtual #41                 // Method io/aeron/protocol/StatusMessageFlyweight.sessionId:()I
       8: aload_1
       9: invokevirtual #42                 // Method io/aeron/protocol/StatusMessageFlyweight.streamId:()I
      12: invokevirtual #43                 // Method org/agrona/collections/BiInt2ObjectMap.get:(II)Ljava/lang/Object;
      15: checkcast     #25                 // class io/aeron/driver/NetworkPublication
      18: astore_3
      19: aconst_null
      20: aload_3
      21: if_acmpeq     70
      24: sipush        128
      27: aload_1
      28: invokevirtual #44                 // Method io/aeron/protocol/StatusMessageFlyweight.flags:()S
      31: sipush        128
      34: iand
      35: if_icmpne     45
      38: aload_3
      39: invokevirtual #45                 // Method io/aeron/driver/NetworkPublication.triggerSendSetupFrame:()V
      42: goto          62
      45: aload_3
      46: aload_1
      47: invokevirtual #46                 // Method io/aeron/protocol/StatusMessageFlyweight.consumptionTermId:()I
      50: aload_1
      51: invokevirtual #47                 // Method io/aeron/protocol/StatusMessageFlyweight.consumptionTermOffset:()I
      54: aload_1
      55: invokevirtual #48                 // Method io/aeron/protocol/StatusMessageFlyweight.receiverWindowLength:()I
      58: aload_2
      59: invokevirtual #49                 // Method io/aeron/driver/NetworkPublication.onStatusMessage:(IIILjava/net/InetSocketAddress;)V
      62: aload_0
      63: getfield      #19                 // Field statusMessagesReceived:Lorg/agrona/concurrent/status/AtomicCounter;
      66: invokevirtual #50                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
      69: pop2
      70: return

  public void onNakMessage(io.aeron.protocol.NakFlyweight, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: getfield      #15                 // Field sendersPublicationByStreamAndSessionId:Lorg/agrona/collections/BiInt2ObjectMap;
       4: aload_1
       5: invokevirtual #51                 // Method io/aeron/protocol/NakFlyweight.sessionId:()I
       8: aload_1
       9: invokevirtual #52                 // Method io/aeron/protocol/NakFlyweight.streamId:()I
      12: invokevirtual #43                 // Method org/agrona/collections/BiInt2ObjectMap.get:(II)Ljava/lang/Object;
      15: checkcast     #25                 // class io/aeron/driver/NetworkPublication
      18: astore_3
      19: aconst_null
      20: aload_3
      21: if_acmpeq     48
      24: aload_3
      25: aload_1
      26: invokevirtual #53                 // Method io/aeron/protocol/NakFlyweight.termId:()I
      29: aload_1
      30: invokevirtual #54                 // Method io/aeron/protocol/NakFlyweight.termOffset:()I
      33: aload_1
      34: invokevirtual #55                 // Method io/aeron/protocol/NakFlyweight.length:()I
      37: invokevirtual #56                 // Method io/aeron/driver/NetworkPublication.onNak:(III)V
      40: aload_0
      41: getfield      #17                 // Field nakMessagesReceived:Lorg/agrona/concurrent/status/AtomicCounter;
      44: invokevirtual #50                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
      47: pop2
      48: return
}
