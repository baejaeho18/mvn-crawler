Compiled from "MediaDriver.java"
public class io.aeron.driver.MediaDriver$Context extends io.aeron.CommonContext {
  private io.aeron.driver.buffer.RawLogFactory rawLogFactory;

  private io.aeron.driver.media.DataTransportPoller dataTransportPoller;

  private io.aeron.driver.media.ControlTransportPoller controlTransportPoller;

  private io.aeron.driver.FlowControlSupplier unicastFlowControlSupplier;

  private io.aeron.driver.FlowControlSupplier multicastFlowControlSupplier;

  private org.agrona.concurrent.EpochClock epochClock;

  private org.agrona.concurrent.NanoClock nanoClock;

  private org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.DriverConductorCmd> toConductorFromReceiverCommandQueue;

  private org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.DriverConductorCmd> toConductorFromSenderCommandQueue;

  private org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.ReceiverCmd> receiverCommandQueue;

  private org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.SenderCmd> senderCommandQueue;

  private io.aeron.driver.ReceiverProxy receiverProxy;

  private io.aeron.driver.SenderProxy senderProxy;

  private io.aeron.driver.DriverConductorProxy fromReceiverDriverConductorProxy;

  private io.aeron.driver.DriverConductorProxy fromSenderDriverConductorProxy;

  private org.agrona.concurrent.IdleStrategy conductorIdleStrategy;

  private org.agrona.concurrent.IdleStrategy senderIdleStrategy;

  private org.agrona.concurrent.IdleStrategy receiverIdleStrategy;

  private org.agrona.concurrent.IdleStrategy sharedNetworkIdleStrategy;

  private org.agrona.concurrent.IdleStrategy sharedIdleStrategy;

  private io.aeron.driver.ClientProxy clientProxy;

  private org.agrona.concurrent.ringbuffer.RingBuffer toDriverCommands;

  private org.agrona.concurrent.errors.DistinctErrorLog errorLog;

  private org.agrona.ErrorHandler errorHandler;

  private java.nio.MappedByteBuffer cncByteBuffer;

  private org.agrona.concurrent.UnsafeBuffer cncMetaDataBuffer;

  private org.agrona.concurrent.status.CountersManager countersManager;

  private io.aeron.driver.status.SystemCounters systemCounters;

  private long imageLivenessTimeoutNs;

  private long clientLivenessTimeoutNs;

  private long publicationUnblockTimeoutNs;

  private java.lang.Boolean termBufferSparseFile;

  private int publicationTermBufferLength;

  private int ipcPublicationTermBufferLength;

  private int maxTermBufferLength;

  private int initialWindowLength;

  private long statusMessageTimeout;

  private int mtuLength;

  private boolean warnIfDirectoriesExist;

  private boolean dirsDeleteOnStart;

  private io.aeron.driver.ThreadingMode threadingMode;

  private java.util.concurrent.ThreadFactory conductorThreadFactory;

  private java.util.concurrent.ThreadFactory senderThreadFactory;

  private java.util.concurrent.ThreadFactory receiverThreadFactory;

  private java.util.concurrent.ThreadFactory sharedThreadFactory;

  private java.util.concurrent.ThreadFactory sharedNetworkThreadFactory;

  private io.aeron.driver.SendChannelEndpointSupplier sendChannelEndpointSupplier;

  private io.aeron.driver.ReceiveChannelEndpointSupplier receiveChannelEndpointSupplier;

  private io.aeron.driver.media.ReceiveChannelEndpointThreadLocals receiveChannelEndpointThreadLocals;

  public io.aeron.driver.MediaDriver$Context();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method io/aeron/CommonContext."<init>":()V
       4: aload_0
       5: getstatic     #15                 // Field io/aeron/driver/Configuration.IMAGE_LIVENESS_TIMEOUT_NS:J
       8: putfield      #16                 // Field imageLivenessTimeoutNs:J
      11: aload_0
      12: getstatic     #17                 // Field io/aeron/driver/Configuration.CLIENT_LIVENESS_TIMEOUT_NS:J
      15: putfield      #18                 // Field clientLivenessTimeoutNs:J
      18: aload_0
      19: getstatic     #19                 // Field io/aeron/driver/Configuration.PUBLICATION_UNBLOCK_TIMEOUT_NS:J
      22: putfield      #20                 // Field publicationUnblockTimeoutNs:J
      25: aload_0
      26: new           #21                 // class io/aeron/driver/media/ReceiveChannelEndpointThreadLocals
      29: dup
      30: invokespecial #22                 // Method io/aeron/driver/media/ReceiveChannelEndpointThreadLocals."<init>":()V
      33: putfield      #23                 // Field receiveChannelEndpointThreadLocals:Lio/aeron/driver/media/ReceiveChannelEndpointThreadLocals;
      36: aload_0
      37: invokestatic  #24                 // Method io/aeron/driver/Configuration.termBufferLength:()I
      40: invokevirtual #25                 // Method publicationTermBufferLength:(I)Lio/aeron/driver/MediaDriver$Context;
      43: pop
      44: aload_0
      45: invokestatic  #26                 // Method io/aeron/driver/Configuration.maxTermBufferLength:()I
      48: invokevirtual #27                 // Method maxTermBufferLength:(I)Lio/aeron/driver/MediaDriver$Context;
      51: pop
      52: aload_0
      53: invokestatic  #28                 // Method io/aeron/driver/Configuration.initialWindowLength:()I
      56: invokevirtual #29                 // Method initialWindowLength:(I)Lio/aeron/driver/MediaDriver$Context;
      59: pop
      60: aload_0
      61: invokestatic  #30                 // Method io/aeron/driver/Configuration.statusMessageTimeout:()J
      64: invokevirtual #31                 // Method statusMessageTimeout:(J)Lio/aeron/driver/MediaDriver$Context;
      67: pop
      68: aload_0
      69: getstatic     #32                 // Field io/aeron/driver/Configuration.MTU_LENGTH:I
      72: invokevirtual #33                 // Method mtuLength:(I)Lio/aeron/CommonContext;
      75: pop
      76: aload_0
      77: iconst_1
      78: putfield      #34                 // Field warnIfDirectoriesExist:Z
      81: aload_0
      82: ldc           #35                 // String aeron.dir.delete.on.start
      84: invokestatic  #36                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      87: invokevirtual #37                 // Method dirsDeleteOnStart:(Z)Lio/aeron/driver/MediaDriver$Context;
      90: pop
      91: return

  public io.aeron.driver.MediaDriver$Context conclude();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method io/aeron/CommonContext.conclude:()Lio/aeron/CommonContext;
       4: pop
       5: aload_0
       6: invokespecial #39                 // Method concludeNullProperties:()V
       9: aload_0
      10: getfield      #40                 // Field maxTermBufferLength:I
      13: invokestatic  #41                 // Method io/aeron/driver/Configuration.validateTermBufferLength:(I)V
      16: aload_0
      17: getfield      #42                 // Field publicationTermBufferLength:I
      20: invokestatic  #41                 // Method io/aeron/driver/Configuration.validateTermBufferLength:(I)V
      23: aload_0
      24: getfield      #43                 // Field ipcPublicationTermBufferLength:I
      27: invokestatic  #41                 // Method io/aeron/driver/Configuration.validateTermBufferLength:(I)V
      30: aload_0
      31: getfield      #42                 // Field publicationTermBufferLength:I
      34: aload_0
      35: getfield      #40                 // Field maxTermBufferLength:I
      38: if_icmple     78
      41: new           #44                 // class io/aeron/driver/exceptions/ConfigurationException
      44: dup
      45: ldc           #45                 // String publication term buffer length %d greater than max length %d
      47: iconst_2
      48: anewarray     #46                 // class java/lang/Object
      51: dup
      52: iconst_0
      53: aload_0
      54: getfield      #42                 // Field publicationTermBufferLength:I
      57: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aastore
      61: dup
      62: iconst_1
      63: aload_0
      64: getfield      #40                 // Field maxTermBufferLength:I
      67: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: aastore
      71: invokestatic  #48                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: invokespecial #49                 // Method io/aeron/driver/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: getfield      #43                 // Field ipcPublicationTermBufferLength:I
      82: aload_0
      83: getfield      #40                 // Field maxTermBufferLength:I
      86: if_icmple     126
      89: new           #44                 // class io/aeron/driver/exceptions/ConfigurationException
      92: dup
      93: ldc           #50                 // String IPC publication term buffer length %d greater than max length %d
      95: iconst_2
      96: anewarray     #46                 // class java/lang/Object
      99: dup
     100: iconst_0
     101: aload_0
     102: getfield      #43                 // Field ipcPublicationTermBufferLength:I
     105: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: aastore
     109: dup
     110: iconst_1
     111: aload_0
     112: getfield      #40                 // Field maxTermBufferLength:I
     115: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: aastore
     119: invokestatic  #48                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     122: invokespecial #49                 // Method io/aeron/driver/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_0
     127: invokevirtual #51                 // Method initialWindowLength:()I
     130: aload_0
     131: invokevirtual #52                 // Method mtuLength:()I
     134: invokestatic  #53                 // Method io/aeron/driver/Configuration.validateInitialWindowLength:(II)V
     137: aload_0
     138: aload_0
     139: invokevirtual #54                 // Method cncFile:()Ljava/io/File;
     142: getstatic     #55                 // Field io/aeron/driver/Configuration.CONDUCTOR_BUFFER_LENGTH:I
     145: getstatic     #56                 // Field io/aeron/driver/Configuration.TO_CLIENTS_BUFFER_LENGTH:I
     148: iadd
     149: getstatic     #57                 // Field io/aeron/driver/Configuration.COUNTERS_METADATA_BUFFER_LENGTH:I
     152: iadd
     153: getstatic     #58                 // Field io/aeron/driver/Configuration.COUNTERS_VALUES_BUFFER_LENGTH:I
     156: iadd
     157: getstatic     #59                 // Field io/aeron/driver/Configuration.ERROR_BUFFER_LENGTH:I
     160: iadd
     161: invokestatic  #60                 // Method io/aeron/CncFileDescriptor.computeCncFileLength:(I)I
     164: i2l
     165: invokestatic  #61                 // Method org/agrona/IoUtil.mapNewFile:(Ljava/io/File;J)Ljava/nio/MappedByteBuffer;
     168: putfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     171: aload_0
     172: aload_0
     173: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     176: invokestatic  #63                 // Method io/aeron/CncFileDescriptor.createMetaDataBuffer:(Ljava/nio/ByteBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     179: putfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     182: aload_0
     183: getfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     186: getstatic     #55                 // Field io/aeron/driver/Configuration.CONDUCTOR_BUFFER_LENGTH:I
     189: getstatic     #56                 // Field io/aeron/driver/Configuration.TO_CLIENTS_BUFFER_LENGTH:I
     192: getstatic     #57                 // Field io/aeron/driver/Configuration.COUNTERS_METADATA_BUFFER_LENGTH:I
     195: getstatic     #58                 // Field io/aeron/driver/Configuration.COUNTERS_VALUES_BUFFER_LENGTH:I
     198: aload_0
     199: getfield      #18                 // Field clientLivenessTimeoutNs:J
     202: getstatic     #59                 // Field io/aeron/driver/Configuration.ERROR_BUFFER_LENGTH:I
     205: invokestatic  #65                 // Method io/aeron/CncFileDescriptor.fillMetaData:(Lorg/agrona/concurrent/UnsafeBuffer;IIIIJI)V
     208: new           #66                 // class org/agrona/concurrent/broadcast/BroadcastTransmitter
     211: dup
     212: aload_0
     213: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     216: aload_0
     217: getfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     220: invokestatic  #67                 // Method io/aeron/CncFileDescriptor.createToClientsBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     223: invokespecial #68                 // Method org/agrona/concurrent/broadcast/BroadcastTransmitter."<init>":(Lorg/agrona/concurrent/AtomicBuffer;)V
     226: astore_1
     227: aload_0
     228: new           #69                 // class io/aeron/driver/ClientProxy
     231: dup
     232: aload_1
     233: invokespecial #70                 // Method io/aeron/driver/ClientProxy."<init>":(Lorg/agrona/concurrent/broadcast/BroadcastTransmitter;)V
     236: invokevirtual #71                 // Method clientProxy:(Lio/aeron/driver/ClientProxy;)Lio/aeron/driver/MediaDriver$Context;
     239: pop
     240: aload_0
     241: new           #72                 // class org/agrona/concurrent/ringbuffer/ManyToOneRingBuffer
     244: dup
     245: aload_0
     246: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     249: aload_0
     250: getfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     253: invokestatic  #73                 // Method io/aeron/CncFileDescriptor.createToDriverBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     256: invokespecial #74                 // Method org/agrona/concurrent/ringbuffer/ManyToOneRingBuffer."<init>":(Lorg/agrona/concurrent/AtomicBuffer;)V
     259: invokevirtual #75                 // Method toDriverCommands:(Lorg/agrona/concurrent/ringbuffer/RingBuffer;)Lio/aeron/driver/MediaDriver$Context;
     262: pop
     263: aconst_null
     264: aload_0
     265: getfield      #76                 // Field errorLog:Lorg/agrona/concurrent/errors/DistinctErrorLog;
     268: if_acmpne     297
     271: aload_0
     272: new           #77                 // class org/agrona/concurrent/errors/DistinctErrorLog
     275: dup
     276: aload_0
     277: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
     280: aload_0
     281: getfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
     284: invokestatic  #78                 // Method io/aeron/CncFileDescriptor.createErrorLogBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
     287: aload_0
     288: getfield      #79                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
     291: invokespecial #80                 // Method org/agrona/concurrent/errors/DistinctErrorLog."<init>":(Lorg/agrona/concurrent/AtomicBuffer;Lorg/agrona/concurrent/EpochClock;)V
     294: putfield      #76                 // Field errorLog:Lorg/agrona/concurrent/errors/DistinctErrorLog;
     297: aconst_null
     298: aload_0
     299: getfield      #81                 // Field errorHandler:Lorg/agrona/ErrorHandler;
     302: if_acmpne     315
     305: aload_0
     306: aload_0
     307: invokedynamic #82,  0             // InvokeDynamic #0:onError:(Lio/aeron/driver/MediaDriver$Context;)Lorg/agrona/ErrorHandler;
     312: putfield      #81                 // Field errorHandler:Lorg/agrona/ErrorHandler;
     315: aload_0
     316: invokespecial #83                 // Method concludeCounters:()V
     319: aload_0
     320: new           #84                 // class io/aeron/driver/ReceiverProxy
     323: dup
     324: aload_0
     325: getfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
     328: aload_0
     329: invokevirtual #85                 // Method receiverCommandQueue:()Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
     332: aload_0
     333: getfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
     336: getstatic     #87                 // Field io/aeron/driver/status/SystemCounterDescriptor.RECEIVER_PROXY_FAILS:Lio/aeron/driver/status/SystemCounterDescriptor;
     339: invokevirtual #88                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     342: invokespecial #89                 // Method io/aeron/driver/ReceiverProxy."<init>":(Lio/aeron/driver/ThreadingMode;Ljava/util/Queue;Lorg/agrona/concurrent/status/AtomicCounter;)V
     345: invokevirtual #90                 // Method receiverProxy:(Lio/aeron/driver/ReceiverProxy;)Lio/aeron/driver/MediaDriver$Context;
     348: pop
     349: aload_0
     350: new           #91                 // class io/aeron/driver/SenderProxy
     353: dup
     354: aload_0
     355: getfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
     358: aload_0
     359: invokevirtual #92                 // Method senderCommandQueue:()Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
     362: aload_0
     363: getfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
     366: getstatic     #93                 // Field io/aeron/driver/status/SystemCounterDescriptor.SENDER_PROXY_FAILS:Lio/aeron/driver/status/SystemCounterDescriptor;
     369: invokevirtual #88                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     372: invokespecial #94                 // Method io/aeron/driver/SenderProxy."<init>":(Lio/aeron/driver/ThreadingMode;Ljava/util/Queue;Lorg/agrona/concurrent/status/AtomicCounter;)V
     375: invokevirtual #95                 // Method senderProxy:(Lio/aeron/driver/SenderProxy;)Lio/aeron/driver/MediaDriver$Context;
     378: pop
     379: aload_0
     380: new           #96                 // class io/aeron/driver/DriverConductorProxy
     383: dup
     384: aload_0
     385: getfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
     388: aload_0
     389: getfield      #97                 // Field toConductorFromReceiverCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
     392: aload_0
     393: getfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
     396: getstatic     #98                 // Field io/aeron/driver/status/SystemCounterDescriptor.CONDUCTOR_PROXY_FAILS:Lio/aeron/driver/status/SystemCounterDescriptor;
     399: invokevirtual #88                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     402: invokespecial #99                 // Method io/aeron/driver/DriverConductorProxy."<init>":(Lio/aeron/driver/ThreadingMode;Ljava/util/Queue;Lorg/agrona/concurrent/status/AtomicCounter;)V
     405: invokevirtual #100                // Method fromReceiverDriverConductorProxy:(Lio/aeron/driver/DriverConductorProxy;)Lio/aeron/driver/MediaDriver$Context;
     408: pop
     409: aload_0
     410: new           #96                 // class io/aeron/driver/DriverConductorProxy
     413: dup
     414: aload_0
     415: getfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
     418: aload_0
     419: getfield      #101                // Field toConductorFromSenderCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
     422: aload_0
     423: getfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
     426: getstatic     #98                 // Field io/aeron/driver/status/SystemCounterDescriptor.CONDUCTOR_PROXY_FAILS:Lio/aeron/driver/status/SystemCounterDescriptor;
     429: invokevirtual #88                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     432: invokespecial #99                 // Method io/aeron/driver/DriverConductorProxy."<init>":(Lio/aeron/driver/ThreadingMode;Ljava/util/Queue;Lorg/agrona/concurrent/status/AtomicCounter;)V
     435: invokevirtual #102                // Method fromSenderDriverConductorProxy:(Lio/aeron/driver/DriverConductorProxy;)Lio/aeron/driver/MediaDriver$Context;
     438: pop
     439: aload_0
     440: new           #103                // class io/aeron/driver/buffer/RawLogFactory
     443: dup
     444: aload_0
     445: invokevirtual #104                // Method aeronDirectoryName:()Ljava/lang/String;
     448: aload_0
     449: getfield      #40                 // Field maxTermBufferLength:I
     452: aload_0
     453: getfield      #105                // Field termBufferSparseFile:Ljava/lang/Boolean;
     456: invokevirtual #106                // Method java/lang/Boolean.booleanValue:()Z
     459: aload_0
     460: getfield      #76                 // Field errorLog:Lorg/agrona/concurrent/errors/DistinctErrorLog;
     463: invokespecial #107                // Method io/aeron/driver/buffer/RawLogFactory."<init>":(Ljava/lang/String;IZLorg/agrona/concurrent/errors/DistinctErrorLog;)V
     466: invokevirtual #108                // Method rawLogBuffersFactory:(Lio/aeron/driver/buffer/RawLogFactory;)Lio/aeron/driver/MediaDriver$Context;
     469: pop
     470: aload_0
     471: invokespecial #109                // Method concludeIdleStrategies:()V
     474: goto          482
     477: astore_1
     478: aload_1
     479: invokestatic  #111                // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
     482: aload_0
     483: areturn
    Exception table:
       from    to  target type
           5   474   477   Class java/lang/Exception

  private void concludeNullProperties();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #79                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
       5: if_acmpne     19
       8: aload_0
       9: new           #112                // class org/agrona/concurrent/SystemEpochClock
      12: dup
      13: invokespecial #113                // Method org/agrona/concurrent/SystemEpochClock."<init>":()V
      16: putfield      #79                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
      19: aconst_null
      20: aload_0
      21: getfield      #114                // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
      24: if_acmpne     38
      27: aload_0
      28: new           #115                // class org/agrona/concurrent/SystemNanoClock
      31: dup
      32: invokespecial #116                // Method org/agrona/concurrent/SystemNanoClock."<init>":()V
      35: putfield      #114                // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
      38: aconst_null
      39: aload_0
      40: getfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
      43: if_acmpne     53
      46: aload_0
      47: getstatic     #117                // Field io/aeron/driver/Configuration.THREADING_MODE_DEFAULT:Lio/aeron/driver/ThreadingMode;
      50: putfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
      53: aconst_null
      54: aload_0
      55: getfield      #118                // Field unicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
      58: if_acmpne     68
      61: aload_0
      62: invokestatic  #119                // Method io/aeron/driver/Configuration.unicastFlowControlSupplier:()Lio/aeron/driver/FlowControlSupplier;
      65: putfield      #118                // Field unicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
      68: aconst_null
      69: aload_0
      70: getfield      #120                // Field multicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
      73: if_acmpne     83
      76: aload_0
      77: invokestatic  #121                // Method io/aeron/driver/Configuration.multicastFlowControlSupplier:()Lio/aeron/driver/FlowControlSupplier;
      80: putfield      #120                // Field multicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
      83: iconst_0
      84: aload_0
      85: getfield      #43                 // Field ipcPublicationTermBufferLength:I
      88: if_icmpne     102
      91: aload_0
      92: aload_0
      93: invokevirtual #122                // Method publicationTermBufferLength:()I
      96: invokestatic  #123                // Method io/aeron/driver/Configuration.ipcTermBufferLength:(I)I
      99: putfield      #43                 // Field ipcPublicationTermBufferLength:I
     102: aconst_null
     103: aload_0
     104: getfield      #124                // Field sendChannelEndpointSupplier:Lio/aeron/driver/SendChannelEndpointSupplier;
     107: if_acmpne     117
     110: aload_0
     111: invokestatic  #125                // Method io/aeron/driver/Configuration.sendChannelEndpointSupplier:()Lio/aeron/driver/SendChannelEndpointSupplier;
     114: putfield      #124                // Field sendChannelEndpointSupplier:Lio/aeron/driver/SendChannelEndpointSupplier;
     117: aconst_null
     118: aload_0
     119: getfield      #126                // Field receiveChannelEndpointSupplier:Lio/aeron/driver/ReceiveChannelEndpointSupplier;
     122: if_acmpne     132
     125: aload_0
     126: invokestatic  #127                // Method io/aeron/driver/Configuration.receiveChannelEndpointSupplier:()Lio/aeron/driver/ReceiveChannelEndpointSupplier;
     129: putfield      #126                // Field receiveChannelEndpointSupplier:Lio/aeron/driver/ReceiveChannelEndpointSupplier;
     132: aconst_null
     133: aload_0
     134: getfield      #128                // Field dataTransportPoller:Lio/aeron/driver/media/DataTransportPoller;
     137: if_acmpne     151
     140: aload_0
     141: new           #129                // class io/aeron/driver/media/DataTransportPoller
     144: dup
     145: invokespecial #130                // Method io/aeron/driver/media/DataTransportPoller."<init>":()V
     148: putfield      #128                // Field dataTransportPoller:Lio/aeron/driver/media/DataTransportPoller;
     151: aconst_null
     152: aload_0
     153: getfield      #131                // Field controlTransportPoller:Lio/aeron/driver/media/ControlTransportPoller;
     156: if_acmpne     170
     159: aload_0
     160: new           #132                // class io/aeron/driver/media/ControlTransportPoller
     163: dup
     164: invokespecial #133                // Method io/aeron/driver/media/ControlTransportPoller."<init>":()V
     167: putfield      #131                // Field controlTransportPoller:Lio/aeron/driver/media/ControlTransportPoller;
     170: aconst_null
     171: aload_0
     172: getfield      #105                // Field termBufferSparseFile:Ljava/lang/Boolean;
     175: if_acmpne     205
     178: aconst_null
     179: getstatic     #134                // Field io/aeron/driver/Configuration.TERM_BUFFER_SPARSE_FILE:Ljava/lang/String;
     182: if_acmpeq     198
     185: aload_0
     186: getstatic     #134                // Field io/aeron/driver/Configuration.TERM_BUFFER_SPARSE_FILE:Ljava/lang/String;
     189: invokestatic  #135                // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
     192: putfield      #105                // Field termBufferSparseFile:Ljava/lang/Boolean;
     195: goto          205
     198: aload_0
     199: getstatic     #136                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     202: putfield      #105                // Field termBufferSparseFile:Ljava/lang/Boolean;
     205: aconst_null
     206: aload_0
     207: getfield      #3                  // Field conductorThreadFactory:Ljava/util/concurrent/ThreadFactory;
     210: if_acmpne     222
     213: aload_0
     214: invokedynamic #137,  0            // InvokeDynamic #1:newThread:()Ljava/util/concurrent/ThreadFactory;
     219: putfield      #3                  // Field conductorThreadFactory:Ljava/util/concurrent/ThreadFactory;
     222: aconst_null
     223: aload_0
     224: getfield      #4                  // Field senderThreadFactory:Ljava/util/concurrent/ThreadFactory;
     227: if_acmpne     239
     230: aload_0
     231: invokedynamic #137,  0            // InvokeDynamic #1:newThread:()Ljava/util/concurrent/ThreadFactory;
     236: putfield      #4                  // Field senderThreadFactory:Ljava/util/concurrent/ThreadFactory;
     239: aconst_null
     240: aload_0
     241: getfield      #5                  // Field receiverThreadFactory:Ljava/util/concurrent/ThreadFactory;
     244: if_acmpne     256
     247: aload_0
     248: invokedynamic #137,  0            // InvokeDynamic #1:newThread:()Ljava/util/concurrent/ThreadFactory;
     253: putfield      #5                  // Field receiverThreadFactory:Ljava/util/concurrent/ThreadFactory;
     256: aconst_null
     257: aload_0
     258: getfield      #7                  // Field sharedThreadFactory:Ljava/util/concurrent/ThreadFactory;
     261: if_acmpne     273
     264: aload_0
     265: invokedynamic #137,  0            // InvokeDynamic #1:newThread:()Ljava/util/concurrent/ThreadFactory;
     270: putfield      #7                  // Field sharedThreadFactory:Ljava/util/concurrent/ThreadFactory;
     273: aconst_null
     274: aload_0
     275: getfield      #6                  // Field sharedNetworkThreadFactory:Ljava/util/concurrent/ThreadFactory;
     278: if_acmpne     290
     281: aload_0
     282: invokedynamic #137,  0            // InvokeDynamic #1:newThread:()Ljava/util/concurrent/ThreadFactory;
     287: putfield      #6                  // Field sharedNetworkThreadFactory:Ljava/util/concurrent/ThreadFactory;
     290: return

  public io.aeron.driver.MediaDriver$Context epochClock(org.agrona.concurrent.EpochClock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context nanoClock(org.agrona.concurrent.NanoClock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context toConductorFromReceiverCommandQueue(org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.DriverConductorCmd>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field toConductorFromReceiverCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context toConductorFromSenderCommandQueue(org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.DriverConductorCmd>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #101                // Field toConductorFromSenderCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context rawLogBuffersFactory(io.aeron.driver.buffer.RawLogFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #138                // Field rawLogFactory:Lio/aeron/driver/buffer/RawLogFactory;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context dataTransportPoller(io.aeron.driver.media.DataTransportPoller);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #128                // Field dataTransportPoller:Lio/aeron/driver/media/DataTransportPoller;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context controlTransportPoller(io.aeron.driver.media.ControlTransportPoller);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #131                // Field controlTransportPoller:Lio/aeron/driver/media/ControlTransportPoller;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context unicastFlowControlSupplier(io.aeron.driver.FlowControlSupplier);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field unicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context multicastFlowControlSupplier(io.aeron.driver.FlowControlSupplier);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #120                // Field multicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context receiverCommandQueue(org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.ReceiverCmd>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field receiverCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context senderCommandQueue(org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.SenderCmd>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #140                // Field senderCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context receiverProxy(io.aeron.driver.ReceiverProxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #141                // Field receiverProxy:Lio/aeron/driver/ReceiverProxy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context senderProxy(io.aeron.driver.SenderProxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field senderProxy:Lio/aeron/driver/SenderProxy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context fromReceiverDriverConductorProxy(io.aeron.driver.DriverConductorProxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field fromReceiverDriverConductorProxy:Lio/aeron/driver/DriverConductorProxy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context fromSenderDriverConductorProxy(io.aeron.driver.DriverConductorProxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #144                // Field fromSenderDriverConductorProxy:Lio/aeron/driver/DriverConductorProxy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context conductorIdleStrategy(org.agrona.concurrent.IdleStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field conductorIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context senderIdleStrategy(org.agrona.concurrent.IdleStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field senderIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context receiverIdleStrategy(org.agrona.concurrent.IdleStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field receiverIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context sharedNetworkIdleStrategy(org.agrona.concurrent.IdleStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field sharedNetworkIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context sharedIdleStrategy(org.agrona.concurrent.IdleStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field sharedIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context clientProxy(io.aeron.driver.ClientProxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field clientProxy:Lio/aeron/driver/ClientProxy;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context toDriverCommands(org.agrona.concurrent.ringbuffer.RingBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #146                // Field toDriverCommands:Lorg/agrona/concurrent/ringbuffer/RingBuffer;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context countersManager(org.agrona.concurrent.status.CountersManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #147                // Field countersManager:Lorg/agrona/concurrent/status/CountersManager;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context termBufferSparseFile(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field termBufferSparseFile:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context publicationTermBufferLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field publicationTermBufferLength:I
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context maxTermBufferLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field maxTermBufferLength:I
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context ipcTermBufferLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field ipcPublicationTermBufferLength:I
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context initialWindowLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #148                // Field initialWindowLength:I
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context statusMessageTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #149                // Field statusMessageTimeout:J
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context warnIfDirectoriesExist(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field warnIfDirectoriesExist:Z
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context errorLog(org.agrona.concurrent.errors.DistinctErrorLog);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field errorLog:Lorg/agrona/concurrent/errors/DistinctErrorLog;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context imageLivenessTimeoutNs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field imageLivenessTimeoutNs:J
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context clientLivenessTimeoutNs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #18                 // Field clientLivenessTimeoutNs:J
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context publicationUnblockTimeoutNs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #20                 // Field publicationUnblockTimeoutNs:J
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context systemCounters(io.aeron.driver.status.SystemCounters);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context threadingMode(io.aeron.driver.ThreadingMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context senderThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field senderThreadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context receiverThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field receiverThreadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context conductorThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field conductorThreadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context sharedThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field sharedThreadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context sharedNetworkThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sharedNetworkThreadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context dirsDeleteOnStart(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #150                // Field dirsDeleteOnStart:Z
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context aeronDirectoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #151                // Method io/aeron/CommonContext.aeronDirectoryName:(Ljava/lang/String;)Lio/aeron/CommonContext;
       5: pop
       6: aload_0
       7: areturn

  public io.aeron.driver.MediaDriver$Context sendChannelEndpointSupplier(io.aeron.driver.SendChannelEndpointSupplier);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #124                // Field sendChannelEndpointSupplier:Lio/aeron/driver/SendChannelEndpointSupplier;
       5: aload_0
       6: areturn

  public io.aeron.driver.MediaDriver$Context receiveChannelEndpointSupplier(io.aeron.driver.ReceiveChannelEndpointSupplier);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field receiveChannelEndpointSupplier:Lio/aeron/driver/ReceiveChannelEndpointSupplier;
       5: aload_0
       6: areturn

  public org.agrona.concurrent.EpochClock epochClock();
    Code:
       0: aload_0
       1: getfield      #79                 // Field epochClock:Lorg/agrona/concurrent/EpochClock;
       4: areturn

  public org.agrona.concurrent.NanoClock nanoClock();
    Code:
       0: aload_0
       1: getfield      #114                // Field nanoClock:Lorg/agrona/concurrent/NanoClock;
       4: areturn

  public org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.DriverConductorCmd> toConductorFromReceiverCommandQueue();
    Code:
       0: aload_0
       1: getfield      #97                 // Field toConductorFromReceiverCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       4: areturn

  public org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.DriverConductorCmd> toConductorFromSenderCommandQueue();
    Code:
       0: aload_0
       1: getfield      #101                // Field toConductorFromSenderCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       4: areturn

  public io.aeron.driver.buffer.RawLogFactory rawLogBuffersFactory();
    Code:
       0: aload_0
       1: getfield      #138                // Field rawLogFactory:Lio/aeron/driver/buffer/RawLogFactory;
       4: areturn

  public io.aeron.driver.media.DataTransportPoller dataTransportPoller();
    Code:
       0: aload_0
       1: getfield      #128                // Field dataTransportPoller:Lio/aeron/driver/media/DataTransportPoller;
       4: areturn

  public io.aeron.driver.media.ControlTransportPoller controlTransportPoller();
    Code:
       0: aload_0
       1: getfield      #131                // Field controlTransportPoller:Lio/aeron/driver/media/ControlTransportPoller;
       4: areturn

  public io.aeron.driver.FlowControlSupplier unicastFlowControlSupplier();
    Code:
       0: aload_0
       1: getfield      #118                // Field unicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
       4: areturn

  public io.aeron.driver.FlowControlSupplier multicastFlowControlSupplier();
    Code:
       0: aload_0
       1: getfield      #120                // Field multicastFlowControlSupplier:Lio/aeron/driver/FlowControlSupplier;
       4: areturn

  public org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.ReceiverCmd> receiverCommandQueue();
    Code:
       0: aload_0
       1: getfield      #139                // Field receiverCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       4: areturn

  public org.agrona.concurrent.OneToOneConcurrentArrayQueue<io.aeron.driver.cmd.SenderCmd> senderCommandQueue();
    Code:
       0: aload_0
       1: getfield      #140                // Field senderCommandQueue:Lorg/agrona/concurrent/OneToOneConcurrentArrayQueue;
       4: areturn

  public io.aeron.driver.ReceiverProxy receiverProxy();
    Code:
       0: aload_0
       1: getfield      #141                // Field receiverProxy:Lio/aeron/driver/ReceiverProxy;
       4: areturn

  public io.aeron.driver.SenderProxy senderProxy();
    Code:
       0: aload_0
       1: getfield      #142                // Field senderProxy:Lio/aeron/driver/SenderProxy;
       4: areturn

  public io.aeron.driver.DriverConductorProxy fromReceiverDriverConductorProxy();
    Code:
       0: aload_0
       1: getfield      #143                // Field fromReceiverDriverConductorProxy:Lio/aeron/driver/DriverConductorProxy;
       4: areturn

  public io.aeron.driver.DriverConductorProxy fromSenderDriverConductorProxy();
    Code:
       0: aload_0
       1: getfield      #144                // Field fromSenderDriverConductorProxy:Lio/aeron/driver/DriverConductorProxy;
       4: areturn

  public org.agrona.concurrent.IdleStrategy conductorIdleStrategy();
    Code:
       0: aload_0
       1: getfield      #10                 // Field conductorIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  public org.agrona.concurrent.IdleStrategy senderIdleStrategy();
    Code:
       0: aload_0
       1: getfield      #9                  // Field senderIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  public org.agrona.concurrent.IdleStrategy receiverIdleStrategy();
    Code:
       0: aload_0
       1: getfield      #8                  // Field receiverIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  public org.agrona.concurrent.IdleStrategy sharedNetworkIdleStrategy();
    Code:
       0: aload_0
       1: getfield      #11                 // Field sharedNetworkIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  public org.agrona.concurrent.IdleStrategy sharedIdleStrategy();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sharedIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  public java.util.concurrent.ThreadFactory senderThreadFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field senderThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public java.util.concurrent.ThreadFactory receiverThreadFactory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field receiverThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public java.util.concurrent.ThreadFactory conductorThreadFactory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field conductorThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public java.util.concurrent.ThreadFactory sharedThreadFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sharedThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public java.util.concurrent.ThreadFactory sharedNetworkThreadFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sharedNetworkThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public io.aeron.driver.ClientProxy clientProxy();
    Code:
       0: aload_0
       1: getfield      #145                // Field clientProxy:Lio/aeron/driver/ClientProxy;
       4: areturn

  public org.agrona.concurrent.ringbuffer.RingBuffer toDriverCommands();
    Code:
       0: aload_0
       1: getfield      #146                // Field toDriverCommands:Lorg/agrona/concurrent/ringbuffer/RingBuffer;
       4: areturn

  public org.agrona.concurrent.status.CountersManager countersManager();
    Code:
       0: aload_0
       1: getfield      #147                // Field countersManager:Lorg/agrona/concurrent/status/CountersManager;
       4: areturn

  public long imageLivenessTimeoutNs();
    Code:
       0: aload_0
       1: getfield      #16                 // Field imageLivenessTimeoutNs:J
       4: lreturn

  public long clientLivenessTimeoutNs();
    Code:
       0: aload_0
       1: getfield      #18                 // Field clientLivenessTimeoutNs:J
       4: lreturn

  public long publicationUnblockTimeoutNs();
    Code:
       0: aload_0
       1: getfield      #20                 // Field publicationUnblockTimeoutNs:J
       4: lreturn

  public int publicationTermBufferLength();
    Code:
       0: aload_0
       1: getfield      #42                 // Field publicationTermBufferLength:I
       4: ireturn

  public int maxTermBufferLength();
    Code:
       0: aload_0
       1: getfield      #40                 // Field maxTermBufferLength:I
       4: ireturn

  public int ipcTermBufferLength();
    Code:
       0: aload_0
       1: getfield      #43                 // Field ipcPublicationTermBufferLength:I
       4: ireturn

  public int initialWindowLength();
    Code:
       0: aload_0
       1: getfield      #148                // Field initialWindowLength:I
       4: ireturn

  public long statusMessageTimeout();
    Code:
       0: aload_0
       1: getfield      #149                // Field statusMessageTimeout:J
       4: lreturn

  public boolean warnIfDirectoriesExist();
    Code:
       0: aload_0
       1: getfield      #34                 // Field warnIfDirectoriesExist:Z
       4: ireturn

  public org.agrona.ErrorHandler errorHandler();
    Code:
       0: aload_0
       1: getfield      #81                 // Field errorHandler:Lorg/agrona/ErrorHandler;
       4: areturn

  public io.aeron.driver.MediaDriver$Context errorHandler(org.agrona.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field errorHandler:Lorg/agrona/ErrorHandler;
       5: aload_0
       6: areturn

  public org.agrona.concurrent.errors.DistinctErrorLog errorLog();
    Code:
       0: aload_0
       1: getfield      #76                 // Field errorLog:Lorg/agrona/concurrent/errors/DistinctErrorLog;
       4: areturn

  public int mtuLength();
    Code:
       0: aload_0
       1: getfield      #152                // Field mtuLength:I
       4: ireturn

  public io.aeron.CommonContext mtuLength(int);
    Code:
       0: iload_1
       1: invokestatic  #153                // Method io/aeron/driver/Configuration.validateMtuLength:(I)V
       4: aload_0
       5: iload_1
       6: putfield      #152                // Field mtuLength:I
       9: aload_0
      10: areturn

  public io.aeron.driver.status.SystemCounters systemCounters();
    Code:
       0: aload_0
       1: getfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
       4: areturn

  public boolean dirsDeleteOnStart();
    Code:
       0: aload_0
       1: getfield      #150                // Field dirsDeleteOnStart:Z
       4: ireturn

  public io.aeron.driver.SendChannelEndpointSupplier sendChannelEndpointSupplier();
    Code:
       0: aload_0
       1: getfield      #124                // Field sendChannelEndpointSupplier:Lio/aeron/driver/SendChannelEndpointSupplier;
       4: areturn

  public io.aeron.driver.ReceiveChannelEndpointSupplier receiveChannelEndpointSupplier();
    Code:
       0: aload_0
       1: getfield      #126                // Field receiveChannelEndpointSupplier:Lio/aeron/driver/ReceiveChannelEndpointSupplier;
       4: areturn

  public io.aeron.driver.media.ReceiveChannelEndpointThreadLocals receiveChannelEndpointThreadLocals();
    Code:
       0: aload_0
       1: getfield      #23                 // Field receiveChannelEndpointThreadLocals:Lio/aeron/driver/media/ReceiveChannelEndpointThreadLocals;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
       4: invokestatic  #154                // Method org/agrona/IoUtil.unmap:(Ljava/nio/MappedByteBuffer;)V
       7: aload_0
       8: invokespecial #155                // Method io/aeron/CommonContext.close:()V
      11: return

  private void concludeCounters();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method countersManager:()Lorg/agrona/concurrent/status/CountersManager;
       4: ifnonnull     73
       7: aload_0
       8: invokevirtual #157                // Method countersMetaDataBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
      11: ifnonnull     30
      14: aload_0
      15: aload_0
      16: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
      19: aload_0
      20: getfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      23: invokestatic  #158                // Method io/aeron/CncFileDescriptor.createCountersMetaDataBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
      26: invokevirtual #159                // Method countersMetaDataBuffer:(Lorg/agrona/concurrent/UnsafeBuffer;)Lio/aeron/CommonContext;
      29: pop
      30: aload_0
      31: invokevirtual #160                // Method countersValuesBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
      34: ifnonnull     53
      37: aload_0
      38: aload_0
      39: getfield      #62                 // Field cncByteBuffer:Ljava/nio/MappedByteBuffer;
      42: aload_0
      43: getfield      #64                 // Field cncMetaDataBuffer:Lorg/agrona/concurrent/UnsafeBuffer;
      46: invokestatic  #161                // Method io/aeron/CncFileDescriptor.createCountersValuesBuffer:(Ljava/nio/ByteBuffer;Lorg/agrona/DirectBuffer;)Lorg/agrona/concurrent/UnsafeBuffer;
      49: invokevirtual #162                // Method countersValuesBuffer:(Lorg/agrona/concurrent/UnsafeBuffer;)Lio/aeron/CommonContext;
      52: pop
      53: aload_0
      54: new           #163                // class org/agrona/concurrent/status/CountersManager
      57: dup
      58: aload_0
      59: invokevirtual #157                // Method countersMetaDataBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
      62: aload_0
      63: invokevirtual #160                // Method countersValuesBuffer:()Lorg/agrona/concurrent/UnsafeBuffer;
      66: invokespecial #164                // Method org/agrona/concurrent/status/CountersManager."<init>":(Lorg/agrona/concurrent/AtomicBuffer;Lorg/agrona/concurrent/AtomicBuffer;)V
      69: invokevirtual #165                // Method countersManager:(Lorg/agrona/concurrent/status/CountersManager;)Lio/aeron/driver/MediaDriver$Context;
      72: pop
      73: aconst_null
      74: aload_0
      75: getfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
      78: if_acmpne     96
      81: aload_0
      82: new           #166                // class io/aeron/driver/status/SystemCounters
      85: dup
      86: aload_0
      87: getfield      #147                // Field countersManager:Lorg/agrona/concurrent/status/CountersManager;
      90: invokespecial #167                // Method io/aeron/driver/status/SystemCounters."<init>":(Lorg/agrona/concurrent/status/CountersManager;)V
      93: putfield      #86                 // Field systemCounters:Lio/aeron/driver/status/SystemCounters;
      96: return

  private void concludeIdleStrategies();
    Code:
       0: new           #168                // class org/agrona/concurrent/status/UnsafeBufferStatusIndicator
       3: dup
       4: aload_0
       5: getfield      #147                // Field countersManager:Lorg/agrona/concurrent/status/CountersManager;
       8: invokevirtual #169                // Method org/agrona/concurrent/status/CountersManager.valuesBuffer:()Lorg/agrona/concurrent/AtomicBuffer;
      11: getstatic     #170                // Field io/aeron/driver/status/SystemCounterDescriptor.CONTROLLABLE_IDLE_STRATEGY:Lio/aeron/driver/status/SystemCounterDescriptor;
      14: invokevirtual #171                // Method io/aeron/driver/status/SystemCounterDescriptor.id:()I
      17: invokespecial #172                // Method org/agrona/concurrent/status/UnsafeBufferStatusIndicator."<init>":(Lorg/agrona/concurrent/AtomicBuffer;I)V
      20: astore_1
      21: aconst_null
      22: aload_0
      23: getfield      #10                 // Field conductorIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      26: if_acmpne     38
      29: aload_0
      30: aload_1
      31: invokestatic  #173                // Method io/aeron/driver/Configuration.conductorIdleStrategy:(Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
      34: invokevirtual #174                // Method conductorIdleStrategy:(Lorg/agrona/concurrent/IdleStrategy;)Lio/aeron/driver/MediaDriver$Context;
      37: pop
      38: aconst_null
      39: aload_0
      40: getfield      #9                  // Field senderIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      43: if_acmpne     55
      46: aload_0
      47: aload_1
      48: invokestatic  #175                // Method io/aeron/driver/Configuration.senderIdleStrategy:(Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
      51: invokevirtual #176                // Method senderIdleStrategy:(Lorg/agrona/concurrent/IdleStrategy;)Lio/aeron/driver/MediaDriver$Context;
      54: pop
      55: aconst_null
      56: aload_0
      57: getfield      #8                  // Field receiverIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      60: if_acmpne     72
      63: aload_0
      64: aload_1
      65: invokestatic  #177                // Method io/aeron/driver/Configuration.receiverIdleStrategy:(Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
      68: invokevirtual #178                // Method receiverIdleStrategy:(Lorg/agrona/concurrent/IdleStrategy;)Lio/aeron/driver/MediaDriver$Context;
      71: pop
      72: aconst_null
      73: aload_0
      74: getfield      #11                 // Field sharedNetworkIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      77: if_acmpne     89
      80: aload_0
      81: aload_1
      82: invokestatic  #179                // Method io/aeron/driver/Configuration.sharedNetworkIdleStrategy:(Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
      85: invokevirtual #180                // Method sharedNetworkIdleStrategy:(Lorg/agrona/concurrent/IdleStrategy;)Lio/aeron/driver/MediaDriver$Context;
      88: pop
      89: aconst_null
      90: aload_0
      91: getfield      #12                 // Field sharedIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
      94: if_acmpne     106
      97: aload_0
      98: aload_1
      99: invokestatic  #181                // Method io/aeron/driver/Configuration.sharedIdleStrategy:(Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
     102: invokevirtual #182                // Method sharedIdleStrategy:(Lorg/agrona/concurrent/IdleStrategy;)Lio/aeron/driver/MediaDriver$Context;
     105: pop
     106: return

  public io.aeron.CommonContext aeronDirectoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #183                // Method aeronDirectoryName:(Ljava/lang/String;)Lio/aeron/driver/MediaDriver$Context;
       5: areturn

  public io.aeron.CommonContext conclude();
    Code:
       0: aload_0
       1: invokevirtual #184                // Method conclude:()Lio/aeron/driver/MediaDriver$Context;
       4: areturn

  private void lambda$conclude$0(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #76                 // Field errorLog:Lorg/agrona/concurrent/errors/DistinctErrorLog;
       4: aload_1
       5: invokevirtual #185                // Method org/agrona/concurrent/errors/DistinctErrorLog.record:(Ljava/lang/Throwable;)Z
       8: ifne          26
      11: getstatic     #186                // Field java/lang/System.err:Ljava/io/PrintStream;
      14: ldc           #187                // String Error Log is full, consider increasing aeron.error.buffer.length
      16: invokevirtual #188                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      19: aload_1
      20: getstatic     #186                // Field java/lang/System.err:Ljava/io/PrintStream;
      23: invokevirtual #189                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      26: return

  static io.aeron.driver.ThreadingMode access$000(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #13                 // Field threadingMode:Lio/aeron/driver/ThreadingMode;
       4: areturn

  static org.agrona.concurrent.IdleStrategy access$100(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #12                 // Field sharedIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  static org.agrona.concurrent.IdleStrategy access$200(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #11                 // Field sharedNetworkIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  static org.agrona.concurrent.IdleStrategy access$300(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #10                 // Field conductorIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  static org.agrona.concurrent.IdleStrategy access$400(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #9                  // Field senderIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  static org.agrona.concurrent.IdleStrategy access$500(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #8                  // Field receiverIdleStrategy:Lorg/agrona/concurrent/IdleStrategy;
       4: areturn

  static java.util.concurrent.ThreadFactory access$600(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sharedThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  static java.util.concurrent.ThreadFactory access$700(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sharedNetworkThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  static java.util.concurrent.ThreadFactory access$800(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #5                  // Field receiverThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  static java.util.concurrent.ThreadFactory access$900(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #4                  // Field senderThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  static java.util.concurrent.ThreadFactory access$1000(io.aeron.driver.MediaDriver$Context);
    Code:
       0: aload_0
       1: getfield      #3                  // Field conductorThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn
}
