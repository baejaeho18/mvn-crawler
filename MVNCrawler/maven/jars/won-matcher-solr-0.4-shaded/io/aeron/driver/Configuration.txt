Compiled from "Configuration.java"
public class io.aeron.driver.Configuration {
  public static final java.lang.String TERM_BUFFER_SPARSE_FILE_PROP_NAME;

  public static final java.lang.String TERM_BUFFER_SPARSE_FILE;

  public static final java.lang.String TERM_BUFFER_MAX_LENGTH_PROP_NAME;

  public static final int TERM_BUFFER_LENGTH_MAX_DEFAULT;

  public static final java.lang.String TERM_BUFFER_LENGTH_PROP_NAME;

  public static final int TERM_BUFFER_LENGTH_DEFAULT;

  public static final java.lang.String IPC_TERM_BUFFER_LENGTH_PROP_NAME;

  public static final int TERM_BUFFER_IPC_LENGTH_DEFAULT;

  public static final int IPC_TERM_BUFFER_LENGTH;

  public static final java.lang.String CONDUCTOR_BUFFER_LENGTH_PROP_NAME;

  public static final int CONDUCTOR_BUFFER_LENGTH_DEFAULT;

  public static final int CONDUCTOR_BUFFER_LENGTH;

  public static final java.lang.String TO_CLIENTS_BUFFER_LENGTH_PROP_NAME;

  public static final int TO_CLIENTS_BUFFER_LENGTH_DEFAULT;

  public static final int TO_CLIENTS_BUFFER_LENGTH;

  public static final java.lang.String COUNTERS_VALUES_BUFFER_LENGTH_PROP_NAME;

  public static final int COUNTERS_VALUES_BUFFER_LENGTH_DEFAULT;

  public static final int COUNTERS_VALUES_BUFFER_LENGTH;

  public static final int COUNTERS_METADATA_BUFFER_LENGTH;

  public static final java.lang.String ERROR_BUFFER_LENGTH_PROP_NAME;

  public static final int ERROR_BUFFER_LENGTH_DEFAULT;

  public static final int ERROR_BUFFER_LENGTH;

  public static final java.lang.String INITIAL_WINDOW_LENGTH_PROP_NAME;

  public static final int INITIAL_WINDOW_LENGTH_DEFAULT;

  public static final java.lang.String STATUS_MESSAGE_TIMEOUT_PROP_NAME;

  public static final long STATUS_MESSAGE_TIMEOUT_DEFAULT_NS;

  public static final java.lang.String SOCKET_RCVBUF_LENGTH_PROP_NAME;

  public static final int SOCKET_RCVBUF_LENGTH_DEFAULT;

  public static final int SOCKET_RCVBUF_LENGTH;

  public static final java.lang.String SOCKET_SNDBUF_LENGTH_PROP_NAME;

  public static final int SOCKET_SNDBUF_LENGTH_DEFAULT;

  public static final int SOCKET_SNDBUF_LENGTH;

  public static final java.lang.String SOCKET_MULTICAST_TTL_PROP_NAME;

  public static final int SOCKET_MULTICAST_TTL_DEFAULT;

  public static final int SOCKET_MULTICAST_TTL;

  public static final java.lang.String PUBLICATION_LINGER_PROP_NAME;

  public static final long PUBLICATION_LINGER_DEFAULT_NS;

  public static final long PUBLICATION_LINGER_NS;

  public static final java.lang.String CLIENT_LIVENESS_TIMEOUT_PROP_NAME;

  public static final long CLIENT_LIVENESS_TIMEOUT_DEFAULT_NS;

  public static final long CLIENT_LIVENESS_TIMEOUT_NS;

  public static final java.lang.String IMAGE_LIVENESS_TIMEOUT_PROP_NAME;

  public static final long IMAGE_LIVENESS_TIMEOUT_DEFAULT_NS;

  public static final long IMAGE_LIVENESS_TIMEOUT_NS;

  public static final java.lang.String PUBLICATION_TERM_WINDOW_LENGTH_PROP_NAME;

  public static final int PUBLICATION_TERM_WINDOW_LENGTH;

  public static final java.lang.String IPC_PUBLICATION_TERM_WINDOW_LENGTH_PROP_NAME;

  public static final int IPC_PUBLICATION_TERM_WINDOW_LENGTH;

  public static final java.lang.String PUBLICATION_UNBLOCK_TIMEOUT_PROP_NAME;

  public static final long PUBLICATION_UNBLOCK_TIMEOUT_DEFAULT_NS;

  public static final long PUBLICATION_UNBLOCK_TIMEOUT_NS;

  private static final java.lang.String DEFAULT_IDLE_STRATEGY;

  static final long AGENT_IDLE_MAX_SPINS;

  static final long AGENT_IDLE_MAX_YIELDS;

  static final long AGENT_IDLE_MIN_PARK_NS;

  static final long AGENT_IDLE_MAX_PARK_NS;

  private static final java.lang.String CONTROLLABLE_IDLE_STRATEGY;

  public static final java.lang.String SENDER_IDLE_STRATEGY_PROP_NAME;

  public static final java.lang.String SENDER_IDLE_STRATEGY;

  public static final java.lang.String CONDUCTOR_IDLE_STRATEGY_PROP_NAME;

  public static final java.lang.String CONDUCTOR_IDLE_STRATEGY;

  public static final java.lang.String RECEIVER_IDLE_STRATEGY_PROP_NAME;

  public static final java.lang.String RECEIVER_IDLE_STRATEGY;

  public static final java.lang.String SHARED_NETWORK_IDLE_STRATEGY_PROP_NAME;

  public static final java.lang.String SHARED_NETWORK_IDLE_STRATEGY;

  public static final java.lang.String SHARED_IDLE_STRATEGY_PROP_NAME;

  public static final java.lang.String SHARED_IDLE_STRATEGY;

  public static final java.lang.String UNICAST_FLOW_CONTROL_STRATEGY_PROP_NAME;

  public static final java.lang.String UNICAST_FLOW_CONTROL_STRATEGY;

  public static final java.lang.String MULTICAST_FLOW_CONTROL_STRATEGY_PROP_NAME;

  public static final java.lang.String MULTICAST_FLOW_CONTROL_STRATEGY;

  public static final java.lang.String UNICAST_FLOW_CONTROL_STRATEGY_SUPPLIER_PROP_NAME;

  public static final java.lang.String UNICAST_FLOW_CONTROL_STRATEGY_SUPPLIER;

  public static final java.lang.String MULTICAST_FLOW_CONTROL_STRATEGY_SUPPLIER_PROP_NAME;

  public static final java.lang.String MULTICAST_FLOW_CONTROL_STRATEGY_SUPPLIER;

  public static final java.lang.String MTU_LENGTH_PROP_NAME;

  public static final int MTU_LENGTH_DEFAULT;

  public static final int MTU_LENGTH;

  public static final int MAX_UDP_PAYLOAD_LENGTH;

  public static final java.lang.String THREADING_MODE_PROP_NAME;

  static final io.aeron.driver.ThreadingMode THREADING_MODE_DEFAULT;

  public static final long HEARTBEAT_TIMEOUT_NS;

  public static final java.lang.String SEND_CHANNEL_ENDPOINT_SUPPLIER_PROP_NAME;

  public static final java.lang.String SEND_CHANNEL_ENDPOINT_SUPPLIER;

  public static final java.lang.String RECEIVE_CHANNEL_ENDPOINT_SUPPLIER_PROP_NAME;

  public static final java.lang.String RECEIVE_CHANNEL_ENDPOINT_SUPPLIER;

  public static final int CMD_QUEUE_CAPACITY;

  public static final long PENDING_SETUPS_TIMEOUT_NS;

  public static final long PUBLICATION_SETUP_TIMEOUT_NS;

  public static final long PUBLICATION_HEARTBEAT_TIMEOUT_NS;

  public static final int NAK_GROUPSIZE_DEFAULT;

  public static final int NAK_GRTT_DEFAULT;

  public static final long NAK_MAX_BACKOFF_DEFAULT;

  public static final io.aeron.driver.OptimalMulticastDelayGenerator NAK_MULTICAST_DELAY_GENERATOR;

  public static final long NAK_UNICAST_DELAY_DEFAULT_NS;

  public static final io.aeron.driver.StaticDelayGenerator NAK_UNICAST_DELAY_GENERATOR;

  public static final long RETRANSMIT_UNICAST_DELAY_DEFAULT_NS;

  public static final io.aeron.driver.FeedbackDelayGenerator RETRANSMIT_UNICAST_DELAY_GENERATOR;

  public static final long RETRANSMIT_UNICAST_LINGER_DEFAULT_NS;

  public static final io.aeron.driver.FeedbackDelayGenerator RETRANSMIT_UNICAST_LINGER_GENERATOR;

  public static final int MAX_RETRANSMITS_DEFAULT;

  public io.aeron.driver.Configuration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void validateTermBufferLength(int);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method org/agrona/BitUtil.isPowerOfTwo:(I)Z
       4: ifne          34
       7: new           #3                  // class java/lang/IllegalStateException
      10: dup
      11: new           #4                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #6                  // String Term buffer length must be a positive power of 2:
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: iload_0
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return

  public static int publicationTermWindowLength(int);
    Code:
       0: iload_0
       1: iconst_2
       2: idiv
       3: istore_1
       4: iconst_0
       5: getstatic     #11                 // Field PUBLICATION_TERM_WINDOW_LENGTH:I
       8: if_icmpeq     19
      11: getstatic     #11                 // Field PUBLICATION_TERM_WINDOW_LENGTH:I
      14: iload_1
      15: invokestatic  #12                 // Method java/lang/Math.min:(II)I
      18: istore_1
      19: iload_1
      20: ireturn

  public static int ipcPublicationTermWindowLength(int);
    Code:
       0: iload_0
       1: istore_1
       2: iconst_0
       3: getstatic     #13                 // Field IPC_PUBLICATION_TERM_WINDOW_LENGTH:I
       6: if_icmpeq     17
       9: getstatic     #13                 // Field IPC_PUBLICATION_TERM_WINDOW_LENGTH:I
      12: iload_1
      13: invokestatic  #12                 // Method java/lang/Math.min:(II)I
      16: istore_1
      17: iload_1
      18: ireturn

  public static int ipcTermBufferLength(int);
    Code:
       0: iconst_0
       1: getstatic     #14                 // Field IPC_TERM_BUFFER_LENGTH:I
       4: if_icmpeq     13
       7: getstatic     #14                 // Field IPC_TERM_BUFFER_LENGTH:I
      10: goto          14
      13: iload_0
      14: ireturn

  public static void validateInitialWindowLength(int, int);
    Code:
       0: iload_1
       1: iload_0
       2: if_icmple     32
       5: new           #3                  // class java/lang/IllegalStateException
       8: dup
       9: new           #4                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #15                 // String Initial window length must be >= to MTU length:
      18: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_1
      22: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: return

  public static org.agrona.concurrent.IdleStrategy agentIdleStrategy(java.lang.String, org.agrona.concurrent.status.StatusIndicator);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: astore_3
       4: iconst_m1
       5: istore        4
       7: aload_3
       8: invokevirtual #16                 // Method java/lang/String.hashCode:()I
      11: lookupswitch  { // 2
           -1969084570: 36
            1682888761: 51
               default: 63
          }
      36: aload_3
      37: ldc           #17                 // String org.agrona.concurrent.BackoffIdleStrategy
      39: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          63
      45: iconst_0
      46: istore        4
      48: goto          63
      51: aload_3
      52: ldc           #19                 // String org.agrona.concurrent.ControllableIdleStrategy
      54: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          63
      60: iconst_1
      61: istore        4
      63: iload         4
      65: lookupswitch  { // 2
                     0: 92
                     1: 115
               default: 136
          }
      92: new           #20                 // class org/agrona/concurrent/BackoffIdleStrategy
      95: dup
      96: ldc2_w        #22                 // long 20l
      99: ldc2_w        #24                 // long 50l
     102: getstatic     #26                 // Field AGENT_IDLE_MIN_PARK_NS:J
     105: getstatic     #27                 // Field AGENT_IDLE_MAX_PARK_NS:J
     108: invokespecial #28                 // Method org/agrona/concurrent/BackoffIdleStrategy."<init>":(JJJJ)V
     111: astore_2
     112: goto          157
     115: new           #29                 // class org/agrona/concurrent/ControllableIdleStrategy
     118: dup
     119: aload_1
     120: invokespecial #30                 // Method org/agrona/concurrent/ControllableIdleStrategy."<init>":(Lorg/agrona/concurrent/status/StatusIndicatorReader;)V
     123: astore_2
     124: aload_1
     125: ldc2_w        #31                 // long 4l
     128: invokeinterface #33,  3           // InterfaceMethod org/agrona/concurrent/status/StatusIndicator.setOrdered:(J)V
     133: goto          157
     136: aload_0
     137: invokestatic  #34                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     140: invokevirtual #35                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     143: checkcast     #36                 // class org/agrona/concurrent/IdleStrategy
     146: astore_2
     147: goto          157
     150: astore        5
     152: aload         5
     154: invokestatic  #38                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
     157: aload_2
     158: areturn
    Exception table:
       from    to  target type
         136   147   150   Class java/lang/Exception

  static org.agrona.concurrent.IdleStrategy senderIdleStrategy(org.agrona.concurrent.status.StatusIndicator);
    Code:
       0: getstatic     #39                 // Field SENDER_IDLE_STRATEGY:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #40                 // Method agentIdleStrategy:(Ljava/lang/String;Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
       7: areturn

  static org.agrona.concurrent.IdleStrategy conductorIdleStrategy(org.agrona.concurrent.status.StatusIndicator);
    Code:
       0: getstatic     #41                 // Field CONDUCTOR_IDLE_STRATEGY:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #40                 // Method agentIdleStrategy:(Ljava/lang/String;Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
       7: areturn

  static org.agrona.concurrent.IdleStrategy receiverIdleStrategy(org.agrona.concurrent.status.StatusIndicator);
    Code:
       0: getstatic     #42                 // Field RECEIVER_IDLE_STRATEGY:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #40                 // Method agentIdleStrategy:(Ljava/lang/String;Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
       7: areturn

  static org.agrona.concurrent.IdleStrategy sharedNetworkIdleStrategy(org.agrona.concurrent.status.StatusIndicator);
    Code:
       0: getstatic     #43                 // Field SHARED_NETWORK_IDLE_STRATEGY:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #40                 // Method agentIdleStrategy:(Ljava/lang/String;Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
       7: areturn

  static org.agrona.concurrent.IdleStrategy sharedIdleStrategy(org.agrona.concurrent.status.StatusIndicator);
    Code:
       0: getstatic     #44                 // Field SHARED_IDLE_STRATEGY:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #40                 // Method agentIdleStrategy:(Ljava/lang/String;Lorg/agrona/concurrent/status/StatusIndicator;)Lorg/agrona/concurrent/IdleStrategy;
       7: areturn

  static int termBufferLength();
    Code:
       0: ldc           #45                 // String aeron.term.buffer.length
       2: ldc           #46                 // int 16777216
       4: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      10: ireturn

  static int maxTermBufferLength();
    Code:
       0: ldc           #49                 // String aeron.term.buffer.max.length
       2: ldc           #50                 // int 1073741824
       4: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      10: ireturn

  static int initialWindowLength();
    Code:
       0: ldc           #51                 // String aeron.rcv.initial.window.length
       2: ldc           #52                 // int 131072
       4: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      10: ireturn

  static long statusMessageTimeout();
    Code:
       0: ldc           #53                 // String aeron.rcv.status.message.timeout
       2: getstatic     #54                 // Field STATUS_MESSAGE_TIMEOUT_DEFAULT_NS:J
       5: invokestatic  #55                 // Method java/lang/Long.getLong:(Ljava/lang/String;J)Ljava/lang/Long;
       8: invokevirtual #56                 // Method java/lang/Long.longValue:()J
      11: lreturn

  static io.aeron.driver.SendChannelEndpointSupplier sendChannelEndpointSupplier();
    Code:
       0: aconst_null
       1: astore_0
       2: getstatic     #57                 // Field SEND_CHANNEL_ENDPOINT_SUPPLIER:Ljava/lang/String;
       5: invokestatic  #34                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: invokevirtual #35                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      11: checkcast     #58                 // class io/aeron/driver/SendChannelEndpointSupplier
      14: astore_0
      15: goto          23
      18: astore_1
      19: aload_1
      20: invokestatic  #38                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
      23: aload_0
      24: areturn
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Exception

  static io.aeron.driver.ReceiveChannelEndpointSupplier receiveChannelEndpointSupplier();
    Code:
       0: aconst_null
       1: astore_0
       2: getstatic     #59                 // Field RECEIVE_CHANNEL_ENDPOINT_SUPPLIER:Ljava/lang/String;
       5: invokestatic  #34                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: invokevirtual #35                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      11: checkcast     #60                 // class io/aeron/driver/ReceiveChannelEndpointSupplier
      14: astore_0
      15: goto          23
      18: astore_1
      19: aload_1
      20: invokestatic  #38                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
      23: aload_0
      24: areturn
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Exception

  static io.aeron.driver.FlowControlSupplier unicastFlowControlSupplier();
    Code:
       0: aconst_null
       1: astore_0
       2: getstatic     #61                 // Field UNICAST_FLOW_CONTROL_STRATEGY_SUPPLIER:Ljava/lang/String;
       5: invokestatic  #34                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: invokevirtual #35                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      11: checkcast     #62                 // class io/aeron/driver/FlowControlSupplier
      14: astore_0
      15: goto          23
      18: astore_1
      19: aload_1
      20: invokestatic  #38                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
      23: aload_0
      24: areturn
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Exception

  static io.aeron.driver.FlowControlSupplier multicastFlowControlSupplier();
    Code:
       0: aconst_null
       1: astore_0
       2: getstatic     #63                 // Field MULTICAST_FLOW_CONTROL_STRATEGY_SUPPLIER:Ljava/lang/String;
       5: invokestatic  #34                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: invokevirtual #35                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      11: checkcast     #62                 // class io/aeron/driver/FlowControlSupplier
      14: astore_0
      15: goto          23
      18: astore_1
      19: aload_1
      20: invokestatic  #38                 // Method org/agrona/LangUtil.rethrowUnchecked:(Ljava/lang/Throwable;)V
      23: aload_0
      24: areturn
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Exception

  public static void validateMtuLength(int);
    Code:
       0: iload_0
       1: iflt          10
       4: iload_0
       5: ldc           #64                 // int 65507
       7: if_icmple     37
      10: new           #65                 // class io/aeron/driver/exceptions/ConfigurationException
      13: dup
      14: new           #4                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #66                 // String mtuLength must be a > 0 and <= 65507: mtuLength=
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_0
      27: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #67                 // Method io/aeron/driver/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_0
      38: bipush        32
      40: irem
      41: ifeq          76
      44: new           #65                 // class io/aeron/driver/exceptions/ConfigurationException
      47: dup
      48: ldc           #69                 // String mtuLength must be a multiple of %d: mtuLength=%d
      50: iconst_2
      51: anewarray     #70                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: bipush        32
      58: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: dup
      63: iconst_1
      64: iload_0
      65: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aastore
      69: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      72: invokespecial #67                 // Method io/aeron/driver/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: return

  private static long lambda$static$1();
    Code:
       0: getstatic     #73                 // Field RETRANSMIT_UNICAST_LINGER_DEFAULT_NS:J
       3: lreturn

  private static long lambda$static$0();
    Code:
       0: getstatic     #74                 // Field RETRANSMIT_UNICAST_DELAY_DEFAULT_NS:J
       3: lreturn

  static {};
    Code:
       0: ldc           #75                 // String aeron.term.buffer.sparse.file
       2: invokestatic  #76                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: putstatic     #77                 // Field TERM_BUFFER_SPARSE_FILE:Ljava/lang/String;
       8: ldc           #78                 // String aeron.ipc.term.buffer.length
      10: ldc           #79                 // int 67108864
      12: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      15: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      18: putstatic     #14                 // Field IPC_TERM_BUFFER_LENGTH:I
      21: ldc           #80                 // int 1048576
      23: getstatic     #81                 // Field org/agrona/concurrent/ringbuffer/RingBufferDescriptor.TRAILER_LENGTH:I
      26: iadd
      27: putstatic     #82                 // Field CONDUCTOR_BUFFER_LENGTH_DEFAULT:I
      30: ldc           #83                 // String aeron.conductor.buffer.length
      32: getstatic     #82                 // Field CONDUCTOR_BUFFER_LENGTH_DEFAULT:I
      35: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      38: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      41: putstatic     #84                 // Field CONDUCTOR_BUFFER_LENGTH:I
      44: ldc           #80                 // int 1048576
      46: getstatic     #85                 // Field org/agrona/concurrent/broadcast/BroadcastBufferDescriptor.TRAILER_LENGTH:I
      49: iadd
      50: putstatic     #86                 // Field TO_CLIENTS_BUFFER_LENGTH_DEFAULT:I
      53: ldc           #87                 // String aeron.clients.buffer.length
      55: getstatic     #86                 // Field TO_CLIENTS_BUFFER_LENGTH_DEFAULT:I
      58: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      61: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      64: putstatic     #88                 // Field TO_CLIENTS_BUFFER_LENGTH:I
      67: ldc           #89                 // String aeron.counters.buffer.length
      69: ldc           #80                 // int 1048576
      71: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      74: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      77: putstatic     #90                 // Field COUNTERS_VALUES_BUFFER_LENGTH:I
      80: getstatic     #90                 // Field COUNTERS_VALUES_BUFFER_LENGTH:I
      83: iconst_2
      84: imul
      85: putstatic     #91                 // Field COUNTERS_METADATA_BUFFER_LENGTH:I
      88: ldc           #92                 // String aeron.error.buffer.length
      90: ldc           #80                 // int 1048576
      92: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      95: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      98: putstatic     #93                 // Field ERROR_BUFFER_LENGTH:I
     101: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     104: ldc2_w        #95                 // long 200l
     107: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     110: putstatic     #54                 // Field STATUS_MESSAGE_TIMEOUT_DEFAULT_NS:J
     113: ldc           #98                 // String aeron.socket.so_rcvbuf
     115: ldc           #52                 // int 131072
     117: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     120: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
     123: putstatic     #99                 // Field SOCKET_RCVBUF_LENGTH:I
     126: ldc           #100                // String aeron.socket.so_sndbuf
     128: iconst_0
     129: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     132: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
     135: putstatic     #101                // Field SOCKET_SNDBUF_LENGTH:I
     138: ldc           #102                // String aeron.socket.multicast.ttl
     140: iconst_0
     141: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     144: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
     147: putstatic     #103                // Field SOCKET_MULTICAST_TTL:I
     150: getstatic     #104                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     153: ldc2_w        #105                // long 5l
     156: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     159: putstatic     #107                // Field PUBLICATION_LINGER_DEFAULT_NS:J
     162: ldc           #108                // String aeron.publication.linger.timeout
     164: getstatic     #107                // Field PUBLICATION_LINGER_DEFAULT_NS:J
     167: invokestatic  #55                 // Method java/lang/Long.getLong:(Ljava/lang/String;J)Ljava/lang/Long;
     170: invokevirtual #56                 // Method java/lang/Long.longValue:()J
     173: putstatic     #109                // Field PUBLICATION_LINGER_NS:J
     176: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     179: ldc2_w        #110                // long 5000l
     182: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     185: putstatic     #112                // Field CLIENT_LIVENESS_TIMEOUT_DEFAULT_NS:J
     188: ldc           #113                // String aeron.client.liveness.timeout
     190: getstatic     #112                // Field CLIENT_LIVENESS_TIMEOUT_DEFAULT_NS:J
     193: invokestatic  #55                 // Method java/lang/Long.getLong:(Ljava/lang/String;J)Ljava/lang/Long;
     196: invokevirtual #56                 // Method java/lang/Long.longValue:()J
     199: putstatic     #114                // Field CLIENT_LIVENESS_TIMEOUT_NS:J
     202: getstatic     #104                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     205: ldc2_w        #115                // long 10l
     208: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     211: putstatic     #117                // Field IMAGE_LIVENESS_TIMEOUT_DEFAULT_NS:J
     214: ldc           #118                // String aeron.image.liveness.timeout
     216: getstatic     #117                // Field IMAGE_LIVENESS_TIMEOUT_DEFAULT_NS:J
     219: invokestatic  #55                 // Method java/lang/Long.getLong:(Ljava/lang/String;J)Ljava/lang/Long;
     222: invokevirtual #56                 // Method java/lang/Long.longValue:()J
     225: putstatic     #119                // Field IMAGE_LIVENESS_TIMEOUT_NS:J
     228: ldc           #120                // String aeron.publication.term.window.length
     230: iconst_0
     231: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     234: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
     237: putstatic     #11                 // Field PUBLICATION_TERM_WINDOW_LENGTH:I
     240: ldc           #121                // String aeron.ipc.publication.term.window.length
     242: iconst_0
     243: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     246: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
     249: putstatic     #13                 // Field IPC_PUBLICATION_TERM_WINDOW_LENGTH:I
     252: getstatic     #104                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     255: ldc2_w        #115                // long 10l
     258: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     261: putstatic     #122                // Field PUBLICATION_UNBLOCK_TIMEOUT_DEFAULT_NS:J
     264: ldc           #123                // String aeron.publication.unblock.timeout
     266: getstatic     #122                // Field PUBLICATION_UNBLOCK_TIMEOUT_DEFAULT_NS:J
     269: invokestatic  #55                 // Method java/lang/Long.getLong:(Ljava/lang/String;J)Ljava/lang/Long;
     272: invokevirtual #56                 // Method java/lang/Long.longValue:()J
     275: putstatic     #124                // Field PUBLICATION_UNBLOCK_TIMEOUT_NS:J
     278: getstatic     #125                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     281: lconst_1
     282: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     285: putstatic     #26                 // Field AGENT_IDLE_MIN_PARK_NS:J
     288: getstatic     #126                // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
     291: ldc2_w        #127                // long 100l
     294: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     297: putstatic     #27                 // Field AGENT_IDLE_MAX_PARK_NS:J
     300: ldc           #129                // String aeron.sender.idle.strategy
     302: ldc           #17                 // String org.agrona.concurrent.BackoffIdleStrategy
     304: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     307: putstatic     #39                 // Field SENDER_IDLE_STRATEGY:Ljava/lang/String;
     310: ldc           #131                // String aeron.conductor.idle.strategy
     312: ldc           #17                 // String org.agrona.concurrent.BackoffIdleStrategy
     314: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     317: putstatic     #41                 // Field CONDUCTOR_IDLE_STRATEGY:Ljava/lang/String;
     320: ldc           #132                // String aeron.receiver.idle.strategy
     322: ldc           #17                 // String org.agrona.concurrent.BackoffIdleStrategy
     324: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     327: putstatic     #42                 // Field RECEIVER_IDLE_STRATEGY:Ljava/lang/String;
     330: ldc           #133                // String aeron.sharednetwork.idle.strategy
     332: ldc           #17                 // String org.agrona.concurrent.BackoffIdleStrategy
     334: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     337: putstatic     #43                 // Field SHARED_NETWORK_IDLE_STRATEGY:Ljava/lang/String;
     340: ldc           #134                // String aeron.shared.idle.strategy
     342: ldc           #17                 // String org.agrona.concurrent.BackoffIdleStrategy
     344: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     347: putstatic     #44                 // Field SHARED_IDLE_STRATEGY:Ljava/lang/String;
     350: ldc           #135                // String aeron.unicast.flow.control.strategy
     352: ldc           #136                // String io.aeron.driver.UnicastFlowControl
     354: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     357: putstatic     #137                // Field UNICAST_FLOW_CONTROL_STRATEGY:Ljava/lang/String;
     360: ldc           #138                // String aeron.multicast.flow.control.strategy
     362: ldc           #139                // String io.aeron.driver.MaxMulticastFlowControl
     364: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     367: putstatic     #140                // Field MULTICAST_FLOW_CONTROL_STRATEGY:Ljava/lang/String;
     370: ldc           #141                // String aeron.unicast.FlowControl.supplier
     372: ldc           #142                // String io.aeron.driver.DefaultUnicastFlowControlSupplier
     374: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     377: putstatic     #61                 // Field UNICAST_FLOW_CONTROL_STRATEGY_SUPPLIER:Ljava/lang/String;
     380: ldc           #143                // String aeron.multicast.FlowControl.supplier
     382: ldc           #144                // String io.aeron.driver.DefaultMulticastFlowControlSupplier
     384: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     387: putstatic     #63                 // Field MULTICAST_FLOW_CONTROL_STRATEGY_SUPPLIER:Ljava/lang/String;
     390: ldc           #145                // String aeron.mtu.length
     392: sipush        4096
     395: invokestatic  #47                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     398: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
     401: putstatic     #146                // Field MTU_LENGTH:I
     404: ldc           #147                // String aeron.threading.mode
     406: getstatic     #148                // Field io/aeron/driver/ThreadingMode.DEDICATED:Lio/aeron/driver/ThreadingMode;
     409: invokevirtual #149                // Method io/aeron/driver/ThreadingMode.name:()Ljava/lang/String;
     412: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     415: invokestatic  #150                // Method io/aeron/driver/ThreadingMode.valueOf:(Ljava/lang/String;)Lio/aeron/driver/ThreadingMode;
     418: putstatic     #151                // Field THREADING_MODE_DEFAULT:Lio/aeron/driver/ThreadingMode;
     421: getstatic     #104                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     424: lconst_1
     425: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     428: putstatic     #152                // Field HEARTBEAT_TIMEOUT_NS:J
     431: ldc           #153                // String aeron.SendChannelEndpoint.supplier
     433: ldc           #154                // String io.aeron.driver.DefaultSendChannelEndpointSupplier
     435: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     438: putstatic     #57                 // Field SEND_CHANNEL_ENDPOINT_SUPPLIER:Ljava/lang/String;
     441: ldc           #155                // String aeron.ReceiveChannelEndpoint.supplier
     443: ldc           #156                // String io.aeron.driver.DefaultReceiveChannelEndpointSupplier
     445: invokestatic  #130                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     448: putstatic     #59                 // Field RECEIVE_CHANNEL_ENDPOINT_SUPPLIER:Ljava/lang/String;
     451: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     454: ldc2_w        #157                // long 1000l
     457: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     460: putstatic     #159                // Field PENDING_SETUPS_TIMEOUT_NS:J
     463: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     466: ldc2_w        #127                // long 100l
     469: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     472: putstatic     #160                // Field PUBLICATION_SETUP_TIMEOUT_NS:J
     475: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     478: ldc2_w        #127                // long 100l
     481: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     484: putstatic     #161                // Field PUBLICATION_HEARTBEAT_TIMEOUT_NS:J
     487: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     490: ldc2_w        #162                // long 60l
     493: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     496: putstatic     #164                // Field NAK_MAX_BACKOFF_DEFAULT:J
     499: new           #165                // class io/aeron/driver/OptimalMulticastDelayGenerator
     502: dup
     503: getstatic     #164                // Field NAK_MAX_BACKOFF_DEFAULT:J
     506: l2d
     507: ldc2_w        #166                // double 10.0d
     510: ldc2_w        #166                // double 10.0d
     513: invokespecial #168                // Method io/aeron/driver/OptimalMulticastDelayGenerator."<init>":(DDD)V
     516: putstatic     #169                // Field NAK_MULTICAST_DELAY_GENERATOR:Lio/aeron/driver/OptimalMulticastDelayGenerator;
     519: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     522: ldc2_w        #162                // long 60l
     525: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     528: putstatic     #170                // Field NAK_UNICAST_DELAY_DEFAULT_NS:J
     531: new           #171                // class io/aeron/driver/StaticDelayGenerator
     534: dup
     535: getstatic     #170                // Field NAK_UNICAST_DELAY_DEFAULT_NS:J
     538: iconst_1
     539: invokespecial #172                // Method io/aeron/driver/StaticDelayGenerator."<init>":(JZ)V
     542: putstatic     #173                // Field NAK_UNICAST_DELAY_GENERATOR:Lio/aeron/driver/StaticDelayGenerator;
     545: getstatic     #125                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     548: lconst_0
     549: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     552: putstatic     #74                 // Field RETRANSMIT_UNICAST_DELAY_DEFAULT_NS:J
     555: invokedynamic #174,  0            // InvokeDynamic #0:generateDelay:()Lio/aeron/driver/FeedbackDelayGenerator;
     560: putstatic     #175                // Field RETRANSMIT_UNICAST_DELAY_GENERATOR:Lio/aeron/driver/FeedbackDelayGenerator;
     563: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     566: ldc2_w        #162                // long 60l
     569: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     572: putstatic     #73                 // Field RETRANSMIT_UNICAST_LINGER_DEFAULT_NS:J
     575: invokedynamic #176,  0            // InvokeDynamic #1:generateDelay:()Lio/aeron/driver/FeedbackDelayGenerator;
     580: putstatic     #177                // Field RETRANSMIT_UNICAST_LINGER_GENERATOR:Lio/aeron/driver/FeedbackDelayGenerator;
     583: return
}
