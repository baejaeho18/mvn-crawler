Compiled from "SenderProxy.java"
public class io.aeron.driver.SenderProxy {
  private final io.aeron.driver.ThreadingMode threadingMode;

  private final java.util.Queue<io.aeron.driver.cmd.SenderCmd> commandQueue;

  private final org.agrona.concurrent.status.AtomicCounter failCount;

  private io.aeron.driver.Sender sender;

  public io.aeron.driver.SenderProxy(io.aeron.driver.ThreadingMode, java.util.Queue<io.aeron.driver.cmd.SenderCmd>, org.agrona.concurrent.status.AtomicCounter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field threadingMode:Lio/aeron/driver/ThreadingMode;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field commandQueue:Ljava/util/Queue;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field failCount:Lorg/agrona/concurrent/status/AtomicCounter;
      19: return

  public void sender(io.aeron.driver.Sender);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field sender:Lio/aeron/driver/Sender;
       5: return

  public void registerSendChannelEndpoint(io.aeron.driver.media.SendChannelEndpoint);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method isSharedThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field sender:Lio/aeron/driver/Sender;
      11: aload_1
      12: invokevirtual #7                  // Method io/aeron/driver/Sender.onRegisterSendChannelEndpoint:(Lio/aeron/driver/media/SendChannelEndpoint;)V
      15: goto          30
      18: aload_0
      19: new           #8                  // class io/aeron/driver/cmd/RegisterSendChannelEndpointCmd
      22: dup
      23: aload_1
      24: invokespecial #9                  // Method io/aeron/driver/cmd/RegisterSendChannelEndpointCmd."<init>":(Lio/aeron/driver/media/SendChannelEndpoint;)V
      27: invokespecial #10                 // Method offer:(Lio/aeron/driver/cmd/SenderCmd;)V
      30: return

  public void closeSendChannelEndpoint(io.aeron.driver.media.SendChannelEndpoint);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method isSharedThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field sender:Lio/aeron/driver/Sender;
      11: aload_1
      12: invokevirtual #11                 // Method io/aeron/driver/Sender.onCloseSendChannelEndpoint:(Lio/aeron/driver/media/SendChannelEndpoint;)V
      15: goto          30
      18: aload_0
      19: new           #12                 // class io/aeron/driver/cmd/CloseSendChannelEndpointCmd
      22: dup
      23: aload_1
      24: invokespecial #13                 // Method io/aeron/driver/cmd/CloseSendChannelEndpointCmd."<init>":(Lio/aeron/driver/media/SendChannelEndpoint;)V
      27: invokespecial #10                 // Method offer:(Lio/aeron/driver/cmd/SenderCmd;)V
      30: return

  public void removeNetworkPublication(io.aeron.driver.NetworkPublication);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method isSharedThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field sender:Lio/aeron/driver/Sender;
      11: aload_1
      12: invokevirtual #14                 // Method io/aeron/driver/Sender.onRemoveNetworkPublication:(Lio/aeron/driver/NetworkPublication;)V
      15: goto          30
      18: aload_0
      19: new           #15                 // class io/aeron/driver/cmd/RemovePublicationCmd
      22: dup
      23: aload_1
      24: invokespecial #16                 // Method io/aeron/driver/cmd/RemovePublicationCmd."<init>":(Lio/aeron/driver/NetworkPublication;)V
      27: invokespecial #10                 // Method offer:(Lio/aeron/driver/cmd/SenderCmd;)V
      30: return

  public void newNetworkPublication(io.aeron.driver.NetworkPublication);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method isSharedThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field sender:Lio/aeron/driver/Sender;
      11: aload_1
      12: invokevirtual #17                 // Method io/aeron/driver/Sender.onNewNetworkPublication:(Lio/aeron/driver/NetworkPublication;)V
      15: goto          30
      18: aload_0
      19: new           #18                 // class io/aeron/driver/cmd/NewPublicationCmd
      22: dup
      23: aload_1
      24: invokespecial #19                 // Method io/aeron/driver/cmd/NewPublicationCmd."<init>":(Lio/aeron/driver/NetworkPublication;)V
      27: invokespecial #10                 // Method offer:(Lio/aeron/driver/cmd/SenderCmd;)V
      30: return

  private boolean isSharedThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field threadingMode:Lio/aeron/driver/ThreadingMode;
       4: getstatic     #20                 // Field io/aeron/driver/ThreadingMode.SHARED:Lio/aeron/driver/ThreadingMode;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void offer(io.aeron.driver.cmd.SenderCmd);
    Code:
       0: aload_0
       1: getfield      #3                  // Field commandQueue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      10: ifne          27
      13: aload_0
      14: getfield      #4                  // Field failCount:Lorg/agrona/concurrent/status/AtomicCounter;
      17: invokevirtual #22                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
      20: pop2
      21: invokestatic  #23                 // Method java/lang/Thread.yield:()V
      24: goto          0
      27: return
}
