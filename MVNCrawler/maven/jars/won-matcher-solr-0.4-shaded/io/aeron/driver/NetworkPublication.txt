Compiled from "NetworkPublication.java"
public class io.aeron.driver.NetworkPublication extends io.aeron.driver.NetworkPublicationPadding3 implements io.aeron.driver.RetransmitSender,io.aeron.driver.DriverManagedResource {
  private static final org.agrona.concurrent.status.ReadablePosition[] EMPTY_POSITIONS;

  private final int positionBitsToShift;

  private final int initialTermId;

  private final int termLengthMask;

  private final int mtuLength;

  private final int termWindowLength;

  private final int sessionId;

  private final int streamId;

  private volatile boolean hasHadFirstStatusMessage;

  private boolean hasReachedEndOfLife;

  private final org.agrona.concurrent.UnsafeBuffer[] termBuffers;

  private final java.nio.ByteBuffer[] sendBuffers;

  private final org.agrona.concurrent.status.Position publisherLimit;

  private final org.agrona.concurrent.status.Position senderPosition;

  private final io.aeron.driver.media.SendChannelEndpoint channelEndpoint;

  private final java.nio.ByteBuffer heartbeatBuffer;

  private final io.aeron.protocol.DataHeaderFlyweight dataHeader;

  private final java.nio.ByteBuffer setupBuffer;

  private final io.aeron.protocol.SetupFlyweight setupHeader;

  private final io.aeron.driver.FlowControl flowControl;

  private final org.agrona.concurrent.EpochClock epochClock;

  private final io.aeron.driver.RetransmitHandler retransmitHandler;

  private final io.aeron.driver.buffer.RawLog rawLog;

  private final org.agrona.concurrent.status.AtomicCounter heartbeatsSent;

  private final org.agrona.concurrent.status.AtomicCounter retransmitsSent;

  private final org.agrona.concurrent.status.AtomicCounter senderFlowControlLimits;

  private final org.agrona.concurrent.status.AtomicCounter shortSends;

  private org.agrona.concurrent.status.ReadablePosition[] spyPositions;

  public io.aeron.driver.NetworkPublication(io.aeron.driver.media.SendChannelEndpoint, org.agrona.concurrent.NanoClock, org.agrona.concurrent.EpochClock, io.aeron.driver.buffer.RawLog, org.agrona.concurrent.status.Position, org.agrona.concurrent.status.Position, int, int, int, int, io.aeron.driver.status.SystemCounters, io.aeron.driver.FlowControl, io.aeron.driver.RetransmitHandler, io.aeron.driver.NetworkPublicationThreadLocals);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/aeron/driver/NetworkPublicationPadding3."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hasHadFirstStatusMessage:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field hasReachedEndOfLife:Z
      14: aload_0
      15: getstatic     #4                  // Field EMPTY_POSITIONS:[Lorg/agrona/concurrent/status/ReadablePosition;
      18: putfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
      26: aload_0
      27: aload         4
      29: putfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
      32: aload_0
      33: aload_3
      34: putfield      #8                  // Field epochClock:Lorg/agrona/concurrent/EpochClock;
      37: aload_0
      38: aload         6
      40: putfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
      43: aload_0
      44: aload         12
      46: putfield      #10                 // Field flowControl:Lio/aeron/driver/FlowControl;
      49: aload_0
      50: aload         13
      52: putfield      #11                 // Field retransmitHandler:Lio/aeron/driver/RetransmitHandler;
      55: aload_0
      56: aload         5
      58: putfield      #12                 // Field publisherLimit:Lorg/agrona/concurrent/status/Position;
      61: aload_0
      62: iload         10
      64: putfield      #13                 // Field mtuLength:I
      67: aload_0
      68: iload         9
      70: putfield      #14                 // Field initialTermId:I
      73: aload_0
      74: iload         7
      76: putfield      #15                 // Field sessionId:I
      79: aload_0
      80: iload         8
      82: putfield      #16                 // Field streamId:I
      85: aload_0
      86: aload         14
      88: invokevirtual #17                 // Method io/aeron/driver/NetworkPublicationThreadLocals.setupBuffer:()Ljava/nio/ByteBuffer;
      91: putfield      #18                 // Field setupBuffer:Ljava/nio/ByteBuffer;
      94: aload_0
      95: aload         14
      97: invokevirtual #19                 // Method io/aeron/driver/NetworkPublicationThreadLocals.setupHeader:()Lio/aeron/protocol/SetupFlyweight;
     100: putfield      #20                 // Field setupHeader:Lio/aeron/protocol/SetupFlyweight;
     103: aload_0
     104: aload         14
     106: invokevirtual #21                 // Method io/aeron/driver/NetworkPublicationThreadLocals.heartbeatBuffer:()Ljava/nio/ByteBuffer;
     109: putfield      #22                 // Field heartbeatBuffer:Ljava/nio/ByteBuffer;
     112: aload_0
     113: aload         14
     115: invokevirtual #23                 // Method io/aeron/driver/NetworkPublicationThreadLocals.dataHeader:()Lio/aeron/protocol/DataHeaderFlyweight;
     118: putfield      #24                 // Field dataHeader:Lio/aeron/protocol/DataHeaderFlyweight;
     121: aload_0
     122: aload         11
     124: getstatic     #25                 // Field io/aeron/driver/status/SystemCounterDescriptor.HEARTBEATS_SENT:Lio/aeron/driver/status/SystemCounterDescriptor;
     127: invokevirtual #26                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     130: putfield      #27                 // Field heartbeatsSent:Lorg/agrona/concurrent/status/AtomicCounter;
     133: aload_0
     134: aload         11
     136: getstatic     #28                 // Field io/aeron/driver/status/SystemCounterDescriptor.SHORT_SENDS:Lio/aeron/driver/status/SystemCounterDescriptor;
     139: invokevirtual #26                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     142: putfield      #29                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
     145: aload_0
     146: aload         11
     148: getstatic     #30                 // Field io/aeron/driver/status/SystemCounterDescriptor.RETRANSMITS_SENT:Lio/aeron/driver/status/SystemCounterDescriptor;
     151: invokevirtual #26                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     154: putfield      #31                 // Field retransmitsSent:Lorg/agrona/concurrent/status/AtomicCounter;
     157: aload_0
     158: aload         11
     160: getstatic     #32                 // Field io/aeron/driver/status/SystemCounterDescriptor.SENDER_FLOW_CONTROL_LIMITS:Lio/aeron/driver/status/SystemCounterDescriptor;
     163: invokevirtual #26                 // Method io/aeron/driver/status/SystemCounters.get:(Lio/aeron/driver/status/SystemCounterDescriptor;)Lorg/agrona/concurrent/status/AtomicCounter;
     166: putfield      #33                 // Field senderFlowControlLimits:Lorg/agrona/concurrent/status/AtomicCounter;
     169: aload_0
     170: aload         4
     172: invokeinterface #34,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.termBuffers:()[Lorg/agrona/concurrent/UnsafeBuffer;
     177: putfield      #35                 // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
     180: aload_0
     181: aload         4
     183: invokeinterface #36,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.sliceTerms:()[Ljava/nio/ByteBuffer;
     188: putfield      #37                 // Field sendBuffers:[Ljava/nio/ByteBuffer;
     191: aload         4
     193: invokeinterface #38,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.termLength:()I
     198: istore        15
     200: aload_0
     201: iload         15
     203: iconst_1
     204: isub
     205: putfield      #39                 // Field termLengthMask:I
     208: aload         12
     210: iload         9
     212: iload         15
     214: invokeinterface #40,  3           // InterfaceMethod io/aeron/driver/FlowControl.initialize:(II)V
     219: aload_2
     220: invokeinterface #41,  1           // InterfaceMethod org/agrona/concurrent/NanoClock.nanoTime:()J
     225: lstore        16
     227: aload_0
     228: lload         16
     230: getstatic     #42                 // Field io/aeron/driver/Configuration.PUBLICATION_HEARTBEAT_TIMEOUT_NS:J
     233: lsub
     234: lconst_1
     235: lsub
     236: putfield      #43                 // Field timeOfLastSendOrHeartbeat:J
     239: aload_0
     240: lload         16
     242: getstatic     #44                 // Field io/aeron/driver/Configuration.PUBLICATION_SETUP_TIMEOUT_NS:J
     245: lsub
     246: lconst_1
     247: lsub
     248: putfield      #45                 // Field timeOfLastSetup:J
     251: aload_0
     252: iload         15
     254: invokestatic  #46                 // Method java/lang/Integer.numberOfTrailingZeros:(I)I
     257: putfield      #47                 // Field positionBitsToShift:I
     260: aload_0
     261: iload         15
     263: invokestatic  #48                 // Method io/aeron/driver/Configuration.publicationTermWindowLength:(I)I
     266: putfield      #49                 // Field termWindowLength:I
     269: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
       4: invokeinterface #50,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.close:()V
       9: aload_0
      10: getfield      #12                 // Field publisherLimit:Lorg/agrona/concurrent/status/Position;
      13: invokeinterface #51,  1           // InterfaceMethod org/agrona/concurrent/status/Position.close:()V
      18: aload_0
      19: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
      22: invokeinterface #51,  1           // InterfaceMethod org/agrona/concurrent/status/Position.close:()V
      27: aload_0
      28: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
      31: astore_1
      32: aload_1
      33: arraylength
      34: istore_2
      35: iconst_0
      36: istore_3
      37: iload_3
      38: iload_2
      39: if_icmpge     60
      42: aload_1
      43: iload_3
      44: aaload
      45: astore        4
      47: aload         4
      49: invokeinterface #52,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.close:()V
      54: iinc          3, 1
      57: goto          37
      60: return

  public int send(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
       4: invokeinterface #53,  1           // InterfaceMethod org/agrona/concurrent/status/Position.get:()J
       9: lstore_3
      10: lload_3
      11: aload_0
      12: getfield      #47                 // Field positionBitsToShift:I
      15: aload_0
      16: getfield      #14                 // Field initialTermId:I
      19: invokestatic  #54                 // Method io/aeron/logbuffer/LogBufferDescriptor.computeTermIdFromPosition:(JII)I
      22: istore        5
      24: lload_3
      25: l2i
      26: aload_0
      27: getfield      #39                 // Field termLengthMask:I
      30: iand
      31: istore        6
      33: aload_0
      34: getfield      #55                 // Field shouldSendSetupFrame:Z
      37: ifeq          49
      40: aload_0
      41: lload_1
      42: iload         5
      44: iload         6
      46: invokespecial #56                 // Method setupMessageCheck:(JII)V
      49: aload_0
      50: lload_1
      51: lload_3
      52: iload         6
      54: invokespecial #57                 // Method sendData:(JJI)I
      57: istore        7
      59: iconst_0
      60: iload         7
      62: if_icmpne     90
      65: aload_0
      66: lload_1
      67: iload         5
      69: iload         6
      71: invokespecial #58                 // Method heartbeatMessageCheck:(JII)I
      74: istore        7
      76: aload_0
      77: aload_0
      78: getfield      #10                 // Field flowControl:Lio/aeron/driver/FlowControl;
      81: lload_1
      82: invokeinterface #59,  3           // InterfaceMethod io/aeron/driver/FlowControl.onIdle:(J)J
      87: putfield      #60                 // Field senderPositionLimit:J
      90: aload_0
      91: getfield      #11                 // Field retransmitHandler:Lio/aeron/driver/RetransmitHandler;
      94: lload_1
      95: aload_0
      96: invokevirtual #61                 // Method io/aeron/driver/RetransmitHandler.processTimeouts:(JLio/aeron/driver/RetransmitSender;)I
      99: pop
     100: iload         7
     102: ireturn

  public io.aeron.driver.media.SendChannelEndpoint sendChannelEndpoint();
    Code:
       0: aload_0
       1: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
       4: areturn

  public int sessionId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field sessionId:I
       4: ireturn

  public int streamId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field streamId:I
       4: ireturn

  void senderPositionLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #60                 // Field senderPositionLimit:J
       5: aload_0
       6: getfield      #2                  // Field hasHadFirstStatusMessage:Z
       9: ifne          17
      12: aload_0
      13: iconst_1
      14: putfield      #2                  // Field hasHadFirstStatusMessage:Z
      17: return

  public void resend(int, int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
       4: invokeinterface #53,  1           // InterfaceMethod org/agrona/concurrent/status/Position.get:()J
       9: lstore        4
      11: iload_1
      12: iload_2
      13: aload_0
      14: getfield      #47                 // Field positionBitsToShift:I
      17: aload_0
      18: getfield      #14                 // Field initialTermId:I
      21: invokestatic  #62                 // Method io/aeron/logbuffer/LogBufferDescriptor.computePosition:(IIII)J
      24: lstore        6
      26: lload         6
      28: lload         4
      30: lcmp
      31: ifge          189
      34: lload         6
      36: lload         4
      38: aload_0
      39: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
      42: invokeinterface #38,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.termLength:()I
      47: i2l
      48: lsub
      49: lcmp
      50: iflt          189
      53: lload         6
      55: aload_0
      56: getfield      #47                 // Field positionBitsToShift:I
      59: invokestatic  #63                 // Method io/aeron/logbuffer/LogBufferDescriptor.indexByPosition:(JI)I
      62: istore        8
      64: aload_0
      65: getfield      #35                 // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
      68: iload         8
      70: aaload
      71: astore        9
      73: aload_0
      74: getfield      #37                 // Field sendBuffers:[Ljava/nio/ByteBuffer;
      77: iload         8
      79: aaload
      80: astore        10
      82: iload_3
      83: istore        11
      85: iconst_0
      86: istore        12
      88: iload_2
      89: iload         12
      91: iadd
      92: istore_2
      93: aload         9
      95: iload_2
      96: aload_0
      97: getfield      #13                 // Field mtuLength:I
     100: invokestatic  #64                 // Method io/aeron/logbuffer/TermScanner.scanForAvailability:(Lorg/agrona/concurrent/UnsafeBuffer;II)J
     103: lstore        13
     105: lload         13
     107: invokestatic  #65                 // Method io/aeron/logbuffer/TermScanner.available:(J)I
     110: istore        15
     112: iload         15
     114: ifgt          120
     117: goto          181
     120: aload         10
     122: iload_2
     123: iload         15
     125: iadd
     126: invokevirtual #66                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     129: iload_2
     130: invokevirtual #67                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
     133: pop
     134: iload         15
     136: aload_0
     137: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
     140: aload         10
     142: invokevirtual #68                 // Method io/aeron/driver/media/SendChannelEndpoint.send:(Ljava/nio/ByteBuffer;)I
     145: if_icmpeq     159
     148: aload_0
     149: getfield      #29                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
     152: invokevirtual #69                 // Method org/agrona/concurrent/status/AtomicCounter.increment:()J
     155: pop2
     156: goto          181
     159: iload         15
     161: lload         13
     163: invokestatic  #70                 // Method io/aeron/logbuffer/TermScanner.padding:(J)I
     166: iadd
     167: istore        12
     169: iload         11
     171: iload         12
     173: isub
     174: istore        11
     176: iload         11
     178: ifgt          88
     181: aload_0
     182: getfield      #31                 // Field retransmitsSent:Lorg/agrona/concurrent/status/AtomicCounter;
     185: invokevirtual #71                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
     188: pop2
     189: return

  public void triggerSendSetupFrame();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #55                 // Field shouldSendSetupFrame:Z
       5: return

  io.aeron.driver.buffer.RawLog rawLog();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
       4: areturn

  int publisherLimitId();
    Code:
       0: aload_0
       1: getfield      #12                 // Field publisherLimit:Lorg/agrona/concurrent/status/Position;
       4: invokeinterface #72,  1           // InterfaceMethod org/agrona/concurrent/status/Position.id:()I
       9: ireturn

  int updatePublishersLimit();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field hasHadFirstStatusMessage:Z
       6: ifeq          27
       9: aload_0
      10: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
      13: invokeinterface #73,  1           // InterfaceMethod org/agrona/concurrent/status/Position.getVolatile:()J
      18: aload_0
      19: getfield      #49                 // Field termWindowLength:I
      22: i2l
      23: ladd
      24: goto          28
      27: lconst_0
      28: lstore_2
      29: iconst_0
      30: aload_0
      31: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
      34: arraylength
      35: if_icmpeq     104
      38: ldc2_w        #75                 // long 9223372036854775807l
      41: lstore        4
      43: aload_0
      44: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
      47: astore        6
      49: aload         6
      51: arraylength
      52: istore        7
      54: iconst_0
      55: istore        8
      57: iload         8
      59: iload         7
      61: if_icmpge     91
      64: aload         6
      66: iload         8
      68: aaload
      69: astore        9
      71: lload         4
      73: aload         9
      75: invokeinterface #77,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.getVolatile:()J
      80: invokestatic  #78                 // Method java/lang/Math.min:(JJ)J
      83: lstore        4
      85: iinc          8, 1
      88: goto          57
      91: lload_2
      92: lload         4
      94: aload_0
      95: getfield      #49                 // Field termWindowLength:I
      98: i2l
      99: ladd
     100: invokestatic  #78                 // Method java/lang/Math.min:(JJ)J
     103: lstore_2
     104: aload_0
     105: getfield      #12                 // Field publisherLimit:Lorg/agrona/concurrent/status/Position;
     108: lload_2
     109: invokeinterface #79,  3           // InterfaceMethod org/agrona/concurrent/status/Position.proposeMaxOrdered:(J)Z
     114: ifeq          124
     117: aload_0
     118: lload_2
     119: invokespecial #80                 // Method cleanBuffer:(J)V
     122: iconst_1
     123: istore_1
     124: iload_1
     125: ireturn

  boolean hasSpies();
    Code:
       0: aload_0
       1: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
       4: arraylength
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  void addSpyPosition(org.agrona.concurrent.status.ReadablePosition);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
       5: aload_1
       6: invokestatic  #81                 // Method org/agrona/collections/ArrayUtil.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
       9: checkcast     #82                 // class "[Lorg/agrona/concurrent/status/ReadablePosition;"
      12: putfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
      15: return

  void removeSpyPosition(org.agrona.concurrent.status.ReadablePosition);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
       5: aload_1
       6: invokestatic  #83                 // Method org/agrona/collections/ArrayUtil.remove:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
       9: checkcast     #82                 // class "[Lorg/agrona/concurrent/status/ReadablePosition;"
      12: putfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
      15: aload_1
      16: invokeinterface #52,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.close:()V
      21: return

  long spyJoiningPosition();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method producerPosition:()J
       4: lstore_1
       5: aload_0
       6: getfield      #5                  // Field spyPositions:[Lorg/agrona/concurrent/status/ReadablePosition;
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     48
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: lload_1
      31: aload         6
      33: invokeinterface #77,  1           // InterfaceMethod org/agrona/concurrent/status/ReadablePosition.getVolatile:()J
      38: invokestatic  #85                 // Method java/lang/Math.max:(JJ)J
      41: lstore_1
      42: iinc          5, 1
      45: goto          17
      48: lload_1
      49: lreturn

  public void onNak(int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field retransmitHandler:Lio/aeron/driver/RetransmitHandler;
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload_0
       8: getfield      #39                 // Field termLengthMask:I
      11: iconst_1
      12: iadd
      13: aload_0
      14: invokevirtual #86                 // Method io/aeron/driver/RetransmitHandler.onNak:(IIIILio/aeron/driver/RetransmitSender;)V
      17: return

  public void onStatusMessage(int, int, int, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field flowControl:Lio/aeron/driver/FlowControl;
       5: iload_1
       6: iload_2
       7: iload_3
       8: aload         4
      10: invokeinterface #87,  5           // InterfaceMethod io/aeron/driver/FlowControl.onStatusMessage:(IIILjava/net/InetSocketAddress;)J
      15: invokevirtual #88                 // Method senderPositionLimit:(J)V
      18: aload_0
      19: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
      22: invokeinterface #89,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.logMetaData:()Lorg/agrona/concurrent/UnsafeBuffer;
      27: aload_0
      28: getfield      #8                  // Field epochClock:Lorg/agrona/concurrent/EpochClock;
      31: invokeinterface #90,  1           // InterfaceMethod org/agrona/concurrent/EpochClock.time:()J
      36: invokestatic  #91                 // Method io/aeron/logbuffer/LogBufferDescriptor.timeOfLastStatusMessage:(Lorg/agrona/concurrent/UnsafeBuffer;J)V
      39: return

  private int sendData(long, long, int);
    Code:
       0: iconst_0
       1: istore        6
       3: aload_0
       4: getfield      #60                 // Field senderPositionLimit:J
       7: lload_3
       8: lsub
       9: l2i
      10: istore        7
      12: iload         7
      14: ifle          154
      17: iload         7
      19: aload_0
      20: getfield      #13                 // Field mtuLength:I
      23: invokestatic  #92                 // Method java/lang/Math.min:(II)I
      26: istore        8
      28: lload_3
      29: aload_0
      30: getfield      #47                 // Field positionBitsToShift:I
      33: invokestatic  #63                 // Method io/aeron/logbuffer/LogBufferDescriptor.indexByPosition:(JI)I
      36: istore        9
      38: aload_0
      39: getfield      #35                 // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
      42: iload         9
      44: aaload
      45: iload         5
      47: iload         8
      49: invokestatic  #64                 // Method io/aeron/logbuffer/TermScanner.scanForAvailability:(Lorg/agrona/concurrent/UnsafeBuffer;II)J
      52: lstore        10
      54: lload         10
      56: invokestatic  #65                 // Method io/aeron/logbuffer/TermScanner.available:(J)I
      59: istore        12
      61: iload         12
      63: ifle          151
      66: aload_0
      67: getfield      #37                 // Field sendBuffers:[Ljava/nio/ByteBuffer;
      70: iload         9
      72: aaload
      73: astore        13
      75: aload         13
      77: iload         5
      79: iload         12
      81: iadd
      82: invokevirtual #66                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      85: iload         5
      87: invokevirtual #67                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      90: pop
      91: iload         12
      93: aload_0
      94: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
      97: aload         13
      99: invokevirtual #68                 // Method io/aeron/driver/media/SendChannelEndpoint.send:(Ljava/nio/ByteBuffer;)I
     102: if_icmpne     143
     105: aload_0
     106: lload_1
     107: putfield      #43                 // Field timeOfLastSendOrHeartbeat:J
     110: aload_0
     111: iconst_1
     112: putfield      #93                 // Field trackSenderLimits:Z
     115: iload         12
     117: istore        6
     119: aload_0
     120: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
     123: lload_3
     124: iload         6
     126: i2l
     127: ladd
     128: lload         10
     130: invokestatic  #70                 // Method io/aeron/logbuffer/TermScanner.padding:(J)I
     133: i2l
     134: ladd
     135: invokeinterface #94,  3           // InterfaceMethod org/agrona/concurrent/status/Position.setOrdered:(J)V
     140: goto          151
     143: aload_0
     144: getfield      #29                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
     147: invokevirtual #69                 // Method org/agrona/concurrent/status/AtomicCounter.increment:()J
     150: pop2
     151: goto          174
     154: aload_0
     155: getfield      #93                 // Field trackSenderLimits:Z
     158: ifeq          174
     161: aload_0
     162: iconst_0
     163: putfield      #93                 // Field trackSenderLimits:Z
     166: aload_0
     167: getfield      #33                 // Field senderFlowControlLimits:Lorg/agrona/concurrent/status/AtomicCounter;
     170: invokevirtual #71                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
     173: pop2
     174: iload         6
     176: ireturn

  private void setupMessageCheck(long, int, int);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #45                 // Field timeOfLastSetup:J
       5: getstatic     #44                 // Field io/aeron/driver/Configuration.PUBLICATION_SETUP_TIMEOUT_NS:J
       8: ladd
       9: lcmp
      10: ifle          132
      13: aload_0
      14: getfield      #18                 // Field setupBuffer:Ljava/nio/ByteBuffer;
      17: invokevirtual #95                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      20: pop
      21: aload_0
      22: getfield      #20                 // Field setupHeader:Lio/aeron/protocol/SetupFlyweight;
      25: iload_3
      26: invokevirtual #96                 // Method io/aeron/protocol/SetupFlyweight.activeTermId:(I)Lio/aeron/protocol/SetupFlyweight;
      29: iload         4
      31: invokevirtual #97                 // Method io/aeron/protocol/SetupFlyweight.termOffset:(I)Lio/aeron/protocol/SetupFlyweight;
      34: aload_0
      35: getfield      #15                 // Field sessionId:I
      38: invokevirtual #98                 // Method io/aeron/protocol/SetupFlyweight.sessionId:(I)Lio/aeron/protocol/SetupFlyweight;
      41: aload_0
      42: getfield      #16                 // Field streamId:I
      45: invokevirtual #99                 // Method io/aeron/protocol/SetupFlyweight.streamId:(I)Lio/aeron/protocol/SetupFlyweight;
      48: aload_0
      49: getfield      #14                 // Field initialTermId:I
      52: invokevirtual #100                // Method io/aeron/protocol/SetupFlyweight.initialTermId:(I)Lio/aeron/protocol/SetupFlyweight;
      55: aload_0
      56: getfield      #39                 // Field termLengthMask:I
      59: iconst_1
      60: iadd
      61: invokevirtual #101                // Method io/aeron/protocol/SetupFlyweight.termLength:(I)Lio/aeron/protocol/SetupFlyweight;
      64: aload_0
      65: getfield      #13                 // Field mtuLength:I
      68: invokevirtual #102                // Method io/aeron/protocol/SetupFlyweight.mtuLength:(I)Lio/aeron/protocol/SetupFlyweight;
      71: aload_0
      72: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
      75: invokevirtual #103                // Method io/aeron/driver/media/SendChannelEndpoint.multicastTtl:()I
      78: invokevirtual #104                // Method io/aeron/protocol/SetupFlyweight.ttl:(I)Lio/aeron/protocol/SetupFlyweight;
      81: pop
      82: aload_0
      83: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
      86: aload_0
      87: getfield      #18                 // Field setupBuffer:Ljava/nio/ByteBuffer;
      90: invokevirtual #68                 // Method io/aeron/driver/media/SendChannelEndpoint.send:(Ljava/nio/ByteBuffer;)I
      93: istore        5
      95: bipush        40
      97: iload         5
      99: if_icmpeq     110
     102: aload_0
     103: getfield      #29                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
     106: invokevirtual #69                 // Method org/agrona/concurrent/status/AtomicCounter.increment:()J
     109: pop2
     110: aload_0
     111: lload_1
     112: putfield      #45                 // Field timeOfLastSetup:J
     115: aload_0
     116: lload_1
     117: putfield      #43                 // Field timeOfLastSendOrHeartbeat:J
     120: aload_0
     121: getfield      #2                  // Field hasHadFirstStatusMessage:Z
     124: ifeq          132
     127: aload_0
     128: iconst_0
     129: putfield      #55                 // Field shouldSendSetupFrame:Z
     132: return

  private int heartbeatMessageCheck(long, int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: lload_1
       4: aload_0
       5: getfield      #43                 // Field timeOfLastSendOrHeartbeat:J
       8: getstatic     #42                 // Field io/aeron/driver/Configuration.PUBLICATION_HEARTBEAT_TIMEOUT_NS:J
      11: ladd
      12: lcmp
      13: ifle          93
      16: aload_0
      17: getfield      #22                 // Field heartbeatBuffer:Ljava/nio/ByteBuffer;
      20: invokevirtual #95                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      23: pop
      24: aload_0
      25: getfield      #24                 // Field dataHeader:Lio/aeron/protocol/DataHeaderFlyweight;
      28: aload_0
      29: getfield      #15                 // Field sessionId:I
      32: invokevirtual #106                // Method io/aeron/protocol/DataHeaderFlyweight.sessionId:(I)Lio/aeron/protocol/DataHeaderFlyweight;
      35: aload_0
      36: getfield      #16                 // Field streamId:I
      39: invokevirtual #107                // Method io/aeron/protocol/DataHeaderFlyweight.streamId:(I)Lio/aeron/protocol/DataHeaderFlyweight;
      42: iload_3
      43: invokevirtual #108                // Method io/aeron/protocol/DataHeaderFlyweight.termId:(I)Lio/aeron/protocol/DataHeaderFlyweight;
      46: iload         4
      48: invokevirtual #109                // Method io/aeron/protocol/DataHeaderFlyweight.termOffset:(I)Lio/aeron/protocol/DataHeaderFlyweight;
      51: pop
      52: aload_0
      53: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
      56: aload_0
      57: getfield      #22                 // Field heartbeatBuffer:Ljava/nio/ByteBuffer;
      60: invokevirtual #68                 // Method io/aeron/driver/media/SendChannelEndpoint.send:(Ljava/nio/ByteBuffer;)I
      63: istore        5
      65: bipush        32
      67: iload         5
      69: if_icmpeq     80
      72: aload_0
      73: getfield      #29                 // Field shortSends:Lorg/agrona/concurrent/status/AtomicCounter;
      76: invokevirtual #69                 // Method org/agrona/concurrent/status/AtomicCounter.increment:()J
      79: pop2
      80: aload_0
      81: getfield      #27                 // Field heartbeatsSent:Lorg/agrona/concurrent/status/AtomicCounter;
      84: invokevirtual #71                 // Method org/agrona/concurrent/status/AtomicCounter.orderedIncrement:()J
      87: pop2
      88: aload_0
      89: lload_1
      90: putfield      #43                 // Field timeOfLastSendOrHeartbeat:J
      93: iload         5
      95: ireturn

  private boolean isUnreferencedAndPotentiallyInactive(long);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: aload_0
       4: getfield      #111                // Field refCount:I
       7: if_icmpne     54
      10: aload_0
      11: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
      14: invokeinterface #73,  1           // InterfaceMethod org/agrona/concurrent/status/Position.getVolatile:()J
      19: lstore        4
      21: aload_0
      22: lload         4
      24: aload_0
      25: getfield      #112                // Field lastSenderPosition:J
      28: lcmp
      29: ifne          39
      32: aload_0
      33: getfield      #113                // Field timeOfLastActivity:J
      36: goto          40
      39: lload_1
      40: putfield      #113                // Field timeOfLastActivity:J
      43: aload_0
      44: lload         4
      46: putfield      #112                // Field lastSenderPosition:J
      49: iconst_1
      50: istore_3
      51: goto          59
      54: aload_0
      55: lload_1
      56: putfield      #113                // Field timeOfLastActivity:J
      59: iload_3
      60: ireturn

  private void cleanBuffer(long);
    Code:
       0: aload_0
       1: getfield      #114                // Field cleanPosition:J
       4: lstore_3
       5: lload_1
       6: lload_3
       7: lsub
       8: lstore        5
      10: aload_0
      11: getfield      #39                 // Field termLengthMask:I
      14: iconst_1
      15: iadd
      16: istore        7
      18: iload         7
      20: iconst_2
      21: imul
      22: istore        8
      24: lload         5
      26: iload         8
      28: i2l
      29: lcmp
      30: ifle          97
      33: aload_0
      34: getfield      #35                 // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
      37: lload_3
      38: aload_0
      39: getfield      #47                 // Field positionBitsToShift:I
      42: invokestatic  #63                 // Method io/aeron/logbuffer/LogBufferDescriptor.indexByPosition:(JI)I
      45: aaload
      46: astore        9
      48: lload_3
      49: l2i
      50: aload_0
      51: getfield      #39                 // Field termLengthMask:I
      54: iand
      55: istore        10
      57: lload         5
      59: iload         8
      61: i2l
      62: lsub
      63: l2i
      64: istore        11
      66: iload         11
      68: iload         7
      70: iload         10
      72: isub
      73: invokestatic  #92                 // Method java/lang/Math.min:(II)I
      76: istore        12
      78: aload         9
      80: iload         10
      82: iload         12
      84: iconst_0
      85: invokevirtual #115                // Method org/agrona/concurrent/UnsafeBuffer.setMemory:(IIB)V
      88: aload_0
      89: lload_3
      90: iload         12
      92: i2l
      93: ladd
      94: putfield      #114                // Field cleanPosition:J
      97: return

  public void onTimeEvent(long, io.aeron.driver.DriverConductor);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #116                // Method isUnreferencedAndPotentiallyInactive:(J)Z
       5: ifeq          31
       8: lload_1
       9: aload_0
      10: getfield      #113                // Field timeOfLastActivity:J
      13: getstatic     #117                // Field io/aeron/driver/Configuration.PUBLICATION_LINGER_NS:J
      16: ladd
      17: lcmp
      18: ifle          31
      21: aload_0
      22: iconst_1
      23: putfield      #3                  // Field hasReachedEndOfLife:Z
      26: aload_3
      27: aload_0
      28: invokevirtual #118                // Method io/aeron/driver/DriverConductor.cleanupPublication:(Lio/aeron/driver/NetworkPublication;)V
      31: return

  public boolean hasReachedEndOfLife();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hasReachedEndOfLife:Z
       4: ireturn

  public void timeOfLastStateChange(long);
    Code:
       0: return

  public long timeOfLastStateChange();
    Code:
       0: aload_0
       1: getfield      #113                // Field timeOfLastActivity:J
       4: lreturn

  public void delete();
    Code:
       0: return

  public int decRef();
    Code:
       0: aload_0
       1: dup
       2: getfield      #111                // Field refCount:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #111                // Field refCount:I
      11: istore_1
      12: iconst_0
      13: iload_1
      14: if_icmpne     26
      17: aload_0
      18: getfield      #6                  // Field channelEndpoint:Lio/aeron/driver/media/SendChannelEndpoint;
      21: aload_0
      22: invokevirtual #119                // Method io/aeron/driver/media/SendChannelEndpoint.removePublication:(Lio/aeron/driver/NetworkPublication;)Lio/aeron/driver/NetworkPublication;
      25: pop
      26: iload_1
      27: ireturn

  public int incRef();
    Code:
       0: aload_0
       1: dup
       2: getfield      #111                // Field refCount:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #111                // Field refCount:I
      11: ireturn

  public long producerPosition();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
       4: invokeinterface #89,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.logMetaData:()Lorg/agrona/concurrent/UnsafeBuffer;
       9: invokestatic  #120                // Method io/aeron/logbuffer/LogBufferDescriptor.rawTailVolatile:(Lorg/agrona/concurrent/UnsafeBuffer;)J
      12: lstore_1
      13: lload_1
      14: aload_0
      15: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
      18: invokeinterface #38,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.termLength:()I
      23: i2l
      24: invokestatic  #121                // Method io/aeron/logbuffer/LogBufferDescriptor.termOffset:(JJ)I
      27: istore_3
      28: lload_1
      29: invokestatic  #122                // Method io/aeron/logbuffer/LogBufferDescriptor.termId:(J)I
      32: iload_3
      33: aload_0
      34: getfield      #47                 // Field positionBitsToShift:I
      37: aload_0
      38: getfield      #14                 // Field initialTermId:I
      41: invokestatic  #62                 // Method io/aeron/logbuffer/LogBufferDescriptor.computePosition:(IIII)J
      44: lreturn

  public long consumerPosition();
    Code:
       0: aload_0
       1: getfield      #9                  // Field senderPosition:Lorg/agrona/concurrent/status/Position;
       4: invokeinterface #73,  1           // InterfaceMethod org/agrona/concurrent/status/Position.getVolatile:()J
       9: lreturn

  public boolean unblockAtConsumerPosition();
    Code:
       0: aload_0
       1: getfield      #35                 // Field termBuffers:[Lorg/agrona/concurrent/UnsafeBuffer;
       4: aload_0
       5: getfield      #7                  // Field rawLog:Lio/aeron/driver/buffer/RawLog;
       8: invokeinterface #89,  1           // InterfaceMethod io/aeron/driver/buffer/RawLog.logMetaData:()Lorg/agrona/concurrent/UnsafeBuffer;
      13: aload_0
      14: invokevirtual #123                // Method consumerPosition:()J
      17: invokestatic  #124                // Method io/aeron/logbuffer/LogBufferUnblocker.unblock:([Lorg/agrona/concurrent/UnsafeBuffer;Lorg/agrona/concurrent/UnsafeBuffer;J)Z
      20: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #125                // class org/agrona/concurrent/status/ReadablePosition
       4: putstatic     #4                  // Field EMPTY_POSITIONS:[Lorg/agrona/concurrent/status/ReadablePosition;
       7: return
}
