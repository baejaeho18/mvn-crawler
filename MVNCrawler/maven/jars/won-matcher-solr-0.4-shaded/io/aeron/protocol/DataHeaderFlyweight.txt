Compiled from "DataHeaderFlyweight.java"
public class io.aeron.protocol.DataHeaderFlyweight extends io.aeron.protocol.HeaderFlyweight {
  public static final int HEADER_LENGTH;

  public static final short BEGIN_FLAG;

  public static final short END_FLAG;

  public static final short BEGIN_AND_END_FLAGS;

  public static final long DEFAULT_RESERVE_VALUE;

  public static final int TERM_OFFSET_FIELD_OFFSET;

  public static final int SESSION_ID_FIELD_OFFSET;

  public static final int STREAM_ID_FIELD_OFFSET;

  public static final int TERM_ID_FIELD_OFFSET;

  public static final int RESERVED_VALUE_OFFSET;

  public static final int DATA_OFFSET;

  public io.aeron.protocol.DataHeaderFlyweight();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/aeron/protocol/HeaderFlyweight."<init>":()V
       4: return

  public io.aeron.protocol.DataHeaderFlyweight(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method io/aeron/protocol/HeaderFlyweight."<init>":(Lorg/agrona/concurrent/UnsafeBuffer;)V
       5: return

  public io.aeron.protocol.DataHeaderFlyweight(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method io/aeron/protocol/HeaderFlyweight."<init>":(Ljava/nio/ByteBuffer;)V
       5: return

  public int sessionId();
    Code:
       0: aload_0
       1: bipush        12
       3: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #6                  // Method getInt:(ILjava/nio/ByteOrder;)I
       9: ireturn

  public io.aeron.protocol.DataHeaderFlyweight sessionId(int);
    Code:
       0: aload_0
       1: bipush        12
       3: iload_1
       4: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: invokevirtual #7                  // Method putInt:(IILjava/nio/ByteOrder;)V
      10: aload_0
      11: areturn

  public int streamId();
    Code:
       0: aload_0
       1: bipush        16
       3: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #6                  // Method getInt:(ILjava/nio/ByteOrder;)I
       9: ireturn

  public io.aeron.protocol.DataHeaderFlyweight streamId(int);
    Code:
       0: aload_0
       1: bipush        16
       3: iload_1
       4: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: invokevirtual #7                  // Method putInt:(IILjava/nio/ByteOrder;)V
      10: aload_0
      11: areturn

  public int termId();
    Code:
       0: aload_0
       1: bipush        20
       3: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #6                  // Method getInt:(ILjava/nio/ByteOrder;)I
       9: ireturn

  public io.aeron.protocol.DataHeaderFlyweight termId(int);
    Code:
       0: aload_0
       1: bipush        20
       3: iload_1
       4: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: invokevirtual #7                  // Method putInt:(IILjava/nio/ByteOrder;)V
      10: aload_0
      11: areturn

  public int termOffset();
    Code:
       0: aload_0
       1: bipush        8
       3: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #6                  // Method getInt:(ILjava/nio/ByteOrder;)I
       9: ireturn

  public io.aeron.protocol.DataHeaderFlyweight termOffset(int);
    Code:
       0: aload_0
       1: bipush        8
       3: iload_1
       4: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: invokevirtual #7                  // Method putInt:(IILjava/nio/ByteOrder;)V
      10: aload_0
      11: areturn

  public long reservedValue();
    Code:
       0: aload_0
       1: bipush        24
       3: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #8                  // Method getLong:(ILjava/nio/ByteOrder;)J
       9: lreturn

  public io.aeron.protocol.DataHeaderFlyweight reservedValue(long);
    Code:
       0: aload_0
       1: bipush        24
       3: lload_1
       4: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: invokevirtual #9                  // Method putLong:(IJLjava/nio/ByteOrder;)V
      10: aload_0
      11: areturn

  public int dataOffset();
    Code:
       0: bipush        32
       2: ireturn

  public static org.agrona.concurrent.UnsafeBuffer createDefaultHeader(int, int, int);
    Code:
       0: new           #10                 // class org/agrona/concurrent/UnsafeBuffer
       3: dup
       4: bipush        32
       6: newarray       byte
       8: invokespecial #11                 // Method org/agrona/concurrent/UnsafeBuffer."<init>":([B)V
      11: astore_3
      12: aload_3
      13: iconst_4
      14: iconst_0
      15: invokevirtual #13                 // Method org/agrona/concurrent/UnsafeBuffer.putByte:(IB)V
      18: aload_3
      19: iconst_5
      20: bipush        -64
      22: invokevirtual #13                 // Method org/agrona/concurrent/UnsafeBuffer.putByte:(IB)V
      25: aload_3
      26: bipush        6
      28: iconst_1
      29: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      32: invokevirtual #14                 // Method org/agrona/concurrent/UnsafeBuffer.putShort:(ISLjava/nio/ByteOrder;)V
      35: aload_3
      36: bipush        12
      38: iload_0
      39: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      42: invokevirtual #15                 // Method org/agrona/concurrent/UnsafeBuffer.putInt:(IILjava/nio/ByteOrder;)V
      45: aload_3
      46: bipush        16
      48: iload_1
      49: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      52: invokevirtual #15                 // Method org/agrona/concurrent/UnsafeBuffer.putInt:(IILjava/nio/ByteOrder;)V
      55: aload_3
      56: bipush        20
      58: iload_2
      59: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      62: invokevirtual #15                 // Method org/agrona/concurrent/UnsafeBuffer.putInt:(IILjava/nio/ByteOrder;)V
      65: aload_3
      66: bipush        24
      68: lconst_0
      69: invokevirtual #16                 // Method org/agrona/concurrent/UnsafeBuffer.putLong:(IJ)V
      72: aload_3
      73: areturn

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: ldc           #19                 // String %1$8s
      10: iconst_1
      11: anewarray     #20                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: invokevirtual #21                 // Method flags:()S
      20: invokestatic  #22                 // Method java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
      23: aastore
      24: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: bipush        32
      29: bipush        48
      31: invokevirtual #24                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      34: astore_2
      35: aload_1
      36: ldc           #25                 // String DATA Header{
      38: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #27                 // String frame_length=
      43: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #28                 // Method frameLength:()I
      50: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #30                 // String  version=
      55: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #31                 // Method version:()S
      62: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: ldc           #32                 // String  flags=
      67: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_2
      71: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #33                 // String  type=
      76: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #34                 // Method headerType:()I
      83: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: ldc           #35                 // String  term_offset=
      88: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: invokevirtual #36                 // Method termOffset:()I
      95: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      98: ldc           #37                 // String  session_id=
     100: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: invokevirtual #38                 // Method sessionId:()I
     107: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     110: ldc           #39                 // String  stream_id=
     112: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: invokevirtual #40                 // Method streamId:()I
     119: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: ldc           #41                 // String  term_id=
     124: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: invokevirtual #42                 // Method termId:()I
     131: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     134: ldc           #43                 // String  reserved_value=
     136: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_0
     140: invokevirtual #44                 // Method reservedValue:()J
     143: invokevirtual #45                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     146: ldc           #46                 // String }
     148: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: aload_1
     153: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: areturn
}
