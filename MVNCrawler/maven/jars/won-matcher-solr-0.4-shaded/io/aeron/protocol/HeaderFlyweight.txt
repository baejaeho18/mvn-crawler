Compiled from "HeaderFlyweight.java"
public class io.aeron.protocol.HeaderFlyweight extends org.agrona.concurrent.UnsafeBuffer {
  public static final byte[] EMPTY_BUFFER;

  public static final int HDR_TYPE_PAD;

  public static final int HDR_TYPE_DATA;

  public static final int HDR_TYPE_NAK;

  public static final int HDR_TYPE_SM;

  public static final int HDR_TYPE_ERR;

  public static final int HDR_TYPE_SETUP;

  public static final int HDR_TYPE_EXT;

  public static final byte CURRENT_VERSION;

  public static final int FRAME_LENGTH_FIELD_OFFSET;

  public static final int VERSION_FIELD_OFFSET;

  public static final int FLAGS_FIELD_OFFSET;

  public static final int TYPE_FIELD_OFFSET;

  public static final int HEADER_LENGTH;

  public io.aeron.protocol.HeaderFlyweight();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field EMPTY_BUFFER:[B
       4: invokespecial #4                  // Method org/agrona/concurrent/UnsafeBuffer."<init>":([B)V
       7: return

  public io.aeron.protocol.HeaderFlyweight(org.agrona.concurrent.UnsafeBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Lorg/agrona/DirectBuffer;)V
       5: return

  public io.aeron.protocol.HeaderFlyweight(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/agrona/concurrent/UnsafeBuffer."<init>":(Ljava/nio/ByteBuffer;)V
       5: return

  public short version();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #7                  // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: i2s
      10: ireturn

  public io.aeron.protocol.HeaderFlyweight version(short);
    Code:
       0: aload_0
       1: iconst_4
       2: iload_1
       3: i2b
       4: invokevirtual #8                  // Method putByte:(IB)V
       7: aload_0
       8: areturn

  public short flags();
    Code:
       0: aload_0
       1: iconst_5
       2: invokevirtual #7                  // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: i2s
      10: ireturn

  public io.aeron.protocol.HeaderFlyweight flags(short);
    Code:
       0: aload_0
       1: iconst_5
       2: iload_1
       3: i2b
       4: invokevirtual #8                  // Method putByte:(IB)V
       7: aload_0
       8: areturn

  public int headerType();
    Code:
       0: aload_0
       1: bipush        6
       3: getstatic     #9                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #10                 // Method getShort:(ILjava/nio/ByteOrder;)S
       9: ldc           #11                 // int 65535
      11: iand
      12: ireturn

  public io.aeron.protocol.HeaderFlyweight headerType(int);
    Code:
       0: aload_0
       1: bipush        6
       3: iload_1
       4: i2s
       5: getstatic     #9                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       8: invokevirtual #12                 // Method putShort:(ISLjava/nio/ByteOrder;)V
      11: aload_0
      12: areturn

  public int frameLength();
    Code:
       0: aload_0
       1: iconst_0
       2: getstatic     #9                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       5: invokevirtual #13                 // Method getInt:(ILjava/nio/ByteOrder;)I
       8: ireturn

  public io.aeron.protocol.HeaderFlyweight frameLength(int);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: getstatic     #9                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       6: invokevirtual #14                 // Method putInt:(IILjava/nio/ByteOrder;)V
       9: aload_0
      10: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #3                  // Field EMPTY_BUFFER:[B
       6: return
}
