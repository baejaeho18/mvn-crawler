Compiled from "FragmentAssembler.java"
public class io.aeron.FragmentAssembler implements io.aeron.logbuffer.FragmentHandler {
  private final io.aeron.logbuffer.FragmentHandler delegate;

  private final org.agrona.collections.Int2ObjectHashMap<io.aeron.BufferBuilder> builderBySessionIdMap;

  private final java.util.function.IntFunction<io.aeron.BufferBuilder> builderFunc;

  public io.aeron.FragmentAssembler(io.aeron.logbuffer.FragmentHandler);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        4096
       5: invokespecial #3                  // Method "<init>":(Lio/aeron/logbuffer/FragmentHandler;I)V
       8: return

  public io.aeron.FragmentAssembler(io.aeron.logbuffer.FragmentHandler, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class org/agrona/collections/Int2ObjectHashMap
       8: dup
       9: invokespecial #6                  // Method org/agrona/collections/Int2ObjectHashMap."<init>":()V
      12: putfield      #7                  // Field builderBySessionIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field delegate:Lio/aeron/logbuffer/FragmentHandler;
      20: aload_0
      21: iload_2
      22: invokedynamic #9,  0              // InvokeDynamic #0:apply:(I)Ljava/util/function/IntFunction;
      27: putfield      #10                 // Field builderFunc:Ljava/util/function/IntFunction;
      30: return

  public void onFragment(org.agrona.DirectBuffer, int, int, io.aeron.logbuffer.Header);
    Code:
       0: aload         4
       2: invokevirtual #11                 // Method io/aeron/logbuffer/Header.flags:()B
       5: istore        5
       7: iload         5
       9: bipush        -64
      11: iand
      12: bipush        -64
      14: if_icmpne     34
      17: aload_0
      18: getfield      #8                  // Field delegate:Lio/aeron/logbuffer/FragmentHandler;
      21: aload_1
      22: iload_2
      23: iload_3
      24: aload         4
      26: invokeinterface #12,  5           // InterfaceMethod io/aeron/logbuffer/FragmentHandler.onFragment:(Lorg/agrona/DirectBuffer;IILio/aeron/logbuffer/Header;)V
      31: goto          45
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload_3
      38: aload         4
      40: iload         5
      42: invokespecial #13                 // Method handleFragment:(Lorg/agrona/DirectBuffer;IILio/aeron/logbuffer/Header;B)V
      45: return

  private void handleFragment(org.agrona.DirectBuffer, int, int, io.aeron.logbuffer.Header, byte);
    Code:
       0: iload         5
       2: bipush        -128
       4: iand
       5: bipush        -128
       7: if_icmpne     46
      10: aload_0
      11: getfield      #7                  // Field builderBySessionIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      14: aload         4
      16: invokevirtual #14                 // Method io/aeron/logbuffer/Header.sessionId:()I
      19: aload_0
      20: getfield      #10                 // Field builderFunc:Ljava/util/function/IntFunction;
      23: invokevirtual #15                 // Method org/agrona/collections/Int2ObjectHashMap.computeIfAbsent:(ILjava/util/function/IntFunction;)Ljava/lang/Object;
      26: checkcast     #2                  // class io/aeron/BufferBuilder
      29: astore        6
      31: aload         6
      33: invokevirtual #16                 // Method io/aeron/BufferBuilder.reset:()Lio/aeron/BufferBuilder;
      36: aload_1
      37: iload_2
      38: iload_3
      39: invokevirtual #17                 // Method io/aeron/BufferBuilder.append:(Lorg/agrona/DirectBuffer;II)Lio/aeron/BufferBuilder;
      42: pop
      43: goto          128
      46: aload_0
      47: getfield      #7                  // Field builderBySessionIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
      50: aload         4
      52: invokevirtual #14                 // Method io/aeron/logbuffer/Header.sessionId:()I
      55: invokevirtual #18                 // Method org/agrona/collections/Int2ObjectHashMap.get:(I)Ljava/lang/Object;
      58: checkcast     #2                  // class io/aeron/BufferBuilder
      61: astore        6
      63: aconst_null
      64: aload         6
      66: if_acmpeq     128
      69: aload         6
      71: invokevirtual #19                 // Method io/aeron/BufferBuilder.limit:()I
      74: ifeq          128
      77: aload         6
      79: aload_1
      80: iload_2
      81: iload_3
      82: invokevirtual #17                 // Method io/aeron/BufferBuilder.append:(Lorg/agrona/DirectBuffer;II)Lio/aeron/BufferBuilder;
      85: pop
      86: iload         5
      88: bipush        64
      90: iand
      91: bipush        64
      93: if_icmpne     128
      96: aload         6
      98: invokevirtual #19                 // Method io/aeron/BufferBuilder.limit:()I
     101: istore        7
     103: aload_0
     104: getfield      #8                  // Field delegate:Lio/aeron/logbuffer/FragmentHandler;
     107: aload         6
     109: invokevirtual #20                 // Method io/aeron/BufferBuilder.buffer:()Lorg/agrona/MutableDirectBuffer;
     112: iconst_0
     113: iload         7
     115: aload         4
     117: invokeinterface #12,  5           // InterfaceMethod io/aeron/logbuffer/FragmentHandler.onFragment:(Lorg/agrona/DirectBuffer;IILio/aeron/logbuffer/Header;)V
     122: aload         6
     124: invokevirtual #16                 // Method io/aeron/BufferBuilder.reset:()Lio/aeron/BufferBuilder;
     127: pop
     128: return

  public boolean freeSessionBuffer(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field builderBySessionIdMap:Lorg/agrona/collections/Int2ObjectHashMap;
       5: iload_1
       6: invokevirtual #21                 // Method org/agrona/collections/Int2ObjectHashMap.remove:(I)Ljava/lang/Object;
       9: if_acmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static io.aeron.BufferBuilder lambda$new$0(int, int);
    Code:
       0: new           #2                  // class io/aeron/BufferBuilder
       3: dup
       4: iload_0
       5: invokespecial #22                 // Method io/aeron/BufferBuilder."<init>":(I)V
       8: areturn
}
