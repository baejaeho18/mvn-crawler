Compiled from "LiteralByteString.java"
class akka.protobuf.LiteralByteString extends akka.protobuf.ByteString {
  protected final byte[] bytes;

  private int hash;

  akka.protobuf.LiteralByteString(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method akka/protobuf/ByteString."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hash:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field bytes:[B
      14: return

  public byte byteAt(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: iload_1
       5: baload
       6: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: arraylength
       5: ireturn

  public akka.protobuf.ByteString substring(int, int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #4                  // class java/lang/IndexOutOfBoundsException
       7: dup
       8: new           #5                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #7                  // String Beginning index:
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #10                 // String  < 0
      26: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #12                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_2
      37: aload_0
      38: invokevirtual #13                 // Method size:()I
      41: if_icmple     83
      44: new           #4                  // class java/lang/IndexOutOfBoundsException
      47: dup
      48: new           #5                  // class java/lang/StringBuilder
      51: dup
      52: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #14                 // String End index:
      57: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: iload_2
      61: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #15                 // String  >
      66: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: invokevirtual #13                 // Method size:()I
      73: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #12                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: iload_2
      84: iload_1
      85: isub
      86: istore_3
      87: iload_3
      88: ifge          127
      91: new           #4                  // class java/lang/IndexOutOfBoundsException
      94: dup
      95: new           #5                  // class java/lang/StringBuilder
      98: dup
      99: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #16                 // String Beginning index larger than ending index:
     104: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: iload_1
     108: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: ldc           #17                 // String ,
     113: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: iload_2
     117: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     120: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #12                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: iload_3
     128: ifne          139
     131: getstatic     #18                 // Field akka/protobuf/ByteString.EMPTY:Lakka/protobuf/ByteString;
     134: astore        4
     136: goto          159
     139: new           #19                 // class akka/protobuf/BoundedByteString
     142: dup
     143: aload_0
     144: getfield      #3                  // Field bytes:[B
     147: aload_0
     148: invokevirtual #20                 // Method getOffsetIntoBytes:()I
     151: iload_1
     152: iadd
     153: iload_3
     154: invokespecial #21                 // Method akka/protobuf/BoundedByteString."<init>":([BII)V
     157: astore        4
     159: aload         4
     161: areturn

  protected void copyToInternal(byte[], int, int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: iload_2
       5: aload_1
       6: iload_3
       7: iload         4
       9: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public void copyTo(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field bytes:[B
       5: aload_0
       6: invokevirtual #20                 // Method getOffsetIntoBytes:()I
       9: aload_0
      10: invokevirtual #13                 // Method size:()I
      13: invokevirtual #23                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      16: pop
      17: return

  public java.nio.ByteBuffer asReadOnlyByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: aload_0
       5: invokevirtual #20                 // Method getOffsetIntoBytes:()I
       8: aload_0
       9: invokevirtual #13                 // Method size:()I
      12: invokestatic  #24                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      15: astore_1
      16: aload_1
      17: invokevirtual #25                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
      20: areturn

  public java.util.List<java.nio.ByteBuffer> asReadOnlyByteBufferList();
    Code:
       0: new           #26                 // class java/util/ArrayList
       3: dup
       4: iconst_1
       5: invokespecial #27                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #28                 // Method asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;
      14: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #30                 // Method toByteArray:()[B
       5: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
       8: return

  public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #32                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #3                  // Field bytes:[B
       8: aload_0
       9: invokevirtual #20                 // Method getOffsetIntoBytes:()I
      12: aload_0
      13: invokevirtual #13                 // Method size:()I
      16: aload_1
      17: invokespecial #33                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      20: areturn

  public boolean isValidUtf8();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getOffsetIntoBytes:()I
       4: istore_1
       5: aload_0
       6: getfield      #3                  // Field bytes:[B
       9: iload_1
      10: iload_1
      11: aload_0
      12: invokevirtual #13                 // Method size:()I
      15: iadd
      16: invokestatic  #34                 // Method akka/protobuf/Utf8.isValidUtf8:([BII)Z
      19: ireturn

  protected int partialIsValidUtf8(int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getOffsetIntoBytes:()I
       4: iload_2
       5: iadd
       6: istore        4
       8: iload_1
       9: aload_0
      10: getfield      #3                  // Field bytes:[B
      13: iload         4
      15: iload         4
      17: iload_3
      18: iadd
      19: invokestatic  #35                 // Method akka/protobuf/Utf8.partialIsValidUtf8:(I[BII)I
      22: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #36                 // class akka/protobuf/ByteString
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #13                 // Method size:()I
      20: aload_1
      21: checkcast     #36                 // class akka/protobuf/ByteString
      24: invokevirtual #37                 // Method akka/protobuf/ByteString.size:()I
      27: if_icmpeq     32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #13                 // Method size:()I
      36: ifne          41
      39: iconst_1
      40: ireturn
      41: aload_1
      42: instanceof    #38                 // class akka/protobuf/LiteralByteString
      45: ifeq          62
      48: aload_0
      49: aload_1
      50: checkcast     #38                 // class akka/protobuf/LiteralByteString
      53: iconst_0
      54: aload_0
      55: invokevirtual #13                 // Method size:()I
      58: invokevirtual #39                 // Method equalsRange:(Lakka/protobuf/LiteralByteString;II)Z
      61: ireturn
      62: aload_1
      63: instanceof    #40                 // class akka/protobuf/RopeByteString
      66: ifeq          75
      69: aload_1
      70: aload_0
      71: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ireturn
      75: new           #42                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #5                  // class java/lang/StringBuilder
      82: dup
      83: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #43                 // String Has a new type of ByteString been created? Found
      88: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_1
      92: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      95: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow

  boolean equalsRange(akka.protobuf.LiteralByteString, int, int);
    Code:
       0: iload_3
       1: aload_1
       2: invokevirtual #13                 // Method size:()I
       5: if_icmple     42
       8: new           #42                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #5                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #47                 // String Length too large:
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_3
      25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #13                 // Method size:()I
      32: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_2
      43: iload_3
      44: iadd
      45: aload_1
      46: invokevirtual #13                 // Method size:()I
      49: if_icmple     100
      52: new           #42                 // class java/lang/IllegalArgumentException
      55: dup
      56: new           #5                  // class java/lang/StringBuilder
      59: dup
      60: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #48                 // String Ran off end of other:
      65: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: iload_2
      69: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: ldc           #17                 // String ,
      74: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: iload_3
      78: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: ldc           #17                 // String ,
      83: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #13                 // Method size:()I
      90: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: getfield      #3                  // Field bytes:[B
     104: astore        4
     106: aload_1
     107: getfield      #3                  // Field bytes:[B
     110: astore        5
     112: aload_0
     113: invokevirtual #20                 // Method getOffsetIntoBytes:()I
     116: iload_3
     117: iadd
     118: istore        6
     120: aload_0
     121: invokevirtual #20                 // Method getOffsetIntoBytes:()I
     124: istore        7
     126: aload_1
     127: invokevirtual #20                 // Method getOffsetIntoBytes:()I
     130: iload_2
     131: iadd
     132: istore        8
     134: iload         7
     136: iload         6
     138: if_icmpge     165
     141: aload         4
     143: iload         7
     145: baload
     146: aload         5
     148: iload         8
     150: baload
     151: if_icmpeq     156
     154: iconst_0
     155: ireturn
     156: iinc          7, 1
     159: iinc          8, 1
     162: goto          134
     165: iconst_1
     166: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hash:I
       4: istore_1
       5: iload_1
       6: ifne          33
       9: aload_0
      10: invokevirtual #13                 // Method size:()I
      13: istore_2
      14: aload_0
      15: iload_2
      16: iconst_0
      17: iload_2
      18: invokevirtual #49                 // Method partialHash:(III)I
      21: istore_1
      22: iload_1
      23: ifne          28
      26: iconst_1
      27: istore_1
      28: aload_0
      29: iload_1
      30: putfield      #2                  // Field hash:I
      33: iload_1
      34: ireturn

  protected int peekCachedHashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hash:I
       4: ireturn

  protected int partialHash(int, int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: astore        4
       6: aload_0
       7: invokevirtual #20                 // Method getOffsetIntoBytes:()I
      10: iload_2
      11: iadd
      12: istore        5
      14: iload         5
      16: iload_3
      17: iadd
      18: istore        6
      20: iload         5
      22: iload         6
      24: if_icmpge     44
      27: iload_1
      28: bipush        31
      30: imul
      31: aload         4
      33: iload         5
      35: baload
      36: iadd
      37: istore_1
      38: iinc          5, 1
      41: goto          20
      44: iload_1
      45: ireturn

  public java.io.InputStream newInput();
    Code:
       0: new           #50                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: getfield      #3                  // Field bytes:[B
       8: aload_0
       9: invokevirtual #20                 // Method getOffsetIntoBytes:()I
      12: aload_0
      13: invokevirtual #13                 // Method size:()I
      16: invokespecial #51                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      19: areturn

  public akka.protobuf.CodedInputStream newCodedInput();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: aload_0
       5: invokevirtual #20                 // Method getOffsetIntoBytes:()I
       8: aload_0
       9: invokevirtual #13                 // Method size:()I
      12: invokestatic  #52                 // Method akka/protobuf/CodedInputStream.newInstance:([BII)Lakka/protobuf/CodedInputStream;
      15: areturn

  public akka.protobuf.ByteString$ByteIterator iterator();
    Code:
       0: new           #53                 // class akka/protobuf/LiteralByteString$LiteralByteIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #54                 // Method akka/protobuf/LiteralByteString$LiteralByteIterator."<init>":(Lakka/protobuf/LiteralByteString;Lakka/protobuf/LiteralByteString$1;)V
       9: areturn

  protected int getTreeDepth();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isBalanced();
    Code:
       0: iconst_1
       1: ireturn

  protected int getOffsetIntoBytes();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method iterator:()Lakka/protobuf/ByteString$ByteIterator;
       4: areturn
}
