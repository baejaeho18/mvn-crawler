Compiled from "RopeByteString.java"
class akka.protobuf.RopeByteString$RopeInputStream extends java.io.InputStream {
  private akka.protobuf.RopeByteString$PieceIterator pieceIterator;

  private akka.protobuf.LiteralByteString currentPiece;

  private int currentPieceSize;

  private int currentPieceIndex;

  private int currentPieceOffsetInRope;

  private int mark;

  final akka.protobuf.RopeByteString this$0;

  public akka.protobuf.RopeByteString$RopeInputStream(akka.protobuf.RopeByteString);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lakka/protobuf/RopeByteString;
       5: aload_0
       6: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       9: aload_0
      10: invokespecial #3                  // Method initialize:()V
      13: return

  public int read(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #4                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #5                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_3
      21: aload_1
      22: arraylength
      23: iload_2
      24: isub
      25: if_icmple     36
      28: new           #6                  // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #7                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #8                  // Method readSkipInternal:([BII)I
      43: ireturn

  public long skip(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          14
       6: new           #6                  // class java/lang/IndexOutOfBoundsException
       9: dup
      10: invokespecial #7                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      13: athrow
      14: lload_1
      15: ldc2_w        #10                 // long 2147483647l
      18: lcmp
      19: ifle          26
      22: ldc2_w        #10                 // long 2147483647l
      25: lstore_1
      26: aload_0
      27: aconst_null
      28: iconst_0
      29: lload_1
      30: l2i
      31: invokespecial #8                  // Method readSkipInternal:([BII)I
      34: i2l
      35: lreturn

  private int readSkipInternal(byte[], int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iload         4
       5: ifle          92
       8: aload_0
       9: invokespecial #12                 // Method advanceIfCurrentPieceFullyRead:()V
      12: aload_0
      13: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      16: ifnonnull     27
      19: iload         4
      21: iload_3
      22: if_icmpne     92
      25: iconst_m1
      26: ireturn
      27: aload_0
      28: getfield      #14                 // Field currentPieceSize:I
      31: aload_0
      32: getfield      #15                 // Field currentPieceIndex:I
      35: isub
      36: istore        5
      38: iload         5
      40: iload         4
      42: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      45: istore        6
      47: aload_1
      48: ifnull        71
      51: aload_0
      52: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      55: aload_1
      56: aload_0
      57: getfield      #15                 // Field currentPieceIndex:I
      60: iload_2
      61: iload         6
      63: invokevirtual #17                 // Method akka/protobuf/LiteralByteString.copyTo:([BIII)V
      66: iload_2
      67: iload         6
      69: iadd
      70: istore_2
      71: aload_0
      72: dup
      73: getfield      #15                 // Field currentPieceIndex:I
      76: iload         6
      78: iadd
      79: putfield      #15                 // Field currentPieceIndex:I
      82: iload         4
      84: iload         6
      86: isub
      87: istore        4
      89: goto          3
      92: iload_3
      93: iload         4
      95: isub
      96: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method advanceIfCurrentPieceFullyRead:()V
       4: aload_0
       5: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
       8: ifnonnull     13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      17: aload_0
      18: dup
      19: getfield      #15                 // Field currentPieceIndex:I
      22: dup_x1
      23: iconst_1
      24: iadd
      25: putfield      #15                 // Field currentPieceIndex:I
      28: invokevirtual #18                 // Method akka/protobuf/LiteralByteString.byteAt:(I)B
      31: sipush        255
      34: iand
      35: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field currentPieceOffsetInRope:I
       4: aload_0
       5: getfield      #15                 // Field currentPieceIndex:I
       8: iadd
       9: istore_1
      10: aload_0
      11: getfield      #1                  // Field this$0:Lakka/protobuf/RopeByteString;
      14: invokevirtual #20                 // Method akka/protobuf/RopeByteString.size:()I
      17: iload_1
      18: isub
      19: ireturn

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field currentPieceOffsetInRope:I
       5: aload_0
       6: getfield      #15                 // Field currentPieceIndex:I
       9: iadd
      10: putfield      #21                 // Field mark:I
      13: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method initialize:()V
       4: aload_0
       5: aconst_null
       6: iconst_0
       7: aload_0
       8: getfield      #21                 // Field mark:I
      11: invokespecial #8                  // Method readSkipInternal:([BII)I
      14: pop
      15: return

  private void initialize();
    Code:
       0: aload_0
       1: new           #22                 // class akka/protobuf/RopeByteString$PieceIterator
       4: dup
       5: aload_0
       6: getfield      #1                  // Field this$0:Lakka/protobuf/RopeByteString;
       9: aconst_null
      10: invokespecial #23                 // Method akka/protobuf/RopeByteString$PieceIterator."<init>":(Lakka/protobuf/ByteString;Lakka/protobuf/RopeByteString$1;)V
      13: putfield      #24                 // Field pieceIterator:Lakka/protobuf/RopeByteString$PieceIterator;
      16: aload_0
      17: aload_0
      18: getfield      #24                 // Field pieceIterator:Lakka/protobuf/RopeByteString$PieceIterator;
      21: invokevirtual #25                 // Method akka/protobuf/RopeByteString$PieceIterator.next:()Lakka/protobuf/LiteralByteString;
      24: putfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      27: aload_0
      28: aload_0
      29: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      32: invokevirtual #26                 // Method akka/protobuf/LiteralByteString.size:()I
      35: putfield      #14                 // Field currentPieceSize:I
      38: aload_0
      39: iconst_0
      40: putfield      #15                 // Field currentPieceIndex:I
      43: aload_0
      44: iconst_0
      45: putfield      #19                 // Field currentPieceOffsetInRope:I
      48: return

  private void advanceIfCurrentPieceFullyRead();
    Code:
       0: aload_0
       1: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
       4: ifnull        81
       7: aload_0
       8: getfield      #15                 // Field currentPieceIndex:I
      11: aload_0
      12: getfield      #14                 // Field currentPieceSize:I
      15: if_icmpne     81
      18: aload_0
      19: dup
      20: getfield      #19                 // Field currentPieceOffsetInRope:I
      23: aload_0
      24: getfield      #14                 // Field currentPieceSize:I
      27: iadd
      28: putfield      #19                 // Field currentPieceOffsetInRope:I
      31: aload_0
      32: iconst_0
      33: putfield      #15                 // Field currentPieceIndex:I
      36: aload_0
      37: getfield      #24                 // Field pieceIterator:Lakka/protobuf/RopeByteString$PieceIterator;
      40: invokevirtual #27                 // Method akka/protobuf/RopeByteString$PieceIterator.hasNext:()Z
      43: ifeq          71
      46: aload_0
      47: aload_0
      48: getfield      #24                 // Field pieceIterator:Lakka/protobuf/RopeByteString$PieceIterator;
      51: invokevirtual #25                 // Method akka/protobuf/RopeByteString$PieceIterator.next:()Lakka/protobuf/LiteralByteString;
      54: putfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      57: aload_0
      58: aload_0
      59: getfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      62: invokevirtual #26                 // Method akka/protobuf/LiteralByteString.size:()I
      65: putfield      #14                 // Field currentPieceSize:I
      68: goto          81
      71: aload_0
      72: aconst_null
      73: putfield      #13                 // Field currentPiece:Lakka/protobuf/LiteralByteString;
      76: aload_0
      77: iconst_0
      78: putfield      #14                 // Field currentPieceSize:I
      81: return
}
