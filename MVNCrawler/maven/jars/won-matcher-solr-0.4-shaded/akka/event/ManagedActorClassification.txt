Compiled from "EventBus.scala"
public interface akka.event.ManagedActorClassification {
  public abstract void akka$event$ManagedActorClassification$_setter_$akka$event$ManagedActorClassification$$mappings_$eq(java.util.concurrent.atomic.AtomicReference);

  public abstract void akka$event$ManagedActorClassification$_setter_$akka$event$ManagedActorClassification$$empty_$eq(scala.collection.immutable.TreeSet);

  public abstract akka.actor.ActorSystem system();

  public abstract java.util.concurrent.atomic.AtomicReference<akka.event.ManagedActorClassification$ManagedActorClassificationMappings> akka$event$ManagedActorClassification$$mappings();

  public abstract scala.collection.immutable.TreeSet<akka.actor.ActorRef> akka$event$ManagedActorClassification$$empty();

  public abstract akka.actor.ActorRef unsubscriber();

  public abstract boolean associate(akka.actor.ActorRef, akka.actor.ActorRef);

  public abstract void dissociate(akka.actor.ActorRef);

  public abstract boolean dissociate(akka.actor.ActorRef, akka.actor.ActorRef);

  public abstract akka.actor.ActorRef classify(java.lang.Object);

  public abstract int mapSize();

  public abstract void publish(java.lang.Object);

  public abstract boolean subscribe(akka.actor.ActorRef, akka.actor.ActorRef);

  public abstract boolean unsubscribe(akka.actor.ActorRef, akka.actor.ActorRef);

  public abstract void unsubscribe(akka.actor.ActorRef);

  public abstract boolean registerWithUnsubscriber(akka.actor.ActorRef, int);

  public abstract boolean unregisterFromUnsubscriber(akka.actor.ActorRef, int);
}
