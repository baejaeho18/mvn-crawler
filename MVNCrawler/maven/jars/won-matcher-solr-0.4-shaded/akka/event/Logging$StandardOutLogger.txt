Compiled from "Logging.scala"
public class akka.event.Logging$StandardOutLogger extends akka.actor.InternalActorRef implements akka.actor.MinimalActorRef,akka.event.Logging$StdOutLogger {
  private final akka.actor.ActorPath path;

  private final java.lang.String toString;

  private final java.util.Date akka$event$Logging$StdOutLogger$$date;

  private final java.text.SimpleDateFormat akka$event$Logging$StdOutLogger$$dateFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$errorFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$errorFormatWithoutCause;

  private final java.lang.String akka$event$Logging$StdOutLogger$$warningFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$infoFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$debugFormat;

  public java.util.Date akka$event$Logging$StdOutLogger$$date();
    Code:
       0: aload_0
       1: getfield      #25                 // Field akka$event$Logging$StdOutLogger$$date:Ljava/util/Date;
       4: areturn

  public java.text.SimpleDateFormat akka$event$Logging$StdOutLogger$$dateFormat();
    Code:
       0: aload_0
       1: getfield      #30                 // Field akka$event$Logging$StdOutLogger$$dateFormat:Ljava/text/SimpleDateFormat;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$errorFormat();
    Code:
       0: aload_0
       1: getfield      #33                 // Field akka$event$Logging$StdOutLogger$$errorFormat:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$errorFormatWithoutCause();
    Code:
       0: aload_0
       1: getfield      #35                 // Field akka$event$Logging$StdOutLogger$$errorFormatWithoutCause:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$warningFormat();
    Code:
       0: aload_0
       1: getfield      #37                 // Field akka$event$Logging$StdOutLogger$$warningFormat:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$infoFormat();
    Code:
       0: aload_0
       1: getfield      #39                 // Field akka$event$Logging$StdOutLogger$$infoFormat:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$debugFormat();
    Code:
       0: aload_0
       1: getfield      #41                 // Field akka$event$Logging$StdOutLogger$$debugFormat:Ljava/lang/String;
       4: areturn

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$date_$eq(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field akka$event$Logging$StdOutLogger$$date:Ljava/util/Date;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$dateFormat_$eq(java.text.SimpleDateFormat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field akka$event$Logging$StdOutLogger$$dateFormat:Ljava/text/SimpleDateFormat;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$errorFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field akka$event$Logging$StdOutLogger$$errorFormat:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$errorFormatWithoutCause_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field akka$event$Logging$StdOutLogger$$errorFormatWithoutCause:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$warningFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field akka$event$Logging$StdOutLogger$$warningFormat:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$infoFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field akka$event$Logging$StdOutLogger$$infoFormat:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$debugFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field akka$event$Logging$StdOutLogger$$debugFormat:Ljava/lang/String;
       5: return

  public java.lang.String timestamp(akka.event.Logging$LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method akka/event/Logging$StdOutLogger$class.timestamp:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$LogEvent;)Ljava/lang/String;
       5: areturn

  public void print(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method akka/event/Logging$StdOutLogger$class.print:(Lakka/event/Logging$StdOutLogger;Ljava/lang/Object;)V
       5: return

  public void error(akka.event.Logging$Error);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method akka/event/Logging$StdOutLogger$class.error:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Error;)V
       5: return

  public void warning(akka.event.Logging$Warning);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method akka/event/Logging$StdOutLogger$class.warning:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Warning;)V
       5: return

  public void info(akka.event.Logging$Info);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method akka/event/Logging$StdOutLogger$class.info:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Info;)V
       5: return

  public void debug(akka.event.Logging$Debug);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method akka/event/Logging$StdOutLogger$class.debug:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Debug;)V
       5: return

  public akka.actor.InternalActorRef getParent();
    Code:
       0: aload_0
       1: invokestatic  #98                 // Method akka/actor/MinimalActorRef$class.getParent:(Lakka/actor/MinimalActorRef;)Lakka/actor/InternalActorRef;
       4: areturn

  public akka.actor.InternalActorRef getChild(scala.collection.Iterator<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method akka/actor/MinimalActorRef$class.getChild:(Lakka/actor/MinimalActorRef;Lscala/collection/Iterator;)Lakka/actor/InternalActorRef;
       5: areturn

  public void start();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method akka/actor/MinimalActorRef$class.start:(Lakka/actor/MinimalActorRef;)V
       4: return

  public void suspend();
    Code:
       0: aload_0
       1: invokestatic  #113                // Method akka/actor/MinimalActorRef$class.suspend:(Lakka/actor/MinimalActorRef;)V
       4: return

  public void resume(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // Method akka/actor/MinimalActorRef$class.resume:(Lakka/actor/MinimalActorRef;Ljava/lang/Throwable;)V
       5: return

  public void stop();
    Code:
       0: aload_0
       1: invokestatic  #123                // Method akka/actor/MinimalActorRef$class.stop:(Lakka/actor/MinimalActorRef;)V
       4: return

  public boolean isTerminated();
    Code:
       0: aload_0
       1: invokestatic  #128                // Method akka/actor/MinimalActorRef$class.isTerminated:(Lakka/actor/MinimalActorRef;)Z
       4: ireturn

  public void sendSystemMessage(akka.dispatch.sysmsg.SystemMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method akka/actor/MinimalActorRef$class.sendSystemMessage:(Lakka/actor/MinimalActorRef;Lakka/dispatch/sysmsg/SystemMessage;)V
       5: return

  public void restart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // Method akka/actor/MinimalActorRef$class.restart:(Lakka/actor/MinimalActorRef;Ljava/lang/Throwable;)V
       5: return

  public final boolean isLocal();
    Code:
       0: aload_0
       1: invokestatic  #145                // Method akka/actor/LocalRef$class.isLocal:(Lakka/actor/LocalRef;)Z
       4: ireturn

  public akka.actor.ActorPath path();
    Code:
       0: aload_0
       1: getfield      #148                // Field path:Lakka/actor/ActorPath;
       4: areturn

  public akka.actor.ActorRefProvider provider();
    Code:
       0: new           #152                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #154                // String StandardOutLogger does not provide
       6: invokespecial #157                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #159                // Field toString:Ljava/lang/String;
       4: areturn

  public void $bang(java.lang.Object, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #163                // class akka/actor/InvalidMessageException
       7: dup
       8: ldc           #165                // String Message is null
      10: invokespecial #166                // Method akka/actor/InvalidMessageException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #168                // Method print:(Ljava/lang/Object;)V
      19: return

  public akka.actor.ActorRef $bang$default$2(java.lang.Object);
    Code:
       0: getstatic     #178                // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #182                // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  public java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: getstatic     #191                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #195                // Method akka/event/Logging$.akka$event$Logging$$serializedStandardOutLogger:()Lakka/event/Logging$SerializedStandardOutLogger;
       6: areturn

  public akka.event.Logging$StandardOutLogger();
    Code:
       0: aload_0
       1: invokespecial #197                // Method akka/actor/InternalActorRef."<init>":()V
       4: aload_0
       5: invokestatic  #201                // Method akka/actor/LocalRef$class.$init$:(Lakka/actor/LocalRef;)V
       8: aload_0
       9: invokestatic  #203                // Method akka/actor/MinimalActorRef$class.$init$:(Lakka/actor/MinimalActorRef;)V
      12: aload_0
      13: invokestatic  #206                // Method akka/event/Logging$StdOutLogger$class.$init$:(Lakka/event/Logging$StdOutLogger;)V
      16: aload_0
      17: new           #208                // class akka/actor/RootActorPath
      20: dup
      21: getstatic     #213                // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
      24: ldc           #215                // String akka
      26: ldc           #217                // String all-systems
      28: invokevirtual #221                // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/actor/Address;
      31: ldc           #223                // String /StandardOutLogger
      33: invokespecial #226                // Method akka/actor/RootActorPath."<init>":(Lakka/actor/Address;Ljava/lang/String;)V
      36: putfield      #148                // Field path:Lakka/actor/ActorPath;
      39: aload_0
      40: ldc           #228                // String StandardOutLogger
      42: putfield      #159                // Field toString:Ljava/lang/String;
      45: return
}
