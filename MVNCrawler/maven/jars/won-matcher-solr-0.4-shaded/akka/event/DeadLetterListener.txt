Compiled from "DeadLetterListener.scala"
public class akka.event.DeadLetterListener implements akka.actor.Actor {
  private final akka.event.EventStream eventStream;

  private final int maxCount;

  private int count;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #22                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #27                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.event.EventStream eventStream();
    Code:
       0: aload_0
       1: getfield      #82                 // Field eventStream:Lakka/event/EventStream;
       4: areturn

  public int maxCount();
    Code:
       0: aload_0
       1: getfield      #85                 // Field maxCount:I
       4: ireturn

  public int count();
    Code:
       0: aload_0
       1: getfield      #87                 // Field count:I
       4: ireturn

  public void count_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #87                 // Field count:I
       5: return

  public void preStart();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method eventStream:()Lakka/event/EventStream;
       4: aload_0
       5: invokevirtual #94                 // Method self:()Lakka/actor/ActorRef;
       8: ldc           #96                 // class akka/actor/DeadLetter
      10: invokevirtual #102                // Method akka/event/EventStream.subscribe:(Lakka/actor/ActorRef;Ljava/lang/Class;)Z
      13: pop
      14: return

  public void postRestart(java.lang.Throwable);
    Code:
       0: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: return

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method eventStream:()Lakka/event/EventStream;
       4: aload_0
       5: invokevirtual #94                 // Method self:()Lakka/actor/ActorRef;
       8: invokevirtual #108                // Method akka/event/EventStream.unsubscribe:(Lakka/actor/ActorRef;)V
      11: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #111                // class akka/event/DeadLetterListener$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #115                // Method akka/event/DeadLetterListener$$anonfun$receive$1."<init>":(Lakka/event/DeadLetterListener;)V
       8: areturn

  public akka.event.DeadLetterListener();
    Code:
       0: aload_0
       1: invokespecial #117                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #120                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
       8: aload_0
       9: aload_0
      10: invokevirtual #122                // Method context:()Lakka/actor/ActorContext;
      13: invokeinterface #128,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      18: invokevirtual #131                // Method akka/actor/ActorSystem.eventStream:()Lakka/event/EventStream;
      21: putfield      #82                 // Field eventStream:Lakka/event/EventStream;
      24: aload_0
      25: aload_0
      26: invokevirtual #122                // Method context:()Lakka/actor/ActorContext;
      29: invokeinterface #128,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      34: invokevirtual #135                // Method akka/actor/ActorSystem.settings:()Lakka/actor/ActorSystem$Settings;
      37: invokevirtual #140                // Method akka/actor/ActorSystem$Settings.LogDeadLetters:()I
      40: putfield      #85                 // Field maxCount:I
      43: aload_0
      44: iconst_0
      45: putfield      #87                 // Field count:I
      48: return
}
