Compiled from "Logging.scala"
public class akka.event.Logging$DefaultLogger implements akka.actor.Actor, akka.event.Logging$StdOutLogger, akka.dispatch.RequiresMessageQueue<akka.event.LoggerMessageQueueSemantics> {
  private final java.util.Date akka$event$Logging$StdOutLogger$$date;

  private final java.text.SimpleDateFormat akka$event$Logging$StdOutLogger$$dateFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$errorFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$errorFormatWithoutCause;

  private final java.lang.String akka$event$Logging$StdOutLogger$$warningFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$infoFormat;

  private final java.lang.String akka$event$Logging$StdOutLogger$$debugFormat;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public java.util.Date akka$event$Logging$StdOutLogger$$date();
    Code:
       0: aload_0
       1: getfield      #29                 // Field akka$event$Logging$StdOutLogger$$date:Ljava/util/Date;
       4: areturn

  public java.text.SimpleDateFormat akka$event$Logging$StdOutLogger$$dateFormat();
    Code:
       0: aload_0
       1: getfield      #34                 // Field akka$event$Logging$StdOutLogger$$dateFormat:Ljava/text/SimpleDateFormat;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$errorFormat();
    Code:
       0: aload_0
       1: getfield      #37                 // Field akka$event$Logging$StdOutLogger$$errorFormat:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$errorFormatWithoutCause();
    Code:
       0: aload_0
       1: getfield      #39                 // Field akka$event$Logging$StdOutLogger$$errorFormatWithoutCause:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$warningFormat();
    Code:
       0: aload_0
       1: getfield      #41                 // Field akka$event$Logging$StdOutLogger$$warningFormat:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$infoFormat();
    Code:
       0: aload_0
       1: getfield      #43                 // Field akka$event$Logging$StdOutLogger$$infoFormat:Ljava/lang/String;
       4: areturn

  public java.lang.String akka$event$Logging$StdOutLogger$$debugFormat();
    Code:
       0: aload_0
       1: getfield      #45                 // Field akka$event$Logging$StdOutLogger$$debugFormat:Ljava/lang/String;
       4: areturn

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$date_$eq(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field akka$event$Logging$StdOutLogger$$date:Ljava/util/Date;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$dateFormat_$eq(java.text.SimpleDateFormat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field akka$event$Logging$StdOutLogger$$dateFormat:Ljava/text/SimpleDateFormat;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$errorFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field akka$event$Logging$StdOutLogger$$errorFormat:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$errorFormatWithoutCause_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field akka$event$Logging$StdOutLogger$$errorFormatWithoutCause:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$warningFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field akka$event$Logging$StdOutLogger$$warningFormat:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$infoFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field akka$event$Logging$StdOutLogger$$infoFormat:Ljava/lang/String;
       5: return

  public void akka$event$Logging$StdOutLogger$_setter_$akka$event$Logging$StdOutLogger$$debugFormat_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field akka$event$Logging$StdOutLogger$$debugFormat:Ljava/lang/String;
       5: return

  public java.lang.String timestamp(akka.event.Logging$LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method akka/event/Logging$StdOutLogger$class.timestamp:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$LogEvent;)Ljava/lang/String;
       5: areturn

  public void print(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method akka/event/Logging$StdOutLogger$class.print:(Lakka/event/Logging$StdOutLogger;Ljava/lang/Object;)V
       5: return

  public void error(akka.event.Logging$Error);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // Method akka/event/Logging$StdOutLogger$class.error:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Error;)V
       5: return

  public void warning(akka.event.Logging$Warning);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method akka/event/Logging$StdOutLogger$class.warning:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Warning;)V
       5: return

  public void info(akka.event.Logging$Info);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // Method akka/event/Logging$StdOutLogger$class.info:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Info;)V
       5: return

  public void debug(akka.event.Logging$Debug);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // Method akka/event/Logging$StdOutLogger$class.debug:(Lakka/event/Logging$StdOutLogger;Lakka/event/Logging$Debug;)V
       5: return

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #98                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #101                // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #101                // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #111                // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #116                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #124                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #127                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #146                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #151                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #154                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #157                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #164                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #167                // class akka/event/Logging$DefaultLogger$$anonfun$receive$2
       3: dup
       4: aload_0
       5: invokespecial #171                // Method akka/event/Logging$DefaultLogger$$anonfun$receive$2."<init>":(Lakka/event/Logging$DefaultLogger;)V
       8: areturn

  public akka.event.Logging$DefaultLogger();
    Code:
       0: aload_0
       1: invokespecial #173                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #176                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
       8: aload_0
       9: invokestatic  #179                // Method akka/event/Logging$StdOutLogger$class.$init$:(Lakka/event/Logging$StdOutLogger;)V
      12: return
}
