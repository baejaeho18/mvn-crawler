Compiled from "Logging.scala"
public final class akka.event.LogSource$$anon$6 implements akka.event.LogSource<akka.actor.ActorRef> {
  public java.lang.Class getClazz(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method akka/event/LogSource$class.getClazz:(Lakka/event/LogSource;Ljava/lang/Object;)Ljava/lang/Class;
       5: areturn

  public java.lang.String genString(akka.actor.ActorRef);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
       4: invokevirtual #33                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.String genString(akka.actor.ActorRef, akka.actor.ActorSystem);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
       4: aload_2
       5: checkcast     #38                 // class akka/actor/ExtendedActorSystem
       8: invokevirtual #42                 // Method akka/actor/ExtendedActorSystem.provider:()Lakka/actor/ActorRefProvider;
      11: invokeinterface #48,  1           // InterfaceMethod akka/actor/ActorRefProvider.getDefaultAddress:()Lakka/actor/Address;
      16: invokeinterface #54,  2           // InterfaceMethod akka/actor/ActorPath.toStringWithAddress:(Lakka/actor/Address;)Ljava/lang/String;
      21: goto          59
      24: astore_3
      25: aload_3
      26: astore        4
      28: getstatic     #60                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      31: aload         4
      33: invokevirtual #64                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      36: astore        5
      38: aload         5
      40: invokevirtual #70                 // Method scala/Option.isEmpty:()Z
      43: ifeq          48
      46: aload_3
      47: athrow
      48: aload_1
      49: invokevirtual #29                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
      52: invokevirtual #33                 // Method java/lang/Object.toString:()Ljava/lang/String;
      55: astore        6
      57: aload         6
      59: areturn
    Exception table:
       from    to  target type
           0    24    24   any

  public java.lang.String genString(java.lang.Object, akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class akka/actor/ActorRef
       5: aload_2
       6: invokevirtual #81                 // Method genString:(Lakka/actor/ActorRef;Lakka/actor/ActorSystem;)Ljava/lang/String;
       9: areturn

  public java.lang.String genString(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class akka/actor/ActorRef
       5: invokevirtual #84                 // Method genString:(Lakka/actor/ActorRef;)Ljava/lang/String;
       8: areturn

  public akka.event.LogSource$$anon$6();
    Code:
       0: aload_0
       1: invokespecial #88                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #92                 // Method akka/event/LogSource$class.$init$:(Lakka/event/LogSource;)V
       8: return
}
