Compiled from "EventBus.scala"
public abstract class akka.event.ManagedActorClassification$class {
  public static akka.actor.ActorRef unsubscriber(akka.event.ManagedActorClassification);
    Code:
       0: getstatic     #13                 // Field akka/event/ActorClassificationUnsubscriber$.MODULE$:Lakka/event/ActorClassificationUnsubscriber$;
       3: aload_0
       4: invokeinterface #19,  1           // InterfaceMethod akka/event/ManagedActorClassification.system:()Lakka/actor/ActorSystem;
       9: aload_0
      10: getstatic     #13                 // Field akka/event/ActorClassificationUnsubscriber$.MODULE$:Lakka/event/ActorClassificationUnsubscriber$;
      13: invokevirtual #23                 // Method akka/event/ActorClassificationUnsubscriber$.start$default$3:()Z
      16: invokevirtual #27                 // Method akka/event/ActorClassificationUnsubscriber$.start:(Lakka/actor/ActorSystem;Lakka/event/ManagedActorClassification;Z)Lakka/actor/ActorRef;
      19: areturn

  public static final boolean associate(akka.event.ManagedActorClassification, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #43                 // class akka/event/ManagedActorClassification$ManagedActorClassificationMappings
      12: astore        4
      14: aload         4
      16: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
      19: aload_1
      20: invokeinterface #52,  2           // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      25: astore        5
      27: getstatic     #57                 // Field scala/None$.MODULE$:Lscala/None$;
      30: aload         5
      32: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          89
      38: aload         4
      40: aload_1
      41: aload_2
      42: invokevirtual #65                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.add:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lakka/event/ManagedActorClassification$ManagedActorClassificationMappings;
      45: astore        7
      47: aload_0
      48: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
      53: aload         4
      55: aload         7
      57: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          80
      63: aload_0
      64: aload_2
      65: aload         7
      67: invokevirtual #73                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.seqNr:()I
      70: invokeinterface #77,  3           // InterfaceMethod akka/event/ManagedActorClassification.registerWithUnsubscriber:(Lakka/actor/ActorRef;I)Z
      75: istore        6
      77: goto          215
      80: aload_0
      81: aload_1
      82: aload_2
      83: astore_2
      84: astore_1
      85: astore_0
      86: goto          0
      89: aload         5
      91: instanceof    #79                 // class scala/Some
      94: ifeq          227
      97: aload         5
      99: checkcast     #79                 // class scala/Some
     102: astore        8
     104: aload         8
     106: invokevirtual #82                 // Method scala/Some.x:()Ljava/lang/Object;
     109: checkcast     #84                 // class scala/collection/immutable/TreeSet
     112: astore        9
     114: aload         9
     116: aload_1
     117: invokevirtual #87                 // Method scala/collection/immutable/TreeSet.contains:(Ljava/lang/Object;)Z
     120: ifeq          127
     123: iconst_0
     124: goto          213
     127: aload         4
     129: aload_1
     130: aload_2
     131: invokevirtual #65                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.add:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lakka/event/ManagedActorClassification$ManagedActorClassificationMappings;
     134: astore        10
     136: aload         4
     138: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
     141: aload         10
     143: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
     146: astore        12
     148: dup
     149: ifnonnull     161
     152: pop
     153: aload         12
     155: ifnull        169
     158: goto          173
     161: aload         12
     163: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     166: ifeq          173
     169: iconst_1
     170: goto          174
     173: iconst_0
     174: istore        11
     176: iload         11
     178: ifeq          185
     181: iconst_0
     182: goto          213
     185: aload_0
     186: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
     191: aload         4
     193: aload         10
     195: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     198: ifeq          218
     201: aload_0
     202: aload_2
     203: aload         10
     205: invokevirtual #73                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.seqNr:()I
     208: invokeinterface #77,  3           // InterfaceMethod akka/event/ManagedActorClassification.registerWithUnsubscriber:(Lakka/actor/ActorRef;I)Z
     213: istore        6
     215: iload         6
     217: ireturn
     218: aload_0
     219: aload_1
     220: aload_2
     221: astore_2
     222: astore_1
     223: astore_0
     224: goto          0
     227: new           #89                 // class scala/MatchError
     230: dup
     231: aload         5
     233: invokespecial #93                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     236: athrow

  public static final void dissociate(akka.event.ManagedActorClassification, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #112                // Method dissociateAsMonitored$1:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #115                // Method dissociateAsMonitor$1:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;)V
      10: return
      11: astore_2
      12: aload_0
      13: aload_1
      14: invokestatic  #115                // Method dissociateAsMonitor$1:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;)V
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           0     5    11   any

  public static final boolean dissociate(akka.event.ManagedActorClassification, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #43                 // class akka/event/ManagedActorClassification$ManagedActorClassificationMappings
      12: astore        4
      14: aload         4
      16: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
      19: aload_1
      20: invokeinterface #52,  2           // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      25: astore        5
      27: getstatic     #57                 // Field scala/None$.MODULE$:Lscala/None$;
      30: aload         5
      32: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          44
      38: iconst_0
      39: istore        6
      41: goto          155
      44: aload         5
      46: instanceof    #79                 // class scala/Some
      49: ifeq          167
      52: aload         5
      54: checkcast     #79                 // class scala/Some
      57: astore        7
      59: aload         7
      61: invokevirtual #82                 // Method scala/Some.x:()Ljava/lang/Object;
      64: checkcast     #84                 // class scala/collection/immutable/TreeSet
      67: astore        8
      69: aload         4
      71: aload_1
      72: aload_2
      73: invokevirtual #121                // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.remove:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lakka/event/ManagedActorClassification$ManagedActorClassificationMappings;
      76: astore        9
      78: aload         9
      80: aload_1
      81: invokevirtual #124                // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.get:(Lakka/actor/ActorRef;)Lscala/collection/immutable/TreeSet;
      84: astore        10
      86: aload         8
      88: invokevirtual #127                // Method scala/collection/immutable/TreeSet.isEmpty:()Z
      91: ifne          121
      94: aload         8
      96: aload         10
      98: astore        11
     100: dup
     101: ifnonnull     113
     104: pop
     105: aload         11
     107: ifnull        121
     110: goto          125
     113: aload         11
     115: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     118: ifeq          125
     121: iconst_0
     122: goto          153
     125: aload_0
     126: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
     131: aload         4
     133: aload         9
     135: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     138: ifeq          158
     141: aload_0
     142: aload_2
     143: aload         9
     145: invokevirtual #73                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.seqNr:()I
     148: invokeinterface #130,  3          // InterfaceMethod akka/event/ManagedActorClassification.unregisterFromUnsubscriber:(Lakka/actor/ActorRef;I)Z
     153: istore        6
     155: iload         6
     157: ireturn
     158: aload_0
     159: aload_1
     160: aload_2
     161: astore_2
     162: astore_1
     163: astore_0
     164: goto          0
     167: new           #89                 // class scala/MatchError
     170: dup
     171: aload         5
     173: invokespecial #93                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     176: athrow

  public static void publish(akka.event.ManagedActorClassification, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #43                 // class akka/event/ManagedActorClassification$ManagedActorClassificationMappings
      12: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
      15: aload_0
      16: aload_1
      17: invokeinterface #138,  2          // InterfaceMethod akka/event/ManagedActorClassification.classify:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      22: invokeinterface #52,  2           // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      27: astore_2
      28: getstatic     #57                 // Field scala/None$.MODULE$:Lscala/None$;
      31: aload_2
      32: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          45
      38: getstatic     #144                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      41: astore_3
      42: goto          86
      45: aload_2
      46: instanceof    #79                 // class scala/Some
      49: ifeq          87
      52: aload_2
      53: checkcast     #79                 // class scala/Some
      56: astore        4
      58: aload         4
      60: invokevirtual #82                 // Method scala/Some.x:()Ljava/lang/Object;
      63: checkcast     #84                 // class scala/collection/immutable/TreeSet
      66: astore        5
      68: aload         5
      70: new           #146                // class akka/event/ManagedActorClassification$$anonfun$publish$2
      73: dup
      74: aload_0
      75: aload_1
      76: invokespecial #148                // Method akka/event/ManagedActorClassification$$anonfun$publish$2."<init>":(Lakka/event/ManagedActorClassification;Ljava/lang/Object;)V
      79: invokevirtual #152                // Method scala/collection/immutable/TreeSet.foreach:(Lscala/Function1;)V
      82: getstatic     #144                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      85: astore_3
      86: return
      87: new           #89                 // class scala/MatchError
      90: dup
      91: aload_2
      92: invokespecial #93                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      95: athrow

  public static boolean subscribe(akka.event.ManagedActorClassification, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #158                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #160                // String Subscriber is null
      10: invokespecial #163                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #158                // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #165                // String Classifier is null
      24: invokespecial #163                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_2
      30: aload_1
      31: invokeinterface #168,  3          // InterfaceMethod akka/event/ManagedActorClassification.associate:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      36: ireturn

  public static boolean unsubscribe(akka.event.ManagedActorClassification, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #158                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #160                // String Subscriber is null
      10: invokespecial #163                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #158                // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #165                // String Classifier is null
      24: invokespecial #163                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_2
      30: aload_1
      31: invokeinterface #173,  3          // InterfaceMethod akka/event/ManagedActorClassification.dissociate:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      36: ireturn

  public static void unsubscribe(akka.event.ManagedActorClassification, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #158                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #160                // String Subscriber is null
      10: invokespecial #163                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokeinterface #177,  2          // InterfaceMethod akka/event/ManagedActorClassification.dissociate:(Lakka/actor/ActorRef;)V
      21: return

  public static boolean registerWithUnsubscriber(akka.event.ManagedActorClassification, akka.actor.ActorRef, int);
    Code:
       0: getstatic     #183                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: invokeinterface #186,  1          // InterfaceMethod akka/event/ManagedActorClassification.unsubscriber:()Lakka/actor/ActorRef;
       9: invokevirtual #190                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      12: astore_3
      13: new           #192                // class akka/event/ActorClassificationUnsubscriber$Register
      16: dup
      17: aload_1
      18: iload_2
      19: invokespecial #195                // Method akka/event/ActorClassificationUnsubscriber$Register."<init>":(Lakka/actor/ActorRef;I)V
      22: astore        4
      24: aload_3
      25: aload         4
      27: invokeinterface #200,  2          // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      32: astore        5
      34: aload_3
      35: aload         4
      37: aload         5
      39: invokeinterface #204,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      44: iconst_1
      45: ireturn

  public static boolean unregisterFromUnsubscriber(akka.event.ManagedActorClassification, akka.actor.ActorRef, int);
    Code:
       0: getstatic     #183                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: invokeinterface #186,  1          // InterfaceMethod akka/event/ManagedActorClassification.unsubscriber:()Lakka/actor/ActorRef;
       9: invokevirtual #190                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      12: astore_3
      13: new           #212                // class akka/event/ActorClassificationUnsubscriber$Unregister
      16: dup
      17: aload_1
      18: iload_2
      19: invokespecial #213                // Method akka/event/ActorClassificationUnsubscriber$Unregister."<init>":(Lakka/actor/ActorRef;I)V
      22: astore        4
      24: aload_3
      25: aload         4
      27: invokeinterface #200,  2          // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      32: astore        5
      34: aload_3
      35: aload         4
      37: aload         5
      39: invokeinterface #204,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      44: iconst_1
      45: ireturn

  private static final void dissociateAsMonitored$1(akka.event.ManagedActorClassification, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #43                 // class akka/event/ManagedActorClassification$ManagedActorClassificationMappings
      12: astore_3
      13: aload_3
      14: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
      17: aload_1
      18: invokeinterface #218,  2          // InterfaceMethod scala/collection/immutable/Map.contains:(Ljava/lang/Object;)Z
      23: ifeq          61
      26: aload_3
      27: aload_1
      28: invokevirtual #221                // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.remove:(Lakka/actor/ActorRef;)Lakka/event/ManagedActorClassification$ManagedActorClassificationMappings;
      31: astore        4
      33: aload_0
      34: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
      39: aload_3
      40: aload         4
      42: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ifeq          54
      48: getstatic     #144                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      51: goto          64
      54: aload_0
      55: aload_1
      56: astore_1
      57: astore_0
      58: goto          0
      61: getstatic     #144                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      64: pop
      65: return

  private static final void dissociateAsMonitor$1(akka.event.ManagedActorClassification, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$$mappings:()Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #43                 // class akka/event/ManagedActorClassification$ManagedActorClassificationMappings
      12: astore_2
      13: aload_2
      14: invokevirtual #47                 // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings.backing:()Lscala/collection/immutable/Map;
      17: invokeinterface #225,  1          // InterfaceMethod scala/collection/immutable/Map.iterator:()Lscala/collection/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #230,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      29: ifeq          167
      32: aload_3
      33: invokeinterface #233,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #235                // class scala/Tuple2
      41: astore        5
      43: aload         5
      45: ifnull        157
      48: aload         5
      50: invokevirtual #238                // Method scala/Tuple2._1:()Ljava/lang/Object;
      53: checkcast     #105                // class akka/actor/ActorRef
      56: astore        6
      58: aload         5
      60: invokevirtual #241                // Method scala/Tuple2._2:()Ljava/lang/Object;
      63: checkcast     #84                 // class scala/collection/immutable/TreeSet
      66: astore        7
      68: new           #235                // class scala/Tuple2
      71: dup
      72: aload         6
      74: aload         7
      76: invokespecial #244                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      79: astore        8
      81: aload         8
      83: astore        4
      85: aload         4
      87: invokevirtual #238                // Method scala/Tuple2._1:()Ljava/lang/Object;
      90: checkcast     #105                // class akka/actor/ActorRef
      93: astore        9
      95: aload         4
      97: invokevirtual #241                // Method scala/Tuple2._2:()Ljava/lang/Object;
     100: checkcast     #84                 // class scala/collection/immutable/TreeSet
     103: astore        10
     105: aload         10
     107: astore        11
     109: aload         11
     111: ifnonnull     122
     114: getstatic     #144                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     117: astore        12
     119: goto          151
     122: aload         11
     124: aload_1
     125: invokevirtual #87                 // Method scala/collection/immutable/TreeSet.contains:(Ljava/lang/Object;)Z
     128: ifeq          146
     131: aload_0
     132: aload         9
     134: aload_1
     135: invokeinterface #173,  3          // InterfaceMethod akka/event/ManagedActorClassification.dissociate:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
     140: invokestatic  #250                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     143: goto          149
     146: getstatic     #144                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     149: astore        12
     151: aload         12
     153: pop
     154: goto          23
     157: new           #89                 // class scala/MatchError
     160: dup
     161: aload         5
     163: invokespecial #93                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     166: athrow
     167: return

  public static void $init$(akka.event.ManagedActorClassification);
    Code:
       0: aload_0
       1: new           #37                 // class java/util/concurrent/atomic/AtomicReference
       4: dup
       5: new           #43                 // class akka/event/ManagedActorClassification$ManagedActorClassificationMappings
       8: dup
       9: aload_0
      10: iconst_0
      11: getstatic     #261                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: invokevirtual #265                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      17: invokevirtual #270                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
      20: invokespecial #273                // Method akka/event/ManagedActorClassification$ManagedActorClassificationMappings."<init>":(Lakka/event/ManagedActorClassification;ILscala/collection/immutable/Map;)V
      23: invokespecial #274                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      26: invokeinterface #278,  2          // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$_setter_$akka$event$ManagedActorClassification$$mappings_$eq:(Ljava/util/concurrent/atomic/AtomicReference;)V
      31: aload_0
      32: getstatic     #283                // Field scala/collection/immutable/TreeSet$.MODULE$:Lscala/collection/immutable/TreeSet$;
      35: getstatic     #288                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
      38: getstatic     #261                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      41: invokevirtual #292                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      44: invokevirtual #296                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
      47: invokevirtual #299                // Method scala/collection/immutable/TreeSet$.empty:(Lscala/math/Ordering;)Lscala/collection/immutable/TreeSet;
      50: invokeinterface #303,  2          // InterfaceMethod akka/event/ManagedActorClassification.akka$event$ManagedActorClassification$_setter_$akka$event$ManagedActorClassification$$empty_$eq:(Lscala/collection/immutable/TreeSet;)V
      55: return
}
