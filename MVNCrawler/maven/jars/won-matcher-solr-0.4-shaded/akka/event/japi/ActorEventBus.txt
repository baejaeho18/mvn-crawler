Compiled from "EventBusJavaAPI.scala"
public abstract class akka.event.japi.ActorEventBus<E> implements akka.event.japi.EventBus<E, akka.actor.ActorRef, akka.actor.ActorRef> {
  private final akka.event.ActorEventBus bus;

  private akka.event.ActorEventBus bus();
    Code:
       0: aload_0
       1: getfield      #16                 // Field bus:Lakka/event/ActorEventBus;
       4: areturn

  public abstract int mapSize();

  public abstract akka.actor.ActorRef classify(E);

  public boolean subscribe(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method bus:()Lakka/event/ActorEventBus;
       4: checkcast     #28                 // class akka/event/ActorClassification
       7: aload_1
       8: aload_2
       9: invokeinterface #30,  3           // InterfaceMethod akka/event/ActorClassification.subscribe:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      14: ireturn

  public boolean unsubscribe(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method bus:()Lakka/event/ActorEventBus;
       4: checkcast     #28                 // class akka/event/ActorClassification
       7: aload_1
       8: aload_2
       9: invokeinterface #36,  3           // InterfaceMethod akka/event/ActorClassification.unsubscribe:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      14: ireturn

  public void unsubscribe(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method bus:()Lakka/event/ActorEventBus;
       4: checkcast     #28                 // class akka/event/ActorClassification
       7: aload_1
       8: invokeinterface #40,  2           // InterfaceMethod akka/event/ActorClassification.unsubscribe:(Lakka/actor/ActorRef;)V
      13: return

  public void publish(E);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method bus:()Lakka/event/ActorEventBus;
       4: checkcast     #28                 // class akka/event/ActorClassification
       7: aload_1
       8: invokeinterface #44,  2           // InterfaceMethod akka/event/ActorClassification.publish:(Ljava/lang/Object;)V
      13: return

  public void unsubscribe(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class akka/actor/ActorRef
       5: invokevirtual #49                 // Method unsubscribe:(Lakka/actor/ActorRef;)V
       8: return

  public boolean unsubscribe(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class akka/actor/ActorRef
       5: aload_2
       6: checkcast     #48                 // class akka/actor/ActorRef
       9: invokevirtual #51                 // Method unsubscribe:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      12: ireturn

  public boolean subscribe(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class akka/actor/ActorRef
       5: aload_2
       6: checkcast     #48                 // class akka/actor/ActorRef
       9: invokevirtual #52                 // Method subscribe:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      12: ireturn

  public akka.event.japi.ActorEventBus();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #58                 // class akka/event/japi/ActorEventBus$$anon$2
       8: dup
       9: aload_0
      10: invokespecial #61                 // Method akka/event/japi/ActorEventBus$$anon$2."<init>":(Lakka/event/japi/ActorEventBus;)V
      13: putfield      #16                 // Field bus:Lakka/event/ActorEventBus;
      16: return
}
