Compiled from "EventBusJavaAPI.scala"
public final class akka.event.japi.ManagedActorEventBus$$anon$1 implements akka.event.ActorEventBus,akka.event.ManagedActorClassification,akka.event.ActorClassifier {
  private final akka.actor.ActorSystem system;

  private final akka.event.japi.ManagedActorEventBus $outer;

  private final java.util.concurrent.atomic.AtomicReference<akka.event.ManagedActorClassification$ManagedActorClassificationMappings> akka$event$ManagedActorClassification$$mappings;

  private final scala.collection.immutable.TreeSet<akka.actor.ActorRef> akka$event$ManagedActorClassification$$empty;

  private final akka.actor.ActorRef unsubscriber;

  private volatile boolean bitmap$0;

  public java.util.concurrent.atomic.AtomicReference<akka.event.ManagedActorClassification$ManagedActorClassificationMappings> akka$event$ManagedActorClassification$$mappings();
    Code:
       0: aload_0
       1: getfield      #30                 // Field akka$event$ManagedActorClassification$$mappings:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public scala.collection.immutable.TreeSet<akka.actor.ActorRef> akka$event$ManagedActorClassification$$empty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field akka$event$ManagedActorClassification$$empty:Lscala/collection/immutable/TreeSet;
       4: areturn

  private akka.actor.ActorRef unsubscriber$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #39                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #44                 // Method akka/event/ManagedActorClassification$class.unsubscriber:(Lakka/event/ManagedActorClassification;)Lakka/actor/ActorRef;
      16: putfield      #46                 // Field unsubscriber:Lakka/actor/ActorRef;
      19: aload_0
      20: iconst_1
      21: putfield      #39                 // Field bitmap$0:Z
      24: getstatic     #52                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: pop
      28: aload_1
      29: monitorexit
      30: aload_0
      31: getfield      #46                 // Field unsubscriber:Lakka/actor/ActorRef;
      34: areturn
      35: aload_1
      36: monitorexit
      37: athrow
    Exception table:
       from    to  target type
           4    30    35   any

  public akka.actor.ActorRef unsubscriber();
    Code:
       0: aload_0
       1: getfield      #39                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #46                 // Field unsubscriber:Lakka/actor/ActorRef;
      11: goto          18
      14: aload_0
      15: invokespecial #56                 // Method unsubscriber$lzycompute:()Lakka/actor/ActorRef;
      18: areturn

  public void akka$event$ManagedActorClassification$_setter_$akka$event$ManagedActorClassification$$mappings_$eq(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field akka$event$ManagedActorClassification$$mappings:Ljava/util/concurrent/atomic/AtomicReference;
       5: return

  public void akka$event$ManagedActorClassification$_setter_$akka$event$ManagedActorClassification$$empty_$eq(scala.collection.immutable.TreeSet);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field akka$event$ManagedActorClassification$$empty:Lscala/collection/immutable/TreeSet;
       5: return

  public final boolean associate(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // Method akka/event/ManagedActorClassification$class.associate:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
       6: ireturn

  public final void dissociate(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #75                 // Method akka/event/ManagedActorClassification$class.dissociate:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;)V
       5: return

  public final boolean dissociate(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // Method akka/event/ManagedActorClassification$class.dissociate:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
       6: ireturn

  public void publish(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method akka/event/ManagedActorClassification$class.publish:(Lakka/event/ManagedActorClassification;Ljava/lang/Object;)V
       5: return

  public boolean subscribe(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // Method akka/event/ManagedActorClassification$class.subscribe:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
       6: ireturn

  public boolean unsubscribe(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // Method akka/event/ManagedActorClassification$class.unsubscribe:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
       6: ireturn

  public void unsubscribe(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method akka/event/ManagedActorClassification$class.unsubscribe:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;)V
       5: return

  public boolean registerWithUnsubscriber(akka.actor.ActorRef, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #101                // Method akka/event/ManagedActorClassification$class.registerWithUnsubscriber:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;I)Z
       6: ireturn

  public boolean unregisterFromUnsubscriber(akka.actor.ActorRef, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #106                // Method akka/event/ManagedActorClassification$class.unregisterFromUnsubscriber:(Lakka/event/ManagedActorClassification;Lakka/actor/ActorRef;I)Z
       6: ireturn

  public int compareSubscribers(akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #113                // Method akka/event/ActorEventBus$class.compareSubscribers:(Lakka/event/ActorEventBus;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)I
       6: ireturn

  public akka.actor.ActorSystem system();
    Code:
       0: aload_0
       1: getfield      #118                // Field system:Lakka/actor/ActorSystem;
       4: areturn

  public int mapSize();
    Code:
       0: aload_0
       1: getfield      #122                // Field $outer:Lakka/event/japi/ManagedActorEventBus;
       4: invokevirtual #124                // Method akka/event/japi/ManagedActorEventBus.mapSize:()I
       7: ireturn

  public akka.actor.ActorRef classify(E);
    Code:
       0: aload_0
       1: getfield      #122                // Field $outer:Lakka/event/japi/ManagedActorEventBus;
       4: aload_1
       5: invokevirtual #128                // Method akka/event/japi/ManagedActorEventBus.classify:(Ljava/lang/Object;)Lakka/actor/ActorRef;
       8: areturn

  public void unsubscribe(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class akka/actor/ActorRef
       5: invokevirtual #130                // Method unsubscribe:(Lakka/actor/ActorRef;)V
       8: return

  public boolean unsubscribe(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class akka/actor/ActorRef
       5: aload_2
       6: checkcast     #58                 // class akka/actor/ActorRef
       9: invokevirtual #133                // Method unsubscribe:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      12: ireturn

  public boolean subscribe(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class akka/actor/ActorRef
       5: aload_2
       6: checkcast     #58                 // class akka/actor/ActorRef
       9: invokevirtual #135                // Method subscribe:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Z
      12: ireturn

  public akka.event.japi.ManagedActorEventBus$$anon$1(akka.event.japi.ManagedActorEventBus<E>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #122                // Field $outer:Lakka/event/japi/ManagedActorEventBus;
      11: aload_0
      12: invokespecial #140                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #144                // Method akka/event/ActorEventBus$class.$init$:(Lakka/event/ActorEventBus;)V
      19: aload_0
      20: invokestatic  #147                // Method akka/event/ManagedActorClassification$class.$init$:(Lakka/event/ManagedActorClassification;)V
      23: aload_0
      24: aload_1
      25: getfield      #150                // Field akka/event/japi/ManagedActorEventBus.akka$event$japi$ManagedActorEventBus$$system:Lakka/actor/ActorSystem;
      28: putfield      #118                // Field system:Lakka/actor/ActorSystem;
      31: return
}
