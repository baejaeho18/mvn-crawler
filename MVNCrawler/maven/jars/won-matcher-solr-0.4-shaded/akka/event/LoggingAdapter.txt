Compiled from "Logging.scala"
public interface akka.event.LoggingAdapter {
  public abstract scala.collection.immutable.Map<java.lang.String, java.lang.Object> mdc();

  public abstract boolean isErrorEnabled();

  public abstract boolean isWarningEnabled();

  public abstract boolean isInfoEnabled();

  public abstract boolean isDebugEnabled();

  public abstract void notifyError(java.lang.String);

  public abstract void notifyError(java.lang.Throwable, java.lang.String);

  public abstract void notifyWarning(java.lang.String);

  public abstract void notifyInfo(java.lang.String);

  public abstract void notifyDebug(java.lang.String);

  public abstract void error(java.lang.Throwable, java.lang.String);

  public abstract void error(java.lang.Throwable, java.lang.String, java.lang.Object);

  public abstract void error(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.Throwable, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.String);

  public abstract void error(java.lang.String, java.lang.Object);

  public abstract void error(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void warning(java.lang.String);

  public abstract void warning(java.lang.String, java.lang.Object);

  public abstract void warning(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void warning(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void warning(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void info(java.lang.String);

  public abstract void info(java.lang.String, java.lang.Object);

  public abstract void info(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void debug(java.lang.String);

  public abstract void debug(java.lang.String, java.lang.Object);

  public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void log(int, java.lang.String);

  public abstract void log(int, java.lang.String, java.lang.Object);

  public abstract void log(int, java.lang.String, java.lang.Object, java.lang.Object);

  public abstract void log(int, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void log(int, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract boolean isEnabled(int);

  public abstract void notifyLog(int, java.lang.String);

  public abstract java.lang.String format(java.lang.String, scala.collection.Seq<java.lang.Object>);
}
