Compiled from "Logging.scala"
public class akka.event.Logging$Error$ implements scala.Serializable {
  public static final akka.event.Logging$Error$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/event/Logging$Error$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public akka.event.Logging$Error apply(java.lang.String, java.lang.Class<?>, java.lang.Object);
    Code:
       0: new           #18                 // class akka/event/Logging$Error
       3: dup
       4: getstatic     #23                 // Field akka/event/Logging$Error$NoCause$.MODULE$:Lakka/event/Logging$Error$NoCause$;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #26                 // Method akka/event/Logging$Error."<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      13: areturn

  public akka.event.Logging$Error2 apply(java.lang.Throwable, java.lang.String, java.lang.Class<?>, java.lang.Object, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #36                 // class akka/event/Logging$Error2
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokespecial #39                 // Method akka/event/Logging$Error2."<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lscala/collection/immutable/Map;)V
      14: areturn

  public akka.event.Logging$Error2 apply(java.lang.String, java.lang.Class<?>, java.lang.Object, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #36                 // class akka/event/Logging$Error2
       3: dup
       4: getstatic     #23                 // Field akka/event/Logging$Error$NoCause$.MODULE$:Lakka/event/Logging$Error$NoCause$;
       7: aload_1
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokespecial #39                 // Method akka/event/Logging$Error2."<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lscala/collection/immutable/Map;)V
      15: areturn

  public java.lang.Object apply$default$4();
    Code:
       0: ldc           #48                 // String
       2: areturn

  public akka.event.Logging$Error apply(java.lang.Throwable, java.lang.String, java.lang.Class<?>, java.lang.Object);
    Code:
       0: new           #18                 // class akka/event/Logging$Error
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #26                 // Method akka/event/Logging$Error."<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      12: areturn

  public scala.Option<scala.Tuple4<java.lang.Throwable, java.lang.String, java.lang.Class<java.lang.Object>, java.lang.Object>> unapply(akka.event.Logging$Error);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #56                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          40
      10: new           #58                 // class scala/Some
      13: dup
      14: new           #60                 // class scala/Tuple4
      17: dup
      18: aload_1
      19: invokevirtual #63                 // Method akka/event/Logging$Error.cause:()Ljava/lang/Throwable;
      22: aload_1
      23: invokevirtual #66                 // Method akka/event/Logging$Error.logSource:()Ljava/lang/String;
      26: aload_1
      27: invokevirtual #69                 // Method akka/event/Logging$Error.logClass:()Ljava/lang/Class;
      30: aload_1
      31: invokevirtual #71                 // Method akka/event/Logging$Error.message:()Ljava/lang/Object;
      34: invokespecial #74                 // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      37: invokespecial #77                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      40: areturn

  public java.lang.Object $lessinit$greater$default$4();
    Code:
       0: ldc           #48                 // String
       2: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #85                 // Field MODULE$:Lakka/event/Logging$Error$;
       3: areturn

  public akka.event.Logging$Error$();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #85                 // Field MODULE$:Lakka/event/Logging$Error$;
       8: return
}
