Compiled from "LoggingReceive.scala"
public class akka.event.LoggingReceive implements scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> {
  private final scala.Option<java.lang.Object> source;

  private final scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> r;

  private final scala.Option<java.lang.String> label;

  public final akka.actor.ActorContext akka$event$LoggingReceive$$context;

  public static scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> withLabel(java.lang.String, scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, akka.actor.ActorContext);
    Code:
       0: getstatic     #19                 // Field akka/event/LoggingReceive$.MODULE$:Lakka/event/LoggingReceive$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #21                 // Method akka/event/LoggingReceive$.withLabel:(Ljava/lang/String;Lscala/PartialFunction;Lakka/actor/ActorContext;)Lscala/PartialFunction;
       9: areturn

  public static scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> create(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, akka.actor.ActorContext);
    Code:
       0: getstatic     #19                 // Field akka/event/LoggingReceive$.MODULE$:Lakka/event/LoggingReceive$;
       3: aload_0
       4: aload_1
       5: invokevirtual #25                 // Method akka/event/LoggingReceive$.create:(Lscala/PartialFunction;Lakka/actor/ActorContext;)Lscala/PartialFunction;
       8: areturn

  public <A1, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.Object, C> andThen(scala.Function1<scala.runtime.BoxedUnit, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<java.lang.Object, scala.Option<scala.runtime.BoxedUnit>> lift();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public <A1, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<java.lang.Object, java.lang.Object> runWith(scala.Function1<scala.runtime.BoxedUnit, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #78                 // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #85                 // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #90                 // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #95                 // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #100                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #105                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #110                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #116                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #121                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #126                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #131                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #136                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #141                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #147                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #152                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #157                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #162                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #167                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #172                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #178                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #183                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #188                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #193                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #198                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, scala.runtime.BoxedUnit> compose(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #208                // Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
       4: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #212                // Field r:Lscala/PartialFunction;
       4: aload_1
       5: invokeinterface #214,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
      10: istore_2
      11: getstatic     #219                // Field akka/event/Logging$LogLevel$.MODULE$:Lakka/event/Logging$LogLevel$;
      14: aload_0
      15: getfield      #221                // Field akka$event$LoggingReceive$$context:Lakka/actor/ActorContext;
      18: invokeinterface #227,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      23: invokevirtual #233                // Method akka/actor/ActorSystem.eventStream:()Lakka/event/EventStream;
      26: invokevirtual #239                // Method akka/event/EventStream.logLevel:()I
      29: getstatic     #244                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
      32: invokevirtual #247                // Method akka/event/Logging$.DebugLevel:()I
      35: invokevirtual #251                // Method akka/event/Logging$LogLevel$.$greater$eq$extension:(II)Z
      38: ifeq          353
      41: aload_0
      42: getfield      #253                // Field source:Lscala/Option;
      45: new           #255                // class akka/event/LoggingReceive$$anonfun$1
      48: dup
      49: aload_0
      50: invokespecial #259                // Method akka/event/LoggingReceive$$anonfun$1."<init>":(Lakka/event/LoggingReceive;)V
      53: invokevirtual #265                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      56: astore_3
      57: getstatic     #270                // Field akka/event/LogSource$.MODULE$:Lakka/event/LogSource$;
      60: aload_3
      61: invokevirtual #274                // Method akka/event/LogSource$.fromAnyRef:(Ljava/lang/Object;)Lscala/Tuple2;
      64: astore        5
      66: aload         5
      68: ifnull        343
      71: aload         5
      73: invokevirtual #280                // Method scala/Tuple2._1:()Ljava/lang/Object;
      76: checkcast     #282                // class java/lang/String
      79: astore        6
      81: aload         5
      83: invokevirtual #285                // Method scala/Tuple2._2:()Ljava/lang/Object;
      86: checkcast     #287                // class java/lang/Class
      89: astore        7
      91: new           #276                // class scala/Tuple2
      94: dup
      95: aload         6
      97: aload         7
      99: invokespecial #290                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     102: astore        8
     104: aload         8
     106: astore        4
     108: aload         4
     110: invokevirtual #280                // Method scala/Tuple2._1:()Ljava/lang/Object;
     113: checkcast     #282                // class java/lang/String
     116: astore        9
     118: aload         4
     120: invokevirtual #285                // Method scala/Tuple2._2:()Ljava/lang/Object;
     123: checkcast     #287                // class java/lang/Class
     126: astore        10
     128: new           #292                // class scala/collection/mutable/StringBuilder
     131: dup
     132: invokespecial #295                // Method scala/collection/mutable/StringBuilder."<init>":()V
     135: ldc_w         #297                // String received
     138: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     141: iload_2
     142: ifeq          151
     145: ldc_w         #303                // String handled
     148: goto          154
     151: ldc_w         #305                // String unhandled
     154: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     157: ldc_w         #307                // String  message
     160: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     163: aload_1
     164: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     167: ldc_w         #309                // String  from
     170: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     173: aload_0
     174: getfield      #221                // Field akka$event$LoggingReceive$$context:Lakka/actor/ActorContext;
     177: invokeinterface #313,  1          // InterfaceMethod akka/actor/ActorContext.sender:()Lakka/actor/ActorRef;
     182: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     185: aload_0
     186: getfield      #315                // Field label:Lscala/Option;
     189: astore        12
     191: aload         12
     193: instanceof    #317                // class scala/Some
     196: ifeq          242
     199: aload         12
     201: checkcast     #317                // class scala/Some
     204: astore        13
     206: aload         13
     208: invokevirtual #319                // Method scala/Some.x:()Ljava/lang/Object;
     211: checkcast     #282                // class java/lang/String
     214: astore        14
     216: new           #292                // class scala/collection/mutable/StringBuilder
     219: dup
     220: invokespecial #295                // Method scala/collection/mutable/StringBuilder."<init>":()V
     223: ldc_w         #321                // String  in state
     226: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     229: aload         14
     231: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     234: invokevirtual #323                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     237: astore        15
     239: goto          247
     242: ldc_w         #325                // String
     245: astore        15
     247: aload         15
     249: invokevirtual #301                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     252: invokevirtual #323                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     255: astore        11
     257: aload_3
     258: astore        17
     260: aload         17
     262: instanceof    #327                // class akka/actor/DiagnosticActorLogging
     265: ifeq          304
     268: aload         17
     270: checkcast     #327                // class akka/actor/DiagnosticActorLogging
     273: astore        18
     275: getstatic     #332                // Field akka/event/Logging$Debug$.MODULE$:Lakka/event/Logging$Debug$;
     278: aload         9
     280: aload         10
     282: aload         11
     284: aload         18
     286: invokeinterface #336,  1          // InterfaceMethod akka/actor/DiagnosticActorLogging.log:()Lakka/event/DiagnosticLoggingAdapter;
     291: invokeinterface #342,  1          // InterfaceMethod akka/event/DiagnosticLoggingAdapter.mdc:()Lscala/collection/immutable/Map;
     296: invokevirtual #346                // Method akka/event/Logging$Debug$.apply:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lscala/collection/immutable/Map;)Lakka/event/Logging$Debug2;
     299: astore        19
     301: goto          319
     304: new           #348                // class akka/event/Logging$Debug
     307: dup
     308: aload         9
     310: aload         10
     312: aload         11
     314: invokespecial #351                // Method akka/event/Logging$Debug."<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
     317: astore        19
     319: aload         19
     321: astore        16
     323: aload_0
     324: getfield      #221                // Field akka$event$LoggingReceive$$context:Lakka/actor/ActorContext;
     327: invokeinterface #227,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
     332: invokevirtual #233                // Method akka/actor/ActorSystem.eventStream:()Lakka/event/EventStream;
     335: aload         16
     337: invokevirtual #355                // Method akka/event/EventStream.publish:(Ljava/lang/Object;)V
     340: goto          353
     343: new           #357                // class scala/MatchError
     346: dup
     347: aload         5
     349: invokespecial #359                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     352: athrow
     353: iload_2
     354: ireturn

  public void apply(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #212                // Field r:Lscala/PartialFunction;
       4: aload_1
       5: invokeinterface #373,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #375                // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #377                // Method apply:(Ljava/lang/Object;)V
       5: getstatic     #383                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  public akka.event.LoggingReceive(scala.Option<java.lang.Object>, scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, scala.Option<java.lang.String>, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #253                // Field source:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #212                // Field r:Lscala/PartialFunction;
      10: aload_0
      11: aload_3
      12: putfield      #315                // Field label:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #221                // Field akka$event$LoggingReceive$$context:Lakka/actor/ActorContext;
      21: aload_0
      22: invokespecial #385                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #389                // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      29: aload_0
      30: invokestatic  #392                // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      33: return

  public akka.event.LoggingReceive(scala.Option<java.lang.Object>, scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #399                // Field scala/None$.MODULE$:Lscala/None$;
       6: aload_3
       7: invokespecial #401                // Method "<init>":(Lscala/Option;Lscala/PartialFunction;Lscala/Option;Lakka/actor/ActorContext;)V
      10: return
}
