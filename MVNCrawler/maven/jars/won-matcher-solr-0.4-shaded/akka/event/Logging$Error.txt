Compiled from "Logging.scala"
public class akka.event.Logging$Error implements akka.event.Logging$LogEvent,scala.Product,scala.Serializable {
  private final java.lang.Throwable cause;

  private final java.lang.String logSource;

  private final java.lang.Class<?> logClass;

  private final java.lang.Object message;

  private final transient java.lang.Thread thread;

  private final long timestamp;

  public java.lang.Thread thread();
    Code:
       0: aload_0
       1: getfield      #27                 // Field thread:Ljava/lang/Thread;
       4: areturn

  public long timestamp();
    Code:
       0: aload_0
       1: getfield      #32                 // Field timestamp:J
       4: lreturn

  public void akka$event$Logging$LogEvent$_setter_$thread_$eq(java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field thread:Ljava/lang/Thread;
       5: return

  public void akka$event$Logging$LogEvent$_setter_$timestamp_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #32                 // Field timestamp:J
       5: return

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> mdc();
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method akka/event/Logging$LogEvent$class.mdc:(Lakka/event/Logging$LogEvent;)Lscala/collection/immutable/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getMDC();
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method akka/event/Logging$LogEvent$class.getMDC:(Lakka/event/Logging$LogEvent;)Ljava/util/Map;
       4: areturn

  public java.lang.Throwable cause();
    Code:
       0: aload_0
       1: getfield      #52                 // Field cause:Ljava/lang/Throwable;
       4: areturn

  public java.lang.String logSource();
    Code:
       0: aload_0
       1: getfield      #55                 // Field logSource:Ljava/lang/String;
       4: areturn

  public java.lang.Class<?> logClass();
    Code:
       0: aload_0
       1: getfield      #58                 // Field logClass:Ljava/lang/Class;
       4: areturn

  public java.lang.Object message();
    Code:
       0: aload_0
       1: getfield      #61                 // Field message:Ljava/lang/Object;
       4: areturn

  public int level();
    Code:
       0: getstatic     #69                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #72                 // Method akka/event/Logging$.ErrorLevel:()I
       6: ireturn

  public akka.event.Logging$Error copy(java.lang.Throwable, java.lang.String, java.lang.Class<?>, java.lang.Object);
    Code:
       0: new           #2                  // class akka/event/Logging$Error
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #78                 // Method "<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      12: areturn

  public java.lang.Throwable copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method cause:()Ljava/lang/Throwable;
       4: areturn

  public java.lang.String copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method logSource:()Ljava/lang/String;
       4: areturn

  public java.lang.Class<?> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method logClass:()Ljava/lang/Class;
       4: areturn

  public java.lang.Object copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method message:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #93                 // String Error
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #98                 // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #107                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #110                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #90                 // Method message:()Ljava/lang/Object;
      51: goto          72
      54: aload_0
      55: invokevirtual #87                 // Method logClass:()Ljava/lang/Class;
      58: goto          72
      61: aload_0
      62: invokevirtual #84                 // Method logSource:()Ljava/lang/String;
      65: goto          72
      68: aload_0
      69: invokevirtual #81                 // Method cause:()Ljava/lang/Throwable;
      72: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #122                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/event/Logging$Error
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #129                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #133                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     159
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/event/Logging$Error
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          163
      25: aload_1
      26: checkcast     #2                  // class akka/event/Logging$Error
      29: astore        4
      31: aload_0
      32: invokevirtual #81                 // Method cause:()Ljava/lang/Throwable;
      35: aload         4
      37: invokevirtual #81                 // Method cause:()Ljava/lang/Throwable;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          155
      55: aload         5
      57: invokevirtual #136                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          155
      63: aload_0
      64: invokevirtual #84                 // Method logSource:()Ljava/lang/String;
      67: aload         4
      69: invokevirtual #84                 // Method logSource:()Ljava/lang/String;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          155
      87: aload         6
      89: invokevirtual #136                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          155
      95: aload_0
      96: invokevirtual #87                 // Method logClass:()Ljava/lang/Class;
      99: aload         4
     101: invokevirtual #87                 // Method logClass:()Ljava/lang/Class;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          155
     119: aload         7
     121: invokevirtual #136                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          155
     127: aload_0
     128: invokevirtual #90                 // Method message:()Ljava/lang/Object;
     131: aload         4
     133: invokevirtual #90                 // Method message:()Ljava/lang/Object;
     136: invokestatic  #139                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     139: ifeq          155
     142: aload         4
     144: aload_0
     145: invokevirtual #141                // Method canEqual:(Ljava/lang/Object;)Z
     148: ifeq          155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: ifeq          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: ireturn

  public akka.event.Logging$Error(java.lang.Throwable, java.lang.String, java.lang.Class<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field cause:Ljava/lang/Throwable;
       5: aload_0
       6: aload_2
       7: putfield      #55                 // Field logSource:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #58                 // Field logClass:Ljava/lang/Class;
      15: aload_0
      16: aload         4
      18: putfield      #61                 // Field message:Ljava/lang/Object;
      21: aload_0
      22: invokespecial #150                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #154                // Method akka/event/Logging$LogEvent$class.$init$:(Lakka/event/Logging$LogEvent;)V
      29: aload_0
      30: invokestatic  #159                // Method scala/Product$class.$init$:(Lscala/Product;)V
      33: return

  public akka.event.Logging$Error(java.lang.String, java.lang.Class<?>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #165                // Field akka/event/Logging$Error$NoCause$.MODULE$:Lakka/event/Logging$Error$NoCause$;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #78                 // Method "<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      10: return
}
