Compiled from "EventStreamUnsubscriber.scala"
public class akka.event.EventStreamUnsubscriber implements akka.actor.Actor {
  public final akka.event.EventStream akka$event$EventStreamUnsubscriber$$eventStream;

  public final boolean akka$event$EventStreamUnsubscriber$$debug;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static boolean $lessinit$greater$default$2();
    Code:
       0: getstatic     #18                 // Field akka/event/EventStreamUnsubscriber$.MODULE$:Lakka/event/EventStreamUnsubscriber$;
       3: invokevirtual #20                 // Method akka/event/EventStreamUnsubscriber$.$lessinit$greater$default$2:()Z
       6: ireturn

  public static akka.actor.ActorRef start(akka.actor.ActorSystem, akka.event.EventStream);
    Code:
       0: getstatic     #18                 // Field akka/event/EventStreamUnsubscriber$.MODULE$:Lakka/event/EventStreamUnsubscriber$;
       3: aload_0
       4: aload_1
       5: invokevirtual #24                 // Method akka/event/EventStreamUnsubscriber$.start:(Lakka/actor/ActorSystem;Lakka/event/EventStream;)Lakka/actor/ActorRef;
       8: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #35                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #40                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #87                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public void preStart();
    Code:
       0: aload_0
       1: getfield      #106                // Field akka$event$EventStreamUnsubscriber$$debug:Z
       4: ifeq          85
       7: aload_0
       8: getfield      #108                // Field akka$event$EventStreamUnsubscriber$$eventStream:Lakka/event/EventStream;
      11: new           #110                // class akka/event/Logging$Debug
      14: dup
      15: getstatic     #115                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
      18: aload_0
      19: invokevirtual #119                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #123                // Method akka/event/Logging$.simpleName:(Ljava/lang/Class;)Ljava/lang/String;
      25: aload_0
      26: invokevirtual #119                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: new           #125                // class scala/StringContext
      32: dup
      33: getstatic     #130                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: iconst_2
      37: anewarray     #132                // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #134                // String registering unsubscriber with
      44: aastore
      45: dup
      46: iconst_1
      47: ldc           #136                // String
      49: aastore
      50: checkcast     #138                // class "[Ljava/lang/Object;"
      53: invokevirtual #142                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      56: invokespecial #146                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      59: getstatic     #130                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      62: iconst_1
      63: anewarray     #4                  // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_0
      69: getfield      #108                // Field akka$event$EventStreamUnsubscriber$$eventStream:Lakka/event/EventStream;
      72: aastore
      73: invokevirtual #150                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      76: invokevirtual #154                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      79: invokespecial #157                // Method akka/event/Logging$Debug."<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      82: invokevirtual #162                // Method akka/event/EventStream.publish:(Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #108                // Field akka$event$EventStreamUnsubscriber$$eventStream:Lakka/event/EventStream;
      89: aload_0
      90: invokevirtual #164                // Method self:()Lakka/actor/ActorRef;
      93: invokevirtual #168                // Method akka/event/EventStream.initUnsubscriber:(Lakka/actor/ActorRef;)Z
      96: pop
      97: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #171                // class akka/event/EventStreamUnsubscriber$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #174                // Method akka/event/EventStreamUnsubscriber$$anonfun$receive$1."<init>":(Lakka/event/EventStreamUnsubscriber;)V
       8: areturn

  public akka.event.EventStreamUnsubscriber(akka.event.EventStream, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field akka$event$EventStreamUnsubscriber$$eventStream:Lakka/event/EventStream;
       5: aload_0
       6: iload_2
       7: putfield      #106                // Field akka$event$EventStreamUnsubscriber$$debug:Z
      10: aload_0
      11: invokespecial #177                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #180                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      18: return
}
