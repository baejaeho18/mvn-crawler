Compiled from "Logging.scala"
public final class akka.event.Logging {
  public static scala.collection.immutable.Map<java.lang.String, java.lang.Object> emptyMDC();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #18                 // Method akka/event/Logging$.emptyMDC:()Lscala/collection/immutable/Map;
       6: areturn

  public static java.lang.String stackTraceFor(java.lang.Throwable);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/event/Logging$.stackTraceFor:(Ljava/lang/Throwable;)Ljava/lang/String;
       7: areturn

  public static akka.event.Logging$StandardOutLogger StandardOutLogger();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #26                 // Method akka/event/Logging$.StandardOutLogger:()Lakka/event/Logging$StandardOutLogger;
       6: areturn

  public static akka.event.Logging$LoggerInitialized$ loggerInitialized();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #30                 // Method akka/event/Logging$.loggerInitialized:()Lakka/event/Logging$LoggerInitialized$;
       6: areturn

  public static akka.event.Logging$Error$NoCause$ noCause();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #34                 // Method akka/event/Logging$.noCause:()Lakka/event/Logging$Error$NoCause$;
       6: areturn

  public static akka.event.DiagnosticLoggingAdapter getLogger(akka.actor.UntypedActor);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #38                 // Method akka/event/Logging$.getLogger:(Lakka/actor/UntypedActor;)Lakka/event/DiagnosticLoggingAdapter;
       7: areturn

  public static akka.event.DiagnosticLoggingAdapter getLogger(akka.actor.Actor);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #41                 // Method akka/event/Logging$.getLogger:(Lakka/actor/Actor;)Lakka/event/DiagnosticLoggingAdapter;
       7: areturn

  public static akka.event.LoggingAdapter getLogger(akka.event.LoggingBus, java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: aload_1
       5: invokevirtual #44                 // Method akka/event/Logging$.getLogger:(Lakka/event/LoggingBus;Ljava/lang/Object;)Lakka/event/LoggingAdapter;
       8: areturn

  public static akka.event.LoggingAdapter getLogger(akka.actor.ActorSystem, java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: aload_1
       5: invokevirtual #47                 // Method akka/event/Logging$.getLogger:(Lakka/actor/ActorSystem;Ljava/lang/Object;)Lakka/event/LoggingAdapter;
       8: areturn

  public static akka.event.DiagnosticLoggingAdapter apply(akka.actor.Actor);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #50                 // Method akka/event/Logging$.apply:(Lakka/actor/Actor;)Lakka/event/DiagnosticLoggingAdapter;
       7: areturn

  public static <T> akka.event.LoggingAdapter apply(akka.event.LoggingBus, T, akka.event.LogSource<T>);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #53                 // Method akka/event/Logging$.apply:(Lakka/event/LoggingBus;Ljava/lang/Object;Lakka/event/LogSource;)Lakka/event/LoggingAdapter;
       9: areturn

  public static <T> akka.event.LoggingAdapter apply(akka.actor.ActorSystem, T, akka.event.LogSource<T>);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #56                 // Method akka/event/Logging$.apply:(Lakka/actor/ActorSystem;Ljava/lang/Object;Lakka/event/LogSource;)Lakka/event/LoggingAdapter;
       9: areturn

  public static scala.collection.immutable.Seq<akka.event.Logging$LogLevel> AllLogLevels();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #60                 // Method akka/event/Logging$.AllLogLevels:()Lscala/collection/immutable/Seq;
       6: areturn

  public static java.lang.Class<? extends akka.event.Logging$LogEvent> classFor(int);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: iload_0
       4: invokevirtual #64                 // Method akka/event/Logging$.classFor:(I)Ljava/lang/Class;
       7: areturn

  public static int levelFor(java.lang.Class);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #68                 // Method akka/event/Logging$.levelFor:(Ljava/lang/Class;)I
       7: ireturn

  public static scala.Option<akka.event.Logging$LogLevel> levelFor(java.lang.String);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #71                 // Method akka/event/Logging$.levelFor:(Ljava/lang/String;)Lscala/Option;
       7: areturn

  public static int DebugLevel();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #75                 // Method akka/event/Logging$.DebugLevel:()I
       6: ireturn

  public static int InfoLevel();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #78                 // Method akka/event/Logging$.InfoLevel:()I
       6: ireturn

  public static int WarningLevel();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #81                 // Method akka/event/Logging$.WarningLevel:()I
       6: ireturn

  public static int ErrorLevel();
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #84                 // Method akka/event/Logging$.ErrorLevel:()I
       6: ireturn

  public static java.lang.String messageClassName(java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #88                 // Method akka/event/Logging$.messageClassName:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn

  public static java.lang.String simpleName(java.lang.Class<?>);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #92                 // Method akka/event/Logging$.simpleName:(Ljava/lang/Class;)Ljava/lang/String;
       7: areturn

  public static java.lang.String simpleName(java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: aload_0
       4: invokevirtual #94                 // Method akka/event/Logging$.simpleName:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn
}
