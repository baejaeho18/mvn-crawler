Compiled from "CamelSupervisor.scala"
public class akka.camel.internal.ProducerRegistrar implements akka.actor.Actor,akka.camel.CamelSupport {
  public final akka.actor.ActorRef akka$camel$internal$ProducerRegistrar$$activationTracker;

  private scala.collection.immutable.Map<akka.actor.ActorRef, scala.Tuple2<org.apache.camel.Endpoint, org.apache.camel.processor.SendProcessor>> akka$camel$internal$ProducerRegistrar$$camelObjects;

  private final akka.camel.Camel camel;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.camel.Camel camel();
    Code:
       0: aload_0
       1: getfield      #25                 // Field camel:Lakka/camel/Camel;
       4: areturn

  public void akka$camel$CamelSupport$_setter_$camel_$eq(akka.camel.Camel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field camel:Lakka/camel/Camel;
       5: return

  public org.apache.camel.impl.DefaultCamelContext camelContext();
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method akka/camel/CamelSupport$class.camelContext:(Lakka/camel/CamelSupport;)Lorg/apache/camel/impl/DefaultCamelContext;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #40                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #43                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #70                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public scala.collection.immutable.Map<akka.actor.ActorRef, scala.Tuple2<org.apache.camel.Endpoint, org.apache.camel.processor.SendProcessor>> akka$camel$internal$ProducerRegistrar$$camelObjects();
    Code:
       0: aload_0
       1: getfield      #111                // Field akka$camel$internal$ProducerRegistrar$$camelObjects:Lscala/collection/immutable/Map;
       4: areturn

  public void akka$camel$internal$ProducerRegistrar$$camelObjects_$eq(scala.collection.immutable.Map<akka.actor.ActorRef, scala.Tuple2<org.apache.camel.Endpoint, org.apache.camel.processor.SendProcessor>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field akka$camel$internal$ProducerRegistrar$$camelObjects:Lscala/collection/immutable/Map;
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #116                // class akka/camel/internal/ProducerRegistrar$$anonfun$receive$3
       3: dup
       4: aload_0
       5: invokespecial #120                // Method akka/camel/internal/ProducerRegistrar$$anonfun$receive$3."<init>":(Lakka/camel/internal/ProducerRegistrar;)V
       8: areturn

  public akka.camel.internal.ProducerRegistrar(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #122                // Field akka$camel$internal$ProducerRegistrar$$activationTracker:Lakka/actor/ActorRef;
       5: aload_0
       6: invokespecial #124                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #127                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      13: aload_0
      14: invokestatic  #130                // Method akka/camel/CamelSupport$class.$init$:(Lakka/camel/CamelSupport;)V
      17: aload_0
      18: getstatic     #136                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: invokevirtual #140                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      24: getstatic     #145                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      27: invokevirtual #151                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      30: checkcast     #153                // class scala/collection/immutable/Map
      33: putfield      #111                // Field akka$camel$internal$ProducerRegistrar$$camelObjects:Lscala/collection/immutable/Map;
      36: return
}
