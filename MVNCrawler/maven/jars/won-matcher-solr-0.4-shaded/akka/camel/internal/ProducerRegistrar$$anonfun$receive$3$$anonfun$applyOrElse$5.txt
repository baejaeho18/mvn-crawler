Compiled from "CamelSupervisor.scala"
public final class akka.camel.internal.ProducerRegistrar$$anonfun$receive$3$$anonfun$applyOrElse$5 extends scala.runtime.AbstractFunction1<scala.Tuple2<org.apache.camel.Endpoint, org.apache.camel.processor.SendProcessor>, scala.runtime.BoxedUnit> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.camel.internal.ProducerRegistrar$$anonfun$receive$3 $outer;

  private final akka.actor.ActorRef producer$1;

  public final void apply(scala.Tuple2<org.apache.camel.Endpoint, org.apache.camel.processor.SendProcessor>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        64
       6: aload_2
       7: invokevirtual #29                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #31                 // class org/apache/camel/Endpoint
      13: astore_3
      14: aload_2
      15: invokevirtual #34                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #36                 // class org/apache/camel/processor/SendProcessor
      21: astore        4
      23: getstatic     #42                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      26: aload_0
      27: getfield      #44                 // Field producer$1:Lakka/actor/ActorRef;
      30: invokevirtual #48                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      33: new           #50                 // class akka/camel/internal/CamelSupervisor$CamelProducerObjects
      36: dup
      37: aload_3
      38: aload         4
      40: invokespecial #54                 // Method akka/camel/internal/CamelSupervisor$CamelProducerObjects."<init>":(Lorg/apache/camel/Endpoint;Lorg/apache/camel/processor/SendProcessor;)V
      43: aload_0
      44: getfield      #56                 // Field $outer:Lakka/camel/internal/ProducerRegistrar$$anonfun$receive$3;
      47: invokevirtual #60                 // Method akka/camel/internal/ProducerRegistrar$$anonfun$receive$3.akka$camel$internal$ProducerRegistrar$$anonfun$$$outer:()Lakka/camel/internal/ProducerRegistrar;
      50: invokevirtual #66                 // Method akka/camel/internal/ProducerRegistrar.self:()Lakka/actor/ActorRef;
      53: invokeinterface #72,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      58: getstatic     #78                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      61: astore        5
      63: return
      64: new           #80                 // class scala/MatchError
      67: dup
      68: aload_2
      69: invokespecial #83                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      72: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class scala/Tuple2
       5: invokevirtual #94                 // Method apply:(Lscala/Tuple2;)V
       8: getstatic     #78                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: areturn

  public akka.camel.internal.ProducerRegistrar$$anonfun$receive$3$$anonfun$applyOrElse$5(akka.camel.internal.ProducerRegistrar$$anonfun$receive$3, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #56                 // Field $outer:Lakka/camel/internal/ProducerRegistrar$$anonfun$receive$3;
      11: aload_0
      12: aload_2
      13: putfield      #44                 // Field producer$1:Lakka/actor/ActorRef;
      16: aload_0
      17: invokespecial #100                // Method scala/runtime/AbstractFunction1."<init>":()V
      20: return
}
