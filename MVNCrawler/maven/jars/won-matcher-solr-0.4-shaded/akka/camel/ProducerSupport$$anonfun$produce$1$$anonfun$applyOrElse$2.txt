Compiled from "Producer.scala"
public final class akka.camel.ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2 extends scala.runtime.AbstractFunction1<akka.actor.ActorRef, scala.runtime.BoxedUnit> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.camel.ProducerSupport$$anonfun$produce$1 $outer;

  public final void apply(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/camel/ProducerSupport$$anonfun$produce$1;
       4: invokevirtual #27                 // Method akka/camel/ProducerSupport$$anonfun$produce$1.akka$camel$ProducerSupport$$anonfun$$$outer:()Lakka/camel/ProducerSupport;
       7: invokeinterface #33,  1           // InterfaceMethod akka/camel/ProducerSupport.akka$camel$ProducerSupport$$messages:()Lscala/collection/immutable/Vector;
      12: new           #35                 // class akka/camel/ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2$$anonfun$apply$1
      15: dup
      16: aload_0
      17: invokespecial #39                 // Method akka/camel/ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2$$anonfun$apply$1."<init>":(Lakka/camel/ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2;)V
      20: invokevirtual #45                 // Method scala/collection/immutable/Vector.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      23: new           #47                 // class akka/camel/ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2$$anonfun$apply$2
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #50                 // Method akka/camel/ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2$$anonfun$apply$2."<init>":(Lakka/camel/ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2;Lakka/actor/ActorRef;)V
      32: invokeinterface #56,  2           // InterfaceMethod scala/collection/generic/FilterMonadic.foreach:(Lscala/Function1;)V
      37: return

  public akka.camel.ProducerSupport$$anonfun$produce$1 akka$camel$ProducerSupport$$anonfun$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/camel/ProducerSupport$$anonfun$produce$1;
       4: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #65                 // class akka/actor/ActorRef
       5: invokevirtual #67                 // Method apply:(Lakka/actor/ActorRef;)V
       8: getstatic     #73                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: areturn

  public akka.camel.ProducerSupport$$anonfun$produce$1$$anonfun$applyOrElse$2(akka.camel.ProducerSupport$$anonfun$produce$1);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lakka/camel/ProducerSupport$$anonfun$produce$1;
      11: aload_0
      12: invokespecial #79                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
