Compiled from "SerializedSuspendableExecutionContext.scala"
public final class akka.util.SerializedSuspendableExecutionContext extends akka.dispatch.AbstractNodeQueue<java.lang.Runnable> implements java.lang.Runnable, scala.concurrent.ExecutionContext {
  public final int akka$util$SerializedSuspendableExecutionContext$$throughput;

  private final scala.concurrent.ExecutionContext context;

  private final java.util.concurrent.atomic.AtomicInteger state;

  public static akka.util.SerializedSuspendableExecutionContext apply(int, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #21                 // Field akka/util/SerializedSuspendableExecutionContext$.MODULE$:Lakka/util/SerializedSuspendableExecutionContext$;
       3: iload_0
       4: aload_1
       5: invokevirtual #23                 // Method akka/util/SerializedSuspendableExecutionContext$.apply:(ILscala/concurrent/ExecutionContext;)Lakka/util/SerializedSuspendableExecutionContext;
       8: areturn

  public static int Suspended();
    Code:
       0: getstatic     #21                 // Field akka/util/SerializedSuspendableExecutionContext$.MODULE$:Lakka/util/SerializedSuspendableExecutionContext$;
       3: invokevirtual #27                 // Method akka/util/SerializedSuspendableExecutionContext$.Suspended:()I
       6: ireturn

  public static int On();
    Code:
       0: getstatic     #21                 // Field akka/util/SerializedSuspendableExecutionContext$.MODULE$:Lakka/util/SerializedSuspendableExecutionContext$;
       3: invokevirtual #30                 // Method akka/util/SerializedSuspendableExecutionContext$.On:()I
       6: ireturn

  public static int Off();
    Code:
       0: getstatic     #21                 // Field akka/util/SerializedSuspendableExecutionContext$.MODULE$:Lakka/util/SerializedSuspendableExecutionContext$;
       3: invokevirtual #33                 // Method akka/util/SerializedSuspendableExecutionContext$.Off:()I
       6: ireturn

  public scala.concurrent.ExecutionContext prepare();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method scala/concurrent/ExecutionContext$class.prepare:(Lscala/concurrent/ExecutionContext;)Lscala/concurrent/ExecutionContext;
       4: areturn

  public scala.concurrent.ExecutionContext context();
    Code:
       0: aload_0
       1: getfield      #50                 // Field context:Lscala/concurrent/ExecutionContext;
       4: areturn

  private final java.util.concurrent.atomic.AtomicInteger state();
    Code:
       0: aload_0
       1: getfield      #53                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  private final boolean addState(int);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_3
       8: aload_0
       9: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
      12: iload_3
      13: iload_3
      14: iload_1
      15: ior
      16: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: iload_1
      25: istore_1
      26: goto          0

  private final void remState(int);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_3
       8: aload_0
       9: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
      12: iload_3
      13: iload_3
      14: iload_1
      15: iconst_m1
      16: ixor
      17: iand
      18: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      21: ifeq          33
      24: aload_0
      25: invokevirtual #74                 // Method attach:()V
      28: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      31: pop
      32: return
      33: iload_1
      34: istore_1
      35: goto          0

  public final void resume();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #84                 // Method remState:(I)V
       5: return

  public final void suspend();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #87                 // Method addState:(I)Z
       5: pop
       6: return

  public final void run();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #91                 // Method run$1:(I)V
       5: aload_0
       6: iconst_1
       7: invokespecial #84                 // Method remState:(I)V
      10: return
      11: astore_1
      12: aload_0
      13: iconst_1
      14: invokespecial #84                 // Method remState:(I)V
      17: aload_1
      18: athrow
    Exception table:
       from    to  target type
           0     5    11   any

  public final void attach();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method isEmpty:()Z
       4: ifne          29
       7: aload_0
       8: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      16: ifeq          29
      19: aload_0
      20: invokevirtual #99                 // Method context:()Lscala/concurrent/ExecutionContext;
      23: aload_0
      24: invokeinterface #103,  2          // InterfaceMethod scala/concurrent/ExecutionContext.execute:(Ljava/lang/Runnable;)V
      29: return

  public final void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #107                // Method add:(Ljava/lang/Object;)V
       5: aload_0
       6: invokevirtual #74                 // Method attach:()V
       9: return
      10: astore_2
      11: aload_0
      12: invokevirtual #74                 // Method attach:()V
      15: aload_2
      16: athrow
    Exception table:
       from    to  target type
           0     5    10   any

  public final void reportFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method context:()Lscala/concurrent/ExecutionContext;
       4: aload_1
       5: invokeinterface #113,  2          // InterfaceMethod scala/concurrent/ExecutionContext.reportFailure:(Ljava/lang/Throwable;)V
      10: return

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method count:()I
       4: ireturn

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: iload_1
       9: tableswitch   { // 0 to 3
                     0: 67
                     1: 62
                     2: 57
                     3: 52
               default: 40
          }
      40: new           #123                // class scala/MatchError
      43: dup
      44: iload_1
      45: invokestatic  #129                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokespecial #132                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: ldc           #134                // String On & Suspended
      54: goto          69
      57: ldc           #136                // String Off & Suspended
      59: goto          69
      62: ldc           #137                // String On
      64: goto          69
      67: ldc           #138                // String Off
      69: areturn

  private final void run$1(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #142                // Field akka$util$SerializedSuspendableExecutionContext$$throughput:I
       5: if_icmplt     71
       8: goto          114
      11: astore        5
      13: aload         5
      15: astore        6
      17: getstatic     #147                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      20: aload         6
      22: invokevirtual #151                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      25: astore        7
      27: aload         7
      29: invokevirtual #154                // Method scala/Option.isEmpty:()Z
      32: ifeq          38
      35: aload         5
      37: athrow
      38: aload         7
      40: invokevirtual #157                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #93                 // class java/lang/Throwable
      46: astore        8
      48: aload_0
      49: invokevirtual #99                 // Method context:()Lscala/concurrent/ExecutionContext;
      52: aload         8
      54: invokeinterface #113,  2          // InterfaceMethod scala/concurrent/ExecutionContext.reportFailure:(Ljava/lang/Throwable;)V
      59: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      62: astore        9
      64: iload_1
      65: iconst_1
      66: iadd
      67: istore_1
      68: goto          0
      71: aload_0
      72: invokespecial #57                 // Method state:()Ljava/util/concurrent/atomic/AtomicInteger;
      75: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      78: iconst_1
      79: if_icmpne     114
      82: aload_0
      83: invokevirtual #160                // Method poll:()Ljava/lang/Object;
      86: checkcast     #7                  // class java/lang/Runnable
      89: astore_3
      90: aload_3
      91: ifnonnull     105
      94: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      97: astore        4
      99: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     102: goto          117
     105: aload_3
     106: invokeinterface #162,  1          // InterfaceMethod java/lang/Runnable.run:()V
     111: goto          64
     114: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     117: pop
     118: return
    Exception table:
       from    to  target type
         105   114    11   any

  public akka.util.SerializedSuspendableExecutionContext(int, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #142                // Field akka$util$SerializedSuspendableExecutionContext$$throughput:I
       5: aload_0
       6: aload_2
       7: putfield      #50                 // Field context:Lscala/concurrent/ExecutionContext;
      10: aload_0
      11: invokespecial #166                // Method akka/dispatch/AbstractNodeQueue."<init>":()V
      14: aload_0
      15: invokestatic  #170                // Method scala/concurrent/ExecutionContext$class.$init$:(Lscala/concurrent/ExecutionContext;)V
      18: getstatic     #175                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: iload_1
      22: iconst_0
      23: if_icmple     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: new           #177                // class akka/util/SerializedSuspendableExecutionContext$$anonfun$1
      34: dup
      35: aload_0
      36: invokespecial #180                // Method akka/util/SerializedSuspendableExecutionContext$$anonfun$1."<init>":(Lakka/util/SerializedSuspendableExecutionContext;)V
      39: invokevirtual #184                // Method scala/Predef$.require:(ZLscala/Function0;)V
      42: aload_0
      43: new           #59                 // class java/util/concurrent/atomic/AtomicInteger
      46: dup
      47: iconst_0
      48: invokespecial #186                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      51: putfield      #53                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      54: return
}
