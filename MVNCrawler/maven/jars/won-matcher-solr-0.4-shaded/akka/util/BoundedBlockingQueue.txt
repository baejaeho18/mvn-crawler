Compiled from "BoundedBlockingQueue.scala"
public class akka.util.BoundedBlockingQueue<E> extends java.util.AbstractQueue<E> implements java.util.concurrent.BlockingQueue<E> {
  private final int maxCapacity;

  private final java.util.Queue<E> akka$util$BoundedBlockingQueue$$backing;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private final java.util.concurrent.locks.Condition notEmpty;

  private final java.util.concurrent.locks.Condition akka$util$BoundedBlockingQueue$$notFull;

  public int maxCapacity();
    Code:
       0: aload_0
       1: getfield      #24                 // Field maxCapacity:I
       4: ireturn

  public java.util.Queue<E> akka$util$BoundedBlockingQueue$$backing();
    Code:
       0: aload_0
       1: getfield      #29                 // Field akka$util$BoundedBlockingQueue$$backing:Ljava/util/Queue;
       4: areturn

  public java.util.concurrent.locks.ReentrantLock lock();
    Code:
       0: aload_0
       1: getfield      #32                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: areturn

  private java.util.concurrent.locks.Condition notEmpty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
       4: areturn

  public java.util.concurrent.locks.Condition akka$util$BoundedBlockingQueue$$notFull();
    Code:
       0: aload_0
       1: getfield      #37                 // Field akka$util$BoundedBlockingQueue$$notFull:Ljava/util/concurrent/locks/Condition;
       4: areturn

  public void put(E);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #41                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #52                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      19: aload_0
      20: aload_1
      21: invokespecial #55                 // Method putElement$1:(Ljava/lang/Object;)V
      24: aload_0
      25: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      28: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      31: return
      32: astore_2
      33: aload_0
      34: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      37: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      40: aload_2
      41: athrow
    Exception table:
       from    to  target type
          19    24    32   any

  public E take();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #52                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
       7: aload_0
       8: invokespecial #67                 // Method takeElement$1:()Ljava/lang/Object;
      11: aload_0
      12: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      15: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      18: areturn
      19: astore_1
      20: aload_0
      21: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      24: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      27: aload_1
      28: athrow
    Exception table:
       from    to  target type
           7    11    19   any

  public boolean offer(E);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #41                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      19: aload_0
      20: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      23: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
      28: aload_0
      29: invokevirtual #80                 // Method maxCapacity:()I
      32: if_icmpne     39
      35: iconst_0
      36: goto          65
      39: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      42: aload_0
      43: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      46: aload_1
      47: invokeinterface #88,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      52: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
      55: aload_0
      56: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      59: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      64: iconst_1
      65: aload_0
      66: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      69: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      72: ireturn
      73: astore_2
      74: aload_0
      75: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      78: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      81: aload_2
      82: athrow
    Exception table:
       from    to  target type
          19    65    73   any

  public boolean offer(E, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #41                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #52                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      19: aload_0
      20: aload         4
      22: lload_2
      23: invokevirtual #106                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      26: aload_1
      27: invokespecial #110                // Method offerElement$1:(JLjava/lang/Object;)Z
      30: aload_0
      31: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      34: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      37: ireturn
      38: astore        5
      40: aload_0
      41: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      44: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      47: aload         5
      49: athrow
    Exception table:
       from    to  target type
          19    30    38   any

  public E poll(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #52                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
       7: aload_0
       8: aload_3
       9: lload_1
      10: invokevirtual #106                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      13: invokespecial #120                // Method pollElement$1:(J)Ljava/lang/Object;
      16: aload_0
      17: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: areturn
      24: astore        4
      26: aload_0
      27: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      30: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      33: aload         4
      35: athrow
    Exception table:
       from    to  target type
           7    16    24   any

  public E poll();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #122,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      16: astore_2
      17: aload_2
      18: ifnonnull     26
      21: aconst_null
      22: astore_3
      23: goto          37
      26: aload_0
      27: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      30: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      35: aload_2
      36: astore_3
      37: aload_3
      38: aload_0
      39: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      42: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      45: areturn
      46: astore_1
      47: aload_0
      48: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      51: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      54: aload_1
      55: athrow
    Exception table:
       from    to  target type
           7    38    46   any

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #41                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      19: aload_0
      20: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      23: aload_1
      24: invokeinterface #129,  2          // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      29: ifeq          45
      32: aload_0
      33: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      36: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: aload_0
      47: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      50: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      53: ireturn
      54: astore_2
      55: aload_0
      56: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      59: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      62: aload_2
      63: athrow
    Exception table:
       from    to  target type
          19    46    54   any

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #41                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      19: aload_0
      20: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      23: aload_1
      24: invokeinterface #132,  2          // InterfaceMethod java/util/Queue.contains:(Ljava/lang/Object;)Z
      29: aload_0
      30: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      33: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      36: ireturn
      37: astore_2
      38: aload_0
      39: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      42: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      45: aload_2
      46: athrow
    Exception table:
       from    to  target type
          19    29    37   any

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #135,  1          // InterfaceMethod java/util/Queue.clear:()V
      16: aload_0
      17: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      20: invokeinterface #138,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      25: aload_0
      26: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      29: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      32: return
      33: astore_1
      34: aload_0
      35: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      38: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      41: aload_1
      42: athrow
    Exception table:
       from    to  target type
           7    25    33   any

  public int remainingCapacity();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #80                 // Method maxCapacity:()I
      11: aload_0
      12: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      15: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
      20: isub
      21: aload_0
      22: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      25: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      28: ireturn
      29: astore_1
      30: aload_0
      31: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      34: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      37: aload_1
      38: athrow
    Exception table:
       from    to  target type
           7    21    29   any

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
      16: aload_0
      17: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: ireturn
      24: astore_1
      25: aload_0
      26: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      29: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      32: aload_1
      33: athrow
    Exception table:
       from    to  target type
           7    16    24   any

  public E peek();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #142,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      16: aload_0
      17: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: areturn
      24: astore_1
      25: aload_0
      26: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      29: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      32: aload_1
      33: athrow
    Exception table:
       from    to  target type
           7    16    24   any

  public int drainTo(java.util.Collection<? super E>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #145                // int 2147483647
       4: invokevirtual #148                // Method drainTo:(Ljava/util/Collection;I)I
       7: ireturn

  public int drainTo(java.util.Collection<? super E>, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #41                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_1
      13: aload_0
      14: if_acmpne     25
      17: new           #152                // class java/lang/IllegalArgumentException
      20: dup
      21: invokespecial #153                // Method java/lang/IllegalArgumentException."<init>":()V
      24: athrow
      25: aload_1
      26: aload_0
      27: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      30: if_acmpne     41
      33: new           #152                // class java/lang/IllegalArgumentException
      36: dup
      37: invokespecial #153                // Method java/lang/IllegalArgumentException."<init>":()V
      40: athrow
      41: iload_2
      42: iconst_0
      43: if_icmpgt     50
      46: iconst_0
      47: goto          93
      50: aload_0
      51: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      54: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      57: aload_0
      58: aload_0
      59: invokespecial #156                // Method drainOne$default$1$1:()I
      62: aload_1
      63: iload_2
      64: invokespecial #160                // Method drainOne$1:(ILjava/util/Collection;I)I
      67: istore        4
      69: iload         4
      71: iconst_0
      72: if_icmple     84
      75: aload_0
      76: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      79: invokeinterface #138,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      84: iload         4
      86: aload_0
      87: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      90: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      93: ireturn
      94: astore_3
      95: aload_0
      96: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      99: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     102: aload_3
     103: athrow
    Exception table:
       from    to  target type
          57    86    94   any

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: aload_1
      12: invokeinterface #168,  2          // InterfaceMethod java/util/Queue.containsAll:(Ljava/util/Collection;)Z
      17: aload_0
      18: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      21: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      24: ireturn
      25: astore_2
      26: aload_0
      27: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      30: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      33: aload_2
      34: athrow
    Exception table:
       from    to  target type
           7    17    25   any

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: aload_1
      12: invokeinterface #171,  2          // InterfaceMethod java/util/Queue.removeAll:(Ljava/util/Collection;)Z
      17: ifeq          65
      20: aload_0
      21: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      24: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
      29: istore_3
      30: iload_3
      31: aload_0
      32: invokevirtual #80                 // Method maxCapacity:()I
      35: if_icmpge     47
      38: aload_0
      39: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      42: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      47: iload_3
      48: iconst_0
      49: if_icmple     61
      52: aload_0
      53: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      56: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: aload_0
      67: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      70: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      73: ireturn
      74: astore_2
      75: aload_0
      76: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      79: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      82: aload_2
      83: athrow
    Exception table:
       from    to  target type
           7    66    74   any

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: aload_1
      12: invokeinterface #175,  2          // InterfaceMethod java/util/Queue.retainAll:(Ljava/util/Collection;)Z
      17: ifeq          65
      20: aload_0
      21: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      24: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
      29: istore_3
      30: iload_3
      31: aload_0
      32: invokevirtual #80                 // Method maxCapacity:()I
      35: if_icmpge     47
      38: aload_0
      39: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      42: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      47: iload_3
      48: iconst_0
      49: if_icmple     61
      52: aload_0
      53: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      56: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: aload_0
      67: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      70: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      73: ireturn
      74: astore_2
      75: aload_0
      76: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      79: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      82: aload_2
      83: athrow
    Exception table:
       from    to  target type
           7    66    74   any

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #181,  1          // InterfaceMethod java/util/Queue.toArray:()[Ljava/lang/Object;
      16: astore_2
      17: new           #183                // class akka/util/BoundedBlockingQueue$$anon$1
      20: dup
      21: aload_0
      22: aload_2
      23: invokespecial #186                // Method akka/util/BoundedBlockingQueue$$anon$1."<init>":(Lakka/util/BoundedBlockingQueue;[Ljava/lang/Object;)V
      26: aload_0
      27: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      30: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      33: areturn
      34: astore_1
      35: aload_0
      36: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      39: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      42: aload_1
      43: athrow
    Exception table:
       from    to  target type
           7    26    34   any

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #181,  1          // InterfaceMethod java/util/Queue.toArray:()[Ljava/lang/Object;
      16: aload_0
      17: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: areturn
      24: astore_1
      25: aload_0
      26: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      29: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      32: aload_1
      33: athrow
    Exception table:
       from    to  target type
           7    16    24   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: invokeinterface #192,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
      16: aload_0
      17: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: ireturn
      24: astore_1
      25: aload_0
      26: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      29: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      32: aload_1
      33: athrow
    Exception table:
       from    to  target type
           7    16    24   any

  public <X> X[] toArray(X[]);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      11: aload_1
      12: invokeinterface #195,  2          // InterfaceMethod java/util/Queue.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: aload_0
      18: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      21: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      24: areturn
      25: astore_2
      26: aload_0
      27: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
      30: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      33: aload_2
      34: athrow
    Exception table:
       from    to  target type
           7    17    25   any

  private final void putElement$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
       4: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
       9: aload_0
      10: invokevirtual #80                 // Method maxCapacity:()I
      13: if_icmpge     46
      16: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      19: aload_0
      20: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      23: aload_1
      24: invokeinterface #88,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      29: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
      32: aload_0
      33: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      36: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      41: getstatic     #202                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      44: pop
      45: return
      46: aload_0
      47: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      50: invokeinterface #205,  1          // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      55: goto          0

  private final java.lang.Object takeElement$1();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
       4: invokeinterface #192,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifeq          24
      12: aload_0
      13: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      16: invokeinterface #205,  1          // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      21: goto          0
      24: aload_0
      25: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      28: invokeinterface #122,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      33: astore_2
      34: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      37: aload_2
      38: ifnull        45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
      49: aload_0
      50: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      53: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      58: aload_2
      59: areturn

  private final boolean offerElement$1(long, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
       4: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
       9: aload_0
      10: invokevirtual #80                 // Method maxCapacity:()I
      13: if_icmpge     45
      16: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      19: aload_0
      20: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      23: aload_3
      24: invokeinterface #88,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      29: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
      32: aload_0
      33: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      36: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      41: iconst_1
      42: goto          52
      45: lload_1
      46: lconst_0
      47: lcmp
      48: ifgt          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      57: lload_1
      58: invokeinterface #209,  3          // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      63: lstore_1
      64: goto          0

  private final java.lang.Object pollElement$1(long);
    Code:
       0: iconst_0
       1: istore        4
       3: aconst_null
       4: astore        5
       6: aload_0
       7: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
      10: invokeinterface #122,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      15: astore        6
      17: aload         6
      19: ifnonnull     41
      22: iconst_1
      23: istore        4
      25: aload         6
      27: astore        5
      29: lload_1
      30: lconst_0
      31: lcmp
      32: ifgt          41
      35: aconst_null
      36: astore        7
      38: goto          73
      41: iload         4
      43: ifeq          60
      46: aload_0
      47: invokespecial #94                 // Method notEmpty:()Ljava/util/concurrent/locks/Condition;
      50: lload_1
      51: invokeinterface #209,  3          // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      56: lstore_1
      57: goto          0
      60: aload_0
      61: invokevirtual #124                // Method akka$util$BoundedBlockingQueue$$notFull:()Ljava/util/concurrent/locks/Condition;
      64: invokeinterface #99,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      69: aload         6
      71: astore        7
      73: aload         7
      75: areturn

  private final int drainOne$1(int, java.util.Collection, int);
    Code:
       0: iload_1
       1: iload_3
       2: if_icmpge     45
       5: aload_0
       6: invokevirtual #73                 // Method akka$util$BoundedBlockingQueue$$backing:()Ljava/util/Queue;
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      14: astore        5
      16: aload         5
      18: ifnonnull     29
      21: iload_1
      22: istore        6
      24: iload         6
      26: goto          46
      29: aload_2
      30: aload         5
      32: invokeinterface #214,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      37: pop
      38: iload_1
      39: iconst_1
      40: iadd
      41: istore_1
      42: goto          0
      45: iload_1
      46: ireturn

  private final int drainOne$default$1$1();
    Code:
       0: iconst_0
       1: ireturn

  public akka.util.BoundedBlockingQueue(int, java.util.Queue<E>);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field maxCapacity:I
       5: aload_0
       6: aload_2
       7: putfield      #29                 // Field akka$util$BoundedBlockingQueue$$backing:Ljava/util/Queue;
      10: aload_0
      11: invokespecial #218                // Method java/util/AbstractQueue."<init>":()V
      14: aload_2
      15: astore_3
      16: aload_3
      17: ifnonnull     30
      20: new           #152                // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #220                // String Backing Queue may not be null
      26: invokespecial #223                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_3
      31: instanceof    #7                  // class java/util/concurrent/BlockingQueue
      34: ifeq          111
      37: aload_3
      38: checkcast     #7                  // class java/util/concurrent/BlockingQueue
      41: astore        5
      43: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      46: iload_1
      47: iconst_0
      48: if_icmple     55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
      59: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      62: aload         5
      64: invokeinterface #224,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      69: iconst_0
      70: if_icmpne     77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
      81: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      84: aload         5
      86: invokeinterface #226,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.remainingCapacity:()I
      91: iload_1
      92: if_icmplt     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
     103: getstatic     #202                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     106: astore        4
     108: goto          161
     111: aload_3
     112: ifnull        196
     115: aload_3
     116: astore        6
     118: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     121: aload         6
     123: invokeinterface #78,  1           // InterfaceMethod java/util/Queue.size:()I
     128: iconst_0
     129: if_icmpne     136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
     140: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     143: iload_1
     144: iconst_0
     145: if_icmple     152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: invokevirtual #92                 // Method scala/Predef$.require:(Z)V
     156: getstatic     #202                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     159: astore        4
     161: aload_0
     162: new           #49                 // class java/util/concurrent/locks/ReentrantLock
     165: dup
     166: iconst_0
     167: invokespecial #228                // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
     170: putfield      #32                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     173: aload_0
     174: aload_0
     175: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
     178: invokevirtual #231                // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
     181: putfield      #35                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
     184: aload_0
     185: aload_0
     186: invokevirtual #47                 // Method lock:()Ljava/util/concurrent/locks/ReentrantLock;
     189: invokevirtual #231                // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
     192: putfield      #37                 // Field akka$util$BoundedBlockingQueue$$notFull:Ljava/util/concurrent/locks/Condition;
     195: return
     196: new           #233                // class scala/MatchError
     199: dup
     200: aload_3
     201: invokespecial #235                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     204: athrow
}
