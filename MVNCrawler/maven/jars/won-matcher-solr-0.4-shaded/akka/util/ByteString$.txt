Compiled from "ByteString.scala"
public final class akka.util.ByteString$ {
  public static final akka.util.ByteString$ MODULE$;

  private final java.lang.String UTF_8;

  private final akka.util.ByteString empty;

  private final scala.collection.generic.CanBuildFrom<scala.collection.TraversableOnce<java.lang.Object>, java.lang.Object, akka.util.ByteString> canBuildFrom;

  public static {};
    Code:
       0: new           #2                  // class akka/util/ByteString$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.util.ByteString fromInts(int...);
    Code:
       0: aload_0
       1: getstatic     #26                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: aload_1
       5: invokevirtual #30                 // Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
       8: invokevirtual #33                 // Method fromInts:(Lscala/collection/Seq;)Lakka/util/ByteString;
      11: areturn

  public akka.util.ByteString apply(byte[]);
    Code:
       0: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
       3: aload_1
       4: invokevirtual #46                 // Method akka/util/CompactByteString$.apply:([B)Lakka/util/CompactByteString;
       7: areturn

  public akka.util.ByteString apply(scala.collection.Seq<java.lang.Object>);
    Code:
       0: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
       3: aload_1
       4: invokevirtual #51                 // Method akka/util/CompactByteString$.apply:(Lscala/collection/Seq;)Lakka/util/CompactByteString;
       7: areturn

  public <T> akka.util.ByteString apply(scala.collection.Seq<T>, scala.math.Integral<T>);
    Code:
       0: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
       3: aload_1
       4: aload_2
       5: invokevirtual #56                 // Method akka/util/CompactByteString$.apply:(Lscala/collection/Seq;Lscala/math/Integral;)Lakka/util/CompactByteString;
       8: areturn

  public akka.util.ByteString apply(java.nio.ByteBuffer);
    Code:
       0: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
       3: aload_1
       4: invokevirtual #62                 // Method akka/util/CompactByteString$.apply:(Ljava/nio/ByteBuffer;)Lakka/util/CompactByteString;
       7: areturn

  public akka.util.ByteString apply(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #67                 // Method UTF_8:()Ljava/lang/String;
       6: invokevirtual #70                 // Method apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/util/ByteString;
       9: areturn

  public akka.util.ByteString apply(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
       3: aload_1
       4: aload_2
       5: invokevirtual #74                 // Method akka/util/CompactByteString$.apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/util/CompactByteString;
       8: areturn

  public akka.util.ByteString fromArray(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method apply:([B)Lakka/util/ByteString;
       5: areturn

  public akka.util.ByteString fromArray(byte[], int, int);
    Code:
       0: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
       3: aload_1
       4: iload_2
       5: iload_3
       6: invokevirtual #82                 // Method akka/util/CompactByteString$.fromArray:([BII)Lakka/util/CompactByteString;
       9: areturn

  public akka.util.ByteString fromInts(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #90                 // Field scala/math/Numeric$IntIsIntegral$.MODULE$:Lscala/math/Numeric$IntIsIntegral$;
       5: invokevirtual #92                 // Method apply:(Lscala/collection/Seq;Lscala/math/Integral;)Lakka/util/ByteString;
       8: areturn

  public akka.util.ByteString fromString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #95                 // Method apply:(Ljava/lang/String;)Lakka/util/ByteString;
       5: areturn

  public akka.util.ByteString fromString(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #70                 // Method apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/util/ByteString;
       6: areturn

  public java.lang.String UTF_8();
    Code:
       0: aload_0
       1: getfield      #97                 // Field UTF_8:Ljava/lang/String;
       4: areturn

  public akka.util.ByteString fromByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #100                // Method apply:(Ljava/nio/ByteBuffer;)Lakka/util/ByteString;
       5: areturn

  public akka.util.ByteString empty();
    Code:
       0: aload_0
       1: getfield      #104                // Field empty:Lakka/util/ByteString;
       4: areturn

  public akka.util.ByteStringBuilder newBuilder();
    Code:
       0: new           #108                // class akka/util/ByteStringBuilder
       3: dup
       4: invokespecial #109                // Method akka/util/ByteStringBuilder."<init>":()V
       7: areturn

  public akka.util.ByteStringBuilder createBuilder();
    Code:
       0: new           #108                // class akka/util/ByteStringBuilder
       3: dup
       4: invokespecial #109                // Method akka/util/ByteStringBuilder."<init>":()V
       7: areturn

  public scala.collection.generic.CanBuildFrom<scala.collection.TraversableOnce<java.lang.Object>, java.lang.Object, akka.util.ByteString> canBuildFrom();
    Code:
       0: aload_0
       1: getfield      #113                // Field canBuildFrom:Lscala/collection/generic/CanBuildFrom;
       4: areturn

  private akka.util.ByteString$();
    Code:
       0: aload_0
       1: invokespecial #114                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #116                // Field MODULE$:Lakka/util/ByteString$;
       8: aload_0
       9: getstatic     #121                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      12: invokevirtual #126                // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      15: putfield      #97                 // Field UTF_8:Ljava/lang/String;
      18: aload_0
      19: getstatic     #43                 // Field akka/util/CompactByteString$.MODULE$:Lakka/util/CompactByteString$;
      22: getstatic     #131                // Field scala/Array$.MODULE$:Lscala/Array$;
      25: getstatic     #136                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      28: invokevirtual #140                // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ClassTag;
      31: invokevirtual #143                // Method scala/Array$.empty:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      34: checkcast     #144                // class "[B"
      37: invokevirtual #46                 // Method akka/util/CompactByteString$.apply:([B)Lakka/util/CompactByteString;
      40: putfield      #104                // Field empty:Lakka/util/ByteString;
      43: aload_0
      44: new           #146                // class akka/util/ByteString$$anon$2
      47: dup
      48: invokespecial #147                // Method akka/util/ByteString$$anon$2."<init>":()V
      51: putfield      #113                // Field canBuildFrom:Lscala/collection/generic/CanBuildFrom;
      54: return
}
