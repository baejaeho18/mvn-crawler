Compiled from "Collections.scala"
public abstract class akka.util.Collections$PartialImmutableValuesIterable<From, To> implements scala.collection.immutable.Iterable<To> {
  private int size;

  private volatile boolean bitmap$0;

  private int size$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #16                 // Field bitmap$0:Z
       8: ifne          29
      11: aload_0
      12: aload_0
      13: invokevirtual #20                 // Method iterator:()Lscala/collection/Iterator;
      16: invokeinterface #24,  1           // InterfaceMethod scala/collection/Iterator.size:()I
      21: putfield      #26                 // Field size:I
      24: aload_0
      25: iconst_1
      26: putfield      #16                 // Field bitmap$0:Z
      29: getstatic     #32                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      32: pop
      33: aload_1
      34: monitorexit
      35: aload_0
      36: getfield      #26                 // Field size:I
      39: ireturn
      40: aload_1
      41: monitorexit
      42: athrow
    Exception table:
       from    to  target type
           4    35    40   any

  public scala.collection.generic.GenericCompanion<scala.collection.immutable.Iterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/immutable/Iterable$class.companion:(Lscala/collection/immutable/Iterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.parallel.Combiner<To, scala.collection.parallel.immutable.ParIterable<To>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/immutable/Iterable$class.parCombiner:(Lscala/collection/immutable/Iterable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.immutable.Iterable<To> seq();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method scala/collection/immutable/Iterable$class.seq:(Lscala/collection/immutable/Iterable;)Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.Iterable<To> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public boolean forall(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<To> find(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #87                 // Method scala/collection/IterableLike$class.isEmpty:(Lscala/collection/IterableLike;)Z
       4: ireturn

  public <B> B foldRight(B, scala.Function2<To, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<To, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<To> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #103                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<To> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #107                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public To head();
    Code:
       0: aload_0
       1: invokestatic  #112                // Method scala/collection/IterableLike$class.head:(Lscala/collection/IterableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #117                // Method scala/collection/IterableLike$class.slice:(Lscala/collection/IterableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #124                // Method scala/collection/IterableLike$class.take:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #128                // Method scala/collection/IterableLike$class.drop:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method scala/collection/IterableLike$class.takeWhile:(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<To>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #138                // Method scala/collection/IterableLike$class.grouped:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<To>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #141                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<To>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #145                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #149                // Method scala/collection/IterableLike$class.takeRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #152                // Method scala/collection/IterableLike$class.dropRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #157                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #165                // Method scala/collection/IterableLike$class.zip:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #174                // Method scala/collection/IterableLike$class.zipAll:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method scala/collection/IterableLike$class.zipWithIndex:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #186                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<To> toStream();
    Code:
       0: aload_0
       1: invokestatic  #191                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #196                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #201                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<To, scala.collection.immutable.Iterable<To>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #205                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.mutable.Builder<To, scala.collection.immutable.Iterable<To>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #212                // Method scala/collection/generic/GenericTraversableTemplate$class.newBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.immutable.Iterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #215                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>> unzip(scala.Function1<To, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>, scala.collection.immutable.Iterable<A3>> unzip3(scala.Function1<To, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #236                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #241                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #245                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #248                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #253                // Method scala/collection/TraversableLike$class.$plus$plus:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #259                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #264                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<To, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #270                // Method scala/collection/TraversableLike$class.map:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<To, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #274                // Method scala/collection/TraversableLike$class.flatMap:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // Method scala/collection/TraversableLike$class.filter:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #281                // Method scala/collection/TraversableLike$class.filterNot:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<To, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // Method scala/collection/TraversableLike$class.collect:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.immutable.Iterable<To>, scala.collection.immutable.Iterable<To>> partition(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // Method scala/collection/TraversableLike$class.partition:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.Iterable<To>> groupBy(scala.Function1<To, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #297                // Method scala/collection/TraversableLike$class.groupBy:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #302                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, To, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #306                // Method scala/collection/TraversableLike$class.scanLeft:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<To, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<To>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #309                // Method scala/collection/TraversableLike$class.scanRight:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.Option<To> headOption();
    Code:
       0: aload_0
       1: invokestatic  #314                // Method scala/collection/TraversableLike$class.headOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokestatic  #317                // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public To last();
    Code:
       0: aload_0
       1: invokestatic  #320                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<To> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #323                // Method scala/collection/TraversableLike$class.lastOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokestatic  #326                // Method scala/collection/TraversableLike$class.init:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #331                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #336                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/TraversableLike$class.dropWhile:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.Iterable<To>, scala.collection.immutable.Iterable<To>> span(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #342                // Method scala/collection/TraversableLike$class.span:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.Iterable<To>, scala.collection.immutable.Iterable<To>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #347                // Method scala/collection/TraversableLike$class.splitAt:(Lscala/collection/TraversableLike;I)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<To>> tails();
    Code:
       0: aload_0
       1: invokestatic  #351                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<To>> inits();
    Code:
       0: aload_0
       1: invokestatic  #354                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<To> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #359                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, To, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #363                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #368                // Method scala/collection/TraversableLike$class.toString:(Lscala/collection/TraversableLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #371                // Method scala/collection/TraversableLike$class.stringPrefix:(Lscala/collection/TraversableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.generic.FilterMonadic<To, scala.collection.immutable.Iterable<To>> withFilter(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #376                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #383                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<To> reversed();
    Code:
       0: aload_0
       1: invokestatic  #390                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #394                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<To, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #399                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<To, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, To, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #408                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<To, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, To, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #414                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, To, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #418                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, To, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #423                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<To, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #426                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #432                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #435                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, To, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #440                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #448                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #453                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> To min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #458                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> To max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> To maxBy(scala.Function1<To, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #468                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> To minBy(scala.Function1<To, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #471                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #476                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #482                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #491                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<To> toList();
    Code:
       0: aload_0
       1: invokestatic  #496                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Seq<To> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #501                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<To> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #506                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #511                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #516                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<To> toVector();
    Code:
       0: aload_0
       1: invokestatic  #521                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<To, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #526                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #533                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #540                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #543                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #548                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #554                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #558                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public abstract boolean isDefinedAt(From);

  public abstract To apply(From);

  public abstract scala.collection.Iterator<From> valuesIterator();

  public final scala.collection.Iterator<To> iterator();
    Code:
       0: aload_0
       1: invokevirtual #564                // Method valuesIterator:()Lscala/collection/Iterator;
       4: astore_1
       5: new           #566                // class akka/util/Collections$PartialImmutableValuesIterable$$anon$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #570                // Method akka/util/Collections$PartialImmutableValuesIterable$$anon$1."<init>":(Lakka/util/Collections$PartialImmutableValuesIterable;Lscala/collection/Iterator;)V
      14: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #16                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #26                 // Field size:I
      11: goto          18
      14: aload_0
      15: invokespecial #574                // Method size$lzycompute:()I
      18: ireturn

  public <C> void foreach(scala.Function1<To, C>);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method iterator:()Lscala/collection/Iterator;
       4: aload_1
       5: invokeinterface #578,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      10: return

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #581                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #584                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #587                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #590                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #593                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #596                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #599                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #602                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #605                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #607                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #610                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #610                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.immutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #610                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #610                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public akka.util.Collections$PartialImmutableValuesIterable();
    Code:
       0: aload_0
       1: invokespecial #614                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #618                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
       8: aload_0
       9: invokestatic  #621                // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      12: aload_0
      13: invokestatic  #624                // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      16: aload_0
      17: invokestatic  #627                // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      20: aload_0
      21: invokestatic  #632                // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      24: aload_0
      25: invokestatic  #637                // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      28: aload_0
      29: invokestatic  #642                // Method scala/collection/immutable/Traversable$class.$init$:(Lscala/collection/immutable/Traversable;)V
      32: aload_0
      33: invokestatic  #647                // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      36: aload_0
      37: invokestatic  #650                // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      40: aload_0
      41: invokestatic  #655                // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      44: aload_0
      45: invokestatic  #658                // Method scala/collection/immutable/Iterable$class.$init$:(Lscala/collection/immutable/Iterable;)V
      48: return
}
