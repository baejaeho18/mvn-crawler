Compiled from "LineNumbers.scala"
public final class akka.util.LineNumbers$ {
  public static final akka.util.LineNumbers$ MODULE$;

  private final boolean debug;

  public static {};
    Code:
       0: new           #2                  // class akka/util/LineNumbers$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.util.LineNumbers$Result apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method forObject:(Ljava/lang/Object;)Lakka/util/LineNumbers$Result;
       5: areturn

  public akka.util.LineNumbers$Result for(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method apply:(Ljava/lang/Object;)Lakka/util/LineNumbers$Result;
       5: areturn

  public java.lang.String prettyName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method apply:(Ljava/lang/Object;)Lakka/util/LineNumbers$Result;
       5: astore_2
       6: getstatic     #32                 // Field akka/util/LineNumbers$NoSourceInfo$.MODULE$:Lakka/util/LineNumbers$NoSourceInfo$;
       9: aload_2
      10: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ifeq          27
      16: aload_1
      17: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: astore_3
      24: goto          281
      27: aload_2
      28: instanceof    #48                 // class akka/util/LineNumbers$UnknownSourceFormat
      31: ifeq          114
      34: aload_2
      35: checkcast     #48                 // class akka/util/LineNumbers$UnknownSourceFormat
      38: astore        4
      40: aload         4
      42: invokevirtual #51                 // Method akka/util/LineNumbers$UnknownSourceFormat.explanation:()Ljava/lang/String;
      45: astore        5
      47: new           #53                 // class scala/StringContext
      50: dup
      51: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      54: iconst_3
      55: anewarray     #60                 // class java/lang/String
      58: dup
      59: iconst_0
      60: ldc           #62                 // String
      62: aastore
      63: dup
      64: iconst_1
      65: ldc           #64                 // String (
      67: aastore
      68: dup
      69: iconst_2
      70: ldc           #66                 // String )
      72: aastore
      73: checkcast     #68                 // class "[Ljava/lang/Object;"
      76: invokevirtual #72                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      79: invokespecial #75                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      82: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: iconst_2
      86: anewarray     #4                  // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_1
      92: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      95: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      98: aastore
      99: dup
     100: iconst_1
     101: aload         5
     103: aastore
     104: invokevirtual #79                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     107: invokevirtual #83                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     110: astore_3
     111: goto          281
     114: aload_2
     115: instanceof    #85                 // class akka/util/LineNumbers$SourceFile
     118: ifeq          201
     121: aload_2
     122: checkcast     #85                 // class akka/util/LineNumbers$SourceFile
     125: astore        6
     127: aload         6
     129: invokevirtual #88                 // Method akka/util/LineNumbers$SourceFile.filename:()Ljava/lang/String;
     132: astore        7
     134: new           #53                 // class scala/StringContext
     137: dup
     138: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     141: iconst_3
     142: anewarray     #60                 // class java/lang/String
     145: dup
     146: iconst_0
     147: ldc           #62                 // String
     149: aastore
     150: dup
     151: iconst_1
     152: ldc           #64                 // String (
     154: aastore
     155: dup
     156: iconst_2
     157: ldc           #66                 // String )
     159: aastore
     160: checkcast     #68                 // class "[Ljava/lang/Object;"
     163: invokevirtual #72                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     166: invokespecial #75                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     169: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     172: iconst_2
     173: anewarray     #4                  // class java/lang/Object
     176: dup
     177: iconst_0
     178: aload_1
     179: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     182: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
     185: aastore
     186: dup
     187: iconst_1
     188: aload         7
     190: aastore
     191: invokevirtual #79                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     194: invokevirtual #83                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     197: astore_3
     198: goto          281
     201: aload_2
     202: instanceof    #90                 // class akka/util/LineNumbers$SourceFileLines
     205: ifeq          283
     208: aload_2
     209: checkcast     #90                 // class akka/util/LineNumbers$SourceFileLines
     212: astore        8
     214: new           #53                 // class scala/StringContext
     217: dup
     218: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     221: iconst_3
     222: anewarray     #60                 // class java/lang/String
     225: dup
     226: iconst_0
     227: ldc           #62                 // String
     229: aastore
     230: dup
     231: iconst_1
     232: ldc           #92                 // String /
     234: aastore
     235: dup
     236: iconst_2
     237: ldc           #62                 // String
     239: aastore
     240: checkcast     #68                 // class "[Ljava/lang/Object;"
     243: invokevirtual #72                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     246: invokespecial #75                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     249: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     252: iconst_2
     253: anewarray     #4                  // class java/lang/Object
     256: dup
     257: iconst_0
     258: aload_1
     259: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     262: invokevirtual #96                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     265: invokevirtual #99                 // Method java/lang/Package.getName:()Ljava/lang/String;
     268: aastore
     269: dup
     270: iconst_1
     271: aload         8
     273: aastore
     274: invokevirtual #79                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     277: invokevirtual #83                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     280: astore_3
     281: aload_3
     282: areturn
     283: new           #101                // class scala/MatchError
     286: dup
     287: aload_2
     288: invokespecial #104                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     291: athrow

  private final boolean debug();
    Code:
       0: iconst_0
       1: ireturn

  private akka.util.LineNumbers$Result forObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokespecial #114                // Method getStreamForClass:(Ljava/lang/Class;)Lscala/Option;
       8: new           #116                // class akka/util/LineNumbers$$anonfun$2
      11: dup
      12: aload_1
      13: invokespecial #117                // Method akka/util/LineNumbers$$anonfun$2."<init>":(Ljava/lang/Object;)V
      16: invokevirtual #123                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
      19: astore_2
      20: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
      23: aload_2
      24: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          37
      30: getstatic     #32                 // Field akka/util/LineNumbers$NoSourceInfo$.MODULE$:Lakka/util/LineNumbers$NoSourceInfo$;
      33: astore_3
      34: goto          94
      37: aload_2
      38: instanceof    #130                // class scala/Some
      41: ifeq          96
      44: aload_2
      45: checkcast     #130                // class scala/Some
      48: astore        4
      50: aload         4
      52: invokevirtual #134                // Method scala/Some.x:()Ljava/lang/Object;
      55: checkcast     #136                // class scala/Tuple2
      58: astore        5
      60: aload         5
      62: ifnull        96
      65: aload         5
      67: invokevirtual #139                // Method scala/Tuple2._1:()Ljava/lang/Object;
      70: checkcast     #141                // class java/io/InputStream
      73: astore        6
      75: aload         5
      77: invokevirtual #144                // Method scala/Tuple2._2:()Ljava/lang/Object;
      80: checkcast     #119                // class scala/Option
      83: astore        7
      85: aload_0
      86: aload         6
      88: aload         7
      90: invokespecial #148                // Method getInfo:(Ljava/io/InputStream;Lscala/Option;)Lakka/util/LineNumbers$Result;
      93: astore_3
      94: aload_3
      95: areturn
      96: new           #101                // class scala/MatchError
      99: dup
     100: aload_2
     101: invokespecial #104                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     104: athrow

  private akka.util.LineNumbers$Result getInfo(java.io.InputStream, scala.Option<java.lang.String>);
    Code:
       0: new           #154                // class java/io/DataInputStream
       3: dup
       4: aload_1
       5: invokespecial #157                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #161                // Method skipID:(Ljava/io/DataInputStream;)V
      14: aload_0
      15: aload_3
      16: invokespecial #164                // Method skipVersion:(Ljava/io/DataInputStream;)V
      19: aload_0
      20: aload_3
      21: invokespecial #168                // Method getConstants:(Ljava/io/DataInputStream;)Lakka/util/LineNumbers$Constants;
      24: astore        16
      26: aload_0
      27: aload_3
      28: aload         16
      30: invokespecial #172                // Method skipClassInfo:(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;)V
      33: aload_0
      34: aload_3
      35: aload         16
      37: invokespecial #175                // Method skipInterfaceInfo:(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;)V
      40: aload_0
      41: aload_3
      42: aload         16
      44: invokespecial #178                // Method skipFields:(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;)V
      47: aload_0
      48: aload_3
      49: aload_2
      50: aload         16
      52: invokespecial #182                // Method readMethods:(Ljava/io/DataInputStream;Lscala/Option;Lakka/util/LineNumbers$Constants;)Lscala/Option;
      55: astore        17
      57: aload_0
      58: aload_3
      59: aload         16
      61: invokespecial #186                // Method readAttributes:(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;)Lscala/Option;
      64: astore        18
      66: aload         18
      68: invokevirtual #189                // Method scala/Option.isEmpty:()Z
      71: ifeq          80
      74: getstatic     #32                 // Field akka/util/LineNumbers$NoSourceInfo$.MODULE$:Lakka/util/LineNumbers$NoSourceInfo$;
      77: goto          359
      80: aload         17
      82: astore        19
      84: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
      87: aload         19
      89: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          115
      95: new           #85                 // class akka/util/LineNumbers$SourceFile
      98: dup
      99: aload         18
     101: invokevirtual #192                // Method scala/Option.get:()Ljava/lang/Object;
     104: checkcast     #60                 // class java/lang/String
     107: invokespecial #195                // Method akka/util/LineNumbers$SourceFile."<init>":(Ljava/lang/String;)V
     110: astore        20
     112: goto          180
     115: aload         19
     117: instanceof    #130                // class scala/Some
     120: ifeq          185
     123: aload         19
     125: checkcast     #130                // class scala/Some
     128: astore        21
     130: aload         21
     132: invokevirtual #134                // Method scala/Some.x:()Ljava/lang/Object;
     135: checkcast     #136                // class scala/Tuple2
     138: astore        22
     140: aload         22
     142: ifnull        185
     145: aload         22
     147: invokevirtual #199                // Method scala/Tuple2._1$mcI$sp:()I
     150: istore        23
     152: aload         22
     154: invokevirtual #202                // Method scala/Tuple2._2$mcI$sp:()I
     157: istore        24
     159: new           #90                 // class akka/util/LineNumbers$SourceFileLines
     162: dup
     163: aload         18
     165: invokevirtual #192                // Method scala/Option.get:()Ljava/lang/Object;
     168: checkcast     #60                 // class java/lang/String
     171: iload         23
     173: iload         24
     175: invokespecial #205                // Method akka/util/LineNumbers$SourceFileLines."<init>":(Ljava/lang/String;II)V
     178: astore        20
     180: aload         20
     182: goto          359
     185: new           #101                // class scala/MatchError
     188: dup
     189: aload         19
     191: invokespecial #104                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     194: athrow
     195: astore        4
     197: aload         4
     199: astore        12
     201: getstatic     #210                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     204: aload         12
     206: invokevirtual #214                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     209: astore        13
     211: aload         13
     213: invokevirtual #189                // Method scala/Option.isEmpty:()Z
     216: ifeq          222
     219: aload         4
     221: athrow
     222: aload         13
     224: invokevirtual #192                // Method scala/Option.get:()Ljava/lang/Object;
     227: checkcast     #216                // class java/lang/Throwable
     230: astore        14
     232: new           #48                 // class akka/util/LineNumbers$UnknownSourceFormat
     235: dup
     236: new           #53                 // class scala/StringContext
     239: dup
     240: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     243: iconst_2
     244: anewarray     #60                 // class java/lang/String
     247: dup
     248: iconst_0
     249: ldc           #218                // String parse error:
     251: aastore
     252: dup
     253: iconst_1
     254: ldc           #62                 // String
     256: aastore
     257: checkcast     #68                 // class "[Ljava/lang/Object;"
     260: invokevirtual #72                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     263: invokespecial #75                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     266: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     269: iconst_1
     270: anewarray     #4                  // class java/lang/Object
     273: dup
     274: iconst_0
     275: aload         14
     277: invokevirtual #221                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     280: aastore
     281: invokevirtual #79                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     284: invokevirtual #83                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     287: invokespecial #222                // Method akka/util/LineNumbers$UnknownSourceFormat."<init>":(Ljava/lang/String;)V
     290: astore        15
     292: aload         15
     294: goto          359
     297: astore        6
     299: aload_3
     300: invokevirtual #225                // Method java/io/DataInputStream.close:()V
     303: goto          356
     306: astore        7
     308: aload         7
     310: astore        8
     312: aload         8
     314: instanceof    #227                // class java/lang/InterruptedException
     317: ifeq          330
     320: aload         8
     322: checkcast     #227                // class java/lang/InterruptedException
     325: astore        9
     327: aload         9
     329: athrow
     330: getstatic     #210                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     333: aload         8
     335: invokevirtual #214                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     338: astore        11
     340: aload         11
     342: invokevirtual #189                // Method scala/Option.isEmpty:()Z
     345: ifeq          351
     348: aload         7
     350: athrow
     351: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     354: astore        10
     356: aload         6
     358: athrow
     359: astore        5
     361: aload_3
     362: invokevirtual #225                // Method java/io/DataInputStream.close:()V
     365: goto          418
     368: astore        7
     370: aload         7
     372: astore        8
     374: aload         8
     376: instanceof    #227                // class java/lang/InterruptedException
     379: ifeq          392
     382: aload         8
     384: checkcast     #227                // class java/lang/InterruptedException
     387: astore        9
     389: aload         9
     391: athrow
     392: getstatic     #210                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     395: aload         8
     397: invokevirtual #214                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     400: astore        11
     402: aload         11
     404: invokevirtual #189                // Method scala/Option.isEmpty:()Z
     407: ifeq          413
     410: aload         7
     412: athrow
     413: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     416: astore        10
     418: aload         5
     420: areturn
    Exception table:
       from    to  target type
         361   368   368   any
           9   195   195   any
         299   306   306   any
           9   297   297   any

  private scala.Option<scala.Tuple2<java.io.InputStream, scala.None$>> getStreamForClass(java.lang.Class<?>);
    Code:
       0: new           #248                // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #249                // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: bipush        46
      13: bipush        47
      15: invokevirtual #253                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      18: invokevirtual #257                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      21: ldc_w         #259                // String .class
      24: invokevirtual #257                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      27: invokevirtual #262                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      30: astore_2
      31: aload_1
      32: invokevirtual #266                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      35: astore_3
      36: aload_3
      37: aload_2
      38: invokevirtual #272                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      41: astore        4
      43: getstatic     #277                // Field scala/Option$.MODULE$:Lscala/Option$;
      46: aload         4
      48: invokevirtual #280                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      51: new           #282                // class akka/util/LineNumbers$$anonfun$getStreamForClass$1
      54: dup
      55: invokespecial #283                // Method akka/util/LineNumbers$$anonfun$getStreamForClass$1."<init>":()V
      58: invokevirtual #287                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      61: areturn

  public scala.Option<scala.Tuple2<java.io.InputStream, scala.Some<java.lang.String>>> akka$util$LineNumbers$$getStreamForLambda(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        7
       6: aload         7
       8: ldc_w         #296                // String writeReplace
      11: iconst_0
      12: anewarray     #42                 // class java/lang/Class
      15: invokevirtual #300                // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      18: astore        8
      20: aload         8
      22: iconst_1
      23: invokevirtual #306                // Method java/lang/reflect/Method.setAccessible:(Z)V
      26: aload         8
      28: aload_1
      29: iconst_0
      30: anewarray     #4                  // class java/lang/Object
      33: invokevirtual #310                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      36: astore        9
      38: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
      41: astore        10
      43: aload         10
      45: goto          87
      48: astore_2
      49: aload_2
      50: astore_3
      51: getstatic     #210                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      54: aload_3
      55: invokevirtual #214                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      58: astore        4
      60: aload         4
      62: invokevirtual #189                // Method scala/Option.isEmpty:()Z
      65: ifeq          70
      68: aload_2
      69: athrow
      70: aload         4
      72: invokevirtual #192                // Method scala/Option.get:()Ljava/lang/Object;
      75: checkcast     #216                // class java/lang/Throwable
      78: astore        5
      80: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
      83: astore        6
      85: aload         6
      87: areturn
    Exception table:
       from    to  target type
           0    48    48   any

  private void skipID(java.io.DataInputStream);
    Code:
       0: aload_1
       1: invokevirtual #315                // Method java/io/DataInputStream.readInt:()I
       4: istore_2
       5: iload_2
       6: ldc_w         #316                // int -889275714
       9: if_icmpeq     23
      12: new           #318                // class java/lang/IllegalArgumentException
      15: dup
      16: ldc_w         #320                // String not a Java class file
      19: invokespecial #321                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  private void skipVersion(java.io.DataInputStream);
    Code:
       0: aload_1
       1: invokevirtual #327                // Method java/io/DataInputStream.readShort:()S
       4: istore_2
       5: aload_1
       6: invokevirtual #327                // Method java/io/DataInputStream.readShort:()S
       9: istore_3
      10: return

  private akka.util.LineNumbers$Constants getConstants(java.io.DataInputStream);
    Code:
       0: aload_1
       1: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_2
       5: new           #246                // class akka/util/LineNumbers$Constants
       8: dup
       9: iload_2
      10: invokespecial #336                // Method akka/util/LineNumbers$Constants."<init>":(I)V
      13: astore_3
      14: aload_3
      15: invokevirtual #339                // Method akka/util/LineNumbers$Constants.isDone:()Z
      18: ifeq          27
      21: aload_3
      22: invokevirtual #342                // Method akka/util/LineNumbers$Constants.resolve:()V
      25: aload_3
      26: areturn
      27: aload_3
      28: aload_1
      29: invokevirtual #345                // Method akka/util/LineNumbers$Constants.readOne:(Ljava/io/DataInputStream;)V
      32: goto          14

  private void skipClassInfo(java.io.DataInputStream, akka.util.LineNumbers$Constants);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
      10: istore_3
      11: aload_0
      12: aload_1
      13: iconst_2
      14: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      17: return

  private void skipInterfaceInfo(java.io.DataInputStream, akka.util.LineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       8: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_1
      12: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
      15: iload_3
      16: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      19: new           #366                // class akka/util/LineNumbers$$anonfun$skipInterfaceInfo$1
      22: dup
      23: aload_1
      24: invokespecial #368                // Method akka/util/LineNumbers$$anonfun$skipInterfaceInfo$1."<init>":(Ljava/io/DataInputStream;)V
      27: invokevirtual #374                // Method scala/collection/immutable/Range$Inclusive.foreach$mVc$sp:(Lscala/Function1;)V
      30: return

  private void skipFields(java.io.DataInputStream, akka.util.LineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       8: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_1
      12: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
      15: iload_3
      16: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      19: new           #376                // class akka/util/LineNumbers$$anonfun$skipFields$1
      22: dup
      23: aload_1
      24: aload_2
      25: invokespecial #378                // Method akka/util/LineNumbers$$anonfun$skipFields$1."<init>":(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;)V
      28: invokevirtual #374                // Method scala/collection/immutable/Range$Inclusive.foreach$mVc$sp:(Lscala/Function1;)V
      31: return

  public void akka$util$LineNumbers$$skipMethodOrField(java.io.DataInputStream, akka.util.LineNumbers$Constants);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
      10: istore_3
      11: aload_0
      12: aload_1
      13: iconst_2
      14: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      17: aload_1
      18: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
      21: istore        4
      23: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      26: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: iconst_1
      30: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
      33: iload         4
      35: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      38: new           #381                // class akka/util/LineNumbers$$anonfun$akka$util$LineNumbers$$skipMethodOrField$1
      41: dup
      42: aload_1
      43: invokespecial #382                // Method akka/util/LineNumbers$$anonfun$akka$util$LineNumbers$$skipMethodOrField$1."<init>":(Ljava/io/DataInputStream;)V
      46: invokevirtual #374                // Method scala/collection/immutable/Range$Inclusive.foreach$mVc$sp:(Lscala/Function1;)V
      49: return

  public void akka$util$LineNumbers$$skipAttribute(java.io.DataInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #315                // Method java/io/DataInputStream.readInt:()I
      10: istore_2
      11: aload_0
      12: aload_1
      13: iload_2
      14: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      17: return

  private scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> readMethods(java.io.DataInputStream, scala.Option<java.lang.String>, akka.util.LineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore        4
       6: aload_3
       7: ldc_w         #387                // String Code
      10: invokevirtual #391                // Method akka/util/LineNumbers$Constants.contains:(Ljava/lang/String;)Z
      13: ifeq          174
      16: aload_3
      17: ldc_w         #393                // String LineNumberTable
      20: invokevirtual #391                // Method akka/util/LineNumbers$Constants.contains:(Ljava/lang/String;)Z
      23: ifeq          174
      26: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      29: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: iconst_1
      33: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
      36: iload         4
      38: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      41: new           #395                // class akka/util/LineNumbers$$anonfun$3
      44: dup
      45: aload_1
      46: aload_2
      47: aload_3
      48: invokespecial #398                // Method akka/util/LineNumbers$$anonfun$3."<init>":(Ljava/io/DataInputStream;Lscala/Option;Lakka/util/LineNumbers$Constants;)V
      51: getstatic     #403                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      54: invokevirtual #407                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      57: invokevirtual #410                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      60: checkcast     #412                // class scala/collection/generic/GenericTraversableTemplate
      63: new           #414                // class akka/util/LineNumbers$$anonfun$4
      66: dup
      67: invokespecial #415                // Method akka/util/LineNumbers$$anonfun$4."<init>":()V
      70: invokeinterface #419,  2          // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
      75: checkcast     #421                // class scala/collection/TraversableOnce
      78: getstatic     #426                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      81: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      84: ldc_w         #427                // int 2147483647
      87: invokestatic  #433                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      90: invokevirtual #437                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      93: iconst_0
      94: invokestatic  #433                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      97: invokevirtual #441                // Method scala/Predef$ArrowAssoc$.$u2192$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     100: new           #443                // class akka/util/LineNumbers$$anonfun$5
     103: dup
     104: invokespecial #444                // Method akka/util/LineNumbers$$anonfun$5."<init>":()V
     107: invokeinterface #448,  3          // InterfaceMethod scala/collection/TraversableOnce.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     112: checkcast     #136                // class scala/Tuple2
     115: astore        5
     117: aload         5
     119: ifnull        158
     122: aload         5
     124: invokevirtual #199                // Method scala/Tuple2._1$mcI$sp:()I
     127: istore        6
     129: aload         5
     131: invokevirtual #202                // Method scala/Tuple2._2$mcI$sp:()I
     134: istore        7
     136: ldc_w         #427                // int 2147483647
     139: iload         6
     141: if_icmpne     158
     144: iconst_0
     145: iload         7
     147: if_icmpne     158
     150: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
     153: astore        8
     155: goto          169
     158: new           #130                // class scala/Some
     161: dup
     162: aload         5
     164: invokespecial #449                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     167: astore        8
     169: aload         8
     171: goto          204
     174: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     177: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     180: iconst_1
     181: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
     184: iload         4
     186: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
     189: new           #451                // class akka/util/LineNumbers$$anonfun$readMethods$1
     192: dup
     193: aload_1
     194: aload_3
     195: invokespecial #452                // Method akka/util/LineNumbers$$anonfun$readMethods$1."<init>":(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;)V
     198: invokevirtual #374                // Method scala/collection/immutable/Range$Inclusive.foreach$mVc$sp:(Lscala/Function1;)V
     201: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
     204: areturn

  public scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> akka$util$LineNumbers$$readMethod(java.io.DataInputStream, int, int, scala.Option<java.lang.String>, akka.util.LineNumbers$Constants);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
      10: istore        6
      12: aload_0
      13: aload_1
      14: iconst_2
      15: invokevirtual #350                // Method akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      18: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      21: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: iconst_1
      25: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
      28: aload_1
      29: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
      32: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      35: new           #456                // class akka/util/LineNumbers$$anonfun$6
      38: dup
      39: aload_1
      40: iload_2
      41: iload_3
      42: aload         4
      44: aload         5
      46: iload         6
      48: invokespecial #459                // Method akka/util/LineNumbers$$anonfun$6."<init>":(Ljava/io/DataInputStream;IILscala/Option;Lakka/util/LineNumbers$Constants;I)V
      51: getstatic     #403                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      54: invokevirtual #407                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      57: invokevirtual #410                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      60: checkcast     #461                // class scala/collection/immutable/IndexedSeq
      63: astore        7
      65: aload         7
      67: new           #463                // class akka/util/LineNumbers$$anonfun$akka$util$LineNumbers$$readMethod$1
      70: dup
      71: invokespecial #464                // Method akka/util/LineNumbers$$anonfun$akka$util$LineNumbers$$readMethod$1."<init>":()V
      74: invokeinterface #465,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
      79: checkcast     #467                // class scala/collection/TraversableLike
      82: invokeinterface #471,  1          // InterfaceMethod scala/collection/TraversableLike.headOption:()Lscala/Option;
      87: areturn

  private scala.Option<java.lang.String> readAttributes(java.io.DataInputStream, akka.util.LineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #333                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: aload_2
       6: ldc_w         #476                // String SourceFile
       9: invokevirtual #391                // Method akka/util/LineNumbers$Constants.contains:(Ljava/lang/String;)Z
      12: ifeq          88
      15: aload_2
      16: ldc_w         #476                // String SourceFile
      19: invokevirtual #479                // Method akka/util/LineNumbers$Constants.apply:(Ljava/lang/String;)I
      22: istore        4
      24: getstatic     #356                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      27: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      30: iconst_1
      31: invokevirtual #360                // Method scala/Predef$.intWrapper:(I)I
      34: iload_3
      35: invokevirtual #364                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      38: new           #481                // class akka/util/LineNumbers$$anonfun$8
      41: dup
      42: aload_1
      43: aload_2
      44: iload         4
      46: invokespecial #484                // Method akka/util/LineNumbers$$anonfun$8."<init>":(Ljava/io/DataInputStream;Lakka/util/LineNumbers$Constants;I)V
      49: getstatic     #403                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      52: invokevirtual #407                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      55: invokevirtual #410                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      58: checkcast     #461                // class scala/collection/immutable/IndexedSeq
      61: astore        5
      63: aload         5
      65: new           #486                // class akka/util/LineNumbers$$anonfun$readAttributes$1
      68: dup
      69: invokespecial #487                // Method akka/util/LineNumbers$$anonfun$readAttributes$1."<init>":()V
      72: invokeinterface #465,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
      77: checkcast     #467                // class scala/collection/TraversableLike
      80: invokeinterface #471,  1          // InterfaceMethod scala/collection/TraversableLike.headOption:()Lscala/Option;
      85: goto          91
      88: getstatic     #128                // Field scala/None$.MODULE$:Lscala/None$;
      91: areturn

  public void akka$util$LineNumbers$$skip(java.io.DataInputStream, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #490                // Method java/io/DataInputStream.skipBytes:(I)I
       5: iload_2
       6: if_icmpeq     20
       9: new           #318                // class java/lang/IllegalArgumentException
      12: dup
      13: ldc_w         #492                // String class file ends prematurely
      16: invokespecial #321                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  private akka.util.LineNumbers$();
    Code:
       0: aload_0
       1: invokespecial #493                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #495                // Field MODULE$:Lakka/util/LineNumbers$;
       8: return
}
