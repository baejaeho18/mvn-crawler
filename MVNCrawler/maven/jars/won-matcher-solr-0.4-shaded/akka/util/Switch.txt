Compiled from "LockUtil.scala"
public class akka.util.Switch {
  private final java.util.concurrent.atomic.AtomicBoolean switch;

  public static boolean $lessinit$greater$default$1();
    Code:
       0: getstatic     #16                 // Field akka/util/Switch$.MODULE$:Lakka/util/Switch$;
       3: invokevirtual #18                 // Method akka/util/Switch$.$lessinit$greater$default$1:()Z
       6: ireturn

  private java.util.concurrent.atomic.AtomicBoolean switch();
    Code:
       0: aload_0
       1: getfield      #23                 // Field switch:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  public synchronized boolean transcend(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: iload_1
       6: ifeq          13
       9: iconst_0
      10: goto          14
      13: iconst_1
      14: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      17: ifeq          30
      20: aload_2
      21: invokeinterface #41,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn
      32: astore_3
      33: aload_0
      34: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
      37: iload_1
      38: ifeq          45
      41: iconst_0
      42: goto          46
      45: iconst_1
      46: iload_1
      47: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      50: pop
      51: aload_3
      52: athrow
    Exception table:
       from    to  target type
          20    26    32   any

  public boolean switchOff(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokevirtual #51                 // Method transcend:(ZLscala/Function0;)Z
       6: ireturn

  public boolean switchOn(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #51                 // Method transcend:(ZLscala/Function0;)Z
       6: ireturn

  public synchronized boolean switchOff();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ireturn

  public synchronized boolean switchOn();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ireturn

  public <T> scala.Option<T> ifOnYield(scala.Function0<T>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          26
      10: new           #59                 // class scala/Some
      13: dup
      14: aload_1
      15: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: invokespecial #67                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      23: goto          29
      26: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
      29: areturn

  public <T> scala.Option<T> ifOffYield(scala.Function0<T>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          16
      10: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
      13: goto          29
      16: new           #59                 // class scala/Some
      19: dup
      20: aload_1
      21: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: invokespecial #67                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      29: areturn

  public boolean ifOn(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: aload_1
      11: invokeinterface #41,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean ifOff(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          14
      10: iconst_0
      11: goto          21
      14: aload_1
      15: invokeinterface #41,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      20: iconst_1
      21: ireturn

  public synchronized <T> scala.Option<T> whileOnYield(scala.Function0<T>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          26
      10: new           #59                 // class scala/Some
      13: dup
      14: aload_1
      15: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: invokespecial #67                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      23: goto          29
      26: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
      29: areturn

  public synchronized <T> scala.Option<T> whileOffYield(scala.Function0<T>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          16
      10: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
      13: goto          29
      16: new           #59                 // class scala/Some
      19: dup
      20: aload_1
      21: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: invokespecial #67                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      29: areturn

  public synchronized boolean whileOn(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: aload_1
      11: invokeinterface #41,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public synchronized boolean whileOff(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          14
      10: iconst_0
      11: goto          21
      14: aload_1
      15: invokeinterface #41,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      20: iconst_1
      21: ireturn

  public synchronized <T> T fold(scala.Function0<T>, scala.Function0<T>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          19
      10: aload_1
      11: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: goto          25
      19: aload_2
      20: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: areturn

  public synchronized <T> T locked(scala.Function0<T>);
    Code:
       0: aload_1
       1: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  public boolean isOn();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method switch:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean isOff();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method isOn:()Z
       4: ifeq          11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: ireturn

  public akka.util.Switch(boolean);
    Code:
       0: aload_0
       1: invokespecial #95                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #31                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iload_1
      10: invokespecial #97                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #23                 // Field switch:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: return
}
