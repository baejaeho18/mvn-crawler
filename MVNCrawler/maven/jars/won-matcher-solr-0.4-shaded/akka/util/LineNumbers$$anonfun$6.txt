Compiled from "LineNumbers.scala"
public final class akka.util.LineNumbers$$anonfun$6 extends scala.runtime.AbstractFunction1<java.lang.Object, scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final java.io.DataInputStream d$6;

  private final int codeTag$1;

  public final int lineNumberTableTag$1;

  private final scala.Option filter$2;

  private final akka.util.LineNumbers$Constants c$4;

  private final int name$1;

  public final scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> apply(int);
    Code:
       0: aload_0
       1: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
       4: invokevirtual #37                 // Method java/io/DataInputStream.readUnsignedShort:()I
       7: istore_2
       8: aload_0
       9: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
      12: invokevirtual #40                 // Method java/io/DataInputStream.readInt:()I
      15: istore_3
      16: iload_2
      17: aload_0
      18: getfield      #42                 // Field codeTag$1:I
      21: if_icmpne     75
      24: aload_0
      25: getfield      #44                 // Field filter$2:Lscala/Option;
      28: invokevirtual #50                 // Method scala/Option.isDefined:()Z
      31: ifeq          92
      34: aload_0
      35: getfield      #52                 // Field c$4:Lakka/util/LineNumbers$Constants;
      38: aload_0
      39: getfield      #54                 // Field name$1:I
      42: invokevirtual #59                 // Method akka/util/LineNumbers$Constants.apply:(I)Ljava/lang/String;
      45: aload_0
      46: getfield      #44                 // Field filter$2:Lscala/Option;
      49: invokevirtual #63                 // Method scala/Option.get:()Ljava/lang/Object;
      52: astore        4
      54: dup
      55: ifnonnull     67
      58: pop
      59: aload         4
      61: ifnull        92
      64: goto          75
      67: aload         4
      69: invokevirtual #69                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      72: ifne          92
      75: getstatic     #73                 // Field akka/util/LineNumbers$.MODULE$:Lakka/util/LineNumbers$;
      78: aload_0
      79: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
      82: iload_3
      83: invokevirtual #77                 // Method akka/util/LineNumbers$.akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      86: getstatic     #82                 // Field scala/None$.MODULE$:Lscala/None$;
      89: goto          205
      92: getstatic     #73                 // Field akka/util/LineNumbers$.MODULE$:Lakka/util/LineNumbers$;
      95: aload_0
      96: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
      99: iconst_4
     100: invokevirtual #77                 // Method akka/util/LineNumbers$.akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
     103: getstatic     #73                 // Field akka/util/LineNumbers$.MODULE$:Lakka/util/LineNumbers$;
     106: aload_0
     107: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
     110: aload_0
     111: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
     114: invokevirtual #40                 // Method java/io/DataInputStream.readInt:()I
     117: invokevirtual #77                 // Method akka/util/LineNumbers$.akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
     120: getstatic     #73                 // Field akka/util/LineNumbers$.MODULE$:Lakka/util/LineNumbers$;
     123: aload_0
     124: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
     127: bipush        8
     129: aload_0
     130: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
     133: invokevirtual #37                 // Method java/io/DataInputStream.readUnsignedShort:()I
     136: imul
     137: invokevirtual #77                 // Method akka/util/LineNumbers$.akka$util$LineNumbers$$skip:(Ljava/io/DataInputStream;I)V
     140: getstatic     #87                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     143: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     146: iconst_1
     147: invokevirtual #96                 // Method scala/Predef$.intWrapper:(I)I
     150: aload_0
     151: getfield      #31                 // Field d$6:Ljava/io/DataInputStream;
     154: invokevirtual #37                 // Method java/io/DataInputStream.readUnsignedShort:()I
     157: invokevirtual #100                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
     160: new           #102                // class akka/util/LineNumbers$$anonfun$6$$anonfun$7
     163: dup
     164: aload_0
     165: invokespecial #106                // Method akka/util/LineNumbers$$anonfun$6$$anonfun$7."<init>":(Lakka/util/LineNumbers$$anonfun$6;)V
     168: getstatic     #111                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     171: invokevirtual #115                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     174: invokevirtual #121                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     177: checkcast     #123                // class scala/collection/immutable/IndexedSeq
     180: astore        5
     182: aload         5
     184: new           #125                // class akka/util/LineNumbers$$anonfun$6$$anonfun$apply$1
     187: dup
     188: aload_0
     189: invokespecial #126                // Method akka/util/LineNumbers$$anonfun$6$$anonfun$apply$1."<init>":(Lakka/util/LineNumbers$$anonfun$6;)V
     192: invokeinterface #130,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
     197: checkcast     #132                // class scala/collection/TraversableLike
     200: invokeinterface #136,  1          // InterfaceMethod scala/collection/TraversableLike.headOption:()Lscala/Option;
     205: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #154                // Method apply:(I)Lscala/Option;
       8: areturn

  public akka.util.LineNumbers$$anonfun$6(java.io.DataInputStream, int, int, scala.Option, akka.util.LineNumbers$Constants, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field d$6:Ljava/io/DataInputStream;
       5: aload_0
       6: iload_2
       7: putfield      #42                 // Field codeTag$1:I
      10: aload_0
      11: iload_3
      12: putfield      #159                // Field lineNumberTableTag$1:I
      15: aload_0
      16: aload         4
      18: putfield      #44                 // Field filter$2:Lscala/Option;
      21: aload_0
      22: aload         5
      24: putfield      #52                 // Field c$4:Lakka/util/LineNumbers$Constants;
      27: aload_0
      28: iload         6
      30: putfield      #54                 // Field name$1:I
      33: aload_0
      34: invokespecial #162                // Method scala/runtime/AbstractFunction1."<init>":()V
      37: return
}
