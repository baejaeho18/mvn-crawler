Compiled from "ByteIterator.scala"
public abstract class akka.util.ByteIterator implements scala.collection.BufferedIterator<java.lang.Object> {
  public scala.collection.BufferedIterator<java.lang.Object> buffered();
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method scala/collection/BufferedIterator$class.buffered:(Lscala/collection/BufferedIterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public scala.collection.Iterator<java.lang.Object> seq();
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<java.lang.Object, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<java.lang.Object> filter(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<java.lang.Object, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<java.lang.Object> withFilter(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<java.lang.Object> filterNot(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<java.lang.Object, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.Tuple2<scala.collection.Iterator<java.lang.Object>, scala.collection.Iterator<java.lang.Object>> partition(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<java.lang.Object, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #105                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<java.lang.Object, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #111                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #116                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public boolean forall(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<java.lang.Object> find(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> scala.collection.Iterator<java.lang.Object>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #141                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<java.lang.Object>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #147                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #153                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #158                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #166                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<java.lang.Object> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #177                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<java.lang.Object> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #180                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<java.lang.Object> toStream();
    Code:
       0: aload_0
       1: invokestatic  #185                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #190                // Method scala/collection/Iterator$class.toString:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #193                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<java.lang.Object> reversed();
    Code:
       0: aload_0
       1: invokestatic  #200                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #203                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #207                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #222                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<java.lang.Object, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #225                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<java.lang.Object, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #228                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #233                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<java.lang.Object, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #236                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, java.lang.Object, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<java.lang.Object, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #247                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #253                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, java.lang.Object, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #258                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #270                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #275                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #280                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #285                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #288                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #299                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #303                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public scala.collection.immutable.List<java.lang.Object> toList();
    Code:
       0: aload_0
       1: invokestatic  #306                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<java.lang.Object> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #311                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.immutable.IndexedSeq<java.lang.Object> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #316                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #321                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #326                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<java.lang.Object> toVector();
    Code:
       0: aload_0
       1: invokestatic  #331                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, java.lang.Object, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #336                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<java.lang.Object, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #350                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #360                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #365                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #371                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public abstract int len();

  public abstract byte head();

  public abstract byte next();

  public abstract void clear();

  public akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce<java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #385,  1          // InterfaceMethod scala/collection/TraversableOnce.isEmpty:()Z
       6: ifeq          13
       9: aload_0
      10: goto          34
      13: getstatic     #391                // Field akka/util/ByteIterator$ByteArrayIterator$.MODULE$:Lakka/util/ByteIterator$ByteArrayIterator$;
      16: aload_1
      17: getstatic     #396                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      20: invokevirtual #400                // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ClassTag;
      23: invokeinterface #404,  2          // InterfaceMethod scala/collection/TraversableOnce.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      28: checkcast     #406                // class "[B"
      31: invokevirtual #410                // Method akka/util/ByteIterator$ByteArrayIterator$.apply:([B)Lakka/util/ByteIterator$ByteArrayIterator;
      34: areturn

  public akka.util.ByteIterator clone();
    Code:
       0: new           #415                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #417                // String Method clone is not implemented in ByteIterator
       7: invokespecial #421                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public scala.Tuple2<akka.util.ByteIterator, akka.util.ByteIterator> duplicate();
    Code:
       0: new           #425                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #427                // Method clone:()Lakka/util/ByteIterator;
       9: invokespecial #430                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      12: areturn

  public akka.util.ByteIterator take(int);
    Code:
       0: new           #415                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #434                // String Method take is not implemented in ByteIterator
       7: invokespecial #421                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public akka.util.ByteIterator drop(int);
    Code:
       0: new           #415                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #438                // String Method drop is not implemented in ByteIterator
       7: invokespecial #421                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public akka.util.ByteIterator slice(int, int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmple     19
       5: aload_0
       6: iload_1
       7: invokevirtual #442                // Method drop:(I)Lakka/util/ByteIterator;
      10: iload_2
      11: iload_1
      12: isub
      13: invokevirtual #444                // Method take:(I)Lakka/util/ByteIterator;
      16: goto          24
      19: aload_0
      20: iload_2
      21: invokevirtual #444                // Method take:(I)Lakka/util/ByteIterator;
      24: areturn

  public akka.util.ByteIterator takeWhile(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: new           #415                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #449                // String Method takeWhile is not implemented in ByteIterator
       7: invokespecial #421                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public akka.util.ByteIterator dropWhile(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: new           #415                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #452                // String Method dropWhile is not implemented in ByteIterator
       7: invokespecial #421                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public scala.Tuple2<akka.util.ByteIterator, akka.util.ByteIterator> span(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #427                // Method clone:()Lakka/util/ByteIterator;
       4: astore_2
       5: aload_0
       6: aload_1
       7: invokevirtual #455                // Method takeWhile:(Lscala/Function1;)Lakka/util/ByteIterator;
      10: pop
      11: aload_2
      12: aload_0
      13: invokevirtual #457                // Method len:()I
      16: invokevirtual #442                // Method drop:(I)Lakka/util/ByteIterator;
      19: pop
      20: new           #425                // class scala/Tuple2
      23: dup
      24: aload_0
      25: aload_2
      26: invokespecial #430                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: areturn

  public int indexWhere(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: ifne          46
       8: aload_0
       9: invokevirtual #461                // Method hasNext:()Z
      12: ifeq          46
      15: aload_1
      16: aload_0
      17: invokevirtual #463                // Method next:()B
      20: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      23: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokestatic  #477                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      31: ifeq          39
      34: iconst_1
      35: istore_3
      36: goto          4
      39: iload_2
      40: iconst_1
      41: iadd
      42: istore_2
      43: goto          4
      46: iload_3
      47: ifeq          54
      50: iload_2
      51: goto          55
      54: iconst_m1
      55: ireturn

  public int indexOf(byte);
    Code:
       0: aload_0
       1: new           #484                // class akka/util/ByteIterator$$anonfun$indexOf$1
       4: dup
       5: aload_0
       6: iload_1
       7: invokespecial #487                // Method akka/util/ByteIterator$$anonfun$indexOf$1."<init>":(Lakka/util/ByteIterator;B)V
      10: invokevirtual #489                // Method indexWhere:(Lscala/Function1;)I
      13: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: new           #493                // class akka/util/ByteIterator$$anonfun$indexOf$2
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #496                // Method akka/util/ByteIterator$$anonfun$indexOf$2."<init>":(Lakka/util/ByteIterator;Ljava/lang/Object;)V
      10: invokevirtual #489                // Method indexWhere:(Lscala/Function1;)I
      13: ireturn

  public abstract akka.util.ByteString toByteString();

  public akka.util.ByteString toSeq();
    Code:
       0: aload_0
       1: invokevirtual #501                // Method toByteString:()Lakka/util/ByteString;
       4: areturn

  public <U> void foreach(scala.Function1<java.lang.Object, U>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public <B> B foldLeft(B, scala.Function2<B, java.lang.Object, B>);
    Code:
       0: aload_1
       1: invokestatic  #510                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       4: astore_3
       5: aload_0
       6: new           #512                // class akka/util/ByteIterator$$anonfun$foldLeft$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #515                // Method akka/util/ByteIterator$$anonfun$foldLeft$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/ObjectRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #520                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      23: areturn

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: getstatic     #527                // Field scala/Array$.MODULE$:Lscala/Array$;
       3: aload_0
       4: invokevirtual #457                // Method len:()I
       7: aload_1
       8: invokevirtual #531                // Method scala/Array$.ofDim:(ILscala/reflect/ClassTag;)Ljava/lang/Object;
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #533                // Method copyToArray:(Ljava/lang/Object;)V
      17: aload_2
      18: areturn

  public byte getByte();
    Code:
       0: aload_0
       1: invokevirtual #463                // Method next:()B
       4: ireturn

  public short getShort(java.nio.ByteOrder);
    Code:
       0: aload_1
       1: getstatic     #545                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       4: astore_2
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_2
      11: ifnull        24
      14: goto          50
      17: aload_2
      18: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          50
      24: aload_0
      25: invokevirtual #463                // Method next:()B
      28: sipush        255
      31: iand
      32: bipush        8
      34: ishl
      35: aload_0
      36: invokevirtual #463                // Method next:()B
      39: sipush        255
      42: iand
      43: iconst_0
      44: ishl
      45: ior
      46: i2s
      47: goto          97
      50: aload_1
      51: getstatic     #551                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      54: astore_3
      55: dup
      56: ifnonnull     67
      59: pop
      60: aload_3
      61: ifnull        74
      64: goto          98
      67: aload_3
      68: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      71: ifeq          98
      74: aload_0
      75: invokevirtual #463                // Method next:()B
      78: sipush        255
      81: iand
      82: iconst_0
      83: ishl
      84: aload_0
      85: invokevirtual #463                // Method next:()B
      88: sipush        255
      91: iand
      92: bipush        8
      94: ishl
      95: ior
      96: i2s
      97: ireturn
      98: new           #553                // class java/lang/IllegalArgumentException
     101: dup
     102: new           #555                // class scala/collection/mutable/StringBuilder
     105: dup
     106: invokespecial #557                // Method scala/collection/mutable/StringBuilder."<init>":()V
     109: ldc_w         #559                // String Unknown byte order
     112: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     115: aload_1
     116: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     119: invokevirtual #565                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #566                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     125: athrow

  public int getInt(java.nio.ByteOrder);
    Code:
       0: aload_1
       1: getstatic     #545                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       4: astore_2
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_2
      11: ifnull        24
      14: goto          73
      17: aload_2
      18: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          73
      24: aload_0
      25: invokevirtual #463                // Method next:()B
      28: sipush        255
      31: iand
      32: bipush        24
      34: ishl
      35: aload_0
      36: invokevirtual #463                // Method next:()B
      39: sipush        255
      42: iand
      43: bipush        16
      45: ishl
      46: ior
      47: aload_0
      48: invokevirtual #463                // Method next:()B
      51: sipush        255
      54: iand
      55: bipush        8
      57: ishl
      58: ior
      59: aload_0
      60: invokevirtual #463                // Method next:()B
      63: sipush        255
      66: iand
      67: iconst_0
      68: ishl
      69: ior
      70: goto          143
      73: aload_1
      74: getstatic     #551                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      77: astore_3
      78: dup
      79: ifnonnull     90
      82: pop
      83: aload_3
      84: ifnull        97
      87: goto          144
      90: aload_3
      91: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      94: ifeq          144
      97: aload_0
      98: invokevirtual #463                // Method next:()B
     101: sipush        255
     104: iand
     105: iconst_0
     106: ishl
     107: aload_0
     108: invokevirtual #463                // Method next:()B
     111: sipush        255
     114: iand
     115: bipush        8
     117: ishl
     118: ior
     119: aload_0
     120: invokevirtual #463                // Method next:()B
     123: sipush        255
     126: iand
     127: bipush        16
     129: ishl
     130: ior
     131: aload_0
     132: invokevirtual #463                // Method next:()B
     135: sipush        255
     138: iand
     139: bipush        24
     141: ishl
     142: ior
     143: ireturn
     144: new           #553                // class java/lang/IllegalArgumentException
     147: dup
     148: new           #555                // class scala/collection/mutable/StringBuilder
     151: dup
     152: invokespecial #557                // Method scala/collection/mutable/StringBuilder."<init>":()V
     155: ldc_w         #559                // String Unknown byte order
     158: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     161: aload_1
     162: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     165: invokevirtual #565                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #566                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     171: athrow

  public long getLong(java.nio.ByteOrder);
    Code:
       0: aload_1
       1: getstatic     #545                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       4: astore_2
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_2
      11: ifnull        24
      14: goto          129
      17: aload_2
      18: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          129
      24: aload_0
      25: invokevirtual #463                // Method next:()B
      28: i2l
      29: ldc2_w        #572                // long 255l
      32: land
      33: bipush        56
      35: lshl
      36: aload_0
      37: invokevirtual #463                // Method next:()B
      40: i2l
      41: ldc2_w        #572                // long 255l
      44: land
      45: bipush        48
      47: lshl
      48: lor
      49: aload_0
      50: invokevirtual #463                // Method next:()B
      53: i2l
      54: ldc2_w        #572                // long 255l
      57: land
      58: bipush        40
      60: lshl
      61: lor
      62: aload_0
      63: invokevirtual #463                // Method next:()B
      66: i2l
      67: ldc2_w        #572                // long 255l
      70: land
      71: bipush        32
      73: lshl
      74: lor
      75: aload_0
      76: invokevirtual #463                // Method next:()B
      79: i2l
      80: ldc2_w        #572                // long 255l
      83: land
      84: bipush        24
      86: lshl
      87: lor
      88: aload_0
      89: invokevirtual #463                // Method next:()B
      92: i2l
      93: ldc2_w        #572                // long 255l
      96: land
      97: bipush        16
      99: lshl
     100: lor
     101: aload_0
     102: invokevirtual #463                // Method next:()B
     105: i2l
     106: ldc2_w        #572                // long 255l
     109: land
     110: bipush        8
     112: lshl
     113: lor
     114: aload_0
     115: invokevirtual #463                // Method next:()B
     118: i2l
     119: ldc2_w        #572                // long 255l
     122: land
     123: iconst_0
     124: lshl
     125: lor
     126: goto          255
     129: aload_1
     130: getstatic     #551                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     133: astore_3
     134: dup
     135: ifnonnull     146
     138: pop
     139: aload_3
     140: ifnull        153
     143: goto          256
     146: aload_3
     147: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     150: ifeq          256
     153: aload_0
     154: invokevirtual #463                // Method next:()B
     157: i2l
     158: ldc2_w        #572                // long 255l
     161: land
     162: iconst_0
     163: lshl
     164: aload_0
     165: invokevirtual #463                // Method next:()B
     168: i2l
     169: ldc2_w        #572                // long 255l
     172: land
     173: bipush        8
     175: lshl
     176: lor
     177: aload_0
     178: invokevirtual #463                // Method next:()B
     181: i2l
     182: ldc2_w        #572                // long 255l
     185: land
     186: bipush        16
     188: lshl
     189: lor
     190: aload_0
     191: invokevirtual #463                // Method next:()B
     194: i2l
     195: ldc2_w        #572                // long 255l
     198: land
     199: bipush        24
     201: lshl
     202: lor
     203: aload_0
     204: invokevirtual #463                // Method next:()B
     207: i2l
     208: ldc2_w        #572                // long 255l
     211: land
     212: bipush        32
     214: lshl
     215: lor
     216: aload_0
     217: invokevirtual #463                // Method next:()B
     220: i2l
     221: ldc2_w        #572                // long 255l
     224: land
     225: bipush        40
     227: lshl
     228: lor
     229: aload_0
     230: invokevirtual #463                // Method next:()B
     233: i2l
     234: ldc2_w        #572                // long 255l
     237: land
     238: bipush        48
     240: lshl
     241: lor
     242: aload_0
     243: invokevirtual #463                // Method next:()B
     246: i2l
     247: ldc2_w        #572                // long 255l
     250: land
     251: bipush        56
     253: lshl
     254: lor
     255: lreturn
     256: new           #553                // class java/lang/IllegalArgumentException
     259: dup
     260: new           #555                // class scala/collection/mutable/StringBuilder
     263: dup
     264: invokespecial #557                // Method scala/collection/mutable/StringBuilder."<init>":()V
     267: ldc_w         #559                // String Unknown byte order
     270: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     273: aload_1
     274: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     277: invokevirtual #565                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     280: invokespecial #566                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     283: athrow

  public long getLongPart(int, java.nio.ByteOrder);
    Code:
       0: aload_2
       1: getstatic     #545                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       4: astore_3
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_3
      11: ifnull        24
      14: goto          65
      17: aload_3
      18: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          65
      24: lconst_0
      25: invokestatic  #580                // Method scala/runtime/LongRef.create:(J)Lscala/runtime/LongRef;
      28: astore        4
      30: getstatic     #585                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      33: getstatic     #590                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: iconst_1
      37: invokevirtual #594                // Method scala/Predef$.intWrapper:(I)I
      40: iload_1
      41: invokevirtual #598                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      44: new           #600                // class akka/util/ByteIterator$$anonfun$getLongPart$1
      47: dup
      48: aload_0
      49: aload         4
      51: invokespecial #603                // Method akka/util/ByteIterator$$anonfun$getLongPart$1."<init>":(Lakka/util/ByteIterator;Lscala/runtime/LongRef;)V
      54: invokevirtual #606                // Method scala/collection/immutable/Range$Inclusive.foreach$mVc$sp:(Lscala/Function1;)V
      57: aload         4
      59: getfield      #609                // Field scala/runtime/LongRef.elem:J
      62: goto          130
      65: aload_2
      66: getstatic     #551                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      69: astore        5
      71: dup
      72: ifnonnull     84
      75: pop
      76: aload         5
      78: ifnull        92
      81: goto          131
      84: aload         5
      86: invokevirtual #548                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      89: ifeq          131
      92: lconst_0
      93: invokestatic  #580                // Method scala/runtime/LongRef.create:(J)Lscala/runtime/LongRef;
      96: astore        6
      98: getstatic     #585                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     101: getstatic     #590                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     104: iconst_0
     105: invokevirtual #594                // Method scala/Predef$.intWrapper:(I)I
     108: iload_1
     109: invokevirtual #613                // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
     112: new           #615                // class akka/util/ByteIterator$$anonfun$getLongPart$2
     115: dup
     116: aload_0
     117: aload         6
     119: invokespecial #616                // Method akka/util/ByteIterator$$anonfun$getLongPart$2."<init>":(Lakka/util/ByteIterator;Lscala/runtime/LongRef;)V
     122: invokevirtual #619                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
     125: aload         6
     127: getfield      #609                // Field scala/runtime/LongRef.elem:J
     130: lreturn
     131: new           #553                // class java/lang/IllegalArgumentException
     134: dup
     135: new           #555                // class scala/collection/mutable/StringBuilder
     138: dup
     139: invokespecial #557                // Method scala/collection/mutable/StringBuilder."<init>":()V
     142: ldc_w         #559                // String Unknown byte order
     145: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     148: aload_2
     149: invokevirtual #563                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     152: invokevirtual #565                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #566                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     158: athrow

  public float getFloat(java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #625                // Method getInt:(Ljava/nio/ByteOrder;)I
       5: invokestatic  #631                // Method java/lang/Float.intBitsToFloat:(I)F
       8: freturn

  public double getDouble(java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #635                // Method getLong:(Ljava/nio/ByteOrder;)J
       5: invokestatic  #641                // Method java/lang/Double.longBitsToDouble:(J)D
       8: dreturn

  public akka.util.ByteIterator getBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #646                // Method getBytes:([BII)Lakka/util/ByteIterator;
       8: areturn

  public abstract akka.util.ByteIterator getBytes(byte[], int, int);

  public byte[] getBytes(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_2
       6: iconst_0
       7: iload_1
       8: invokevirtual #646                // Method getBytes:([BII)Lakka/util/ByteIterator;
      11: pop
      12: aload_2
      13: areturn

  public akka.util.ByteString getByteString(int);
    Code:
       0: aload_0
       1: invokevirtual #427                // Method clone:()Lakka/util/ByteIterator;
       4: iload_1
       5: invokevirtual #444                // Method take:(I)Lakka/util/ByteIterator;
       8: invokevirtual #501                // Method toByteString:()Lakka/util/ByteString;
      11: astore_2
      12: aload_0
      13: iload_1
      14: invokevirtual #442                // Method drop:(I)Lakka/util/ByteIterator;
      17: pop
      18: aload_2
      19: areturn

  public akka.util.ByteIterator getShorts(short[], java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: invokevirtual #656                // Method getShorts:([SIILjava/nio/ByteOrder;)Lakka/util/ByteIterator;
       9: areturn

  public abstract akka.util.ByteIterator getShorts(short[], int, int, java.nio.ByteOrder);

  public akka.util.ByteIterator getInts(int[], java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: invokevirtual #662                // Method getInts:([IIILjava/nio/ByteOrder;)Lakka/util/ByteIterator;
       9: areturn

  public abstract akka.util.ByteIterator getInts(int[], int, int, java.nio.ByteOrder);

  public akka.util.ByteIterator getLongs(long[], java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: invokevirtual #668                // Method getLongs:([JIILjava/nio/ByteOrder;)Lakka/util/ByteIterator;
       9: areturn

  public abstract akka.util.ByteIterator getLongs(long[], int, int, java.nio.ByteOrder);

  public akka.util.ByteIterator getFloats(float[], java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: invokevirtual #674                // Method getFloats:([FIILjava/nio/ByteOrder;)Lakka/util/ByteIterator;
       9: areturn

  public abstract akka.util.ByteIterator getFloats(float[], int, int, java.nio.ByteOrder);

  public akka.util.ByteIterator getDoubles(double[], java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: invokevirtual #680                // Method getDoubles:([DIILjava/nio/ByteOrder;)Lakka/util/ByteIterator;
       9: areturn

  public abstract akka.util.ByteIterator getDoubles(double[], int, int, java.nio.ByteOrder);

  public abstract int copyToBuffer(java.nio.ByteBuffer);

  public abstract java.io.InputStream asInputStream();

  public void foreach$mZc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mBc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mCc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mDc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mFc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mIc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mJc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mSc$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public void foreach$mVc$sp(scala.Function1<java.lang.Object, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokevirtual #461                // Method hasNext:()Z
       4: ifeq          24
       7: aload_1
       8: aload_0
       9: invokevirtual #463                // Method next:()B
      12: invokestatic  #469                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      15: invokeinterface #474,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          0
      24: return

  public boolean foldLeft$mZc$sp(boolean, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: iload_1
       1: invokestatic  #699                // Method scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
       4: astore_3
       5: aload_0
       6: new           #701                // class akka/util/ByteIterator$$anonfun$foldLeft$mZc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #704                // Method akka/util/ByteIterator$$anonfun$foldLeft$mZc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/BooleanRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #706                // Field scala/runtime/BooleanRef.elem:Z
      23: ireturn

  public byte foldLeft$mBc$sp(byte, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: iload_1
       1: invokestatic  #714                // Method scala/runtime/ByteRef.create:(B)Lscala/runtime/ByteRef;
       4: astore_3
       5: aload_0
       6: new           #716                // class akka/util/ByteIterator$$anonfun$foldLeft$mBc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #719                // Method akka/util/ByteIterator$$anonfun$foldLeft$mBc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/ByteRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #721                // Field scala/runtime/ByteRef.elem:B
      23: ireturn

  public char foldLeft$mCc$sp(char, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: iload_1
       1: invokestatic  #729                // Method scala/runtime/CharRef.create:(C)Lscala/runtime/CharRef;
       4: astore_3
       5: aload_0
       6: new           #731                // class akka/util/ByteIterator$$anonfun$foldLeft$mCc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #734                // Method akka/util/ByteIterator$$anonfun$foldLeft$mCc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/CharRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #737                // Field scala/runtime/CharRef.elem:C
      23: ireturn

  public double foldLeft$mDc$sp(double, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: dload_1
       1: invokestatic  #745                // Method scala/runtime/DoubleRef.create:(D)Lscala/runtime/DoubleRef;
       4: astore        4
       6: aload_0
       7: new           #747                // class akka/util/ByteIterator$$anonfun$foldLeft$mDc$sp$1
      10: dup
      11: aload_0
      12: aload_3
      13: aload         4
      15: invokespecial #750                // Method akka/util/ByteIterator$$anonfun$foldLeft$mDc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/DoubleRef;)V
      18: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      21: aload         4
      23: getfield      #753                // Field scala/runtime/DoubleRef.elem:D
      26: dreturn

  public float foldLeft$mFc$sp(float, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: fload_1
       1: invokestatic  #761                // Method scala/runtime/FloatRef.create:(F)Lscala/runtime/FloatRef;
       4: astore_3
       5: aload_0
       6: new           #763                // class akka/util/ByteIterator$$anonfun$foldLeft$mFc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #766                // Method akka/util/ByteIterator$$anonfun$foldLeft$mFc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/FloatRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #769                // Field scala/runtime/FloatRef.elem:F
      23: freturn

  public int foldLeft$mIc$sp(int, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: iload_1
       1: invokestatic  #777                // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
       4: astore_3
       5: aload_0
       6: new           #779                // class akka/util/ByteIterator$$anonfun$foldLeft$mIc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #782                // Method akka/util/ByteIterator$$anonfun$foldLeft$mIc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/IntRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #784                // Field scala/runtime/IntRef.elem:I
      23: ireturn

  public long foldLeft$mJc$sp(long, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: lload_1
       1: invokestatic  #580                // Method scala/runtime/LongRef.create:(J)Lscala/runtime/LongRef;
       4: astore        4
       6: aload_0
       7: new           #789                // class akka/util/ByteIterator$$anonfun$foldLeft$mJc$sp$1
      10: dup
      11: aload_0
      12: aload_3
      13: aload         4
      15: invokespecial #792                // Method akka/util/ByteIterator$$anonfun$foldLeft$mJc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/LongRef;)V
      18: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      21: aload         4
      23: getfield      #609                // Field scala/runtime/LongRef.elem:J
      26: lreturn

  public short foldLeft$mSc$sp(short, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: iload_1
       1: invokestatic  #799                // Method scala/runtime/ShortRef.create:(S)Lscala/runtime/ShortRef;
       4: astore_3
       5: aload_0
       6: new           #801                // class akka/util/ByteIterator$$anonfun$foldLeft$mSc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #804                // Method akka/util/ByteIterator$$anonfun$foldLeft$mSc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/ShortRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #807                // Field scala/runtime/ShortRef.elem:S
      23: ireturn

  public void foldLeft$mVc$sp(scala.runtime.BoxedUnit, scala.Function2<scala.runtime.BoxedUnit, java.lang.Object, scala.runtime.BoxedUnit>);
    Code:
       0: aload_1
       1: invokestatic  #510                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       4: astore_3
       5: aload_0
       6: new           #812                // class akka/util/ByteIterator$$anonfun$foldLeft$mVc$sp$1
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #813                // Method akka/util/ByteIterator$$anonfun$foldLeft$mVc$sp$1."<init>":(Lakka/util/ByteIterator;Lscala/Function2;Lscala/runtime/ObjectRef;)V
      16: invokevirtual #518                // Method foreach$mVc$sp:(Lscala/Function1;)V
      19: aload_3
      20: getfield      #520                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      23: checkcast     #815                // class scala/runtime/BoxedUnit
      26: pop
      27: return

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #819                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #822                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #825                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #831                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #834                // Method toSeq:()Lakka/util/ByteString;
       4: areturn

  public scala.collection.Seq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #834                // Method toSeq:()Lakka/util/ByteString;
       4: areturn

  public scala.collection.Iterator dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #837                // Method dropWhile:(Lscala/Function1;)Lakka/util/ByteIterator;
       5: areturn

  public scala.collection.Iterator takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #455                // Method takeWhile:(Lscala/Function1;)Lakka/util/ByteIterator;
       5: areturn

  public scala.collection.Iterator slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #840                // Method slice:(II)Lakka/util/ByteIterator;
       6: areturn

  public scala.collection.Iterator drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #442                // Method drop:(I)Lakka/util/ByteIterator;
       5: areturn

  public scala.collection.Iterator take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #444                // Method take:(I)Lakka/util/ByteIterator;
       5: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #427                // Method clone:()Lakka/util/ByteIterator;
       4: areturn

  public akka.util.ByteIterator();
    Code:
       0: aload_0
       1: invokespecial #843                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #847                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
       8: aload_0
       9: invokestatic  #850                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      12: aload_0
      13: invokestatic  #853                // Method scala/collection/BufferedIterator$class.$init$:(Lscala/collection/BufferedIterator;)V
      16: return
}
