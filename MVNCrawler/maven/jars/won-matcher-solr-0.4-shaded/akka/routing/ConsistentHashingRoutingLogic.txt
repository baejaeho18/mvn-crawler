Compiled from "ConsistentHashing.scala"
public final class akka.routing.ConsistentHashingRoutingLogic implements akka.routing.RoutingLogic,scala.Product,scala.Serializable {
  public static final long serialVersionUID;

  private final akka.actor.ActorSystem system;

  private final int virtualNodesFactor;

  private final scala.PartialFunction<java.lang.Object, java.lang.Object> hashMapping;

  private akka.actor.Address akka$routing$ConsistentHashingRoutingLogic$$selfAddress;

  private final int vnodes;

  private akka.event.LoggingAdapter log;

  private final java.util.concurrent.atomic.AtomicReference<scala.Tuple2<scala.collection.immutable.IndexedSeq<akka.routing.Routee>, akka.routing.ConsistentHash<akka.routing.ConsistentRoutee>>> consistentHashRef;

  private volatile byte bitmap$0;

  public static scala.PartialFunction<java.lang.Object, java.lang.Object> apply$default$3();
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: invokevirtual #24                 // Method akka/routing/ConsistentHashingRoutingLogic$.apply$default$3:()Lscala/PartialFunction;
       6: areturn

  public static int apply$default$2();
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: invokevirtual #28                 // Method akka/routing/ConsistentHashingRoutingLogic$.apply$default$2:()I
       6: ireturn

  public static scala.PartialFunction<java.lang.Object, java.lang.Object> $lessinit$greater$default$3();
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: invokevirtual #31                 // Method akka/routing/ConsistentHashingRoutingLogic$.$lessinit$greater$default$3:()Lscala/PartialFunction;
       6: areturn

  public static int $lessinit$greater$default$2();
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: invokevirtual #34                 // Method akka/routing/ConsistentHashingRoutingLogic$.$lessinit$greater$default$2:()I
       6: ireturn

  public static scala.Option<scala.Tuple3<akka.actor.ActorSystem, java.lang.Object, scala.PartialFunction<java.lang.Object, java.lang.Object>>> unapply(akka.routing.ConsistentHashingRoutingLogic);
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: aload_0
       4: invokevirtual #38                 // Method akka/routing/ConsistentHashingRoutingLogic$.unapply:(Lakka/routing/ConsistentHashingRoutingLogic;)Lscala/Option;
       7: areturn

  public static akka.routing.ConsistentHashingRoutingLogic apply(akka.actor.ActorSystem, int, scala.PartialFunction<java.lang.Object, java.lang.Object>);
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #42                 // Method akka/routing/ConsistentHashingRoutingLogic$.apply:(Lakka/actor/ActorSystem;ILscala/PartialFunction;)Lakka/routing/ConsistentHashingRoutingLogic;
       9: areturn

  public static akka.actor.Address defaultAddress(akka.actor.ActorSystem);
    Code:
       0: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
       3: aload_0
       4: invokevirtual #46                 // Method akka/routing/ConsistentHashingRoutingLogic$.defaultAddress:(Lakka/actor/ActorSystem;)Lakka/actor/Address;
       7: areturn

  private akka.actor.Address akka$routing$ConsistentHashingRoutingLogic$$selfAddress$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #71                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     56
      15: aload_0
      16: getstatic     #22                 // Field akka/routing/ConsistentHashingRoutingLogic$.MODULE$:Lakka/routing/ConsistentHashingRoutingLogic$;
      19: aload_0
      20: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
      23: invokevirtual #46                 // Method akka/routing/ConsistentHashingRoutingLogic$.defaultAddress:(Lakka/actor/ActorSystem;)Lakka/actor/Address;
      26: astore_2
      27: aload_2
      28: ifnonnull     41
      31: new           #76                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #78                 // String defaultAddress not available yet
      37: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_2
      42: putfield      #84                 // Field akka$routing$ConsistentHashingRoutingLogic$$selfAddress:Lakka/actor/Address;
      45: aload_0
      46: aload_0
      47: getfield      #71                 // Field bitmap$0:B
      50: iconst_1
      51: ior
      52: i2b
      53: putfield      #71                 // Field bitmap$0:B
      56: getstatic     #90                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      59: pop
      60: aload_1
      61: monitorexit
      62: aload_0
      63: getfield      #84                 // Field akka$routing$ConsistentHashingRoutingLogic$$selfAddress:Lakka/actor/Address;
      66: areturn
      67: aload_1
      68: monitorexit
      69: athrow
    Exception table:
       from    to  target type
           4    62    67   any

  private akka.event.LoggingAdapter log$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #71                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     50
      15: aload_0
      16: getstatic     #104                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
      19: aload_0
      20: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
      23: aload_0
      24: invokevirtual #108                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: getstatic     #113                // Field akka/event/LogSource$.MODULE$:Lakka/event/LogSource$;
      30: invokevirtual #117                // Method akka/event/LogSource$.fromAnyClass:()Lakka/event/LogSource;
      33: invokevirtual #120                // Method akka/event/Logging$.apply:(Lakka/actor/ActorSystem;Ljava/lang/Object;Lakka/event/LogSource;)Lakka/event/LoggingAdapter;
      36: putfield      #122                // Field log:Lakka/event/LoggingAdapter;
      39: aload_0
      40: aload_0
      41: getfield      #71                 // Field bitmap$0:B
      44: iconst_2
      45: ior
      46: i2b
      47: putfield      #71                 // Field bitmap$0:B
      50: getstatic     #90                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      53: pop
      54: aload_1
      55: monitorexit
      56: aload_0
      57: getfield      #122                // Field log:Lakka/event/LoggingAdapter;
      60: areturn
      61: aload_1
      62: monitorexit
      63: athrow
    Exception table:
       from    to  target type
           4    56    61   any

  public akka.actor.ActorSystem system();
    Code:
       0: aload_0
       1: getfield      #124                // Field system:Lakka/actor/ActorSystem;
       4: areturn

  public int virtualNodesFactor();
    Code:
       0: aload_0
       1: getfield      #126                // Field virtualNodesFactor:I
       4: ireturn

  public scala.PartialFunction<java.lang.Object, java.lang.Object> hashMapping();
    Code:
       0: aload_0
       1: getfield      #128                // Field hashMapping:Lscala/PartialFunction;
       4: areturn

  public akka.actor.Address akka$routing$ConsistentHashingRoutingLogic$$selfAddress();
    Code:
       0: aload_0
       1: getfield      #71                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #130                // Method akka$routing$ConsistentHashingRoutingLogic$$selfAddress$lzycompute:()Lakka/actor/Address;
      15: goto          22
      18: aload_0
      19: getfield      #84                 // Field akka$routing$ConsistentHashingRoutingLogic$$selfAddress:Lakka/actor/Address;
      22: areturn

  public int vnodes();
    Code:
       0: aload_0
       1: getfield      #132                // Field vnodes:I
       4: ireturn

  private akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: getfield      #71                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #134                // Method log$lzycompute:()Lakka/event/LoggingAdapter;
      15: goto          22
      18: aload_0
      19: getfield      #122                // Field log:Lakka/event/LoggingAdapter;
      22: areturn

  public akka.routing.ConsistentHashingRoutingLogic withVirtualNodesFactor(int);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: invokevirtual #141                // Method copy$default$1:()Lakka/actor/ActorSystem;
       6: astore_3
       7: aload_0
       8: invokevirtual #144                // Method copy$default$3:()Lscala/PartialFunction;
      11: astore        4
      13: aload_0
      14: aload_3
      15: iload_2
      16: aload         4
      18: invokevirtual #147                // Method copy:(Lakka/actor/ActorSystem;ILscala/PartialFunction;)Lakka/routing/ConsistentHashingRoutingLogic;
      21: areturn

  public akka.routing.ConsistentHashingRoutingLogic withHashMapper(akka.routing.ConsistentHashingRouter$ConsistentHashMapper);
    Code:
       0: getstatic     #157                // Field akka/routing/ConsistentHashingRouter$.MODULE$:Lakka/routing/ConsistentHashingRouter$;
       3: aload_1
       4: invokevirtual #161                // Method akka/routing/ConsistentHashingRouter$.hashMappingAdapter:(Lakka/routing/ConsistentHashingRouter$ConsistentHashMapper;)Lscala/PartialFunction;
       7: astore_2
       8: aload_0
       9: invokevirtual #141                // Method copy$default$1:()Lakka/actor/ActorSystem;
      12: astore_3
      13: aload_0
      14: invokevirtual #164                // Method copy$default$2:()I
      17: istore        4
      19: aload_0
      20: aload_3
      21: iload         4
      23: aload_2
      24: invokevirtual #147                // Method copy:(Lakka/actor/ActorSystem;ILscala/PartialFunction;)Lakka/routing/ConsistentHashingRoutingLogic;
      27: areturn

  private java.util.concurrent.atomic.AtomicReference<scala.Tuple2<scala.collection.immutable.IndexedSeq<akka.routing.Routee>, akka.routing.ConsistentHash<akka.routing.ConsistentRoutee>>> consistentHashRef();
    Code:
       0: aload_0
       1: getfield      #172                // Field consistentHashRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public akka.routing.Routee select(java.lang.Object, scala.collection.immutable.IndexedSeq<akka.routing.Routee>);
    Code:
       0: aload_2
       1: invokeinterface #180,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.isEmpty:()Z
       6: ifeq          15
       9: getstatic     #185                // Field akka/routing/NoRoutee$.MODULE$:Lakka/routing/NoRoutee$;
      12: goto          115
      15: aload_1
      16: astore_3
      17: aload_0
      18: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
      21: aload_1
      22: invokeinterface #193,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
      27: ifeq          50
      30: aload_0
      31: aload_0
      32: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
      35: aload_1
      36: invokeinterface #196,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: aload_2
      42: invokespecial #199                // Method target$1:(Ljava/lang/Object;Lscala/collection/immutable/IndexedSeq;)Lakka/routing/Routee;
      45: astore        4
      47: goto          113
      50: aload_3
      51: instanceof    #201                // class akka/routing/ConsistentHashingRouter$ConsistentHashable
      54: ifeq          80
      57: aload_3
      58: checkcast     #201                // class akka/routing/ConsistentHashingRouter$ConsistentHashable
      61: astore        5
      63: aload_0
      64: aload         5
      66: invokeinterface #205,  1          // InterfaceMethod akka/routing/ConsistentHashingRouter$ConsistentHashable.consistentHashKey:()Ljava/lang/Object;
      71: aload_2
      72: invokespecial #199                // Method target$1:(Ljava/lang/Object;Lscala/collection/immutable/IndexedSeq;)Lakka/routing/Routee;
      75: astore        4
      77: goto          113
      80: aload_0
      81: invokespecial #207                // Method log:()Lakka/event/LoggingAdapter;
      84: ldc           #209                // String Message [{}] must be handled by hashMapping, or implement [{}] or be wrapped in [{}]
      86: aload_1
      87: invokevirtual #108                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokevirtual #215                // Method java/lang/Class.getName:()Ljava/lang/String;
      93: ldc           #201                // class akka/routing/ConsistentHashingRouter$ConsistentHashable
      95: invokevirtual #215                // Method java/lang/Class.getName:()Ljava/lang/String;
      98: ldc           #217                // class akka/routing/ConsistentHashingRouter$ConsistentHashableEnvelope
     100: invokevirtual #215                // Method java/lang/Class.getName:()Ljava/lang/String;
     103: invokeinterface #221,  5          // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     108: getstatic     #185                // Field akka/routing/NoRoutee$.MODULE$:Lakka/routing/NoRoutee$;
     111: astore        4
     113: aload         4
     115: areturn

  public akka.routing.ConsistentHashingRoutingLogic copy(akka.actor.ActorSystem, int, scala.PartialFunction<java.lang.Object, java.lang.Object>);
    Code:
       0: new           #2                  // class akka/routing/ConsistentHashingRoutingLogic
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokespecial #230                // Method "<init>":(Lakka/actor/ActorSystem;ILscala/PartialFunction;)V
      10: areturn

  public akka.actor.ActorSystem copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
       4: areturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #232                // Method virtualNodesFactor:()I
       4: ireturn

  public scala.PartialFunction<java.lang.Object, java.lang.Object> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #235                // String ConsistentHashingRoutingLogic
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 60
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #240                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #246                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #249                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #250                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
      47: goto          64
      50: aload_0
      51: invokevirtual #232                // Method virtualNodesFactor:()I
      54: invokestatic  #246                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      57: goto          64
      60: aload_0
      61: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
      64: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #258                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #262                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/routing/ConsistentHashingRoutingLogic
       4: ireturn

  public int hashCode();
    Code:
       0: ldc_w         #265                // int -889275714
       3: istore_1
       4: iload_1
       5: aload_0
       6: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
       9: invokestatic  #271                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      12: invokestatic  #275                // Method scala/runtime/Statics.mix:(II)I
      15: istore_1
      16: iload_1
      17: aload_0
      18: invokevirtual #232                // Method virtualNodesFactor:()I
      21: invokestatic  #275                // Method scala/runtime/Statics.mix:(II)I
      24: istore_1
      25: iload_1
      26: aload_0
      27: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
      30: invokestatic  #271                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      33: invokestatic  #275                // Method scala/runtime/Statics.mix:(II)I
      36: istore_1
      37: iload_1
      38: iconst_3
      39: invokestatic  #278                // Method scala/runtime/Statics.finalizeHash:(II)I
      42: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #258                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #282                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     115
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/routing/ConsistentHashingRoutingLogic
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          119
      25: aload_1
      26: checkcast     #2                  // class akka/routing/ConsistentHashingRoutingLogic
      29: astore        4
      31: aload_0
      32: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
      35: aload         4
      37: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          111
      55: aload         5
      57: invokevirtual #285                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          111
      63: aload_0
      64: invokevirtual #232                // Method virtualNodesFactor:()I
      67: aload         4
      69: invokevirtual #232                // Method virtualNodesFactor:()I
      72: if_icmpne     111
      75: aload_0
      76: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
      79: aload         4
      81: invokevirtual #187                // Method hashMapping:()Lscala/PartialFunction;
      84: astore        6
      86: dup
      87: ifnonnull     99
      90: pop
      91: aload         6
      93: ifnull        107
      96: goto          111
      99: aload         6
     101: invokevirtual #285                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: ifeq          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: ireturn

  private final akka.routing.ConsistentHash updateConsistentHash$1(scala.collection.immutable.IndexedSeq);
    Code:
       0: aload_0
       1: invokespecial #291                // Method consistentHashRef:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #296                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #298                // class scala/Tuple2
      10: astore_2
      11: aload_2
      12: astore        4
      14: aload         4
      16: ifnull        181
      19: aload         4
      21: invokevirtual #301                // Method scala/Tuple2._1:()Ljava/lang/Object;
      24: checkcast     #176                // class scala/collection/immutable/IndexedSeq
      27: astore        5
      29: aload         4
      31: invokevirtual #304                // Method scala/Tuple2._2:()Ljava/lang/Object;
      34: checkcast     #306                // class akka/routing/ConsistentHash
      37: astore        6
      39: new           #298                // class scala/Tuple2
      42: dup
      43: aload         5
      45: aload         6
      47: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: astore        7
      52: aload         7
      54: astore_3
      55: aload_3
      56: invokevirtual #301                // Method scala/Tuple2._1:()Ljava/lang/Object;
      59: checkcast     #176                // class scala/collection/immutable/IndexedSeq
      62: astore        8
      64: aload_3
      65: invokevirtual #304                // Method scala/Tuple2._2:()Ljava/lang/Object;
      68: checkcast     #306                // class akka/routing/ConsistentHash
      71: astore        9
      73: aload_1
      74: aload         8
      76: if_acmpeq     178
      79: aload_1
      80: aload         8
      82: astore        11
      84: dup
      85: ifnonnull     97
      88: pop
      89: aload         11
      91: ifnull        105
      94: goto          110
      97: aload         11
      99: invokevirtual #285                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     102: ifeq          110
     105: aload         9
     107: goto          152
     110: getstatic     #314                // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
     113: aload_1
     114: new           #316                // class akka/routing/ConsistentHashingRoutingLogic$$anonfun$1
     117: dup
     118: aload_0
     119: invokespecial #319                // Method akka/routing/ConsistentHashingRoutingLogic$$anonfun$1."<init>":(Lakka/routing/ConsistentHashingRoutingLogic;)V
     122: getstatic     #324                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     125: invokevirtual #328                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     128: invokeinterface #332,  3          // InterfaceMethod scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     133: checkcast     #334                // class scala/collection/Iterable
     136: aload_0
     137: invokevirtual #336                // Method vnodes:()I
     140: getstatic     #341                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     143: ldc_w         #343                // class akka/routing/ConsistentRoutee
     146: invokevirtual #346                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     149: invokevirtual #349                // Method akka/routing/ConsistentHash$.apply:(Lscala/collection/Iterable;ILscala/reflect/ClassTag;)Lakka/routing/ConsistentHash;
     152: astore        10
     154: aload_0
     155: invokespecial #291                // Method consistentHashRef:()Ljava/util/concurrent/atomic/AtomicReference;
     158: aload_2
     159: new           #298                // class scala/Tuple2
     162: dup
     163: aload_1
     164: aload         10
     166: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     169: invokevirtual #353                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     172: pop
     173: aload         10
     175: goto          180
     178: aload         9
     180: areturn
     181: new           #355                // class scala/MatchError
     184: dup
     185: aload         4
     187: invokespecial #358                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     190: athrow

  private final akka.routing.Routee target$1(java.lang.Object, scala.collection.immutable.IndexedSeq);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #367                // Method updateConsistentHash$1:(Lscala/collection/immutable/IndexedSeq;)Lakka/routing/ConsistentHash;
       5: astore        8
       7: aload         8
       9: invokevirtual #368                // Method akka/routing/ConsistentHash.isEmpty:()Z
      12: ifeq          21
      15: getstatic     #185                // Field akka/routing/NoRoutee$.MODULE$:Lakka/routing/NoRoutee$;
      18: goto          213
      21: aload_1
      22: astore        9
      24: aload         9
      26: instanceof    #370                // class "[B"
      29: ifeq          57
      32: aload         9
      34: checkcast     #370                // class "[B"
      37: astore        10
      39: aload         8
      41: aload         10
      43: invokevirtual #374                // Method akka/routing/ConsistentHash.nodeFor:([B)Ljava/lang/Object;
      46: checkcast     #343                // class akka/routing/ConsistentRoutee
      49: invokevirtual #378                // Method akka/routing/ConsistentRoutee.routee:()Lakka/routing/Routee;
      52: astore        11
      54: goto          139
      57: aload         9
      59: instanceof    #380                // class java/lang/String
      62: ifeq          90
      65: aload         9
      67: checkcast     #380                // class java/lang/String
      70: astore        12
      72: aload         8
      74: aload         12
      76: invokevirtual #383                // Method akka/routing/ConsistentHash.nodeFor:(Ljava/lang/String;)Ljava/lang/Object;
      79: checkcast     #343                // class akka/routing/ConsistentRoutee
      82: invokevirtual #378                // Method akka/routing/ConsistentRoutee.routee:()Lakka/routing/Routee;
      85: astore        11
      87: goto          139
      90: aload         9
      92: instanceof    #4                  // class java/lang/Object
      95: ifeq          144
      98: aload         9
     100: astore        13
     102: aload         8
     104: getstatic     #388                // Field akka/serialization/SerializationExtension$.MODULE$:Lakka/serialization/SerializationExtension$;
     107: aload_0
     108: invokevirtual #74                 // Method system:()Lakka/actor/ActorSystem;
     111: invokevirtual #391                // Method akka/serialization/SerializationExtension$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
     114: checkcast     #393                // class akka/serialization/Serialization
     117: aload         13
     119: invokevirtual #397                // Method akka/serialization/Serialization.serialize:(Ljava/lang/Object;)Lscala/util/Try;
     122: invokevirtual #400                // Method scala/util/Try.get:()Ljava/lang/Object;
     125: checkcast     #370                // class "[B"
     128: invokevirtual #374                // Method akka/routing/ConsistentHash.nodeFor:([B)Ljava/lang/Object;
     131: checkcast     #343                // class akka/routing/ConsistentRoutee
     134: invokevirtual #378                // Method akka/routing/ConsistentRoutee.routee:()Lakka/routing/Routee;
     137: astore        11
     139: aload         11
     141: goto          213
     144: new           #355                // class scala/MatchError
     147: dup
     148: aload         9
     150: invokespecial #358                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     153: athrow
     154: astore_3
     155: aload_3
     156: astore        4
     158: getstatic     #405                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     161: aload         4
     163: invokevirtual #408                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     166: astore        5
     168: aload         5
     170: invokevirtual #411                // Method scala/Option.isEmpty:()Z
     173: ifeq          178
     176: aload_3
     177: athrow
     178: aload         5
     180: invokevirtual #412                // Method scala/Option.get:()Ljava/lang/Object;
     183: checkcast     #97                 // class java/lang/Throwable
     186: astore        6
     188: aload_0
     189: invokespecial #207                // Method log:()Lakka/event/LoggingAdapter;
     192: ldc_w         #414                // String Couldn\'t route message with consistent hash key [{}] due to [{}]
     195: aload_1
     196: aload         6
     198: invokevirtual #417                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     201: invokeinterface #420,  4          // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     206: getstatic     #185                // Field akka/routing/NoRoutee$.MODULE$:Lakka/routing/NoRoutee$;
     209: astore        7
     211: aload         7
     213: areturn
    Exception table:
       from    to  target type
           0   154   154   any

  public akka.routing.ConsistentHashingRoutingLogic(akka.actor.ActorSystem, int, scala.PartialFunction<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #124                // Field system:Lakka/actor/ActorSystem;
       5: aload_0
       6: iload_2
       7: putfield      #126                // Field virtualNodesFactor:I
      10: aload_0
      11: aload_3
      12: putfield      #128                // Field hashMapping:Lscala/PartialFunction;
      15: aload_0
      16: invokespecial #427                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #433                // Method scala/Product$class.$init$:(Lscala/Product;)V
      23: aload_0
      24: iload_2
      25: iconst_0
      26: if_icmpne     39
      29: aload_1
      30: invokevirtual #437                // Method akka/actor/ActorSystem.settings:()Lakka/actor/ActorSystem$Settings;
      33: invokevirtual #442                // Method akka/actor/ActorSystem$Settings.DefaultVirtualNodesFactor:()I
      36: goto          40
      39: iload_2
      40: putfield      #132                // Field vnodes:I
      43: aload_0
      44: new           #293                // class java/util/concurrent/atomic/AtomicReference
      47: dup
      48: new           #298                // class scala/Tuple2
      51: dup
      52: aconst_null
      53: aconst_null
      54: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      57: invokespecial #443                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      60: putfield      #172                // Field consistentHashRef:Ljava/util/concurrent/atomic/AtomicReference;
      63: return

  public akka.routing.ConsistentHashingRoutingLogic(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: getstatic     #449                // Field akka/routing/ConsistentHashingRouter$emptyConsistentHashMapping$.MODULE$:Lakka/routing/ConsistentHashingRouter$emptyConsistentHashMapping$;
       6: invokespecial #230                // Method "<init>":(Lakka/actor/ActorSystem;ILscala/PartialFunction;)V
       9: return
}
