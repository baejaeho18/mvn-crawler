Compiled from "ConsistentHash.scala"
public class akka.routing.ConsistentHash<T> {
  private final scala.collection.immutable.SortedMap<java.lang.Object, T> nodes;

  private final int virtualNodesFactor;

  private final scala.reflect.ClassTag<T> evidence$1;

  private final scala.Tuple2 x$2;

  private final int[] nodeHashRing;

  private final java.lang.Object nodeRing;

  public static <T> akka.routing.ConsistentHash<T> create(java.lang.Iterable<T>, int);
    Code:
       0: getstatic     #17                 // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
       3: aload_0
       4: iload_1
       5: invokevirtual #19                 // Method akka/routing/ConsistentHash$.create:(Ljava/lang/Iterable;I)Lakka/routing/ConsistentHash;
       8: areturn

  public static <T> akka.routing.ConsistentHash<T> apply(scala.collection.Iterable<T>, int, scala.reflect.ClassTag<T>);
    Code:
       0: getstatic     #17                 // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #23                 // Method akka/routing/ConsistentHash$.apply:(Lscala/collection/Iterable;ILscala/reflect/ClassTag;)Lakka/routing/ConsistentHash;
       9: areturn

  public int virtualNodesFactor();
    Code:
       0: aload_0
       1: getfield      #40                 // Field virtualNodesFactor:I
       4: ireturn

  private int[] nodeHashRing();
    Code:
       0: aload_0
       1: getfield      #45                 // Field nodeHashRing:[I
       4: areturn

  private java.lang.Object nodeRing();
    Code:
       0: aload_0
       1: getfield      #48                 // Field nodeRing:Ljava/lang/Object;
       4: areturn

  public akka.routing.ConsistentHash<T> $colon$plus(T);
    Code:
       0: getstatic     #17                 // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
       3: aload_1
       4: invokevirtual #54                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: invokevirtual #58                 // Method akka/routing/ConsistentHash$.akka$routing$ConsistentHash$$hashFor:(Ljava/lang/String;)I
      10: istore_2
      11: new           #2                  // class akka/routing/ConsistentHash
      14: dup
      15: aload_0
      16: getfield      #60                 // Field nodes:Lscala/collection/immutable/SortedMap;
      19: getstatic     #65                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      22: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      25: iconst_1
      26: invokevirtual #74                 // Method scala/Predef$.intWrapper:(I)I
      29: aload_0
      30: invokevirtual #76                 // Method virtualNodesFactor:()I
      33: invokevirtual #80                 // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      36: new           #82                 // class akka/routing/ConsistentHash$$anonfun$$colon$plus$1
      39: dup
      40: aload_0
      41: aload_1
      42: iload_2
      43: invokespecial #86                 // Method akka/routing/ConsistentHash$$anonfun$$colon$plus$1."<init>":(Lakka/routing/ConsistentHash;Ljava/lang/Object;I)V
      46: getstatic     #91                 // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      49: invokevirtual #95                 // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      52: invokevirtual #101                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      55: checkcast     #103                // class scala/collection/GenTraversableOnce
      58: invokeinterface #109,  2          // InterfaceMethod scala/collection/immutable/SortedMap.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/SortedMap;
      63: aload_0
      64: invokevirtual #76                 // Method virtualNodesFactor:()I
      67: aload_0
      68: getfield      #111                // Field evidence$1:Lscala/reflect/ClassTag;
      71: invokespecial #114                // Method "<init>":(Lscala/collection/immutable/SortedMap;ILscala/reflect/ClassTag;)V
      74: areturn

  public akka.routing.ConsistentHash<T> add(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #119                // Method $colon$plus:(Ljava/lang/Object;)Lakka/routing/ConsistentHash;
       5: areturn

  public akka.routing.ConsistentHash<T> $colon$minus(T);
    Code:
       0: getstatic     #17                 // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
       3: aload_1
       4: invokevirtual #54                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: invokevirtual #58                 // Method akka/routing/ConsistentHash$.akka$routing$ConsistentHash$$hashFor:(Ljava/lang/String;)I
      10: istore_2
      11: new           #2                  // class akka/routing/ConsistentHash
      14: dup
      15: aload_0
      16: getfield      #60                 // Field nodes:Lscala/collection/immutable/SortedMap;
      19: getstatic     #65                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      22: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      25: iconst_1
      26: invokevirtual #74                 // Method scala/Predef$.intWrapper:(I)I
      29: aload_0
      30: invokevirtual #76                 // Method virtualNodesFactor:()I
      33: invokevirtual #80                 // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
      36: new           #122                // class akka/routing/ConsistentHash$$anonfun$$colon$minus$1
      39: dup
      40: aload_0
      41: iload_2
      42: invokespecial #125                // Method akka/routing/ConsistentHash$$anonfun$$colon$minus$1."<init>":(Lakka/routing/ConsistentHash;I)V
      45: getstatic     #91                 // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      48: invokevirtual #95                 // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      51: invokevirtual #101                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      54: checkcast     #103                // class scala/collection/GenTraversableOnce
      57: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/SortedMap.$minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;
      62: checkcast     #105                // class scala/collection/immutable/SortedMap
      65: aload_0
      66: invokevirtual #76                 // Method virtualNodesFactor:()I
      69: aload_0
      70: getfield      #111                // Field evidence$1:Lscala/reflect/ClassTag;
      73: invokespecial #114                // Method "<init>":(Lscala/collection/immutable/SortedMap;ILscala/reflect/ClassTag;)V
      76: areturn

  public akka.routing.ConsistentHash<T> remove(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method $colon$minus:(Ljava/lang/Object;)Lakka/routing/ConsistentHash;
       5: areturn

  private int idx(int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmplt     9
       5: iload_1
       6: goto          33
       9: getstatic     #138                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      12: iload_1
      13: iconst_1
      14: iadd
      15: invokevirtual #141                // Method scala/math/package$.abs:(I)I
      18: istore_2
      19: iload_2
      20: aload_0
      21: invokespecial #143                // Method nodeHashRing:()[I
      24: arraylength
      25: if_icmplt     32
      28: iconst_0
      29: goto          33
      32: iload_2
      33: ireturn

  public T nodeFor(byte[]);
    Code:
       0: aload_0
       1: invokevirtual #151                // Method isEmpty:()Z
       4: ifeq          47
       7: new           #153                // class java/lang/IllegalStateException
      10: dup
      11: new           #155                // class scala/collection/immutable/StringOps
      14: dup
      15: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: ldc           #157                // String Can\'t get node for [%s] from an empty node ring
      20: invokevirtual #161                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      23: invokespecial #164                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      26: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: iconst_1
      30: anewarray     #5                  // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_1
      36: aastore
      37: invokevirtual #168                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      40: invokevirtual #172                // Method scala/collection/immutable/StringOps.format:(Lscala/collection/Seq;)Ljava/lang/String;
      43: invokespecial #173                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: getstatic     #178                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      50: aload_0
      51: invokespecial #180                // Method nodeRing:()Ljava/lang/Object;
      54: aload_0
      55: aload_0
      56: invokespecial #143                // Method nodeHashRing:()[I
      59: getstatic     #17                 // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
      62: aload_1
      63: invokevirtual #183                // Method akka/routing/ConsistentHash$.akka$routing$ConsistentHash$$hashFor:([B)I
      66: invokestatic  #189                // Method java/util/Arrays.binarySearch:([II)I
      69: invokespecial #191                // Method idx:(I)I
      72: invokevirtual #195                // Method scala/runtime/ScalaRunTime$.array_apply:(Ljava/lang/Object;I)Ljava/lang/Object;
      75: areturn

  public T nodeFor(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #151                // Method isEmpty:()Z
       4: ifeq          47
       7: new           #153                // class java/lang/IllegalStateException
      10: dup
      11: new           #155                // class scala/collection/immutable/StringOps
      14: dup
      15: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: ldc           #157                // String Can\'t get node for [%s] from an empty node ring
      20: invokevirtual #161                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      23: invokespecial #164                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      26: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: iconst_1
      30: anewarray     #5                  // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_1
      36: aastore
      37: invokevirtual #168                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      40: invokevirtual #172                // Method scala/collection/immutable/StringOps.format:(Lscala/collection/Seq;)Ljava/lang/String;
      43: invokespecial #173                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: getstatic     #178                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      50: aload_0
      51: invokespecial #180                // Method nodeRing:()Ljava/lang/Object;
      54: aload_0
      55: aload_0
      56: invokespecial #143                // Method nodeHashRing:()[I
      59: getstatic     #17                 // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
      62: aload_1
      63: invokevirtual #58                 // Method akka/routing/ConsistentHash$.akka$routing$ConsistentHash$$hashFor:(Ljava/lang/String;)I
      66: invokestatic  #189                // Method java/util/Arrays.binarySearch:([II)I
      69: invokespecial #191                // Method idx:(I)I
      72: invokevirtual #195                // Method scala/runtime/ScalaRunTime$.array_apply:(Ljava/lang/Object;I)Ljava/lang/Object;
      75: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #60                 // Field nodes:Lscala/collection/immutable/SortedMap;
       4: invokeinterface #200,  1          // InterfaceMethod scala/collection/immutable/SortedMap.isEmpty:()Z
       9: ireturn

  public akka.routing.ConsistentHash(scala.collection.immutable.SortedMap<java.lang.Object, T>, int, scala.reflect.ClassTag<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field nodes:Lscala/collection/immutable/SortedMap;
       5: aload_0
       6: iload_2
       7: putfield      #40                 // Field virtualNodesFactor:I
      10: aload_0
      11: aload_3
      12: putfield      #111                // Field evidence$1:Lscala/reflect/ClassTag;
      15: aload_0
      16: invokespecial #203                // Method java/lang/Object."<init>":()V
      19: iload_2
      20: iconst_1
      21: if_icmpge     34
      24: new           #205                // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #207                // String virtualNodesFactor must be >= 1
      30: invokespecial #208                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: invokeinterface #212,  1          // InterfaceMethod scala/collection/immutable/SortedMap.toSeq:()Lscala/collection/Seq;
      41: getstatic     #70                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      44: invokevirtual #216                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      47: invokeinterface #222,  2          // InterfaceMethod scala/collection/Seq.unzip:(Lscala/Function1;)Lscala/Tuple2;
      52: astore        6
      54: aload         6
      56: ifnull        258
      59: aload         6
      61: invokevirtual #227                // Method scala/Tuple2._1:()Ljava/lang/Object;
      64: checkcast     #218                // class scala/collection/Seq
      67: astore        7
      69: aload         6
      71: invokevirtual #230                // Method scala/Tuple2._2:()Ljava/lang/Object;
      74: checkcast     #218                // class scala/collection/Seq
      77: astore        8
      79: aload         7
      81: ifnull        258
      84: aload         7
      86: astore        9
      88: aload         8
      90: ifnull        258
      93: aload         8
      95: astore        10
      97: new           #224                // class scala/Tuple2
     100: dup
     101: aload         9
     103: aload         10
     105: invokespecial #233                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     108: astore        11
     110: aload         11
     112: astore        5
     114: aload         5
     116: invokevirtual #227                // Method scala/Tuple2._1:()Ljava/lang/Object;
     119: checkcast     #218                // class scala/collection/Seq
     122: astore        12
     124: aload         5
     126: invokevirtual #230                // Method scala/Tuple2._2:()Ljava/lang/Object;
     129: checkcast     #218                // class scala/collection/Seq
     132: astore        13
     134: new           #224                // class scala/Tuple2
     137: dup
     138: aload         12
     140: getstatic     #238                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     143: invokevirtual #242                // Method scala/reflect/ClassTag$.Int:()Lscala/reflect/ClassTag;
     146: invokeinterface #246,  2          // InterfaceMethod scala/collection/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     151: aload         13
     153: aload_3
     154: invokeinterface #246,  2          // InterfaceMethod scala/collection/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     159: invokespecial #233                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     162: astore        4
     164: aload         4
     166: ifnull        248
     169: aload         4
     171: invokevirtual #227                // Method scala/Tuple2._1:()Ljava/lang/Object;
     174: checkcast     #247                // class "[I"
     177: astore        14
     179: aload         4
     181: invokevirtual #230                // Method scala/Tuple2._2:()Ljava/lang/Object;
     184: astore        15
     186: aload         14
     188: ifnull        248
     191: aload         14
     193: astore        16
     195: aload         15
     197: ifnull        248
     200: aload         15
     202: astore        17
     204: new           #224                // class scala/Tuple2
     207: dup
     208: aload         16
     210: aload         17
     212: invokespecial #233                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     215: astore        18
     217: aload         18
     219: putfield      #249                // Field x$2:Lscala/Tuple2;
     222: aload_0
     223: aload_0
     224: getfield      #249                // Field x$2:Lscala/Tuple2;
     227: invokevirtual #227                // Method scala/Tuple2._1:()Ljava/lang/Object;
     230: checkcast     #247                // class "[I"
     233: putfield      #45                 // Field nodeHashRing:[I
     236: aload_0
     237: aload_0
     238: getfield      #249                // Field x$2:Lscala/Tuple2;
     241: invokevirtual #230                // Method scala/Tuple2._2:()Ljava/lang/Object;
     244: putfield      #48                 // Field nodeRing:Ljava/lang/Object;
     247: return
     248: new           #251                // class scala/MatchError
     251: dup
     252: aload         4
     254: invokespecial #254                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     257: athrow
     258: new           #251                // class scala/MatchError
     261: dup
     262: aload         6
     264: invokespecial #254                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     267: athrow
}
