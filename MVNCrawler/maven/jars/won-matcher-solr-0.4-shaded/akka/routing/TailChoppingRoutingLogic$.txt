Compiled from "TailChopping.scala"
public final class akka.routing.TailChoppingRoutingLogic$ extends scala.runtime.AbstractFunction4<akka.actor.Scheduler, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, scala.concurrent.ExecutionContext, akka.routing.TailChoppingRoutingLogic> implements scala.Serializable {
  public static final akka.routing.TailChoppingRoutingLogic$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/routing/TailChoppingRoutingLogic$
       3: invokespecial #15                 // Method "<init>":()V
       6: return

  public final java.lang.String toString();
    Code:
       0: ldc           #19                 // String TailChoppingRoutingLogic
       2: areturn

  public akka.routing.TailChoppingRoutingLogic apply(akka.actor.Scheduler, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, scala.concurrent.ExecutionContext);
    Code:
       0: new           #24                 // class akka/routing/TailChoppingRoutingLogic
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #27                 // Method akka/routing/TailChoppingRoutingLogic."<init>":(Lakka/actor/Scheduler;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/ExecutionContext;)V
      12: areturn

  public scala.Option<scala.Tuple4<akka.actor.Scheduler, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, scala.concurrent.ExecutionContext>> unapply(akka.routing.TailChoppingRoutingLogic);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #41                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          40
      10: new           #43                 // class scala/Some
      13: dup
      14: new           #45                 // class scala/Tuple4
      17: dup
      18: aload_1
      19: invokevirtual #48                 // Method akka/routing/TailChoppingRoutingLogic.scheduler:()Lakka/actor/Scheduler;
      22: aload_1
      23: invokevirtual #51                 // Method akka/routing/TailChoppingRoutingLogic.within:()Lscala/concurrent/duration/FiniteDuration;
      26: aload_1
      27: invokevirtual #53                 // Method akka/routing/TailChoppingRoutingLogic.interval:()Lscala/concurrent/duration/FiniteDuration;
      30: aload_1
      31: invokevirtual #56                 // Method akka/routing/TailChoppingRoutingLogic.context:()Lscala/concurrent/ExecutionContext;
      34: invokespecial #59                 // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      37: invokespecial #62                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      40: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #70                 // Field MODULE$:Lakka/routing/TailChoppingRoutingLogic$;
       3: areturn

  public java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #73                 // class akka/actor/Scheduler
       5: aload_2
       6: checkcast     #75                 // class scala/concurrent/duration/FiniteDuration
       9: aload_3
      10: checkcast     #75                 // class scala/concurrent/duration/FiniteDuration
      13: aload         4
      15: checkcast     #77                 // class scala/concurrent/ExecutionContext
      18: invokevirtual #79                 // Method apply:(Lakka/actor/Scheduler;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/ExecutionContext;)Lakka/routing/TailChoppingRoutingLogic;
      21: areturn

  private akka.routing.TailChoppingRoutingLogic$();
    Code:
       0: aload_0
       1: invokespecial #85                 // Method scala/runtime/AbstractFunction4."<init>":()V
       4: aload_0
       5: putstatic     #70                 // Field MODULE$:Lakka/routing/TailChoppingRoutingLogic$;
       8: return
}
