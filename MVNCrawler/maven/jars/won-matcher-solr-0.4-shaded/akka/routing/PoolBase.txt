Compiled from "RouterConfig.scala"
public abstract class akka.routing.PoolBase implements akka.routing.Pool {
  public int nrOfInstances();
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method akka/routing/Pool$class.nrOfInstances:(Lakka/routing/Pool;)I
       4: ireturn

  public boolean usePoolDispatcher();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method akka/routing/Pool$class.usePoolDispatcher:(Lakka/routing/Pool;)Z
       4: ireturn

  public akka.routing.Routee newRoutee(akka.actor.Props, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #29                 // Method akka/routing/Pool$class.newRoutee:(Lakka/routing/Pool;Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/routing/Routee;
       6: areturn

  public akka.actor.Props enrichWithPoolDispatcher(akka.actor.Props, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // Method akka/routing/Pool$class.enrichWithPoolDispatcher:(Lakka/routing/Pool;Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/actor/Props;
       6: areturn

  public akka.actor.Props props(akka.actor.Props);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method akka/routing/Pool$class.props:(Lakka/routing/Pool;Lakka/actor/Props;)Lakka/actor/Props;
       5: areturn

  public boolean stopRouterWhenAllRouteesRemoved();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method akka/routing/Pool$class.stopRouterWhenAllRouteesRemoved:(Lakka/routing/Pool;)Z
       4: ireturn

  public akka.routing.RouterActor createRouterActor();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method akka/routing/Pool$class.createRouterActor:(Lakka/routing/Pool;)Lakka/routing/RouterActor;
       4: areturn

  public scala.Option<akka.actor.Props> routingLogicController(akka.routing.RoutingLogic);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method akka/routing/RouterConfig$class.routingLogicController:(Lakka/routing/RouterConfig;Lakka/routing/RoutingLogic;)Lscala/Option;
       5: areturn

  public boolean isManagementMessage(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method akka/routing/RouterConfig$class.isManagementMessage:(Lakka/routing/RouterConfig;Ljava/lang/Object;)Z
       5: ireturn

  public akka.routing.RouterConfig withFallback(akka.routing.RouterConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method akka/routing/RouterConfig$class.withFallback:(Lakka/routing/RouterConfig;Lakka/routing/RouterConfig;)Lakka/routing/RouterConfig;
       5: areturn

  public void verifyConfig(akka.actor.ActorPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method akka/routing/RouterConfig$class.verifyConfig:(Lakka/routing/RouterConfig;Lakka/actor/ActorPath;)V
       5: return

  public akka.routing.PoolBase();
    Code:
       0: aload_0
       1: invokespecial #85                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #89                 // Method akka/routing/RouterConfig$class.$init$:(Lakka/routing/RouterConfig;)V
       8: aload_0
       9: invokestatic  #92                 // Method akka/routing/Pool$class.$init$:(Lakka/routing/Pool;)V
      12: return
}
