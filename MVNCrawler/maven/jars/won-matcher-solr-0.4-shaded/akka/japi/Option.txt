Compiled from "JavaAPI.scala"
public abstract class akka.japi.Option<A> implements java.lang.Iterable<A> {
  public static <A> akka.japi.Option<A> scala2JavaOption(scala.Option<A>);
    Code:
       0: getstatic     #19                 // Field akka/japi/Option$.MODULE$:Lakka/japi/Option$;
       3: aload_0
       4: invokevirtual #21                 // Method akka/japi/Option$.scala2JavaOption:(Lscala/Option;)Lakka/japi/Option;
       7: areturn

  public static <A> scala.Option<A> java2ScalaOption(akka.japi.Option<A>);
    Code:
       0: getstatic     #19                 // Field akka/japi/Option$.MODULE$:Lakka/japi/Option$;
       3: aload_0
       4: invokevirtual #25                 // Method akka/japi/Option$.java2ScalaOption:(Lakka/japi/Option;)Lscala/Option;
       7: areturn

  public static <T> akka.japi.Option<T> fromScalaOption(scala.Option<T>);
    Code:
       0: getstatic     #19                 // Field akka/japi/Option$.MODULE$:Lakka/japi/Option$;
       3: aload_0
       4: invokevirtual #28                 // Method akka/japi/Option$.fromScalaOption:(Lscala/Option;)Lakka/japi/Option;
       7: areturn

  public static <A> akka.japi.Option<A> option(A);
    Code:
       0: getstatic     #19                 // Field akka/japi/Option$.MODULE$:Lakka/japi/Option$;
       3: aload_0
       4: invokevirtual #32                 // Method akka/japi/Option$.option:(Ljava/lang/Object;)Lakka/japi/Option;
       7: areturn

  public static <A> akka.japi.Option<A> none();
    Code:
       0: getstatic     #19                 // Field akka/japi/Option$.MODULE$:Lakka/japi/Option$;
       3: invokevirtual #36                 // Method akka/japi/Option$.none:()Lakka/japi/Option;
       6: areturn

  public static <A> akka.japi.Option<A> some(A);
    Code:
       0: getstatic     #19                 // Field akka/japi/Option$.MODULE$:Lakka/japi/Option$;
       3: aload_0
       4: invokevirtual #39                 // Method akka/japi/Option$.some:(Ljava/lang/Object;)Lakka/japi/Option;
       7: areturn

  public abstract A get();

  public abstract <B> B getOrElse(B);

  public abstract boolean isEmpty();

  public boolean isDefined();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: ireturn

  public abstract scala.Option<A> asScala();

  public java.util.Iterator<A> iterator();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isEmpty:()Z
       4: ifeq          18
       7: invokestatic  #60                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: goto          30
      18: aload_0
      19: invokevirtual #66                 // Method get:()Ljava/lang/Object;
      22: invokestatic  #70                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      25: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: areturn

  public akka.japi.Option();
    Code:
       0: aload_0
       1: invokespecial #76                 // Method java/lang/Object."<init>":()V
       4: return
}
