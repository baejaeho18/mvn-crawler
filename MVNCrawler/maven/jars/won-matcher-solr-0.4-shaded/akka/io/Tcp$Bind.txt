Compiled from "Tcp.scala"
public final class akka.io.Tcp$Bind implements akka.io.Tcp$Command,scala.Product,scala.Serializable {
  private final akka.actor.ActorRef handler;

  private final java.net.InetSocketAddress localAddress;

  private final int backlog;

  private final scala.collection.immutable.Traversable<akka.io.Inet$SocketOption> options;

  private final boolean pullMode;

  public akka.io.Tcp$CommandFailed failureMessage();
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method akka/io/Tcp$Command$class.failureMessage:(Lakka/io/Tcp$Command;)Lakka/io/Tcp$CommandFailed;
       4: areturn

  public akka.actor.ActorRef handler();
    Code:
       0: aload_0
       1: getfield      #34                 // Field handler:Lakka/actor/ActorRef;
       4: areturn

  public java.net.InetSocketAddress localAddress();
    Code:
       0: aload_0
       1: getfield      #37                 // Field localAddress:Ljava/net/InetSocketAddress;
       4: areturn

  public int backlog();
    Code:
       0: aload_0
       1: getfield      #40                 // Field backlog:I
       4: ireturn

  public scala.collection.immutable.Traversable<akka.io.Inet$SocketOption> options();
    Code:
       0: aload_0
       1: getfield      #43                 // Field options:Lscala/collection/immutable/Traversable;
       4: areturn

  public boolean pullMode();
    Code:
       0: aload_0
       1: getfield      #46                 // Field pullMode:Z
       4: ireturn

  public akka.io.Tcp$Bind copy(akka.actor.ActorRef, java.net.InetSocketAddress, int, scala.collection.immutable.Traversable<akka.io.Inet$SocketOption>, boolean);
    Code:
       0: new           #2                  // class akka/io/Tcp$Bind
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: iload         5
      11: invokespecial #52                 // Method "<init>":(Lakka/actor/ActorRef;Ljava/net/InetSocketAddress;ILscala/collection/immutable/Traversable;Z)V
      14: areturn

  public akka.actor.ActorRef copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method handler:()Lakka/actor/ActorRef;
       4: areturn

  public java.net.InetSocketAddress copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method localAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public int copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method backlog:()I
       4: ireturn

  public scala.collection.immutable.Traversable<akka.io.Inet$SocketOption> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method options:()Lscala/collection/immutable/Traversable;
       4: areturn

  public boolean copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method pullMode:()Z
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #71                 // String Bind
       2: areturn

  public int productArity();
    Code:
       0: iconst_5
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 4
                     0: 85
                     1: 78
                     2: 68
                     3: 61
                     4: 51
               default: 36
          }
      36: new           #76                 // class java/lang/IndexOutOfBoundsException
      39: dup
      40: iload_1
      41: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      44: invokevirtual #85                 // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokespecial #88                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: invokevirtual #67                 // Method pullMode:()Z
      55: invokestatic  #92                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      58: goto          89
      61: aload_0
      62: invokevirtual #64                 // Method options:()Lscala/collection/immutable/Traversable;
      65: goto          89
      68: aload_0
      69: invokevirtual #61                 // Method backlog:()I
      72: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      75: goto          89
      78: aload_0
      79: invokevirtual #58                 // Method localAddress:()Ljava/net/InetSocketAddress;
      82: goto          89
      85: aload_0
      86: invokevirtual #55                 // Method handler:()Lakka/actor/ActorRef;
      89: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #101                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #105                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/io/Tcp$Bind
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #110                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #55                 // Method handler:()Lakka/actor/ActorRef;
       8: invokestatic  #116                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #120                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #58                 // Method localAddress:()Ljava/net/InetSocketAddress;
      20: invokestatic  #116                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #120                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #61                 // Method backlog:()I
      32: invokestatic  #120                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #64                 // Method options:()Lscala/collection/immutable/Traversable;
      41: invokestatic  #116                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      44: invokestatic  #120                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: aload_0
      50: invokevirtual #67                 // Method pullMode:()Z
      53: ifeq          62
      56: sipush        1231
      59: goto          65
      62: sipush        1237
      65: invokestatic  #120                // Method scala/runtime/Statics.mix:(II)I
      68: istore_1
      69: iload_1
      70: iconst_5
      71: invokestatic  #123                // Method scala/runtime/Statics.finalizeHash:(II)I
      74: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #101                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #127                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     159
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/io/Tcp$Bind
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          163
      25: aload_1
      26: checkcast     #2                  // class akka/io/Tcp$Bind
      29: astore        4
      31: aload_0
      32: invokevirtual #55                 // Method handler:()Lakka/actor/ActorRef;
      35: aload         4
      37: invokevirtual #55                 // Method handler:()Lakka/actor/ActorRef;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          155
      55: aload         5
      57: invokevirtual #130                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          155
      63: aload_0
      64: invokevirtual #58                 // Method localAddress:()Ljava/net/InetSocketAddress;
      67: aload         4
      69: invokevirtual #58                 // Method localAddress:()Ljava/net/InetSocketAddress;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          155
      87: aload         6
      89: invokevirtual #130                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          155
      95: aload_0
      96: invokevirtual #61                 // Method backlog:()I
      99: aload         4
     101: invokevirtual #61                 // Method backlog:()I
     104: if_icmpne     155
     107: aload_0
     108: invokevirtual #64                 // Method options:()Lscala/collection/immutable/Traversable;
     111: aload         4
     113: invokevirtual #64                 // Method options:()Lscala/collection/immutable/Traversable;
     116: astore        7
     118: dup
     119: ifnonnull     131
     122: pop
     123: aload         7
     125: ifnull        139
     128: goto          155
     131: aload         7
     133: invokevirtual #130                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     136: ifeq          155
     139: aload_0
     140: invokevirtual #67                 // Method pullMode:()Z
     143: aload         4
     145: invokevirtual #67                 // Method pullMode:()Z
     148: if_icmpne     155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: ifeq          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: ireturn

  public java.lang.Object failureMessage();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method failureMessage:()Lakka/io/Tcp$CommandFailed;
       4: areturn

  public akka.io.Tcp$Bind(akka.actor.ActorRef, java.net.InetSocketAddress, int, scala.collection.immutable.Traversable<akka.io.Inet$SocketOption>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field handler:Lakka/actor/ActorRef;
       5: aload_0
       6: aload_2
       7: putfield      #37                 // Field localAddress:Ljava/net/InetSocketAddress;
      10: aload_0
      11: iload_3
      12: putfield      #40                 // Field backlog:I
      15: aload_0
      16: aload         4
      18: putfield      #43                 // Field options:Lscala/collection/immutable/Traversable;
      21: aload_0
      22: iload         5
      24: putfield      #46                 // Field pullMode:Z
      27: aload_0
      28: invokespecial #142                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #146                // Method akka/io/Tcp$Command$class.$init$:(Lakka/io/Tcp$Command;)V
      35: aload_0
      36: invokestatic  #151                // Method scala/Product$class.$init$:(Lscala/Product;)V
      39: return
}
