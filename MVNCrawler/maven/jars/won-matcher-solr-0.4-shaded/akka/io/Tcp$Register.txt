Compiled from "Tcp.scala"
public final class akka.io.Tcp$Register implements akka.io.Tcp$Command,scala.Product,scala.Serializable {
  private final akka.actor.ActorRef handler;

  private final boolean keepOpenOnPeerClosed;

  private final boolean useResumeWriting;

  public akka.io.Tcp$CommandFailed failureMessage();
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method akka/io/Tcp$Command$class.failureMessage:(Lakka/io/Tcp$Command;)Lakka/io/Tcp$CommandFailed;
       4: areturn

  public akka.actor.ActorRef handler();
    Code:
       0: aload_0
       1: getfield      #28                 // Field handler:Lakka/actor/ActorRef;
       4: areturn

  public boolean keepOpenOnPeerClosed();
    Code:
       0: aload_0
       1: getfield      #31                 // Field keepOpenOnPeerClosed:Z
       4: ireturn

  public boolean useResumeWriting();
    Code:
       0: aload_0
       1: getfield      #33                 // Field useResumeWriting:Z
       4: ireturn

  public akka.io.Tcp$Register copy(akka.actor.ActorRef, boolean, boolean);
    Code:
       0: new           #2                  // class akka/io/Tcp$Register
       3: dup
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokespecial #39                 // Method "<init>":(Lakka/actor/ActorRef;ZZ)V
      10: areturn

  public akka.actor.ActorRef copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method handler:()Lakka/actor/ActorRef;
       4: areturn

  public boolean copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method keepOpenOnPeerClosed:()Z
       4: ireturn

  public boolean copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method useResumeWriting:()Z
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #52                 // String Register
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 63
                     1: 53
                     2: 43
               default: 28
          }
      28: new           #58                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #67                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #70                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #48                 // Method useResumeWriting:()Z
      47: invokestatic  #74                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      50: goto          67
      53: aload_0
      54: invokevirtual #45                 // Method keepOpenOnPeerClosed:()Z
      57: invokestatic  #74                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      60: goto          67
      63: aload_0
      64: invokevirtual #42                 // Method handler:()Lakka/actor/ActorRef;
      67: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #84                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #88                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/io/Tcp$Register
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #93                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #42                 // Method handler:()Lakka/actor/ActorRef;
       8: invokestatic  #99                 // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #45                 // Method keepOpenOnPeerClosed:()Z
      20: ifeq          29
      23: sipush        1231
      26: goto          32
      29: sipush        1237
      32: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #48                 // Method useResumeWriting:()Z
      41: ifeq          50
      44: sipush        1231
      47: goto          53
      50: sipush        1237
      53: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      56: istore_1
      57: iload_1
      58: iconst_3
      59: invokestatic  #106                // Method scala/runtime/Statics.finalizeHash:(II)I
      62: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #84                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #110                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     95
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/io/Tcp$Register
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          99
      25: aload_1
      26: checkcast     #2                  // class akka/io/Tcp$Register
      29: astore        4
      31: aload_0
      32: invokevirtual #42                 // Method handler:()Lakka/actor/ActorRef;
      35: aload         4
      37: invokevirtual #42                 // Method handler:()Lakka/actor/ActorRef;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          91
      55: aload         5
      57: invokevirtual #113                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          91
      63: aload_0
      64: invokevirtual #45                 // Method keepOpenOnPeerClosed:()Z
      67: aload         4
      69: invokevirtual #45                 // Method keepOpenOnPeerClosed:()Z
      72: if_icmpne     91
      75: aload_0
      76: invokevirtual #48                 // Method useResumeWriting:()Z
      79: aload         4
      81: invokevirtual #48                 // Method useResumeWriting:()Z
      84: if_icmpne     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ireturn

  public java.lang.Object failureMessage();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method failureMessage:()Lakka/io/Tcp$CommandFailed;
       4: areturn

  public akka.io.Tcp$Register(akka.actor.ActorRef, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field handler:Lakka/actor/ActorRef;
       5: aload_0
       6: iload_2
       7: putfield      #31                 // Field keepOpenOnPeerClosed:Z
      10: aload_0
      11: iload_3
      12: putfield      #33                 // Field useResumeWriting:Z
      15: aload_0
      16: invokespecial #121                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #125                // Method akka/io/Tcp$Command$class.$init$:(Lakka/io/Tcp$Command;)V
      23: aload_0
      24: invokestatic  #130                // Method scala/Product$class.$init$:(Lscala/Product;)V
      27: return
}
