Compiled from "TcpListener.scala"
public final class akka.io.TcpListener$$anonfun$bound$1 extends scala.runtime.AbstractPartialFunction<java.lang.Object, scala.runtime.BoxedUnit> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.io.TcpListener $outer;

  private final akka.io.ChannelRegistration registration$1;

  public final <A1, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: getstatic     #29                 // Field akka/io/SelectionHandler$ChannelAcceptable$.MODULE$:Lakka/io/SelectionHandler$ChannelAcceptable$;
       5: aload_3
       6: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          73
      12: aload_0
      13: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
      16: aload_0
      17: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
      20: aload_0
      21: getfield      #39                 // Field registration$1:Lakka/io/ChannelRegistration;
      24: aload_0
      25: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
      28: invokevirtual #43                 // Method akka/io/TcpListener.acceptLimit:()I
      31: invokevirtual #47                 // Method akka/io/TcpListener.acceptAllPending:(Lakka/io/ChannelRegistration;I)I
      34: invokevirtual #51                 // Method akka/io/TcpListener.acceptLimit_$eq:(I)V
      37: aload_0
      38: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
      41: invokevirtual #43                 // Method akka/io/TcpListener.acceptLimit:()I
      44: iconst_0
      45: if_icmple     65
      48: aload_0
      49: getfield      #39                 // Field registration$1:Lakka/io/ChannelRegistration;
      52: bipush        16
      54: invokeinterface #56,  2           // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
      59: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      62: goto          68
      65: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      68: astore        4
      70: goto          377
      73: aload_3
      74: instanceof    #64                 // class akka/io/Tcp$ResumeAccepting
      77: ifeq          121
      80: aload_3
      81: checkcast     #64                 // class akka/io/Tcp$ResumeAccepting
      84: astore        5
      86: aload         5
      88: invokevirtual #67                 // Method akka/io/Tcp$ResumeAccepting.batchSize:()I
      91: istore        6
      93: aload_0
      94: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
      97: iload         6
      99: invokevirtual #51                 // Method akka/io/TcpListener.acceptLimit_$eq:(I)V
     102: aload_0
     103: getfield      #39                 // Field registration$1:Lakka/io/ChannelRegistration;
     106: bipush        16
     108: invokeinterface #56,  2           // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
     113: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     116: astore        4
     118: goto          377
     121: aload_3
     122: instanceof    #69                 // class akka/io/TcpListener$FailedRegisterIncoming
     125: ifeq          166
     128: aload_3
     129: checkcast     #69                 // class akka/io/TcpListener$FailedRegisterIncoming
     132: astore        7
     134: aload         7
     136: invokevirtual #73                 // Method akka/io/TcpListener$FailedRegisterIncoming.channel:()Ljava/nio/channels/SocketChannel;
     139: astore        8
     141: aload_0
     142: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     145: invokevirtual #77                 // Method akka/io/TcpListener.log:()Lakka/event/LoggingAdapter;
     148: ldc           #79                 // String Could not register incoming connection since selector capacity limit is reached, closing connection
     150: invokeinterface #85,  2           // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;)V
     155: aload         8
     157: invokevirtual #91                 // Method java/nio/channels/SocketChannel.close:()V
     160: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     163: goto          375
     166: getstatic     #96                 // Field akka/io/Tcp$Unbind$.MODULE$:Lakka/io/Tcp$Unbind$;
     169: aload_3
     170: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     173: ifeq          302
     176: aload_0
     177: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     180: invokevirtual #77                 // Method akka/io/TcpListener.log:()Lakka/event/LoggingAdapter;
     183: ldc           #98                 // String Unbinding endpoint {}
     185: aload_0
     186: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     189: invokevirtual #102                // Method akka/io/TcpListener.localAddress:()Ljava/lang/Object;
     192: invokeinterface #106,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     197: aload_0
     198: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     201: invokevirtual #109                // Method akka/io/TcpListener.channel:()Ljava/nio/channels/ServerSocketChannel;
     204: invokevirtual #112                // Method java/nio/channels/ServerSocketChannel.close:()V
     207: getstatic     #117                // Field akka/util/Helpers$.MODULE$:Lakka/util/Helpers$;
     210: invokevirtual #121                // Method akka/util/Helpers$.isWindows:()Z
     213: ifeq          226
     216: aload_0
     217: getfield      #39                 // Field registration$1:Lakka/io/ChannelRegistration;
     220: iconst_1
     221: invokeinterface #56,  2           // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
     226: getstatic     #126                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     229: aload_0
     230: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     233: invokevirtual #130                // Method akka/io/TcpListener.sender:()Lakka/actor/ActorRef;
     236: invokevirtual #134                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     239: getstatic     #139                // Field akka/io/Tcp$Unbound$.MODULE$:Lakka/io/Tcp$Unbound$;
     242: aload_0
     243: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     246: invokevirtual #142                // Method akka/io/TcpListener.self:()Lakka/actor/ActorRef;
     249: invokeinterface #148,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     254: aload_0
     255: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     258: invokevirtual #77                 // Method akka/io/TcpListener.log:()Lakka/event/LoggingAdapter;
     261: ldc           #150                // String Unbound endpoint {}, stopping listener
     263: aload_0
     264: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     267: invokevirtual #102                // Method akka/io/TcpListener.localAddress:()Ljava/lang/Object;
     270: invokeinterface #106,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     275: aload_0
     276: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     279: invokevirtual #154                // Method akka/io/TcpListener.context:()Lakka/actor/ActorContext;
     282: aload_0
     283: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     286: invokevirtual #142                // Method akka/io/TcpListener.self:()Lakka/actor/ActorRef;
     289: invokeinterface #160,  2          // InterfaceMethod akka/actor/ActorContext.stop:(Lakka/actor/ActorRef;)V
     294: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     297: astore        4
     299: goto          377
     302: aload_2
     303: aload_1
     304: invokeinterface #166,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     309: astore        4
     311: goto          377
     314: astore        9
     316: aload         9
     318: astore        10
     320: getstatic     #171                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     323: aload         10
     325: invokevirtual #175                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     328: astore        11
     330: aload         11
     332: invokevirtual #180                // Method scala/Option.isEmpty:()Z
     335: ifeq          341
     338: aload         9
     340: athrow
     341: aload         11
     343: invokevirtual #183                // Method scala/Option.get:()Ljava/lang/Object;
     346: checkcast     #185                // class java/lang/Throwable
     349: astore        12
     351: aload_0
     352: getfield      #37                 // Field $outer:Lakka/io/TcpListener;
     355: invokevirtual #77                 // Method akka/io/TcpListener.log:()Lakka/event/LoggingAdapter;
     358: ldc           #187                // String Error closing socket channel: {}
     360: aload         12
     362: invokeinterface #106,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     367: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     370: astore        13
     372: getstatic     #62                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     375: astore        4
     377: aload         4
     379: areturn
    Exception table:
       from    to  target type
         155   166   314   any

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #29                 // Field akka/io/SelectionHandler$ChannelAcceptable$.MODULE$:Lakka/io/SelectionHandler$ChannelAcceptable$;
       5: aload_2
       6: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: iconst_1
      13: istore_3
      14: goto          58
      17: aload_2
      18: instanceof    #64                 // class akka/io/Tcp$ResumeAccepting
      21: ifeq          29
      24: iconst_1
      25: istore_3
      26: goto          58
      29: aload_2
      30: instanceof    #69                 // class akka/io/TcpListener$FailedRegisterIncoming
      33: ifeq          41
      36: iconst_1
      37: istore_3
      38: goto          58
      41: getstatic     #96                 // Field akka/io/Tcp$Unbind$.MODULE$:Lakka/io/Tcp$Unbind$;
      44: aload_2
      45: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          56
      51: iconst_1
      52: istore_3
      53: goto          58
      56: iconst_0
      57: istore_3
      58: iload_3
      59: ireturn

  public akka.io.TcpListener$$anonfun$bound$1(akka.io.TcpListener, akka.io.ChannelRegistration);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #37                 // Field $outer:Lakka/io/TcpListener;
      11: aload_0
      12: aload_2
      13: putfield      #39                 // Field registration$1:Lakka/io/ChannelRegistration;
      16: aload_0
      17: invokespecial #203                // Method scala/runtime/AbstractPartialFunction."<init>":()V
      20: return
}
