Compiled from "TcpConnection.scala"
public abstract class akka.io.TcpConnection implements akka.actor.Actor, akka.actor.ActorLogging, akka.dispatch.RequiresMessageQueue<akka.dispatch.UnboundedMessageQueueSemantics> {
  private final akka.io.TcpExt tcp;

  private final java.nio.channels.SocketChannel channel;

  private final boolean pullMode;

  public akka.io.TcpConnection$PendingWrite akka$io$TcpConnection$$pendingWrite;

  private boolean peerClosed;

  public boolean akka$io$TcpConnection$$writingSuspended;

  public boolean akka$io$TcpConnection$$readingSuspended;

  public scala.Option<akka.actor.ActorRef> akka$io$TcpConnection$$interestedInResume;

  private akka.io.TcpConnection$CloseInformation closedMessage;

  private akka.actor.ActorRef watchedActor;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static scala.Function0<scala.runtime.BoxedUnit> doNothing();
    Code:
       0: getstatic     #23                 // Field akka/io/TcpConnection$.MODULE$:Lakka/io/TcpConnection$;
       3: invokevirtual #25                 // Method akka/io/TcpConnection$.doNothing:()Lscala/Function0;
       6: areturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #51                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #66                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #69                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #93                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #114                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #119                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #127                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.io.TcpExt tcp();
    Code:
       0: aload_0
       1: getfield      #130                // Field tcp:Lakka/io/TcpExt;
       4: areturn

  public java.nio.channels.SocketChannel channel();
    Code:
       0: aload_0
       1: getfield      #133                // Field channel:Ljava/nio/channels/SocketChannel;
       4: areturn

  public boolean pullMode();
    Code:
       0: aload_0
       1: getfield      #136                // Field pullMode:Z
       4: ireturn

  public akka.io.TcpConnection$CloseInformation closedMessage();
    Code:
       0: aload_0
       1: getfield      #139                // Field closedMessage:Lakka/io/TcpConnection$CloseInformation;
       4: areturn

  public void closedMessage_$eq(akka.io.TcpConnection$CloseInformation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field closedMessage:Lakka/io/TcpConnection$CloseInformation;
       5: return

  private akka.actor.ActorRef watchedActor();
    Code:
       0: aload_0
       1: getfield      #143                // Field watchedActor:Lakka/actor/ActorRef;
       4: areturn

  private void watchedActor_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field watchedActor:Lakka/actor/ActorRef;
       5: return

  public void signDeathPact(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method unsignDeathPact:()V
       4: aload_0
       5: aload_1
       6: invokespecial #150                // Method watchedActor_$eq:(Lakka/actor/ActorRef;)V
       9: aload_0
      10: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
      13: aload_0
      14: invokespecial #154                // Method watchedActor:()Lakka/actor/ActorRef;
      17: invokeinterface #160,  2          // InterfaceMethod akka/actor/ActorContext.watch:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
      22: pop
      23: return

  public void unsignDeathPact();
    Code:
       0: aload_0
       1: invokespecial #154                // Method watchedActor:()Lakka/actor/ActorRef;
       4: aload_0
       5: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
       8: invokeinterface #165,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      13: invokevirtual #170                // Method akka/actor/ActorSystem.deadLetters:()Lakka/actor/ActorRef;
      16: if_acmpeq     33
      19: aload_0
      20: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
      23: aload_0
      24: invokespecial #154                // Method watchedActor:()Lakka/actor/ActorRef;
      27: invokeinterface #173,  2          // InterfaceMethod akka/actor/ActorContext.unwatch:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
      32: pop
      33: return

  public boolean writePending();
    Code:
       0: aload_0
       1: getfield      #176                // Field akka$io$TcpConnection$$pendingWrite:Lakka/io/TcpConnection$PendingWrite;
       4: getstatic     #181                // Field akka/io/TcpConnection$EmptyPendingWrite$.MODULE$:Lakka/io/TcpConnection$EmptyPendingWrite$;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> waitingForRegistration(akka.io.ChannelRegistration, akka.actor.ActorRef);
    Code:
       0: new           #185                // class akka/io/TcpConnection$$anonfun$waitingForRegistration$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #189                // Method akka/io/TcpConnection$$anonfun$waitingForRegistration$1."<init>":(Lakka/io/TcpConnection;Lakka/io/ChannelRegistration;Lakka/actor/ActorRef;)V
      10: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> connected(akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #197                // Method handleWriteMessages:(Lakka/io/TcpConnection$ConnectionInfo;)Lscala/PartialFunction;
       5: new           #199                // class akka/io/TcpConnection$$anonfun$connected$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #202                // Method akka/io/TcpConnection$$anonfun$connected$1."<init>":(Lakka/io/TcpConnection;Lakka/io/TcpConnection$ConnectionInfo;)V
      14: invokeinterface #208,  2          // InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
      19: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> peerSentEOF(akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #197                // Method handleWriteMessages:(Lakka/io/TcpConnection$ConnectionInfo;)Lscala/PartialFunction;
       5: new           #213                // class akka/io/TcpConnection$$anonfun$peerSentEOF$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #214                // Method akka/io/TcpConnection$$anonfun$peerSentEOF$1."<init>":(Lakka/io/TcpConnection;Lakka/io/TcpConnection$ConnectionInfo;)V
      14: invokeinterface #208,  2          // InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
      19: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> closingWithPendingWrite(akka.io.TcpConnection$ConnectionInfo, scala.Option<akka.actor.ActorRef>, akka.io.Tcp$ConnectionClosed);
    Code:
       0: new           #218                // class akka/io/TcpConnection$$anonfun$closingWithPendingWrite$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #221                // Method akka/io/TcpConnection$$anonfun$closingWithPendingWrite$1."<init>":(Lakka/io/TcpConnection;Lakka/io/TcpConnection$ConnectionInfo;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)V
      11: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> closing(akka.io.TcpConnection$ConnectionInfo, scala.Option<akka.actor.ActorRef>);
    Code:
       0: new           #228                // class akka/io/TcpConnection$$anonfun$closing$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #231                // Method akka/io/TcpConnection$$anonfun$closing$1."<init>":(Lakka/io/TcpConnection;Lakka/io/TcpConnection$ConnectionInfo;Lscala/Option;)V
      10: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> handleWriteMessages(akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: new           #233                // class akka/io/TcpConnection$$anonfun$handleWriteMessages$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #234                // Method akka/io/TcpConnection$$anonfun$handleWriteMessages$1."<init>":(Lakka/io/TcpConnection;Lakka/io/TcpConnection$ConnectionInfo;)V
       9: areturn

  public void completeConnect(akka.io.ChannelRegistration, akka.actor.ActorRef, scala.collection.immutable.Traversable<akka.io.Inet$SocketOption>);
    Code:
       0: aload_0
       1: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: iconst_1
       8: invokevirtual #252                // Method java/net/Socket.setTcpNoDelay:(Z)V
      11: goto          33
      14: astore        4
      16: aload_0
      17: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
      20: ldc_w         #256                // String Could not enable TcpNoDelay: {}
      23: aload         4
      25: invokevirtual #260                // Method java/net/SocketException.getMessage:()Ljava/lang/String;
      28: invokeinterface #266,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      33: aload_3
      34: new           #268                // class akka/io/TcpConnection$$anonfun$completeConnect$1
      37: dup
      38: aload_0
      39: invokespecial #271                // Method akka/io/TcpConnection$$anonfun$completeConnect$1."<init>":(Lakka/io/TcpConnection;)V
      42: invokeinterface #277,  2          // InterfaceMethod scala/collection/immutable/Traversable.foreach:(Lscala/Function1;)V
      47: getstatic     #282                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      50: aload_2
      51: invokevirtual #286                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      54: new           #288                // class akka/io/Tcp$Connected
      57: dup
      58: aload_0
      59: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
      62: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      65: invokevirtual #292                // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      68: checkcast     #294                // class java/net/InetSocketAddress
      71: aload_0
      72: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
      75: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      78: invokevirtual #297                // Method java/net/Socket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      81: checkcast     #294                // class java/net/InetSocketAddress
      84: invokespecial #300                // Method akka/io/Tcp$Connected."<init>":(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
      87: aload_0
      88: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
      91: invokeinterface #308,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      96: aload_0
      97: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
     100: aload_0
     101: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     104: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     107: invokevirtual #322                // Method akka/io/TcpExt$Settings.RegisterTimeout:()Lscala/concurrent/duration/Duration;
     110: invokeinterface #326,  2          // InterfaceMethod akka/actor/ActorContext.setReceiveTimeout:(Lscala/concurrent/duration/Duration;)V
     115: aload_0
     116: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     119: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     122: invokevirtual #329                // Method akka/io/TcpExt$Settings.WindowsConnectionAbortWorkaroundEnabled:()Z
     125: ifeq          136
     128: aload_1
     129: bipush        8
     131: invokeinterface #335,  2          // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
     136: aload_0
     137: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
     140: aload_0
     141: aload_1
     142: aload_2
     143: invokevirtual #337                // Method waitingForRegistration:(Lakka/io/ChannelRegistration;Lakka/actor/ActorRef;)Lscala/PartialFunction;
     146: invokeinterface #341,  2          // InterfaceMethod akka/actor/ActorContext.become:(Lscala/PartialFunction;)V
     151: return
    Exception table:
       from    to  target type
           0    14    14   Class java/net/SocketException

  public void suspendReading(akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #347                // Field akka$io$TcpConnection$$readingSuspended:Z
       5: aload_1
       6: invokevirtual #352                // Method akka/io/TcpConnection$ConnectionInfo.registration:()Lakka/io/ChannelRegistration;
       9: iconst_1
      10: invokeinterface #355,  2          // InterfaceMethod akka/io/ChannelRegistration.disableInterest:(I)V
      15: return

  public void resumeReading(akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #347                // Field akka$io$TcpConnection$$readingSuspended:Z
       5: aload_1
       6: invokevirtual #352                // Method akka/io/TcpConnection$ConnectionInfo.registration:()Lakka/io/ChannelRegistration;
       9: iconst_1
      10: invokeinterface #335,  2          // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
      15: return

  public void doRead(akka.io.TcpConnection$ConnectionInfo, scala.Option<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: getfield      #347                // Field akka$io$TcpConnection$$readingSuspended:Z
       4: ifne          319
       7: aload_0
       8: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      11: invokevirtual #364                // Method akka/io/TcpExt.bufferPool:()Lakka/io/BufferPool;
      14: invokeinterface #370,  1          // InterfaceMethod akka/io/BufferPool.acquire:()Ljava/nio/ByteBuffer;
      19: astore_3
      20: iconst_0
      21: istore        6
      23: aconst_null
      24: astore        7
      26: aload_0
      27: aload_3
      28: aload_0
      29: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      32: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
      35: invokevirtual #374                // Method akka/io/TcpExt$Settings.ReceivedMessageSizeLimit:()I
      38: aload_1
      39: invokespecial #378                // Method innerRead$1:(Ljava/nio/ByteBuffer;ILakka/io/TcpConnection$ConnectionInfo;)Lakka/io/TcpConnection$ReadResult;
      42: astore        8
      44: getstatic     #383                // Field akka/io/TcpConnection$AllRead$.MODULE$:Lakka/io/TcpConnection$AllRead$;
      47: aload         8
      49: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      52: ifeq          86
      55: aload_0
      56: invokevirtual #389                // Method pullMode:()Z
      59: ifeq          68
      62: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      65: goto          81
      68: aload_1
      69: invokevirtual #352                // Method akka/io/TcpConnection$ConnectionInfo.registration:()Lakka/io/ChannelRegistration;
      72: iconst_1
      73: invokeinterface #335,  2          // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
      78: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      81: astore        9
      83: goto          306
      86: getstatic     #400                // Field akka/io/TcpConnection$MoreDataWaiting$.MODULE$:Lakka/io/TcpConnection$MoreDataWaiting$;
      89: aload         8
      91: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      94: ifeq          140
      97: aload_0
      98: invokevirtual #389                // Method pullMode:()Z
     101: ifeq          110
     104: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     107: goto          135
     110: getstatic     #282                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     113: aload_0
     114: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
     117: invokevirtual #286                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     120: getstatic     #405                // Field akka/io/SelectionHandler$ChannelReadable$.MODULE$:Lakka/io/SelectionHandler$ChannelReadable$;
     123: aload_0
     124: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
     127: invokeinterface #308,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     132: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     135: astore        9
     137: goto          306
     140: getstatic     #410                // Field akka/io/TcpConnection$EndOfStream$.MODULE$:Lakka/io/TcpConnection$EndOfStream$;
     143: aload         8
     145: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     148: ifeq          216
     151: iconst_1
     152: istore        6
     154: aload         8
     156: astore        7
     158: aload_0
     159: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
     162: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     165: invokevirtual #413                // Method java/net/Socket.isOutputShutdown:()Z
     168: ifeq          216
     171: aload_0
     172: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     175: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     178: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
     181: ifeq          196
     184: aload_0
     185: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
     188: ldc_w         #418                // String Read returned end-of-stream, our side already closed
     191: invokeinterface #421,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
     196: aload_0
     197: aload_1
     198: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
     201: aload_2
     202: getstatic     #429                // Field akka/io/Tcp$ConfirmedClosed$.MODULE$:Lakka/io/Tcp$ConfirmedClosed$;
     205: invokevirtual #433                // Method doCloseConnection:(Lakka/actor/ActorRef;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)V
     208: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     211: astore        9
     213: goto          306
     216: iload         6
     218: ifeq          263
     221: aload_0
     222: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     225: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     228: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
     231: ifeq          246
     234: aload_0
     235: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
     238: ldc_w         #435                // String Read returned end-of-stream, our side not yet closed
     241: invokeinterface #421,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
     246: aload_0
     247: aload_1
     248: aload_2
     249: getstatic     #440                // Field akka/io/Tcp$PeerClosed$.MODULE$:Lakka/io/Tcp$PeerClosed$;
     252: invokevirtual #444                // Method handleClose:(Lakka/io/TcpConnection$ConnectionInfo;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)V
     255: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     258: astore        9
     260: goto          306
     263: new           #446                // class scala/MatchError
     266: dup
     267: aload         8
     269: invokespecial #448                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     272: athrow
     273: astore        4
     275: aload_0
     276: aload_1
     277: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
     280: aload         4
     282: invokevirtual #452                // Method handleError:(Lakka/actor/ActorRef;Ljava/io/IOException;)V
     285: goto          306
     288: astore        5
     290: aload_0
     291: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     294: invokevirtual #364                // Method akka/io/TcpExt.bufferPool:()Lakka/io/BufferPool;
     297: aload_3
     298: invokeinterface #456,  2          // InterfaceMethod akka/io/BufferPool.release:(Ljava/nio/ByteBuffer;)V
     303: aload         5
     305: athrow
     306: aload_0
     307: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     310: invokevirtual #364                // Method akka/io/TcpExt.bufferPool:()Lakka/io/BufferPool;
     313: aload_3
     314: invokeinterface #456,  2          // InterfaceMethod akka/io/BufferPool.release:(Ljava/nio/ByteBuffer;)V
     319: return
    Exception table:
       from    to  target type
          20   273   273   Class java/io/IOException
          20   288   288   any

  public void doWrite(akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #176                // Field akka$io$TcpConnection$$pendingWrite:Lakka/io/TcpConnection$PendingWrite;
       5: aload_1
       6: invokevirtual #472                // Method akka/io/TcpConnection$PendingWrite.doWrite:(Lakka/io/TcpConnection$ConnectionInfo;)Lakka/io/TcpConnection$PendingWrite;
       9: putfield      #176                // Field akka$io$TcpConnection$$pendingWrite:Lakka/io/TcpConnection$PendingWrite;
      12: return

  public akka.io.Tcp$ConnectionClosed closeReason();
    Code:
       0: aload_0
       1: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #413                // Method java/net/Socket.isOutputShutdown:()Z
      10: ifeq          19
      13: getstatic     #429                // Field akka/io/Tcp$ConfirmedClosed$.MODULE$:Lakka/io/Tcp$ConfirmedClosed$;
      16: goto          22
      19: getstatic     #440                // Field akka/io/Tcp$PeerClosed$.MODULE$:Lakka/io/Tcp$PeerClosed$;
      22: areturn

  public void handleClose(akka.io.TcpConnection$ConnectionInfo, scala.Option<akka.actor.ActorRef>, akka.io.Tcp$ConnectionClosed);
    Code:
       0: aload_3
       1: astore        4
       3: getstatic     #479                // Field akka/io/Tcp$Aborted$.MODULE$:Lakka/io/Tcp$Aborted$;
       6: aload         4
       8: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          57
      14: aload_0
      15: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      18: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
      21: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
      24: ifeq          39
      27: aload_0
      28: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
      31: ldc_w         #481                // String Got Abort command. RESETing connection.
      34: invokeinterface #421,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
      39: aload_0
      40: aload_1
      41: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
      44: aload_2
      45: aload_3
      46: invokevirtual #433                // Method doCloseConnection:(Lakka/actor/ActorRef;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)V
      49: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      52: astore        5
      54: goto          313
      57: getstatic     #440                // Field akka/io/Tcp$PeerClosed$.MODULE$:Lakka/io/Tcp$PeerClosed$;
      60: aload         4
      62: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifeq          124
      68: aload_1
      69: invokevirtual #484                // Method akka/io/TcpConnection$ConnectionInfo.keepOpenOnPeerClosed:()Z
      72: ifeq          124
      75: getstatic     #282                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      78: aload_1
      79: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
      82: invokevirtual #286                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      85: getstatic     #440                // Field akka/io/Tcp$PeerClosed$.MODULE$:Lakka/io/Tcp$PeerClosed$;
      88: aload_0
      89: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
      92: invokeinterface #308,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      97: aload_0
      98: iconst_1
      99: putfield      #486                // Field peerClosed:Z
     102: aload_0
     103: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
     106: aload_0
     107: aload_1
     108: invokevirtual #488                // Method peerSentEOF:(Lakka/io/TcpConnection$ConnectionInfo;)Lscala/PartialFunction;
     111: invokeinterface #341,  2          // InterfaceMethod akka/actor/ActorContext.become:(Lscala/PartialFunction;)V
     116: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     119: astore        5
     121: goto          313
     124: aload_0
     125: invokevirtual #490                // Method writePending:()Z
     128: ifeq          184
     131: aload_0
     132: invokevirtual #148                // Method unsignDeathPact:()V
     135: aload_0
     136: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     139: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     142: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
     145: ifeq          160
     148: aload_0
     149: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
     152: ldc_w         #492                // String Got Close command but write is still pending.
     155: invokeinterface #421,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
     160: aload_0
     161: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
     164: aload_0
     165: aload_1
     166: aload_2
     167: aload_3
     168: invokevirtual #494                // Method closingWithPendingWrite:(Lakka/io/TcpConnection$ConnectionInfo;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)Lscala/PartialFunction;
     171: invokeinterface #341,  2          // InterfaceMethod akka/actor/ActorContext.become:(Lscala/PartialFunction;)V
     176: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     179: astore        5
     181: goto          313
     184: getstatic     #429                // Field akka/io/Tcp$ConfirmedClosed$.MODULE$:Lakka/io/Tcp$ConfirmedClosed$;
     187: aload         4
     189: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     192: ifeq          273
     195: aload_0
     196: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     199: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     202: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
     205: ifeq          220
     208: aload_0
     209: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
     212: ldc_w         #496                // String Got ConfirmedClose command, sending FIN.
     215: invokeinterface #421,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
     220: aload_0
     221: getfield      #486                // Field peerClosed:Z
     224: ifne          255
     227: aload_0
     228: invokevirtual #499                // Method safeShutdownOutput:()Z
     231: ifeq          255
     234: aload_0
     235: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
     238: aload_0
     239: aload_1
     240: aload_2
     241: invokevirtual #501                // Method closing:(Lakka/io/TcpConnection$ConnectionInfo;Lscala/Option;)Lscala/PartialFunction;
     244: invokeinterface #341,  2          // InterfaceMethod akka/actor/ActorContext.become:(Lscala/PartialFunction;)V
     249: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     252: goto          268
     255: aload_0
     256: aload_1
     257: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
     260: aload_2
     261: aload_3
     262: invokevirtual #433                // Method doCloseConnection:(Lakka/actor/ActorRef;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)V
     265: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     268: astore        5
     270: goto          313
     273: aload_0
     274: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
     277: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
     280: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
     283: ifeq          298
     286: aload_0
     287: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
     290: ldc_w         #503                // String Got Close command, closing connection.
     293: invokeinterface #421,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
     298: aload_0
     299: aload_1
     300: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
     303: aload_2
     304: aload_3
     305: invokevirtual #433                // Method doCloseConnection:(Lakka/actor/ActorRef;Lscala/Option;Lakka/io/Tcp$ConnectionClosed;)V
     308: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     311: astore        5
     313: return

  public void doCloseConnection(akka.actor.ActorRef, scala.Option<akka.actor.ActorRef>, akka.io.Tcp$ConnectionClosed);
    Code:
       0: aload_3
       1: getstatic     #479                // Field akka/io/Tcp$Aborted$.MODULE$:Lakka/io/Tcp$Aborted$;
       4: astore        4
       6: dup
       7: ifnonnull     19
      10: pop
      11: aload         4
      13: ifnull        27
      16: goto          34
      19: aload         4
      21: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          34
      27: aload_0
      28: invokevirtual #508                // Method abort:()V
      31: goto          41
      34: aload_0
      35: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
      38: invokevirtual #511                // Method java/nio/channels/SocketChannel.close:()V
      41: aload_0
      42: new           #513                // class akka/io/TcpConnection$CloseInformation
      45: dup
      46: getstatic     #518                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: invokevirtual #522                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
      52: getstatic     #518                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      55: iconst_1
      56: anewarray     #524                // class akka/actor/ActorRef
      59: dup
      60: iconst_0
      61: aload_1
      62: aastore
      63: checkcast     #526                // class "[Ljava/lang/Object;"
      66: invokevirtual #530                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      69: invokevirtual #536                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      72: checkcast     #538                // class scala/collection/SetLike
      75: getstatic     #543                // Field scala/Option$.MODULE$:Lscala/Option$;
      78: aload_2
      79: invokevirtual #547                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
      82: invokeinterface #551,  2          // InterfaceMethod scala/collection/SetLike.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/Set;
      87: checkcast     #553                // class scala/collection/immutable/Set
      90: aload_3
      91: invokespecial #556                // Method akka/io/TcpConnection$CloseInformation."<init>":(Lscala/collection/immutable/Set;Lakka/io/Tcp$Event;)V
      94: invokevirtual #559                // Method stopWith:(Lakka/io/TcpConnection$CloseInformation;)V
      97: return

  public void handleError(akka.actor.ActorRef, java.io.IOException);
    Code:
       0: aload_0
       1: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
       4: ldc_w         #561                // String Closing connection due to IO error {}
       7: aload_2
       8: invokeinterface #266,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: new           #513                // class akka/io/TcpConnection$CloseInformation
      17: dup
      18: getstatic     #518                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: invokevirtual #522                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
      24: getstatic     #518                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: iconst_1
      28: anewarray     #524                // class akka/actor/ActorRef
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: checkcast     #526                // class "[Ljava/lang/Object;"
      38: invokevirtual #530                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      41: invokevirtual #536                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      44: checkcast     #553                // class scala/collection/immutable/Set
      47: new           #563                // class akka/io/Tcp$ErrorClosed
      50: dup
      51: aload_0
      52: aload_2
      53: invokespecial #567                // Method extractMsg:(Ljava/lang/Throwable;)Ljava/lang/String;
      56: invokespecial #569                // Method akka/io/Tcp$ErrorClosed."<init>":(Ljava/lang/String;)V
      59: invokespecial #556                // Method akka/io/TcpConnection$CloseInformation."<init>":(Lscala/collection/immutable/Set;Lakka/io/Tcp$Event;)V
      62: invokevirtual #559                // Method stopWith:(Lakka/io/TcpConnection$CloseInformation;)V
      65: return

  public boolean safeShutdownOutput();
    Code:
       0: aload_0
       1: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #574                // Method java/net/Socket.shutdownOutput:()V
      10: iconst_1
      11: goto          16
      14: pop
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           0    14    14   Class java/net/SocketException

  private java.lang.String extractMsg(java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: ldc_w         #576                // String unknown
       7: goto          62
      10: aload_1
      11: invokevirtual #577                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      14: astore_3
      15: aload_3
      16: ifnonnull     25
      19: iconst_1
      20: istore        4
      22: goto          44
      25: ldc_w         #579                // String
      28: aload_3
      29: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ifeq          41
      35: iconst_1
      36: istore        4
      38: goto          44
      41: iconst_0
      42: istore        4
      44: iload         4
      46: ifeq          57
      49: aload_1
      50: invokevirtual #583                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      53: astore_1
      54: goto          0
      57: aload_3
      58: astore        5
      60: aload         5
      62: areturn

  public void abort();
    Code:
       0: aload_0
       1: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #246                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: iconst_1
       8: iconst_0
       9: invokevirtual #590                // Method java/net/Socket.setSoLinger:(ZI)V
      12: goto          82
      15: astore_1
      16: aload_1
      17: astore_2
      18: getstatic     #595                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      21: aload_2
      22: invokevirtual #599                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      25: astore_3
      26: aload_3
      27: invokevirtual #602                // Method scala/Option.isEmpty:()Z
      30: ifeq          35
      33: aload_1
      34: athrow
      35: aload_3
      36: invokevirtual #606                // Method scala/Option.get:()Ljava/lang/Object;
      39: checkcast     #466                // class java/lang/Throwable
      42: astore        4
      44: aload_0
      45: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      48: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
      51: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
      54: ifeq          77
      57: aload_0
      58: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
      61: ldc_w         #608                // String setSoLinger(true, 0) failed with [{}]
      64: aload         4
      66: invokeinterface #266,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      71: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      74: goto          80
      77: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      80: astore        5
      82: aload_0
      83: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
      86: invokevirtual #511                // Method java/nio/channels/SocketChannel.close:()V
      89: return
    Exception table:
       from    to  target type
           0    15    15   any

  public void stopWith(akka.io.TcpConnection$CloseInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #611                // Method closedMessage_$eq:(Lakka/io/TcpConnection$CloseInformation;)V
       5: aload_0
       6: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
       9: aload_0
      10: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
      13: invokeinterface #614,  2          // InterfaceMethod akka/actor/ActorContext.stop:(Lakka/actor/ActorRef;)V
      18: return

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #619                // Method java/nio/channels/SocketChannel.isOpen:()Z
       7: ifeq          14
      10: aload_0
      11: invokevirtual #508                // Method abort:()V
      14: aload_0
      15: invokevirtual #490                // Method writePending:()Z
      18: ifeq          28
      21: aload_0
      22: getfield      #176                // Field akka$io$TcpConnection$$pendingWrite:Lakka/io/TcpConnection$PendingWrite;
      25: invokevirtual #621                // Method akka/io/TcpConnection$PendingWrite.release:()V
      28: aload_0
      29: invokevirtual #623                // Method closedMessage:()Lakka/io/TcpConnection$CloseInformation;
      32: ifnull        89
      35: aload_0
      36: invokevirtual #490                // Method writePending:()Z
      39: ifeq          67
      42: aload_0
      43: invokevirtual #623                // Method closedMessage:()Lakka/io/TcpConnection$CloseInformation;
      46: invokevirtual #627                // Method akka/io/TcpConnection$CloseInformation.notificationsTo:()Lscala/collection/immutable/Set;
      49: aload_0
      50: getfield      #176                // Field akka$io$TcpConnection$$pendingWrite:Lakka/io/TcpConnection$PendingWrite;
      53: invokevirtual #629                // Method akka/io/TcpConnection$PendingWrite.commander:()Lakka/actor/ActorRef;
      56: invokeinterface #633,  2          // InterfaceMethod scala/collection/immutable/Set.$plus:(Ljava/lang/Object;)Lscala/collection/Set;
      61: checkcast     #553                // class scala/collection/immutable/Set
      64: goto          74
      67: aload_0
      68: invokevirtual #623                // Method closedMessage:()Lakka/io/TcpConnection$CloseInformation;
      71: invokevirtual #627                // Method akka/io/TcpConnection$CloseInformation.notificationsTo:()Lscala/collection/immutable/Set;
      74: astore_1
      75: aload_1
      76: new           #635                // class akka/io/TcpConnection$$anonfun$postStop$1
      79: dup
      80: aload_0
      81: invokespecial #636                // Method akka/io/TcpConnection$$anonfun$postStop$1."<init>":(Lakka/io/TcpConnection;)V
      84: invokeinterface #637,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
      89: return

  public void postRestart(java.lang.Throwable);
    Code:
       0: new           #642                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #644                // String Restarting not supported for connection actors.
       7: invokespecial #645                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: athrow

  public akka.io.TcpConnection$PendingWrite PendingWrite(akka.actor.ActorRef, akka.io.Tcp$WriteCommand);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: invokespecial #651                // Method create$default$2$1:()Lakka/io/Tcp$WriteCommand;
       6: aload_1
       7: invokespecial #655                // Method create$1:(Lakka/io/Tcp$WriteCommand;Lakka/io/Tcp$WriteCommand;Lakka/actor/ActorRef;)Lakka/io/TcpConnection$PendingWrite;
      10: areturn

  public akka.io.TcpConnection$PendingBufferWrite PendingBufferWrite(akka.actor.ActorRef, akka.util.ByteString, akka.io.Tcp$Event, akka.io.Tcp$WriteCommand);
    Code:
       0: aload_0
       1: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
       4: invokevirtual #364                // Method akka/io/TcpExt.bufferPool:()Lakka/io/BufferPool;
       7: invokeinterface #370,  1          // InterfaceMethod akka/io/BufferPool.acquire:()Ljava/nio/ByteBuffer;
      12: astore        5
      14: aload_2
      15: aload         5
      17: invokevirtual #665                // Method akka/util/ByteString.copyToBuffer:(Ljava/nio/ByteBuffer;)I
      20: istore        11
      22: aload         5
      24: invokevirtual #669                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      27: pop
      28: new           #671                // class akka/io/TcpConnection$PendingBufferWrite
      31: dup
      32: aload_0
      33: aload_1
      34: aload_2
      35: iload         11
      37: invokevirtual #675                // Method akka/util/ByteString.drop:(I)Lakka/util/ByteString;
      40: aload_3
      41: aload         5
      43: aload         4
      45: invokespecial #678                // Method akka/io/TcpConnection$PendingBufferWrite."<init>":(Lakka/io/TcpConnection;Lakka/actor/ActorRef;Lakka/util/ByteString;Ljava/lang/Object;Ljava/nio/ByteBuffer;Lakka/io/Tcp$WriteCommand;)V
      48: areturn
      49: astore        6
      51: aload         6
      53: astore        7
      55: getstatic     #595                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      58: aload         7
      60: invokevirtual #599                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      63: astore        8
      65: aload         8
      67: invokevirtual #602                // Method scala/Option.isEmpty:()Z
      70: ifeq          76
      73: aload         6
      75: athrow
      76: aload         8
      78: invokevirtual #606                // Method scala/Option.get:()Ljava/lang/Object;
      81: checkcast     #466                // class java/lang/Throwable
      84: astore        9
      86: aload_0
      87: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      90: invokevirtual #364                // Method akka/io/TcpExt.bufferPool:()Lakka/io/BufferPool;
      93: aload         5
      95: invokeinterface #456,  2          // InterfaceMethod akka/io/BufferPool.release:(Ljava/nio/ByteBuffer;)V
     100: aload         9
     102: athrow
    Exception table:
       from    to  target type
          14    48    49   any

  public akka.io.TcpConnection$PendingWriteFile PendingWriteFile(akka.actor.ActorRef, java.lang.String, long, long, akka.io.Tcp$Event, akka.io.Tcp$WriteCommand);
    Code:
       0: new           #693                // class akka/io/TcpConnection$PendingWriteFile
       3: dup
       4: aload_0
       5: aload_1
       6: new           #695                // class java/io/FileInputStream
       9: dup
      10: aload_2
      11: invokespecial #696                // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      14: invokevirtual #700                // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      17: lload_3
      18: lload         5
      20: aload         7
      22: aload         8
      24: invokespecial #703                // Method akka/io/TcpConnection$PendingWriteFile."<init>":(Lakka/io/TcpConnection;Lakka/actor/ActorRef;Ljava/nio/channels/FileChannel;JJLakka/io/Tcp$Event;Lakka/io/Tcp$WriteCommand;)V
      27: areturn

  private final akka.io.TcpConnection$ReadResult innerRead$1(java.nio.ByteBuffer, int, akka.io.TcpConnection$ConnectionInfo);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmple     218
       5: aload_1
       6: invokevirtual #711                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       9: pop
      10: getstatic     #716                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      13: aload_0
      14: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      17: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
      20: invokevirtual #719                // Method akka/io/TcpExt$Settings.DirectBufferSize:()I
      23: iload_2
      24: invokevirtual #723                // Method scala/math/package$.min:(II)I
      27: istore        5
      29: aload_1
      30: iload         5
      32: invokevirtual #727                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      35: pop
      36: aload_0
      37: invokevirtual #240                // Method channel:()Ljava/nio/channels/SocketChannel;
      40: aload_1
      41: invokevirtual #730                // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
      44: istore        6
      46: aload_1
      47: invokevirtual #669                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: invokevirtual #310                // Method tcp:()Lakka/io/TcpExt;
      55: invokevirtual #316                // Method akka/io/TcpExt.Settings:()Lakka/io/TcpExt$Settings;
      58: invokevirtual #416                // Method akka/io/TcpExt$Settings.TraceLogging:()Z
      61: ifeq          81
      64: aload_0
      65: invokevirtual #254                // Method log:()Lakka/event/LoggingAdapter;
      68: ldc_w         #732                // String Read [{}] bytes.
      71: iload         6
      73: invokestatic  #738                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      76: invokeinterface #266,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      81: iload         6
      83: iconst_0
      84: if_icmple     120
      87: getstatic     #282                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      90: aload_3
      91: invokevirtual #424                // Method akka/io/TcpConnection$ConnectionInfo.handler:()Lakka/actor/ActorRef;
      94: invokevirtual #286                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      97: new           #740                // class akka/io/Tcp$Received
     100: dup
     101: getstatic     #745                // Field akka/util/ByteString$.MODULE$:Lakka/util/ByteString$;
     104: aload_1
     105: invokevirtual #748                // Method akka/util/ByteString$.apply:(Ljava/nio/ByteBuffer;)Lakka/util/ByteString;
     108: invokespecial #751                // Method akka/io/Tcp$Received."<init>":(Lakka/util/ByteString;)V
     111: aload_0
     112: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
     115: invokeinterface #308,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     120: iload         6
     122: istore        7
     124: iload         5
     126: iload         7
     128: if_icmpne     156
     131: aload_0
     132: invokevirtual #389                // Method pullMode:()Z
     135: ifeq          146
     138: getstatic     #400                // Field akka/io/TcpConnection$MoreDataWaiting$.MODULE$:Lakka/io/TcpConnection$MoreDataWaiting$;
     141: astore        8
     143: goto          181
     146: aload_1
     147: iload_2
     148: iload         5
     150: isub
     151: istore_2
     152: astore_1
     153: goto          0
     156: iload         7
     158: iconst_0
     159: if_icmplt     170
     162: getstatic     #383                // Field akka/io/TcpConnection$AllRead$.MODULE$:Lakka/io/TcpConnection$AllRead$;
     165: astore        8
     167: goto          181
     170: iconst_m1
     171: iload         7
     173: if_icmpne     186
     176: getstatic     #410                // Field akka/io/TcpConnection$EndOfStream$.MODULE$:Lakka/io/TcpConnection$EndOfStream$;
     179: astore        8
     181: aload         8
     183: goto          221
     186: new           #642                // class java/lang/IllegalStateException
     189: dup
     190: new           #753                // class scala/collection/mutable/StringBuilder
     193: dup
     194: invokespecial #755                // Method scala/collection/mutable/StringBuilder."<init>":()V
     197: ldc_w         #757                // String Unexpected value returned from read:
     200: invokevirtual #761                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     203: iload         6
     205: invokestatic  #738                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     208: invokevirtual #761                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     211: invokevirtual #764                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     214: invokespecial #645                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     217: athrow
     218: getstatic     #400                // Field akka/io/TcpConnection$MoreDataWaiting$.MODULE$:Lakka/io/TcpConnection$MoreDataWaiting$;
     221: areturn

  private final akka.io.TcpConnection$PendingWrite create$1(akka.io.Tcp$WriteCommand, akka.io.Tcp$WriteCommand, akka.actor.ActorRef);
    Code:
       0: iconst_0
       1: istore        5
       3: aconst_null
       4: astore        6
       6: aload_1
       7: astore        7
       9: getstatic     #773                // Field akka/io/Tcp$Write$.MODULE$:Lakka/io/Tcp$Write$;
      12: invokevirtual #777                // Method akka/io/Tcp$Write$.empty:()Lakka/io/Tcp$Write;
      15: aload         7
      17: astore        8
      19: dup
      20: ifnonnull     32
      23: pop
      24: aload         8
      26: ifnull        40
      29: goto          68
      32: aload         8
      34: invokevirtual #387                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          68
      40: aload_2
      41: getstatic     #773                // Field akka/io/Tcp$Write$.MODULE$:Lakka/io/Tcp$Write$;
      44: invokevirtual #777                // Method akka/io/Tcp$Write$.empty:()Lakka/io/Tcp$Write;
      47: if_acmpne     58
      50: getstatic     #181                // Field akka/io/TcpConnection$EmptyPendingWrite$.MODULE$:Lakka/io/TcpConnection$EmptyPendingWrite$;
      53: astore        9
      55: goto          182
      58: aload_2
      59: aload_0
      60: invokespecial #651                // Method create$default$2$1:()Lakka/io/Tcp$WriteCommand;
      63: astore_2
      64: astore_1
      65: goto          0
      68: aload         7
      70: instanceof    #779                // class akka/io/Tcp$Write
      73: ifeq          123
      76: iconst_1
      77: istore        5
      79: aload         7
      81: checkcast     #779                // class akka/io/Tcp$Write
      84: astore        6
      86: aload         6
      88: invokevirtual #782                // Method akka/io/Tcp$Write.data:()Lakka/util/ByteString;
      91: astore        10
      93: aload         6
      95: invokevirtual #785                // Method akka/io/Tcp$Write.ack:()Lakka/io/Tcp$Event;
      98: astore        11
     100: aload         10
     102: invokevirtual #788                // Method akka/util/ByteString.nonEmpty:()Z
     105: ifeq          123
     108: aload_0
     109: aload_3
     110: aload         10
     112: aload         11
     114: aload_2
     115: invokevirtual #790                // Method PendingBufferWrite:(Lakka/actor/ActorRef;Lakka/util/ByteString;Lakka/io/Tcp$Event;Lakka/io/Tcp$WriteCommand;)Lakka/io/TcpConnection$PendingBufferWrite;
     118: astore        9
     120: goto          182
     123: aload         7
     125: instanceof    #792                // class akka/io/Tcp$WriteFile
     128: ifeq          185
     131: aload         7
     133: checkcast     #792                // class akka/io/Tcp$WriteFile
     136: astore        12
     138: aload         12
     140: invokevirtual #794                // Method akka/io/Tcp$WriteFile.filePath:()Ljava/lang/String;
     143: astore        13
     145: aload         12
     147: invokevirtual #798                // Method akka/io/Tcp$WriteFile.position:()J
     150: lstore        14
     152: aload         12
     154: invokevirtual #800                // Method akka/io/Tcp$WriteFile.count:()J
     157: lstore        16
     159: aload         12
     161: invokevirtual #801                // Method akka/io/Tcp$WriteFile.ack:()Lakka/io/Tcp$Event;
     164: astore        18
     166: aload_0
     167: aload_3
     168: aload         13
     170: lload         14
     172: lload         16
     174: aload         18
     176: aload_2
     177: invokevirtual #803                // Method PendingWriteFile:(Lakka/actor/ActorRef;Ljava/lang/String;JJLakka/io/Tcp$Event;Lakka/io/Tcp$WriteCommand;)Lakka/io/TcpConnection$PendingWriteFile;
     180: astore        9
     182: aload         9
     184: areturn
     185: aload         7
     187: instanceof    #805                // class akka/io/Tcp$CompoundWrite
     190: ifeq          223
     193: aload         7
     195: checkcast     #805                // class akka/io/Tcp$CompoundWrite
     198: astore        19
     200: aload         19
     202: invokevirtual #809                // Method akka/io/Tcp$CompoundWrite.head:()Lakka/io/Tcp$SimpleWriteCommand;
     205: astore        20
     207: aload         19
     209: invokevirtual #812                // Method akka/io/Tcp$CompoundWrite.tailCommand:()Lakka/io/Tcp$WriteCommand;
     212: astore        21
     214: aload         20
     216: aload         21
     218: astore_2
     219: astore_1
     220: goto          0
     223: iload         5
     225: ifeq          271
     228: aload         6
     230: invokevirtual #785                // Method akka/io/Tcp$Write.ack:()Lakka/io/Tcp$Event;
     233: astore        22
     235: aload         6
     237: invokevirtual #815                // Method akka/io/Tcp$Write.wantsAck:()Z
     240: ifeq          261
     243: getstatic     #282                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     246: aload_3
     247: invokevirtual #286                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     250: aload         22
     252: aload_0
     253: invokevirtual #302                // Method self:()Lakka/actor/ActorRef;
     256: invokeinterface #308,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     261: aload_2
     262: aload_0
     263: invokespecial #651                // Method create$default$2$1:()Lakka/io/Tcp$WriteCommand;
     266: astore_2
     267: astore_1
     268: goto          0
     271: new           #446                // class scala/MatchError
     274: dup
     275: aload         7
     277: invokespecial #448                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     280: athrow

  private final akka.io.Tcp$WriteCommand create$default$2$1();
    Code:
       0: getstatic     #773                // Field akka/io/Tcp$Write$.MODULE$:Lakka/io/Tcp$Write$;
       3: invokevirtual #777                // Method akka/io/Tcp$Write$.empty:()Lakka/io/Tcp$Write;
       6: areturn

  public akka.io.TcpConnection(akka.io.TcpExt, java.nio.channels.SocketChannel, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #130                // Field tcp:Lakka/io/TcpExt;
       5: aload_0
       6: aload_2
       7: putfield      #133                // Field channel:Ljava/nio/channels/SocketChannel;
      10: aload_0
      11: iload_3
      12: putfield      #136                // Field pullMode:Z
      15: aload_0
      16: invokespecial #821                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #824                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      23: aload_0
      24: invokestatic  #827                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      27: aload_0
      28: getstatic     #181                // Field akka/io/TcpConnection$EmptyPendingWrite$.MODULE$:Lakka/io/TcpConnection$EmptyPendingWrite$;
      31: putfield      #176                // Field akka$io$TcpConnection$$pendingWrite:Lakka/io/TcpConnection$PendingWrite;
      34: aload_0
      35: iconst_0
      36: putfield      #486                // Field peerClosed:Z
      39: aload_0
      40: iconst_0
      41: putfield      #829                // Field akka$io$TcpConnection$$writingSuspended:Z
      44: aload_0
      45: iload_3
      46: putfield      #347                // Field akka$io$TcpConnection$$readingSuspended:Z
      49: aload_0
      50: getstatic     #834                // Field scala/None$.MODULE$:Lscala/None$;
      53: putfield      #836                // Field akka$io$TcpConnection$$interestedInResume:Lscala/Option;
      56: aload_0
      57: aload_0
      58: invokevirtual #152                // Method context:()Lakka/actor/ActorContext;
      61: invokeinterface #165,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      66: invokevirtual #170                // Method akka/actor/ActorSystem.deadLetters:()Lakka/actor/ActorRef;
      69: putfield      #143                // Field watchedActor:Lakka/actor/ActorRef;
      72: return
}
