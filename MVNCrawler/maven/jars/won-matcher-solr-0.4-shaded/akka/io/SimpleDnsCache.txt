Compiled from "SimpleDnsCache.scala"
public class akka.io.SimpleDnsCache extends akka.io.Dns implements akka.io.PeriodicCacheCleanup {
  private final java.util.concurrent.atomic.AtomicReference<akka.io.SimpleDnsCache$Cache> cache;

  private final long nanoBase;

  private java.util.concurrent.atomic.AtomicReference<akka.io.SimpleDnsCache$Cache> cache();
    Code:
       0: aload_0
       1: getfield      #18                 // Field cache:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  private long nanoBase();
    Code:
       0: aload_0
       1: getfield      #23                 // Field nanoBase:J
       4: lreturn

  public scala.Option<akka.io.Dns$Resolved> cached(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method cache:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #35                 // class akka/io/SimpleDnsCache$Cache
      10: aload_1
      11: invokevirtual #37                 // Method akka/io/SimpleDnsCache$Cache.get:(Ljava/lang/String;)Lscala/Option;
      14: areturn

  public long clock();
    Code:
       0: invokestatic  #45                 // Method java/lang/System.nanoTime:()J
       3: lstore_1
       4: lload_1
       5: aload_0
       6: invokespecial #47                 // Method nanoBase:()J
       9: lsub
      10: lconst_0
      11: lcmp
      12: ifge          19
      15: lconst_0
      16: goto          29
      19: lload_1
      20: aload_0
      21: invokespecial #47                 // Method nanoBase:()J
      24: lsub
      25: ldc2_w        #48                 // long 1000000l
      28: ldiv
      29: lreturn

  public final void put(akka.io.Dns$Resolved, long);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method cache:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #35                 // class akka/io/SimpleDnsCache$Cache
      10: astore        5
      12: aload_0
      13: invokespecial #27                 // Method cache:()Ljava/util/concurrent/atomic/AtomicReference;
      16: aload         5
      18: aload         5
      20: aload_1
      21: lload_2
      22: invokevirtual #55                 // Method akka/io/SimpleDnsCache$Cache.put:(Lakka/io/Dns$Resolved;J)Lakka/io/SimpleDnsCache$Cache;
      25: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ifeq          36
      31: getstatic     #65                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      34: pop
      35: return
      36: aload_1
      37: lload_2
      38: lstore_2
      39: astore_1
      40: goto          0

  public final void cleanup();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method cache:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #35                 // class akka/io/SimpleDnsCache$Cache
      10: astore_2
      11: aload_0
      12: invokespecial #27                 // Method cache:()Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_2
      16: aload_2
      17: invokevirtual #75                 // Method akka/io/SimpleDnsCache$Cache.cleanup:()Lakka/io/SimpleDnsCache$Cache;
      20: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          0
      26: getstatic     #65                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      29: pop
      30: return

  public akka.io.SimpleDnsCache();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method akka/io/Dns."<init>":()V
       4: aload_0
       5: new           #29                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: new           #35                 // class akka/io/SimpleDnsCache$Cache
      12: dup
      13: getstatic     #84                 // Field scala/collection/immutable/SortedSet$.MODULE$:Lscala/collection/immutable/SortedSet$;
      16: getstatic     #89                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      19: getstatic     #94                 // Field akka/io/SimpleDnsCache$ExpiryEntryOrdering$.MODULE$:Lakka/io/SimpleDnsCache$ExpiryEntryOrdering$;
      22: invokevirtual #98                 // Method scala/collection/immutable/SortedSet$.apply:(Lscala/collection/Seq;Lscala/math/Ordering;)Lscala/collection/SortedSet;
      25: checkcast     #100                // class scala/collection/immutable/SortedSet
      28: getstatic     #105                // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      31: getstatic     #89                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      34: invokevirtual #108                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      37: checkcast     #110                // class scala/collection/immutable/Map
      40: new           #112                // class akka/io/SimpleDnsCache$$anonfun$1
      43: dup
      44: aload_0
      45: invokespecial #115                // Method akka/io/SimpleDnsCache$$anonfun$1."<init>":(Lakka/io/SimpleDnsCache;)V
      48: invokespecial #118                // Method akka/io/SimpleDnsCache$Cache."<init>":(Lscala/collection/immutable/SortedSet;Lscala/collection/immutable/Map;Lscala/Function0;)V
      51: invokespecial #121                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      54: putfield      #18                 // Field cache:Ljava/util/concurrent/atomic/AtomicReference;
      57: aload_0
      58: invokestatic  #45                 // Method java/lang/System.nanoTime:()J
      61: putfield      #23                 // Field nanoBase:J
      64: return
}
