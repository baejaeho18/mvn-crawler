Compiled from "Tcp.scala"
public final class akka.io.Tcp$WriteFile extends akka.io.Tcp$SimpleWriteCommand implements scala.Product,scala.Serializable {
  private final java.lang.String filePath;

  private final long position;

  private final long count;

  private final akka.io.Tcp$Event ack;

  public java.lang.String filePath();
    Code:
       0: aload_0
       1: getfield      #19                 // Field filePath:Ljava/lang/String;
       4: areturn

  public long position();
    Code:
       0: aload_0
       1: getfield      #24                 // Field position:J
       4: lreturn

  public long count();
    Code:
       0: aload_0
       1: getfield      #26                 // Field count:J
       4: lreturn

  public akka.io.Tcp$Event ack();
    Code:
       0: aload_0
       1: getfield      #29                 // Field ack:Lakka/io/Tcp$Event;
       4: areturn

  public akka.io.Tcp$WriteFile copy(java.lang.String, long, long, akka.io.Tcp$Event);
    Code:
       0: new           #2                  // class akka/io/Tcp$WriteFile
       3: dup
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokespecial #35                 // Method "<init>":(Ljava/lang/String;JJLakka/io/Tcp$Event;)V
      13: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method filePath:()Ljava/lang/String;
       4: areturn

  public long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method position:()J
       4: lreturn

  public long copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method count:()J
       4: lreturn

  public akka.io.Tcp$Event copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method ack:()Lakka/io/Tcp$Event;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #50                 // String WriteFile
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 74
                     1: 64
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #56                 // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #62                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #67                 // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #70                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #47                 // Method ack:()Lakka/io/Tcp$Event;
      51: goto          78
      54: aload_0
      55: invokevirtual #44                 // Method count:()J
      58: invokestatic  #74                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      61: goto          78
      64: aload_0
      65: invokevirtual #41                 // Method position:()J
      68: invokestatic  #74                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      71: goto          78
      74: aload_0
      75: invokevirtual #38                 // Method filePath:()Ljava/lang/String;
      78: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #84                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #88                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/io/Tcp$WriteFile
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #93                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #38                 // Method filePath:()Ljava/lang/String;
       8: invokestatic  #99                 // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #41                 // Method position:()J
      20: invokestatic  #107                // Method scala/runtime/Statics.longHash:(J)I
      23: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #44                 // Method count:()J
      32: invokestatic  #107                // Method scala/runtime/Statics.longHash:(J)I
      35: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #47                 // Method ack:()Lakka/io/Tcp$Event;
      44: invokestatic  #99                 // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      47: invokestatic  #103                // Method scala/runtime/Statics.mix:(II)I
      50: istore_1
      51: iload_1
      52: iconst_4
      53: invokestatic  #110                // Method scala/runtime/Statics.finalizeHash:(II)I
      56: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #84                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #114                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     129
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/io/Tcp$WriteFile
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          133
      25: aload_1
      26: checkcast     #2                  // class akka/io/Tcp$WriteFile
      29: astore        4
      31: aload_0
      32: invokevirtual #38                 // Method filePath:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #38                 // Method filePath:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          125
      55: aload         5
      57: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          125
      63: aload_0
      64: invokevirtual #41                 // Method position:()J
      67: aload         4
      69: invokevirtual #41                 // Method position:()J
      72: lcmp
      73: ifne          125
      76: aload_0
      77: invokevirtual #44                 // Method count:()J
      80: aload         4
      82: invokevirtual #44                 // Method count:()J
      85: lcmp
      86: ifne          125
      89: aload_0
      90: invokevirtual #47                 // Method ack:()Lakka/io/Tcp$Event;
      93: aload         4
      95: invokevirtual #47                 // Method ack:()Lakka/io/Tcp$Event;
      98: astore        6
     100: dup
     101: ifnonnull     113
     104: pop
     105: aload         6
     107: ifnull        121
     110: goto          125
     113: aload         6
     115: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     118: ifeq          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: ifeq          133
     129: iconst_1
     130: goto          134
     133: iconst_0
     134: ireturn

  public akka.io.Tcp$WriteFile(java.lang.String, long, long, akka.io.Tcp$Event);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field filePath:Ljava/lang/String;
       5: aload_0
       6: lload_2
       7: putfield      #24                 // Field position:J
      10: aload_0
      11: lload         4
      13: putfield      #26                 // Field count:J
      16: aload_0
      17: aload         6
      19: putfield      #29                 // Field ack:Lakka/io/Tcp$Event;
      22: aload_0
      23: invokespecial #124                // Method akka/io/Tcp$SimpleWriteCommand."<init>":()V
      26: aload_0
      27: invokestatic  #130                // Method scala/Product$class.$init$:(Lscala/Product;)V
      30: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: lload_2
      34: lconst_0
      35: lcmp
      36: iflt          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: new           #137                // class akka/io/Tcp$WriteFile$$anonfun$5
      47: dup
      48: aload_0
      49: invokespecial #140                // Method akka/io/Tcp$WriteFile$$anonfun$5."<init>":(Lakka/io/Tcp$WriteFile;)V
      52: invokevirtual #144                // Method scala/Predef$.require:(ZLscala/Function0;)V
      55: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      58: lload         4
      60: lconst_0
      61: lcmp
      62: ifle          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: new           #146                // class akka/io/Tcp$WriteFile$$anonfun$6
      73: dup
      74: aload_0
      75: invokespecial #147                // Method akka/io/Tcp$WriteFile$$anonfun$6."<init>":(Lakka/io/Tcp$WriteFile;)V
      78: invokevirtual #144                // Method scala/Predef$.require:(ZLscala/Function0;)V
      81: return
}
