Compiled from "SimpleDnsManager.scala"
public final class akka.io.SimpleDnsManager$$anonfun$1 extends scala.runtime.AbstractFunction1<akka.io.Dns, akka.actor.Cancellable> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.io.SimpleDnsManager $outer;

  public final akka.actor.Cancellable apply(akka.io.Dns);
    Code:
       0: getstatic     #24                 // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
       3: aload_0
       4: getfield      #26                 // Field $outer:Lakka/io/SimpleDnsManager;
       7: invokevirtual #30                 // Method akka/io/SimpleDnsManager.ext:()Lakka/io/DnsExt;
      10: invokevirtual #36                 // Method akka/io/DnsExt.Settings:()Lakka/io/DnsExt$Settings;
      13: invokevirtual #42                 // Method akka/io/DnsExt$Settings.ResolverConfig:()Lcom/typesafe/config/Config;
      16: ldc           #44                 // String cache-cleanup-interval
      18: getstatic     #50                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      21: invokeinterface #56,  3           // InterfaceMethod com/typesafe/config/Config.getDuration:(Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)J
      26: getstatic     #50                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      29: invokevirtual #59                 // Method scala/concurrent/duration/Duration$.apply:(JLjava/util/concurrent/TimeUnit;)Lscala/concurrent/duration/FiniteDuration;
      32: astore_2
      33: aload_0
      34: getfield      #26                 // Field $outer:Lakka/io/SimpleDnsManager;
      37: invokevirtual #63                 // Method akka/io/SimpleDnsManager.context:()Lakka/actor/ActorContext;
      40: invokeinterface #69,  1           // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      45: invokevirtual #75                 // Method akka/actor/ActorSystem.scheduler:()Lakka/actor/Scheduler;
      48: aload_2
      49: aload_2
      50: aload_0
      51: getfield      #26                 // Field $outer:Lakka/io/SimpleDnsManager;
      54: invokevirtual #79                 // Method akka/io/SimpleDnsManager.self:()Lakka/actor/ActorRef;
      57: getstatic     #84                 // Field akka/io/SimpleDnsManager$CacheCleanup$.MODULE$:Lakka/io/SimpleDnsManager$CacheCleanup$;
      60: aload_0
      61: getfield      #26                 // Field $outer:Lakka/io/SimpleDnsManager;
      64: invokevirtual #63                 // Method akka/io/SimpleDnsManager.context:()Lakka/actor/ActorContext;
      67: invokeinterface #88,  1           // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      72: aload_0
      73: getfield      #26                 // Field $outer:Lakka/io/SimpleDnsManager;
      76: invokevirtual #79                 // Method akka/io/SimpleDnsManager.self:()Lakka/actor/ActorRef;
      79: invokeinterface #94,  7           // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
      84: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #103                // class akka/io/Dns
       5: invokevirtual #105                // Method apply:(Lakka/io/Dns;)Lakka/actor/Cancellable;
       8: areturn

  public akka.io.SimpleDnsManager$$anonfun$1(akka.io.SimpleDnsManager);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #26                 // Field $outer:Lakka/io/SimpleDnsManager;
      11: aload_0
      12: invokespecial #112                // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
