Compiled from "Tcp.scala"
public class akka.io.Tcp$Write$ implements scala.Serializable {
  public static final akka.io.Tcp$Write$ MODULE$;

  private final akka.io.Tcp$Write empty;

  public static {};
    Code:
       0: new           #2                  // class akka/io/Tcp$Write$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public akka.io.Tcp$Write empty();
    Code:
       0: aload_0
       1: getfield      #19                 // Field empty:Lakka/io/Tcp$Write;
       4: areturn

  public akka.io.Tcp$Write apply(akka.util.ByteString);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method akka/util/ByteString.isEmpty:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #30                 // Method empty:()Lakka/io/Tcp$Write;
      11: goto          25
      14: new           #32                 // class akka/io/Tcp$Write
      17: dup
      18: aload_1
      19: getstatic     #37                 // Field akka/io/Tcp$NoAck$.MODULE$:Lakka/io/Tcp$NoAck$;
      22: invokespecial #40                 // Method akka/io/Tcp$Write."<init>":(Lakka/util/ByteString;Lakka/io/Tcp$Event;)V
      25: areturn

  public akka.io.Tcp$Write apply(akka.util.ByteString, akka.io.Tcp$Event);
    Code:
       0: new           #32                 // class akka/io/Tcp$Write
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #40                 // Method akka/io/Tcp$Write."<init>":(Lakka/util/ByteString;Lakka/io/Tcp$Event;)V
       9: areturn

  public scala.Option<scala.Tuple2<akka.util.ByteString, akka.io.Tcp$Event>> unapply(akka.io.Tcp$Write);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #52                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          32
      10: new           #54                 // class scala/Some
      13: dup
      14: new           #56                 // class scala/Tuple2
      17: dup
      18: aload_1
      19: invokevirtual #59                 // Method akka/io/Tcp$Write.data:()Lakka/util/ByteString;
      22: aload_1
      23: invokevirtual #62                 // Method akka/io/Tcp$Write.ack:()Lakka/io/Tcp$Event;
      26: invokespecial #65                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: invokespecial #68                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      32: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #75                 // Field MODULE$:Lakka/io/Tcp$Write$;
       3: areturn

  public akka.io.Tcp$Write$();
    Code:
       0: aload_0
       1: invokespecial #76                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #75                 // Field MODULE$:Lakka/io/Tcp$Write$;
       8: aload_0
       9: new           #32                 // class akka/io/Tcp$Write
      12: dup
      13: getstatic     #81                 // Field akka/util/ByteString$.MODULE$:Lakka/util/ByteString$;
      16: invokevirtual #83                 // Method akka/util/ByteString$.empty:()Lakka/util/ByteString;
      19: getstatic     #37                 // Field akka/io/Tcp$NoAck$.MODULE$:Lakka/io/Tcp$NoAck$;
      22: invokespecial #40                 // Method akka/io/Tcp$Write."<init>":(Lakka/util/ByteString;Lakka/io/Tcp$Event;)V
      25: putfield      #19                 // Field empty:Lakka/io/Tcp$Write;
      28: return
}
