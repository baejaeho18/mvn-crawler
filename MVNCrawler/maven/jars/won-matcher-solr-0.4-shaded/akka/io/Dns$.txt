Compiled from "Dns.scala"
public final class akka.io.Dns$ implements akka.actor.ExtensionId<akka.io.DnsExt>, akka.actor.ExtensionIdProvider {
  public static final akka.io.Dns$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/io/Dns$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public akka.actor.Extension apply(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method akka/actor/ExtensionId$class.apply:(Lakka/actor/ExtensionId;Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       5: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method akka/actor/ExtensionId$class.hashCode:(Lakka/actor/ExtensionId;)I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method akka/actor/ExtensionId$class.equals:(Lakka/actor/ExtensionId;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<akka.io.Dns$Resolved> cached(java.lang.String, akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #43                 // Method apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       5: checkcast     #45                 // class akka/io/DnsExt
       8: invokevirtual #49                 // Method akka/io/DnsExt.cache:()Lakka/io/Dns;
      11: aload_1
      12: invokevirtual #54                 // Method akka/io/Dns.cached:(Ljava/lang/String;)Lscala/Option;
      15: areturn

  public scala.Option<akka.io.Dns$Resolved> resolve(java.lang.String, akka.actor.ActorSystem, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #43                 // Method apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       5: checkcast     #45                 // class akka/io/DnsExt
       8: invokevirtual #49                 // Method akka/io/DnsExt.cache:()Lakka/io/Dns;
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #60                 // Method akka/io/Dns.resolve:(Ljava/lang/String;Lakka/actor/ActorSystem;Lakka/actor/ActorRef;)Lscala/Option;
      17: areturn

  public akka.io.Dns$ lookup();
    Code:
       0: aload_0
       1: areturn

  public akka.io.DnsExt createExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: new           #45                 // class akka/io/DnsExt
       3: dup
       4: aload_1
       5: invokespecial #69                 // Method akka/io/DnsExt."<init>":(Lakka/actor/ExtendedActorSystem;)V
       8: areturn

  public akka.io.DnsExt get(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method akka/actor/ExtensionId$class.get:(Lakka/actor/ExtensionId;Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       5: checkcast     #45                 // class akka/io/DnsExt
       8: areturn

  public akka.actor.Extension get(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method get:(Lakka/actor/ActorSystem;)Lakka/io/DnsExt;
       5: areturn

  public akka.actor.Extension createExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #79                 // Method createExtension:(Lakka/actor/ExtendedActorSystem;)Lakka/io/DnsExt;
       5: areturn

  public akka.actor.ExtensionId lookup();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method lookup:()Lakka/io/Dns$;
       4: areturn

  private akka.io.Dns$();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #85                 // Field MODULE$:Lakka/io/Dns$;
       8: aload_0
       9: invokestatic  #89                 // Method akka/actor/ExtensionId$class.$init$:(Lakka/actor/ExtensionId;)V
      12: return
}
