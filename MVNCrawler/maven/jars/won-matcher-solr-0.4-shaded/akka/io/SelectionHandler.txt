Compiled from "SelectionHandler.scala"
public class akka.io.SelectionHandler implements akka.actor.Actor, akka.actor.ActorLogging, akka.dispatch.RequiresMessageQueue<akka.dispatch.UnboundedMessageQueueSemantics> {
  public final akka.io.SelectionHandlerSettings akka$io$SelectionHandler$$settings;

  private int sequenceNumber;

  public int akka$io$SelectionHandler$$childCount;

  private final akka.io.SelectionHandler$ChannelRegistryImpl registry;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #31                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #46                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #49                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #73                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #109                // class akka/io/SelectionHandler$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #113                // Method akka/io/SelectionHandler$$anonfun$receive$1."<init>":(Lakka/io/SelectionHandler;)V
       8: areturn

  public void postStop();
    Code:
       0: aload_0
       1: getfield      #116                // Field registry:Lakka/io/SelectionHandler$ChannelRegistryImpl;
       4: invokevirtual #121                // Method akka/io/SelectionHandler$ChannelRegistryImpl.shutdown:()V
       7: return

  public akka.actor.OneForOneStrategy supervisorStrategy();
    Code:
       0: new           #125                // class akka/io/SelectionHandler$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #126                // Method akka/io/SelectionHandler$$anon$2."<init>":(Lakka/io/SelectionHandler;)V
       8: areturn

  public void spawnChildWithCapacityProtection(akka.io.SelectionHandler$WorkerForCommand, int);
    Code:
       0: aload_0
       1: getfield      #130                // Field akka$io$SelectionHandler$$settings:Lakka/io/SelectionHandlerSettings;
       4: invokevirtual #136                // Method akka/io/SelectionHandlerSettings.TraceLogging:()Z
       7: ifeq          22
      10: aload_0
      11: invokevirtual #138                // Method log:()Lakka/event/LoggingAdapter;
      14: ldc           #140                // String Executing [{}]
      16: aload_1
      17: invokeinterface #146,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      22: aload_0
      23: getfield      #130                // Field akka$io$SelectionHandler$$settings:Lakka/io/SelectionHandlerSettings;
      26: invokevirtual #150                // Method akka/io/SelectionHandlerSettings.MaxChannelsPerSelector:()I
      29: iconst_m1
      30: if_icmpeq     47
      33: aload_0
      34: getfield      #152                // Field akka$io$SelectionHandler$$childCount:I
      37: aload_0
      38: getfield      #130                // Field akka$io$SelectionHandler$$settings:Lakka/io/SelectionHandlerSettings;
      41: invokevirtual #150                // Method akka/io/SelectionHandlerSettings.MaxChannelsPerSelector:()I
      44: if_icmpge     151
      47: aload_0
      48: getfield      #154                // Field sequenceNumber:I
      51: invokestatic  #160                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      54: invokevirtual #164                // Method java/lang/Object.toString:()Ljava/lang/String;
      57: astore_3
      58: aload_0
      59: aload_0
      60: getfield      #154                // Field sequenceNumber:I
      63: iconst_1
      64: iadd
      65: putfield      #154                // Field sequenceNumber:I
      68: aload_0
      69: invokevirtual #166                // Method context:()Lakka/actor/ActorContext;
      72: aload_1
      73: invokevirtual #172                // Method akka/io/SelectionHandler$WorkerForCommand.childProps:()Lscala/Function1;
      76: aload_0
      77: getfield      #116                // Field registry:Lakka/io/SelectionHandler$ChannelRegistryImpl;
      80: invokeinterface #178,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #180                // class akka/actor/Props
      88: aload_0
      89: getfield      #130                // Field akka$io$SelectionHandler$$settings:Lakka/io/SelectionHandlerSettings;
      92: invokevirtual #183                // Method akka/io/SelectionHandlerSettings.WorkerDispatcher:()Ljava/lang/String;
      95: invokevirtual #187                // Method akka/actor/Props.withDispatcher:(Ljava/lang/String;)Lakka/actor/Props;
      98: getstatic     #193                // Field akka/actor/Deploy$.MODULE$:Lakka/actor/Deploy$;
     101: invokevirtual #197                // Method akka/actor/Deploy$.local:()Lakka/actor/Deploy;
     104: invokevirtual #201                // Method akka/actor/Props.withDeploy:(Lakka/actor/Deploy;)Lakka/actor/Props;
     107: aload_3
     108: invokeinterface #207,  3          // InterfaceMethod akka/actor/ActorContext.actorOf:(Lakka/actor/Props;Ljava/lang/String;)Lakka/actor/ActorRef;
     113: astore        4
     115: aload_0
     116: aload_0
     117: getfield      #152                // Field akka$io$SelectionHandler$$childCount:I
     120: iconst_1
     121: iadd
     122: putfield      #152                // Field akka$io$SelectionHandler$$childCount:I
     125: aload_0
     126: getfield      #130                // Field akka$io$SelectionHandler$$settings:Lakka/io/SelectionHandlerSettings;
     129: invokevirtual #150                // Method akka/io/SelectionHandlerSettings.MaxChannelsPerSelector:()I
     132: iconst_0
     133: if_icmple     242
     136: aload_0
     137: invokevirtual #166                // Method context:()Lakka/actor/ActorContext;
     140: aload         4
     142: invokeinterface #211,  2          // InterfaceMethod akka/actor/ActorContext.watch:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
     147: pop
     148: goto          242
     151: iload_2
     152: iconst_1
     153: if_icmplt     202
     156: aload_0
     157: invokevirtual #138                // Method log:()Lakka/event/LoggingAdapter;
     160: ldc           #213                // String Rejecting [{}] with [{}] retries left, retrying...
     162: aload_1
     163: iload_2
     164: invokestatic  #160                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     167: invokeinterface #216,  4          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     172: aload_0
     173: invokevirtual #166                // Method context:()Lakka/actor/ActorContext;
     176: invokeinterface #219,  1          // InterfaceMethod akka/actor/ActorContext.parent:()Lakka/actor/ActorRef;
     181: new           #221                // class akka/io/SelectionHandler$Retry
     184: dup
     185: aload_1
     186: iload_2
     187: iconst_1
     188: isub
     189: invokespecial #223                // Method akka/io/SelectionHandler$Retry."<init>":(Lakka/io/SelectionHandler$WorkerForCommand;I)V
     192: aload_0
     193: invokevirtual #166                // Method context:()Lakka/actor/ActorContext;
     196: invokevirtual #229                // Method akka/actor/ActorRef.forward:(Ljava/lang/Object;Lakka/actor/ActorContext;)V
     199: goto          242
     202: aload_0
     203: invokevirtual #138                // Method log:()Lakka/event/LoggingAdapter;
     206: ldc           #231                // String Rejecting [{}] with no retries left, aborting...
     208: aload_1
     209: invokeinterface #234,  3          // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;)V
     214: getstatic     #239                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     217: aload_1
     218: invokevirtual #242                // Method akka/io/SelectionHandler$WorkerForCommand.commander:()Lakka/actor/ActorRef;
     221: invokevirtual #246                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     224: aload_1
     225: invokevirtual #250                // Method akka/io/SelectionHandler$WorkerForCommand.apiCommand:()Lakka/io/SelectionHandler$HasFailureMessage;
     228: invokeinterface #256,  1          // InterfaceMethod akka/io/SelectionHandler$HasFailureMessage.failureMessage:()Ljava/lang/Object;
     233: aload_0
     234: invokevirtual #258                // Method self:()Lakka/actor/ActorRef;
     237: invokeinterface #264,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     242: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method supervisorStrategy:()Lakka/actor/OneForOneStrategy;
       4: areturn

  public final scala.PartialFunction akka$io$SelectionHandler$$stoppingDecider$1();
    Code:
       0: new           #276                // class akka/io/SelectionHandler$$anonfun$akka$io$SelectionHandler$$stoppingDecider$1$1
       3: dup
       4: aload_0
       5: invokespecial #277                // Method akka/io/SelectionHandler$$anonfun$akka$io$SelectionHandler$$stoppingDecider$1$1."<init>":(Lakka/io/SelectionHandler;)V
       8: areturn

  public akka.io.SelectionHandler(akka.io.SelectionHandlerSettings);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #130                // Field akka$io$SelectionHandler$$settings:Lakka/io/SelectionHandlerSettings;
       5: aload_0
       6: invokespecial #280                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #283                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      13: aload_0
      14: invokestatic  #286                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      17: aload_0
      18: iconst_0
      19: putfield      #154                // Field sequenceNumber:I
      22: aload_0
      23: iconst_0
      24: putfield      #152                // Field akka$io$SelectionHandler$$childCount:I
      27: aload_0
      28: aload_0
      29: invokevirtual #166                // Method context:()Lakka/actor/ActorContext;
      32: invokeinterface #290,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      37: invokevirtual #296                // Method akka/actor/ActorSystem.dispatchers:()Lakka/dispatch/Dispatchers;
      40: aload_1
      41: invokevirtual #299                // Method akka/io/SelectionHandlerSettings.SelectorDispatcher:()Ljava/lang/String;
      44: invokevirtual #305                // Method akka/dispatch/Dispatchers.lookup:(Ljava/lang/String;)Lakka/dispatch/MessageDispatcher;
      47: astore_2
      48: new           #118                // class akka/io/SelectionHandler$ChannelRegistryImpl
      51: dup
      52: getstatic     #310                // Field akka/util/SerializedSuspendableExecutionContext$.MODULE$:Lakka/util/SerializedSuspendableExecutionContext$;
      55: aload_2
      56: invokevirtual #315                // Method akka/dispatch/MessageDispatcher.throughput:()I
      59: aload_2
      60: invokevirtual #318                // Method akka/util/SerializedSuspendableExecutionContext$.apply:(ILscala/concurrent/ExecutionContext;)Lakka/util/SerializedSuspendableExecutionContext;
      63: aload_0
      64: invokevirtual #138                // Method log:()Lakka/event/LoggingAdapter;
      67: invokespecial #321                // Method akka/io/SelectionHandler$ChannelRegistryImpl."<init>":(Lscala/concurrent/ExecutionContext;Lakka/event/LoggingAdapter;)V
      70: putfield      #116                // Field registry:Lakka/io/SelectionHandler$ChannelRegistryImpl;
      73: return
}
