Compiled from "Tcp.scala"
public final class akka.io.Tcp$CompoundWrite extends akka.io.Tcp$WriteCommand implements scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.Product, scala.Serializable {
  private final akka.io.Tcp$SimpleWriteCommand head;

  private final akka.io.Tcp$WriteCommand tailCommand;

  public scala.collection.generic.GenericCompanion<scala.collection.immutable.Iterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method scala/collection/immutable/Iterable$class.companion:(Lscala/collection/immutable/Iterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.parallel.Combiner<akka.io.Tcp$SimpleWriteCommand, scala.collection.parallel.immutable.ParIterable<akka.io.Tcp$SimpleWriteCommand>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method scala/collection/immutable/Iterable$class.parCombiner:(Lscala/collection/immutable/Iterable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand> seq();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method scala/collection/immutable/Iterable$class.seq:(Lscala/collection/immutable/Iterable;)Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.Iterable<akka.io.Tcp$SimpleWriteCommand> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public <U> void foreach(scala.Function1<akka.io.Tcp$SimpleWriteCommand, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method scala/collection/IterableLike$class.foreach:(Lscala/collection/IterableLike;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<akka.io.Tcp$SimpleWriteCommand> find(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method scala/collection/IterableLike$class.isEmpty:(Lscala/collection/IterableLike;)Z
       4: ireturn

  public <B> B foldRight(B, scala.Function2<akka.io.Tcp$SimpleWriteCommand, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<akka.io.Tcp$SimpleWriteCommand, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<akka.io.Tcp$SimpleWriteCommand> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #91                 // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<akka.io.Tcp$SimpleWriteCommand> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #101                // Method scala/collection/IterableLike$class.slice:(Lscala/collection/IterableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #109                // Method scala/collection/IterableLike$class.take:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #113                // Method scala/collection/IterableLike$class.drop:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // Method scala/collection/IterableLike$class.takeWhile:(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #123                // Method scala/collection/IterableLike$class.grouped:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #127                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #131                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #135                // Method scala/collection/IterableLike$class.takeRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #138                // Method scala/collection/IterableLike$class.dropRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #143                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // Method scala/collection/IterableLike$class.zip:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #160                // Method scala/collection/IterableLike$class.zipAll:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // Method scala/collection/IterableLike$class.zipWithIndex:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<akka.io.Tcp$SimpleWriteCommand> toStream();
    Code:
       0: aload_0
       1: invokestatic  #177                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<akka.io.Tcp$SimpleWriteCommand, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #191                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.mutable.Builder<akka.io.Tcp$SimpleWriteCommand, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #198                // Method scala/collection/generic/GenericTraversableTemplate$class.newBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.immutable.Iterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #201                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>> unzip(scala.Function1<akka.io.Tcp$SimpleWriteCommand, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #206                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>, scala.collection.immutable.Iterable<A3>> unzip3(scala.Function1<akka.io.Tcp$SimpleWriteCommand, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #222                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #228                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #232                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #235                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // Method scala/collection/TraversableLike$class.$plus$plus:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #246                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #251                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<akka.io.Tcp$SimpleWriteCommand, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #257                // Method scala/collection/TraversableLike$class.map:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<akka.io.Tcp$SimpleWriteCommand, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #260                // Method scala/collection/TraversableLike$class.flatMap:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #264                // Method scala/collection/TraversableLike$class.filter:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #267                // Method scala/collection/TraversableLike$class.filterNot:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<akka.io.Tcp$SimpleWriteCommand, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #272                // Method scala/collection/TraversableLike$class.collect:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> partition(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // Method scala/collection/TraversableLike$class.partition:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> groupBy(scala.Function1<akka.io.Tcp$SimpleWriteCommand, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #283                // Method scala/collection/TraversableLike$class.groupBy:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #288                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, akka.io.Tcp$SimpleWriteCommand, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #292                // Method scala/collection/TraversableLike$class.scanLeft:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<akka.io.Tcp$SimpleWriteCommand, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #295                // Method scala/collection/TraversableLike$class.scanRight:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.Option<akka.io.Tcp$SimpleWriteCommand> headOption();
    Code:
       0: aload_0
       1: invokestatic  #300                // Method scala/collection/TraversableLike$class.headOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokestatic  #303                // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokestatic  #306                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<akka.io.Tcp$SimpleWriteCommand> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #309                // Method scala/collection/TraversableLike$class.lastOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokestatic  #312                // Method scala/collection/TraversableLike$class.init:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #317                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #322                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #325                // Method scala/collection/TraversableLike$class.dropWhile:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> span(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #328                // Method scala/collection/TraversableLike$class.span:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #333                // Method scala/collection/TraversableLike$class.splitAt:(Lscala/collection/TraversableLike;I)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> tails();
    Code:
       0: aload_0
       1: invokestatic  #337                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> inits();
    Code:
       0: aload_0
       1: invokestatic  #340                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<akka.io.Tcp$SimpleWriteCommand> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #345                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, akka.io.Tcp$SimpleWriteCommand, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #354                // Method scala/collection/TraversableLike$class.toString:(Lscala/collection/TraversableLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #357                // Method scala/collection/TraversableLike$class.stringPrefix:(Lscala/collection/TraversableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.generic.FilterMonadic<akka.io.Tcp$SimpleWriteCommand, scala.collection.immutable.Iterable<akka.io.Tcp$SimpleWriteCommand>> withFilter(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #369                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<akka.io.Tcp$SimpleWriteCommand> reversed();
    Code:
       0: aload_0
       1: invokestatic  #376                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #380                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #384                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<akka.io.Tcp$SimpleWriteCommand, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #389                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<akka.io.Tcp$SimpleWriteCommand, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #394                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, akka.io.Tcp$SimpleWriteCommand, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #398                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<akka.io.Tcp$SimpleWriteCommand, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #401                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, akka.io.Tcp$SimpleWriteCommand, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #404                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, akka.io.Tcp$SimpleWriteCommand, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, akka.io.Tcp$SimpleWriteCommand, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #413                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<akka.io.Tcp$SimpleWriteCommand, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #419                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #422                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #425                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, akka.io.Tcp$SimpleWriteCommand, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #430                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #438                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #443                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #448                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #453                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #458                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #461                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #472                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #476                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #481                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<akka.io.Tcp$SimpleWriteCommand> toList();
    Code:
       0: aload_0
       1: invokestatic  #486                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Seq<akka.io.Tcp$SimpleWriteCommand> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #491                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<akka.io.Tcp$SimpleWriteCommand> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #496                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #501                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #506                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<akka.io.Tcp$SimpleWriteCommand> toVector();
    Code:
       0: aload_0
       1: invokestatic  #511                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<akka.io.Tcp$SimpleWriteCommand, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #516                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #523                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #530                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #533                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #538                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #544                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #548                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public akka.io.Tcp$SimpleWriteCommand head();
    Code:
       0: aload_0
       1: getfield      #551                // Field head:Lakka/io/Tcp$SimpleWriteCommand;
       4: areturn

  public akka.io.Tcp$WriteCommand tailCommand();
    Code:
       0: aload_0
       1: getfield      #554                // Field tailCommand:Lakka/io/Tcp$WriteCommand;
       4: areturn

  public scala.collection.Iterator<akka.io.Tcp$SimpleWriteCommand> iterator();
    Code:
       0: new           #557                // class akka/io/Tcp$CompoundWrite$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #561                // Method akka/io/Tcp$CompoundWrite$$anon$1."<init>":(Lakka/io/Tcp$CompoundWrite;)V
       8: areturn

  public akka.io.Tcp$CompoundWrite copy(akka.io.Tcp$SimpleWriteCommand, akka.io.Tcp$WriteCommand);
    Code:
       0: new           #2                  // class akka/io/Tcp$CompoundWrite
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #566                // Method "<init>":(Lakka/io/Tcp$SimpleWriteCommand;Lakka/io/Tcp$WriteCommand;)V
       9: areturn

  public akka.io.Tcp$SimpleWriteCommand copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #569                // Method head:()Lakka/io/Tcp$SimpleWriteCommand;
       4: areturn

  public akka.io.Tcp$WriteCommand copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #572                // Method tailCommand:()Lakka/io/Tcp$WriteCommand;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #575                // String CompoundWrite
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #579                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #585                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #589                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #592                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #572                // Method tailCommand:()Lakka/io/Tcp$WriteCommand;
      43: goto          50
      46: aload_0
      47: invokevirtual #569                // Method head:()Lakka/io/Tcp$SimpleWriteCommand;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #600                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #604                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public int hashCode();
    Code:
       0: getstatic     #600                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #609                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     112
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/io/Tcp$CompoundWrite
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          116
      25: aload_1
      26: checkcast     #2                  // class akka/io/Tcp$CompoundWrite
      29: astore        4
      31: aload_0
      32: invokevirtual #569                // Method head:()Lakka/io/Tcp$SimpleWriteCommand;
      35: aload         4
      37: invokevirtual #569                // Method head:()Lakka/io/Tcp$SimpleWriteCommand;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          108
      55: aload         5
      57: invokevirtual #612                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          108
      63: aload_0
      64: invokevirtual #572                // Method tailCommand:()Lakka/io/Tcp$WriteCommand;
      67: aload         4
      69: invokevirtual #572                // Method tailCommand:()Lakka/io/Tcp$WriteCommand;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          108
      87: aload         6
      89: invokevirtual #612                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          108
      95: aload         4
      97: aload_0
      98: invokevirtual #614                // Method canEqual:(Ljava/lang/Object;)Z
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ifeq          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: ireturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #619                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #622                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #625                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #628                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #631                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #634                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #637                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #640                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #643                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #645                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #648                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #648                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.immutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #648                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #648                // Method seq:()Lscala/collection/immutable/Iterable;
       4: areturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokevirtual #569                // Method head:()Lakka/io/Tcp$SimpleWriteCommand;
       4: areturn

  public akka.io.Tcp$CompoundWrite(akka.io.Tcp$SimpleWriteCommand, akka.io.Tcp$WriteCommand);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #551                // Field head:Lakka/io/Tcp$SimpleWriteCommand;
       5: aload_0
       6: aload_2
       7: putfield      #554                // Field tailCommand:Lakka/io/Tcp$WriteCommand;
      10: aload_0
      11: invokespecial #652                // Method akka/io/Tcp$WriteCommand."<init>":()V
      14: aload_0
      15: invokestatic  #656                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      18: aload_0
      19: invokestatic  #659                // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      22: aload_0
      23: invokestatic  #662                // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      26: aload_0
      27: invokestatic  #665                // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      30: aload_0
      31: invokestatic  #670                // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      34: aload_0
      35: invokestatic  #675                // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      38: aload_0
      39: invokestatic  #680                // Method scala/collection/immutable/Traversable$class.$init$:(Lscala/collection/immutable/Traversable;)V
      42: aload_0
      43: invokestatic  #685                // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      46: aload_0
      47: invokestatic  #688                // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      50: aload_0
      51: invokestatic  #693                // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      54: aload_0
      55: invokestatic  #696                // Method scala/collection/immutable/Iterable$class.$init$:(Lscala/collection/immutable/Iterable;)V
      58: aload_0
      59: invokestatic  #701                // Method scala/Product$class.$init$:(Lscala/Product;)V
      62: return
}
