Compiled from "SelectionHandler.scala"
public final class akka.io.SelectionHandler$$anon$2 extends akka.actor.OneForOneStrategy {
  public void logFailure(akka.actor.ActorContext, akka.actor.ActorRef, java.lang.Throwable, akka.actor.SupervisorStrategy$Directive);
    Code:
       0: iconst_0
       1: istore        10
       3: aconst_null
       4: astore        11
       6: aload_3
       7: astore        12
       9: aload         12
      11: instanceof    #14                 // class akka/actor/ActorInitializationException
      14: ifeq          59
      17: iconst_1
      18: istore        10
      20: aload         12
      22: checkcast     #14                 // class akka/actor/ActorInitializationException
      25: astore        11
      27: aload         11
      29: invokevirtual #18                 // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      32: ifnull        59
      35: aload         11
      37: invokevirtual #18                 // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      40: invokevirtual #24                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      43: ifnull        59
      46: aload         11
      48: invokevirtual #18                 // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      51: invokevirtual #24                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      54: astore        13
      56: goto          150
      59: iload         10
      61: ifeq          143
      64: aload         11
      66: invokevirtual #18                 // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      69: ifnull        143
      72: aload         11
      74: invokevirtual #18                 // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      77: astore        14
      79: aload         14
      81: instanceof    #26                 // class java/lang/reflect/InvocationTargetException
      84: ifeq          107
      87: aload         14
      89: checkcast     #26                 // class java/lang/reflect/InvocationTargetException
      92: astore        15
      94: aload         15
      96: invokevirtual #29                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      99: invokevirtual #32                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
     102: astore        16
     104: goto          126
     107: aload         14
     109: ifnull        133
     112: aload         14
     114: astore        17
     116: getstatic     #38                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
     119: aload         17
     121: invokevirtual #42                 // Method akka/event/Logging$.simpleName:(Ljava/lang/Object;)Ljava/lang/String;
     124: astore        16
     126: aload         16
     128: astore        13
     130: goto          150
     133: new           #44                 // class scala/MatchError
     136: dup
     137: aload         14
     139: invokespecial #48                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     142: athrow
     143: aload         12
     145: invokevirtual #24                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     148: astore        13
     150: aload         13
     152: astore        9
     154: aload_1
     155: invokeinterface #54,  1           // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
     160: invokevirtual #60                 // Method akka/actor/ActorSystem.eventStream:()Lakka/event/EventStream;
     163: new           #62                 // class akka/event/Logging$Debug
     166: dup
     167: aload_2
     168: invokevirtual #68                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
     171: invokevirtual #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
     174: ldc           #7                  // class akka/io/SelectionHandler
     176: aload         9
     178: invokespecial #74                 // Method akka/event/Logging$Debug."<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
     181: invokevirtual #79                 // Method akka/event/EventStream.publish:(Ljava/lang/Object;)V
     184: goto          219
     187: astore        5
     189: aload         5
     191: astore        6
     193: getstatic     #84                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     196: aload         6
     198: invokevirtual #88                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     201: astore        7
     203: aload         7
     205: invokevirtual #94                 // Method scala/Option.isEmpty:()Z
     208: ifeq          214
     211: aload         5
     213: athrow
     214: getstatic     #100                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     217: astore        8
     219: return
    Exception table:
       from    to  target type
           0   187   187   any

  public akka.io.SelectionHandler$$anon$2(akka.io.SelectionHandler);
    Code:
       0: aload_0
       1: getstatic     #122                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
       4: invokevirtual #126                // Method akka/actor/OneForOneStrategy$.$lessinit$greater$default$1:()I
       7: getstatic     #122                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      10: invokevirtual #130                // Method akka/actor/OneForOneStrategy$.$lessinit$greater$default$2:()Lscala/concurrent/duration/Duration;
      13: getstatic     #122                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      16: invokevirtual #133                // Method akka/actor/OneForOneStrategy$.$lessinit$greater$default$3:()Z
      19: aload_1
      20: invokevirtual #137                // Method akka/io/SelectionHandler.akka$io$SelectionHandler$$stoppingDecider$1:()Lscala/PartialFunction;
      23: invokespecial #140                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
      26: return
}
