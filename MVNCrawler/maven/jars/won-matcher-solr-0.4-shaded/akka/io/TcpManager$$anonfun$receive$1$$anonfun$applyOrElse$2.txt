Compiled from "TcpManager.scala"
public final class akka.io.TcpManager$$anonfun$receive$1$$anonfun$applyOrElse$2 extends scala.runtime.AbstractFunction1<akka.io.ChannelRegistry, akka.actor.Props> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.io.TcpManager$$anonfun$receive$1 $outer;

  private final akka.actor.ActorRef commander$2;

  private final akka.io.Tcp$Bind x3$1;

  public final akka.actor.Props apply(akka.io.ChannelRegistry);
    Code:
       0: getstatic     #31                 // Field akka/actor/Props$.MODULE$:Lakka/actor/Props$;
       3: ldc           #33                 // class akka/io/TcpListener
       5: getstatic     #38                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: iconst_5
       9: anewarray     #40                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #42                 // Field $outer:Lakka/io/TcpManager$$anonfun$receive$1;
      18: invokevirtual #46                 // Method akka/io/TcpManager$$anonfun$receive$1.akka$io$TcpManager$$anonfun$$$outer:()Lakka/io/TcpManager;
      21: invokevirtual #52                 // Method akka/io/TcpManager.selectorPool:()Lakka/actor/ActorRef;
      24: aastore
      25: dup
      26: iconst_1
      27: aload_0
      28: getfield      #42                 // Field $outer:Lakka/io/TcpManager$$anonfun$receive$1;
      31: invokevirtual #46                 // Method akka/io/TcpManager$$anonfun$receive$1.akka$io$TcpManager$$anonfun$$$outer:()Lakka/io/TcpManager;
      34: getfield      #56                 // Field akka/io/TcpManager.akka$io$TcpManager$$tcp:Lakka/io/TcpExt;
      37: aastore
      38: dup
      39: iconst_2
      40: aload_1
      41: aastore
      42: dup
      43: iconst_3
      44: aload_0
      45: getfield      #58                 // Field commander$2:Lakka/actor/ActorRef;
      48: aastore
      49: dup
      50: iconst_4
      51: aload_0
      52: getfield      #60                 // Field x3$1:Lakka/io/Tcp$Bind;
      55: aastore
      56: invokevirtual #64                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      59: invokevirtual #67                 // Method akka/actor/Props$.apply:(Ljava/lang/Class;Lscala/collection/Seq;)Lakka/actor/Props;
      62: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #74                 // class akka/io/ChannelRegistry
       5: invokevirtual #76                 // Method apply:(Lakka/io/ChannelRegistry;)Lakka/actor/Props;
       8: areturn

  public akka.io.TcpManager$$anonfun$receive$1$$anonfun$applyOrElse$2(akka.io.TcpManager$$anonfun$receive$1, akka.actor.ActorRef, akka.io.Tcp$Bind);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #42                 // Field $outer:Lakka/io/TcpManager$$anonfun$receive$1;
      11: aload_0
      12: aload_2
      13: putfield      #58                 // Field commander$2:Lakka/actor/ActorRef;
      16: aload_0
      17: aload_3
      18: putfield      #60                 // Field x3$1:Lakka/io/Tcp$Bind;
      21: aload_0
      22: invokespecial #83                 // Method scala/runtime/AbstractFunction1."<init>":()V
      25: return
}
