Compiled from "UdpListener.scala"
public class akka.io.UdpListener implements akka.actor.Actor, akka.actor.ActorLogging, akka.io.WithUdpSend, akka.dispatch.RequiresMessageQueue<akka.dispatch.UnboundedMessageQueueSemantics> {
  private final akka.io.UdpExt udp;

  private final akka.io.ChannelRegistry channelRegistry;

  public final akka.actor.ActorRef akka$io$UdpListener$$bindCommander;

  public final akka.io.Udp$Bind akka$io$UdpListener$$bind;

  private final java.nio.channels.DatagramChannel channel;

  private final java.lang.Object localAddress;

  private akka.io.Udp$Send akka$io$WithUdpSend$$pendingSend;

  private akka.actor.ActorRef akka$io$WithUdpSend$$pendingCommander;

  private boolean akka$io$WithUdpSend$$retriedSend;

  private final akka.io.Udp$UdpSettings settings;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.io.Udp$Send akka$io$WithUdpSend$$pendingSend();
    Code:
       0: aload_0
       1: getfield      #44                 // Field akka$io$WithUdpSend$$pendingSend:Lakka/io/Udp$Send;
       4: areturn

  public void akka$io$WithUdpSend$$pendingSend_$eq(akka.io.Udp$Send);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field akka$io$WithUdpSend$$pendingSend:Lakka/io/Udp$Send;
       5: return

  public akka.actor.ActorRef akka$io$WithUdpSend$$pendingCommander();
    Code:
       0: aload_0
       1: getfield      #52                 // Field akka$io$WithUdpSend$$pendingCommander:Lakka/actor/ActorRef;
       4: areturn

  public void akka$io$WithUdpSend$$pendingCommander_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field akka$io$WithUdpSend$$pendingCommander:Lakka/actor/ActorRef;
       5: return

  public boolean akka$io$WithUdpSend$$retriedSend();
    Code:
       0: aload_0
       1: getfield      #57                 // Field akka$io$WithUdpSend$$retriedSend:Z
       4: ireturn

  public void akka$io$WithUdpSend$$retriedSend_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field akka$io$WithUdpSend$$retriedSend:Z
       5: return

  public akka.io.Udp$UdpSettings settings();
    Code:
       0: aload_0
       1: getfield      #62                 // Field settings:Lakka/io/Udp$UdpSettings;
       4: areturn

  public void akka$io$WithUdpSend$_setter_$settings_$eq(akka.io.Udp$UdpSettings);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field settings:Lakka/io/Udp$UdpSettings;
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> sendHandlers(akka.io.ChannelRegistration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method akka/io/WithUdpSend$class.sendHandlers:(Lakka/io/WithUdpSend;Lakka/io/ChannelRegistration;)Lscala/PartialFunction;
       5: areturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #76                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #88                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #90                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #99                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #112                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #115                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #139                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #142                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.io.UdpExt udp();
    Code:
       0: aload_0
       1: getfield      #153                // Field udp:Lakka/io/UdpExt;
       4: areturn

  public akka.actor.ActorRef selector();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method context:()Lakka/actor/ActorContext;
       4: invokeinterface #161,  1          // InterfaceMethod akka/actor/ActorContext.parent:()Lakka/actor/ActorRef;
       9: areturn

  public java.nio.channels.DatagramChannel channel();
    Code:
       0: aload_0
       1: getfield      #164                // Field channel:Ljava/nio/channels/DatagramChannel;
       4: areturn

  public java.lang.Object localAddress();
    Code:
       0: aload_0
       1: getfield      #167                // Field localAddress:Ljava/lang/Object;
       4: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #170                // class akka/io/UdpListener$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #174                // Method akka/io/UdpListener$$anonfun$receive$1."<init>":(Lakka/io/UdpListener;)V
       8: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> readHandlers(akka.io.ChannelRegistration);
    Code:
       0: new           #177                // class akka/io/UdpListener$$anonfun$readHandlers$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #180                // Method akka/io/UdpListener$$anonfun$readHandlers$1."<init>":(Lakka/io/UdpListener;Lakka/io/ChannelRegistration;)V
       9: areturn

  public void doReceive(akka.io.ChannelRegistration, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #184                // Method udp:()Lakka/io/UdpExt;
       4: invokevirtual #190                // Method akka/io/UdpExt.bufferPool:()Lakka/io/BufferPool;
       7: invokeinterface #196,  1          // InterfaceMethod akka/io/BufferPool.acquire:()Ljava/nio/ByteBuffer;
      12: astore_3
      13: aload_0
      14: aload_0
      15: invokevirtual #184                // Method udp:()Lakka/io/UdpExt;
      18: invokevirtual #198                // Method akka/io/UdpExt.settings:()Lakka/io/Udp$UdpSettings;
      21: invokevirtual #204                // Method akka/io/Udp$UdpSettings.BatchReceiveLimit:()I
      24: aload_3
      25: aload_2
      26: invokespecial #208                // Method innerReceive$1:(ILjava/nio/ByteBuffer;Lakka/actor/ActorRef;)V
      29: aload_0
      30: invokevirtual #184                // Method udp:()Lakka/io/UdpExt;
      33: invokevirtual #190                // Method akka/io/UdpExt.bufferPool:()Lakka/io/BufferPool;
      36: aload_3
      37: invokeinterface #212,  2          // InterfaceMethod akka/io/BufferPool.release:(Ljava/nio/ByteBuffer;)V
      42: aload_1
      43: iconst_1
      44: invokeinterface #218,  2          // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
      49: return
      50: astore        4
      52: aload_0
      53: invokevirtual #184                // Method udp:()Lakka/io/UdpExt;
      56: invokevirtual #190                // Method akka/io/UdpExt.bufferPool:()Lakka/io/BufferPool;
      59: aload_3
      60: invokeinterface #212,  2          // InterfaceMethod akka/io/BufferPool.release:(Ljava/nio/ByteBuffer;)V
      65: aload_1
      66: iconst_1
      67: invokeinterface #218,  2          // InterfaceMethod akka/io/ChannelRegistration.enableInterest:(I)V
      72: aload         4
      74: athrow
    Exception table:
       from    to  target type
          13    29    50   any

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method channel:()Ljava/nio/channels/DatagramChannel;
       4: invokevirtual #235                // Method java/nio/channels/DatagramChannel.isOpen:()Z
       7: ifeq          79
      10: aload_0
      11: invokevirtual #237                // Method log:()Lakka/event/LoggingAdapter;
      14: ldc           #239                // String Closing DatagramChannel after being stopped
      16: invokeinterface #245,  2          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;)V
      21: aload_0
      22: invokevirtual #230                // Method channel:()Ljava/nio/channels/DatagramChannel;
      25: invokevirtual #248                // Method java/nio/channels/DatagramChannel.close:()V
      28: goto          79
      31: astore_1
      32: aload_1
      33: astore_2
      34: getstatic     #254                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      37: aload_2
      38: invokevirtual #258                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      41: astore_3
      42: aload_3
      43: invokevirtual #263                // Method scala/Option.isEmpty:()Z
      46: ifeq          51
      49: aload_1
      50: athrow
      51: aload_3
      52: invokevirtual #266                // Method scala/Option.get:()Ljava/lang/Object;
      55: checkcast     #227                // class java/lang/Throwable
      58: astore        4
      60: aload_0
      61: invokevirtual #237                // Method log:()Lakka/event/LoggingAdapter;
      64: ldc_w         #268                // String Error closing DatagramChannel: {}
      67: aload         4
      69: invokeinterface #271,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      74: getstatic     #277                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      77: astore        5
      79: return
    Exception table:
       from    to  target type
          21    31    31   any

  private final java.lang.Object liftedTree1$1();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method channel:()Ljava/nio/channels/DatagramChannel;
       4: invokevirtual #283                // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
       7: astore        6
       9: aload_0
      10: getfield      #285                // Field akka$io$UdpListener$$bind:Lakka/io/Udp$Bind;
      13: invokevirtual #291                // Method akka/io/Udp$Bind.options:()Lscala/collection/immutable/Traversable;
      16: new           #293                // class akka/io/UdpListener$$anonfun$liftedTree1$1$1
      19: dup
      20: aload_0
      21: aload         6
      23: invokespecial #296                // Method akka/io/UdpListener$$anonfun$liftedTree1$1$1."<init>":(Lakka/io/UdpListener;Ljava/net/DatagramSocket;)V
      26: invokeinterface #302,  2          // InterfaceMethod scala/collection/immutable/Traversable.foreach:(Lscala/Function1;)V
      31: aload         6
      33: aload_0
      34: getfield      #285                // Field akka$io$UdpListener$$bind:Lakka/io/Udp$Bind;
      37: invokevirtual #305                // Method akka/io/Udp$Bind.localAddress:()Ljava/net/InetSocketAddress;
      40: invokevirtual #311                // Method java/net/DatagramSocket.bind:(Ljava/net/SocketAddress;)V
      43: aload         6
      45: invokevirtual #315                // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      48: astore        8
      50: aload         8
      52: instanceof    #317                // class java/net/InetSocketAddress
      55: ifeq          130
      58: aload         8
      60: checkcast     #317                // class java/net/InetSocketAddress
      63: astore        9
      65: aload         9
      67: astore        10
      69: aload         10
      71: astore        7
      73: aload_0
      74: getfield      #319                // Field channelRegistry:Lakka/io/ChannelRegistry;
      77: aload_0
      78: invokevirtual #230                // Method channel:()Ljava/nio/channels/DatagramChannel;
      81: iconst_1
      82: aload_0
      83: invokevirtual #321                // Method self:()Lakka/actor/ActorRef;
      86: invokeinterface #327,  4          // InterfaceMethod akka/io/ChannelRegistry.register:(Ljava/nio/channels/SelectableChannel;ILakka/actor/ActorRef;)V
      91: aload_0
      92: invokevirtual #237                // Method log:()Lakka/event/LoggingAdapter;
      95: ldc_w         #329                // String Successfully bound to [{}]
      98: aload         7
     100: invokeinterface #271,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     105: aload_0
     106: getfield      #285                // Field akka$io$UdpListener$$bind:Lakka/io/Udp$Bind;
     109: invokevirtual #291                // Method akka/io/Udp$Bind.options:()Lscala/collection/immutable/Traversable;
     112: new           #331                // class akka/io/UdpListener$$anonfun$liftedTree1$1$2
     115: dup
     116: aload_0
     117: invokespecial #332                // Method akka/io/UdpListener$$anonfun$liftedTree1$1$2."<init>":(Lakka/io/UdpListener;)V
     120: invokeinterface #302,  2          // InterfaceMethod scala/collection/immutable/Traversable.foreach:(Lscala/Function1;)V
     125: aload         7
     127: goto          288
     130: new           #334                // class java/lang/IllegalArgumentException
     133: dup
     134: new           #336                // class scala/StringContext
     137: dup
     138: getstatic     #341                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     141: iconst_2
     142: anewarray     #343                // class java/lang/String
     145: dup
     146: iconst_0
     147: ldc_w         #345                // String bound to unknown SocketAddress [
     150: aastore
     151: dup
     152: iconst_1
     153: ldc_w         #347                // String ]
     156: aastore
     157: checkcast     #349                // class "[Ljava/lang/Object;"
     160: invokevirtual #353                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     163: invokespecial #356                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     166: getstatic     #341                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     169: iconst_1
     170: anewarray     #5                  // class java/lang/Object
     173: dup
     174: iconst_0
     175: aload         8
     177: aastore
     178: invokevirtual #360                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     181: invokevirtual #364                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     184: invokespecial #366                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     187: athrow
     188: astore_1
     189: aload_1
     190: astore_2
     191: getstatic     #254                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     194: aload_2
     195: invokevirtual #258                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     198: astore_3
     199: aload_3
     200: invokevirtual #263                // Method scala/Option.isEmpty:()Z
     203: ifeq          208
     206: aload_1
     207: athrow
     208: aload_3
     209: invokevirtual #266                // Method scala/Option.get:()Ljava/lang/Object;
     212: checkcast     #227                // class java/lang/Throwable
     215: astore        4
     217: getstatic     #371                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     220: aload_0
     221: getfield      #373                // Field akka$io$UdpListener$$bindCommander:Lakka/actor/ActorRef;
     224: invokevirtual #377                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     227: new           #379                // class akka/io/Udp$CommandFailed
     230: dup
     231: aload_0
     232: getfield      #285                // Field akka$io$UdpListener$$bind:Lakka/io/Udp$Bind;
     235: invokespecial #382                // Method akka/io/Udp$CommandFailed."<init>":(Lakka/io/Udp$Command;)V
     238: aload_0
     239: invokevirtual #321                // Method self:()Lakka/actor/ActorRef;
     242: invokeinterface #388,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     247: aload_0
     248: invokevirtual #237                // Method log:()Lakka/event/LoggingAdapter;
     251: aload         4
     253: ldc_w         #390                // String Failed to bind UDP channel to endpoint [{}]
     256: aload_0
     257: getfield      #285                // Field akka$io$UdpListener$$bind:Lakka/io/Udp$Bind;
     260: invokevirtual #305                // Method akka/io/Udp$Bind.localAddress:()Ljava/net/InetSocketAddress;
     263: invokeinterface #394,  4          // InterfaceMethod akka/event/LoggingAdapter.error:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
     268: aload_0
     269: invokevirtual #156                // Method context:()Lakka/actor/ActorContext;
     272: aload_0
     273: invokevirtual #321                // Method self:()Lakka/actor/ActorRef;
     276: invokeinterface #397,  2          // InterfaceMethod akka/actor/ActorContext.stop:(Lakka/actor/ActorRef;)V
     281: getstatic     #277                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     284: astore        5
     286: aload         5
     288: areturn
    Exception table:
       from    to  target type
           0   188   188   any

  private final void innerReceive$1(int, java.nio.ByteBuffer, akka.actor.ActorRef);
    Code:
       0: aload_2
       1: invokevirtual #406                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_2
       6: aload_0
       7: invokevirtual #184                // Method udp:()Lakka/io/UdpExt;
      10: invokevirtual #198                // Method akka/io/UdpExt.settings:()Lakka/io/Udp$UdpSettings;
      13: invokevirtual #409                // Method akka/io/Udp$UdpSettings.DirectBufferSize:()I
      16: invokevirtual #413                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      19: pop
      20: aload_0
      21: invokevirtual #230                // Method channel:()Ljava/nio/channels/DatagramChannel;
      24: aload_2
      25: invokevirtual #416                // Method java/nio/channels/DatagramChannel.receive:(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;
      28: astore        5
      30: aload         5
      32: instanceof    #317                // class java/net/InetSocketAddress
      35: ifeq          104
      38: aload         5
      40: checkcast     #317                // class java/net/InetSocketAddress
      43: astore        6
      45: aload_2
      46: invokevirtual #419                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      49: pop
      50: getstatic     #371                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      53: aload_3
      54: invokevirtual #377                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      57: new           #421                // class akka/io/Udp$Received
      60: dup
      61: getstatic     #426                // Field akka/util/ByteString$.MODULE$:Lakka/util/ByteString$;
      64: aload_2
      65: invokevirtual #430                // Method akka/util/ByteString$.apply:(Ljava/nio/ByteBuffer;)Lakka/util/ByteString;
      68: aload         6
      70: invokespecial #433                // Method akka/io/Udp$Received."<init>":(Lakka/util/ByteString;Ljava/net/InetSocketAddress;)V
      73: aload_0
      74: invokevirtual #321                // Method self:()Lakka/actor/ActorRef;
      77: invokeinterface #388,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      82: iload_1
      83: iconst_0
      84: if_icmple     96
      87: iload_1
      88: iconst_1
      89: isub
      90: aload_2
      91: astore_2
      92: istore_1
      93: goto          0
      96: getstatic     #277                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      99: astore        7
     101: goto          114
     104: aload         5
     106: ifnonnull     119
     109: getstatic     #277                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     112: astore        7
     114: getstatic     #277                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     117: pop
     118: return
     119: new           #435                // class scala/MatchError
     122: dup
     123: aload         5
     125: invokespecial #437                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     128: athrow

  public akka.io.UdpListener(akka.io.UdpExt, akka.io.ChannelRegistry, akka.actor.ActorRef, akka.io.Udp$Bind);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field udp:Lakka/io/UdpExt;
       5: aload_0
       6: aload_2
       7: putfield      #319                // Field channelRegistry:Lakka/io/ChannelRegistry;
      10: aload_0
      11: aload_3
      12: putfield      #373                // Field akka$io$UdpListener$$bindCommander:Lakka/actor/ActorRef;
      15: aload_0
      16: aload         4
      18: putfield      #285                // Field akka$io$UdpListener$$bind:Lakka/io/Udp$Bind;
      21: aload_0
      22: invokespecial #443                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #446                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      29: aload_0
      30: invokestatic  #449                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      33: aload_0
      34: invokestatic  #452                // Method akka/io/WithUdpSend$class.$init$:(Lakka/io/WithUdpSend;)V
      37: aload_0
      38: invokevirtual #156                // Method context:()Lakka/actor/ActorContext;
      41: aload         4
      43: invokevirtual #454                // Method akka/io/Udp$Bind.handler:()Lakka/actor/ActorRef;
      46: invokeinterface #458,  2          // InterfaceMethod akka/actor/ActorContext.watch:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
      51: pop
      52: aload_0
      53: aload         4
      55: invokevirtual #291                // Method akka/io/Udp$Bind.options:()Lscala/collection/immutable/Traversable;
      58: new           #460                // class akka/io/UdpListener$$anonfun$1
      61: dup
      62: aload_0
      63: invokespecial #461                // Method akka/io/UdpListener$$anonfun$1."<init>":(Lakka/io/UdpListener;)V
      66: invokeinterface #465,  2          // InterfaceMethod scala/collection/immutable/Traversable.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
      71: new           #467                // class akka/io/UdpListener$$anonfun$2
      74: dup
      75: aload_0
      76: invokespecial #468                // Method akka/io/UdpListener$$anonfun$2."<init>":(Lakka/io/UdpListener;)V
      79: invokevirtual #472                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      82: checkcast     #474                // class akka/io/Inet$DatagramChannelCreator
      85: invokevirtual #477                // Method akka/io/Inet$DatagramChannelCreator.create:()Ljava/nio/channels/DatagramChannel;
      88: putfield      #164                // Field channel:Ljava/nio/channels/DatagramChannel;
      91: aload_0
      92: invokevirtual #230                // Method channel:()Ljava/nio/channels/DatagramChannel;
      95: iconst_0
      96: invokevirtual #481                // Method java/nio/channels/DatagramChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      99: pop
     100: aload_0
     101: aload_0
     102: invokespecial #483                // Method liftedTree1$1:()Ljava/lang/Object;
     105: putfield      #167                // Field localAddress:Ljava/lang/Object;
     108: return
}
