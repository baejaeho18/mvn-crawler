Compiled from "TcpManager.scala"
public final class akka.io.TcpManager$$anonfun$receive$1 extends scala.runtime.AbstractPartialFunction<akka.io.SelectionHandler$HasFailureMessage, scala.Function1<akka.io.ChannelRegistry, akka.actor.Props>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.io.TcpManager $outer;

  public final <A1 extends akka.io.SelectionHandler$HasFailureMessage, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #23                 // class akka/io/Tcp$Connect
       6: ifeq          41
       9: aload_3
      10: checkcast     #23                 // class akka/io/Tcp$Connect
      13: astore        4
      15: aload_0
      16: getfield      #25                 // Field $outer:Lakka/io/TcpManager;
      19: invokevirtual #29                 // Method akka/io/TcpManager.sender:()Lakka/actor/ActorRef;
      22: astore        6
      24: new           #31                 // class akka/io/TcpManager$$anonfun$receive$1$$anonfun$applyOrElse$1
      27: dup
      28: aload_0
      29: aload         6
      31: aload         4
      33: invokespecial #35                 // Method akka/io/TcpManager$$anonfun$receive$1$$anonfun$applyOrElse$1."<init>":(Lakka/io/TcpManager$$anonfun$receive$1;Lakka/actor/ActorRef;Lakka/io/Tcp$Connect;)V
      36: astore        5
      38: goto          89
      41: aload_3
      42: instanceof    #37                 // class akka/io/Tcp$Bind
      45: ifeq          80
      48: aload_3
      49: checkcast     #37                 // class akka/io/Tcp$Bind
      52: astore        7
      54: aload_0
      55: getfield      #25                 // Field $outer:Lakka/io/TcpManager;
      58: invokevirtual #29                 // Method akka/io/TcpManager.sender:()Lakka/actor/ActorRef;
      61: astore        8
      63: new           #39                 // class akka/io/TcpManager$$anonfun$receive$1$$anonfun$applyOrElse$2
      66: dup
      67: aload_0
      68: aload         8
      70: aload         7
      72: invokespecial #42                 // Method akka/io/TcpManager$$anonfun$receive$1$$anonfun$applyOrElse$2."<init>":(Lakka/io/TcpManager$$anonfun$receive$1;Lakka/actor/ActorRef;Lakka/io/Tcp$Bind;)V
      75: astore        5
      77: goto          89
      80: aload_2
      81: aload_1
      82: invokeinterface #48,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      87: astore        5
      89: aload         5
      91: areturn

  public final boolean isDefinedAt(akka.io.SelectionHandler$HasFailureMessage);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #23                 // class akka/io/Tcp$Connect
       6: ifeq          14
       9: iconst_1
      10: istore_3
      11: goto          28
      14: aload_2
      15: instanceof    #37                 // class akka/io/Tcp$Bind
      18: ifeq          26
      21: iconst_1
      22: istore_3
      23: goto          28
      26: iconst_0
      27: istore_3
      28: iload_3
      29: ireturn

  public akka.io.TcpManager akka$io$TcpManager$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #25                 // Field $outer:Lakka/io/TcpManager;
       4: areturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class akka/io/SelectionHandler$HasFailureMessage
       5: invokevirtual #67                 // Method isDefinedAt:(Lakka/io/SelectionHandler$HasFailureMessage;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class akka/io/SelectionHandler$HasFailureMessage
       5: aload_2
       6: invokevirtual #72                 // Method applyOrElse:(Lakka/io/SelectionHandler$HasFailureMessage;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.io.TcpManager$$anonfun$receive$1(akka.io.TcpManager);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #25                 // Field $outer:Lakka/io/TcpManager;
      11: aload_0
      12: invokespecial #76                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
      15: return
}
