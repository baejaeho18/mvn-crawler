Compiled from "DirectByteBufferPool.scala"
public class akka.io.DirectByteBufferPool implements akka.io.BufferPool {
  private final int defaultBufferSize;

  private final int maxPoolEntries;

  private final java.nio.ByteBuffer[] pool;

  private int buffersInPool;

  public java.nio.ByteBuffer acquire();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method takeBufferFromPool:()Ljava/nio/ByteBuffer;
       4: areturn

  public void release(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method offerBufferToPool:(Ljava/nio/ByteBuffer;)V
       5: return

  private java.nio.ByteBuffer allocate(int);
    Code:
       0: iload_1
       1: invokestatic  #37                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       4: areturn

  private final java.nio.ByteBuffer takeBufferFromPool();
    Code:
       0: aload_0
       1: getfield      #40                 // Field pool:[Ljava/nio/ByteBuffer;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field buffersInPool:I
      11: iconst_0
      12: if_icmple     37
      15: aload_0
      16: aload_0
      17: getfield      #42                 // Field buffersInPool:I
      20: iconst_1
      21: isub
      22: putfield      #42                 // Field buffersInPool:I
      25: aload_0
      26: getfield      #40                 // Field pool:[Ljava/nio/ByteBuffer;
      29: aload_0
      30: getfield      #42                 // Field buffersInPool:I
      33: aaload
      34: goto          38
      37: aconst_null
      38: astore_3
      39: aload_2
      40: monitorexit
      41: aload_3
      42: checkcast     #34                 // class java/nio/ByteBuffer
      45: astore_1
      46: aload_1
      47: ifnonnull     61
      50: aload_0
      51: aload_0
      52: getfield      #44                 // Field defaultBufferSize:I
      55: invokespecial #46                 // Method allocate:(I)Ljava/nio/ByteBuffer;
      58: goto          67
      61: aload_1
      62: invokevirtual #50                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      65: pop
      66: aload_1
      67: areturn
      68: aload_2
      69: monitorexit
      70: athrow
    Exception table:
       from    to  target type
           7    41    68   any

  private final void offerBufferToPool(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #40                 // Field pool:[Ljava/nio/ByteBuffer;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field buffersInPool:I
      11: aload_0
      12: getfield      #56                 // Field maxPoolEntries:I
      15: if_icmpge     45
      18: aload_0
      19: getfield      #40                 // Field pool:[Ljava/nio/ByteBuffer;
      22: aload_0
      23: getfield      #42                 // Field buffersInPool:I
      26: aload_1
      27: aastore
      28: aload_0
      29: aload_0
      30: getfield      #42                 // Field buffersInPool:I
      33: iconst_1
      34: iadd
      35: putfield      #42                 // Field buffersInPool:I
      38: iconst_0
      39: invokestatic  #62                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      42: goto          49
      45: iconst_1
      46: invokestatic  #62                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      49: astore        4
      51: aload_3
      52: monitorexit
      53: aload         4
      55: invokestatic  #66                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      58: istore_2
      59: iload_2
      60: ifeq          68
      63: aload_0
      64: aload_1
      65: invokespecial #69                 // Method tryCleanDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
      68: return
      69: aload_3
      70: monitorexit
      71: athrow
    Exception table:
       from    to  target type
           7    53    69   any

  private final void tryCleanDirectByteBuffer(java.nio.ByteBuffer);
    Code:
       0: getstatic     #79                 // Field akka/io/DirectByteBufferPool$.MODULE$:Lakka/io/DirectByteBufferPool$;
       3: aload_1
       4: invokevirtual #80                 // Method akka/io/DirectByteBufferPool$.tryCleanDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
       7: return

  public akka.io.DirectByteBufferPool(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field defaultBufferSize:I
       5: aload_0
       6: iload_2
       7: putfield      #56                 // Field maxPoolEntries:I
      10: aload_0
      11: invokespecial #86                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: iload_2
      16: anewarray     #34                 // class java/nio/ByteBuffer
      19: putfield      #40                 // Field pool:[Ljava/nio/ByteBuffer;
      22: aload_0
      23: iconst_0
      24: putfield      #42                 // Field buffersInPool:I
      27: return
}
