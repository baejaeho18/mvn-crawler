Compiled from "Tcp.scala"
public final class akka.io.TcpMessage$ {
  public static final akka.io.TcpMessage$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/io/TcpMessage$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.io.Tcp$Command connect(java.net.InetSocketAddress, java.net.InetSocketAddress, java.lang.Iterable<akka.io.Inet$SocketOption>, scala.concurrent.duration.FiniteDuration, boolean);
    Code:
       0: new           #16                 // class akka/io/Tcp$Connect
       3: dup
       4: aload_1
       5: getstatic     #21                 // Field scala/Option$.MODULE$:Lscala/Option$;
       8: aload_2
       9: invokevirtual #25                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      12: aload_0
      13: aload_3
      14: invokespecial #29                 // Method fromJava:(Ljava/lang/Iterable;)Lscala/collection/immutable/Traversable;
      17: getstatic     #21                 // Field scala/Option$.MODULE$:Lscala/Option$;
      20: aload         4
      22: invokevirtual #25                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      25: iload         5
      27: invokespecial #32                 // Method akka/io/Tcp$Connect."<init>":(Ljava/net/InetSocketAddress;Lscala/Option;Lscala/collection/immutable/Traversable;Lscala/Option;Z)V
      30: areturn

  public akka.io.Tcp$Command connect(java.net.InetSocketAddress);
    Code:
       0: new           #16                 // class akka/io/Tcp$Connect
       3: dup
       4: aload_1
       5: getstatic     #48                 // Field scala/None$.MODULE$:Lscala/None$;
       8: getstatic     #53                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      11: getstatic     #48                 // Field scala/None$.MODULE$:Lscala/None$;
      14: iconst_0
      15: invokespecial #32                 // Method akka/io/Tcp$Connect."<init>":(Ljava/net/InetSocketAddress;Lscala/Option;Lscala/collection/immutable/Traversable;Lscala/Option;Z)V
      18: areturn

  public akka.io.Tcp$Command bind(akka.actor.ActorRef, java.net.InetSocketAddress, int, java.lang.Iterable<akka.io.Inet$SocketOption>, boolean);
    Code:
       0: new           #57                 // class akka/io/Tcp$Bind
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload_0
       8: aload         4
      10: invokespecial #29                 // Method fromJava:(Ljava/lang/Iterable;)Lscala/collection/immutable/Traversable;
      13: iload         5
      15: invokespecial #60                 // Method akka/io/Tcp$Bind."<init>":(Lakka/actor/ActorRef;Ljava/net/InetSocketAddress;ILscala/collection/immutable/Traversable;Z)V
      18: areturn

  public akka.io.Tcp$Command bind(akka.actor.ActorRef, java.net.InetSocketAddress, int);
    Code:
       0: new           #57                 // class akka/io/Tcp$Bind
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: getstatic     #53                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      10: getstatic     #71                 // Field akka/io/Tcp$Bind$.MODULE$:Lakka/io/Tcp$Bind$;
      13: invokevirtual #75                 // Method akka/io/Tcp$Bind$.apply$default$5:()Z
      16: invokespecial #60                 // Method akka/io/Tcp$Bind."<init>":(Lakka/actor/ActorRef;Ljava/net/InetSocketAddress;ILscala/collection/immutable/Traversable;Z)V
      19: areturn

  public akka.io.Tcp$Command register(akka.actor.ActorRef, boolean, boolean);
    Code:
       0: new           #79                 // class akka/io/Tcp$Register
       3: dup
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokespecial #82                 // Method akka/io/Tcp$Register."<init>":(Lakka/actor/ActorRef;ZZ)V
      10: areturn

  public akka.io.Tcp$Command register(akka.actor.ActorRef);
    Code:
       0: new           #79                 // class akka/io/Tcp$Register
       3: dup
       4: aload_1
       5: getstatic     #90                 // Field akka/io/Tcp$Register$.MODULE$:Lakka/io/Tcp$Register$;
       8: invokevirtual #93                 // Method akka/io/Tcp$Register$.apply$default$2:()Z
      11: getstatic     #90                 // Field akka/io/Tcp$Register$.MODULE$:Lakka/io/Tcp$Register$;
      14: invokevirtual #96                 // Method akka/io/Tcp$Register$.apply$default$3:()Z
      17: invokespecial #82                 // Method akka/io/Tcp$Register."<init>":(Lakka/actor/ActorRef;ZZ)V
      20: areturn

  public akka.io.Tcp$Command unbind();
    Code:
       0: getstatic     #103                // Field akka/io/Tcp$Unbind$.MODULE$:Lakka/io/Tcp$Unbind$;
       3: areturn

  public akka.io.Tcp$Command close();
    Code:
       0: getstatic     #109                // Field akka/io/Tcp$Close$.MODULE$:Lakka/io/Tcp$Close$;
       3: areturn

  public akka.io.Tcp$Command confirmedClose();
    Code:
       0: getstatic     #115                // Field akka/io/Tcp$ConfirmedClose$.MODULE$:Lakka/io/Tcp$ConfirmedClose$;
       3: areturn

  public akka.io.Tcp$Command abort();
    Code:
       0: getstatic     #121                // Field akka/io/Tcp$Abort$.MODULE$:Lakka/io/Tcp$Abort$;
       3: areturn

  public akka.io.Tcp$NoAck noAck(java.lang.Object);
    Code:
       0: new           #125                // class akka/io/Tcp$NoAck
       3: dup
       4: aload_1
       5: invokespecial #128                // Method akka/io/Tcp$NoAck."<init>":(Ljava/lang/Object;)V
       8: areturn

  public akka.io.Tcp$NoAck noAck();
    Code:
       0: getstatic     #136                // Field akka/io/Tcp$NoAck$.MODULE$:Lakka/io/Tcp$NoAck$;
       3: areturn

  public akka.io.Tcp$Command write(akka.util.ByteString, akka.io.Tcp$Event);
    Code:
       0: new           #140                // class akka/io/Tcp$Write
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #143                // Method akka/io/Tcp$Write."<init>":(Lakka/util/ByteString;Lakka/io/Tcp$Event;)V
       9: areturn

  public akka.io.Tcp$Command write(akka.util.ByteString);
    Code:
       0: getstatic     #153                // Field akka/io/Tcp$Write$.MODULE$:Lakka/io/Tcp$Write$;
       3: aload_1
       4: invokevirtual #156                // Method akka/io/Tcp$Write$.apply:(Lakka/util/ByteString;)Lakka/io/Tcp$Write;
       7: areturn

  public akka.io.Tcp$Command writeFile(java.lang.String, long, long, akka.io.Tcp$Event);
    Code:
       0: new           #160                // class akka/io/Tcp$WriteFile
       3: dup
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokespecial #163                // Method akka/io/Tcp$WriteFile."<init>":(Ljava/lang/String;JJLakka/io/Tcp$Event;)V
      13: areturn

  public akka.io.Tcp$Command resumeWriting();
    Code:
       0: getstatic     #174                // Field akka/io/Tcp$ResumeWriting$.MODULE$:Lakka/io/Tcp$ResumeWriting$;
       3: areturn

  public akka.io.Tcp$Command suspendReading();
    Code:
       0: getstatic     #180                // Field akka/io/Tcp$SuspendReading$.MODULE$:Lakka/io/Tcp$SuspendReading$;
       3: areturn

  public akka.io.Tcp$Command resumeReading();
    Code:
       0: getstatic     #186                // Field akka/io/Tcp$ResumeReading$.MODULE$:Lakka/io/Tcp$ResumeReading$;
       3: areturn

  public akka.io.Tcp$Command resumeAccepting(int);
    Code:
       0: new           #190                // class akka/io/Tcp$ResumeAccepting
       3: dup
       4: iload_1
       5: invokespecial #193                // Method akka/io/Tcp$ResumeAccepting."<init>":(I)V
       8: areturn

  private <T> scala.collection.immutable.Traversable<T> fromJava(java.lang.Iterable<T>);
    Code:
       0: getstatic     #199                // Field akka/japi/Util$.MODULE$:Lakka/japi/Util$;
       3: aload_1
       4: invokevirtual #203                // Method akka/japi/Util$.immutableSeq:(Ljava/lang/Iterable;)Lscala/collection/immutable/Seq;
       7: areturn

  private akka.io.TcpMessage$();
    Code:
       0: aload_0
       1: invokespecial #205                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #207                // Field MODULE$:Lakka/io/TcpMessage$;
       8: return
}
