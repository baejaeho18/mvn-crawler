Compiled from "SimpleDnsCache.scala"
public class akka.io.SimpleDnsCache$ExpiryEntry implements scala.math.Ordered<akka.io.SimpleDnsCache$ExpiryEntry> {
  private final java.lang.String name;

  private final long until;

  public boolean $less(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #19                 // Method scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public boolean $greater(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public boolean $less$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public boolean $greater$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // Method scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #40                 // Field name:Ljava/lang/String;
       4: areturn

  public long until();
    Code:
       0: aload_0
       1: getfield      #43                 // Field until:J
       4: lreturn

  public boolean isValid(long);
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #47                 // Method until:()J
       5: lcmp
       6: ifge          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int compare(akka.io.SimpleDnsCache$ExpiryEntry);
    Code:
       0: getstatic     #56                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #47                 // Method until:()J
       7: invokevirtual #60                 // Method scala/Predef$.long2Long:(J)Ljava/lang/Long;
      10: getstatic     #56                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      13: aload_1
      14: invokevirtual #47                 // Method until:()J
      17: invokevirtual #60                 // Method scala/Predef$.long2Long:(J)Ljava/lang/Long;
      20: invokevirtual #65                 // Method java/lang/Long.compareTo:(Ljava/lang/Long;)I
      23: ineg
      24: ireturn

  public int compare(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class akka/io/SimpleDnsCache$ExpiryEntry
       5: invokevirtual #67                 // Method compare:(Lakka/io/SimpleDnsCache$ExpiryEntry;)I
       8: ireturn

  public akka.io.SimpleDnsCache$ExpiryEntry(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field name:Ljava/lang/String;
       5: aload_0
       6: lload_2
       7: putfield      #43                 // Field until:J
      10: aload_0
      11: invokespecial #72                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #76                 // Method scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
      18: return
}
