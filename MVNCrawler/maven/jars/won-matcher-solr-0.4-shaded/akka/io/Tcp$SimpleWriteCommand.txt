Compiled from "Tcp.scala"
public abstract class akka.io.Tcp$SimpleWriteCommand extends akka.io.Tcp$WriteCommand {
  public abstract akka.io.Tcp$Event ack();

  public boolean wantsAck();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method ack:()Lakka/io/Tcp$Event;
       4: instanceof    #13                 // class akka/io/Tcp$NoAck
       7: ifeq          14
      10: iconst_0
      11: goto          15
      14: iconst_1
      15: ireturn

  public akka.io.Tcp$CompoundWrite append(akka.io.Tcp$WriteCommand);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: aload_2
       4: invokevirtual #21                 // Method akka/io/Tcp$WriteCommand.$plus$colon:(Lakka/io/Tcp$SimpleWriteCommand;)Lakka/io/Tcp$CompoundWrite;
       7: areturn

  public akka.io.Tcp$SimpleWriteCommand();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method akka/io/Tcp$WriteCommand."<init>":()V
       4: getstatic     #33                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokevirtual #11                 // Method ack:()Lakka/io/Tcp$Event;
      11: ifnonnull     18
      14: iconst_0
      15: goto          19
      18: iconst_1
      19: new           #35                 // class akka/io/Tcp$SimpleWriteCommand$$anonfun$4
      22: dup
      23: aload_0
      24: invokespecial #38                 // Method akka/io/Tcp$SimpleWriteCommand$$anonfun$4."<init>":(Lakka/io/Tcp$SimpleWriteCommand;)V
      27: invokevirtual #42                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      30: return
}
