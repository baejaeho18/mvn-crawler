Compiled from "Mailbox.scala"
public class akka.dispatch.NonBlockingBoundedMailbox implements akka.dispatch.MailboxType, akka.dispatch.ProducesMessageQueue<akka.dispatch.BoundedNodeMessageQueue>, scala.Product, scala.Serializable {
  private final int capacity;

  public static scala.Option<java.lang.Object> unapply(akka.dispatch.NonBlockingBoundedMailbox);
    Code:
       0: getstatic     #25                 // Field akka/dispatch/NonBlockingBoundedMailbox$.MODULE$:Lakka/dispatch/NonBlockingBoundedMailbox$;
       3: aload_0
       4: invokevirtual #27                 // Method akka/dispatch/NonBlockingBoundedMailbox$.unapply:(Lakka/dispatch/NonBlockingBoundedMailbox;)Lscala/Option;
       7: areturn

  public static akka.dispatch.NonBlockingBoundedMailbox apply(int);
    Code:
       0: getstatic     #25                 // Field akka/dispatch/NonBlockingBoundedMailbox$.MODULE$:Lakka/dispatch/NonBlockingBoundedMailbox$;
       3: iload_0
       4: invokevirtual #31                 // Method akka/dispatch/NonBlockingBoundedMailbox$.apply:(I)Lakka/dispatch/NonBlockingBoundedMailbox;
       7: areturn

  public static <A> scala.Function1<java.lang.Object, A> andThen(scala.Function1<akka.dispatch.NonBlockingBoundedMailbox, A>);
    Code:
       0: getstatic     #25                 // Field akka/dispatch/NonBlockingBoundedMailbox$.MODULE$:Lakka/dispatch/NonBlockingBoundedMailbox$;
       3: aload_0
       4: invokevirtual #35                 // Method akka/dispatch/NonBlockingBoundedMailbox$.andThen:(Lscala/Function1;)Lscala/Function1;
       7: areturn

  public static <A> scala.Function1<A, akka.dispatch.NonBlockingBoundedMailbox> compose(scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #25                 // Field akka/dispatch/NonBlockingBoundedMailbox$.MODULE$:Lakka/dispatch/NonBlockingBoundedMailbox$;
       3: aload_0
       4: invokevirtual #38                 // Method akka/dispatch/NonBlockingBoundedMailbox$.compose:(Lscala/Function1;)Lscala/Function1;
       7: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #43                 // Field capacity:I
       4: ireturn

  public final akka.dispatch.MessageQueue create(scala.Option<akka.actor.ActorRef>, scala.Option<akka.actor.ActorSystem>);
    Code:
       0: new           #49                 // class akka/dispatch/BoundedNodeMessageQueue
       3: dup
       4: aload_0
       5: invokevirtual #51                 // Method capacity:()I
       8: invokespecial #55                 // Method akka/dispatch/BoundedNodeMessageQueue."<init>":(I)V
      11: areturn

  public akka.dispatch.NonBlockingBoundedMailbox copy(int);
    Code:
       0: new           #2                  // class akka/dispatch/NonBlockingBoundedMailbox
       3: dup
       4: iload_1
       5: invokespecial #60                 // Method "<init>":(I)V
       8: areturn

  public int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method capacity:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #65                 // String NonBlockingBoundedMailbox
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #70                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #76                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #79                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #82                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #51                 // Method capacity:()I
      39: invokestatic  #76                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      42: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #90                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #94                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/dispatch/NonBlockingBoundedMailbox
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #99                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #51                 // Method capacity:()I
       8: invokestatic  #105                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: iconst_1
      14: invokestatic  #108                // Method scala/runtime/Statics.finalizeHash:(II)I
      17: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #90                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #112                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     60
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/dispatch/NonBlockingBoundedMailbox
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          64
      25: aload_1
      26: checkcast     #2                  // class akka/dispatch/NonBlockingBoundedMailbox
      29: astore        4
      31: aload_0
      32: invokevirtual #51                 // Method capacity:()I
      35: aload         4
      37: invokevirtual #51                 // Method capacity:()I
      40: if_icmpne     56
      43: aload         4
      45: aload_0
      46: invokevirtual #115                // Method canEqual:(Ljava/lang/Object;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public akka.dispatch.NonBlockingBoundedMailbox(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field capacity:I
       5: aload_0
       6: invokespecial #118                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #124                // Method scala/Product$class.$init$:(Lscala/Product;)V
      13: iload_1
      14: iconst_0
      15: if_icmpge     28
      18: new           #126                // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #128                // String The capacity for NonBlockingBoundedMailbox can not be negative
      24: invokespecial #129                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  public akka.dispatch.NonBlockingBoundedMailbox(akka.actor.ActorSystem$Settings, com.typesafe.config.Config);
    Code:
       0: aload_0
       1: aload_2
       2: ldc           #132                // String mailbox-capacity
       4: invokeinterface #138,  2          // InterfaceMethod com/typesafe/config/Config.getInt:(Ljava/lang/String;)I
       9: invokespecial #60                 // Method "<init>":(I)V
      12: return
}
