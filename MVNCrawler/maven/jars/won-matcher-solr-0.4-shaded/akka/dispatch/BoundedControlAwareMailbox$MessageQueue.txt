Compiled from "Mailbox.scala"
public class akka.dispatch.BoundedControlAwareMailbox$MessageQueue implements akka.dispatch.BoundedControlAwareMessageQueueSemantics,java.io.Serializable {
  private final int capacity;

  private final scala.concurrent.duration.FiniteDuration pushTimeOut;

  private final java.util.concurrent.atomic.AtomicInteger size;

  private final java.util.concurrent.locks.ReentrantLock putLock;

  private final java.util.concurrent.locks.Condition notFull;

  private final java.util.concurrent.ConcurrentLinkedQueue<akka.dispatch.Envelope> controlQueue;

  private final java.util.concurrent.ConcurrentLinkedQueue<akka.dispatch.Envelope> queue;

  public void cleanUp(akka.actor.ActorRef, akka.dispatch.MessageQueue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // Method akka/dispatch/QueueBasedMessageQueue$class.cleanUp:(Lakka/dispatch/QueueBasedMessageQueue;Lakka/actor/ActorRef;Lakka/dispatch/MessageQueue;)V
       6: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #39                 // Field capacity:I
       4: ireturn

  public scala.concurrent.duration.FiniteDuration pushTimeOut();
    Code:
       0: aload_0
       1: getfield      #42                 // Field pushTimeOut:Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  private final java.util.concurrent.atomic.AtomicInteger size();
    Code:
       0: aload_0
       1: getfield      #45                 // Field size:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  private final java.util.concurrent.locks.ReentrantLock putLock();
    Code:
       0: aload_0
       1: getfield      #48                 // Field putLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: areturn

  private final java.util.concurrent.locks.Condition notFull();
    Code:
       0: aload_0
       1: getfield      #51                 // Field notFull:Ljava/util/concurrent/locks/Condition;
       4: areturn

  public java.util.concurrent.ConcurrentLinkedQueue<akka.dispatch.Envelope> controlQueue();
    Code:
       0: aload_0
       1: getfield      #54                 // Field controlQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: areturn

  public java.util.concurrent.ConcurrentLinkedQueue<akka.dispatch.Envelope> queue();
    Code:
       0: aload_0
       1: getfield      #56                 // Field queue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: areturn

  public void enqueue(akka.actor.ActorRef, akka.dispatch.Envelope);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: ifnull        34
       6: aload_3
       7: invokevirtual #64                 // Method akka/dispatch/Envelope.message:()Ljava/lang/Object;
      10: instanceof    #66                 // class akka/dispatch/ControlMessage
      13: ifeq          34
      16: aload_0
      17: aload_0
      18: invokevirtual #68                 // Method controlQueue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
      21: aload_1
      22: aload_3
      23: invokespecial #72                 // Method enqueueWithTimeout:(Ljava/util/Queue;Lakka/actor/ActorRef;Lakka/dispatch/Envelope;)V
      26: getstatic     #78                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      29: astore        4
      31: goto          49
      34: aload_0
      35: aload_0
      36: invokevirtual #80                 // Method queue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
      39: aload_1
      40: aload_3
      41: invokespecial #72                 // Method enqueueWithTimeout:(Ljava/util/Queue;Lakka/actor/ActorRef;Lakka/dispatch/Envelope;)V
      44: getstatic     #78                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      47: astore        4
      49: return

  public int numberOfMessages();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method size:()Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public boolean hasMessages();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method numberOfMessages:()I
       4: iconst_0
       5: if_icmple     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final akka.dispatch.Envelope dequeue();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method size:()Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_2
       8: iload_2
       9: iconst_0
      10: if_icmple     54
      13: aload_0
      14: invokespecial #86                 // Method size:()Ljava/util/concurrent/atomic/AtomicInteger;
      17: iload_2
      18: iload_2
      19: iconst_1
      20: isub
      21: invokevirtual #101                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      24: ifeq          0
      27: aload_0
      28: invokestatic  #106                // Method akka/dispatch/ControlAwareMessageQueueSemantics$class.dequeue:(Lakka/dispatch/ControlAwareMessageQueueSemantics;)Lakka/dispatch/Envelope;
      31: astore_3
      32: aload_0
      33: invokespecial #86                 // Method size:()Ljava/util/concurrent/atomic/AtomicInteger;
      36: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      39: aload_0
      40: invokevirtual #108                // Method capacity:()I
      43: if_icmpge     50
      46: aload_0
      47: invokespecial #112                // Method signalNotFull:()V
      50: aload_3
      51: goto          55
      54: aconst_null
      55: areturn

  private void signalNotFull();
    Code:
       0: aload_0
       1: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #121                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #123                // Method notFull:()Ljava/util/concurrent/locks/Condition;
      11: invokeinterface #128,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      16: aload_0
      17: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: return
      24: astore_1
      25: aload_0
      26: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
      29: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      32: aload_1
      33: athrow
    Exception table:
       from    to  target type
           7    16    24   any

  private final void enqueueWithTimeout(java.util.Queue<akka.dispatch.Envelope>, akka.actor.ActorRef, akka.dispatch.Envelope);
    Code:
       0: aload_0
       1: invokevirtual #135                // Method pushTimeOut:()Lscala/concurrent/duration/FiniteDuration;
       4: invokevirtual #141                // Method scala/concurrent/duration/FiniteDuration.toNanos:()J
       7: lstore        4
       9: aload_0
      10: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
      13: invokevirtual #144                // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      16: iconst_0
      17: istore        8
      19: aload_0
      20: invokespecial #86                 // Method size:()Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      26: aload_0
      27: invokevirtual #108                // Method capacity:()I
      30: if_icmpne     68
      33: iload         8
      35: ifne          68
      38: aload_0
      39: invokespecial #123                // Method notFull:()Ljava/util/concurrent/locks/Condition;
      42: lload         4
      44: invokeinterface #148,  3          // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      49: lstore        4
      51: lload         4
      53: lconst_0
      54: lcmp
      55: ifgt          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: istore        8
      65: goto          19
      68: iload         8
      70: ifeq          77
      73: iconst_0
      74: goto          113
      77: aload_1
      78: aload_3
      79: invokeinterface #154,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: invokespecial #86                 // Method size:()Ljava/util/concurrent/atomic/AtomicInteger;
      89: invokevirtual #157                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      92: istore        9
      94: iload         9
      96: aload_0
      97: invokevirtual #108                // Method capacity:()I
     100: if_icmpge     112
     103: aload_0
     104: invokespecial #123                // Method notFull:()Ljava/util/concurrent/locks/Condition;
     107: invokeinterface #128,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
     112: iconst_1
     113: aload_0
     114: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
     117: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     120: istore        6
     122: iload         6
     124: ifne          162
     127: aload_2
     128: checkcast     #159                // class akka/actor/InternalActorRef
     131: invokevirtual #163                // Method akka/actor/InternalActorRef.provider:()Lakka/actor/ActorRefProvider;
     134: invokeinterface #168,  1          // InterfaceMethod akka/actor/ActorRefProvider.deadLetters:()Lakka/actor/ActorRef;
     139: new           #170                // class akka/actor/DeadLetter
     142: dup
     143: aload_3
     144: invokevirtual #64                 // Method akka/dispatch/Envelope.message:()Ljava/lang/Object;
     147: aload_3
     148: invokevirtual #173                // Method akka/dispatch/Envelope.sender:()Lakka/actor/ActorRef;
     151: aload_2
     152: invokespecial #177                // Method akka/actor/DeadLetter."<init>":(Ljava/lang/Object;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)V
     155: aload_3
     156: invokevirtual #173                // Method akka/dispatch/Envelope.sender:()Lakka/actor/ActorRef;
     159: invokevirtual #183                // Method akka/actor/ActorRef.tell:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     162: return
     163: astore        7
     165: aload_0
     166: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
     169: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     172: aload         7
     174: athrow
    Exception table:
       from    to  target type
          16   113   163   any

  public java.util.Queue queue();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method queue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: areturn

  public java.util.Queue controlQueue();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method controlQueue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: areturn

  public scala.concurrent.duration.Duration pushTimeOut();
    Code:
       0: aload_0
       1: invokevirtual #135                // Method pushTimeOut:()Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public akka.dispatch.BoundedControlAwareMailbox$MessageQueue(int, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field capacity:I
       5: aload_0
       6: aload_2
       7: putfield      #42                 // Field pushTimeOut:Lscala/concurrent/duration/FiniteDuration;
      10: aload_0
      11: invokespecial #197                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #201                // Method akka/dispatch/QueueBasedMessageQueue$class.$init$:(Lakka/dispatch/QueueBasedMessageQueue;)V
      18: aload_0
      19: invokestatic  #204                // Method akka/dispatch/ControlAwareMessageQueueSemantics$class.$init$:(Lakka/dispatch/ControlAwareMessageQueueSemantics;)V
      22: aload_0
      23: new           #88                 // class java/util/concurrent/atomic/AtomicInteger
      26: dup
      27: iconst_0
      28: invokespecial #207                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      31: putfield      #45                 // Field size:Ljava/util/concurrent/atomic/AtomicInteger;
      34: aload_0
      35: new           #118                // class java/util/concurrent/locks/ReentrantLock
      38: dup
      39: invokespecial #208                // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      42: putfield      #48                 // Field putLock:Ljava/util/concurrent/locks/ReentrantLock;
      45: aload_0
      46: aload_0
      47: invokespecial #116                // Method putLock:()Ljava/util/concurrent/locks/ReentrantLock;
      50: invokevirtual #211                // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      53: putfield      #51                 // Field notFull:Ljava/util/concurrent/locks/Condition;
      56: aload_0
      57: new           #213                // class java/util/concurrent/ConcurrentLinkedQueue
      60: dup
      61: invokespecial #214                // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      64: putfield      #54                 // Field controlQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      67: aload_0
      68: new           #213                // class java/util/concurrent/ConcurrentLinkedQueue
      71: dup
      72: invokespecial #214                // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      75: putfield      #56                 // Field queue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      78: return
}
