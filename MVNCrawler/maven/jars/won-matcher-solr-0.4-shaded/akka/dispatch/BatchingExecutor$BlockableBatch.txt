Compiled from "BatchingExecutor.scala"
public final class akka.dispatch.BatchingExecutor$BlockableBatch extends akka.dispatch.BatchingExecutor$AbstractBatch implements scala.concurrent.BlockContext {
  public final void run();
    Code:
       0: getstatic     #15                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #19                 // Method akka$dispatch$BatchingExecutor$BlockableBatch$$$outer:()Lakka/dispatch/BatchingExecutor;
       7: invokeinterface #25,  1           // InterfaceMethod akka/dispatch/BatchingExecutor.akka$dispatch$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
      12: invokevirtual #31                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      15: ifnonnull     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokevirtual #35                 // Method scala/Predef$.require:(Z)V
      26: aload_0
      27: invokevirtual #19                 // Method akka$dispatch$BatchingExecutor$BlockableBatch$$$outer:()Lakka/dispatch/BatchingExecutor;
      30: invokeinterface #25,  1           // InterfaceMethod akka/dispatch/BatchingExecutor.akka$dispatch$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
      35: aload_0
      36: invokevirtual #39                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      39: aload_0
      40: invokevirtual #19                 // Method akka$dispatch$BatchingExecutor$BlockableBatch$$$outer:()Lakka/dispatch/BatchingExecutor;
      43: invokeinterface #42,  1           // InterfaceMethod akka/dispatch/BatchingExecutor.akka$dispatch$BatchingExecutor$$_blockContext:()Ljava/lang/ThreadLocal;
      48: invokevirtual #31                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      51: ifnonnull     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: istore_1
      60: iload_1
      61: ifeq          82
      64: aload_0
      65: invokevirtual #19                 // Method akka$dispatch$BatchingExecutor$BlockableBatch$$$outer:()Lakka/dispatch/BatchingExecutor;
      68: invokeinterface #42,  1           // InterfaceMethod akka/dispatch/BatchingExecutor.akka$dispatch$BatchingExecutor$$_blockContext:()Ljava/lang/ThreadLocal;
      73: getstatic     #47                 // Field scala/concurrent/BlockContext$.MODULE$:Lscala/concurrent/BlockContext$;
      76: invokevirtual #51                 // Method scala/concurrent/BlockContext$.current:()Lscala/concurrent/BlockContext;
      79: invokevirtual #39                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      82: getstatic     #47                 // Field scala/concurrent/BlockContext$.MODULE$:Lscala/concurrent/BlockContext$;
      85: aload_0
      86: new           #53                 // class akka/dispatch/BatchingExecutor$BlockableBatch$$anonfun$run$1
      89: dup
      90: aload_0
      91: iload_1
      92: invokespecial #57                 // Method akka/dispatch/BatchingExecutor$BlockableBatch$$anonfun$run$1."<init>":(Lakka/dispatch/BatchingExecutor$BlockableBatch;Z)V
      95: invokevirtual #61                 // Method scala/concurrent/BlockContext$.withBlockContext:(Lscala/concurrent/BlockContext;Lscala/Function0;)Ljava/lang/Object;
      98: pop
      99: return

  public <T> T blockOn(scala.Function0<T>, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method resubmitUnbatched:()Z
       4: pop
       5: aload_0
       6: invokevirtual #19                 // Method akka$dispatch$BatchingExecutor$BlockableBatch$$$outer:()Lakka/dispatch/BatchingExecutor;
       9: invokeinterface #42,  1           // InterfaceMethod akka/dispatch/BatchingExecutor.akka$dispatch$BatchingExecutor$$_blockContext:()Ljava/lang/ThreadLocal;
      14: invokevirtual #31                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      17: checkcast     #6                  // class scala/concurrent/BlockContext
      20: aload_1
      21: aload_2
      22: invokeinterface #73,  3           // InterfaceMethod scala/concurrent/BlockContext.blockOn:(Lscala/Function0;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
      27: areturn

  public akka.dispatch.BatchingExecutor akka$dispatch$BatchingExecutor$BlockableBatch$$$outer();
    Code:
       0: aload_0
       1: getfield      #81                 // Field $outer:Lakka/dispatch/BatchingExecutor;
       4: areturn

  public akka.dispatch.BatchingExecutor$BlockableBatch(akka.dispatch.BatchingExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #84                 // Method akka/dispatch/BatchingExecutor$AbstractBatch."<init>":(Lakka/dispatch/BatchingExecutor;)V
       5: return
}
