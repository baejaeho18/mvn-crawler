Compiled from "ThreadPoolBuilder.scala"
public final class akka.dispatch.ThreadPoolConfig$$anonfun$arrayBlockingQueue$1 extends scala.runtime.AbstractFunction0<java.util.concurrent.ArrayBlockingQueue<java.lang.Runnable>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final int capacity$1;

  private final boolean fair$1;

  public final java.util.concurrent.ArrayBlockingQueue<java.lang.Runnable> apply();
    Code:
       0: new           #25                 // class java/util/concurrent/ArrayBlockingQueue
       3: dup
       4: aload_0
       5: getfield      #27                 // Field capacity$1:I
       8: aload_0
       9: getfield      #29                 // Field fair$1:Z
      12: invokespecial #33                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(IZ)V
      15: areturn

  public final java.lang.Object apply();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method apply:()Ljava/util/concurrent/ArrayBlockingQueue;
       4: areturn

  public akka.dispatch.ThreadPoolConfig$$anonfun$arrayBlockingQueue$1(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field capacity$1:I
       5: aload_0
       6: iload_2
       7: putfield      #29                 // Field fair$1:Z
      10: aload_0
      11: invokespecial #41                 // Method scala/runtime/AbstractFunction0."<init>":()V
      14: return
}
