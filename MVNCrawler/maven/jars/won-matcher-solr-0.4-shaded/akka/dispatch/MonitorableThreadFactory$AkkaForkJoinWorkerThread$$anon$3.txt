Compiled from "ThreadPoolBuilder.scala"
public final class akka.dispatch.MonitorableThreadFactory$AkkaForkJoinWorkerThread$$anon$3 implements scala.concurrent.forkjoin.ForkJoinPool$ManagedBlocker {
  private final scala.Function0 thunk$1;

  private final java.util.concurrent.atomic.AtomicReference result$1;

  public boolean block();
    Code:
       0: aload_0
       1: getfield      #20                 // Field result$1:Ljava/util/concurrent/atomic/AtomicReference;
       4: new           #22                 // class scala/Some
       7: dup
       8: aload_0
       9: getfield      #24                 // Field thunk$1:Lscala/Function0;
      12: invokeinterface #30,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: invokespecial #34                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      23: iconst_1
      24: ireturn

  public boolean isReleasable();
    Code:
       0: aload_0
       1: getfield      #20                 // Field result$1:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #47                 // class scala/Option
      10: invokevirtual #50                 // Method scala/Option.isDefined:()Z
      13: ireturn

  public akka.dispatch.MonitorableThreadFactory$AkkaForkJoinWorkerThread$$anon$3(akka.dispatch.MonitorableThreadFactory$AkkaForkJoinWorkerThread, scala.Function0, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #24                 // Field thunk$1:Lscala/Function0;
       5: aload_0
       6: aload_3
       7: putfield      #20                 // Field result$1:Ljava/util/concurrent/atomic/AtomicReference;
      10: aload_0
      11: invokespecial #54                 // Method java/lang/Object."<init>":()V
      14: return
}
