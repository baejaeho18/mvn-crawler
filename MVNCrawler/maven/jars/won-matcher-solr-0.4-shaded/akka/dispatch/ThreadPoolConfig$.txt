Compiled from "ThreadPoolBuilder.scala"
public final class akka.dispatch.ThreadPoolConfig$ implements scala.Serializable {
  public static final akka.dispatch.ThreadPoolConfig$ MODULE$;

  private final boolean defaultAllowCoreThreadTimeout;

  private final int defaultCorePoolSize;

  private final int defaultMaxPoolSize;

  private final scala.concurrent.duration.Duration defaultTimeout;

  private final java.util.concurrent.RejectedExecutionHandler defaultRejectionPolicy;

  public static {};
    Code:
       0: new           #2                  // class akka/dispatch/ThreadPoolConfig$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public boolean defaultAllowCoreThreadTimeout();
    Code:
       0: aload_0
       1: getfield      #26                 // Field defaultAllowCoreThreadTimeout:Z
       4: ireturn

  public int defaultCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #30                 // Field defaultCorePoolSize:I
       4: ireturn

  public int defaultMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #32                 // Field defaultMaxPoolSize:I
       4: ireturn

  public scala.concurrent.duration.Duration defaultTimeout();
    Code:
       0: aload_0
       1: getfield      #35                 // Field defaultTimeout:Lscala/concurrent/duration/Duration;
       4: areturn

  public java.util.concurrent.RejectedExecutionHandler defaultRejectionPolicy();
    Code:
       0: aload_0
       1: getfield      #38                 // Field defaultRejectionPolicy:Ljava/util/concurrent/RejectedExecutionHandler;
       4: areturn

  public int scaledPoolSize(int, double, int);
    Code:
       0: getstatic     #45                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: getstatic     #45                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       6: getstatic     #50                 // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
       9: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: invokestatic  #61                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      15: invokevirtual #64                 // Method java/lang/Runtime.availableProcessors:()I
      18: i2d
      19: dload_2
      20: dmul
      21: invokevirtual #68                 // Method scala/Predef$.doubleWrapper:(D)D
      24: invokevirtual #71                 // Method scala/runtime/RichDouble$.ceil$extension:(D)D
      27: d2i
      28: iload_1
      29: invokevirtual #75                 // Method scala/math/package$.max:(II)I
      32: iload         4
      34: invokevirtual #78                 // Method scala/math/package$.min:(II)I
      37: ireturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> arrayBlockingQueue(int, boolean);
    Code:
       0: new           #86                 // class akka/dispatch/ThreadPoolConfig$$anonfun$arrayBlockingQueue$1
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #89                 // Method akka/dispatch/ThreadPoolConfig$$anonfun$arrayBlockingQueue$1."<init>":(IZ)V
       9: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> synchronousQueue(boolean);
    Code:
       0: new           #95                 // class akka/dispatch/ThreadPoolConfig$$anonfun$synchronousQueue$1
       3: dup
       4: iload_1
       5: invokespecial #98                 // Method akka/dispatch/ThreadPoolConfig$$anonfun$synchronousQueue$1."<init>":(Z)V
       8: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> linkedBlockingQueue();
    Code:
       0: new           #102                // class akka/dispatch/ThreadPoolConfig$$anonfun$linkedBlockingQueue$1
       3: dup
       4: invokespecial #103                // Method akka/dispatch/ThreadPoolConfig$$anonfun$linkedBlockingQueue$1."<init>":()V
       7: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> linkedBlockingQueue(int);
    Code:
       0: new           #106                // class akka/dispatch/ThreadPoolConfig$$anonfun$linkedBlockingQueue$2
       3: dup
       4: iload_1
       5: invokespecial #109                // Method akka/dispatch/ThreadPoolConfig$$anonfun$linkedBlockingQueue$2."<init>":(I)V
       8: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> reusableQueue(java.util.concurrent.BlockingQueue<java.lang.Runnable>);
    Code:
       0: new           #113                // class akka/dispatch/ThreadPoolConfig$$anonfun$reusableQueue$1
       3: dup
       4: aload_1
       5: invokespecial #116                // Method akka/dispatch/ThreadPoolConfig$$anonfun$reusableQueue$1."<init>":(Ljava/util/concurrent/BlockingQueue;)V
       8: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> reusableQueue(scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #125,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #127                // class java/util/concurrent/BlockingQueue
      10: invokevirtual #129                // Method reusableQueue:(Ljava/util/concurrent/BlockingQueue;)Lscala/Function0;
      13: areturn

  public akka.dispatch.ThreadPoolConfig apply(boolean, int, int, scala.concurrent.duration.Duration, scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>>, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: new           #134                // class akka/dispatch/ThreadPoolConfig
       3: dup
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokespecial #137                // Method akka/dispatch/ThreadPoolConfig."<init>":(ZIILscala/concurrent/duration/Duration;Lscala/Function0;Ljava/util/concurrent/RejectedExecutionHandler;)V
      16: areturn

  public scala.Option<scala.Tuple6<java.lang.Object, java.lang.Object, java.lang.Object, scala.concurrent.duration.Duration, scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>>, java.util.concurrent.RejectedExecutionHandler>> unapply(akka.dispatch.ThreadPoolConfig);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #149                // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          57
      10: new           #151                // class scala/Some
      13: dup
      14: new           #153                // class scala/Tuple6
      17: dup
      18: aload_1
      19: invokevirtual #155                // Method akka/dispatch/ThreadPoolConfig.allowCorePoolTimeout:()Z
      22: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      25: aload_1
      26: invokevirtual #163                // Method akka/dispatch/ThreadPoolConfig.corePoolSize:()I
      29: invokestatic  #167                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: aload_1
      33: invokevirtual #169                // Method akka/dispatch/ThreadPoolConfig.maxPoolSize:()I
      36: invokestatic  #167                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      39: aload_1
      40: invokevirtual #171                // Method akka/dispatch/ThreadPoolConfig.threadTimeout:()Lscala/concurrent/duration/Duration;
      43: aload_1
      44: invokevirtual #173                // Method akka/dispatch/ThreadPoolConfig.queueFactory:()Lscala/Function0;
      47: aload_1
      48: invokevirtual #175                // Method akka/dispatch/ThreadPoolConfig.rejectionPolicy:()Ljava/util/concurrent/RejectedExecutionHandler;
      51: invokespecial #178                // Method scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      54: invokespecial #181                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      57: areturn

  public boolean apply$default$1();
    Code:
       0: aload_0
       1: invokevirtual #188                // Method defaultAllowCoreThreadTimeout:()Z
       4: ireturn

  public int apply$default$2();
    Code:
       0: aload_0
       1: invokevirtual #191                // Method defaultCorePoolSize:()I
       4: ireturn

  public int apply$default$3();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method defaultMaxPoolSize:()I
       4: ireturn

  public scala.concurrent.duration.Duration apply$default$4();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method defaultTimeout:()Lscala/concurrent/duration/Duration;
       4: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> apply$default$5();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method linkedBlockingQueue:()Lscala/Function0;
       4: areturn

  public java.util.concurrent.RejectedExecutionHandler apply$default$6();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method defaultRejectionPolicy:()Ljava/util/concurrent/RejectedExecutionHandler;
       4: areturn

  public boolean $lessinit$greater$default$1();
    Code:
       0: aload_0
       1: invokevirtual #188                // Method defaultAllowCoreThreadTimeout:()Z
       4: ireturn

  public int $lessinit$greater$default$2();
    Code:
       0: aload_0
       1: invokevirtual #191                // Method defaultCorePoolSize:()I
       4: ireturn

  public int $lessinit$greater$default$3();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method defaultMaxPoolSize:()I
       4: ireturn

  public scala.concurrent.duration.Duration $lessinit$greater$default$4();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method defaultTimeout:()Lscala/concurrent/duration/Duration;
       4: areturn

  public scala.Function0<java.util.concurrent.BlockingQueue<java.lang.Runnable>> $lessinit$greater$default$5();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method linkedBlockingQueue:()Lscala/Function0;
       4: areturn

  public java.util.concurrent.RejectedExecutionHandler $lessinit$greater$default$6();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method defaultRejectionPolicy:()Ljava/util/concurrent/RejectedExecutionHandler;
       4: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #212                // Field MODULE$:Lakka/dispatch/ThreadPoolConfig$;
       3: areturn

  private akka.dispatch.ThreadPoolConfig$();
    Code:
       0: aload_0
       1: invokespecial #213                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #212                // Field MODULE$:Lakka/dispatch/ThreadPoolConfig$;
       8: aload_0
       9: iconst_0
      10: putfield      #26                 // Field defaultAllowCoreThreadTimeout:Z
      13: aload_0
      14: bipush        16
      16: putfield      #30                 // Field defaultCorePoolSize:I
      19: aload_0
      20: sipush        128
      23: putfield      #32                 // Field defaultMaxPoolSize:I
      26: aload_0
      27: getstatic     #218                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
      30: ldc2_w        #219                // long 60000l
      33: getstatic     #226                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokevirtual #229                // Method scala/concurrent/duration/Duration$.apply:(JLjava/util/concurrent/TimeUnit;)Lscala/concurrent/duration/FiniteDuration;
      39: putfield      #35                 // Field defaultTimeout:Lscala/concurrent/duration/Duration;
      42: aload_0
      43: new           #231                // class akka/dispatch/SaneRejectedExecutionHandler
      46: dup
      47: invokespecial #232                // Method akka/dispatch/SaneRejectedExecutionHandler."<init>":()V
      50: putfield      #38                 // Field defaultRejectionPolicy:Ljava/util/concurrent/RejectedExecutionHandler;
      53: return
}
