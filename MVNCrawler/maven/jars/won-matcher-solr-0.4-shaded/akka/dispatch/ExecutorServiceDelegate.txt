Compiled from "ThreadPoolBuilder.scala"
public interface akka.dispatch.ExecutorServiceDelegate extends java.util.concurrent.ExecutorService {
  public abstract java.util.concurrent.ExecutorService executor();

  public abstract void execute(java.lang.Runnable);

  public abstract void shutdown();

  public abstract java.util.List<java.lang.Runnable> shutdownNow();

  public abstract boolean isShutdown();

  public abstract boolean isTerminated();

  public abstract boolean awaitTermination(long, java.util.concurrent.TimeUnit);

  public abstract <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);

  public abstract <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);

  public abstract java.util.concurrent.Future<?> submit(java.lang.Runnable);

  public abstract <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>);

  public abstract <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit);

  public abstract <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>);

  public abstract <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit);
}
