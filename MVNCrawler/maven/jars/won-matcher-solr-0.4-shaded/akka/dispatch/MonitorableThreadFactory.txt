Compiled from "ThreadPoolBuilder.scala"
public final class akka.dispatch.MonitorableThreadFactory implements java.util.concurrent.ThreadFactory,scala.concurrent.forkjoin.ForkJoinPool$ForkJoinWorkerThreadFactory,scala.Product,scala.Serializable {
  private final java.lang.String name;

  private final boolean daemonic;

  private final scala.Option<java.lang.ClassLoader> contextClassLoader;

  private final java.lang.Thread$UncaughtExceptionHandler exceptionHandler;

  private final java.util.concurrent.atomic.AtomicLong counter;

  public static java.util.concurrent.atomic.AtomicLong $lessinit$greater$default$5();
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: invokevirtual #26                 // Method akka/dispatch/MonitorableThreadFactory$.$lessinit$greater$default$5:()Ljava/util/concurrent/atomic/AtomicLong;
       6: areturn

  public static java.lang.Thread$UncaughtExceptionHandler $lessinit$greater$default$4();
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: invokevirtual #30                 // Method akka/dispatch/MonitorableThreadFactory$.$lessinit$greater$default$4:()Ljava/lang/Thread$UncaughtExceptionHandler;
       6: areturn

  public static java.util.concurrent.atomic.AtomicLong apply$default$5();
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: invokevirtual #33                 // Method akka/dispatch/MonitorableThreadFactory$.apply$default$5:()Ljava/util/concurrent/atomic/AtomicLong;
       6: areturn

  public static java.lang.Thread$UncaughtExceptionHandler apply$default$4();
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: invokevirtual #36                 // Method akka/dispatch/MonitorableThreadFactory$.apply$default$4:()Ljava/lang/Thread$UncaughtExceptionHandler;
       6: areturn

  public static scala.Option<scala.Tuple5<java.lang.String, java.lang.Object, scala.Option<java.lang.ClassLoader>, java.lang.Thread$UncaughtExceptionHandler, java.util.concurrent.atomic.AtomicLong>> unapply(akka.dispatch.MonitorableThreadFactory);
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: aload_0
       4: invokevirtual #40                 // Method akka/dispatch/MonitorableThreadFactory$.unapply:(Lakka/dispatch/MonitorableThreadFactory;)Lscala/Option;
       7: areturn

  public static akka.dispatch.MonitorableThreadFactory apply(java.lang.String, boolean, scala.Option<java.lang.ClassLoader>, java.lang.Thread$UncaughtExceptionHandler, java.util.concurrent.atomic.AtomicLong);
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #44                 // Method akka/dispatch/MonitorableThreadFactory$.apply:(Ljava/lang/String;ZLscala/Option;Ljava/lang/Thread$UncaughtExceptionHandler;Ljava/util/concurrent/atomic/AtomicLong;)Lakka/dispatch/MonitorableThreadFactory;
      12: areturn

  public static java.lang.Thread$UncaughtExceptionHandler doNothing();
    Code:
       0: getstatic     #24                 // Field akka/dispatch/MonitorableThreadFactory$.MODULE$:Lakka/dispatch/MonitorableThreadFactory$;
       3: invokevirtual #47                 // Method akka/dispatch/MonitorableThreadFactory$.doNothing:()Ljava/lang/Thread$UncaughtExceptionHandler;
       6: areturn

  public java.util.concurrent.atomic.AtomicLong counter$1();
    Code:
       0: aload_0
       1: getfield      #61                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #66                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean daemonic();
    Code:
       0: aload_0
       1: getfield      #69                 // Field daemonic:Z
       4: ireturn

  public scala.Option<java.lang.ClassLoader> contextClassLoader();
    Code:
       0: aload_0
       1: getfield      #72                 // Field contextClassLoader:Lscala/Option;
       4: areturn

  public java.lang.Thread$UncaughtExceptionHandler exceptionHandler();
    Code:
       0: aload_0
       1: getfield      #74                 // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
       4: areturn

  public java.util.concurrent.atomic.AtomicLong counter();
    Code:
       0: aload_0
       1: getfield      #61                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  public scala.concurrent.forkjoin.ForkJoinWorkerThread newThread(scala.concurrent.forkjoin.ForkJoinPool);
    Code:
       0: aload_0
       1: new           #78                 // class akka/dispatch/MonitorableThreadFactory$AkkaForkJoinWorkerThread
       4: dup
       5: aload_1
       6: invokespecial #82                 // Method akka/dispatch/MonitorableThreadFactory$AkkaForkJoinWorkerThread."<init>":(Lscala/concurrent/forkjoin/ForkJoinPool;)V
       9: invokevirtual #86                 // Method wire:(Ljava/lang/Thread;)Ljava/lang/Thread;
      12: checkcast     #78                 // class akka/dispatch/MonitorableThreadFactory$AkkaForkJoinWorkerThread
      15: astore_2
      16: aload_2
      17: new           #88                 // class scala/collection/mutable/StringBuilder
      20: dup
      21: invokespecial #91                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      24: aload_0
      25: invokevirtual #93                 // Method name:()Ljava/lang/String;
      28: invokevirtual #97                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      31: ldc           #99                 // String -
      33: invokevirtual #97                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      36: aload_0
      37: invokevirtual #101                // Method counter:()Ljava/util/concurrent/atomic/AtomicLong;
      40: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      43: invokestatic  #113                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      46: invokevirtual #97                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      49: invokevirtual #116                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      52: invokevirtual #120                // Method akka/dispatch/MonitorableThreadFactory$AkkaForkJoinWorkerThread.setName:(Ljava/lang/String;)V
      55: aload_2
      56: areturn

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: new           #127                // class java/lang/Thread
       4: dup
       5: aload_1
       6: new           #88                 // class scala/collection/mutable/StringBuilder
       9: dup
      10: invokespecial #91                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      13: aload_0
      14: invokevirtual #93                 // Method name:()Ljava/lang/String;
      17: invokevirtual #97                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      20: ldc           #99                 // String -
      22: invokevirtual #97                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      25: aload_0
      26: invokevirtual #101                // Method counter:()Ljava/util/concurrent/atomic/AtomicLong;
      29: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      32: invokestatic  #113                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      35: invokevirtual #97                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      38: invokevirtual #116                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #130                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      44: invokevirtual #86                 // Method wire:(Ljava/lang/Thread;)Ljava/lang/Thread;
      47: areturn

  public akka.dispatch.MonitorableThreadFactory withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #137                // Method copy$default$2:()Z
       6: aload_0
       7: invokevirtual #140                // Method copy$default$3:()Lscala/Option;
      10: aload_0
      11: invokevirtual #143                // Method copy$default$4:()Ljava/lang/Thread$UncaughtExceptionHandler;
      14: aload_0
      15: invokevirtual #146                // Method copy$default$5:()Ljava/util/concurrent/atomic/AtomicLong;
      18: invokevirtual #149                // Method copy:(Ljava/lang/String;ZLscala/Option;Ljava/lang/Thread$UncaughtExceptionHandler;Ljava/util/concurrent/atomic/AtomicLong;)Lakka/dispatch/MonitorableThreadFactory;
      21: areturn

  public <T extends java.lang.Thread> T wire(T);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #152                // Method exceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
       5: invokevirtual #156                // Method java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #158                // Method daemonic:()Z
      13: invokevirtual #162                // Method java/lang/Thread.setDaemon:(Z)V
      16: aload_0
      17: invokevirtual #164                // Method contextClassLoader:()Lscala/Option;
      20: new           #166                // class akka/dispatch/MonitorableThreadFactory$$anonfun$wire$1
      23: dup
      24: aload_0
      25: aload_1
      26: invokespecial #169                // Method akka/dispatch/MonitorableThreadFactory$$anonfun$wire$1."<init>":(Lakka/dispatch/MonitorableThreadFactory;Ljava/lang/Thread;)V
      29: invokevirtual #175                // Method scala/Option.foreach:(Lscala/Function1;)V
      32: aload_1
      33: areturn

  public akka.dispatch.MonitorableThreadFactory copy(java.lang.String, boolean, scala.Option<java.lang.ClassLoader>, java.lang.Thread$UncaughtExceptionHandler, java.util.concurrent.atomic.AtomicLong);
    Code:
       0: new           #2                  // class akka/dispatch/MonitorableThreadFactory
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokespecial #179                // Method "<init>":(Ljava/lang/String;ZLscala/Option;Ljava/lang/Thread$UncaughtExceptionHandler;Ljava/util/concurrent/atomic/AtomicLong;)V
      14: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method name:()Ljava/lang/String;
       4: areturn

  public boolean copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method daemonic:()Z
       4: ireturn

  public scala.Option<java.lang.ClassLoader> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method contextClassLoader:()Lscala/Option;
       4: areturn

  public java.lang.Thread$UncaughtExceptionHandler copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #152                // Method exceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
       4: areturn

  public java.util.concurrent.atomic.AtomicLong copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method counter:()Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #183                // String MonitorableThreadFactory
       2: areturn

  public int productArity();
    Code:
       0: iconst_5
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 4
                     0: 82
                     1: 72
                     2: 65
                     3: 58
                     4: 51
               default: 36
          }
      36: new           #189                // class java/lang/IndexOutOfBoundsException
      39: dup
      40: iload_1
      41: invokestatic  #193                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      44: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokespecial #196                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: invokevirtual #198                // Method counter$1:()Ljava/util/concurrent/atomic/AtomicLong;
      55: goto          86
      58: aload_0
      59: invokevirtual #152                // Method exceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      62: goto          86
      65: aload_0
      66: invokevirtual #164                // Method contextClassLoader:()Lscala/Option;
      69: goto          86
      72: aload_0
      73: invokevirtual #158                // Method daemonic:()Z
      76: invokestatic  #202                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      79: goto          86
      82: aload_0
      83: invokevirtual #93                 // Method name:()Ljava/lang/String;
      86: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/dispatch/MonitorableThreadFactory
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #220                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #93                 // Method name:()Ljava/lang/String;
       8: invokestatic  #226                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #230                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #158                // Method daemonic:()Z
      20: ifeq          29
      23: sipush        1231
      26: goto          32
      29: sipush        1237
      32: invokestatic  #230                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #164                // Method contextClassLoader:()Lscala/Option;
      41: invokestatic  #226                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      44: invokestatic  #230                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: aload_0
      50: invokevirtual #152                // Method exceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      53: invokestatic  #226                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      56: invokestatic  #230                // Method scala/runtime/Statics.mix:(II)I
      59: istore_1
      60: iload_1
      61: aload_0
      62: invokevirtual #198                // Method counter$1:()Ljava/util/concurrent/atomic/AtomicLong;
      65: invokestatic  #226                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      68: invokestatic  #230                // Method scala/runtime/Statics.mix:(II)I
      71: istore_1
      72: iload_1
      73: iconst_5
      74: invokestatic  #233                // Method scala/runtime/Statics.finalizeHash:(II)I
      77: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #237                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     162
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/dispatch/MonitorableThreadFactory
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          166
      25: aload_1
      26: checkcast     #2                  // class akka/dispatch/MonitorableThreadFactory
      29: astore        4
      31: aload_0
      32: invokevirtual #93                 // Method name:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #93                 // Method name:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          158
      55: aload         5
      57: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          158
      63: aload_0
      64: invokevirtual #158                // Method daemonic:()Z
      67: aload         4
      69: invokevirtual #158                // Method daemonic:()Z
      72: if_icmpne     158
      75: aload_0
      76: invokevirtual #164                // Method contextClassLoader:()Lscala/Option;
      79: aload         4
      81: invokevirtual #164                // Method contextClassLoader:()Lscala/Option;
      84: astore        6
      86: dup
      87: ifnonnull     99
      90: pop
      91: aload         6
      93: ifnull        107
      96: goto          158
      99: aload         6
     101: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifeq          158
     107: aload_0
     108: invokevirtual #152                // Method exceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
     111: aload         4
     113: invokevirtual #152                // Method exceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
     116: astore        7
     118: dup
     119: ifnonnull     131
     122: pop
     123: aload         7
     125: ifnull        139
     128: goto          158
     131: aload         7
     133: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     136: ifeq          158
     139: aload_0
     140: invokevirtual #198                // Method counter$1:()Ljava/util/concurrent/atomic/AtomicLong;
     143: aload         4
     145: invokevirtual #198                // Method counter$1:()Ljava/util/concurrent/atomic/AtomicLong;
     148: invokestatic  #244                // Method scala/runtime/BoxesRunTime.equalsNumNum:(Ljava/lang/Number;Ljava/lang/Number;)Z
     151: ifeq          158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: ifeq          166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: ireturn

  public akka.dispatch.MonitorableThreadFactory(java.lang.String, boolean, scala.Option<java.lang.ClassLoader>, java.lang.Thread$UncaughtExceptionHandler, java.util.concurrent.atomic.AtomicLong);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field name:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #69                 // Field daemonic:Z
      10: aload_0
      11: aload_3
      12: putfield      #72                 // Field contextClassLoader:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #74                 // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      21: aload_0
      22: aload         5
      24: putfield      #61                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      27: aload_0
      28: invokespecial #249                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #255                // Method scala/Product$class.$init$:(Lscala/Product;)V
      35: return
}
