Compiled from "ClusterDaemon.scala"
public final class akka.cluster.JoinSeedNodeProcess implements akka.actor.Actor,akka.actor.ActorLogging {
  public final scala.collection.immutable.IndexedSeq<akka.actor.Address> akka$cluster$JoinSeedNodeProcess$$seedNodes;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #24                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #38                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #41                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #87                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.actor.Address selfAddress();
    Code:
       0: getstatic     #111                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
       3: aload_0
       4: invokevirtual #113                // Method context:()Lakka/actor/ActorContext;
       7: invokeinterface #119,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      12: invokevirtual #123                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      15: checkcast     #125                // class akka/cluster/Cluster
      18: invokevirtual #127                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      21: areturn

  public void preStart();
    Code:
       0: getstatic     #133                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
       7: invokevirtual #139                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      10: getstatic     #144                // Field akka/cluster/InternalClusterAction$JoinSeedNode$.MODULE$:Lakka/cluster/InternalClusterAction$JoinSeedNode$;
      13: aload_0
      14: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
      17: invokeinterface #150,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      22: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #153                // class akka/cluster/JoinSeedNodeProcess$$anonfun$receive$4
       3: dup
       4: aload_0
       5: invokespecial #157                // Method akka/cluster/JoinSeedNodeProcess$$anonfun$receive$4."<init>":(Lakka/cluster/JoinSeedNodeProcess;)V
       8: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> done();
    Code:
       0: new           #160                // class akka/cluster/JoinSeedNodeProcess$$anonfun$done$1
       3: dup
       4: aload_0
       5: invokespecial #161                // Method akka/cluster/JoinSeedNodeProcess$$anonfun$done$1."<init>":(Lakka/cluster/JoinSeedNodeProcess;)V
       8: areturn

  public akka.cluster.JoinSeedNodeProcess(scala.collection.immutable.IndexedSeq<akka.actor.Address>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #164                // Field akka$cluster$JoinSeedNodeProcess$$seedNodes:Lscala/collection/immutable/IndexedSeq;
       5: aload_0
       6: invokespecial #166                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #169                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      13: aload_0
      14: invokestatic  #172                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      17: aload_1
      18: invokeinterface #178,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.isEmpty:()Z
      23: ifne          56
      26: aload_1
      27: invokeinterface #182,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.head:()Ljava/lang/Object;
      32: aload_0
      33: invokevirtual #183                // Method selfAddress:()Lakka/actor/Address;
      36: astore_2
      37: dup
      38: ifnonnull     49
      41: pop
      42: aload_2
      43: ifnull        56
      46: goto          66
      49: aload_2
      50: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          66
      56: new           #189                // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #191                // String Join seed node should not be done
      62: invokespecial #194                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: invokevirtual #113                // Method context:()Lakka/actor/ActorContext;
      70: getstatic     #111                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      73: aload_0
      74: invokevirtual #113                // Method context:()Lakka/actor/ActorContext;
      77: invokeinterface #119,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      82: invokevirtual #123                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      85: checkcast     #125                // class akka/cluster/Cluster
      88: invokevirtual #198                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
      91: invokevirtual #204                // Method akka/cluster/ClusterSettings.SeedNodeTimeout:()Lscala/concurrent/duration/FiniteDuration;
      94: invokeinterface #208,  2          // InterfaceMethod akka/actor/ActorContext.setReceiveTimeout:(Lscala/concurrent/duration/Duration;)V
      99: return
}
