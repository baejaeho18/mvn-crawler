Compiled from "ClusterHeartbeat.scala"
public final class akka.cluster.ClusterHeartbeatReceiver implements akka.actor.Actor,akka.actor.ActorLogging {
  private akka.cluster.ClusterHeartbeatSender$HeartbeatRsp selfHeartbeatRsp;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  private volatile boolean bitmap$0;

  private akka.cluster.ClusterHeartbeatSender$HeartbeatRsp selfHeartbeatRsp$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #26                 // Field bitmap$0:Z
       8: ifne          48
      11: aload_0
      12: new           #28                 // class akka/cluster/ClusterHeartbeatSender$HeartbeatRsp
      15: dup
      16: getstatic     #34                 // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      19: aload_0
      20: invokevirtual #37                 // Method context:()Lakka/actor/ActorContext;
      23: invokeinterface #43,  1           // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      28: invokevirtual #47                 // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      31: checkcast     #49                 // class akka/cluster/Cluster
      34: invokevirtual #53                 // Method akka/cluster/Cluster.selfUniqueAddress:()Lakka/cluster/UniqueAddress;
      37: invokespecial #57                 // Method akka/cluster/ClusterHeartbeatSender$HeartbeatRsp."<init>":(Lakka/cluster/UniqueAddress;)V
      40: putfield      #59                 // Field selfHeartbeatRsp:Lakka/cluster/ClusterHeartbeatSender$HeartbeatRsp;
      43: aload_0
      44: iconst_1
      45: putfield      #26                 // Field bitmap$0:Z
      48: getstatic     #65                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      51: pop
      52: aload_1
      53: monitorexit
      54: aload_0
      55: getfield      #59                 // Field selfHeartbeatRsp:Lakka/cluster/ClusterHeartbeatSender$HeartbeatRsp;
      58: areturn
      59: aload_1
      60: monitorexit
      61: athrow
    Exception table:
       from    to  target type
           4    54    59   any

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #72                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #83                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #86                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #113                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #127                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #132                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #137                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #140                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #143                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #146                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.cluster.ClusterHeartbeatSender$HeartbeatRsp selfHeartbeatRsp();
    Code:
       0: aload_0
       1: getfield      #26                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #59                 // Field selfHeartbeatRsp:Lakka/cluster/ClusterHeartbeatSender$HeartbeatRsp;
      11: goto          18
      14: aload_0
      15: invokespecial #153                // Method selfHeartbeatRsp$lzycompute:()Lakka/cluster/ClusterHeartbeatSender$HeartbeatRsp;
      18: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #156                // class akka/cluster/ClusterHeartbeatReceiver$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #159                // Method akka/cluster/ClusterHeartbeatReceiver$$anonfun$receive$1."<init>":(Lakka/cluster/ClusterHeartbeatReceiver;)V
       8: areturn

  public akka.cluster.ClusterHeartbeatReceiver();
    Code:
       0: aload_0
       1: invokespecial #161                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #164                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
       8: aload_0
       9: invokestatic  #167                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      12: return
}
