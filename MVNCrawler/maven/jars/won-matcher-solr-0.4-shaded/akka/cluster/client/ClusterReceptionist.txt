Compiled from "ClusterClient.scala"
public final class akka.cluster.client.ClusterReceptionist implements akka.actor.Actor,akka.actor.ActorLogging {
  public final akka.actor.ActorRef akka$cluster$client$ClusterReceptionist$$pubSubMediator;

  public final akka.cluster.client.ClusterReceptionistSettings akka$cluster$client$ClusterReceptionist$$settings;

  private final akka.cluster.Cluster cluster;

  private final boolean verboseHeartbeat;

  private scala.collection.immutable.SortedSet<akka.actor.Address> nodes;

  private final int virtualNodesFactor;

  private akka.routing.ConsistentHash<akka.actor.Address> consistentHash;

  private scala.collection.immutable.HashMap<akka.actor.ActorRef, akka.remote.DeadlineFailureDetector> clientInteractions;

  private scala.collection.immutable.HashSet<akka.actor.ActorRef> clientsPublished;

  private scala.collection.immutable.Vector<akka.actor.ActorRef> subscribers;

  private final akka.actor.Cancellable checkDeadlinesTask;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static akka.actor.Props props(akka.actor.ActorRef, akka.cluster.client.ClusterReceptionistSettings);
    Code:
       0: getstatic     #20                 // Field akka/cluster/client/ClusterReceptionist$.MODULE$:Lakka/cluster/client/ClusterReceptionist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #22                 // Method akka/cluster/client/ClusterReceptionist$.props:(Lakka/actor/ActorRef;Lakka/cluster/client/ClusterReceptionistSettings;)Lakka/actor/Props;
       8: areturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #57                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #71                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #74                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #98                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #101                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #120                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.cluster.Cluster cluster();
    Code:
       0: aload_0
       1: getfield      #136                // Field cluster:Lakka/cluster/Cluster;
       4: areturn

  public boolean verboseHeartbeat();
    Code:
       0: aload_0
       1: getfield      #139                // Field verboseHeartbeat:Z
       4: ireturn

  public scala.collection.immutable.SortedSet<akka.actor.Address> nodes();
    Code:
       0: aload_0
       1: getfield      #142                // Field nodes:Lscala/collection/immutable/SortedSet;
       4: areturn

  public void nodes_$eq(scala.collection.immutable.SortedSet<akka.actor.Address>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field nodes:Lscala/collection/immutable/SortedSet;
       5: return

  public int virtualNodesFactor();
    Code:
       0: aload_0
       1: getfield      #147                // Field virtualNodesFactor:I
       4: ireturn

  public akka.routing.ConsistentHash<akka.actor.Address> consistentHash();
    Code:
       0: aload_0
       1: getfield      #150                // Field consistentHash:Lakka/routing/ConsistentHash;
       4: areturn

  public void consistentHash_$eq(akka.routing.ConsistentHash<akka.actor.Address>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #150                // Field consistentHash:Lakka/routing/ConsistentHash;
       5: return

  public scala.collection.immutable.HashMap<akka.actor.ActorRef, akka.remote.DeadlineFailureDetector> clientInteractions();
    Code:
       0: aload_0
       1: getfield      #155                // Field clientInteractions:Lscala/collection/immutable/HashMap;
       4: areturn

  public void clientInteractions_$eq(scala.collection.immutable.HashMap<akka.actor.ActorRef, akka.remote.DeadlineFailureDetector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field clientInteractions:Lscala/collection/immutable/HashMap;
       5: return

  public scala.collection.immutable.HashSet<akka.actor.ActorRef> clientsPublished();
    Code:
       0: aload_0
       1: getfield      #160                // Field clientsPublished:Lscala/collection/immutable/HashSet;
       4: areturn

  public void clientsPublished_$eq(scala.collection.immutable.HashSet<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field clientsPublished:Lscala/collection/immutable/HashSet;
       5: return

  public scala.collection.immutable.Vector<akka.actor.ActorRef> subscribers();
    Code:
       0: aload_0
       1: getfield      #165                // Field subscribers:Lscala/collection/immutable/Vector;
       4: areturn

  public void subscribers_$eq(scala.collection.immutable.Vector<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field subscribers:Lscala/collection/immutable/Vector;
       5: return

  public akka.actor.Cancellable checkDeadlinesTask();
    Code:
       0: aload_0
       1: getfield      #170                // Field checkDeadlinesTask:Lakka/actor/Cancellable;
       4: areturn

  public void preStart();
    Code:
       0: aload_0
       1: invokestatic  #173                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokevirtual #180                // Method cluster:()Lakka/cluster/Cluster;
      11: invokevirtual #185                // Method akka/cluster/Cluster.isTerminated:()Z
      14: ifeq          21
      17: iconst_0
      18: goto          22
      21: iconst_1
      22: new           #187                // class akka/cluster/client/ClusterReceptionist$$anonfun$preStart$1
      25: dup
      26: aload_0
      27: invokespecial #191                // Method akka/cluster/client/ClusterReceptionist$$anonfun$preStart$1."<init>":(Lakka/cluster/client/ClusterReceptionist;)V
      30: invokevirtual #195                // Method scala/Predef$.require:(ZLscala/Function0;)V
      33: aload_0
      34: invokevirtual #180                // Method cluster:()Lakka/cluster/Cluster;
      37: aload_0
      38: invokevirtual #197                // Method self:()Lakka/actor/ActorRef;
      41: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      44: iconst_1
      45: anewarray     #199                // class java/lang/Class
      48: dup
      49: iconst_0
      50: ldc           #201                // class akka/cluster/ClusterEvent$MemberEvent
      52: aastore
      53: checkcast     #203                // class "[Ljava/lang/Object;"
      56: invokevirtual #207                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      59: invokevirtual #211                // Method akka/cluster/Cluster.subscribe:(Lakka/actor/ActorRef;Lscala/collection/Seq;)V
      62: return

  public void postStop();
    Code:
       0: aload_0
       1: invokestatic  #214                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: aload_0
       5: invokevirtual #180                // Method cluster:()Lakka/cluster/Cluster;
       8: aload_0
       9: invokevirtual #197                // Method self:()Lakka/actor/ActorRef;
      12: invokevirtual #217                // Method akka/cluster/Cluster.unsubscribe:(Lakka/actor/ActorRef;)V
      15: aload_0
      16: invokevirtual #219                // Method checkDeadlinesTask:()Lakka/actor/Cancellable;
      19: invokeinterface #224,  1          // InterfaceMethod akka/actor/Cancellable.cancel:()Z
      24: pop
      25: return

  public boolean matchingRole(akka.cluster.Member);
    Code:
       0: aload_0
       1: getfield      #228                // Field akka$cluster$client$ClusterReceptionist$$settings:Lakka/cluster/client/ClusterReceptionistSettings;
       4: invokevirtual #234                // Method akka/cluster/client/ClusterReceptionistSettings.role:()Lscala/Option;
       7: new           #236                // class akka/cluster/client/ClusterReceptionist$$anonfun$matchingRole$1
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #239                // Method akka/cluster/client/ClusterReceptionist$$anonfun$matchingRole$1."<init>":(Lakka/cluster/client/ClusterReceptionist;Lakka/cluster/Member;)V
      16: invokevirtual #245                // Method scala/Option.forall:(Lscala/Function1;)Z
      19: ireturn

  public akka.actor.ActorRef responseTunnel(akka.actor.ActorRef);
    Code:
       0: aload_1
       1: invokevirtual #255                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
       4: invokeinterface #261,  1          // InterfaceMethod akka/actor/ActorPath.toSerializationFormat:()Ljava/lang/String;
       9: ldc_w         #263                // String utf-8
      12: invokestatic  #269                // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: invokevirtual #271                // Method context:()Lakka/actor/ActorContext;
      20: aload_2
      21: invokeinterface #277,  2          // InterfaceMethod akka/actor/ActorContext.child:(Ljava/lang/String;)Lscala/Option;
      26: astore_3
      27: aload_3
      28: instanceof    #279                // class scala/Some
      31: ifeq          57
      34: aload_3
      35: checkcast     #279                // class scala/Some
      38: astore        4
      40: aload         4
      42: invokevirtual #283                // Method scala/Some.x:()Ljava/lang/Object;
      45: checkcast     #251                // class akka/actor/ActorRef
      48: astore        5
      50: aload         5
      52: astore        6
      54: goto          112
      57: getstatic     #288                // Field scala/None$.MODULE$:Lscala/None$;
      60: aload_3
      61: invokevirtual #292                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifeq          115
      67: aload_0
      68: invokevirtual #271                // Method context:()Lakka/actor/ActorContext;
      71: getstatic     #297                // Field akka/actor/Props$.MODULE$:Lakka/actor/Props$;
      74: ldc_w         #299                // class akka/cluster/client/ClusterReceptionist$Internal$ClientResponseTunnel
      77: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      80: iconst_2
      81: anewarray     #4                  // class java/lang/Object
      84: dup
      85: iconst_0
      86: aload_1
      87: aastore
      88: dup
      89: iconst_1
      90: aload_0
      91: getfield      #228                // Field akka$cluster$client$ClusterReceptionist$$settings:Lakka/cluster/client/ClusterReceptionistSettings;
      94: invokevirtual #303                // Method akka/cluster/client/ClusterReceptionistSettings.responseTunnelReceiveTimeout:()Lscala/concurrent/duration/FiniteDuration;
      97: aastore
      98: invokevirtual #307                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     101: invokevirtual #311                // Method akka/actor/Props$.apply:(Ljava/lang/Class;Lscala/collection/Seq;)Lakka/actor/Props;
     104: aload_2
     105: invokeinterface #315,  3          // InterfaceMethod akka/actor/ActorContext.actorOf:(Lakka/actor/Props;Ljava/lang/String;)Lakka/actor/ActorRef;
     110: astore        6
     112: aload         6
     114: areturn
     115: new           #317                // class scala/MatchError
     118: dup
     119: aload_3
     120: invokespecial #319                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #328                // class akka/cluster/client/ClusterReceptionist$$anonfun$receive$2
       3: dup
       4: aload_0
       5: invokespecial #329                // Method akka/cluster/client/ClusterReceptionist$$anonfun$receive$2."<init>":(Lakka/cluster/client/ClusterReceptionist;)V
       8: areturn

  public void updateClientInteractions(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #332                // Method clientInteractions:()Lscala/collection/immutable/HashMap;
       4: aload_1
       5: invokevirtual #338                // Method scala/collection/immutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
       8: astore_2
       9: aload_2
      10: instanceof    #279                // class scala/Some
      13: ifeq          43
      16: aload_2
      17: checkcast     #279                // class scala/Some
      20: astore_3
      21: aload_3
      22: invokevirtual #283                // Method scala/Some.x:()Ljava/lang/Object;
      25: checkcast     #340                // class akka/remote/DeadlineFailureDetector
      28: astore        4
      30: aload         4
      32: invokevirtual #343                // Method akka/remote/DeadlineFailureDetector.heartbeat:()V
      35: getstatic     #349                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      38: astore        5
      40: goto          186
      43: getstatic     #288                // Field scala/None$.MODULE$:Lscala/None$;
      46: aload_2
      47: invokevirtual #292                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          187
      53: new           #340                // class akka/remote/DeadlineFailureDetector
      56: dup
      57: aload_0
      58: getfield      #228                // Field akka$cluster$client$ClusterReceptionist$$settings:Lakka/cluster/client/ClusterReceptionistSettings;
      61: invokevirtual #352                // Method akka/cluster/client/ClusterReceptionistSettings.acceptableHeartbeatPause:()Lscala/concurrent/duration/FiniteDuration;
      64: aload_0
      65: getfield      #228                // Field akka$cluster$client$ClusterReceptionist$$settings:Lakka/cluster/client/ClusterReceptionistSettings;
      68: invokevirtual #355                // Method akka/cluster/client/ClusterReceptionistSettings.heartbeatInterval:()Lscala/concurrent/duration/FiniteDuration;
      71: getstatic     #360                // Field akka/remote/FailureDetector$.MODULE$:Lakka/remote/FailureDetector$;
      74: invokevirtual #364                // Method akka/remote/FailureDetector$.defaultClock:()Lakka/remote/FailureDetector$Clock;
      77: invokespecial #367                // Method akka/remote/DeadlineFailureDetector."<init>":(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/remote/FailureDetector$Clock;)V
      80: astore        6
      82: aload         6
      84: invokevirtual #343                // Method akka/remote/DeadlineFailureDetector.heartbeat:()V
      87: aload_0
      88: aload_0
      89: invokevirtual #332                // Method clientInteractions:()Lscala/collection/immutable/HashMap;
      92: getstatic     #372                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      95: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      98: aload_1
      99: invokevirtual #376                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     102: aload         6
     104: invokevirtual #380                // Method scala/Predef$ArrowAssoc$.$u2192$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     107: invokevirtual #384                // Method scala/collection/immutable/HashMap.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
     110: invokevirtual #386                // Method clientInteractions_$eq:(Lscala/collection/immutable/HashMap;)V
     113: aload_0
     114: invokevirtual #388                // Method log:()Lakka/event/LoggingAdapter;
     117: ldc_w         #390                // String Received new contact from [{}]
     120: aload_1
     121: invokevirtual #255                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
     124: invokeinterface #396,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     129: new           #398                // class akka/cluster/client/ClusterClientUp
     132: dup
     133: aload_1
     134: invokespecial #400                // Method akka/cluster/client/ClusterClientUp."<init>":(Lakka/actor/ActorRef;)V
     137: astore        7
     139: aload_0
     140: invokevirtual #402                // Method subscribers:()Lscala/collection/immutable/Vector;
     143: new           #404                // class akka/cluster/client/ClusterReceptionist$$anonfun$updateClientInteractions$1
     146: dup
     147: aload_0
     148: aload         7
     150: invokespecial #407                // Method akka/cluster/client/ClusterReceptionist$$anonfun$updateClientInteractions$1."<init>":(Lakka/cluster/client/ClusterReceptionist;Lakka/cluster/client/ClusterClientUp;)V
     153: invokevirtual #413                // Method scala/collection/immutable/Vector.foreach:(Lscala/Function1;)V
     156: aload_0
     157: aload_0
     158: invokevirtual #332                // Method clientInteractions:()Lscala/collection/immutable/HashMap;
     161: invokevirtual #417                // Method scala/collection/immutable/HashMap.keySet:()Lscala/collection/immutable/Set;
     164: getstatic     #422                // Field scala/collection/immutable/HashSet$.MODULE$:Lscala/collection/immutable/HashSet$;
     167: invokevirtual #426                // Method scala/collection/immutable/HashSet$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     170: invokeinterface #432,  2          // InterfaceMethod scala/collection/immutable/Set.to:(Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     175: checkcast     #434                // class scala/collection/immutable/HashSet
     178: invokevirtual #436                // Method clientsPublished_$eq:(Lscala/collection/immutable/HashSet;)V
     181: getstatic     #349                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     184: astore        5
     186: return
     187: new           #317                // class scala/MatchError
     190: dup
     191: aload_2
     192: invokespecial #319                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     195: athrow

  public void publishClientsUnreachable();
    Code:
       0: aload_0
       1: invokevirtual #332                // Method clientInteractions:()Lscala/collection/immutable/HashMap;
       4: invokevirtual #417                // Method scala/collection/immutable/HashMap.keySet:()Lscala/collection/immutable/Set;
       7: getstatic     #422                // Field scala/collection/immutable/HashSet$.MODULE$:Lscala/collection/immutable/HashSet$;
      10: invokevirtual #426                // Method scala/collection/immutable/HashSet$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      13: invokeinterface #432,  2          // InterfaceMethod scala/collection/immutable/Set.to:(Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      18: checkcast     #434                // class scala/collection/immutable/HashSet
      21: astore_1
      22: aload_0
      23: invokevirtual #443                // Method clientsPublished:()Lscala/collection/immutable/HashSet;
      26: new           #445                // class akka/cluster/client/ClusterReceptionist$$anonfun$publishClientsUnreachable$1
      29: dup
      30: aload_0
      31: aload_1
      32: invokespecial #448                // Method akka/cluster/client/ClusterReceptionist$$anonfun$publishClientsUnreachable$1."<init>":(Lakka/cluster/client/ClusterReceptionist;Lscala/collection/immutable/HashSet;)V
      35: invokevirtual #452                // Method scala/collection/immutable/HashSet.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      38: new           #454                // class akka/cluster/client/ClusterReceptionist$$anonfun$publishClientsUnreachable$2
      41: dup
      42: aload_0
      43: invokespecial #455                // Method akka/cluster/client/ClusterReceptionist$$anonfun$publishClientsUnreachable$2."<init>":(Lakka/cluster/client/ClusterReceptionist;)V
      46: invokeinterface #458,  2          // InterfaceMethod scala/collection/generic/FilterMonadic.foreach:(Lscala/Function1;)V
      51: aload_0
      52: aload_1
      53: invokevirtual #436                // Method clientsPublished_$eq:(Lscala/collection/immutable/HashSet;)V
      56: return

  public final int akka$cluster$client$ClusterReceptionist$$hashFor$1(akka.actor.Address);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        140
       6: aload_2
       7: invokevirtual #466                // Method akka/actor/Address.host:()Lscala/Option;
      10: astore_3
      11: aload_2
      12: invokevirtual #469                // Method akka/actor/Address.port:()Lscala/Option;
      15: astore        4
      17: aload_3
      18: instanceof    #279                // class scala/Some
      21: ifeq          140
      24: aload_3
      25: checkcast     #279                // class scala/Some
      28: astore        5
      30: aload         5
      32: invokevirtual #283                // Method scala/Some.x:()Ljava/lang/Object;
      35: checkcast     #325                // class java/lang/String
      38: astore        6
      40: aload         4
      42: instanceof    #279                // class scala/Some
      45: ifeq          140
      48: aload         4
      50: checkcast     #279                // class scala/Some
      53: astore        7
      55: aload         7
      57: invokevirtual #283                // Method scala/Some.x:()Ljava/lang/Object;
      60: invokestatic  #475                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      63: istore        8
      65: getstatic     #480                // Field akka/routing/MurmurHash$.MODULE$:Lakka/routing/MurmurHash$;
      68: new           #482                // class scala/StringContext
      71: dup
      72: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      75: iconst_3
      76: anewarray     #325                // class java/lang/String
      79: dup
      80: iconst_0
      81: ldc_w         #484                // String
      84: aastore
      85: dup
      86: iconst_1
      87: ldc_w         #486                // String :
      90: aastore
      91: dup
      92: iconst_2
      93: ldc_w         #484                // String
      96: aastore
      97: checkcast     #203                // class "[Ljava/lang/Object;"
     100: invokevirtual #207                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     103: invokespecial #489                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     106: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     109: iconst_2
     110: anewarray     #4                  // class java/lang/Object
     113: dup
     114: iconst_0
     115: aload         6
     117: aastore
     118: dup
     119: iconst_1
     120: iload         8
     122: invokestatic  #493                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     125: aastore
     126: invokevirtual #307                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     129: invokevirtual #497                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     132: invokevirtual #501                // Method akka/routing/MurmurHash$.stringHash:(Ljava/lang/String;)I
     135: istore        9
     137: iload         9
     139: ireturn
     140: new           #503                // class java/lang/IllegalStateException
     143: dup
     144: new           #482                // class scala/StringContext
     147: dup
     148: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     151: iconst_2
     152: anewarray     #325                // class java/lang/String
     155: dup
     156: iconst_0
     157: ldc_w         #505                // String Unexpected address without host/port: [
     160: aastore
     161: dup
     162: iconst_1
     163: ldc_w         #507                // String ]
     166: aastore
     167: checkcast     #203                // class "[Ljava/lang/Object;"
     170: invokevirtual #207                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     173: invokespecial #489                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     176: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     179: iconst_1
     180: anewarray     #4                  // class java/lang/Object
     183: dup
     184: iconst_0
     185: aload_1
     186: aastore
     187: invokevirtual #307                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     190: invokevirtual #497                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     193: invokespecial #510                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     196: athrow

  public akka.cluster.client.ClusterReceptionist(akka.actor.ActorRef, akka.cluster.client.ClusterReceptionistSettings);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #515                // Field akka$cluster$client$ClusterReceptionist$$pubSubMediator:Lakka/actor/ActorRef;
       5: aload_0
       6: aload_2
       7: putfield      #228                // Field akka$cluster$client$ClusterReceptionist$$settings:Lakka/cluster/client/ClusterReceptionistSettings;
      10: aload_0
      11: invokespecial #517                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #520                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      18: aload_0
      19: invokestatic  #523                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      22: aload_0
      23: getstatic     #528                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      26: aload_0
      27: invokevirtual #271                // Method context:()Lakka/actor/ActorContext;
      30: invokeinterface #532,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      35: invokevirtual #535                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      38: checkcast     #182                // class akka/cluster/Cluster
      41: putfield      #136                // Field cluster:Lakka/cluster/Cluster;
      44: aload_0
      45: aload_0
      46: invokevirtual #180                // Method cluster:()Lakka/cluster/Cluster;
      49: invokevirtual #539                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
      52: invokevirtual #545                // Method akka/cluster/ClusterSettings.Debug:()Lakka/cluster/ClusterSettings$Debug$;
      55: invokevirtual #550                // Method akka/cluster/ClusterSettings$Debug$.VerboseHeartbeatLogging:()Z
      58: putfield      #139                // Field verboseHeartbeat:Z
      61: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      64: aload_2
      65: invokevirtual #234                // Method akka/cluster/client/ClusterReceptionistSettings.role:()Lscala/Option;
      68: aload_0
      69: invokevirtual #180                // Method cluster:()Lakka/cluster/Cluster;
      72: invokevirtual #553                // Method akka/cluster/Cluster.selfRoles:()Lscala/collection/immutable/Set;
      75: astore_3
      76: new           #555                // class akka/cluster/client/ClusterReceptionist$$anonfun$7
      79: dup
      80: aload_0
      81: aload_3
      82: invokespecial #558                // Method akka/cluster/client/ClusterReceptionist$$anonfun$7."<init>":(Lakka/cluster/client/ClusterReceptionist;Lscala/collection/immutable/Set;)V
      85: invokevirtual #245                // Method scala/Option.forall:(Lscala/Function1;)Z
      88: new           #560                // class akka/cluster/client/ClusterReceptionist$$anonfun$6
      91: dup
      92: aload_0
      93: invokespecial #561                // Method akka/cluster/client/ClusterReceptionist$$anonfun$6."<init>":(Lakka/cluster/client/ClusterReceptionist;)V
      96: invokevirtual #195                // Method scala/Predef$.require:(ZLscala/Function0;)V
      99: aload_0
     100: getstatic     #566                // Field scala/package$.MODULE$:Lscala/package$;
     103: invokevirtual #570                // Method scala/package$.Ordering:()Lscala/math/Ordering$;
     106: new           #572                // class akka/cluster/client/ClusterReceptionist$$anonfun$8
     109: dup
     110: aload_0
     111: invokespecial #573                // Method akka/cluster/client/ClusterReceptionist$$anonfun$8."<init>":(Lakka/cluster/client/ClusterReceptionist;)V
     114: invokevirtual #579                // Method scala/math/Ordering$.fromLessThan:(Lscala/Function2;)Lscala/math/Ordering;
     117: astore        4
     119: getstatic     #584                // Field scala/collection/immutable/SortedSet$.MODULE$:Lscala/collection/immutable/SortedSet$;
     122: getstatic     #589                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     125: aload         4
     127: invokevirtual #592                // Method scala/collection/immutable/SortedSet$.apply:(Lscala/collection/Seq;Lscala/math/Ordering;)Lscala/collection/SortedSet;
     130: checkcast     #594                // class scala/collection/immutable/SortedSet
     133: putfield      #142                // Field nodes:Lscala/collection/immutable/SortedSet;
     136: aload_0
     137: bipush        10
     139: putfield      #147                // Field virtualNodesFactor:I
     142: aload_0
     143: getstatic     #599                // Field akka/routing/ConsistentHash$.MODULE$:Lakka/routing/ConsistentHash$;
     146: aload_0
     147: invokevirtual #601                // Method nodes:()Lscala/collection/immutable/SortedSet;
     150: aload_0
     151: invokevirtual #603                // Method virtualNodesFactor:()I
     154: getstatic     #608                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     157: ldc_w         #463                // class akka/actor/Address
     160: invokevirtual #611                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     163: invokevirtual #614                // Method akka/routing/ConsistentHash$.apply:(Lscala/collection/Iterable;ILscala/reflect/ClassTag;)Lakka/routing/ConsistentHash;
     166: putfield      #150                // Field consistentHash:Lakka/routing/ConsistentHash;
     169: aload_0
     170: getstatic     #619                // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
     173: invokevirtual #622                // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
     176: putfield      #155                // Field clientInteractions:Lscala/collection/immutable/HashMap;
     179: aload_0
     180: getstatic     #422                // Field scala/collection/immutable/HashSet$.MODULE$:Lscala/collection/immutable/HashSet$;
     183: invokevirtual #624                // Method scala/collection/immutable/HashSet$.empty:()Lscala/collection/immutable/Set;
     186: checkcast     #434                // class scala/collection/immutable/HashSet
     189: putfield      #160                // Field clientsPublished:Lscala/collection/immutable/HashSet;
     192: aload_0
     193: getstatic     #566                // Field scala/package$.MODULE$:Lscala/package$;
     196: invokevirtual #628                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
     199: invokevirtual #632                // Method scala/collection/immutable/Vector$.empty:()Lscala/collection/immutable/Vector;
     202: putfield      #165                // Field subscribers:Lscala/collection/immutable/Vector;
     205: aload_0
     206: aload_0
     207: invokevirtual #271                // Method context:()Lakka/actor/ActorContext;
     210: invokeinterface #532,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
     215: invokevirtual #638                // Method akka/actor/ActorSystem.scheduler:()Lakka/actor/Scheduler;
     218: astore        5
     220: aload_2
     221: invokevirtual #641                // Method akka/cluster/client/ClusterReceptionistSettings.failureDetectionInterval:()Lscala/concurrent/duration/FiniteDuration;
     224: astore        6
     226: aload_2
     227: invokevirtual #641                // Method akka/cluster/client/ClusterReceptionistSettings.failureDetectionInterval:()Lscala/concurrent/duration/FiniteDuration;
     230: astore        7
     232: aload_0
     233: invokevirtual #197                // Method self:()Lakka/actor/ActorRef;
     236: astore        8
     238: getstatic     #646                // Field akka/cluster/client/ClusterReceptionist$Internal$CheckDeadlines$.MODULE$:Lakka/cluster/client/ClusterReceptionist$Internal$CheckDeadlines$;
     241: astore        9
     243: aload_0
     244: invokevirtual #271                // Method context:()Lakka/actor/ActorContext;
     247: invokeinterface #650,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     252: astore        10
     254: aload         5
     256: aload         6
     258: aload         7
     260: aload         8
     262: aload         9
     264: invokeinterface #656,  5          // InterfaceMethod akka/actor/Scheduler.schedule$default$6:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;)Lakka/actor/ActorRef;
     269: astore        11
     271: aload         5
     273: aload         6
     275: aload         7
     277: aload         8
     279: aload         9
     281: aload         10
     283: aload         11
     285: invokeinterface #660,  7          // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
     290: putfield      #170                // Field checkDeadlinesTask:Lakka/actor/Cancellable;
     293: return
}
