Compiled from "ClusterHeartbeat.scala"
public final class akka.cluster.ClusterHeartbeatSender implements akka.actor.Actor,akka.actor.ActorLogging {
  private final akka.cluster.Cluster cluster;

  private final boolean verboseHeartbeat;

  private final akka.remote.FailureDetectorRegistry<akka.actor.Address> failureDetector;

  private final akka.cluster.ClusterHeartbeatSender$Heartbeat selfHeartbeat;

  private akka.cluster.ClusterHeartbeatSenderState state;

  private final akka.actor.Cancellable heartbeatTask;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #34                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #48                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #51                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.cluster.Cluster cluster();
    Code:
       0: aload_0
       1: getfield      #113                // Field cluster:Lakka/cluster/Cluster;
       4: areturn

  public boolean verboseHeartbeat();
    Code:
       0: aload_0
       1: getfield      #116                // Field verboseHeartbeat:Z
       4: ireturn

  public akka.remote.FailureDetectorRegistry<akka.actor.Address> failureDetector();
    Code:
       0: aload_0
       1: getfield      #119                // Field failureDetector:Lakka/remote/FailureDetectorRegistry;
       4: areturn

  public akka.cluster.ClusterHeartbeatSender$Heartbeat selfHeartbeat();
    Code:
       0: aload_0
       1: getfield      #122                // Field selfHeartbeat:Lakka/cluster/ClusterHeartbeatSender$Heartbeat;
       4: areturn

  public akka.cluster.ClusterHeartbeatSenderState state();
    Code:
       0: aload_0
       1: getfield      #125                // Field state:Lakka/cluster/ClusterHeartbeatSenderState;
       4: areturn

  public void state_$eq(akka.cluster.ClusterHeartbeatSenderState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #125                // Field state:Lakka/cluster/ClusterHeartbeatSenderState;
       5: return

  public akka.actor.Cancellable heartbeatTask();
    Code:
       0: aload_0
       1: getfield      #130                // Field heartbeatTask:Lakka/actor/Cancellable;
       4: areturn

  public void preStart();
    Code:
       0: aload_0
       1: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
       4: aload_0
       5: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
       8: getstatic     #141                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_2
      12: anewarray     #143                // class java/lang/Class
      15: dup
      16: iconst_0
      17: ldc           #145                // class akka/cluster/ClusterEvent$MemberEvent
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #147                // class akka/cluster/ClusterEvent$ReachabilityEvent
      24: aastore
      25: checkcast     #149                // class "[Ljava/lang/Object;"
      28: invokevirtual #153                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      31: invokevirtual #159                // Method akka/cluster/Cluster.subscribe:(Lakka/actor/ActorRef;Lscala/collection/Seq;)V
      34: return

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
       4: invokevirtual #168                // Method akka/cluster/ClusterHeartbeatSenderState.activeReceivers:()Lscala/collection/immutable/Set;
       7: new           #170                // class akka/cluster/ClusterHeartbeatSender$$anonfun$postStop$1
      10: dup
      11: aload_0
      12: invokespecial #174                // Method akka/cluster/ClusterHeartbeatSender$$anonfun$postStop$1."<init>":(Lakka/cluster/ClusterHeartbeatSender;)V
      15: invokeinterface #180,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
      20: aload_0
      21: invokevirtual #182                // Method heartbeatTask:()Lakka/actor/Cancellable;
      24: invokeinterface #187,  1          // InterfaceMethod akka/actor/Cancellable.cancel:()Z
      29: pop
      30: aload_0
      31: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
      34: aload_0
      35: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
      38: invokevirtual #190                // Method akka/cluster/Cluster.unsubscribe:(Lakka/actor/ActorRef;)V
      41: return

  public akka.actor.ActorSelection heartbeatReceiver(akka.actor.Address);
    Code:
       0: aload_0
       1: invokevirtual #194                // Method context:()Lakka/actor/ActorContext;
       4: new           #196                // class akka/actor/RootActorPath
       7: dup
       8: aload_1
       9: getstatic     #201                // Field akka/actor/RootActorPath$.MODULE$:Lakka/actor/RootActorPath$;
      12: invokevirtual #205                // Method akka/actor/RootActorPath$.apply$default$2:()Ljava/lang/String;
      15: invokespecial #208                // Method akka/actor/RootActorPath."<init>":(Lakka/actor/Address;Ljava/lang/String;)V
      18: ldc           #210                // String system
      20: invokevirtual #214                // Method akka/actor/RootActorPath.$div:(Ljava/lang/String;)Lakka/actor/ActorPath;
      23: ldc           #215                // String cluster
      25: invokeinterface #218,  2          // InterfaceMethod akka/actor/ActorPath.$div:(Ljava/lang/String;)Lakka/actor/ActorPath;
      30: ldc           #219                // String heartbeatReceiver
      32: invokeinterface #218,  2          // InterfaceMethod akka/actor/ActorPath.$div:(Ljava/lang/String;)Lakka/actor/ActorPath;
      37: invokeinterface #225,  2          // InterfaceMethod akka/actor/ActorContext.actorSelection:(Lakka/actor/ActorPath;)Lakka/actor/ActorSelection;
      42: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: aload_0
       1: invokevirtual #231                // Method initializing:()Lscala/PartialFunction;
       4: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> initializing();
    Code:
       0: new           #233                // class akka/cluster/ClusterHeartbeatSender$$anonfun$initializing$1
       3: dup
       4: aload_0
       5: invokespecial #234                // Method akka/cluster/ClusterHeartbeatSender$$anonfun$initializing$1."<init>":(Lakka/cluster/ClusterHeartbeatSender;)V
       8: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> active();
    Code:
       0: new           #237                // class akka/cluster/ClusterHeartbeatSender$$anonfun$active$1
       3: dup
       4: aload_0
       5: invokespecial #238                // Method akka/cluster/ClusterHeartbeatSender$$anonfun$active$1."<init>":(Lakka/cluster/ClusterHeartbeatSender;)V
       8: areturn

  public void init(akka.cluster.ClusterEvent$CurrentClusterState);
    Code:
       0: aload_1
       1: invokevirtual #246                // Method akka/cluster/ClusterEvent$CurrentClusterState.members:()Lscala/collection/immutable/SortedSet;
       4: new           #248                // class akka/cluster/ClusterHeartbeatSender$$anonfun$1
       7: dup
       8: aload_0
       9: invokespecial #249                // Method akka/cluster/ClusterHeartbeatSender$$anonfun$1."<init>":(Lakka/cluster/ClusterHeartbeatSender;)V
      12: getstatic     #254                // Field scala/collection/immutable/SortedSet$.MODULE$:Lscala/collection/immutable/SortedSet$;
      15: getstatic     #259                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
      18: getstatic     #141                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: invokevirtual #263                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      24: invokevirtual #267                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
      27: invokevirtual #271                // Method scala/collection/immutable/SortedSet$.newCanBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      30: invokeinterface #277,  3          // InterfaceMethod scala/collection/immutable/SortedSet.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #176                // class scala/collection/immutable/Set
      38: astore_2
      39: aload_1
      40: invokevirtual #280                // Method akka/cluster/ClusterEvent$CurrentClusterState.unreachable:()Lscala/collection/immutable/Set;
      43: new           #282                // class akka/cluster/ClusterHeartbeatSender$$anonfun$2
      46: dup
      47: aload_0
      48: invokespecial #283                // Method akka/cluster/ClusterHeartbeatSender$$anonfun$2."<init>":(Lakka/cluster/ClusterHeartbeatSender;)V
      51: getstatic     #288                // Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
      54: invokevirtual #292                // Method scala/collection/immutable/Set$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      57: invokeinterface #293,  3          // InterfaceMethod scala/collection/immutable/Set.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      62: checkcast     #176                // class scala/collection/immutable/Set
      65: astore_3
      66: aload_0
      67: aload_0
      68: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
      71: aload_2
      72: aload_3
      73: invokevirtual #296                // Method akka/cluster/ClusterHeartbeatSenderState.init:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lakka/cluster/ClusterHeartbeatSenderState;
      76: invokevirtual #298                // Method state_$eq:(Lakka/cluster/ClusterHeartbeatSenderState;)V
      79: return

  public void addMember(akka.cluster.Member);
    Code:
       0: aload_1
       1: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
       4: aload_0
       5: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
       8: invokevirtual #313                // Method akka/cluster/Cluster.selfUniqueAddress:()Lakka/cluster/UniqueAddress;
      11: astore_2
      12: dup
      13: ifnonnull     24
      16: pop
      17: aload_2
      18: ifnull        60
      21: goto          31
      24: aload_2
      25: invokevirtual #317                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifne          60
      31: aload_0
      32: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
      35: aload_1
      36: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
      39: invokevirtual #321                // Method akka/cluster/ClusterHeartbeatSenderState.contains:(Lakka/cluster/UniqueAddress;)Z
      42: ifne          60
      45: aload_0
      46: aload_0
      47: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
      50: aload_1
      51: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
      54: invokevirtual #324                // Method akka/cluster/ClusterHeartbeatSenderState.addMember:(Lakka/cluster/UniqueAddress;)Lakka/cluster/ClusterHeartbeatSenderState;
      57: invokevirtual #298                // Method state_$eq:(Lakka/cluster/ClusterHeartbeatSenderState;)V
      60: return

  public void removeMember(akka.cluster.Member);
    Code:
       0: aload_1
       1: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
       4: aload_0
       5: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
       8: invokevirtual #313                // Method akka/cluster/Cluster.selfUniqueAddress:()Lakka/cluster/UniqueAddress;
      11: astore_2
      12: dup
      13: ifnonnull     24
      16: pop
      17: aload_2
      18: ifnull        31
      21: goto          47
      24: aload_2
      25: invokevirtual #317                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          47
      31: aload_0
      32: invokevirtual #194                // Method context:()Lakka/actor/ActorContext;
      35: aload_0
      36: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
      39: invokeinterface #332,  2          // InterfaceMethod akka/actor/ActorContext.stop:(Lakka/actor/ActorRef;)V
      44: goto          62
      47: aload_0
      48: aload_0
      49: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
      52: aload_1
      53: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
      56: invokevirtual #334                // Method akka/cluster/ClusterHeartbeatSenderState.removeMember:(Lakka/cluster/UniqueAddress;)Lakka/cluster/ClusterHeartbeatSenderState;
      59: invokevirtual #298                // Method state_$eq:(Lakka/cluster/ClusterHeartbeatSenderState;)V
      62: return

  public void unreachableMember(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
       5: aload_1
       6: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
       9: invokevirtual #337                // Method akka/cluster/ClusterHeartbeatSenderState.unreachableMember:(Lakka/cluster/UniqueAddress;)Lakka/cluster/ClusterHeartbeatSenderState;
      12: invokevirtual #298                // Method state_$eq:(Lakka/cluster/ClusterHeartbeatSenderState;)V
      15: return

  public void reachableMember(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
       5: aload_1
       6: invokevirtual #310                // Method akka/cluster/Member.uniqueAddress:()Lakka/cluster/UniqueAddress;
       9: invokevirtual #340                // Method akka/cluster/ClusterHeartbeatSenderState.reachableMember:(Lakka/cluster/UniqueAddress;)Lakka/cluster/ClusterHeartbeatSenderState;
      12: invokevirtual #298                // Method state_$eq:(Lakka/cluster/ClusterHeartbeatSenderState;)V
      15: return

  public void heartbeat();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
       4: invokevirtual #168                // Method akka/cluster/ClusterHeartbeatSenderState.activeReceivers:()Lscala/collection/immutable/Set;
       7: new           #343                // class akka/cluster/ClusterHeartbeatSender$$anonfun$heartbeat$1
      10: dup
      11: aload_0
      12: invokespecial #344                // Method akka/cluster/ClusterHeartbeatSender$$anonfun$heartbeat$1."<init>":(Lakka/cluster/ClusterHeartbeatSender;)V
      15: invokeinterface #180,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
      20: return

  public void heartbeatRsp(akka.cluster.UniqueAddress);
    Code:
       0: aload_0
       1: invokevirtual #348                // Method verboseHeartbeat:()Z
       4: ifeq          30
       7: aload_0
       8: invokevirtual #350                // Method log:()Lakka/event/LoggingAdapter;
      11: ldc_w         #352                // String Cluster Node [{}] - Heartbeat response from [{}]
      14: aload_0
      15: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
      18: invokevirtual #356                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      21: aload_1
      22: invokevirtual #358                // Method akka/cluster/UniqueAddress.address:()Lakka/actor/Address;
      25: invokeinterface #364,  4          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      30: aload_0
      31: aload_0
      32: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
      35: aload_1
      36: invokevirtual #366                // Method akka/cluster/ClusterHeartbeatSenderState.heartbeatRsp:(Lakka/cluster/UniqueAddress;)Lakka/cluster/ClusterHeartbeatSenderState;
      39: invokevirtual #298                // Method state_$eq:(Lakka/cluster/ClusterHeartbeatSenderState;)V
      42: return

  public void triggerFirstHeartbeat(akka.cluster.UniqueAddress);
    Code:
       0: aload_0
       1: invokevirtual #162                // Method state:()Lakka/cluster/ClusterHeartbeatSenderState;
       4: invokevirtual #168                // Method akka/cluster/ClusterHeartbeatSenderState.activeReceivers:()Lscala/collection/immutable/Set;
       7: aload_1
       8: invokeinterface #372,  2          // InterfaceMethod scala/collection/immutable/Set.apply:(Ljava/lang/Object;)Z
      13: ifeq          75
      16: aload_0
      17: invokevirtual #374                // Method failureDetector:()Lakka/remote/FailureDetectorRegistry;
      20: aload_1
      21: invokevirtual #358                // Method akka/cluster/UniqueAddress.address:()Lakka/actor/Address;
      24: invokeinterface #379,  2          // InterfaceMethod akka/remote/FailureDetectorRegistry.isMonitoring:(Ljava/lang/Object;)Z
      29: ifne          75
      32: aload_0
      33: invokevirtual #348                // Method verboseHeartbeat:()Z
      36: ifeq          62
      39: aload_0
      40: invokevirtual #350                // Method log:()Lakka/event/LoggingAdapter;
      43: ldc_w         #381                // String Cluster Node [{}] - Trigger extra expected heartbeat from [{}]
      46: aload_0
      47: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
      50: invokevirtual #356                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      53: aload_1
      54: invokevirtual #358                // Method akka/cluster/UniqueAddress.address:()Lakka/actor/Address;
      57: invokeinterface #364,  4          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      62: aload_0
      63: invokevirtual #374                // Method failureDetector:()Lakka/remote/FailureDetectorRegistry;
      66: aload_1
      67: invokevirtual #358                // Method akka/cluster/UniqueAddress.address:()Lakka/actor/Address;
      70: invokeinterface #383,  2          // InterfaceMethod akka/remote/FailureDetectorRegistry.heartbeat:(Ljava/lang/Object;)V
      75: return

  public akka.cluster.ClusterHeartbeatSender();
    Code:
       0: aload_0
       1: invokespecial #385                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #388                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
       8: aload_0
       9: invokestatic  #391                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      12: aload_0
      13: getstatic     #396                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      16: aload_0
      17: invokevirtual #194                // Method context:()Lakka/actor/ActorContext;
      20: invokeinterface #399,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      25: invokevirtual #402                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      28: checkcast     #155                // class akka/cluster/Cluster
      31: putfield      #113                // Field cluster:Lakka/cluster/Cluster;
      34: aload_0
      35: aload_0
      36: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
      39: invokevirtual #406                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
      42: invokevirtual #412                // Method akka/cluster/ClusterSettings.Debug:()Lakka/cluster/ClusterSettings$Debug$;
      45: invokevirtual #417                // Method akka/cluster/ClusterSettings$Debug$.VerboseHeartbeatLogging:()Z
      48: putfield      #116                // Field verboseHeartbeat:Z
      51: aload_0
      52: getstatic     #396                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      55: aload_0
      56: invokevirtual #194                // Method context:()Lakka/actor/ActorContext;
      59: invokeinterface #399,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      64: invokevirtual #402                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      67: checkcast     #155                // class akka/cluster/Cluster
      70: invokevirtual #418                // Method akka/cluster/Cluster.failureDetector:()Lakka/remote/FailureDetectorRegistry;
      73: putfield      #119                // Field failureDetector:Lakka/remote/FailureDetectorRegistry;
      76: aload_0
      77: new           #420                // class akka/cluster/ClusterHeartbeatSender$Heartbeat
      80: dup
      81: aload_0
      82: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
      85: invokevirtual #356                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      88: invokespecial #423                // Method akka/cluster/ClusterHeartbeatSender$Heartbeat."<init>":(Lakka/actor/Address;)V
      91: putfield      #122                // Field selfHeartbeat:Lakka/cluster/ClusterHeartbeatSender$Heartbeat;
      94: aload_0
      95: new           #164                // class akka/cluster/ClusterHeartbeatSenderState
      98: dup
      99: new           #425                // class akka/cluster/HeartbeatNodeRing
     102: dup
     103: aload_0
     104: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     107: invokevirtual #313                // Method akka/cluster/Cluster.selfUniqueAddress:()Lakka/cluster/UniqueAddress;
     110: getstatic     #141                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     113: invokevirtual #429                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
     116: getstatic     #141                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     119: iconst_1
     120: anewarray     #328                // class akka/cluster/UniqueAddress
     123: dup
     124: iconst_0
     125: aload_0
     126: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     129: invokevirtual #313                // Method akka/cluster/Cluster.selfUniqueAddress:()Lakka/cluster/UniqueAddress;
     132: aastore
     133: checkcast     #149                // class "[Ljava/lang/Object;"
     136: invokevirtual #153                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     139: invokevirtual #432                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     142: checkcast     #176                // class scala/collection/immutable/Set
     145: getstatic     #141                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     148: invokevirtual #429                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
     151: invokevirtual #435                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
     154: aload_0
     155: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     158: invokevirtual #406                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     161: invokevirtual #439                // Method akka/cluster/ClusterSettings.MonitoredByNrOfMembers:()I
     164: invokespecial #442                // Method akka/cluster/HeartbeatNodeRing."<init>":(Lakka/cluster/UniqueAddress;Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;I)V
     167: getstatic     #141                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     170: invokevirtual #429                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
     173: invokevirtual #435                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
     176: aload_0
     177: invokevirtual #374                // Method failureDetector:()Lakka/remote/FailureDetectorRegistry;
     180: invokespecial #445                // Method akka/cluster/ClusterHeartbeatSenderState."<init>":(Lakka/cluster/HeartbeatNodeRing;Lscala/collection/immutable/Set;Lakka/remote/FailureDetectorRegistry;)V
     183: putfield      #125                // Field state:Lakka/cluster/ClusterHeartbeatSenderState;
     186: aload_0
     187: aload_0
     188: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     191: invokevirtual #449                // Method akka/cluster/Cluster.scheduler:()Lakka/actor/Scheduler;
     194: aload_0
     195: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     198: invokevirtual #406                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     201: invokevirtual #453                // Method akka/cluster/ClusterSettings.PeriodicTasksInitialDelay:()Lscala/concurrent/duration/FiniteDuration;
     204: aload_0
     205: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     208: invokevirtual #406                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     211: invokevirtual #456                // Method akka/cluster/ClusterSettings.HeartbeatInterval:()Lscala/concurrent/duration/FiniteDuration;
     214: invokevirtual #462                // Method scala/concurrent/duration/FiniteDuration.max:(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/FiniteDuration;
     217: aload_0
     218: invokevirtual #133                // Method cluster:()Lakka/cluster/Cluster;
     221: invokevirtual #406                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     224: invokevirtual #456                // Method akka/cluster/ClusterSettings.HeartbeatInterval:()Lscala/concurrent/duration/FiniteDuration;
     227: aload_0
     228: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
     231: getstatic     #467                // Field akka/cluster/ClusterHeartbeatSender$HeartbeatTick$.MODULE$:Lakka/cluster/ClusterHeartbeatSender$HeartbeatTick$;
     234: aload_0
     235: invokevirtual #194                // Method context:()Lakka/actor/ActorContext;
     238: invokeinterface #471,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     243: aload_0
     244: invokevirtual #135                // Method self:()Lakka/actor/ActorRef;
     247: invokeinterface #477,  7          // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
     252: putfield      #130                // Field heartbeatTask:Lakka/actor/Cancellable;
     255: return
}
