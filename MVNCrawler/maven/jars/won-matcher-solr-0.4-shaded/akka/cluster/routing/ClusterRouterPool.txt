Compiled from "ClusterRouterConfig.scala"
public final class akka.cluster.routing.ClusterRouterPool implements akka.routing.Pool,akka.cluster.routing.ClusterRouterConfigBase,scala.Product {
  public static final long serialVersionUID;

  private final akka.routing.Pool local;

  private final akka.cluster.routing.ClusterRouterPoolSettings settings;

  private final transient java.util.concurrent.atomic.AtomicInteger childNameCounter;

  public static scala.Option<scala.Tuple2<akka.routing.Pool, akka.cluster.routing.ClusterRouterPoolSettings>> unapply(akka.cluster.routing.ClusterRouterPool);
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPool$.MODULE$:Lakka/cluster/routing/ClusterRouterPool$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/cluster/routing/ClusterRouterPool$.unapply:(Lakka/cluster/routing/ClusterRouterPool;)Lscala/Option;
       7: areturn

  public static akka.cluster.routing.ClusterRouterPool apply(akka.routing.Pool, akka.cluster.routing.ClusterRouterPoolSettings);
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPool$.MODULE$:Lakka/cluster/routing/ClusterRouterPool$;
       3: aload_0
       4: aload_1
       5: invokevirtual #28                 // Method akka/cluster/routing/ClusterRouterPool$.apply:(Lakka/routing/Pool;Lakka/cluster/routing/ClusterRouterPoolSettings;)Lakka/cluster/routing/ClusterRouterPool;
       8: areturn

  public static scala.Function1<scala.Tuple2<akka.routing.Pool, akka.cluster.routing.ClusterRouterPoolSettings>, akka.cluster.routing.ClusterRouterPool> tupled();
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPool$.MODULE$:Lakka/cluster/routing/ClusterRouterPool$;
       3: invokevirtual #32                 // Method akka/cluster/routing/ClusterRouterPool$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.routing.Pool, scala.Function1<akka.cluster.routing.ClusterRouterPoolSettings, akka.cluster.routing.ClusterRouterPool>> curried();
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPool$.MODULE$:Lakka/cluster/routing/ClusterRouterPool$;
       3: invokevirtual #35                 // Method akka/cluster/routing/ClusterRouterPool$.curried:()Lscala/Function1;
       6: areturn

  public boolean akka$cluster$routing$ClusterRouterConfigBase$$super$isManagementMessage(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method akka/routing/RouterConfig$class.isManagementMessage:(Lakka/routing/RouterConfig;Ljava/lang/Object;)Z
       5: ireturn

  public akka.routing.Router createRouter(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method akka/cluster/routing/ClusterRouterConfigBase$class.createRouter:(Lakka/cluster/routing/ClusterRouterConfigBase;Lakka/actor/ActorSystem;)Lakka/routing/Router;
       5: areturn

  public java.lang.String routerDispatcher();
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method akka/cluster/routing/ClusterRouterConfigBase$class.routerDispatcher:(Lakka/cluster/routing/ClusterRouterConfigBase;)Ljava/lang/String;
       4: areturn

  public boolean stopRouterWhenAllRouteesRemoved();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method akka/cluster/routing/ClusterRouterConfigBase$class.stopRouterWhenAllRouteesRemoved:(Lakka/cluster/routing/ClusterRouterConfigBase;)Z
       4: ireturn

  public scala.Option<akka.actor.Props> routingLogicController(akka.routing.RoutingLogic);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #81                 // Method akka/cluster/routing/ClusterRouterConfigBase$class.routingLogicController:(Lakka/cluster/routing/ClusterRouterConfigBase;Lakka/routing/RoutingLogic;)Lscala/Option;
       5: areturn

  public boolean isManagementMessage(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method akka/cluster/routing/ClusterRouterConfigBase$class.isManagementMessage:(Lakka/cluster/routing/ClusterRouterConfigBase;Ljava/lang/Object;)Z
       5: ireturn

  public int nrOfInstances();
    Code:
       0: aload_0
       1: invokestatic  #93                 // Method akka/routing/Pool$class.nrOfInstances:(Lakka/routing/Pool;)I
       4: ireturn

  public boolean usePoolDispatcher();
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method akka/routing/Pool$class.usePoolDispatcher:(Lakka/routing/Pool;)Z
       4: ireturn

  public akka.actor.Props enrichWithPoolDispatcher(akka.actor.Props, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // Method akka/routing/Pool$class.enrichWithPoolDispatcher:(Lakka/routing/Pool;Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/actor/Props;
       6: areturn

  public akka.actor.Props props(akka.actor.Props);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method akka/routing/Pool$class.props:(Lakka/routing/Pool;Lakka/actor/Props;)Lakka/actor/Props;
       5: areturn

  public void verifyConfig(akka.actor.ActorPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // Method akka/routing/RouterConfig$class.verifyConfig:(Lakka/routing/RouterConfig;Lakka/actor/ActorPath;)V
       5: return

  public akka.routing.Pool local();
    Code:
       0: aload_0
       1: getfield      #121                // Field local:Lakka/routing/Pool;
       4: areturn

  public akka.cluster.routing.ClusterRouterPoolSettings settings();
    Code:
       0: aload_0
       1: getfield      #124                // Field settings:Lakka/cluster/routing/ClusterRouterPoolSettings;
       4: areturn

  private java.util.concurrent.atomic.AtomicInteger childNameCounter();
    Code:
       0: aload_0
       1: getfield      #127                // Field childNameCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  public akka.routing.Routee newRoutee(akka.actor.Props, akka.actor.ActorContext);
    Code:
       0: new           #131                // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #135                // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: ldc           #137                // String c
       9: invokevirtual #141                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      12: aload_0
      13: invokespecial #143                // Method childNameCounter:()Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #148                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      19: invokestatic  #154                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      22: invokevirtual #141                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      25: invokevirtual #157                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      28: astore_3
      29: aload_2
      30: checkcast     #159                // class akka/actor/ActorCell
      33: aload_0
      34: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      37: aload_1
      38: aload_2
      39: invokeinterface #163,  3          // InterfaceMethod akka/routing/Pool.enrichWithPoolDispatcher:(Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/actor/Props;
      44: aload_3
      45: iconst_0
      46: invokevirtual #167                // Method akka/actor/ActorCell.attachChild:(Lakka/actor/Props;Ljava/lang/String;Z)Lakka/actor/ActorRef;
      49: astore        4
      51: new           #169                // class akka/routing/ActorRefRoutee
      54: dup
      55: aload         4
      57: invokespecial #172                // Method akka/routing/ActorRefRoutee."<init>":(Lakka/actor/ActorRef;)V
      60: areturn

  public int nrOfInstances(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
       4: invokevirtual #184                // Method akka/cluster/routing/ClusterRouterPoolSettings.allowLocalRoutees:()Z
       7: ifeq          68
      10: aload_0
      11: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      14: invokevirtual #188                // Method akka/cluster/routing/ClusterRouterPoolSettings.useRole:()Lscala/Option;
      17: invokevirtual #193                // Method scala/Option.isDefined:()Z
      20: ifeq          68
      23: getstatic     #198                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      26: aload_1
      27: invokevirtual #201                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      30: checkcast     #203                // class akka/cluster/Cluster
      33: invokevirtual #207                // Method akka/cluster/Cluster.selfRoles:()Lscala/collection/immutable/Set;
      36: aload_0
      37: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      40: invokevirtual #188                // Method akka/cluster/routing/ClusterRouterPoolSettings.useRole:()Lscala/Option;
      43: invokevirtual #211                // Method scala/Option.get:()Ljava/lang/Object;
      46: invokeinterface #216,  2          // InterfaceMethod scala/collection/immutable/Set.contains:(Ljava/lang/Object;)Z
      51: ifeq          64
      54: aload_0
      55: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      58: invokevirtual #219                // Method akka/cluster/routing/ClusterRouterPoolSettings.maxInstancesPerNode:()I
      61: goto          102
      64: iconst_0
      65: goto          102
      68: aload_0
      69: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      72: invokevirtual #184                // Method akka/cluster/routing/ClusterRouterPoolSettings.allowLocalRoutees:()Z
      75: ifeq          101
      78: aload_0
      79: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      82: invokevirtual #188                // Method akka/cluster/routing/ClusterRouterPoolSettings.useRole:()Lscala/Option;
      85: invokevirtual #222                // Method scala/Option.isEmpty:()Z
      88: ifeq          101
      91: aload_0
      92: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      95: invokevirtual #219                // Method akka/cluster/routing/ClusterRouterPoolSettings.maxInstancesPerNode:()I
      98: goto          102
     101: iconst_0
     102: ireturn

  public scala.Option<akka.routing.Resizer> resizer();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method local:()Lakka/routing/Pool;
       4: invokeinterface #226,  1          // InterfaceMethod akka/routing/Pool.resizer:()Lscala/Option;
       9: areturn

  public akka.routing.RouterActor createRouterActor();
    Code:
       0: new           #230                // class akka/cluster/routing/ClusterRouterPoolActor
       3: dup
       4: aload_0
       5: invokevirtual #161                // Method local:()Lakka/routing/Pool;
       8: invokeinterface #234,  1          // InterfaceMethod akka/routing/Pool.supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      13: aload_0
      14: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      17: invokespecial #237                // Method akka/cluster/routing/ClusterRouterPoolActor."<init>":(Lakka/actor/SupervisorStrategy;Lakka/cluster/routing/ClusterRouterPoolSettings;)V
      20: areturn

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method local:()Lakka/routing/Pool;
       4: invokeinterface #234,  1          // InterfaceMethod akka/routing/Pool.supervisorStrategy:()Lakka/actor/SupervisorStrategy;
       9: areturn

  public akka.routing.RouterConfig withFallback(akka.routing.RouterConfig);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: astore_3
       4: aload_1
       5: astore        4
       7: aload         4
       9: instanceof    #2                  // class akka/cluster/routing/ClusterRouterPool
      12: ifeq          43
      15: iconst_1
      16: istore_2
      17: aload         4
      19: checkcast     #2                  // class akka/cluster/routing/ClusterRouterPool
      22: astore_3
      23: aload_3
      24: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      27: instanceof    #2                  // class akka/cluster/routing/ClusterRouterPool
      30: ifeq          43
      33: new           #241                // class java/lang/IllegalStateException
      36: dup
      37: ldc           #243                // String ClusterRouterPool is not allowed to wrap a ClusterRouterPool
      39: invokespecial #246                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_2
      44: ifeq          80
      47: aload_3
      48: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      51: astore        6
      53: aload_0
      54: aload_0
      55: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      58: aload         6
      60: invokeinterface #248,  2          // InterfaceMethod akka/routing/Pool.withFallback:(Lakka/routing/RouterConfig;)Lakka/routing/RouterConfig;
      65: checkcast     #6                  // class akka/routing/Pool
      68: aload_0
      69: invokevirtual #251                // Method copy$default$2:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      72: invokevirtual #254                // Method copy:(Lakka/routing/Pool;Lakka/cluster/routing/ClusterRouterPoolSettings;)Lakka/cluster/routing/ClusterRouterPool;
      75: astore        5
      77: goto          103
      80: aload_0
      81: aload_0
      82: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      85: aload_1
      86: invokeinterface #248,  2          // InterfaceMethod akka/routing/Pool.withFallback:(Lakka/routing/RouterConfig;)Lakka/routing/RouterConfig;
      91: checkcast     #6                  // class akka/routing/Pool
      94: aload_0
      95: invokevirtual #251                // Method copy$default$2:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      98: invokevirtual #254                // Method copy:(Lakka/routing/Pool;Lakka/cluster/routing/ClusterRouterPoolSettings;)Lakka/cluster/routing/ClusterRouterPool;
     101: astore        5
     103: aload         5
     105: areturn

  public akka.cluster.routing.ClusterRouterPool copy(akka.routing.Pool, akka.cluster.routing.ClusterRouterPoolSettings);
    Code:
       0: new           #2                  // class akka/cluster/routing/ClusterRouterPool
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #262                // Method "<init>":(Lakka/routing/Pool;Lakka/cluster/routing/ClusterRouterPoolSettings;)V
       9: areturn

  public akka.routing.Pool copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method local:()Lakka/routing/Pool;
       4: areturn

  public akka.cluster.routing.ClusterRouterPoolSettings copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #266                // String ClusterRouterPool
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #271                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #154                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #272                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #273                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      43: goto          50
      46: aload_0
      47: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #282                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #286                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/cluster/routing/ClusterRouterPool
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #282                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #292                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #282                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #296                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/cluster/routing/ClusterRouterPool
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/cluster/routing/ClusterRouterPool
      29: astore        4
      31: aload_0
      32: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      35: aload         4
      37: invokevirtual #161                // Method local:()Lakka/routing/Pool;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #299                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      67: aload         4
      69: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #299                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  public akka.cluster.routing.ClusterRouterSettingsBase settings();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
       4: areturn

  public akka.routing.RouterConfig local();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method local:()Lakka/routing/Pool;
       4: areturn

  public akka.cluster.routing.ClusterRouterPool(akka.routing.Pool, akka.cluster.routing.ClusterRouterPoolSettings);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field local:Lakka/routing/Pool;
       5: aload_0
       6: aload_2
       7: putfield      #124                // Field settings:Lakka/cluster/routing/ClusterRouterPoolSettings;
      10: aload_0
      11: invokespecial #302                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #306                // Method akka/routing/RouterConfig$class.$init$:(Lakka/routing/RouterConfig;)V
      18: aload_0
      19: invokestatic  #309                // Method akka/routing/Pool$class.$init$:(Lakka/routing/Pool;)V
      22: aload_0
      23: invokestatic  #312                // Method akka/cluster/routing/ClusterRouterConfigBase$class.$init$:(Lakka/cluster/routing/ClusterRouterConfigBase;)V
      26: aload_0
      27: invokestatic  #317                // Method scala/Product$class.$init$:(Lscala/Product;)V
      30: getstatic     #322                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: aload_1
      34: invokeinterface #226,  1          // InterfaceMethod akka/routing/Pool.resizer:()Lscala/Option;
      39: invokevirtual #222                // Method scala/Option.isEmpty:()Z
      42: new           #324                // class akka/cluster/routing/ClusterRouterPool$$anonfun$5
      45: dup
      46: aload_0
      47: invokespecial #327                // Method akka/cluster/routing/ClusterRouterPool$$anonfun$5."<init>":(Lakka/cluster/routing/ClusterRouterPool;)V
      50: invokevirtual #331                // Method scala/Predef$.require:(ZLscala/Function0;)V
      53: aload_0
      54: new           #145                // class java/util/concurrent/atomic/AtomicInteger
      57: dup
      58: invokespecial #332                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      61: putfield      #127                // Field childNameCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      64: return
}
