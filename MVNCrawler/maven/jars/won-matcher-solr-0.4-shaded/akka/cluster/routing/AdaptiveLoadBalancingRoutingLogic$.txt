Compiled from "AdaptiveLoadBalancing.scala"
public final class akka.cluster.routing.AdaptiveLoadBalancingRoutingLogic$ extends scala.runtime.AbstractFunction2<akka.actor.ActorSystem, akka.cluster.routing.MetricsSelector, akka.cluster.routing.AdaptiveLoadBalancingRoutingLogic> implements scala.Serializable {
  public static final akka.cluster.routing.AdaptiveLoadBalancingRoutingLogic$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic$
       3: invokespecial #15                 // Method "<init>":()V
       6: return

  public final java.lang.String toString();
    Code:
       0: ldc           #19                 // String AdaptiveLoadBalancingRoutingLogic
       2: areturn

  public akka.cluster.routing.AdaptiveLoadBalancingRoutingLogic apply(akka.actor.ActorSystem, akka.cluster.routing.MetricsSelector);
    Code:
       0: new           #24                 // class akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #27                 // Method akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic."<init>":(Lakka/actor/ActorSystem;Lakka/cluster/routing/MetricsSelector;)V
       9: areturn

  public scala.Option<scala.Tuple2<akka.actor.ActorSystem, akka.cluster.routing.MetricsSelector>> unapply(akka.cluster.routing.AdaptiveLoadBalancingRoutingLogic);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #38                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          32
      10: new           #40                 // class scala/Some
      13: dup
      14: new           #42                 // class scala/Tuple2
      17: dup
      18: aload_1
      19: invokevirtual #45                 // Method akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic.system:()Lakka/actor/ActorSystem;
      22: aload_1
      23: invokevirtual #48                 // Method akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic.metricsSelector:()Lakka/cluster/routing/MetricsSelector;
      26: invokespecial #51                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: invokespecial #54                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      32: areturn

  public akka.cluster.routing.MetricsSelector $lessinit$greater$default$2();
    Code:
       0: getstatic     #64                 // Field akka/cluster/routing/MixMetricsSelector$.MODULE$:Lakka/cluster/routing/MixMetricsSelector$;
       3: areturn

  public akka.cluster.routing.MetricsSelector apply$default$2();
    Code:
       0: getstatic     #64                 // Field akka/cluster/routing/MixMetricsSelector$.MODULE$:Lakka/cluster/routing/MixMetricsSelector$;
       3: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #69                 // Field MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingRoutingLogic$;
       3: areturn

  public java.lang.Object apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #72                 // class akka/actor/ActorSystem
       5: aload_2
       6: checkcast     #74                 // class akka/cluster/routing/MetricsSelector
       9: invokevirtual #76                 // Method apply:(Lakka/actor/ActorSystem;Lakka/cluster/routing/MetricsSelector;)Lakka/cluster/routing/AdaptiveLoadBalancingRoutingLogic;
      12: areturn

  private akka.cluster.routing.AdaptiveLoadBalancingRoutingLogic$();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method scala/runtime/AbstractFunction2."<init>":()V
       4: aload_0
       5: putstatic     #69                 // Field MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingRoutingLogic$;
       8: return
}
