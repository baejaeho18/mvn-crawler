Compiled from "AdaptiveLoadBalancing.scala"
public final class akka.cluster.routing.AdaptiveLoadBalancingPool implements akka.routing.Pool,scala.Product {
  public static final long serialVersionUID;

  private final akka.cluster.routing.MetricsSelector metricsSelector;

  private final int nrOfInstances;

  private final akka.actor.SupervisorStrategy supervisorStrategy;

  private final java.lang.String routerDispatcher;

  private final boolean usePoolDispatcher;

  public static boolean apply$default$5();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #22                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.apply$default$5:()Z
       6: ireturn

  public static java.lang.String apply$default$4();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #26                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.apply$default$4:()Ljava/lang/String;
       6: areturn

  public static akka.actor.SupervisorStrategy apply$default$3();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #30                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.apply$default$3:()Lakka/actor/SupervisorStrategy;
       6: areturn

  public static int apply$default$2();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #34                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.apply$default$2:()I
       6: ireturn

  public static akka.cluster.routing.MetricsSelector apply$default$1();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #38                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.apply$default$1:()Lakka/cluster/routing/MetricsSelector;
       6: areturn

  public static boolean $lessinit$greater$default$5();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #41                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$5:()Z
       6: ireturn

  public static java.lang.String $lessinit$greater$default$4();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #44                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$4:()Ljava/lang/String;
       6: areturn

  public static akka.actor.SupervisorStrategy $lessinit$greater$default$3();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #47                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$3:()Lakka/actor/SupervisorStrategy;
       6: areturn

  public static int $lessinit$greater$default$2();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #50                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$2:()I
       6: ireturn

  public static akka.cluster.routing.MetricsSelector $lessinit$greater$default$1();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #53                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$1:()Lakka/cluster/routing/MetricsSelector;
       6: areturn

  public static scala.Option<scala.Tuple5<akka.cluster.routing.MetricsSelector, java.lang.Object, akka.actor.SupervisorStrategy, java.lang.String, java.lang.Object>> unapply(akka.cluster.routing.AdaptiveLoadBalancingPool);
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: aload_0
       4: invokevirtual #57                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.unapply:(Lakka/cluster/routing/AdaptiveLoadBalancingPool;)Lscala/Option;
       7: areturn

  public static akka.cluster.routing.AdaptiveLoadBalancingPool apply(akka.cluster.routing.MetricsSelector, int, akka.actor.SupervisorStrategy, java.lang.String, boolean);
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: invokevirtual #61                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.apply:(Lakka/cluster/routing/MetricsSelector;ILakka/actor/SupervisorStrategy;Ljava/lang/String;Z)Lakka/cluster/routing/AdaptiveLoadBalancingPool;
      12: areturn

  public static scala.Function1<scala.Tuple5<akka.cluster.routing.MetricsSelector, java.lang.Object, akka.actor.SupervisorStrategy, java.lang.String, java.lang.Object>, akka.cluster.routing.AdaptiveLoadBalancingPool> tupled();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #65                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.cluster.routing.MetricsSelector, scala.Function1<java.lang.Object, scala.Function1<akka.actor.SupervisorStrategy, scala.Function1<java.lang.String, scala.Function1<java.lang.Object, akka.cluster.routing.AdaptiveLoadBalancingPool>>>>> curried();
    Code:
       0: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       3: invokevirtual #68                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.curried:()Lscala/Function1;
       6: areturn

  public akka.routing.Routee newRoutee(akka.actor.Props, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // Method akka/routing/Pool$class.newRoutee:(Lakka/routing/Pool;Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/routing/Routee;
       6: areturn

  public akka.actor.Props enrichWithPoolDispatcher(akka.actor.Props, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method akka/routing/Pool$class.enrichWithPoolDispatcher:(Lakka/routing/Pool;Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/actor/Props;
       6: areturn

  public akka.actor.Props props(akka.actor.Props);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method akka/routing/Pool$class.props:(Lakka/routing/Pool;Lakka/actor/Props;)Lakka/actor/Props;
       5: areturn

  public boolean stopRouterWhenAllRouteesRemoved();
    Code:
       0: aload_0
       1: invokestatic  #109                // Method akka/routing/Pool$class.stopRouterWhenAllRouteesRemoved:(Lakka/routing/Pool;)Z
       4: ireturn

  public akka.routing.RouterActor createRouterActor();
    Code:
       0: aload_0
       1: invokestatic  #114                // Method akka/routing/Pool$class.createRouterActor:(Lakka/routing/Pool;)Lakka/routing/RouterActor;
       4: areturn

  public boolean isManagementMessage(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #121                // Method akka/routing/RouterConfig$class.isManagementMessage:(Lakka/routing/RouterConfig;Ljava/lang/Object;)Z
       5: ireturn

  public void verifyConfig(akka.actor.ActorPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method akka/routing/RouterConfig$class.verifyConfig:(Lakka/routing/RouterConfig;Lakka/actor/ActorPath;)V
       5: return

  public akka.cluster.routing.MetricsSelector metricsSelector();
    Code:
       0: aload_0
       1: getfield      #132                // Field metricsSelector:Lakka/cluster/routing/MetricsSelector;
       4: areturn

  public int nrOfInstances();
    Code:
       0: aload_0
       1: getfield      #134                // Field nrOfInstances:I
       4: ireturn

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: getfield      #136                // Field supervisorStrategy:Lakka/actor/SupervisorStrategy;
       4: areturn

  public java.lang.String routerDispatcher();
    Code:
       0: aload_0
       1: getfield      #138                // Field routerDispatcher:Ljava/lang/String;
       4: areturn

  public boolean usePoolDispatcher();
    Code:
       0: aload_0
       1: getfield      #140                // Field usePoolDispatcher:Z
       4: ireturn

  public scala.Option<akka.routing.Resizer> resizer();
    Code:
       0: getstatic     #147                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public int nrOfInstances(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: invokevirtual #150                // Method nrOfInstances:()I
       4: ireturn

  public akka.routing.Router createRouter(akka.actor.ActorSystem);
    Code:
       0: new           #156                // class akka/routing/Router
       3: dup
       4: new           #158                // class akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic
       7: dup
       8: aload_1
       9: aload_0
      10: invokevirtual #160                // Method metricsSelector:()Lakka/cluster/routing/MetricsSelector;
      13: invokespecial #164                // Method akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic."<init>":(Lakka/actor/ActorSystem;Lakka/cluster/routing/MetricsSelector;)V
      16: invokespecial #167                // Method akka/routing/Router."<init>":(Lakka/routing/RoutingLogic;)V
      19: areturn

  public scala.Option<akka.actor.Props> routingLogicController(akka.routing.RoutingLogic);
    Code:
       0: new           #172                // class scala/Some
       3: dup
       4: getstatic     #177                // Field akka/actor/Props$.MODULE$:Lakka/actor/Props$;
       7: ldc           #179                // class akka/cluster/routing/AdaptiveLoadBalancingMetricsListener
       9: getstatic     #184                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: iconst_1
      13: anewarray     #4                  // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: checkcast     #158                // class akka/cluster/routing/AdaptiveLoadBalancingRoutingLogic
      22: aastore
      23: invokevirtual #188                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      26: invokevirtual #191                // Method akka/actor/Props$.apply:(Ljava/lang/Class;Lscala/collection/Seq;)Lakka/actor/Props;
      29: invokespecial #194                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      32: areturn

  public akka.cluster.routing.AdaptiveLoadBalancingPool withSupervisorStrategy(akka.actor.SupervisorStrategy);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokevirtual #201                // Method copy$default$1:()Lakka/cluster/routing/MetricsSelector;
       6: astore_3
       7: aload_0
       8: invokevirtual #204                // Method copy$default$2:()I
      11: istore        4
      13: aload_0
      14: invokevirtual #207                // Method copy$default$4:()Ljava/lang/String;
      17: astore        5
      19: aload_0
      20: invokevirtual #210                // Method copy$default$5:()Z
      23: istore        6
      25: aload_0
      26: aload_3
      27: iload         4
      29: aload_2
      30: aload         5
      32: iload         6
      34: invokevirtual #213                // Method copy:(Lakka/cluster/routing/MetricsSelector;ILakka/actor/SupervisorStrategy;Ljava/lang/String;Z)Lakka/cluster/routing/AdaptiveLoadBalancingPool;
      37: areturn

  public akka.cluster.routing.AdaptiveLoadBalancingPool withDispatcher(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokevirtual #201                // Method copy$default$1:()Lakka/cluster/routing/MetricsSelector;
       6: astore_3
       7: aload_0
       8: invokevirtual #204                // Method copy$default$2:()I
      11: istore        4
      13: aload_0
      14: invokevirtual #224                // Method copy$default$3:()Lakka/actor/SupervisorStrategy;
      17: astore        5
      19: aload_0
      20: invokevirtual #210                // Method copy$default$5:()Z
      23: istore        6
      25: aload_0
      26: aload_3
      27: iload         4
      29: aload         5
      31: aload_2
      32: iload         6
      34: invokevirtual #213                // Method copy:(Lakka/cluster/routing/MetricsSelector;ILakka/actor/SupervisorStrategy;Ljava/lang/String;Z)Lakka/cluster/routing/AdaptiveLoadBalancingPool;
      37: areturn

  public akka.routing.RouterConfig withFallback(akka.routing.RouterConfig);
    Code:
       0: aload_0
       1: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
       4: getstatic     #239                // Field akka/routing/Pool$.MODULE$:Lakka/routing/Pool$;
       7: invokevirtual #242                // Method akka/routing/Pool$.defaultSupervisorStrategy:()Lakka/actor/SupervisorStrategy;
      10: if_acmpeq     17
      13: aload_0
      14: goto          99
      17: aload_1
      18: astore_2
      19: aload_2
      20: instanceof    #244                // class akka/routing/FromConfig
      23: ifeq          31
      26: iconst_1
      27: istore_3
      28: goto          45
      31: aload_2
      32: instanceof    #246                // class akka/routing/NoRouter
      35: ifeq          43
      38: iconst_1
      39: istore_3
      40: goto          45
      43: iconst_0
      44: istore_3
      45: iload_3
      46: ifeq          55
      49: aload_0
      50: astore        4
      52: goto          97
      55: aload_2
      56: instanceof    #2                  // class akka/cluster/routing/AdaptiveLoadBalancingPool
      59: ifeq          100
      62: aload_2
      63: checkcast     #2                  // class akka/cluster/routing/AdaptiveLoadBalancingPool
      66: astore        5
      68: aload         5
      70: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      73: getstatic     #239                // Field akka/routing/Pool$.MODULE$:Lakka/routing/Pool$;
      76: invokevirtual #242                // Method akka/routing/Pool$.defaultSupervisorStrategy:()Lakka/actor/SupervisorStrategy;
      79: if_acmpne     86
      82: aload_0
      83: goto          95
      86: aload_0
      87: aload         5
      89: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      92: invokevirtual #248                // Method withSupervisorStrategy:(Lakka/actor/SupervisorStrategy;)Lakka/cluster/routing/AdaptiveLoadBalancingPool;
      95: astore        4
      97: aload         4
      99: areturn
     100: new           #250                // class java/lang/IllegalArgumentException
     103: dup
     104: new           #252                // class scala/collection/immutable/StringOps
     107: dup
     108: getstatic     #184                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     111: ldc           #254                // String Expected AdaptiveLoadBalancingPool, got [%s]
     113: invokevirtual #258                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     116: invokespecial #261                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     119: getstatic     #184                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     122: iconst_1
     123: anewarray     #4                  // class java/lang/Object
     126: dup
     127: iconst_0
     128: aload_1
     129: aastore
     130: invokevirtual #188                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     133: invokevirtual #265                // Method scala/collection/immutable/StringOps.format:(Lscala/collection/Seq;)Ljava/lang/String;
     136: invokespecial #266                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow

  public akka.cluster.routing.AdaptiveLoadBalancingPool copy(akka.cluster.routing.MetricsSelector, int, akka.actor.SupervisorStrategy, java.lang.String, boolean);
    Code:
       0: new           #2                  // class akka/cluster/routing/AdaptiveLoadBalancingPool
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: iload         5
      11: invokespecial #273                // Method "<init>":(Lakka/cluster/routing/MetricsSelector;ILakka/actor/SupervisorStrategy;Ljava/lang/String;Z)V
      14: areturn

  public akka.cluster.routing.MetricsSelector copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method metricsSelector:()Lakka/cluster/routing/MetricsSelector;
       4: areturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method nrOfInstances:()I
       4: ireturn

  public akka.actor.SupervisorStrategy copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
       4: areturn

  public java.lang.String copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #275                // Method routerDispatcher:()Ljava/lang/String;
       4: areturn

  public boolean copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #277                // Method usePoolDispatcher:()Z
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #280                // String AdaptiveLoadBalancingPool
       3: areturn

  public int productArity();
    Code:
       0: iconst_5
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 4
                     0: 85
                     1: 75
                     2: 68
                     3: 61
                     4: 51
               default: 36
          }
      36: new           #285                // class java/lang/IndexOutOfBoundsException
      39: dup
      40: iload_1
      41: invokestatic  #291                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      44: invokevirtual #294                // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokespecial #295                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: invokevirtual #277                // Method usePoolDispatcher:()Z
      55: invokestatic  #299                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      58: goto          89
      61: aload_0
      62: invokevirtual #275                // Method routerDispatcher:()Ljava/lang/String;
      65: goto          89
      68: aload_0
      69: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      72: goto          89
      75: aload_0
      76: invokevirtual #150                // Method nrOfInstances:()I
      79: invokestatic  #291                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      82: goto          89
      85: aload_0
      86: invokevirtual #160                // Method metricsSelector:()Lakka/cluster/routing/MetricsSelector;
      89: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #307                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #311                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/cluster/routing/AdaptiveLoadBalancingPool
       4: ireturn

  public int hashCode();
    Code:
       0: ldc_w         #314                // int -889275714
       3: istore_1
       4: iload_1
       5: aload_0
       6: invokevirtual #160                // Method metricsSelector:()Lakka/cluster/routing/MetricsSelector;
       9: invokestatic  #320                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      12: invokestatic  #324                // Method scala/runtime/Statics.mix:(II)I
      15: istore_1
      16: iload_1
      17: aload_0
      18: invokevirtual #150                // Method nrOfInstances:()I
      21: invokestatic  #324                // Method scala/runtime/Statics.mix:(II)I
      24: istore_1
      25: iload_1
      26: aload_0
      27: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      30: invokestatic  #320                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      33: invokestatic  #324                // Method scala/runtime/Statics.mix:(II)I
      36: istore_1
      37: iload_1
      38: aload_0
      39: invokevirtual #275                // Method routerDispatcher:()Ljava/lang/String;
      42: invokestatic  #320                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      45: invokestatic  #324                // Method scala/runtime/Statics.mix:(II)I
      48: istore_1
      49: iload_1
      50: aload_0
      51: invokevirtual #277                // Method usePoolDispatcher:()Z
      54: ifeq          63
      57: sipush        1231
      60: goto          66
      63: sipush        1237
      66: invokestatic  #324                // Method scala/runtime/Statics.mix:(II)I
      69: istore_1
      70: iload_1
      71: iconst_5
      72: invokestatic  #327                // Method scala/runtime/Statics.finalizeHash:(II)I
      75: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #307                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #331                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     159
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/cluster/routing/AdaptiveLoadBalancingPool
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          163
      25: aload_1
      26: checkcast     #2                  // class akka/cluster/routing/AdaptiveLoadBalancingPool
      29: astore        4
      31: aload_0
      32: invokevirtual #160                // Method metricsSelector:()Lakka/cluster/routing/MetricsSelector;
      35: aload         4
      37: invokevirtual #160                // Method metricsSelector:()Lakka/cluster/routing/MetricsSelector;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          155
      55: aload         5
      57: invokevirtual #334                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          155
      63: aload_0
      64: invokevirtual #150                // Method nrOfInstances:()I
      67: aload         4
      69: invokevirtual #150                // Method nrOfInstances:()I
      72: if_icmpne     155
      75: aload_0
      76: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      79: aload         4
      81: invokevirtual #234                // Method supervisorStrategy:()Lakka/actor/SupervisorStrategy;
      84: astore        6
      86: dup
      87: ifnonnull     99
      90: pop
      91: aload         6
      93: ifnull        107
      96: goto          155
      99: aload         6
     101: invokevirtual #334                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifeq          155
     107: aload_0
     108: invokevirtual #275                // Method routerDispatcher:()Ljava/lang/String;
     111: aload         4
     113: invokevirtual #275                // Method routerDispatcher:()Ljava/lang/String;
     116: astore        7
     118: dup
     119: ifnonnull     131
     122: pop
     123: aload         7
     125: ifnull        139
     128: goto          155
     131: aload         7
     133: invokevirtual #334                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     136: ifeq          155
     139: aload_0
     140: invokevirtual #277                // Method usePoolDispatcher:()Z
     143: aload         4
     145: invokevirtual #277                // Method usePoolDispatcher:()Z
     148: if_icmpne     155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: ifeq          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: ireturn

  public akka.cluster.routing.AdaptiveLoadBalancingPool(akka.cluster.routing.MetricsSelector, int, akka.actor.SupervisorStrategy, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #132                // Field metricsSelector:Lakka/cluster/routing/MetricsSelector;
       5: aload_0
       6: iload_2
       7: putfield      #134                // Field nrOfInstances:I
      10: aload_0
      11: aload_3
      12: putfield      #136                // Field supervisorStrategy:Lakka/actor/SupervisorStrategy;
      15: aload_0
      16: aload         4
      18: putfield      #138                // Field routerDispatcher:Ljava/lang/String;
      21: aload_0
      22: iload         5
      24: putfield      #140                // Field usePoolDispatcher:Z
      27: aload_0
      28: invokespecial #343                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #347                // Method akka/routing/RouterConfig$class.$init$:(Lakka/routing/RouterConfig;)V
      35: aload_0
      36: invokestatic  #350                // Method akka/routing/Pool$class.$init$:(Lakka/routing/Pool;)V
      39: aload_0
      40: invokestatic  #355                // Method scala/Product$class.$init$:(Lscala/Product;)V
      43: return

  public akka.cluster.routing.AdaptiveLoadBalancingPool(com.typesafe.config.Config, akka.actor.DynamicAccess);
    Code:
       0: getstatic     #361                // Field akka/cluster/routing/ClusterRouterSettingsBase$.MODULE$:Lakka/cluster/routing/ClusterRouterSettingsBase$;
       3: aload_1
       4: invokevirtual #365                // Method akka/cluster/routing/ClusterRouterSettingsBase$.getMaxTotalNrOfInstances:(Lcom/typesafe/config/Config;)I
       7: istore_3
       8: getstatic     #370                // Field akka/cluster/routing/MetricsSelector$.MODULE$:Lakka/cluster/routing/MetricsSelector$;
      11: aload_1
      12: aload_2
      13: invokevirtual #374                // Method akka/cluster/routing/MetricsSelector$.fromConfig:(Lcom/typesafe/config/Config;Lakka/actor/DynamicAccess;)Lakka/cluster/routing/MetricsSelector;
      16: astore        4
      18: aload_1
      19: ldc_w         #376                // String pool-dispatcher
      22: invokeinterface #382,  2          // InterfaceMethod com/typesafe/config/Config.hasPath:(Ljava/lang/String;)Z
      27: istore        5
      29: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
      32: invokevirtual #47                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$3:()Lakka/actor/SupervisorStrategy;
      35: astore        6
      37: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
      40: invokevirtual #44                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$4:()Ljava/lang/String;
      43: astore        7
      45: aload_0
      46: aload         4
      48: iload_3
      49: aload         6
      51: aload         7
      53: iload         5
      55: invokespecial #273                // Method "<init>":(Lakka/cluster/routing/MetricsSelector;ILakka/actor/SupervisorStrategy;Ljava/lang/String;Z)V
      58: return

  public akka.cluster.routing.AdaptiveLoadBalancingPool(akka.cluster.routing.MetricsSelector, int);
    Code:
       0: iload_2
       1: istore_3
       2: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
       5: invokevirtual #53                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$1:()Lakka/cluster/routing/MetricsSelector;
       8: astore        4
      10: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
      13: invokevirtual #47                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$3:()Lakka/actor/SupervisorStrategy;
      16: astore        5
      18: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
      21: invokevirtual #44                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$4:()Ljava/lang/String;
      24: astore        6
      26: getstatic     #20                 // Field akka/cluster/routing/AdaptiveLoadBalancingPool$.MODULE$:Lakka/cluster/routing/AdaptiveLoadBalancingPool$;
      29: invokevirtual #41                 // Method akka/cluster/routing/AdaptiveLoadBalancingPool$.$lessinit$greater$default$5:()Z
      32: istore        7
      34: aload_0
      35: aload         4
      37: iload_3
      38: aload         5
      40: aload         6
      42: iload         7
      44: invokespecial #273                // Method "<init>":(Lakka/cluster/routing/MetricsSelector;ILakka/actor/SupervisorStrategy;Ljava/lang/String;Z)V
      47: return
}
