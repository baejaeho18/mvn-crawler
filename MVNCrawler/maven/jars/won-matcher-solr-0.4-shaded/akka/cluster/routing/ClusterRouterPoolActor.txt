Compiled from "ClusterRouterConfig.scala"
public class akka.cluster.routing.ClusterRouterPoolActor extends akka.routing.RouterPoolActor implements akka.cluster.routing.ClusterRouterActor {
  private final akka.cluster.routing.ClusterRouterPoolSettings settings;

  private scala.collection.immutable.SortedSet<akka.actor.Address> nodes;

  public scala.collection.immutable.SortedSet<akka.actor.Address> nodes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field nodes:Lscala/collection/immutable/SortedSet;
       4: areturn

  public void nodes_$eq(scala.collection.immutable.SortedSet<akka.actor.Address>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field nodes:Lscala/collection/immutable/SortedSet;
       5: return

  public akka.cluster.Cluster cluster();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method akka/cluster/routing/ClusterRouterActor$class.cluster:(Lakka/routing/RouterActor;)Lakka/cluster/Cluster;
       4: areturn

  public void preStart();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method akka/cluster/routing/ClusterRouterActor$class.preStart:(Lakka/routing/RouterActor;)V
       4: return

  public void postStop();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method akka/cluster/routing/ClusterRouterActor$class.postStop:(Lakka/routing/RouterActor;)V
       4: return

  public boolean isAvailable(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method akka/cluster/routing/ClusterRouterActor$class.isAvailable:(Lakka/routing/RouterActor;Lakka/cluster/Member;)Z
       5: ireturn

  public scala.collection.immutable.SortedSet<akka.actor.Address> availableNodes();
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method akka/cluster/routing/ClusterRouterActor$class.availableNodes:(Lakka/routing/RouterActor;)Lscala/collection/immutable/SortedSet;
       4: areturn

  public akka.actor.Address fullAddress(akka.routing.Routee);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method akka/cluster/routing/ClusterRouterActor$class.fullAddress:(Lakka/routing/RouterActor;Lakka/routing/Routee;)Lakka/actor/Address;
       5: areturn

  public void addMember(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method akka/cluster/routing/ClusterRouterActor$class.addMember:(Lakka/routing/RouterActor;Lakka/cluster/Member;)V
       5: return

  public void removeMember(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method akka/cluster/routing/ClusterRouterActor$class.removeMember:(Lakka/routing/RouterActor;Lakka/cluster/Member;)V
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> clusterReceive();
    Code:
       0: aload_0
       1: invokestatic  #70                 // Method akka/cluster/routing/ClusterRouterActor$class.clusterReceive:(Lakka/routing/RouterActor;)Lscala/PartialFunction;
       4: areturn

  public akka.cluster.routing.ClusterRouterPoolSettings settings();
    Code:
       0: aload_0
       1: getfield      #73                 // Field settings:Lakka/cluster/routing/ClusterRouterPoolSettings;
       4: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method clusterReceive:()Lscala/PartialFunction;
       4: aload_0
       5: invokespecial #78                 // Method akka/routing/RouterPoolActor.receive:()Lscala/PartialFunction;
       8: invokeinterface #84,  2           // InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
      13: areturn

  public void addRoutees();
    Code:
       0: aload_0
       1: invokespecial #88                 // Method doAddRoutees$1:()V
       4: return

  public scala.Option<akka.actor.Address> selectDeploymentTarget();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method cell:()Lakka/routing/RoutedActorCell;
       4: invokevirtual #100                // Method akka/routing/RoutedActorCell.router:()Lakka/routing/Router;
       7: invokevirtual #106                // Method akka/routing/Router.routees:()Lscala/collection/immutable/IndexedSeq;
      10: astore_1
      11: aload_0
      12: invokevirtual #108                // Method availableNodes:()Lscala/collection/immutable/SortedSet;
      15: astore_2
      16: aload_2
      17: invokeinterface #114,  1          // InterfaceMethod scala/collection/immutable/SortedSet.isEmpty:()Z
      22: ifne          41
      25: aload_1
      26: invokeinterface #120,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.size:()I
      31: aload_0
      32: invokevirtual #122                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
      35: invokevirtual #127                // Method akka/cluster/routing/ClusterRouterPoolSettings.totalInstances:()I
      38: if_icmplt     47
      41: getstatic     #133                // Field scala/None$.MODULE$:Lscala/None$;
      44: goto          231
      47: aload_1
      48: aload_2
      49: new           #135                // class akka/cluster/routing/ClusterRouterPoolActor$$anonfun$6
      52: dup
      53: aload_0
      54: invokespecial #139                // Method akka/cluster/routing/ClusterRouterPoolActor$$anonfun$6."<init>":(Lakka/cluster/routing/ClusterRouterPoolActor;)V
      57: getstatic     #144                // Field scala/collection/immutable/SortedSet$.MODULE$:Lscala/collection/immutable/SortedSet$;
      60: getstatic     #149                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
      63: getstatic     #154                // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
      66: invokevirtual #158                // Method akka/actor/Address$.addressOrdering:()Lscala/math/Ordering;
      69: getstatic     #163                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
      72: invokevirtual #167                // Method scala/math/Ordering$.Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
      75: invokevirtual #171                // Method scala/collection/immutable/SortedSet$.newCanBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      78: invokeinterface #175,  3          // InterfaceMethod scala/collection/immutable/SortedSet.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      83: checkcast     #177                // class scala/collection/TraversableOnce
      86: getstatic     #182                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      89: invokevirtual #186                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      92: invokeinterface #190,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      97: iconst_0
      98: invokestatic  #196                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     101: invokeinterface #202,  2          // InterfaceMethod scala/collection/immutable/Map.withDefaultValue:(Ljava/lang/Object;)Lscala/collection/immutable/Map;
     106: new           #204                // class akka/cluster/routing/ClusterRouterPoolActor$$anonfun$7
     109: dup
     110: aload_0
     111: invokespecial #205                // Method akka/cluster/routing/ClusterRouterPoolActor$$anonfun$7."<init>":(Lakka/cluster/routing/ClusterRouterPoolActor;)V
     114: invokeinterface #209,  3          // InterfaceMethod scala/collection/immutable/IndexedSeq.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     119: checkcast     #198                // class scala/collection/immutable/Map
     122: astore_3
     123: aload_3
     124: new           #211                // class akka/cluster/routing/ClusterRouterPoolActor$$anonfun$8
     127: dup
     128: aload_0
     129: invokespecial #212                // Method akka/cluster/routing/ClusterRouterPoolActor$$anonfun$8."<init>":(Lakka/cluster/routing/ClusterRouterPoolActor;)V
     132: getstatic     #163                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
     135: invokeinterface #216,  3          // InterfaceMethod scala/collection/immutable/Map.minBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
     140: checkcast     #218                // class scala/Tuple2
     143: astore        5
     145: aload         5
     147: ifnull        232
     150: aload         5
     152: invokevirtual #222                // Method scala/Tuple2._1:()Ljava/lang/Object;
     155: checkcast     #224                // class akka/actor/Address
     158: astore        6
     160: aload         5
     162: invokevirtual #227                // Method scala/Tuple2._2$mcI$sp:()I
     165: istore        7
     167: new           #218                // class scala/Tuple2
     170: dup
     171: aload         6
     173: iload         7
     175: invokestatic  #196                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     178: invokespecial #230                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     181: astore        8
     183: aload         8
     185: astore        4
     187: aload         4
     189: invokevirtual #222                // Method scala/Tuple2._1:()Ljava/lang/Object;
     192: checkcast     #224                // class akka/actor/Address
     195: astore        9
     197: aload         4
     199: invokevirtual #227                // Method scala/Tuple2._2$mcI$sp:()I
     202: istore        10
     204: iload         10
     206: aload_0
     207: invokevirtual #122                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
     210: invokevirtual #233                // Method akka/cluster/routing/ClusterRouterPoolSettings.maxInstancesPerNode:()I
     213: if_icmpge     228
     216: new           #235                // class scala/Some
     219: dup
     220: aload         9
     222: invokespecial #238                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     225: goto          231
     228: getstatic     #133                // Field scala/None$.MODULE$:Lscala/None$;
     231: areturn
     232: new           #240                // class scala/MatchError
     235: dup
     236: aload         5
     238: invokespecial #241                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     241: athrow

  public akka.cluster.routing.ClusterRouterSettingsBase settings();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method settings:()Lakka/cluster/routing/ClusterRouterPoolSettings;
       4: areturn

  private final void doAddRoutees$1();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method selectDeploymentTarget:()Lscala/Option;
       4: astore_2
       5: getstatic     #133                // Field scala/None$.MODULE$:Lscala/None$;
       8: aload_2
       9: invokevirtual #261                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          24
      15: getstatic     #267                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      18: astore_3
      19: getstatic     #267                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      22: pop
      23: return
      24: aload_2
      25: instanceof    #235                // class scala/Some
      28: ifeq          158
      31: aload_2
      32: checkcast     #235                // class scala/Some
      35: astore        4
      37: aload         4
      39: invokevirtual #270                // Method scala/Some.x:()Ljava/lang/Object;
      42: checkcast     #224                // class akka/actor/Address
      45: astore        5
      47: aload_0
      48: invokevirtual #94                 // Method cell:()Lakka/routing/RoutedActorCell;
      51: invokevirtual #274                // Method akka/routing/RoutedActorCell.routeeProps:()Lakka/actor/Props;
      54: astore        6
      56: invokestatic  #280                // Method com/typesafe/config/ConfigFactory.empty:()Lcom/typesafe/config/Config;
      59: astore        8
      61: aload         6
      63: invokevirtual #286                // Method akka/actor/Props.routerConfig:()Lakka/routing/RouterConfig;
      66: astore        9
      68: new           #288                // class akka/remote/RemoteScope
      71: dup
      72: aload         5
      74: invokespecial #291                // Method akka/remote/RemoteScope."<init>":(Lakka/actor/Address;)V
      77: astore        10
      79: getstatic     #296                // Field akka/actor/Deploy$.MODULE$:Lakka/actor/Deploy$;
      82: invokevirtual #300                // Method akka/actor/Deploy$.apply$default$1:()Ljava/lang/String;
      85: astore        11
      87: getstatic     #296                // Field akka/actor/Deploy$.MODULE$:Lakka/actor/Deploy$;
      90: invokevirtual #303                // Method akka/actor/Deploy$.apply$default$5:()Ljava/lang/String;
      93: astore        12
      95: getstatic     #296                // Field akka/actor/Deploy$.MODULE$:Lakka/actor/Deploy$;
      98: invokevirtual #306                // Method akka/actor/Deploy$.apply$default$6:()Ljava/lang/String;
     101: astore        13
     103: new           #308                // class akka/actor/Deploy
     106: dup
     107: aload         11
     109: aload         8
     111: aload         9
     113: aload         10
     115: aload         12
     117: aload         13
     119: invokespecial #311                // Method akka/actor/Deploy."<init>":(Ljava/lang/String;Lcom/typesafe/config/Config;Lakka/routing/RouterConfig;Lakka/actor/Scope;Ljava/lang/String;Ljava/lang/String;)V
     122: astore        7
     124: aload_0
     125: invokevirtual #315                // Method pool:()Lakka/routing/Pool;
     128: aload         6
     130: aload         7
     132: invokevirtual #319                // Method akka/actor/Props.withDeploy:(Lakka/actor/Deploy;)Lakka/actor/Props;
     135: aload_0
     136: invokevirtual #323                // Method context:()Lakka/actor/ActorContext;
     139: invokeinterface #329,  3          // InterfaceMethod akka/routing/Pool.newRoutee:(Lakka/actor/Props;Lakka/actor/ActorContext;)Lakka/routing/Routee;
     144: astore        14
     146: aload_0
     147: invokevirtual #94                 // Method cell:()Lakka/routing/RoutedActorCell;
     150: aload         14
     152: invokevirtual #333                // Method akka/routing/RoutedActorCell.addRoutee:(Lakka/routing/Routee;)V
     155: goto          0
     158: new           #240                // class scala/MatchError
     161: dup
     162: aload_2
     163: invokespecial #241                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     166: athrow

  public akka.cluster.routing.ClusterRouterPoolActor(akka.actor.SupervisorStrategy, akka.cluster.routing.ClusterRouterPoolSettings);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #73                 // Field settings:Lakka/cluster/routing/ClusterRouterPoolSettings;
       5: aload_0
       6: aload_1
       7: invokespecial #351                // Method akka/routing/RouterPoolActor."<init>":(Lakka/actor/SupervisorStrategy;)V
      10: aload_0
      11: invokestatic  #354                // Method akka/cluster/routing/ClusterRouterActor$class.$init$:(Lakka/routing/RouterActor;)V
      14: return
}
