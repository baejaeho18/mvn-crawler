Compiled from "ClusterRouterConfig.scala"
public final class akka.cluster.routing.ClusterRouterPoolSettings implements akka.cluster.routing.ClusterRouterSettingsBase,scala.Product,scala.Serializable {
  public static final long serialVersionUID;

  private final int totalInstances;

  private final int maxInstancesPerNode;

  private final boolean allowLocalRoutees;

  private final scala.Option<java.lang.String> useRole;

  public static scala.Option<scala.Tuple4<java.lang.Object, java.lang.Object, java.lang.Object, scala.Option<java.lang.String>>> unapply(akka.cluster.routing.ClusterRouterPoolSettings);
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPoolSettings$.MODULE$:Lakka/cluster/routing/ClusterRouterPoolSettings$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/cluster/routing/ClusterRouterPoolSettings$.unapply:(Lakka/cluster/routing/ClusterRouterPoolSettings;)Lscala/Option;
       7: areturn

  public static akka.cluster.routing.ClusterRouterPoolSettings apply(int, int, boolean, scala.Option<java.lang.String>);
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPoolSettings$.MODULE$:Lakka/cluster/routing/ClusterRouterPoolSettings$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #28                 // Method akka/cluster/routing/ClusterRouterPoolSettings$.apply:(IIZLscala/Option;)Lakka/cluster/routing/ClusterRouterPoolSettings;
      10: areturn

  public static akka.cluster.routing.ClusterRouterPoolSettings fromConfig(com.typesafe.config.Config);
    Code:
       0: getstatic     #22                 // Field akka/cluster/routing/ClusterRouterPoolSettings$.MODULE$:Lakka/cluster/routing/ClusterRouterPoolSettings$;
       3: aload_0
       4: invokevirtual #32                 // Method akka/cluster/routing/ClusterRouterPoolSettings$.fromConfig:(Lcom/typesafe/config/Config;)Lakka/cluster/routing/ClusterRouterPoolSettings;
       7: areturn

  public int totalInstances();
    Code:
       0: aload_0
       1: getfield      #47                 // Field totalInstances:I
       4: ireturn

  public int maxInstancesPerNode();
    Code:
       0: aload_0
       1: getfield      #51                 // Field maxInstancesPerNode:I
       4: ireturn

  public boolean allowLocalRoutees();
    Code:
       0: aload_0
       1: getfield      #54                 // Field allowLocalRoutees:Z
       4: ireturn

  public scala.Option<java.lang.String> useRole();
    Code:
       0: aload_0
       1: getfield      #57                 // Field useRole:Lscala/Option;
       4: areturn

  public akka.cluster.routing.ClusterRouterPoolSettings copy(int, int, boolean, scala.Option<java.lang.String>);
    Code:
       0: new           #2                  // class akka/cluster/routing/ClusterRouterPoolSettings
       3: dup
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokespecial #62                 // Method "<init>":(IIZLscala/Option;)V
      12: areturn

  public int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method totalInstances:()I
       4: ireturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method maxInstancesPerNode:()I
       4: ireturn

  public boolean copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method allowLocalRoutees:()Z
       4: ireturn

  public scala.Option<java.lang.String> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method useRole:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #78                 // String ClusterRouterPoolSettings
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 74
                     1: 64
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #83                 // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #95                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #74                 // Method useRole:()Lscala/Option;
      51: goto          81
      54: aload_0
      55: invokevirtual #71                 // Method allowLocalRoutees:()Z
      58: invokestatic  #99                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      61: goto          81
      64: aload_0
      65: invokevirtual #68                 // Method maxInstancesPerNode:()I
      68: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      71: goto          81
      74: aload_0
      75: invokevirtual #65                 // Method totalInstances:()I
      78: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      81: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #107                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #111                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/cluster/routing/ClusterRouterPoolSettings
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #116                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #65                 // Method totalInstances:()I
       8: invokestatic  #122                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: invokevirtual #68                 // Method maxInstancesPerNode:()I
      17: invokestatic  #122                // Method scala/runtime/Statics.mix:(II)I
      20: istore_1
      21: iload_1
      22: aload_0
      23: invokevirtual #71                 // Method allowLocalRoutees:()Z
      26: ifeq          35
      29: sipush        1231
      32: goto          38
      35: sipush        1237
      38: invokestatic  #122                // Method scala/runtime/Statics.mix:(II)I
      41: istore_1
      42: iload_1
      43: aload_0
      44: invokevirtual #74                 // Method useRole:()Lscala/Option;
      47: invokestatic  #126                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      50: invokestatic  #122                // Method scala/runtime/Statics.mix:(II)I
      53: istore_1
      54: iload_1
      55: iconst_4
      56: invokestatic  #129                // Method scala/runtime/Statics.finalizeHash:(II)I
      59: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #107                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #133                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     107
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/cluster/routing/ClusterRouterPoolSettings
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          111
      25: aload_1
      26: checkcast     #2                  // class akka/cluster/routing/ClusterRouterPoolSettings
      29: astore        4
      31: aload_0
      32: invokevirtual #65                 // Method totalInstances:()I
      35: aload         4
      37: invokevirtual #65                 // Method totalInstances:()I
      40: if_icmpne     103
      43: aload_0
      44: invokevirtual #68                 // Method maxInstancesPerNode:()I
      47: aload         4
      49: invokevirtual #68                 // Method maxInstancesPerNode:()I
      52: if_icmpne     103
      55: aload_0
      56: invokevirtual #71                 // Method allowLocalRoutees:()Z
      59: aload         4
      61: invokevirtual #71                 // Method allowLocalRoutees:()Z
      64: if_icmpne     103
      67: aload_0
      68: invokevirtual #74                 // Method useRole:()Lscala/Option;
      71: aload         4
      73: invokevirtual #74                 // Method useRole:()Lscala/Option;
      76: astore        5
      78: dup
      79: ifnonnull     91
      82: pop
      83: aload         5
      85: ifnull        99
      88: goto          103
      91: aload         5
      93: invokevirtual #136                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      96: ifeq          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: ireturn

  public akka.cluster.routing.ClusterRouterPoolSettings(int, int, boolean, scala.Option<java.lang.String>);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field totalInstances:I
       5: aload_0
       6: iload_2
       7: putfield      #51                 // Field maxInstancesPerNode:I
      10: aload_0
      11: iload_3
      12: putfield      #54                 // Field allowLocalRoutees:Z
      15: aload_0
      16: aload         4
      18: putfield      #57                 // Field useRole:Lscala/Option;
      21: aload_0
      22: invokespecial #141                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #147                // Method akka/cluster/routing/ClusterRouterSettingsBase$class.$init$:(Lakka/cluster/routing/ClusterRouterSettingsBase;)V
      29: aload_0
      30: invokestatic  #152                // Method scala/Product$class.$init$:(Lscala/Product;)V
      33: iload_2
      34: iconst_0
      35: if_icmpgt     48
      38: new           #154                // class java/lang/IllegalArgumentException
      41: dup
      42: ldc           #156                // String maxInstancesPerNode of cluster pool router must be > 0
      44: invokespecial #157                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  public akka.cluster.routing.ClusterRouterPoolSettings(int, int, boolean, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: getstatic     #163                // Field akka/cluster/routing/ClusterRouterSettingsBase$.MODULE$:Lakka/cluster/routing/ClusterRouterSettingsBase$;
       7: aload         4
       9: invokevirtual #167                // Method akka/cluster/routing/ClusterRouterSettingsBase$.useRoleOption:(Ljava/lang/String;)Lscala/Option;
      12: invokespecial #62                 // Method "<init>":(IIZLscala/Option;)V
      15: return
}
