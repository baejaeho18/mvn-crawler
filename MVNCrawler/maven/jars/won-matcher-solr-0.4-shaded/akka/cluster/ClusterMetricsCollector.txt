Compiled from "ClusterMetricsCollector.scala"
public class akka.cluster.ClusterMetricsCollector implements akka.actor.Actor,akka.actor.ActorLogging {
  private final akka.actor.ActorRef publisher;

  private final akka.cluster.Cluster cluster;

  private scala.collection.immutable.SortedSet<akka.actor.Address> nodes;

  private akka.cluster.MetricsGossip latestGossip;

  private final akka.cluster.MetricsCollector collector;

  private final akka.actor.Cancellable gossipTask;

  private final akka.actor.Cancellable metricsTask;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #34                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #48                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #51                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.cluster.Cluster cluster();
    Code:
       0: aload_0
       1: getfield      #113                // Field cluster:Lakka/cluster/Cluster;
       4: areturn

  public scala.collection.immutable.SortedSet<akka.actor.Address> nodes();
    Code:
       0: aload_0
       1: getfield      #116                // Field nodes:Lscala/collection/immutable/SortedSet;
       4: areturn

  public void nodes_$eq(scala.collection.immutable.SortedSet<akka.actor.Address>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field nodes:Lscala/collection/immutable/SortedSet;
       5: return

  public akka.cluster.MetricsGossip latestGossip();
    Code:
       0: aload_0
       1: getfield      #121                // Field latestGossip:Lakka/cluster/MetricsGossip;
       4: areturn

  public void latestGossip_$eq(akka.cluster.MetricsGossip);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field latestGossip:Lakka/cluster/MetricsGossip;
       5: return

  public akka.cluster.MetricsCollector collector();
    Code:
       0: aload_0
       1: getfield      #126                // Field collector:Lakka/cluster/MetricsCollector;
       4: areturn

  public akka.actor.Cancellable gossipTask();
    Code:
       0: aload_0
       1: getfield      #129                // Field gossipTask:Lakka/actor/Cancellable;
       4: areturn

  public akka.actor.Cancellable metricsTask();
    Code:
       0: aload_0
       1: getfield      #131                // Field metricsTask:Lakka/actor/Cancellable;
       4: areturn

  public void preStart();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
       4: aload_0
       5: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
       8: getstatic     #142                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_2
      12: anewarray     #144                // class java/lang/Class
      15: dup
      16: iconst_0
      17: ldc           #146                // class akka/cluster/ClusterEvent$MemberEvent
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #148                // class akka/cluster/ClusterEvent$ReachabilityEvent
      24: aastore
      25: checkcast     #150                // class "[Ljava/lang/Object;"
      28: invokevirtual #154                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      31: invokevirtual #160                // Method akka/cluster/Cluster.subscribe:(Lakka/actor/ActorRef;Lscala/collection/Seq;)V
      34: aload_0
      35: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
      38: invokevirtual #164                // Method akka/cluster/Cluster.InfoLogger:()Lakka/cluster/Cluster$InfoLogger$;
      41: ldc           #166                // String Metrics collection has started successfully
      43: invokevirtual #172                // Method akka/cluster/Cluster$InfoLogger$.logInfo:(Ljava/lang/String;)V
      46: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #175                // class akka/cluster/ClusterMetricsCollector$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #179                // Method akka/cluster/ClusterMetricsCollector$$anonfun$receive$1."<init>":(Lakka/cluster/ClusterMetricsCollector;)V
       8: areturn

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
       4: aload_0
       5: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
       8: invokevirtual #183                // Method akka/cluster/Cluster.unsubscribe:(Lakka/actor/ActorRef;)V
      11: aload_0
      12: invokevirtual #185                // Method gossipTask:()Lakka/actor/Cancellable;
      15: invokeinterface #191,  1          // InterfaceMethod akka/actor/Cancellable.cancel:()Z
      20: pop
      21: aload_0
      22: invokevirtual #193                // Method metricsTask:()Lakka/actor/Cancellable;
      25: invokeinterface #191,  1          // InterfaceMethod akka/actor/Cancellable.cancel:()Z
      30: pop
      31: aload_0
      32: invokevirtual #195                // Method collector:()Lakka/cluster/MetricsCollector;
      35: invokeinterface #200,  1          // InterfaceMethod akka/cluster/MetricsCollector.close:()V
      40: return

  public void addMember(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #204                // Method nodes:()Lscala/collection/immutable/SortedSet;
       5: aload_1
       6: invokevirtual #210                // Method akka/cluster/Member.address:()Lakka/actor/Address;
       9: invokeinterface #216,  2          // InterfaceMethod scala/collection/immutable/SortedSet.$plus:(Ljava/lang/Object;)Lscala/collection/Set;
      14: checkcast     #212                // class scala/collection/immutable/SortedSet
      17: invokevirtual #218                // Method nodes_$eq:(Lscala/collection/immutable/SortedSet;)V
      20: return

  public void removeMember(akka.cluster.Member);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #204                // Method nodes:()Lscala/collection/immutable/SortedSet;
       5: aload_1
       6: invokevirtual #210                // Method akka/cluster/Member.address:()Lakka/actor/Address;
       9: invokeinterface #224,  2          // InterfaceMethod scala/collection/immutable/SortedSet.$minus:(Ljava/lang/Object;)Lscala/collection/Set;
      14: checkcast     #212                // class scala/collection/immutable/SortedSet
      17: invokevirtual #218                // Method nodes_$eq:(Lscala/collection/immutable/SortedSet;)V
      20: aload_0
      21: aload_0
      22: invokevirtual #226                // Method latestGossip:()Lakka/cluster/MetricsGossip;
      25: aload_1
      26: invokevirtual #210                // Method akka/cluster/Member.address:()Lakka/actor/Address;
      29: invokevirtual #232                // Method akka/cluster/MetricsGossip.remove:(Lakka/actor/Address;)Lakka/cluster/MetricsGossip;
      32: invokevirtual #234                // Method latestGossip_$eq:(Lakka/cluster/MetricsGossip;)V
      35: aload_0
      36: invokevirtual #237                // Method publish:()V
      39: return

  public void receiveState(akka.cluster.ClusterEvent$CurrentClusterState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #244                // Method akka/cluster/ClusterEvent$CurrentClusterState.members:()Lscala/collection/immutable/SortedSet;
       5: new           #246                // class akka/cluster/ClusterMetricsCollector$$anonfun$receiveState$1
       8: dup
       9: aload_0
      10: invokespecial #247                // Method akka/cluster/ClusterMetricsCollector$$anonfun$receiveState$1."<init>":(Lakka/cluster/ClusterMetricsCollector;)V
      13: getstatic     #252                // Field scala/collection/immutable/SortedSet$.MODULE$:Lscala/collection/immutable/SortedSet$;
      16: getstatic     #257                // Field akka/cluster/Member$.MODULE$:Lakka/cluster/Member$;
      19: invokevirtual #261                // Method akka/cluster/Member$.addressOrdering:()Lscala/math/Ordering;
      22: invokevirtual #265                // Method scala/collection/immutable/SortedSet$.newCanBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      25: invokeinterface #269,  3          // InterfaceMethod scala/collection/immutable/SortedSet.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #212                // class scala/collection/immutable/SortedSet
      33: invokevirtual #218                // Method nodes_$eq:(Lscala/collection/immutable/SortedSet;)V
      36: return

  public void collect();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #226                // Method latestGossip:()Lakka/cluster/MetricsGossip;
       5: aload_0
       6: invokevirtual #195                // Method collector:()Lakka/cluster/MetricsCollector;
       9: invokeinterface #275,  1          // InterfaceMethod akka/cluster/MetricsCollector.sample:()Lakka/cluster/NodeMetrics;
      14: invokevirtual #279                // Method akka/cluster/MetricsGossip.$colon$plus:(Lakka/cluster/NodeMetrics;)Lakka/cluster/MetricsGossip;
      17: invokevirtual #234                // Method latestGossip_$eq:(Lakka/cluster/MetricsGossip;)V
      20: aload_0
      21: invokevirtual #237                // Method publish:()V
      24: return

  public void receiveGossip(akka.cluster.MetricsGossipEnvelope);
    Code:
       0: aload_1
       1: invokevirtual #286                // Method akka/cluster/MetricsGossipEnvelope.gossip:()Lakka/cluster/MetricsGossip;
       4: aload_0
       5: invokevirtual #204                // Method nodes:()Lscala/collection/immutable/SortedSet;
       8: invokevirtual #290                // Method akka/cluster/MetricsGossip.filter:(Lscala/collection/immutable/Set;)Lakka/cluster/MetricsGossip;
      11: astore_2
      12: aload_0
      13: aload_0
      14: invokevirtual #226                // Method latestGossip:()Lakka/cluster/MetricsGossip;
      17: aload_2
      18: invokevirtual #294                // Method akka/cluster/MetricsGossip.merge:(Lakka/cluster/MetricsGossip;)Lakka/cluster/MetricsGossip;
      21: invokevirtual #234                // Method latestGossip_$eq:(Lakka/cluster/MetricsGossip;)V
      24: aload_1
      25: invokevirtual #297                // Method akka/cluster/MetricsGossipEnvelope.reply:()Z
      28: ifne          39
      31: aload_0
      32: aload_1
      33: invokevirtual #300                // Method akka/cluster/MetricsGossipEnvelope.from:()Lakka/actor/Address;
      36: invokevirtual #304                // Method replyGossipTo:(Lakka/actor/Address;)V
      39: return

  public void gossip();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #204                // Method nodes:()Lscala/collection/immutable/SortedSet;
       5: aload_0
       6: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
       9: invokevirtual #310                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      12: invokeinterface #224,  2          // InterfaceMethod scala/collection/immutable/SortedSet.$minus:(Ljava/lang/Object;)Lscala/collection/Set;
      17: invokeinterface #316,  1          // InterfaceMethod scala/collection/Set.toVector:()Lscala/collection/immutable/Vector;
      22: invokevirtual #320                // Method selectRandomNode:(Lscala/collection/immutable/IndexedSeq;)Lscala/Option;
      25: new           #322                // class akka/cluster/ClusterMetricsCollector$$anonfun$gossip$1
      28: dup
      29: aload_0
      30: invokespecial #323                // Method akka/cluster/ClusterMetricsCollector$$anonfun$gossip$1."<init>":(Lakka/cluster/ClusterMetricsCollector;)V
      33: invokevirtual #329                // Method scala/Option.foreach:(Lscala/Function1;)V
      36: return

  public void gossipTo(akka.actor.Address);
    Code:
       0: aload_0
       1: aload_1
       2: new           #283                // class akka/cluster/MetricsGossipEnvelope
       5: dup
       6: aload_0
       7: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
      10: invokevirtual #310                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      13: aload_0
      14: invokevirtual #226                // Method latestGossip:()Lakka/cluster/MetricsGossip;
      17: iconst_0
      18: invokespecial #333                // Method akka/cluster/MetricsGossipEnvelope."<init>":(Lakka/actor/Address;Lakka/cluster/MetricsGossip;Z)V
      21: invokevirtual #337                // Method sendGossip:(Lakka/actor/Address;Lakka/cluster/MetricsGossipEnvelope;)V
      24: return

  public void replyGossipTo(akka.actor.Address);
    Code:
       0: aload_0
       1: aload_1
       2: new           #283                // class akka/cluster/MetricsGossipEnvelope
       5: dup
       6: aload_0
       7: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
      10: invokevirtual #310                // Method akka/cluster/Cluster.selfAddress:()Lakka/actor/Address;
      13: aload_0
      14: invokevirtual #226                // Method latestGossip:()Lakka/cluster/MetricsGossip;
      17: iconst_1
      18: invokespecial #333                // Method akka/cluster/MetricsGossipEnvelope."<init>":(Lakka/actor/Address;Lakka/cluster/MetricsGossip;Z)V
      21: invokevirtual #337                // Method sendGossip:(Lakka/actor/Address;Lakka/cluster/MetricsGossipEnvelope;)V
      24: return

  public void sendGossip(akka.actor.Address, akka.cluster.MetricsGossipEnvelope);
    Code:
       0: getstatic     #343                // Field akka/actor/ActorSelection$.MODULE$:Lakka/actor/ActorSelection$;
       3: aload_0
       4: invokevirtual #345                // Method context:()Lakka/actor/ActorContext;
       7: aload_0
       8: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
      11: invokevirtual #351                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
      14: aload_1
      15: invokeinterface #357,  2          // InterfaceMethod akka/actor/ActorPath.toStringWithAddress:(Lakka/actor/Address;)Ljava/lang/String;
      20: invokeinterface #363,  2          // InterfaceMethod akka/actor/ActorContext.actorSelection:(Ljava/lang/String;)Lakka/actor/ActorSelection;
      25: invokevirtual #367                // Method akka/actor/ActorSelection$.toScala:(Lakka/actor/ActorSelection;)Lakka/actor/ScalaActorSelection;
      28: aload_2
      29: aload_0
      30: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
      33: invokeinterface #373,  3          // InterfaceMethod akka/actor/ScalaActorSelection.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      38: return

  public scala.Option<akka.actor.Address> selectRandomNode(scala.collection.immutable.IndexedSeq<akka.actor.Address>);
    Code:
       0: aload_1
       1: invokeinterface #378,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.isEmpty:()Z
       6: ifeq          15
       9: getstatic     #383                // Field scala/None$.MODULE$:Lscala/None$;
      12: goto          40
      15: new           #385                // class scala/Some
      18: dup
      19: aload_1
      20: invokestatic  #391                // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      23: aload_1
      24: invokeinterface #395,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.size:()I
      29: invokevirtual #399                // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      32: invokeinterface #403,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
      37: invokespecial #405                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      40: areturn

  public void publish();
    Code:
       0: getstatic     #412                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: getfield      #414                // Field publisher:Lakka/actor/ActorRef;
       7: invokevirtual #418                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      10: new           #420                // class akka/cluster/InternalClusterAction$PublishEvent
      13: dup
      14: new           #422                // class akka/cluster/ClusterEvent$ClusterMetricsChanged
      17: dup
      18: aload_0
      19: invokevirtual #226                // Method latestGossip:()Lakka/cluster/MetricsGossip;
      22: invokevirtual #425                // Method akka/cluster/MetricsGossip.nodes:()Lscala/collection/immutable/Set;
      25: invokespecial #428                // Method akka/cluster/ClusterEvent$ClusterMetricsChanged."<init>":(Lscala/collection/immutable/Set;)V
      28: invokespecial #431                // Method akka/cluster/InternalClusterAction$PublishEvent."<init>":(Lakka/cluster/ClusterEvent$ClusterDomainEvent;)V
      31: aload_0
      32: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
      35: invokeinterface #434,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      40: return

  public akka.cluster.ClusterMetricsCollector(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #414                // Field publisher:Lakka/actor/ActorRef;
       5: aload_0
       6: invokespecial #436                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #439                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      13: aload_0
      14: invokestatic  #442                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      17: aload_0
      18: getstatic     #447                // Field akka/cluster/Cluster$.MODULE$:Lakka/cluster/Cluster$;
      21: aload_0
      22: invokevirtual #345                // Method context:()Lakka/actor/ActorContext;
      25: invokeinterface #451,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      30: invokevirtual #454                // Method akka/cluster/Cluster$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      33: checkcast     #156                // class akka/cluster/Cluster
      36: putfield      #113                // Field cluster:Lakka/cluster/Cluster;
      39: aload_0
      40: getstatic     #252                // Field scala/collection/immutable/SortedSet$.MODULE$:Lscala/collection/immutable/SortedSet$;
      43: getstatic     #257                // Field akka/cluster/Member$.MODULE$:Lakka/cluster/Member$;
      46: invokevirtual #261                // Method akka/cluster/Member$.addressOrdering:()Lscala/math/Ordering;
      49: invokevirtual #458                // Method scala/collection/immutable/SortedSet$.empty:(Lscala/math/Ordering;)Lscala/collection/immutable/SortedSet;
      52: putfield      #116                // Field nodes:Lscala/collection/immutable/SortedSet;
      55: aload_0
      56: getstatic     #463                // Field akka/cluster/MetricsGossip$.MODULE$:Lakka/cluster/MetricsGossip$;
      59: invokevirtual #465                // Method akka/cluster/MetricsGossip$.empty:()Lakka/cluster/MetricsGossip;
      62: putfield      #121                // Field latestGossip:Lakka/cluster/MetricsGossip;
      65: aload_0
      66: getstatic     #470                // Field akka/cluster/MetricsCollector$.MODULE$:Lakka/cluster/MetricsCollector$;
      69: aload_0
      70: invokevirtual #345                // Method context:()Lakka/actor/ActorContext;
      73: invokeinterface #451,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      78: checkcast     #472                // class akka/actor/ExtendedActorSystem
      81: aload_0
      82: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
      85: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
      88: invokevirtual #479                // Method akka/cluster/MetricsCollector$.apply:(Lakka/actor/ExtendedActorSystem;Lakka/cluster/ClusterSettings;)Lakka/cluster/MetricsCollector;
      91: putfield      #126                // Field collector:Lakka/cluster/MetricsCollector;
      94: aload_0
      95: aload_0
      96: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
      99: invokevirtual #483                // Method akka/cluster/Cluster.scheduler:()Lakka/actor/Scheduler;
     102: aload_0
     103: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     106: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     109: invokevirtual #489                // Method akka/cluster/ClusterSettings.PeriodicTasksInitialDelay:()Lscala/concurrent/duration/FiniteDuration;
     112: aload_0
     113: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     116: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     119: invokevirtual #492                // Method akka/cluster/ClusterSettings.MetricsGossipInterval:()Lscala/concurrent/duration/FiniteDuration;
     122: invokevirtual #498                // Method scala/concurrent/duration/FiniteDuration.max:(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/FiniteDuration;
     125: aload_0
     126: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     129: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     132: invokevirtual #492                // Method akka/cluster/ClusterSettings.MetricsGossipInterval:()Lscala/concurrent/duration/FiniteDuration;
     135: aload_0
     136: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
     139: getstatic     #503                // Field akka/cluster/InternalClusterAction$GossipTick$.MODULE$:Lakka/cluster/InternalClusterAction$GossipTick$;
     142: aload_0
     143: invokevirtual #345                // Method context:()Lakka/actor/ActorContext;
     146: invokeinterface #507,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     151: aload_0
     152: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
     155: invokeinterface #513,  7          // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
     160: putfield      #129                // Field gossipTask:Lakka/actor/Cancellable;
     163: aload_0
     164: aload_0
     165: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     168: invokevirtual #483                // Method akka/cluster/Cluster.scheduler:()Lakka/actor/Scheduler;
     171: aload_0
     172: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     175: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     178: invokevirtual #489                // Method akka/cluster/ClusterSettings.PeriodicTasksInitialDelay:()Lscala/concurrent/duration/FiniteDuration;
     181: aload_0
     182: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     185: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     188: invokevirtual #516                // Method akka/cluster/ClusterSettings.MetricsInterval:()Lscala/concurrent/duration/FiniteDuration;
     191: invokevirtual #498                // Method scala/concurrent/duration/FiniteDuration.max:(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/FiniteDuration;
     194: aload_0
     195: invokevirtual #134                // Method cluster:()Lakka/cluster/Cluster;
     198: invokevirtual #476                // Method akka/cluster/Cluster.settings:()Lakka/cluster/ClusterSettings;
     201: invokevirtual #516                // Method akka/cluster/ClusterSettings.MetricsInterval:()Lscala/concurrent/duration/FiniteDuration;
     204: aload_0
     205: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
     208: getstatic     #521                // Field akka/cluster/InternalClusterAction$MetricsTick$.MODULE$:Lakka/cluster/InternalClusterAction$MetricsTick$;
     211: aload_0
     212: invokevirtual #345                // Method context:()Lakka/actor/ActorContext;
     215: invokeinterface #507,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     220: aload_0
     221: invokevirtual #136                // Method self:()Lakka/actor/ActorRef;
     224: invokeinterface #513,  7          // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
     229: putfield      #131                // Field metricsTask:Lakka/actor/Cancellable;
     232: return
}
