Compiled from "Serializer.scala"
public class akka.serialization.ByteArraySerializer implements akka.serialization.BaseSerializer,akka.serialization.ByteBufferSerializer {
  private final akka.actor.ExtendedActorSystem system;

  private final int identifier;

  public final java.lang.String SerializationIdentifiers();
    Code:
       0: ldc           #20                 // String akka.actor.serialization-identifiers
       2: areturn

  public void akka$serialization$BaseSerializer$_setter_$identifier_$eq(int);
    Code:
       0: return

  public int identifierFromConfig();
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method akka/serialization/BaseSerializer$class.identifierFromConfig:(Lakka/serialization/BaseSerializer;)I
       4: ireturn

  public final java.lang.Object fromBinary(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method akka/serialization/Serializer$class.fromBinary:(Lakka/serialization/Serializer;[B)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object fromBinary(byte[], java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method akka/serialization/Serializer$class.fromBinary:(Lakka/serialization/Serializer;[BLjava/lang/Class;)Ljava/lang/Object;
       6: areturn

  public akka.actor.ExtendedActorSystem system();
    Code:
       0: aload_0
       1: getfield      #49                 // Field system:Lakka/actor/ExtendedActorSystem;
       4: areturn

  public int identifier();
    Code:
       0: aload_0
       1: getfield      #51                 // Field identifier:I
       4: ireturn

  public boolean includeManifest();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] toBinary(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnonnull     11
       6: aconst_null
       7: astore_3
       8: goto          27
      11: aload_2
      12: instanceof    #56                 // class "[B"
      15: ifeq          29
      18: aload_2
      19: checkcast     #56                 // class "[B"
      22: astore        4
      24: aload         4
      26: astore_3
      27: aload_3
      28: areturn
      29: new           #58                 // class java/lang/IllegalArgumentException
      32: dup
      33: new           #60                 // class scala/StringContext
      36: dup
      37: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      40: iconst_3
      41: anewarray     #68                 // class java/lang/String
      44: dup
      45: iconst_0
      46: ldc           #70                 // String
      48: aastore
      49: dup
      50: iconst_1
      51: ldc           #72                 // String  only serializes byte arrays, not [
      53: aastore
      54: dup
      55: iconst_2
      56: ldc           #74                 // String ]
      58: aastore
      59: checkcast     #76                 // class "[Ljava/lang/Object;"
      62: invokevirtual #80                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      65: invokespecial #84                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      68: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      71: iconst_2
      72: anewarray     #4                  // class java/lang/Object
      75: dup
      76: iconst_0
      77: aload_0
      78: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
      84: aastore
      85: dup
      86: iconst_1
      87: aload_2
      88: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      91: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
      94: aastore
      95: invokevirtual #97                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      98: invokevirtual #101                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     101: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow

  public java.lang.Object fromBinary(byte[], scala.Option<java.lang.Class<?>>);
    Code:
       0: aload_1
       1: areturn

  public void toBinary(java.lang.Object, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnonnull     14
       6: getstatic     #115                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       9: astore        4
      11: goto          39
      14: aload_3
      15: instanceof    #56                 // class "[B"
      18: ifeq          40
      21: aload_3
      22: checkcast     #56                 // class "[B"
      25: astore        5
      27: aload_2
      28: aload         5
      30: invokevirtual #121                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      33: pop
      34: getstatic     #115                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: astore        4
      39: return
      40: new           #58                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #60                 // class scala/StringContext
      47: dup
      48: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      51: iconst_3
      52: anewarray     #68                 // class java/lang/String
      55: dup
      56: iconst_0
      57: ldc           #70                 // String
      59: aastore
      60: dup
      61: iconst_1
      62: ldc           #72                 // String  only serializes byte arrays, not [
      64: aastore
      65: dup
      66: iconst_2
      67: ldc           #74                 // String ]
      69: aastore
      70: checkcast     #76                 // class "[Ljava/lang/Object;"
      73: invokevirtual #80                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      76: invokespecial #84                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      79: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      82: iconst_2
      83: anewarray     #4                  // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload_0
      89: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_1
      98: aload_3
      99: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     102: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
     105: aastore
     106: invokevirtual #97                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     109: invokevirtual #101                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     112: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     115: athrow

  public java.lang.Object fromBinary(java.nio.ByteBuffer, java.lang.String);
    Code:
       0: getstatic     #129                // Field scala/Array$.MODULE$:Lscala/Array$;
       3: aload_1
       4: invokevirtual #132                // Method java/nio/ByteBuffer.remaining:()I
       7: getstatic     #137                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      10: invokevirtual #141                // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ClassTag;
      13: invokevirtual #145                // Method scala/Array$.ofDim:(ILscala/reflect/ClassTag;)Ljava/lang/Object;
      16: checkcast     #56                 // class "[B"
      19: astore_3
      20: aload_1
      21: aload_3
      22: invokevirtual #148                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_3
      27: areturn

  public akka.serialization.ByteArraySerializer(akka.actor.ExtendedActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field system:Lakka/actor/ExtendedActorSystem;
       5: aload_0
       6: invokespecial #154                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #158                // Method akka/serialization/Serializer$class.$init$:(Lakka/serialization/Serializer;)V
      13: aload_0
      14: invokestatic  #161                // Method akka/serialization/BaseSerializer$class.$init$:(Lakka/serialization/BaseSerializer;)V
      17: aload_0
      18: aload_1
      19: ifnonnull     26
      22: iconst_4
      23: goto          30
      26: aload_0
      27: invokevirtual #163                // Method identifierFromConfig:()I
      30: putfield      #51                 // Field identifier:I
      33: return

  public akka.serialization.ByteArraySerializer();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #167                // Method "<init>":(Lakka/actor/ExtendedActorSystem;)V
       5: return
}
