Compiled from "Serialization.scala"
public final class akka.serialization.Serialization$$anonfun$9 extends scala.runtime.AbstractFunction1<scala.Tuple2<java.lang.Object, akka.serialization.Serializer>, scala.Tuple2<java.lang.Object, akka.serialization.Serializer>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.Tuple2<java.lang.Object, akka.serialization.Serializer> apply(scala.Tuple2<java.lang.Object, akka.serialization.Serializer>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        36
       6: aload_2
       7: invokevirtual #22                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #24                 // class akka/serialization/Serializer
      13: astore_3
      14: new           #18                 // class scala/Tuple2
      17: dup
      18: aload_3
      19: invokeinterface #28,  1           // InterfaceMethod akka/serialization/Serializer.identifier:()I
      24: invokestatic  #34                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      27: aload_3
      28: invokespecial #38                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      31: astore        4
      33: aload         4
      35: areturn
      36: new           #40                 // class scala/MatchError
      39: dup
      40: aload_2
      41: invokespecial #43                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      44: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class scala/Tuple2
       5: invokevirtual #52                 // Method apply:(Lscala/Tuple2;)Lscala/Tuple2;
       8: areturn

  public akka.serialization.Serialization$$anonfun$9(akka.serialization.Serialization);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
