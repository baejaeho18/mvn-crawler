Compiled from "Remoting.scala"
public final class akka.remote.EndpointManager$$anonfun$3$$anonfun$applyOrElse$13 extends scala.runtime.AbstractFunction1<java.lang.Object, scala.concurrent.Future<java.lang.Object>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.EndpointManager$$anonfun$3 $outer;

  public final scala.concurrent.Future<java.lang.Object> apply(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
       4: aload_0
       5: getfield      #23                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
       8: invokevirtual #27                 // Method akka/remote/EndpointManager$$anonfun$3.akka$remote$EndpointManager$$anonfun$$$outer:()Lakka/remote/EndpointManager;
      11: invokevirtual #33                 // Method akka/remote/EndpointManager.transportMapping:()Lscala/collection/immutable/Map;
      14: invokeinterface #39,  1           // InterfaceMethod scala/collection/immutable/Map.values:()Lscala/collection/Iterable;
      19: new           #41                 // class akka/remote/EndpointManager$$anonfun$3$$anonfun$applyOrElse$13$$anonfun$apply$4
      22: dup
      23: aload_0
      24: invokespecial #45                 // Method akka/remote/EndpointManager$$anonfun$3$$anonfun$applyOrElse$13$$anonfun$apply$4."<init>":(Lakka/remote/EndpointManager$$anonfun$3$$anonfun$applyOrElse$13;)V
      27: invokevirtual #49                 // Method akka/remote/EndpointManager$$anonfun$3.akka$remote$EndpointManager$$anonfun$$shutdownAll$1:(Lscala/collection/TraversableOnce;Lscala/Function1;)Lscala/concurrent/Future;
      30: new           #51                 // class akka/remote/EndpointManager$$anonfun$3$$anonfun$applyOrElse$13$$anonfun$apply$5
      33: dup
      34: aload_0
      35: iload_1
      36: invokespecial #54                 // Method akka/remote/EndpointManager$$anonfun$3$$anonfun$applyOrElse$13$$anonfun$apply$5."<init>":(Lakka/remote/EndpointManager$$anonfun$3$$anonfun$applyOrElse$13;Z)V
      39: aload_0
      40: getfield      #23                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
      43: invokevirtual #27                 // Method akka/remote/EndpointManager$$anonfun$3.akka$remote$EndpointManager$$anonfun$$$outer:()Lakka/remote/EndpointManager;
      46: invokevirtual #58                 // Method akka/remote/EndpointManager.context:()Lakka/actor/ActorContext;
      49: invokeinterface #64,  1           // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      54: invokeinterface #70,  3           // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      59: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokevirtual #83                 // Method apply:(Z)Lscala/concurrent/Future;
       8: areturn

  public akka.remote.EndpointManager$$anonfun$3$$anonfun$applyOrElse$13(akka.remote.EndpointManager$$anonfun$3);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
      11: aload_0
      12: invokespecial #89                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
