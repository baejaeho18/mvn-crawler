Compiled from "Endpoint.scala"
public class akka.remote.ReliableDeliverySupervisor implements akka.actor.Actor,akka.actor.ActorLogging {
  private final akka.actor.Address localAddress;

  private final akka.actor.Address remoteAddress;

  private final scala.Option<java.lang.Object> refuseUid;

  private final akka.remote.transport.AkkaProtocolTransport transport;

  private final akka.remote.RemoteSettings settings;

  private final akka.remote.transport.AkkaPduCodec codec;

  private final java.util.concurrent.ConcurrentHashMap<akka.remote.EndpointManager$Link, akka.remote.EndpointManager$ResendState> receiveBuffers;

  private final akka.actor.Cancellable autoResendTimer;

  private boolean akka$remote$ReliableDeliverySupervisor$$bufferWasInUse;

  private final akka.actor.OneForOneStrategy supervisorStrategy;

  private scala.Option<akka.remote.transport.AkkaProtocolHandle> currentHandle;

  private akka.remote.AckedSendBuffer<akka.remote.EndpointManager$Send> resendBuffer;

  private long seqCounter;

  private akka.actor.ActorRef writer;

  private scala.Option<java.lang.Object> uid;

  private scala.Option<scala.concurrent.duration.Deadline> bailoutAt;

  private scala.Option<akka.actor.Cancellable> maxSilenceTimer;

  private boolean uidConfirmed;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static akka.actor.Props props(scala.Option<akka.remote.transport.AkkaProtocolHandle>, akka.actor.Address, akka.actor.Address, scala.Option<java.lang.Object>, akka.remote.transport.AkkaProtocolTransport, akka.remote.RemoteSettings, akka.remote.transport.AkkaPduCodec, java.util.concurrent.ConcurrentHashMap<akka.remote.EndpointManager$Link, akka.remote.EndpointManager$ResendState>);
    Code:
       0: getstatic     #20                 // Field akka/remote/ReliableDeliverySupervisor$.MODULE$:Lakka/remote/ReliableDeliverySupervisor$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #22                 // Method akka/remote/ReliableDeliverySupervisor$.props:(Lscala/Option;Lakka/actor/Address;Lakka/actor/Address;Lscala/Option;Lakka/remote/transport/AkkaProtocolTransport;Lakka/remote/RemoteSettings;Lakka/remote/transport/AkkaPduCodec;Ljava/util/concurrent/ConcurrentHashMap;)Lakka/actor/Props;
      18: areturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #66                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #80                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #83                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #93                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #107                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #115                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #128                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.actor.Address localAddress();
    Code:
       0: aload_0
       1: getfield      #139                // Field localAddress:Lakka/actor/Address;
       4: areturn

  public akka.actor.Address remoteAddress();
    Code:
       0: aload_0
       1: getfield      #141                // Field remoteAddress:Lakka/actor/Address;
       4: areturn

  public scala.Option<java.lang.Object> refuseUid();
    Code:
       0: aload_0
       1: getfield      #144                // Field refuseUid:Lscala/Option;
       4: areturn

  public akka.remote.transport.AkkaProtocolTransport transport();
    Code:
       0: aload_0
       1: getfield      #147                // Field transport:Lakka/remote/transport/AkkaProtocolTransport;
       4: areturn

  public akka.remote.RemoteSettings settings();
    Code:
       0: aload_0
       1: getfield      #150                // Field settings:Lakka/remote/RemoteSettings;
       4: areturn

  public akka.remote.transport.AkkaPduCodec codec();
    Code:
       0: aload_0
       1: getfield      #153                // Field codec:Lakka/remote/transport/AkkaPduCodec;
       4: areturn

  public java.util.concurrent.ConcurrentHashMap<akka.remote.EndpointManager$Link, akka.remote.EndpointManager$ResendState> receiveBuffers();
    Code:
       0: aload_0
       1: getfield      #156                // Field receiveBuffers:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public akka.actor.Cancellable autoResendTimer();
    Code:
       0: aload_0
       1: getfield      #159                // Field autoResendTimer:Lakka/actor/Cancellable;
       4: areturn

  public boolean akka$remote$ReliableDeliverySupervisor$$bufferWasInUse();
    Code:
       0: aload_0
       1: getfield      #162                // Field akka$remote$ReliableDeliverySupervisor$$bufferWasInUse:Z
       4: ireturn

  private void akka$remote$ReliableDeliverySupervisor$$bufferWasInUse_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #162                // Field akka$remote$ReliableDeliverySupervisor$$bufferWasInUse:Z
       5: return

  public akka.actor.OneForOneStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: getfield      #167                // Field supervisorStrategy:Lakka/actor/OneForOneStrategy;
       4: areturn

  public scala.Option<akka.remote.transport.AkkaProtocolHandle> currentHandle();
    Code:
       0: aload_0
       1: getfield      #169                // Field currentHandle:Lscala/Option;
       4: areturn

  public void currentHandle_$eq(scala.Option<akka.remote.transport.AkkaProtocolHandle>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #169                // Field currentHandle:Lscala/Option;
       5: return

  public akka.remote.AckedSendBuffer<akka.remote.EndpointManager$Send> resendBuffer();
    Code:
       0: aload_0
       1: getfield      #174                // Field resendBuffer:Lakka/remote/AckedSendBuffer;
       4: areturn

  public void resendBuffer_$eq(akka.remote.AckedSendBuffer<akka.remote.EndpointManager$Send>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #174                // Field resendBuffer:Lakka/remote/AckedSendBuffer;
       5: return

  public long seqCounter();
    Code:
       0: aload_0
       1: getfield      #179                // Field seqCounter:J
       4: lreturn

  public void seqCounter_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #179                // Field seqCounter:J
       5: return

  public void reset();
    Code:
       0: aload_0
       1: new           #184                // class akka/remote/AckedSendBuffer
       4: dup
       5: aload_0
       6: invokevirtual #186                // Method settings:()Lakka/remote/RemoteSettings;
       9: invokevirtual #192                // Method akka/remote/RemoteSettings.SysMsgBufferSize:()I
      12: getstatic     #197                // Field akka/remote/AckedSendBuffer$.MODULE$:Lakka/remote/AckedSendBuffer$;
      15: invokevirtual #201                // Method akka/remote/AckedSendBuffer$.$lessinit$greater$default$2:()Lscala/collection/immutable/Vector;
      18: getstatic     #197                // Field akka/remote/AckedSendBuffer$.MODULE$:Lakka/remote/AckedSendBuffer$;
      21: invokevirtual #204                // Method akka/remote/AckedSendBuffer$.$lessinit$greater$default$3:()Lscala/collection/immutable/Vector;
      24: getstatic     #197                // Field akka/remote/AckedSendBuffer$.MODULE$:Lakka/remote/AckedSendBuffer$;
      27: invokevirtual #208                // Method akka/remote/AckedSendBuffer$.$lessinit$greater$default$4:()Lakka/remote/SeqNo;
      30: invokespecial #212                // Method akka/remote/AckedSendBuffer."<init>":(ILscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lakka/remote/SeqNo;)V
      33: invokevirtual #214                // Method resendBuffer_$eq:(Lakka/remote/AckedSendBuffer;)V
      36: aload_0
      37: iconst_0
      38: invokespecial #216                // Method akka$remote$ReliableDeliverySupervisor$$bufferWasInUse_$eq:(Z)V
      41: aload_0
      42: lconst_0
      43: invokevirtual #218                // Method seqCounter_$eq:(J)V
      46: aload_0
      47: getstatic     #223                // Field scala/None$.MODULE$:Lscala/None$;
      50: invokevirtual #226                // Method bailoutAt_$eq:(Lscala/Option;)V
      53: return

  public akka.remote.SeqNo nextSeq();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method seqCounter:()J
       4: lstore_1
       5: aload_0
       6: aload_0
       7: invokevirtual #229                // Method seqCounter:()J
      10: lconst_1
      11: ladd
      12: invokevirtual #218                // Method seqCounter_$eq:(J)V
      15: new           #231                // class akka/remote/SeqNo
      18: dup
      19: lload_1
      20: invokespecial #233                // Method akka/remote/SeqNo."<init>":(J)V
      23: areturn

  public akka.actor.ActorRef writer();
    Code:
       0: aload_0
       1: getfield      #236                // Field writer:Lakka/actor/ActorRef;
       4: areturn

  public void writer_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #236                // Field writer:Lakka/actor/ActorRef;
       5: return

  public scala.Option<java.lang.Object> uid();
    Code:
       0: aload_0
       1: getfield      #239                // Field uid:Lscala/Option;
       4: areturn

  public void uid_$eq(scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #239                // Field uid:Lscala/Option;
       5: return

  public scala.Option<scala.concurrent.duration.Deadline> bailoutAt();
    Code:
       0: aload_0
       1: getfield      #242                // Field bailoutAt:Lscala/Option;
       4: areturn

  public void bailoutAt_$eq(scala.Option<scala.concurrent.duration.Deadline>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #242                // Field bailoutAt:Lscala/Option;
       5: return

  public scala.Option<akka.actor.Cancellable> maxSilenceTimer();
    Code:
       0: aload_0
       1: getfield      #244                // Field maxSilenceTimer:Lscala/Option;
       4: areturn

  public void maxSilenceTimer_$eq(scala.Option<akka.actor.Cancellable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #244                // Field maxSilenceTimer:Lscala/Option;
       5: return

  public boolean uidConfirmed();
    Code:
       0: aload_0
       1: getfield      #247                // Field uidConfirmed:Z
       4: ireturn

  public void uidConfirmed_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #247                // Field uidConfirmed:Z
       5: return

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #251                // Method resendBuffer:()Lakka/remote/AckedSendBuffer;
       4: invokevirtual #255                // Method akka/remote/AckedSendBuffer.nacked:()Lscala/collection/immutable/IndexedSeq;
       7: aload_0
       8: invokevirtual #251                // Method resendBuffer:()Lakka/remote/AckedSendBuffer;
      11: invokevirtual #258                // Method akka/remote/AckedSendBuffer.nonAcked:()Lscala/collection/immutable/IndexedSeq;
      14: getstatic     #263                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      17: invokevirtual #267                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      20: invokeinterface #273,  3          // InterfaceMethod scala/collection/immutable/IndexedSeq.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      25: checkcast     #275                // class scala/collection/IterableLike
      28: new           #277                // class akka/remote/ReliableDeliverySupervisor$$anonfun$postStop$1
      31: dup
      32: aload_0
      33: invokespecial #280                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$postStop$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
      36: invokeinterface #284,  2          // InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
      41: aload_0
      42: invokevirtual #286                // Method receiveBuffers:()Ljava/util/concurrent/ConcurrentHashMap;
      45: new           #288                // class akka/remote/EndpointManager$Link
      48: dup
      49: aload_0
      50: invokevirtual #290                // Method localAddress:()Lakka/actor/Address;
      53: aload_0
      54: invokevirtual #292                // Method remoteAddress:()Lakka/actor/Address;
      57: invokespecial #295                // Method akka/remote/EndpointManager$Link."<init>":(Lakka/actor/Address;Lakka/actor/Address;)V
      60: invokevirtual #301                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: invokevirtual #303                // Method autoResendTimer:()Lakka/actor/Cancellable;
      68: invokeinterface #308,  1          // InterfaceMethod akka/actor/Cancellable.cancel:()Z
      73: pop
      74: aload_0
      75: invokevirtual #310                // Method maxSilenceTimer:()Lscala/Option;
      78: new           #312                // class akka/remote/ReliableDeliverySupervisor$$anonfun$postStop$2
      81: dup
      82: aload_0
      83: invokespecial #313                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$postStop$2."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
      86: invokevirtual #316                // Method scala/Option.foreach:(Lscala/Function1;)V
      89: return

  public void postRestart(java.lang.Throwable);
    Code:
       0: new           #319                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #321                // String BUG: ReliableDeliverySupervisor has been attempted to be restarted. This must not happen.
       7: invokespecial #324                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: athrow

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #327                // class akka/remote/ReliableDeliverySupervisor$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #328                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$receive$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
       8: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> gated(boolean, boolean);
    Code:
       0: new           #332                // class akka/remote/ReliableDeliverySupervisor$$anonfun$gated$1
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #335                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$gated$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;ZZ)V
      10: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> idle();
    Code:
       0: new           #340                // class akka/remote/ReliableDeliverySupervisor$$anonfun$idle$1
       3: dup
       4: aload_0
       5: invokespecial #341                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$idle$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
       8: areturn

  public void akka$remote$ReliableDeliverySupervisor$$goToIdle();
    Code:
       0: aload_0
       1: invokevirtual #344                // Method akka$remote$ReliableDeliverySupervisor$$bufferWasInUse:()Z
       4: ifeq          72
       7: aload_0
       8: invokevirtual #310                // Method maxSilenceTimer:()Lscala/Option;
      11: invokevirtual #347                // Method scala/Option.isEmpty:()Z
      14: ifeq          72
      17: aload_0
      18: new           #349                // class scala/Some
      21: dup
      22: aload_0
      23: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      26: invokeinterface #357,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      31: invokevirtual #363                // Method akka/actor/ActorSystem.scheduler:()Lakka/actor/Scheduler;
      34: aload_0
      35: invokevirtual #186                // Method settings:()Lakka/remote/RemoteSettings;
      38: invokevirtual #367                // Method akka/remote/RemoteSettings.QuarantineSilentSystemTimeout:()Lscala/concurrent/duration/FiniteDuration;
      41: aload_0
      42: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
      45: getstatic     #374                // Field akka/remote/ReliableDeliverySupervisor$TooLongIdle$.MODULE$:Lakka/remote/ReliableDeliverySupervisor$TooLongIdle$;
      48: aload_0
      49: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      52: invokeinterface #378,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      57: aload_0
      58: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
      61: invokeinterface #384,  6          // InterfaceMethod akka/actor/Scheduler.scheduleOnce:(Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
      66: invokespecial #386                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      69: invokevirtual #388                // Method maxSilenceTimer_$eq:(Lscala/Option;)V
      72: aload_0
      73: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      76: aload_0
      77: invokevirtual #390                // Method idle:()Lscala/PartialFunction;
      80: invokeinterface #394,  2          // InterfaceMethod akka/actor/ActorContext.become:(Lscala/PartialFunction;)V
      85: return

  public void akka$remote$ReliableDeliverySupervisor$$goToActive();
    Code:
       0: aload_0
       1: invokevirtual #310                // Method maxSilenceTimer:()Lscala/Option;
       4: new           #397                // class akka/remote/ReliableDeliverySupervisor$$anonfun$akka$remote$ReliableDeliverySupervisor$$goToActive$1
       7: dup
       8: aload_0
       9: invokespecial #398                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$akka$remote$ReliableDeliverySupervisor$$goToActive$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
      12: invokevirtual #316                // Method scala/Option.foreach:(Lscala/Function1;)V
      15: aload_0
      16: getstatic     #223                // Field scala/None$.MODULE$:Lscala/None$;
      19: invokevirtual #388                // Method maxSilenceTimer_$eq:(Lscala/Option;)V
      22: aload_0
      23: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      26: aload_0
      27: invokevirtual #400                // Method receive:()Lscala/PartialFunction;
      30: invokeinterface #394,  2          // InterfaceMethod akka/actor/ActorContext.become:(Lscala/PartialFunction;)V
      35: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> flushWait();
    Code:
       0: new           #403                // class akka/remote/ReliableDeliverySupervisor$$anonfun$flushWait$1
       3: dup
       4: aload_0
       5: invokespecial #404                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$flushWait$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
       8: areturn

  public void akka$remote$ReliableDeliverySupervisor$$handleSend(akka.remote.EndpointManager$Send);
    Code:
       0: aload_1
       1: invokevirtual #411                // Method akka/remote/EndpointManager$Send.message:()Ljava/lang/Object;
       4: instanceof    #413                // class akka/dispatch/sysmsg/SystemMessage
       7: ifeq          109
      10: new           #349                // class scala/Some
      13: dup
      14: aload_0
      15: invokevirtual #415                // Method nextSeq:()Lakka/remote/SeqNo;
      18: invokespecial #386                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      21: astore_3
      22: aload_1
      23: invokevirtual #418                // Method akka/remote/EndpointManager$Send.copy$default$1:()Ljava/lang/Object;
      26: astore        4
      28: aload_1
      29: invokevirtual #421                // Method akka/remote/EndpointManager$Send.copy$default$2:()Lakka/actor/ActorRef;
      32: astore        5
      34: aload_1
      35: invokevirtual #425                // Method akka/remote/EndpointManager$Send.copy$default$3:()Lakka/remote/RemoteActorRef;
      38: astore        6
      40: aload_1
      41: aload         4
      43: aload         5
      45: aload         6
      47: aload_3
      48: invokevirtual #429                // Method akka/remote/EndpointManager$Send.copy:(Ljava/lang/Object;Lakka/actor/ActorRef;Lakka/remote/RemoteActorRef;Lscala/Option;)Lakka/remote/EndpointManager$Send;
      51: astore_2
      52: aload_0
      53: aload_2
      54: invokevirtual #432                // Method akka$remote$ReliableDeliverySupervisor$$tryBuffer:(Lakka/remote/EndpointManager$Send;)V
      57: aload_0
      58: invokevirtual #434                // Method uidConfirmed:()Z
      61: ifeq          129
      64: aload_0
      65: invokevirtual #251                // Method resendBuffer:()Lakka/remote/AckedSendBuffer;
      68: invokevirtual #258                // Method akka/remote/AckedSendBuffer.nonAcked:()Lscala/collection/immutable/IndexedSeq;
      71: invokeinterface #437,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.size:()I
      76: aload_0
      77: invokevirtual #186                // Method settings:()Lakka/remote/RemoteSettings;
      80: invokevirtual #440                // Method akka/remote/RemoteSettings.SysResendLimit:()I
      83: if_icmpgt     129
      86: getstatic     #445                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      89: aload_0
      90: invokevirtual #447                // Method writer:()Lakka/actor/ActorRef;
      93: invokevirtual #451                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      96: aload_2
      97: aload_0
      98: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
     101: invokeinterface #457,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     106: goto          129
     109: getstatic     #445                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     112: aload_0
     113: invokevirtual #447                // Method writer:()Lakka/actor/ActorRef;
     116: invokevirtual #451                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     119: aload_1
     120: aload_0
     121: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
     124: invokeinterface #457,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     129: return

  public void akka$remote$ReliableDeliverySupervisor$$resendNacked();
    Code:
       0: aload_0
       1: invokevirtual #251                // Method resendBuffer:()Lakka/remote/AckedSendBuffer;
       4: invokevirtual #255                // Method akka/remote/AckedSendBuffer.nacked:()Lscala/collection/immutable/IndexedSeq;
       7: new           #469                // class akka/remote/ReliableDeliverySupervisor$$anonfun$akka$remote$ReliableDeliverySupervisor$$resendNacked$1
      10: dup
      11: aload_0
      12: invokespecial #470                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$akka$remote$ReliableDeliverySupervisor$$resendNacked$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
      15: invokeinterface #471,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.foreach:(Lscala/Function1;)V
      20: return

  public void akka$remote$ReliableDeliverySupervisor$$resendAll();
    Code:
       0: aload_0
       1: invokevirtual #474                // Method akka$remote$ReliableDeliverySupervisor$$resendNacked:()V
       4: aload_0
       5: invokevirtual #251                // Method resendBuffer:()Lakka/remote/AckedSendBuffer;
       8: invokevirtual #258                // Method akka/remote/AckedSendBuffer.nonAcked:()Lscala/collection/immutable/IndexedSeq;
      11: aload_0
      12: invokevirtual #186                // Method settings:()Lakka/remote/RemoteSettings;
      15: invokevirtual #440                // Method akka/remote/RemoteSettings.SysResendLimit:()I
      18: invokeinterface #478,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.take:(I)Ljava/lang/Object;
      23: checkcast     #275                // class scala/collection/IterableLike
      26: new           #480                // class akka/remote/ReliableDeliverySupervisor$$anonfun$akka$remote$ReliableDeliverySupervisor$$resendAll$1
      29: dup
      30: aload_0
      31: invokespecial #481                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$akka$remote$ReliableDeliverySupervisor$$resendAll$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
      34: invokeinterface #284,  2          // InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
      39: return

  public void akka$remote$ReliableDeliverySupervisor$$tryBuffer(akka.remote.EndpointManager$Send);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #251                // Method resendBuffer:()Lakka/remote/AckedSendBuffer;
       5: aload_1
       6: invokevirtual #485                // Method akka/remote/AckedSendBuffer.buffer:(Lakka/remote/HasSequenceNumber;)Lakka/remote/AckedSendBuffer;
       9: invokevirtual #214                // Method resendBuffer_$eq:(Lakka/remote/AckedSendBuffer;)V
      12: aload_0
      13: iconst_1
      14: invokespecial #216                // Method akka$remote$ReliableDeliverySupervisor$$bufferWasInUse_$eq:(Z)V
      17: return
      18: astore_2
      19: aload_2
      20: astore_3
      21: getstatic     #490                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      24: aload_3
      25: invokevirtual #494                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      28: astore        4
      30: aload         4
      32: invokevirtual #347                // Method scala/Option.isEmpty:()Z
      35: ifeq          40
      38: aload_2
      39: athrow
      40: aload         4
      42: invokevirtual #497                // Method scala/Option.get:()Ljava/lang/Object;
      45: checkcast     #499                // class java/lang/Throwable
      48: astore        5
      50: new           #501                // class akka/remote/HopelessAssociation
      53: dup
      54: aload_0
      55: invokevirtual #290                // Method localAddress:()Lakka/actor/Address;
      58: aload_0
      59: invokevirtual #292                // Method remoteAddress:()Lakka/actor/Address;
      62: aload_0
      63: invokevirtual #503                // Method uid:()Lscala/Option;
      66: aload         5
      68: invokespecial #506                // Method akka/remote/HopelessAssociation."<init>":(Lakka/actor/Address;Lakka/actor/Address;Lscala/Option;Ljava/lang/Throwable;)V
      71: athrow
    Exception table:
       from    to  target type
           0    17    18   any

  public akka.actor.ActorRef akka$remote$ReliableDeliverySupervisor$$createWriter();
    Code:
       0: aload_0
       1: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
       4: aload_0
       5: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
       8: getstatic     #514                // Field akka/remote/RARP$.MODULE$:Lakka/remote/RARP$;
      11: aload_0
      12: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      15: invokeinterface #357,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      20: invokevirtual #518                // Method akka/remote/RARP$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      23: checkcast     #520                // class akka/remote/RARP
      26: getstatic     #525                // Field akka/remote/EndpointWriter$.MODULE$:Lakka/remote/EndpointWriter$;
      29: aload_0
      30: invokevirtual #527                // Method currentHandle:()Lscala/Option;
      33: aload_0
      34: invokevirtual #290                // Method localAddress:()Lakka/actor/Address;
      37: aload_0
      38: invokevirtual #292                // Method remoteAddress:()Lakka/actor/Address;
      41: aload_0
      42: invokevirtual #529                // Method refuseUid:()Lscala/Option;
      45: aload_0
      46: invokevirtual #531                // Method transport:()Lakka/remote/transport/AkkaProtocolTransport;
      49: aload_0
      50: invokevirtual #186                // Method settings:()Lakka/remote/RemoteSettings;
      53: getstatic     #536                // Field akka/remote/transport/AkkaPduProtobufCodec$.MODULE$:Lakka/remote/transport/AkkaPduProtobufCodec$;
      56: aload_0
      57: invokevirtual #286                // Method receiveBuffers:()Ljava/util/concurrent/ConcurrentHashMap;
      60: new           #349                // class scala/Some
      63: dup
      64: aload_0
      65: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
      68: invokespecial #386                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      71: invokevirtual #539                // Method akka/remote/EndpointWriter$.props:(Lscala/Option;Lakka/actor/Address;Lakka/actor/Address;Lscala/Option;Lakka/remote/transport/AkkaProtocolTransport;Lakka/remote/RemoteSettings;Lakka/remote/transport/AkkaPduCodec;Ljava/util/concurrent/ConcurrentHashMap;Lscala/Option;)Lakka/actor/Props;
      74: invokevirtual #543                // Method akka/remote/RARP.configureDispatcher:(Lakka/actor/Props;)Lakka/actor/Props;
      77: getstatic     #548                // Field akka/actor/Deploy$.MODULE$:Lakka/actor/Deploy$;
      80: invokevirtual #552                // Method akka/actor/Deploy$.local:()Lakka/actor/Deploy;
      83: invokevirtual #558                // Method akka/actor/Props.withDeploy:(Lakka/actor/Deploy;)Lakka/actor/Props;
      86: ldc_w         #560                // String endpointWriter
      89: invokeinterface #564,  3          // InterfaceMethod akka/actor/ActorContext.actorOf:(Lakka/actor/Props;Ljava/lang/String;)Lakka/actor/ActorRef;
      94: invokeinterface #568,  2          // InterfaceMethod akka/actor/ActorContext.watch:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
      99: areturn

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokevirtual #571                // Method supervisorStrategy:()Lakka/actor/OneForOneStrategy;
       4: areturn

  public akka.remote.ReliableDeliverySupervisor(scala.Option<akka.remote.transport.AkkaProtocolHandle>, akka.actor.Address, akka.actor.Address, scala.Option<java.lang.Object>, akka.remote.transport.AkkaProtocolTransport, akka.remote.RemoteSettings, akka.remote.transport.AkkaPduCodec, java.util.concurrent.ConcurrentHashMap<akka.remote.EndpointManager$Link, akka.remote.EndpointManager$ResendState>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #139                // Field localAddress:Lakka/actor/Address;
       5: aload_0
       6: aload_3
       7: putfield      #141                // Field remoteAddress:Lakka/actor/Address;
      10: aload_0
      11: aload         4
      13: putfield      #144                // Field refuseUid:Lscala/Option;
      16: aload_0
      17: aload         5
      19: putfield      #147                // Field transport:Lakka/remote/transport/AkkaProtocolTransport;
      22: aload_0
      23: aload         6
      25: putfield      #150                // Field settings:Lakka/remote/RemoteSettings;
      28: aload_0
      29: aload         7
      31: putfield      #153                // Field codec:Lakka/remote/transport/AkkaPduCodec;
      34: aload_0
      35: aload         8
      37: putfield      #156                // Field receiveBuffers:Ljava/util/concurrent/ConcurrentHashMap;
      40: aload_0
      41: invokespecial #574                // Method java/lang/Object."<init>":()V
      44: aload_0
      45: invokestatic  #577                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      48: aload_0
      49: invokestatic  #580                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      52: aload_0
      53: aload_0
      54: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      57: invokeinterface #357,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      62: invokevirtual #363                // Method akka/actor/ActorSystem.scheduler:()Lakka/actor/Scheduler;
      65: aload         6
      67: invokevirtual #583                // Method akka/remote/RemoteSettings.SysResendTimeout:()Lscala/concurrent/duration/FiniteDuration;
      70: aload         6
      72: invokevirtual #583                // Method akka/remote/RemoteSettings.SysResendTimeout:()Lscala/concurrent/duration/FiniteDuration;
      75: aload_0
      76: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
      79: getstatic     #588                // Field akka/remote/ReliableDeliverySupervisor$AttemptSysMsgRedelivery$.MODULE$:Lakka/remote/ReliableDeliverySupervisor$AttemptSysMsgRedelivery$;
      82: aload_0
      83: invokevirtual #351                // Method context:()Lakka/actor/ActorContext;
      86: invokeinterface #378,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      91: aload_0
      92: invokevirtual #369                // Method self:()Lakka/actor/ActorRef;
      95: invokeinterface #592,  7          // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
     100: putfield      #159                // Field autoResendTimer:Lakka/actor/Cancellable;
     103: aload_0
     104: iconst_0
     105: putfield      #162                // Field akka$remote$ReliableDeliverySupervisor$$bufferWasInUse:Z
     108: aload_0
     109: iconst_0
     110: istore        9
     112: getstatic     #597                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
     115: invokevirtual #600                // Method akka/actor/OneForOneStrategy$.apply$default$1:()I
     118: istore        10
     120: getstatic     #597                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
     123: invokevirtual #604                // Method akka/actor/OneForOneStrategy$.apply$default$2:()Lscala/concurrent/duration/Duration;
     126: astore        11
     128: new           #606                // class akka/remote/ReliableDeliverySupervisor$$anonfun$1
     131: dup
     132: aload_0
     133: invokespecial #607                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$1."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
     136: astore        12
     138: new           #609                // class akka/actor/OneForOneStrategy
     141: dup
     142: iload         10
     144: aload         11
     146: iload         9
     148: aload         12
     150: invokespecial #612                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
     153: putfield      #167                // Field supervisorStrategy:Lakka/actor/OneForOneStrategy;
     156: aload_0
     157: aload_1
     158: putfield      #169                // Field currentHandle:Lscala/Option;
     161: aload_0
     162: invokevirtual #614                // Method reset:()V
     165: aload_0
     166: aload_0
     167: invokevirtual #616                // Method akka$remote$ReliableDeliverySupervisor$$createWriter:()Lakka/actor/ActorRef;
     170: putfield      #236                // Field writer:Lakka/actor/ActorRef;
     173: aload_0
     174: aload_1
     175: new           #618                // class akka/remote/ReliableDeliverySupervisor$$anonfun$5
     178: dup
     179: aload_0
     180: invokespecial #619                // Method akka/remote/ReliableDeliverySupervisor$$anonfun$5."<init>":(Lakka/remote/ReliableDeliverySupervisor;)V
     183: invokevirtual #623                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     186: putfield      #239                // Field uid:Lscala/Option;
     189: aload_0
     190: getstatic     #223                // Field scala/None$.MODULE$:Lscala/None$;
     193: putfield      #242                // Field bailoutAt:Lscala/Option;
     196: aload_0
     197: getstatic     #223                // Field scala/None$.MODULE$:Lscala/None$;
     200: putfield      #244                // Field maxSilenceTimer:Lscala/Option;
     203: aload_0
     204: aload_0
     205: invokevirtual #503                // Method uid:()Lscala/Option;
     208: invokevirtual #626                // Method scala/Option.isDefined:()Z
     211: putfield      #247                // Field uidConfirmed:Z
     214: return
}
