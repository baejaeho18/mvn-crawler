Compiled from "ContainerFormats.java"
public final class akka.remote.ContainerFormats$Throwable extends akka.protobuf.GeneratedMessage implements akka.remote.ContainerFormats$ThrowableOrBuilder {
  private static final akka.remote.ContainerFormats$Throwable defaultInstance;

  private final akka.protobuf.UnknownFieldSet unknownFields;

  public static akka.protobuf.Parser<akka.remote.ContainerFormats$Throwable> PARSER;

  private int bitField0_;

  public static final int CLASSNAME_FIELD_NUMBER;

  private java.lang.Object className_;

  public static final int MESSAGE_FIELD_NUMBER;

  private java.lang.Object message_;

  public static final int CAUSE_FIELD_NUMBER;

  private akka.remote.ContainerFormats$Payload cause_;

  public static final int STACKTRACE_FIELD_NUMBER;

  private java.util.List<akka.remote.ContainerFormats$StackTraceElement> stackTrace_;

  private byte memoizedIsInitialized;

  private int memoizedSerializedSize;

  private static final long serialVersionUID;

  private akka.remote.ContainerFormats$Throwable(akka.protobuf.GeneratedMessage$Builder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method akka/protobuf/GeneratedMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #10                 // Field memoizedIsInitialized:B
      10: aload_0
      11: iconst_m1
      12: putfield      #11                 // Field memoizedSerializedSize:I
      15: aload_0
      16: aload_1
      17: invokevirtual #12                 // Method akka/protobuf/GeneratedMessage$Builder.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      20: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      23: return

  private akka.remote.ContainerFormats$Throwable(boolean);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #10                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #11                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokestatic  #15                 // Method akka/protobuf/UnknownFieldSet.getDefaultInstance:()Lakka/protobuf/UnknownFieldSet;
      18: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      21: return

  public static akka.remote.ContainerFormats$Throwable getDefaultInstance();
    Code:
       0: getstatic     #16                 // Field defaultInstance:Lakka/remote/ContainerFormats$Throwable;
       3: areturn

  public akka.remote.ContainerFormats$Throwable getDefaultInstanceForType();
    Code:
       0: getstatic     #16                 // Field defaultInstance:Lakka/remote/ContainerFormats$Throwable;
       3: areturn

  public final akka.protobuf.UnknownFieldSet getUnknownFields();
    Code:
       0: aload_0
       1: getfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
       4: areturn

  private akka.remote.ContainerFormats$Throwable(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #10                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #11                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokespecial #17                 // Method initFields:()V
      18: iconst_0
      19: istore_3
      20: invokestatic  #18                 // Method akka/protobuf/UnknownFieldSet.newBuilder:()Lakka/protobuf/UnknownFieldSet$Builder;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: ifne          279
      33: aload_1
      34: invokevirtual #19                 // Method akka/protobuf/CodedInputStream.readTag:()I
      37: istore        6
      39: iload         6
      41: lookupswitch  { // 5
                     0: 92
                    10: 117
                    18: 138
                    26: 159
                    34: 233
               default: 98
          }
      92: iconst_1
      93: istore        5
      95: goto          276
      98: aload_0
      99: aload_1
     100: aload         4
     102: aload_2
     103: iload         6
     105: invokevirtual #20                 // Method parseUnknownField:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/UnknownFieldSet$Builder;Lakka/protobuf/ExtensionRegistryLite;I)Z
     108: ifne          276
     111: iconst_1
     112: istore        5
     114: goto          276
     117: aload_0
     118: dup
     119: getfield      #2                  // Field bitField0_:I
     122: iconst_1
     123: ior
     124: putfield      #2                  // Field bitField0_:I
     127: aload_0
     128: aload_1
     129: invokevirtual #21                 // Method akka/protobuf/CodedInputStream.readBytes:()Lakka/protobuf/ByteString;
     132: putfield      #6                  // Field className_:Ljava/lang/Object;
     135: goto          276
     138: aload_0
     139: dup
     140: getfield      #2                  // Field bitField0_:I
     143: iconst_2
     144: ior
     145: putfield      #2                  // Field bitField0_:I
     148: aload_0
     149: aload_1
     150: invokevirtual #21                 // Method akka/protobuf/CodedInputStream.readBytes:()Lakka/protobuf/ByteString;
     153: putfield      #5                  // Field message_:Ljava/lang/Object;
     156: goto          276
     159: aconst_null
     160: astore        7
     162: aload_0
     163: getfield      #2                  // Field bitField0_:I
     166: iconst_4
     167: iand
     168: iconst_4
     169: if_icmpne     181
     172: aload_0
     173: getfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
     176: invokevirtual #22                 // Method akka/remote/ContainerFormats$Payload.toBuilder:()Lakka/remote/ContainerFormats$Payload$Builder;
     179: astore        7
     181: aload_0
     182: aload_1
     183: getstatic     #23                 // Field akka/remote/ContainerFormats$Payload.PARSER:Lakka/protobuf/Parser;
     186: aload_2
     187: invokevirtual #24                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     190: checkcast     #25                 // class akka/remote/ContainerFormats$Payload
     193: putfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
     196: aload         7
     198: ifnull        220
     201: aload         7
     203: aload_0
     204: getfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
     207: invokevirtual #26                 // Method akka/remote/ContainerFormats$Payload$Builder.mergeFrom:(Lakka/remote/ContainerFormats$Payload;)Lakka/remote/ContainerFormats$Payload$Builder;
     210: pop
     211: aload_0
     212: aload         7
     214: invokevirtual #27                 // Method akka/remote/ContainerFormats$Payload$Builder.buildPartial:()Lakka/remote/ContainerFormats$Payload;
     217: putfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
     220: aload_0
     221: dup
     222: getfield      #2                  // Field bitField0_:I
     225: iconst_4
     226: ior
     227: putfield      #2                  // Field bitField0_:I
     230: goto          276
     233: iload_3
     234: bipush        8
     236: iand
     237: bipush        8
     239: if_icmpeq     258
     242: aload_0
     243: new           #28                 // class java/util/ArrayList
     246: dup
     247: invokespecial #29                 // Method java/util/ArrayList."<init>":()V
     250: putfield      #3                  // Field stackTrace_:Ljava/util/List;
     253: iload_3
     254: bipush        8
     256: ior
     257: istore_3
     258: aload_0
     259: getfield      #3                  // Field stackTrace_:Ljava/util/List;
     262: aload_1
     263: getstatic     #30                 // Field akka/remote/ContainerFormats$StackTraceElement.PARSER:Lakka/protobuf/Parser;
     266: aload_2
     267: invokevirtual #24                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     270: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     275: pop
     276: goto          28
     279: iload_3
     280: bipush        8
     282: iand
     283: bipush        8
     285: if_icmpne     299
     288: aload_0
     289: aload_0
     290: getfield      #3                  // Field stackTrace_:Ljava/util/List;
     293: invokestatic  #32                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     296: putfield      #3                  // Field stackTrace_:Ljava/util/List;
     299: aload_0
     300: aload         4
     302: invokevirtual #33                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     305: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     308: aload_0
     309: invokevirtual #34                 // Method makeExtensionsImmutable:()V
     312: goto          381
     315: astore        5
     317: aload         5
     319: aload_0
     320: invokevirtual #36                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     323: athrow
     324: astore        5
     326: new           #35                 // class akka/protobuf/InvalidProtocolBufferException
     329: dup
     330: aload         5
     332: invokevirtual #38                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     335: invokespecial #39                 // Method akka/protobuf/InvalidProtocolBufferException."<init>":(Ljava/lang/String;)V
     338: aload_0
     339: invokevirtual #36                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     342: athrow
     343: astore        8
     345: iload_3
     346: bipush        8
     348: iand
     349: bipush        8
     351: if_icmpne     365
     354: aload_0
     355: aload_0
     356: getfield      #3                  // Field stackTrace_:Ljava/util/List;
     359: invokestatic  #32                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     362: putfield      #3                  // Field stackTrace_:Ljava/util/List;
     365: aload_0
     366: aload         4
     368: invokevirtual #33                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     371: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     374: aload_0
     375: invokevirtual #34                 // Method makeExtensionsImmutable:()V
     378: aload         8
     380: athrow
     381: return
    Exception table:
       from    to  target type
          25   279   315   Class akka/protobuf/InvalidProtocolBufferException
          25   279   324   Class java/io/IOException
          25   279   343   any
         315   345   343   any

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #40                 // Method akka/remote/ContainerFormats.access$8100:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #41                 // Method akka/remote/ContainerFormats.access$8200:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #42                 // class akka/remote/ContainerFormats$Throwable
       5: ldc           #43                 // class akka/remote/ContainerFormats$Throwable$Builder
       7: invokevirtual #44                 // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  public akka.protobuf.Parser<akka.remote.ContainerFormats$Throwable> getParserForType();
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: areturn

  public boolean hasClassName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field className_:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #46                 // class java/lang/String
       9: ifeq          17
      12: aload_1
      13: checkcast     #46                 // class java/lang/String
      16: areturn
      17: aload_1
      18: checkcast     #47                 // class akka/protobuf/ByteString
      21: astore_2
      22: aload_2
      23: invokevirtual #48                 // Method akka/protobuf/ByteString.toStringUtf8:()Ljava/lang/String;
      26: astore_3
      27: aload_2
      28: invokevirtual #49                 // Method akka/protobuf/ByteString.isValidUtf8:()Z
      31: ifeq          39
      34: aload_0
      35: aload_3
      36: putfield      #6                  // Field className_:Ljava/lang/Object;
      39: aload_3
      40: areturn

  public akka.protobuf.ByteString getClassNameBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field className_:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #46                 // class java/lang/String
       9: ifeq          27
      12: aload_1
      13: checkcast     #46                 // class java/lang/String
      16: invokestatic  #50                 // Method akka/protobuf/ByteString.copyFromUtf8:(Ljava/lang/String;)Lakka/protobuf/ByteString;
      19: astore_2
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field className_:Ljava/lang/Object;
      25: aload_2
      26: areturn
      27: aload_1
      28: checkcast     #47                 // class akka/protobuf/ByteString
      31: areturn

  public boolean hasMessage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bitField0_:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #5                  // Field message_:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #46                 // class java/lang/String
       9: ifeq          17
      12: aload_1
      13: checkcast     #46                 // class java/lang/String
      16: areturn
      17: aload_1
      18: checkcast     #47                 // class akka/protobuf/ByteString
      21: astore_2
      22: aload_2
      23: invokevirtual #48                 // Method akka/protobuf/ByteString.toStringUtf8:()Ljava/lang/String;
      26: astore_3
      27: aload_2
      28: invokevirtual #49                 // Method akka/protobuf/ByteString.isValidUtf8:()Z
      31: ifeq          39
      34: aload_0
      35: aload_3
      36: putfield      #5                  // Field message_:Ljava/lang/Object;
      39: aload_3
      40: areturn

  public akka.protobuf.ByteString getMessageBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field message_:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #46                 // class java/lang/String
       9: ifeq          27
      12: aload_1
      13: checkcast     #46                 // class java/lang/String
      16: invokestatic  #50                 // Method akka/protobuf/ByteString.copyFromUtf8:(Ljava/lang/String;)Lakka/protobuf/ByteString;
      19: astore_2
      20: aload_0
      21: aload_2
      22: putfield      #5                  // Field message_:Ljava/lang/Object;
      25: aload_2
      26: areturn
      27: aload_1
      28: checkcast     #47                 // class akka/protobuf/ByteString
      31: areturn

  public boolean hasCause();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bitField0_:I
       4: iconst_4
       5: iand
       6: iconst_4
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.ContainerFormats$Payload getCause();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
       4: areturn

  public akka.remote.ContainerFormats$PayloadOrBuilder getCauseOrBuilder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
       4: areturn

  public java.util.List<akka.remote.ContainerFormats$StackTraceElement> getStackTraceList();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stackTrace_:Ljava/util/List;
       4: areturn

  public java.util.List<? extends akka.remote.ContainerFormats$StackTraceElementOrBuilder> getStackTraceOrBuilderList();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stackTrace_:Ljava/util/List;
       4: areturn

  public int getStackTraceCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stackTrace_:Ljava/util/List;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public akka.remote.ContainerFormats$StackTraceElement getStackTrace(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field stackTrace_:Ljava/util/List;
       4: iload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #53                 // class akka/remote/ContainerFormats$StackTraceElement
      13: areturn

  public akka.remote.ContainerFormats$StackTraceElementOrBuilder getStackTraceOrBuilder(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field stackTrace_:Ljava/util/List;
       4: iload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #54                 // class akka/remote/ContainerFormats$StackTraceElementOrBuilder
      13: areturn

  private void initFields();
    Code:
       0: aload_0
       1: ldc           #55                 // String
       3: putfield      #6                  // Field className_:Ljava/lang/Object;
       6: aload_0
       7: ldc           #55                 // String
       9: putfield      #5                  // Field message_:Ljava/lang/Object;
      12: aload_0
      13: invokestatic  #56                 // Method akka/remote/ContainerFormats$Payload.getDefaultInstance:()Lakka/remote/ContainerFormats$Payload;
      16: putfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
      19: aload_0
      20: invokestatic  #57                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      23: putfield      #3                  // Field stackTrace_:Ljava/util/List;
      26: return

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #10                 // Field memoizedIsInitialized:B
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     21
      10: iload_1
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #58                 // Method hasClassName:()Z
      25: ifne          35
      28: aload_0
      29: iconst_0
      30: putfield      #10                 // Field memoizedIsInitialized:B
      33: iconst_0
      34: ireturn
      35: aload_0
      36: invokevirtual #59                 // Method hasCause:()Z
      39: ifeq          59
      42: aload_0
      43: invokevirtual #60                 // Method getCause:()Lakka/remote/ContainerFormats$Payload;
      46: invokevirtual #61                 // Method akka/remote/ContainerFormats$Payload.isInitialized:()Z
      49: ifne          59
      52: aload_0
      53: iconst_0
      54: putfield      #10                 // Field memoizedIsInitialized:B
      57: iconst_0
      58: ireturn
      59: iconst_0
      60: istore_2
      61: iload_2
      62: aload_0
      63: invokevirtual #62                 // Method getStackTraceCount:()I
      66: if_icmpge     93
      69: aload_0
      70: iload_2
      71: invokevirtual #63                 // Method getStackTrace:(I)Lakka/remote/ContainerFormats$StackTraceElement;
      74: invokevirtual #64                 // Method akka/remote/ContainerFormats$StackTraceElement.isInitialized:()Z
      77: ifne          87
      80: aload_0
      81: iconst_0
      82: putfield      #10                 // Field memoizedIsInitialized:B
      85: iconst_0
      86: ireturn
      87: iinc          2, 1
      90: goto          61
      93: aload_0
      94: iconst_1
      95: putfield      #10                 // Field memoizedIsInitialized:B
      98: iconst_1
      99: ireturn

  public void writeTo(akka.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getSerializedSize:()I
       4: pop
       5: aload_0
       6: getfield      #2                  // Field bitField0_:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     24
      15: aload_1
      16: iconst_1
      17: aload_0
      18: invokevirtual #66                 // Method getClassNameBytes:()Lakka/protobuf/ByteString;
      21: invokevirtual #67                 // Method akka/protobuf/CodedOutputStream.writeBytes:(ILakka/protobuf/ByteString;)V
      24: aload_0
      25: getfield      #2                  // Field bitField0_:I
      28: iconst_2
      29: iand
      30: iconst_2
      31: if_icmpne     43
      34: aload_1
      35: iconst_2
      36: aload_0
      37: invokevirtual #68                 // Method getMessageBytes:()Lakka/protobuf/ByteString;
      40: invokevirtual #67                 // Method akka/protobuf/CodedOutputStream.writeBytes:(ILakka/protobuf/ByteString;)V
      43: aload_0
      44: getfield      #2                  // Field bitField0_:I
      47: iconst_4
      48: iand
      49: iconst_4
      50: if_icmpne     62
      53: aload_1
      54: iconst_3
      55: aload_0
      56: getfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
      59: invokevirtual #69                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      62: iconst_0
      63: istore_2
      64: iload_2
      65: aload_0
      66: getfield      #3                  // Field stackTrace_:Ljava/util/List;
      69: invokeinterface #51,  1           // InterfaceMethod java/util/List.size:()I
      74: if_icmpge     101
      77: aload_1
      78: iconst_4
      79: aload_0
      80: getfield      #3                  // Field stackTrace_:Ljava/util/List;
      83: iload_2
      84: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      89: checkcast     #70                 // class akka/protobuf/MessageLite
      92: invokevirtual #69                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      95: iinc          2, 1
      98: goto          64
     101: aload_0
     102: invokevirtual #71                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     105: aload_1
     106: invokevirtual #72                 // Method akka/protobuf/UnknownFieldSet.writeTo:(Lakka/protobuf/CodedOutputStream;)V
     109: return

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoizedSerializedSize:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     12
      10: iload_1
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: getfield      #2                  // Field bitField0_:I
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     35
      24: iload_1
      25: iconst_1
      26: aload_0
      27: invokevirtual #66                 // Method getClassNameBytes:()Lakka/protobuf/ByteString;
      30: invokestatic  #73                 // Method akka/protobuf/CodedOutputStream.computeBytesSize:(ILakka/protobuf/ByteString;)I
      33: iadd
      34: istore_1
      35: aload_0
      36: getfield      #2                  // Field bitField0_:I
      39: iconst_2
      40: iand
      41: iconst_2
      42: if_icmpne     56
      45: iload_1
      46: iconst_2
      47: aload_0
      48: invokevirtual #68                 // Method getMessageBytes:()Lakka/protobuf/ByteString;
      51: invokestatic  #73                 // Method akka/protobuf/CodedOutputStream.computeBytesSize:(ILakka/protobuf/ByteString;)I
      54: iadd
      55: istore_1
      56: aload_0
      57: getfield      #2                  // Field bitField0_:I
      60: iconst_4
      61: iand
      62: iconst_4
      63: if_icmpne     77
      66: iload_1
      67: iconst_3
      68: aload_0
      69: getfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
      72: invokestatic  #74                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      75: iadd
      76: istore_1
      77: iconst_0
      78: istore_2
      79: iload_2
      80: aload_0
      81: getfield      #3                  // Field stackTrace_:Ljava/util/List;
      84: invokeinterface #51,  1           // InterfaceMethod java/util/List.size:()I
      89: if_icmpge     118
      92: iload_1
      93: iconst_4
      94: aload_0
      95: getfield      #3                  // Field stackTrace_:Ljava/util/List;
      98: iload_2
      99: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     104: checkcast     #70                 // class akka/protobuf/MessageLite
     107: invokestatic  #74                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
     110: iadd
     111: istore_1
     112: iinc          2, 1
     115: goto          79
     118: iload_1
     119: aload_0
     120: invokevirtual #71                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     123: invokevirtual #75                 // Method akka/protobuf/UnknownFieldSet.getSerializedSize:()I
     126: iadd
     127: istore_1
     128: aload_0
     129: iload_1
     130: putfield      #11                 // Field memoizedSerializedSize:I
     133: iload_1
     134: ireturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokespecial #76                 // Method akka/protobuf/GeneratedMessage.writeReplace:()Ljava/lang/Object;
       4: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(akka.protobuf.ByteString) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #77,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      12: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(akka.protobuf.ByteString, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #78,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      13: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(byte[]) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #79,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:([B)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      12: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(byte[], akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #80,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:([BLakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      13: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #81,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      12: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #82,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      13: areturn

  public static akka.remote.ContainerFormats$Throwable parseDelimitedFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #83,  2           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      12: areturn

  public static akka.remote.ContainerFormats$Throwable parseDelimitedFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #84,  3           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      13: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(akka.protobuf.CodedInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #85,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      12: areturn

  public static akka.remote.ContainerFormats$Throwable parseFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #86,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/ContainerFormats$Throwable
      13: areturn

  public static akka.remote.ContainerFormats$Throwable$Builder newBuilder();
    Code:
       0: invokestatic  #87                 // Method akka/remote/ContainerFormats$Throwable$Builder.access$8400:()Lakka/remote/ContainerFormats$Throwable$Builder;
       3: areturn

  public akka.remote.ContainerFormats$Throwable$Builder newBuilderForType();
    Code:
       0: invokestatic  #88                 // Method newBuilder:()Lakka/remote/ContainerFormats$Throwable$Builder;
       3: areturn

  public static akka.remote.ContainerFormats$Throwable$Builder newBuilder(akka.remote.ContainerFormats$Throwable);
    Code:
       0: invokestatic  #88                 // Method newBuilder:()Lakka/remote/ContainerFormats$Throwable$Builder;
       3: aload_0
       4: invokevirtual #89                 // Method akka/remote/ContainerFormats$Throwable$Builder.mergeFrom:(Lakka/remote/ContainerFormats$Throwable;)Lakka/remote/ContainerFormats$Throwable$Builder;
       7: areturn

  public akka.remote.ContainerFormats$Throwable$Builder toBuilder();
    Code:
       0: aload_0
       1: invokestatic  #90                 // Method newBuilder:(Lakka/remote/ContainerFormats$Throwable;)Lakka/remote/ContainerFormats$Throwable$Builder;
       4: areturn

  protected akka.remote.ContainerFormats$Throwable$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: new           #43                 // class akka/remote/ContainerFormats$Throwable$Builder
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #91                 // Method akka/remote/ContainerFormats$Throwable$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;Lakka/remote/ContainerFormats$1;)V
       9: astore_2
      10: aload_2
      11: areturn

  protected akka.protobuf.Message$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method newBuilderForType:(Lakka/protobuf/GeneratedMessage$BuilderParent;)Lakka/remote/ContainerFormats$Throwable$Builder;
       5: areturn

  public akka.protobuf.Message$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method toBuilder:()Lakka/remote/ContainerFormats$Throwable$Builder;
       4: areturn

  public akka.protobuf.Message$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method newBuilderForType:()Lakka/remote/ContainerFormats$Throwable$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method toBuilder:()Lakka/remote/ContainerFormats$Throwable$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method newBuilderForType:()Lakka/remote/ContainerFormats$Throwable$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getDefaultInstanceForType:()Lakka/remote/ContainerFormats$Throwable;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getDefaultInstanceForType:()Lakka/remote/ContainerFormats$Throwable;
       4: areturn

  akka.remote.ContainerFormats$Throwable(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite, akka.remote.ContainerFormats$1) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method "<init>":(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)V
       6: return

  static boolean access$8600();
    Code:
       0: getstatic     #1                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  akka.remote.ContainerFormats$Throwable(akka.protobuf.GeneratedMessage$Builder, akka.remote.ContainerFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: return

  static java.lang.Object access$8802(akka.remote.ContainerFormats$Throwable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field className_:Ljava/lang/Object;
       6: areturn

  static java.lang.Object access$8902(akka.remote.ContainerFormats$Throwable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field message_:Ljava/lang/Object;
       6: areturn

  static akka.remote.ContainerFormats$Payload access$9002(akka.remote.ContainerFormats$Throwable, akka.remote.ContainerFormats$Payload);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field cause_:Lakka/remote/ContainerFormats$Payload;
       6: areturn

  static java.util.List access$9102(akka.remote.ContainerFormats$Throwable, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field stackTrace_:Ljava/util/List;
       6: areturn

  static int access$9202(akka.remote.ContainerFormats$Throwable, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field bitField0_:I
       6: ireturn

  static java.lang.Object access$8800(akka.remote.ContainerFormats$Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field className_:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$8900(akka.remote.ContainerFormats$Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field message_:Ljava/lang/Object;
       4: areturn

  static java.util.List access$9100(akka.remote.ContainerFormats$Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field stackTrace_:Ljava/util/List;
       4: areturn

  static boolean access$9300();
    Code:
       0: getstatic     #1                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  static {};
    Code:
       0: new           #96                 // class akka/remote/ContainerFormats$Throwable$1
       3: dup
       4: invokespecial #97                 // Method akka/remote/ContainerFormats$Throwable$1."<init>":()V
       7: putstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
      10: new           #42                 // class akka/remote/ContainerFormats$Throwable
      13: dup
      14: iconst_1
      15: invokespecial #98                 // Method "<init>":(Z)V
      18: putstatic     #16                 // Field defaultInstance:Lakka/remote/ContainerFormats$Throwable;
      21: getstatic     #16                 // Field defaultInstance:Lakka/remote/ContainerFormats$Throwable;
      24: invokespecial #17                 // Method initFields:()V
      27: return
}
