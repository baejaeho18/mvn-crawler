Compiled from "ArteryControlFormats.java"
public final class akka.remote.ArteryControlFormats$SystemMessageEnvelope extends akka.protobuf.GeneratedMessage implements akka.remote.ArteryControlFormats$SystemMessageEnvelopeOrBuilder {
  private static final akka.remote.ArteryControlFormats$SystemMessageEnvelope defaultInstance;

  private final akka.protobuf.UnknownFieldSet unknownFields;

  public static akka.protobuf.Parser<akka.remote.ArteryControlFormats$SystemMessageEnvelope> PARSER;

  private int bitField0_;

  public static final int MESSAGE_FIELD_NUMBER;

  private akka.protobuf.ByteString message_;

  public static final int SERIALIZERID_FIELD_NUMBER;

  private int serializerId_;

  public static final int MESSAGEMANIFEST_FIELD_NUMBER;

  private akka.protobuf.ByteString messageManifest_;

  public static final int SEQNO_FIELD_NUMBER;

  private long seqNo_;

  public static final int ACKREPLYTO_FIELD_NUMBER;

  private akka.remote.ArteryControlFormats$UniqueAddress ackReplyTo_;

  private byte memoizedIsInitialized;

  private int memoizedSerializedSize;

  private static final long serialVersionUID;

  private akka.remote.ArteryControlFormats$SystemMessageEnvelope(akka.protobuf.GeneratedMessage$Builder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method akka/protobuf/GeneratedMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #11                 // Field memoizedIsInitialized:B
      10: aload_0
      11: iconst_m1
      12: putfield      #12                 // Field memoizedSerializedSize:I
      15: aload_0
      16: aload_1
      17: invokevirtual #13                 // Method akka/protobuf/GeneratedMessage$Builder.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      20: putfield      #14                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      23: return

  private akka.remote.ArteryControlFormats$SystemMessageEnvelope(boolean);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #11                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #12                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokestatic  #16                 // Method akka/protobuf/UnknownFieldSet.getDefaultInstance:()Lakka/protobuf/UnknownFieldSet;
      18: putfield      #14                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      21: return

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope getDefaultInstance();
    Code:
       0: getstatic     #17                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;
       3: areturn

  public akka.remote.ArteryControlFormats$SystemMessageEnvelope getDefaultInstanceForType();
    Code:
       0: getstatic     #17                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;
       3: areturn

  public final akka.protobuf.UnknownFieldSet getUnknownFields();
    Code:
       0: aload_0
       1: getfield      #14                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
       4: areturn

  private akka.remote.ArteryControlFormats$SystemMessageEnvelope(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #11                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #12                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokespecial #18                 // Method initFields:()V
      18: iconst_0
      19: istore_3
      20: invokestatic  #19                 // Method akka/protobuf/UnknownFieldSet.newBuilder:()Lakka/protobuf/UnknownFieldSet$Builder;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: ifne          290
      33: aload_1
      34: invokevirtual #20                 // Method akka/protobuf/CodedInputStream.readTag:()I
      37: istore        6
      39: iload         6
      41: lookupswitch  { // 6
                     0: 100
                    10: 125
                    16: 146
                    26: 167
                    32: 188
                    42: 210
               default: 106
          }
     100: iconst_1
     101: istore        5
     103: goto          287
     106: aload_0
     107: aload_1
     108: aload         4
     110: aload_2
     111: iload         6
     113: invokevirtual #21                 // Method parseUnknownField:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/UnknownFieldSet$Builder;Lakka/protobuf/ExtensionRegistryLite;I)Z
     116: ifne          287
     119: iconst_1
     120: istore        5
     122: goto          287
     125: aload_0
     126: dup
     127: getfield      #1                  // Field bitField0_:I
     130: iconst_1
     131: ior
     132: putfield      #1                  // Field bitField0_:I
     135: aload_0
     136: aload_1
     137: invokevirtual #22                 // Method akka/protobuf/CodedInputStream.readBytes:()Lakka/protobuf/ByteString;
     140: putfield      #6                  // Field message_:Lakka/protobuf/ByteString;
     143: goto          287
     146: aload_0
     147: dup
     148: getfield      #1                  // Field bitField0_:I
     151: iconst_2
     152: ior
     153: putfield      #1                  // Field bitField0_:I
     156: aload_0
     157: aload_1
     158: invokevirtual #23                 // Method akka/protobuf/CodedInputStream.readInt32:()I
     161: putfield      #5                  // Field serializerId_:I
     164: goto          287
     167: aload_0
     168: dup
     169: getfield      #1                  // Field bitField0_:I
     172: iconst_4
     173: ior
     174: putfield      #1                  // Field bitField0_:I
     177: aload_0
     178: aload_1
     179: invokevirtual #22                 // Method akka/protobuf/CodedInputStream.readBytes:()Lakka/protobuf/ByteString;
     182: putfield      #4                  // Field messageManifest_:Lakka/protobuf/ByteString;
     185: goto          287
     188: aload_0
     189: dup
     190: getfield      #1                  // Field bitField0_:I
     193: bipush        8
     195: ior
     196: putfield      #1                  // Field bitField0_:I
     199: aload_0
     200: aload_1
     201: invokevirtual #24                 // Method akka/protobuf/CodedInputStream.readUInt64:()J
     204: putfield      #3                  // Field seqNo_:J
     207: goto          287
     210: aconst_null
     211: astore        7
     213: aload_0
     214: getfield      #1                  // Field bitField0_:I
     217: bipush        16
     219: iand
     220: bipush        16
     222: if_icmpne     234
     225: aload_0
     226: getfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     229: invokevirtual #25                 // Method akka/remote/ArteryControlFormats$UniqueAddress.toBuilder:()Lakka/remote/ArteryControlFormats$UniqueAddress$Builder;
     232: astore        7
     234: aload_0
     235: aload_1
     236: getstatic     #26                 // Field akka/remote/ArteryControlFormats$UniqueAddress.PARSER:Lakka/protobuf/Parser;
     239: aload_2
     240: invokevirtual #27                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     243: checkcast     #28                 // class akka/remote/ArteryControlFormats$UniqueAddress
     246: putfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     249: aload         7
     251: ifnull        273
     254: aload         7
     256: aload_0
     257: getfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     260: invokevirtual #29                 // Method akka/remote/ArteryControlFormats$UniqueAddress$Builder.mergeFrom:(Lakka/remote/ArteryControlFormats$UniqueAddress;)Lakka/remote/ArteryControlFormats$UniqueAddress$Builder;
     263: pop
     264: aload_0
     265: aload         7
     267: invokevirtual #30                 // Method akka/remote/ArteryControlFormats$UniqueAddress$Builder.buildPartial:()Lakka/remote/ArteryControlFormats$UniqueAddress;
     270: putfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     273: aload_0
     274: dup
     275: getfield      #1                  // Field bitField0_:I
     278: bipush        16
     280: ior
     281: putfield      #1                  // Field bitField0_:I
     284: goto          287
     287: goto          28
     290: aload_0
     291: aload         4
     293: invokevirtual #31                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     296: putfield      #14                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     299: aload_0
     300: invokevirtual #32                 // Method makeExtensionsImmutable:()V
     303: goto          352
     306: astore        5
     308: aload         5
     310: aload_0
     311: invokevirtual #34                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     314: athrow
     315: astore        5
     317: new           #33                 // class akka/protobuf/InvalidProtocolBufferException
     320: dup
     321: aload         5
     323: invokevirtual #36                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     326: invokespecial #37                 // Method akka/protobuf/InvalidProtocolBufferException."<init>":(Ljava/lang/String;)V
     329: aload_0
     330: invokevirtual #34                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     333: athrow
     334: astore        8
     336: aload_0
     337: aload         4
     339: invokevirtual #31                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     342: putfield      #14                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     345: aload_0
     346: invokevirtual #32                 // Method makeExtensionsImmutable:()V
     349: aload         8
     351: athrow
     352: return
    Exception table:
       from    to  target type
          25   290   306   Class akka/protobuf/InvalidProtocolBufferException
          25   290   315   Class java/io/IOException
          25   290   334   any
         306   336   334   any

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #38                 // Method akka/remote/ArteryControlFormats.access$5200:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #39                 // Method akka/remote/ArteryControlFormats.access$5300:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
       5: ldc           #41                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder
       7: invokevirtual #42                 // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  public akka.protobuf.Parser<akka.remote.ArteryControlFormats$SystemMessageEnvelope> getParserForType();
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: areturn

  public boolean hasMessage();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.protobuf.ByteString getMessage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field message_:Lakka/protobuf/ByteString;
       4: areturn

  public boolean hasSerializerId();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int getSerializerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field serializerId_:I
       4: ireturn

  public boolean hasMessageManifest();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_4
       5: iand
       6: iconst_4
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.protobuf.ByteString getMessageManifest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageManifest_:Lakka/protobuf/ByteString;
       4: areturn

  public boolean hasSeqNo();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: bipush        8
       6: iand
       7: bipush        8
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public long getSeqNo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field seqNo_:J
       4: lreturn

  public boolean hasAckReplyTo();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: bipush        16
       6: iand
       7: bipush        16
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public akka.remote.ArteryControlFormats$UniqueAddress getAckReplyTo();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
       4: areturn

  public akka.remote.ArteryControlFormats$UniqueAddressOrBuilder getAckReplyToOrBuilder();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
       4: areturn

  private void initFields();
    Code:
       0: aload_0
       1: getstatic     #44                 // Field akka/protobuf/ByteString.EMPTY:Lakka/protobuf/ByteString;
       4: putfield      #6                  // Field message_:Lakka/protobuf/ByteString;
       7: aload_0
       8: iconst_0
       9: putfield      #5                  // Field serializerId_:I
      12: aload_0
      13: getstatic     #44                 // Field akka/protobuf/ByteString.EMPTY:Lakka/protobuf/ByteString;
      16: putfield      #4                  // Field messageManifest_:Lakka/protobuf/ByteString;
      19: aload_0
      20: lconst_0
      21: putfield      #3                  // Field seqNo_:J
      24: aload_0
      25: invokestatic  #45                 // Method akka/remote/ArteryControlFormats$UniqueAddress.getDefaultInstance:()Lakka/remote/ArteryControlFormats$UniqueAddress;
      28: putfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
      31: return

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoizedIsInitialized:B
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     21
      10: iload_1
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #46                 // Method hasMessage:()Z
      25: ifne          35
      28: aload_0
      29: iconst_0
      30: putfield      #11                 // Field memoizedIsInitialized:B
      33: iconst_0
      34: ireturn
      35: aload_0
      36: invokevirtual #47                 // Method hasSerializerId:()Z
      39: ifne          49
      42: aload_0
      43: iconst_0
      44: putfield      #11                 // Field memoizedIsInitialized:B
      47: iconst_0
      48: ireturn
      49: aload_0
      50: invokevirtual #48                 // Method hasSeqNo:()Z
      53: ifne          63
      56: aload_0
      57: iconst_0
      58: putfield      #11                 // Field memoizedIsInitialized:B
      61: iconst_0
      62: ireturn
      63: aload_0
      64: invokevirtual #49                 // Method hasAckReplyTo:()Z
      67: ifne          77
      70: aload_0
      71: iconst_0
      72: putfield      #11                 // Field memoizedIsInitialized:B
      75: iconst_0
      76: ireturn
      77: aload_0
      78: invokevirtual #50                 // Method getAckReplyTo:()Lakka/remote/ArteryControlFormats$UniqueAddress;
      81: invokevirtual #51                 // Method akka/remote/ArteryControlFormats$UniqueAddress.isInitialized:()Z
      84: ifne          94
      87: aload_0
      88: iconst_0
      89: putfield      #11                 // Field memoizedIsInitialized:B
      92: iconst_0
      93: ireturn
      94: aload_0
      95: iconst_1
      96: putfield      #11                 // Field memoizedIsInitialized:B
      99: iconst_1
     100: ireturn

  public void writeTo(akka.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getSerializedSize:()I
       4: pop
       5: aload_0
       6: getfield      #1                  // Field bitField0_:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     24
      15: aload_1
      16: iconst_1
      17: aload_0
      18: getfield      #6                  // Field message_:Lakka/protobuf/ByteString;
      21: invokevirtual #53                 // Method akka/protobuf/CodedOutputStream.writeBytes:(ILakka/protobuf/ByteString;)V
      24: aload_0
      25: getfield      #1                  // Field bitField0_:I
      28: iconst_2
      29: iand
      30: iconst_2
      31: if_icmpne     43
      34: aload_1
      35: iconst_2
      36: aload_0
      37: getfield      #5                  // Field serializerId_:I
      40: invokevirtual #54                 // Method akka/protobuf/CodedOutputStream.writeInt32:(II)V
      43: aload_0
      44: getfield      #1                  // Field bitField0_:I
      47: iconst_4
      48: iand
      49: iconst_4
      50: if_icmpne     62
      53: aload_1
      54: iconst_3
      55: aload_0
      56: getfield      #4                  // Field messageManifest_:Lakka/protobuf/ByteString;
      59: invokevirtual #53                 // Method akka/protobuf/CodedOutputStream.writeBytes:(ILakka/protobuf/ByteString;)V
      62: aload_0
      63: getfield      #1                  // Field bitField0_:I
      66: bipush        8
      68: iand
      69: bipush        8
      71: if_icmpne     83
      74: aload_1
      75: iconst_4
      76: aload_0
      77: getfield      #3                  // Field seqNo_:J
      80: invokevirtual #55                 // Method akka/protobuf/CodedOutputStream.writeUInt64:(IJ)V
      83: aload_0
      84: getfield      #1                  // Field bitField0_:I
      87: bipush        16
      89: iand
      90: bipush        16
      92: if_icmpne     104
      95: aload_1
      96: iconst_5
      97: aload_0
      98: getfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     101: invokevirtual #56                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
     104: aload_0
     105: invokevirtual #57                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     108: aload_1
     109: invokevirtual #58                 // Method akka/protobuf/UnknownFieldSet.writeTo:(Lakka/protobuf/CodedOutputStream;)V
     112: return

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field memoizedSerializedSize:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     12
      10: iload_1
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: getfield      #1                  // Field bitField0_:I
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     35
      24: iload_1
      25: iconst_1
      26: aload_0
      27: getfield      #6                  // Field message_:Lakka/protobuf/ByteString;
      30: invokestatic  #59                 // Method akka/protobuf/CodedOutputStream.computeBytesSize:(ILakka/protobuf/ByteString;)I
      33: iadd
      34: istore_1
      35: aload_0
      36: getfield      #1                  // Field bitField0_:I
      39: iconst_2
      40: iand
      41: iconst_2
      42: if_icmpne     56
      45: iload_1
      46: iconst_2
      47: aload_0
      48: getfield      #5                  // Field serializerId_:I
      51: invokestatic  #60                 // Method akka/protobuf/CodedOutputStream.computeInt32Size:(II)I
      54: iadd
      55: istore_1
      56: aload_0
      57: getfield      #1                  // Field bitField0_:I
      60: iconst_4
      61: iand
      62: iconst_4
      63: if_icmpne     77
      66: iload_1
      67: iconst_3
      68: aload_0
      69: getfield      #4                  // Field messageManifest_:Lakka/protobuf/ByteString;
      72: invokestatic  #59                 // Method akka/protobuf/CodedOutputStream.computeBytesSize:(ILakka/protobuf/ByteString;)I
      75: iadd
      76: istore_1
      77: aload_0
      78: getfield      #1                  // Field bitField0_:I
      81: bipush        8
      83: iand
      84: bipush        8
      86: if_icmpne     100
      89: iload_1
      90: iconst_4
      91: aload_0
      92: getfield      #3                  // Field seqNo_:J
      95: invokestatic  #61                 // Method akka/protobuf/CodedOutputStream.computeUInt64Size:(IJ)I
      98: iadd
      99: istore_1
     100: aload_0
     101: getfield      #1                  // Field bitField0_:I
     104: bipush        16
     106: iand
     107: bipush        16
     109: if_icmpne     123
     112: iload_1
     113: iconst_5
     114: aload_0
     115: getfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     118: invokestatic  #62                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
     121: iadd
     122: istore_1
     123: iload_1
     124: aload_0
     125: invokevirtual #57                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     128: invokevirtual #63                 // Method akka/protobuf/UnknownFieldSet.getSerializedSize:()I
     131: iadd
     132: istore_1
     133: aload_0
     134: iload_1
     135: putfield      #12                 // Field memoizedSerializedSize:I
     138: iload_1
     139: ireturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokespecial #64                 // Method akka/protobuf/GeneratedMessage.writeReplace:()Ljava/lang/Object;
       4: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(akka.protobuf.ByteString) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #65,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;)Ljava/lang/Object;
       9: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(akka.protobuf.ByteString, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #66,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(byte[]) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #67,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:([B)Ljava/lang/Object;
       9: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(byte[], akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #68,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:([BLakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #69,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #70,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseDelimitedFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #71,  2           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseDelimitedFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #72,  3           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(akka.protobuf.CodedInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #73,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;)Ljava/lang/Object;
       9: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope parseFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #74,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope$Builder newBuilder();
    Code:
       0: invokestatic  #75                 // Method akka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder.access$5500:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       3: areturn

  public akka.remote.ArteryControlFormats$SystemMessageEnvelope$Builder newBuilderForType();
    Code:
       0: invokestatic  #76                 // Method newBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       3: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageEnvelope$Builder newBuilder(akka.remote.ArteryControlFormats$SystemMessageEnvelope);
    Code:
       0: invokestatic  #76                 // Method newBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       3: aload_0
       4: invokevirtual #77                 // Method akka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder.mergeFrom:(Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;)Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       7: areturn

  public akka.remote.ArteryControlFormats$SystemMessageEnvelope$Builder toBuilder();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method newBuilder:(Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;)Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       4: areturn

  protected akka.remote.ArteryControlFormats$SystemMessageEnvelope$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: new           #41                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #79                 // Method akka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;Lakka/remote/ArteryControlFormats$1;)V
       9: astore_2
      10: aload_2
      11: areturn

  protected akka.protobuf.Message$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method newBuilderForType:(Lakka/protobuf/GeneratedMessage$BuilderParent;)Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       5: areturn

  public akka.protobuf.Message$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method toBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       4: areturn

  public akka.protobuf.Message$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method newBuilderForType:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method toBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method newBuilderForType:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getDefaultInstanceForType:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getDefaultInstanceForType:()Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;
       4: areturn

  akka.remote.ArteryControlFormats$SystemMessageEnvelope(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite, akka.remote.ArteryControlFormats$1) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method "<init>":(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)V
       6: return

  static boolean access$5700();
    Code:
       0: getstatic     #8                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  akka.remote.ArteryControlFormats$SystemMessageEnvelope(akka.protobuf.GeneratedMessage$Builder, akka.remote.ArteryControlFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: return

  static akka.protobuf.ByteString access$5902(akka.remote.ArteryControlFormats$SystemMessageEnvelope, akka.protobuf.ByteString);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field message_:Lakka/protobuf/ByteString;
       6: areturn

  static int access$6002(akka.remote.ArteryControlFormats$SystemMessageEnvelope, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field serializerId_:I
       6: ireturn

  static akka.protobuf.ByteString access$6102(akka.remote.ArteryControlFormats$SystemMessageEnvelope, akka.protobuf.ByteString);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field messageManifest_:Lakka/protobuf/ByteString;
       6: areturn

  static long access$6202(akka.remote.ArteryControlFormats$SystemMessageEnvelope, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #3                  // Field seqNo_:J
       6: lreturn

  static akka.remote.ArteryControlFormats$UniqueAddress access$6302(akka.remote.ArteryControlFormats$SystemMessageEnvelope, akka.remote.ArteryControlFormats$UniqueAddress);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field ackReplyTo_:Lakka/remote/ArteryControlFormats$UniqueAddress;
       6: areturn

  static int access$6402(akka.remote.ArteryControlFormats$SystemMessageEnvelope, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field bitField0_:I
       6: ireturn

  static {};
    Code:
       0: new           #84                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope$1
       3: dup
       4: invokespecial #85                 // Method akka/remote/ArteryControlFormats$SystemMessageEnvelope$1."<init>":()V
       7: putstatic     #43                 // Field PARSER:Lakka/protobuf/Parser;
      10: new           #40                 // class akka/remote/ArteryControlFormats$SystemMessageEnvelope
      13: dup
      14: iconst_1
      15: invokespecial #86                 // Method "<init>":(Z)V
      18: putstatic     #17                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;
      21: getstatic     #17                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageEnvelope;
      24: invokespecial #18                 // Method initFields:()V
      27: return
}
