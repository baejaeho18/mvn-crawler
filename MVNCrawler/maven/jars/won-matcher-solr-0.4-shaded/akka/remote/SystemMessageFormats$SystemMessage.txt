Compiled from "SystemMessageFormats.java"
public final class akka.remote.SystemMessageFormats$SystemMessage extends akka.protobuf.GeneratedMessage implements akka.remote.SystemMessageFormats$SystemMessageOrBuilder {
  private static final akka.remote.SystemMessageFormats$SystemMessage defaultInstance;

  private final akka.protobuf.UnknownFieldSet unknownFields;

  public static akka.protobuf.Parser<akka.remote.SystemMessageFormats$SystemMessage> PARSER;

  private int bitField0_;

  public static final int TYPE_FIELD_NUMBER;

  private akka.remote.SystemMessageFormats$SystemMessage$Type type_;

  public static final int WATCHDATA_FIELD_NUMBER;

  private akka.remote.SystemMessageFormats$WatchData watchData_;

  public static final int CAUSEDATA_FIELD_NUMBER;

  private akka.remote.ContainerFormats$Payload causeData_;

  public static final int SUPERVISEDATA_FIELD_NUMBER;

  private akka.remote.SystemMessageFormats$SuperviseData superviseData_;

  public static final int FAILEDDATA_FIELD_NUMBER;

  private akka.remote.SystemMessageFormats$FailedData failedData_;

  public static final int DWNOTIFICATIONDATA_FIELD_NUMBER;

  private akka.remote.SystemMessageFormats$DeathWatchNotificationData dwNotificationData_;

  private byte memoizedIsInitialized;

  private int memoizedSerializedSize;

  private static final long serialVersionUID;

  private akka.remote.SystemMessageFormats$SystemMessage(akka.protobuf.GeneratedMessage$Builder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method akka/protobuf/GeneratedMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #12                 // Field memoizedIsInitialized:B
      10: aload_0
      11: iconst_m1
      12: putfield      #13                 // Field memoizedSerializedSize:I
      15: aload_0
      16: aload_1
      17: invokevirtual #14                 // Method akka/protobuf/GeneratedMessage$Builder.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      20: putfield      #15                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      23: return

  private akka.remote.SystemMessageFormats$SystemMessage(boolean);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #12                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #13                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokestatic  #17                 // Method akka/protobuf/UnknownFieldSet.getDefaultInstance:()Lakka/protobuf/UnknownFieldSet;
      18: putfield      #15                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      21: return

  public static akka.remote.SystemMessageFormats$SystemMessage getDefaultInstance();
    Code:
       0: getstatic     #18                 // Field defaultInstance:Lakka/remote/SystemMessageFormats$SystemMessage;
       3: areturn

  public akka.remote.SystemMessageFormats$SystemMessage getDefaultInstanceForType();
    Code:
       0: getstatic     #18                 // Field defaultInstance:Lakka/remote/SystemMessageFormats$SystemMessage;
       3: areturn

  public final akka.protobuf.UnknownFieldSet getUnknownFields();
    Code:
       0: aload_0
       1: getfield      #15                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
       4: areturn

  private akka.remote.SystemMessageFormats$SystemMessage(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #12                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #13                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokespecial #19                 // Method initFields:()V
      18: iconst_0
      19: istore_3
      20: invokestatic  #20                 // Method akka/protobuf/UnknownFieldSet.newBuilder:()Lakka/protobuf/UnknownFieldSet$Builder;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: ifne          564
      33: aload_1
      34: invokevirtual #21                 // Method akka/protobuf/CodedInputStream.readTag:()I
      37: istore        6
      39: iload         6
      41: lookupswitch  { // 7
                     0: 108
                     8: 133
                    18: 182
                    26: 256
                    42: 330
                    50: 407
                    58: 484
               default: 114
          }
     108: iconst_1
     109: istore        5
     111: goto          561
     114: aload_0
     115: aload_1
     116: aload         4
     118: aload_2
     119: iload         6
     121: invokevirtual #22                 // Method parseUnknownField:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/UnknownFieldSet$Builder;Lakka/protobuf/ExtensionRegistryLite;I)Z
     124: ifne          561
     127: iconst_1
     128: istore        5
     130: goto          561
     133: aload_1
     134: invokevirtual #23                 // Method akka/protobuf/CodedInputStream.readEnum:()I
     137: istore        7
     139: iload         7
     141: invokestatic  #24                 // Method akka/remote/SystemMessageFormats$SystemMessage$Type.valueOf:(I)Lakka/remote/SystemMessageFormats$SystemMessage$Type;
     144: astore        8
     146: aload         8
     148: ifnonnull     163
     151: aload         4
     153: iconst_1
     154: iload         7
     156: invokevirtual #25                 // Method akka/protobuf/UnknownFieldSet$Builder.mergeVarintField:(II)Lakka/protobuf/UnknownFieldSet$Builder;
     159: pop
     160: goto          561
     163: aload_0
     164: dup
     165: getfield      #1                  // Field bitField0_:I
     168: iconst_1
     169: ior
     170: putfield      #1                  // Field bitField0_:I
     173: aload_0
     174: aload         8
     176: putfield      #7                  // Field type_:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
     179: goto          561
     182: aconst_null
     183: astore        7
     185: aload_0
     186: getfield      #1                  // Field bitField0_:I
     189: iconst_2
     190: iand
     191: iconst_2
     192: if_icmpne     204
     195: aload_0
     196: getfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
     199: invokevirtual #26                 // Method akka/remote/SystemMessageFormats$WatchData.toBuilder:()Lakka/remote/SystemMessageFormats$WatchData$Builder;
     202: astore        7
     204: aload_0
     205: aload_1
     206: getstatic     #27                 // Field akka/remote/SystemMessageFormats$WatchData.PARSER:Lakka/protobuf/Parser;
     209: aload_2
     210: invokevirtual #28                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     213: checkcast     #29                 // class akka/remote/SystemMessageFormats$WatchData
     216: putfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
     219: aload         7
     221: ifnull        243
     224: aload         7
     226: aload_0
     227: getfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
     230: invokevirtual #30                 // Method akka/remote/SystemMessageFormats$WatchData$Builder.mergeFrom:(Lakka/remote/SystemMessageFormats$WatchData;)Lakka/remote/SystemMessageFormats$WatchData$Builder;
     233: pop
     234: aload_0
     235: aload         7
     237: invokevirtual #31                 // Method akka/remote/SystemMessageFormats$WatchData$Builder.buildPartial:()Lakka/remote/SystemMessageFormats$WatchData;
     240: putfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
     243: aload_0
     244: dup
     245: getfield      #1                  // Field bitField0_:I
     248: iconst_2
     249: ior
     250: putfield      #1                  // Field bitField0_:I
     253: goto          561
     256: aconst_null
     257: astore        7
     259: aload_0
     260: getfield      #1                  // Field bitField0_:I
     263: iconst_4
     264: iand
     265: iconst_4
     266: if_icmpne     278
     269: aload_0
     270: getfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
     273: invokevirtual #32                 // Method akka/remote/ContainerFormats$Payload.toBuilder:()Lakka/remote/ContainerFormats$Payload$Builder;
     276: astore        7
     278: aload_0
     279: aload_1
     280: getstatic     #33                 // Field akka/remote/ContainerFormats$Payload.PARSER:Lakka/protobuf/Parser;
     283: aload_2
     284: invokevirtual #28                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     287: checkcast     #34                 // class akka/remote/ContainerFormats$Payload
     290: putfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
     293: aload         7
     295: ifnull        317
     298: aload         7
     300: aload_0
     301: getfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
     304: invokevirtual #35                 // Method akka/remote/ContainerFormats$Payload$Builder.mergeFrom:(Lakka/remote/ContainerFormats$Payload;)Lakka/remote/ContainerFormats$Payload$Builder;
     307: pop
     308: aload_0
     309: aload         7
     311: invokevirtual #36                 // Method akka/remote/ContainerFormats$Payload$Builder.buildPartial:()Lakka/remote/ContainerFormats$Payload;
     314: putfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
     317: aload_0
     318: dup
     319: getfield      #1                  // Field bitField0_:I
     322: iconst_4
     323: ior
     324: putfield      #1                  // Field bitField0_:I
     327: goto          561
     330: aconst_null
     331: astore        7
     333: aload_0
     334: getfield      #1                  // Field bitField0_:I
     337: bipush        8
     339: iand
     340: bipush        8
     342: if_icmpne     354
     345: aload_0
     346: getfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
     349: invokevirtual #37                 // Method akka/remote/SystemMessageFormats$SuperviseData.toBuilder:()Lakka/remote/SystemMessageFormats$SuperviseData$Builder;
     352: astore        7
     354: aload_0
     355: aload_1
     356: getstatic     #38                 // Field akka/remote/SystemMessageFormats$SuperviseData.PARSER:Lakka/protobuf/Parser;
     359: aload_2
     360: invokevirtual #28                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     363: checkcast     #39                 // class akka/remote/SystemMessageFormats$SuperviseData
     366: putfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
     369: aload         7
     371: ifnull        393
     374: aload         7
     376: aload_0
     377: getfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
     380: invokevirtual #40                 // Method akka/remote/SystemMessageFormats$SuperviseData$Builder.mergeFrom:(Lakka/remote/SystemMessageFormats$SuperviseData;)Lakka/remote/SystemMessageFormats$SuperviseData$Builder;
     383: pop
     384: aload_0
     385: aload         7
     387: invokevirtual #41                 // Method akka/remote/SystemMessageFormats$SuperviseData$Builder.buildPartial:()Lakka/remote/SystemMessageFormats$SuperviseData;
     390: putfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
     393: aload_0
     394: dup
     395: getfield      #1                  // Field bitField0_:I
     398: bipush        8
     400: ior
     401: putfield      #1                  // Field bitField0_:I
     404: goto          561
     407: aconst_null
     408: astore        7
     410: aload_0
     411: getfield      #1                  // Field bitField0_:I
     414: bipush        16
     416: iand
     417: bipush        16
     419: if_icmpne     431
     422: aload_0
     423: getfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
     426: invokevirtual #42                 // Method akka/remote/SystemMessageFormats$FailedData.toBuilder:()Lakka/remote/SystemMessageFormats$FailedData$Builder;
     429: astore        7
     431: aload_0
     432: aload_1
     433: getstatic     #43                 // Field akka/remote/SystemMessageFormats$FailedData.PARSER:Lakka/protobuf/Parser;
     436: aload_2
     437: invokevirtual #28                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     440: checkcast     #44                 // class akka/remote/SystemMessageFormats$FailedData
     443: putfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
     446: aload         7
     448: ifnull        470
     451: aload         7
     453: aload_0
     454: getfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
     457: invokevirtual #45                 // Method akka/remote/SystemMessageFormats$FailedData$Builder.mergeFrom:(Lakka/remote/SystemMessageFormats$FailedData;)Lakka/remote/SystemMessageFormats$FailedData$Builder;
     460: pop
     461: aload_0
     462: aload         7
     464: invokevirtual #46                 // Method akka/remote/SystemMessageFormats$FailedData$Builder.buildPartial:()Lakka/remote/SystemMessageFormats$FailedData;
     467: putfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
     470: aload_0
     471: dup
     472: getfield      #1                  // Field bitField0_:I
     475: bipush        16
     477: ior
     478: putfield      #1                  // Field bitField0_:I
     481: goto          561
     484: aconst_null
     485: astore        7
     487: aload_0
     488: getfield      #1                  // Field bitField0_:I
     491: bipush        32
     493: iand
     494: bipush        32
     496: if_icmpne     508
     499: aload_0
     500: getfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     503: invokevirtual #47                 // Method akka/remote/SystemMessageFormats$DeathWatchNotificationData.toBuilder:()Lakka/remote/SystemMessageFormats$DeathWatchNotificationData$Builder;
     506: astore        7
     508: aload_0
     509: aload_1
     510: getstatic     #48                 // Field akka/remote/SystemMessageFormats$DeathWatchNotificationData.PARSER:Lakka/protobuf/Parser;
     513: aload_2
     514: invokevirtual #28                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     517: checkcast     #49                 // class akka/remote/SystemMessageFormats$DeathWatchNotificationData
     520: putfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     523: aload         7
     525: ifnull        547
     528: aload         7
     530: aload_0
     531: getfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     534: invokevirtual #50                 // Method akka/remote/SystemMessageFormats$DeathWatchNotificationData$Builder.mergeFrom:(Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;)Lakka/remote/SystemMessageFormats$DeathWatchNotificationData$Builder;
     537: pop
     538: aload_0
     539: aload         7
     541: invokevirtual #51                 // Method akka/remote/SystemMessageFormats$DeathWatchNotificationData$Builder.buildPartial:()Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     544: putfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     547: aload_0
     548: dup
     549: getfield      #1                  // Field bitField0_:I
     552: bipush        32
     554: ior
     555: putfield      #1                  // Field bitField0_:I
     558: goto          561
     561: goto          28
     564: aload_0
     565: aload         4
     567: invokevirtual #52                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     570: putfield      #15                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     573: aload_0
     574: invokevirtual #53                 // Method makeExtensionsImmutable:()V
     577: goto          626
     580: astore        5
     582: aload         5
     584: aload_0
     585: invokevirtual #55                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     588: athrow
     589: astore        5
     591: new           #54                 // class akka/protobuf/InvalidProtocolBufferException
     594: dup
     595: aload         5
     597: invokevirtual #57                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     600: invokespecial #58                 // Method akka/protobuf/InvalidProtocolBufferException."<init>":(Ljava/lang/String;)V
     603: aload_0
     604: invokevirtual #55                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     607: athrow
     608: astore        9
     610: aload_0
     611: aload         4
     613: invokevirtual #52                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     616: putfield      #15                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     619: aload_0
     620: invokevirtual #53                 // Method makeExtensionsImmutable:()V
     623: aload         9
     625: athrow
     626: return
    Exception table:
       from    to  target type
          25   564   580   Class akka/protobuf/InvalidProtocolBufferException
          25   564   589   Class java/io/IOException
          25   564   608   any
         580   610   608   any

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #59                 // Method akka/remote/SystemMessageFormats.access$000:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #60                 // Method akka/remote/SystemMessageFormats.access$100:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #61                 // class akka/remote/SystemMessageFormats$SystemMessage
       5: ldc           #62                 // class akka/remote/SystemMessageFormats$SystemMessage$Builder
       7: invokevirtual #63                 // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  public akka.protobuf.Parser<akka.remote.SystemMessageFormats$SystemMessage> getParserForType();
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: areturn

  public boolean hasType();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.SystemMessageFormats$SystemMessage$Type getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type_:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
       4: areturn

  public boolean hasWatchData();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.SystemMessageFormats$WatchData getWatchData();
    Code:
       0: aload_0
       1: getfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
       4: areturn

  public akka.remote.SystemMessageFormats$WatchDataOrBuilder getWatchDataOrBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
       4: areturn

  public boolean hasCauseData();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_4
       5: iand
       6: iconst_4
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.ContainerFormats$Payload getCauseData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
       4: areturn

  public akka.remote.ContainerFormats$PayloadOrBuilder getCauseDataOrBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
       4: areturn

  public boolean hasSuperviseData();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: bipush        8
       6: iand
       7: bipush        8
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public akka.remote.SystemMessageFormats$SuperviseData getSuperviseData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
       4: areturn

  public akka.remote.SystemMessageFormats$SuperviseDataOrBuilder getSuperviseDataOrBuilder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
       4: areturn

  public boolean hasFailedData();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: bipush        16
       6: iand
       7: bipush        16
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public akka.remote.SystemMessageFormats$FailedData getFailedData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
       4: areturn

  public akka.remote.SystemMessageFormats$FailedDataOrBuilder getFailedDataOrBuilder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
       4: areturn

  public boolean hasDwNotificationData();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: bipush        32
       6: iand
       7: bipush        32
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public akka.remote.SystemMessageFormats$DeathWatchNotificationData getDwNotificationData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
       4: areturn

  public akka.remote.SystemMessageFormats$DeathWatchNotificationDataOrBuilder getDwNotificationDataOrBuilder();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
       4: areturn

  private void initFields();
    Code:
       0: aload_0
       1: getstatic     #65                 // Field akka/remote/SystemMessageFormats$SystemMessage$Type.CREATE:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
       4: putfield      #7                  // Field type_:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
       7: aload_0
       8: invokestatic  #66                 // Method akka/remote/SystemMessageFormats$WatchData.getDefaultInstance:()Lakka/remote/SystemMessageFormats$WatchData;
      11: putfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
      14: aload_0
      15: invokestatic  #67                 // Method akka/remote/ContainerFormats$Payload.getDefaultInstance:()Lakka/remote/ContainerFormats$Payload;
      18: putfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
      21: aload_0
      22: invokestatic  #68                 // Method akka/remote/SystemMessageFormats$SuperviseData.getDefaultInstance:()Lakka/remote/SystemMessageFormats$SuperviseData;
      25: putfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
      28: aload_0
      29: invokestatic  #69                 // Method akka/remote/SystemMessageFormats$FailedData.getDefaultInstance:()Lakka/remote/SystemMessageFormats$FailedData;
      32: putfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
      35: aload_0
      36: invokestatic  #70                 // Method akka/remote/SystemMessageFormats$DeathWatchNotificationData.getDefaultInstance:()Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
      39: putfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
      42: return

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #12                 // Field memoizedIsInitialized:B
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     21
      10: iload_1
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #71                 // Method hasType:()Z
      25: ifne          35
      28: aload_0
      29: iconst_0
      30: putfield      #12                 // Field memoizedIsInitialized:B
      33: iconst_0
      34: ireturn
      35: aload_0
      36: invokevirtual #72                 // Method hasWatchData:()Z
      39: ifeq          59
      42: aload_0
      43: invokevirtual #73                 // Method getWatchData:()Lakka/remote/SystemMessageFormats$WatchData;
      46: invokevirtual #74                 // Method akka/remote/SystemMessageFormats$WatchData.isInitialized:()Z
      49: ifne          59
      52: aload_0
      53: iconst_0
      54: putfield      #12                 // Field memoizedIsInitialized:B
      57: iconst_0
      58: ireturn
      59: aload_0
      60: invokevirtual #75                 // Method hasCauseData:()Z
      63: ifeq          83
      66: aload_0
      67: invokevirtual #76                 // Method getCauseData:()Lakka/remote/ContainerFormats$Payload;
      70: invokevirtual #77                 // Method akka/remote/ContainerFormats$Payload.isInitialized:()Z
      73: ifne          83
      76: aload_0
      77: iconst_0
      78: putfield      #12                 // Field memoizedIsInitialized:B
      81: iconst_0
      82: ireturn
      83: aload_0
      84: invokevirtual #78                 // Method hasSuperviseData:()Z
      87: ifeq          107
      90: aload_0
      91: invokevirtual #79                 // Method getSuperviseData:()Lakka/remote/SystemMessageFormats$SuperviseData;
      94: invokevirtual #80                 // Method akka/remote/SystemMessageFormats$SuperviseData.isInitialized:()Z
      97: ifne          107
     100: aload_0
     101: iconst_0
     102: putfield      #12                 // Field memoizedIsInitialized:B
     105: iconst_0
     106: ireturn
     107: aload_0
     108: invokevirtual #81                 // Method hasFailedData:()Z
     111: ifeq          131
     114: aload_0
     115: invokevirtual #82                 // Method getFailedData:()Lakka/remote/SystemMessageFormats$FailedData;
     118: invokevirtual #83                 // Method akka/remote/SystemMessageFormats$FailedData.isInitialized:()Z
     121: ifne          131
     124: aload_0
     125: iconst_0
     126: putfield      #12                 // Field memoizedIsInitialized:B
     129: iconst_0
     130: ireturn
     131: aload_0
     132: invokevirtual #84                 // Method hasDwNotificationData:()Z
     135: ifeq          155
     138: aload_0
     139: invokevirtual #85                 // Method getDwNotificationData:()Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     142: invokevirtual #86                 // Method akka/remote/SystemMessageFormats$DeathWatchNotificationData.isInitialized:()Z
     145: ifne          155
     148: aload_0
     149: iconst_0
     150: putfield      #12                 // Field memoizedIsInitialized:B
     153: iconst_0
     154: ireturn
     155: aload_0
     156: iconst_1
     157: putfield      #12                 // Field memoizedIsInitialized:B
     160: iconst_1
     161: ireturn

  public void writeTo(akka.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getSerializedSize:()I
       4: pop
       5: aload_0
       6: getfield      #1                  // Field bitField0_:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     27
      15: aload_1
      16: iconst_1
      17: aload_0
      18: getfield      #7                  // Field type_:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
      21: invokevirtual #88                 // Method akka/remote/SystemMessageFormats$SystemMessage$Type.getNumber:()I
      24: invokevirtual #89                 // Method akka/protobuf/CodedOutputStream.writeEnum:(II)V
      27: aload_0
      28: getfield      #1                  // Field bitField0_:I
      31: iconst_2
      32: iand
      33: iconst_2
      34: if_icmpne     46
      37: aload_1
      38: iconst_2
      39: aload_0
      40: getfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
      43: invokevirtual #90                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      46: aload_0
      47: getfield      #1                  // Field bitField0_:I
      50: iconst_4
      51: iand
      52: iconst_4
      53: if_icmpne     65
      56: aload_1
      57: iconst_3
      58: aload_0
      59: getfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
      62: invokevirtual #90                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      65: aload_0
      66: getfield      #1                  // Field bitField0_:I
      69: bipush        8
      71: iand
      72: bipush        8
      74: if_icmpne     86
      77: aload_1
      78: iconst_5
      79: aload_0
      80: getfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
      83: invokevirtual #90                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      86: aload_0
      87: getfield      #1                  // Field bitField0_:I
      90: bipush        16
      92: iand
      93: bipush        16
      95: if_icmpne     108
      98: aload_1
      99: bipush        6
     101: aload_0
     102: getfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
     105: invokevirtual #90                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
     108: aload_0
     109: getfield      #1                  // Field bitField0_:I
     112: bipush        32
     114: iand
     115: bipush        32
     117: if_icmpne     130
     120: aload_1
     121: bipush        7
     123: aload_0
     124: getfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     127: invokevirtual #90                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
     130: aload_0
     131: invokevirtual #91                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     134: aload_1
     135: invokevirtual #92                 // Method akka/protobuf/UnknownFieldSet.writeTo:(Lakka/protobuf/CodedOutputStream;)V
     138: return

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field memoizedSerializedSize:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     12
      10: iload_1
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: getfield      #1                  // Field bitField0_:I
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     38
      24: iload_1
      25: iconst_1
      26: aload_0
      27: getfield      #7                  // Field type_:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
      30: invokevirtual #88                 // Method akka/remote/SystemMessageFormats$SystemMessage$Type.getNumber:()I
      33: invokestatic  #93                 // Method akka/protobuf/CodedOutputStream.computeEnumSize:(II)I
      36: iadd
      37: istore_1
      38: aload_0
      39: getfield      #1                  // Field bitField0_:I
      42: iconst_2
      43: iand
      44: iconst_2
      45: if_icmpne     59
      48: iload_1
      49: iconst_2
      50: aload_0
      51: getfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
      54: invokestatic  #94                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      57: iadd
      58: istore_1
      59: aload_0
      60: getfield      #1                  // Field bitField0_:I
      63: iconst_4
      64: iand
      65: iconst_4
      66: if_icmpne     80
      69: iload_1
      70: iconst_3
      71: aload_0
      72: getfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
      75: invokestatic  #94                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      78: iadd
      79: istore_1
      80: aload_0
      81: getfield      #1                  // Field bitField0_:I
      84: bipush        8
      86: iand
      87: bipush        8
      89: if_icmpne     103
      92: iload_1
      93: iconst_5
      94: aload_0
      95: getfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
      98: invokestatic  #94                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
     101: iadd
     102: istore_1
     103: aload_0
     104: getfield      #1                  // Field bitField0_:I
     107: bipush        16
     109: iand
     110: bipush        16
     112: if_icmpne     127
     115: iload_1
     116: bipush        6
     118: aload_0
     119: getfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
     122: invokestatic  #94                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
     125: iadd
     126: istore_1
     127: aload_0
     128: getfield      #1                  // Field bitField0_:I
     131: bipush        32
     133: iand
     134: bipush        32
     136: if_icmpne     151
     139: iload_1
     140: bipush        7
     142: aload_0
     143: getfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
     146: invokestatic  #94                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
     149: iadd
     150: istore_1
     151: iload_1
     152: aload_0
     153: invokevirtual #91                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     156: invokevirtual #95                 // Method akka/protobuf/UnknownFieldSet.getSerializedSize:()I
     159: iadd
     160: istore_1
     161: aload_0
     162: iload_1
     163: putfield      #13                 // Field memoizedSerializedSize:I
     166: iload_1
     167: ireturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokespecial #96                 // Method akka/protobuf/GeneratedMessage.writeReplace:()Ljava/lang/Object;
       4: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(akka.protobuf.ByteString) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #97,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;)Ljava/lang/Object;
       9: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      12: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(akka.protobuf.ByteString, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #98,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      13: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(byte[]) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #99,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:([B)Ljava/lang/Object;
       9: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      12: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(byte[], akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #100,  3          // InterfaceMethod akka/protobuf/Parser.parseFrom:([BLakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      13: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #101,  2          // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      12: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #102,  3          // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      13: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseDelimitedFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #103,  2          // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      12: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseDelimitedFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #104,  3          // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      13: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(akka.protobuf.CodedInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #105,  2          // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;)Ljava/lang/Object;
       9: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      12: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage parseFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #106,  3          // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      13: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage$Builder newBuilder();
    Code:
       0: invokestatic  #107                // Method akka/remote/SystemMessageFormats$SystemMessage$Builder.access$300:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       3: areturn

  public akka.remote.SystemMessageFormats$SystemMessage$Builder newBuilderForType();
    Code:
       0: invokestatic  #108                // Method newBuilder:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       3: areturn

  public static akka.remote.SystemMessageFormats$SystemMessage$Builder newBuilder(akka.remote.SystemMessageFormats$SystemMessage);
    Code:
       0: invokestatic  #108                // Method newBuilder:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       3: aload_0
       4: invokevirtual #109                // Method akka/remote/SystemMessageFormats$SystemMessage$Builder.mergeFrom:(Lakka/remote/SystemMessageFormats$SystemMessage;)Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       7: areturn

  public akka.remote.SystemMessageFormats$SystemMessage$Builder toBuilder();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method newBuilder:(Lakka/remote/SystemMessageFormats$SystemMessage;)Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       4: areturn

  protected akka.remote.SystemMessageFormats$SystemMessage$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: new           #62                 // class akka/remote/SystemMessageFormats$SystemMessage$Builder
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #111                // Method akka/remote/SystemMessageFormats$SystemMessage$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;Lakka/remote/SystemMessageFormats$1;)V
       9: astore_2
      10: aload_2
      11: areturn

  protected akka.protobuf.Message$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #112                // Method newBuilderForType:(Lakka/protobuf/GeneratedMessage$BuilderParent;)Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       5: areturn

  public akka.protobuf.Message$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method toBuilder:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       4: areturn

  public akka.protobuf.Message$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method newBuilderForType:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method toBuilder:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method newBuilderForType:()Lakka/remote/SystemMessageFormats$SystemMessage$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method getDefaultInstanceForType:()Lakka/remote/SystemMessageFormats$SystemMessage;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method getDefaultInstanceForType:()Lakka/remote/SystemMessageFormats$SystemMessage;
       4: areturn

  akka.remote.SystemMessageFormats$SystemMessage(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite, akka.remote.SystemMessageFormats$1) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method "<init>":(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)V
       6: return

  static boolean access$500();
    Code:
       0: getstatic     #9                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  akka.remote.SystemMessageFormats$SystemMessage(akka.protobuf.GeneratedMessage$Builder, akka.remote.SystemMessageFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: return

  static akka.remote.SystemMessageFormats$SystemMessage$Type access$702(akka.remote.SystemMessageFormats$SystemMessage, akka.remote.SystemMessageFormats$SystemMessage$Type);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field type_:Lakka/remote/SystemMessageFormats$SystemMessage$Type;
       6: areturn

  static akka.remote.SystemMessageFormats$WatchData access$802(akka.remote.SystemMessageFormats$SystemMessage, akka.remote.SystemMessageFormats$WatchData);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field watchData_:Lakka/remote/SystemMessageFormats$WatchData;
       6: areturn

  static akka.remote.ContainerFormats$Payload access$902(akka.remote.SystemMessageFormats$SystemMessage, akka.remote.ContainerFormats$Payload);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field causeData_:Lakka/remote/ContainerFormats$Payload;
       6: areturn

  static akka.remote.SystemMessageFormats$SuperviseData access$1002(akka.remote.SystemMessageFormats$SystemMessage, akka.remote.SystemMessageFormats$SuperviseData);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field superviseData_:Lakka/remote/SystemMessageFormats$SuperviseData;
       6: areturn

  static akka.remote.SystemMessageFormats$FailedData access$1102(akka.remote.SystemMessageFormats$SystemMessage, akka.remote.SystemMessageFormats$FailedData);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field failedData_:Lakka/remote/SystemMessageFormats$FailedData;
       6: areturn

  static akka.remote.SystemMessageFormats$DeathWatchNotificationData access$1202(akka.remote.SystemMessageFormats$SystemMessage, akka.remote.SystemMessageFormats$DeathWatchNotificationData);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field dwNotificationData_:Lakka/remote/SystemMessageFormats$DeathWatchNotificationData;
       6: areturn

  static int access$1302(akka.remote.SystemMessageFormats$SystemMessage, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field bitField0_:I
       6: ireturn

  static {};
    Code:
       0: new           #116                // class akka/remote/SystemMessageFormats$SystemMessage$1
       3: dup
       4: invokespecial #117                // Method akka/remote/SystemMessageFormats$SystemMessage$1."<init>":()V
       7: putstatic     #64                 // Field PARSER:Lakka/protobuf/Parser;
      10: new           #61                 // class akka/remote/SystemMessageFormats$SystemMessage
      13: dup
      14: iconst_1
      15: invokespecial #118                // Method "<init>":(Z)V
      18: putstatic     #18                 // Field defaultInstance:Lakka/remote/SystemMessageFormats$SystemMessage;
      21: getstatic     #18                 // Field defaultInstance:Lakka/remote/SystemMessageFormats$SystemMessage;
      24: invokespecial #19                 // Method initFields:()V
      27: return
}
