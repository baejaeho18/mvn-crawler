Compiled from "AbstractTransportAdapter.scala"
public abstract class akka.remote.transport.AbstractTransportAdapter implements akka.remote.transport.Transport,akka.remote.transport.SchemeAugmenter {
  private final akka.remote.transport.Transport wrappedTransport;

  private final scala.concurrent.ExecutionContext ec;

  public java.lang.String augmentScheme(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method akka/remote/transport/SchemeAugmenter$class.augmentScheme:(Lakka/remote/transport/SchemeAugmenter;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public akka.actor.Address augmentScheme(akka.actor.Address);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method akka/remote/transport/SchemeAugmenter$class.augmentScheme:(Lakka/remote/transport/SchemeAugmenter;Lakka/actor/Address;)Lakka/actor/Address;
       5: areturn

  public java.lang.String removeScheme(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // Method akka/remote/transport/SchemeAugmenter$class.removeScheme:(Lakka/remote/transport/SchemeAugmenter;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public akka.actor.Address removeScheme(akka.actor.Address);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method akka/remote/transport/SchemeAugmenter$class.removeScheme:(Lakka/remote/transport/SchemeAugmenter;Lakka/actor/Address;)Lakka/actor/Address;
       5: areturn

  public scala.concurrent.Future<java.lang.Object> managementCommand(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // Method akka/remote/transport/Transport$class.managementCommand:(Lakka/remote/transport/Transport;Ljava/lang/Object;)Lscala/concurrent/Future;
       5: areturn

  public akka.remote.transport.Transport wrappedTransport();
    Code:
       0: aload_0
       1: getfield      #51                 // Field wrappedTransport:Lakka/remote/transport/Transport;
       4: areturn

  public scala.concurrent.ExecutionContext ec();
    Code:
       0: aload_0
       1: getfield      #54                 // Field ec:Lscala/concurrent/ExecutionContext;
       4: areturn

  public abstract int maximumOverhead();

  public abstract scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener> interceptListen(akka.actor.Address, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>);

  public abstract void interceptAssociate(akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.AssociationHandle>);

  public java.lang.String schemeIdentifier();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #64                 // Method wrappedTransport:()Lakka/remote/transport/Transport;
       5: invokeinterface #66,  1           // InterfaceMethod akka/remote/transport/Transport.schemeIdentifier:()Ljava/lang/String;
      10: invokevirtual #68                 // Method augmentScheme:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  public boolean isResponsibleFor(akka.actor.Address);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method wrappedTransport:()Lakka/remote/transport/Transport;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod akka/remote/transport/Transport.isResponsibleFor:(Lakka/actor/Address;)Z
      10: ireturn

  public int maximumPayloadBytes();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method wrappedTransport:()Lakka/remote/transport/Transport;
       4: invokeinterface #75,  1           // InterfaceMethod akka/remote/transport/Transport.maximumPayloadBytes:()I
       9: aload_0
      10: invokevirtual #77                 // Method maximumOverhead:()I
      13: isub
      14: ireturn

  public scala.concurrent.Future<scala.Tuple2<akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.Transport$AssociationEventListener>>> listen();
    Code:
       0: getstatic     #85                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #89                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore_1
       7: aload_0
       8: invokevirtual #64                 // Method wrappedTransport:()Lakka/remote/transport/Transport;
      11: invokeinterface #91,  1           // InterfaceMethod akka/remote/transport/Transport.listen:()Lscala/concurrent/Future;
      16: new           #93                 // class akka/remote/transport/AbstractTransportAdapter$$anonfun$listen$1
      19: dup
      20: aload_0
      21: invokespecial #97                 // Method akka/remote/transport/AbstractTransportAdapter$$anonfun$listen$1."<init>":(Lakka/remote/transport/AbstractTransportAdapter;)V
      24: aload_0
      25: invokevirtual #99                 // Method ec:()Lscala/concurrent/ExecutionContext;
      28: invokeinterface #105,  3          // InterfaceMethod scala/concurrent/Future.withFilter:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      33: new           #107                // class akka/remote/transport/AbstractTransportAdapter$$anonfun$listen$2
      36: dup
      37: aload_0
      38: aload_1
      39: invokespecial #110                // Method akka/remote/transport/AbstractTransportAdapter$$anonfun$listen$2."<init>":(Lakka/remote/transport/AbstractTransportAdapter;Lscala/concurrent/Promise;)V
      42: aload_0
      43: invokevirtual #99                 // Method ec:()Lscala/concurrent/ExecutionContext;
      46: invokeinterface #113,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      51: areturn

  public akka.actor.Address boundAddress();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method wrappedTransport:()Lakka/remote/transport/Transport;
       4: astore_1
       5: aload_1
       6: instanceof    #2                  // class akka/remote/transport/AbstractTransportAdapter
       9: ifeq          25
      12: aload_1
      13: checkcast     #2                  // class akka/remote/transport/AbstractTransportAdapter
      16: astore_2
      17: aload_2
      18: invokevirtual #119                // Method boundAddress:()Lakka/actor/Address;
      21: astore_3
      22: goto          71
      25: aload_1
      26: instanceof    #121                // class akka/remote/transport/netty/NettyTransport
      29: ifeq          47
      32: aload_1
      33: checkcast     #121                // class akka/remote/transport/netty/NettyTransport
      36: astore        4
      38: aload         4
      40: invokevirtual #122                // Method akka/remote/transport/netty/NettyTransport.boundAddress:()Lakka/actor/Address;
      43: astore_3
      44: goto          71
      47: aload_1
      48: instanceof    #124                // class akka/remote/transport/TestTransport
      51: ifeq          69
      54: aload_1
      55: checkcast     #124                // class akka/remote/transport/TestTransport
      58: astore        5
      60: aload         5
      62: invokevirtual #125                // Method akka/remote/transport/TestTransport.boundAddress:()Lakka/actor/Address;
      65: astore_3
      66: goto          71
      69: aconst_null
      70: astore_3
      71: aload_3
      72: areturn

  public scala.concurrent.Future<akka.remote.transport.AssociationHandle> associate(akka.actor.Address);
    Code:
       0: getstatic     #85                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #89                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore_2
       7: aload_0
       8: aload_0
       9: aload_1
      10: invokevirtual #131                // Method removeScheme:(Lakka/actor/Address;)Lakka/actor/Address;
      13: aload_2
      14: invokevirtual #133                // Method interceptAssociate:(Lakka/actor/Address;Lscala/concurrent/Promise;)V
      17: aload_2
      18: invokeinterface #138,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      23: areturn

  public scala.concurrent.Future<java.lang.Object> shutdown();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method wrappedTransport:()Lakka/remote/transport/Transport;
       4: invokeinterface #143,  1          // InterfaceMethod akka/remote/transport/Transport.shutdown:()Lscala/concurrent/Future;
       9: areturn

  public akka.remote.transport.AbstractTransportAdapter(akka.remote.transport.Transport, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field wrappedTransport:Lakka/remote/transport/Transport;
       5: aload_0
       6: aload_2
       7: putfield      #54                 // Field ec:Lscala/concurrent/ExecutionContext;
      10: aload_0
      11: invokespecial #147                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #151                // Method akka/remote/transport/Transport$class.$init$:(Lakka/remote/transport/Transport;)V
      18: aload_0
      19: invokestatic  #154                // Method akka/remote/transport/SchemeAugmenter$class.$init$:(Lakka/remote/transport/SchemeAugmenter;)V
      22: return
}
