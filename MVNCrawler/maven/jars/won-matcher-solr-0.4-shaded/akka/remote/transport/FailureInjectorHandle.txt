Compiled from "FailureInjectorTransportAdapter.scala"
public final class akka.remote.transport.FailureInjectorHandle extends akka.remote.transport.AbstractTransportAdapterHandle implements akka.remote.transport.AssociationHandle$HandleEventListener,scala.Product,scala.Serializable {
  private final akka.remote.transport.AssociationHandle _wrappedHandle;

  private final akka.remote.transport.FailureInjectorTransportAdapter akka$remote$transport$FailureInjectorHandle$$gremlinAdapter;

  private volatile akka.remote.transport.AssociationHandle$HandleEventListener akka$remote$transport$FailureInjectorHandle$$upstreamListener;

  private final scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener> readHandlerPromise;

  public static scala.Option<scala.Tuple2<akka.remote.transport.AssociationHandle, akka.remote.transport.FailureInjectorTransportAdapter>> unapply(akka.remote.transport.FailureInjectorHandle);
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/FailureInjectorHandle$.MODULE$:Lakka/remote/transport/FailureInjectorHandle$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/remote/transport/FailureInjectorHandle$.unapply:(Lakka/remote/transport/FailureInjectorHandle;)Lscala/Option;
       7: areturn

  public static akka.remote.transport.FailureInjectorHandle apply(akka.remote.transport.AssociationHandle, akka.remote.transport.FailureInjectorTransportAdapter);
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/FailureInjectorHandle$.MODULE$:Lakka/remote/transport/FailureInjectorHandle$;
       3: aload_0
       4: aload_1
       5: invokevirtual #28                 // Method akka/remote/transport/FailureInjectorHandle$.apply:(Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/FailureInjectorTransportAdapter;)Lakka/remote/transport/FailureInjectorHandle;
       8: areturn

  public static scala.Function1<scala.Tuple2<akka.remote.transport.AssociationHandle, akka.remote.transport.FailureInjectorTransportAdapter>, akka.remote.transport.FailureInjectorHandle> tupled();
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/FailureInjectorHandle$.MODULE$:Lakka/remote/transport/FailureInjectorHandle$;
       3: invokevirtual #32                 // Method akka/remote/transport/FailureInjectorHandle$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.remote.transport.AssociationHandle, scala.Function1<akka.remote.transport.FailureInjectorTransportAdapter, akka.remote.transport.FailureInjectorHandle>> curried();
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/FailureInjectorHandle$.MODULE$:Lakka/remote/transport/FailureInjectorHandle$;
       3: invokevirtual #35                 // Method akka/remote/transport/FailureInjectorHandle$.curried:()Lscala/Function1;
       6: areturn

  public akka.remote.transport.FailureInjectorTransportAdapter gremlinAdapter$1();
    Code:
       0: aload_0
       1: getfield      #48                 // Field akka$remote$transport$FailureInjectorHandle$$gremlinAdapter:Lakka/remote/transport/FailureInjectorTransportAdapter;
       4: areturn

  public akka.remote.transport.AssociationHandle _wrappedHandle();
    Code:
       0: aload_0
       1: getfield      #53                 // Field _wrappedHandle:Lakka/remote/transport/AssociationHandle;
       4: areturn

  public akka.remote.transport.FailureInjectorTransportAdapter akka$remote$transport$FailureInjectorHandle$$gremlinAdapter();
    Code:
       0: aload_0
       1: getfield      #48                 // Field akka$remote$transport$FailureInjectorHandle$$gremlinAdapter:Lakka/remote/transport/FailureInjectorTransportAdapter;
       4: areturn

  private akka.remote.transport.AssociationHandle$HandleEventListener akka$remote$transport$FailureInjectorHandle$$upstreamListener();
    Code:
       0: aload_0
       1: getfield      #56                 // Field akka$remote$transport$FailureInjectorHandle$$upstreamListener:Lakka/remote/transport/AssociationHandle$HandleEventListener;
       4: areturn

  public void akka$remote$transport$FailureInjectorHandle$$upstreamListener_$eq(akka.remote.transport.AssociationHandle$HandleEventListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field akka$remote$transport$FailureInjectorHandle$$upstreamListener:Lakka/remote/transport/AssociationHandle$HandleEventListener;
       5: return

  public scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener> readHandlerPromise();
    Code:
       0: aload_0
       1: getfield      #62                 // Field readHandlerPromise:Lscala/concurrent/Promise;
       4: areturn

  public boolean write(akka.util.ByteString);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method akka$remote$transport$FailureInjectorHandle$$gremlinAdapter:()Lakka/remote/transport/FailureInjectorTransportAdapter;
       4: aload_0
       5: invokevirtual #69                 // Method wrappedHandle:()Lakka/remote/transport/AssociationHandle;
       8: invokeinterface #75,  1           // InterfaceMethod akka/remote/transport/AssociationHandle.remoteAddress:()Lakka/actor/Address;
      13: aload_1
      14: ldc           #77                 // String handler.write
      16: invokevirtual #83                 // Method akka/remote/transport/FailureInjectorTransportAdapter.shouldDropOutbound:(Lakka/actor/Address;Ljava/lang/Object;Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          36
      26: aload_0
      27: invokevirtual #69                 // Method wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      30: aload_1
      31: invokeinterface #85,  2           // InterfaceMethod akka/remote/transport/AssociationHandle.write:(Lakka/util/ByteString;)Z
      36: ireturn

  public void disassociate();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method wrappedHandle:()Lakka/remote/transport/AssociationHandle;
       4: invokeinterface #91,  1           // InterfaceMethod akka/remote/transport/AssociationHandle.disassociate:()V
       9: return

  public void notify(akka.remote.transport.AssociationHandle$HandleEvent);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method akka$remote$transport$FailureInjectorHandle$$gremlinAdapter:()Lakka/remote/transport/FailureInjectorTransportAdapter;
       4: aload_0
       5: invokevirtual #69                 // Method wrappedHandle:()Lakka/remote/transport/AssociationHandle;
       8: invokeinterface #75,  1           // InterfaceMethod akka/remote/transport/AssociationHandle.remoteAddress:()Lakka/actor/Address;
      13: aload_1
      14: ldc           #95                 // String handler.notify
      16: invokevirtual #98                 // Method akka/remote/transport/FailureInjectorTransportAdapter.shouldDropInbound:(Lakka/actor/Address;Ljava/lang/Object;Ljava/lang/String;)Z
      19: ifne          32
      22: aload_0
      23: invokespecial #100                // Method akka$remote$transport$FailureInjectorHandle$$upstreamListener:()Lakka/remote/transport/AssociationHandle$HandleEventListener;
      26: aload_1
      27: invokeinterface #102,  2          // InterfaceMethod akka/remote/transport/AssociationHandle$HandleEventListener.notify:(Lakka/remote/transport/AssociationHandle$HandleEvent;)V
      32: return

  public akka.remote.transport.FailureInjectorHandle copy(akka.remote.transport.AssociationHandle, akka.remote.transport.FailureInjectorTransportAdapter);
    Code:
       0: new           #2                  // class akka/remote/transport/FailureInjectorHandle
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #109                // Method "<init>":(Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/FailureInjectorTransportAdapter;)V
       9: areturn

  public akka.remote.transport.AssociationHandle copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
       4: areturn

  public akka.remote.transport.FailureInjectorTransportAdapter copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method akka$remote$transport$FailureInjectorHandle$$gremlinAdapter:()Lakka/remote/transport/FailureInjectorTransportAdapter;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #118                // String FailureInjectorHandle
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #124                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #130                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #135                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #138                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #140                // Method gremlinAdapter$1:()Lakka/remote/transport/FailureInjectorTransportAdapter;
      43: goto          50
      46: aload_0
      47: invokevirtual #113                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #148                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #152                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/transport/FailureInjectorHandle
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #148                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #160                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #148                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #164                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/transport/FailureInjectorHandle
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/remote/transport/FailureInjectorHandle
      29: astore        4
      31: aload_0
      32: invokevirtual #113                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      35: aload         4
      37: invokevirtual #113                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #167                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #140                // Method gremlinAdapter$1:()Lakka/remote/transport/FailureInjectorTransportAdapter;
      67: aload         4
      69: invokevirtual #140                // Method gremlinAdapter$1:()Lakka/remote/transport/FailureInjectorTransportAdapter;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #167                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  public akka.remote.transport.FailureInjectorHandle(akka.remote.transport.AssociationHandle, akka.remote.transport.FailureInjectorTransportAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field _wrappedHandle:Lakka/remote/transport/AssociationHandle;
       5: aload_0
       6: aload_2
       7: putfield      #48                 // Field akka$remote$transport$FailureInjectorHandle$$gremlinAdapter:Lakka/remote/transport/FailureInjectorTransportAdapter;
      10: aload_0
      11: aload_1
      12: getstatic     #172                // Field akka/remote/transport/FailureInjectorTransportAdapter$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$;
      15: invokevirtual #175                // Method akka/remote/transport/FailureInjectorTransportAdapter$.FailureInjectorSchemeIdentifier:()Ljava/lang/String;
      18: invokespecial #178                // Method akka/remote/transport/AbstractTransportAdapterHandle."<init>":(Lakka/remote/transport/AssociationHandle;Ljava/lang/String;)V
      21: aload_0
      22: invokestatic  #184                // Method scala/Product$class.$init$:(Lscala/Product;)V
      25: aload_0
      26: aconst_null
      27: putfield      #56                 // Field akka$remote$transport$FailureInjectorHandle$$upstreamListener:Lakka/remote/transport/AssociationHandle$HandleEventListener;
      30: aload_0
      31: getstatic     #189                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
      34: invokevirtual #191                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
      37: putfield      #62                 // Field readHandlerPromise:Lscala/concurrent/Promise;
      40: aload_0
      41: invokevirtual #193                // Method readHandlerPromise:()Lscala/concurrent/Promise;
      44: invokeinterface #199,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      49: new           #201                // class akka/remote/transport/FailureInjectorHandle$$anonfun$1
      52: dup
      53: aload_0
      54: invokespecial #204                // Method akka/remote/transport/FailureInjectorHandle$$anonfun$1."<init>":(Lakka/remote/transport/FailureInjectorHandle;)V
      57: aload_2
      58: invokevirtual #208                // Method akka/remote/transport/FailureInjectorTransportAdapter.extendedSystem:()Lakka/actor/ExtendedActorSystem;
      61: invokevirtual #214                // Method akka/actor/ExtendedActorSystem.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      64: invokeinterface #220,  3          // InterfaceMethod scala/concurrent/Future.onSuccess:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
      69: return
}
