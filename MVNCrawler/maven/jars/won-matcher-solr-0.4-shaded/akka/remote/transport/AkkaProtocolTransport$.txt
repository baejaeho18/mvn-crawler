Compiled from "AkkaProtocolTransport.scala"
public final class akka.remote.transport.AkkaProtocolTransport$ {
  public static final akka.remote.transport.AkkaProtocolTransport$ MODULE$;

  private final java.lang.String AkkaScheme;

  private final int AkkaOverhead;

  private final java.util.concurrent.atomic.AtomicInteger UniqueId;

  public static {};
    Code:
       0: new           #2                  // class akka/remote/transport/AkkaProtocolTransport$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public java.lang.String AkkaScheme();
    Code:
       0: aload_0
       1: getfield      #21                 // Field AkkaScheme:Ljava/lang/String;
       4: areturn

  public int AkkaOverhead();
    Code:
       0: aload_0
       1: getfield      #25                 // Field AkkaOverhead:I
       4: ireturn

  public java.util.concurrent.atomic.AtomicInteger UniqueId();
    Code:
       0: aload_0
       1: getfield      #28                 // Field UniqueId:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  private akka.remote.transport.AkkaProtocolTransport$();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #31                 // Field MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
       8: aload_0
       9: ldc           #33                 // String akka
      11: putfield      #21                 // Field AkkaScheme:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #25                 // Field AkkaOverhead:I
      19: aload_0
      20: new           #35                 // class java/util/concurrent/atomic/AtomicInteger
      23: dup
      24: iconst_0
      25: invokespecial #38                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      28: putfield      #28                 // Field UniqueId:Ljava/util/concurrent/atomic/AtomicInteger;
      31: return
}
