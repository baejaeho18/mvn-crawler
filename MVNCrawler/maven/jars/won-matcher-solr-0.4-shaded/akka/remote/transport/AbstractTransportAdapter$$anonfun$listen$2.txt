Compiled from "AbstractTransportAdapter.scala"
public final class akka.remote.transport.AbstractTransportAdapter$$anonfun$listen$2 extends scala.runtime.AbstractFunction1<scala.Tuple2<akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.Transport$AssociationEventListener>>, scala.concurrent.Future<scala.Tuple2<akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.Transport$AssociationEventListener>>>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.transport.AbstractTransportAdapter $outer;

  public final scala.concurrent.Promise upstreamListenerPromise$1;

  public final scala.concurrent.Future<scala.Tuple2<akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.Transport$AssociationEventListener>>> apply(scala.Tuple2<akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.Transport$AssociationEventListener>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        78
       6: aload_2
       7: invokevirtual #29                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #31                 // class akka/actor/Address
      13: astore_3
      14: aload_2
      15: invokevirtual #34                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #36                 // class scala/concurrent/Promise
      21: astore        4
      23: aload         4
      25: aload_0
      26: getfield      #38                 // Field $outer:Lakka/remote/transport/AbstractTransportAdapter;
      29: aload_3
      30: aload_0
      31: getfield      #40                 // Field upstreamListenerPromise$1:Lscala/concurrent/Promise;
      34: invokeinterface #43,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      39: invokevirtual #47                 // Method akka/remote/transport/AbstractTransportAdapter.interceptListen:(Lakka/actor/Address;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      42: invokeinterface #51,  2           // InterfaceMethod scala/concurrent/Promise.tryCompleteWith:(Lscala/concurrent/Future;)Lscala/concurrent/Promise;
      47: invokeinterface #43,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      52: new           #53                 // class akka/remote/transport/AbstractTransportAdapter$$anonfun$listen$2$$anonfun$apply$2
      55: dup
      56: aload_0
      57: aload_3
      58: invokespecial #57                 // Method akka/remote/transport/AbstractTransportAdapter$$anonfun$listen$2$$anonfun$apply$2."<init>":(Lakka/remote/transport/AbstractTransportAdapter$$anonfun$listen$2;Lakka/actor/Address;)V
      61: aload_0
      62: getfield      #38                 // Field $outer:Lakka/remote/transport/AbstractTransportAdapter;
      65: invokevirtual #61                 // Method akka/remote/transport/AbstractTransportAdapter.ec:()Lscala/concurrent/ExecutionContext;
      68: invokeinterface #67,  3           // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      73: astore        5
      75: aload         5
      77: areturn
      78: new           #69                 // class scala/MatchError
      81: dup
      82: aload_2
      83: invokespecial #72                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      86: athrow

  public akka.remote.transport.AbstractTransportAdapter akka$remote$transport$AbstractTransportAdapter$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #38                 // Field $outer:Lakka/remote/transport/AbstractTransportAdapter;
       4: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class scala/Tuple2
       5: invokevirtual #84                 // Method apply:(Lscala/Tuple2;)Lscala/concurrent/Future;
       8: areturn

  public akka.remote.transport.AbstractTransportAdapter$$anonfun$listen$2(akka.remote.transport.AbstractTransportAdapter, scala.concurrent.Promise);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #38                 // Field $outer:Lakka/remote/transport/AbstractTransportAdapter;
      11: aload_0
      12: aload_2
      13: putfield      #40                 // Field upstreamListenerPromise$1:Lscala/concurrent/Promise;
      16: aload_0
      17: invokespecial #90                 // Method scala/runtime/AbstractFunction1."<init>":()V
      20: return
}
