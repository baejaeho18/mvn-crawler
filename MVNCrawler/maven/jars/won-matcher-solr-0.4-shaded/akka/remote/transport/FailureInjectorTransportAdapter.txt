Compiled from "FailureInjectorTransportAdapter.scala"
public class akka.remote.transport.FailureInjectorTransportAdapter extends akka.remote.transport.AbstractTransportAdapter implements akka.remote.transport.Transport$AssociationEventListener {
  private final akka.actor.ExtendedActorSystem extendedSystem;

  private final akka.event.LoggingAdapter log;

  private final boolean shouldDebugLog;

  private volatile scala.Option<akka.remote.transport.Transport$AssociationEventListener> akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener;

  private final java.util.concurrent.ConcurrentHashMap<akka.actor.Address, akka.remote.transport.FailureInjectorTransportAdapter$GremlinMode> addressChaosTable;

  private volatile akka.remote.transport.FailureInjectorTransportAdapter$GremlinMode allMode;

  private final java.lang.String addedSchemeIdentifier;

  public static java.lang.String FailureInjectorSchemeIdentifier();
    Code:
       0: getstatic     #18                 // Field akka/remote/transport/FailureInjectorTransportAdapter$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$;
       3: invokevirtual #20                 // Method akka/remote/transport/FailureInjectorTransportAdapter$.FailureInjectorSchemeIdentifier:()Ljava/lang/String;
       6: areturn

  public akka.actor.ExtendedActorSystem extendedSystem();
    Code:
       0: aload_0
       1: getfield      #39                 // Field extendedSystem:Lakka/actor/ExtendedActorSystem;
       4: areturn

  private java.util.concurrent.ThreadLocalRandom rng();
    Code:
       0: invokestatic  #48                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
       3: areturn

  private akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: getfield      #51                 // Field log:Lakka/event/LoggingAdapter;
       4: areturn

  private boolean shouldDebugLog();
    Code:
       0: aload_0
       1: getfield      #54                 // Field shouldDebugLog:Z
       4: ireturn

  private scala.Option<akka.remote.transport.Transport$AssociationEventListener> akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener();
    Code:
       0: aload_0
       1: getfield      #57                 // Field akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener:Lscala/Option;
       4: areturn

  public void akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener_$eq(scala.Option<akka.remote.transport.Transport$AssociationEventListener>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener:Lscala/Option;
       5: return

  public java.util.concurrent.ConcurrentHashMap<akka.actor.Address, akka.remote.transport.FailureInjectorTransportAdapter$GremlinMode> addressChaosTable();
    Code:
       0: aload_0
       1: getfield      #63                 // Field addressChaosTable:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  private akka.remote.transport.FailureInjectorTransportAdapter$GremlinMode allMode();
    Code:
       0: aload_0
       1: getfield      #66                 // Field allMode:Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
       4: areturn

  private void allMode_$eq(akka.remote.transport.FailureInjectorTransportAdapter$GremlinMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field allMode:Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
       5: return

  public java.lang.String addedSchemeIdentifier();
    Code:
       0: aload_0
       1: getfield      #70                 // Field addedSchemeIdentifier:Ljava/lang/String;
       4: areturn

  public int maximumOverhead();
    Code:
       0: iconst_0
       1: ireturn

  public scala.concurrent.Future<java.lang.Object> managementCommand(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #76                 // class akka/remote/transport/FailureInjectorTransportAdapter$All
       6: ifeq          41
       9: aload_2
      10: checkcast     #76                 // class akka/remote/transport/FailureInjectorTransportAdapter$All
      13: astore_3
      14: aload_3
      15: invokevirtual #79                 // Method akka/remote/transport/FailureInjectorTransportAdapter$All.mode:()Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokespecial #81                 // Method allMode_$eq:(Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;)V
      26: getstatic     #86                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      29: iconst_1
      30: invokestatic  #92                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      33: invokevirtual #95                 // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
      36: astore        5
      38: goto          124
      41: aload_2
      42: instanceof    #97                 // class akka/remote/transport/FailureInjectorTransportAdapter$One
      45: ifeq          112
      48: aload_2
      49: checkcast     #97                 // class akka/remote/transport/FailureInjectorTransportAdapter$One
      52: astore        6
      54: aload         6
      56: invokevirtual #101                // Method akka/remote/transport/FailureInjectorTransportAdapter$One.remoteAddress:()Lakka/actor/Address;
      59: astore        7
      61: aload         6
      63: invokevirtual #102                // Method akka/remote/transport/FailureInjectorTransportAdapter$One.mode:()Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
      66: astore        8
      68: aload_0
      69: invokevirtual #104                // Method addressChaosTable:()Ljava/util/concurrent/ConcurrentHashMap;
      72: aload         7
      74: ldc           #106                // String
      76: ldc           #106                // String
      78: aload         7
      80: invokevirtual #111                // Method akka/actor/Address.copy$default$3:()Lscala/Option;
      83: aload         7
      85: invokevirtual #114                // Method akka/actor/Address.copy$default$4:()Lscala/Option;
      88: invokevirtual #118                // Method akka/actor/Address.copy:(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)Lakka/actor/Address;
      91: aload         8
      93: invokevirtual #124                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: getstatic     #86                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     100: iconst_1
     101: invokestatic  #92                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     104: invokevirtual #95                 // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
     107: astore        5
     109: goto          124
     112: aload_0
     113: invokespecial #128                // Method akka/remote/transport/AbstractTransportAdapter.wrappedTransport:()Lakka/remote/transport/Transport;
     116: aload_1
     117: invokeinterface #132,  2          // InterfaceMethod akka/remote/transport/Transport.managementCommand:(Ljava/lang/Object;)Lscala/concurrent/Future;
     122: astore        5
     124: aload         5
     126: areturn

  public scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener> interceptListen(akka.actor.Address, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>);
    Code:
       0: aload_0
       1: invokespecial #144                // Method log:()Lakka/event/LoggingAdapter;
       4: ldc           #146                // String FailureInjectorTransport is active on this system. Gremlins might munch your packets.
       6: invokeinterface #152,  2          // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;)V
      11: aload_2
      12: new           #154                // class akka/remote/transport/FailureInjectorTransportAdapter$$anonfun$interceptListen$1
      15: dup
      16: aload_0
      17: invokespecial #158                // Method akka/remote/transport/FailureInjectorTransportAdapter$$anonfun$interceptListen$1."<init>":(Lakka/remote/transport/FailureInjectorTransportAdapter;)V
      20: aload_0
      21: invokevirtual #162                // Method ec:()Lscala/concurrent/ExecutionContext;
      24: invokeinterface #166,  3          // InterfaceMethod scala/concurrent/Future.onSuccess:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
      29: getstatic     #86                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      32: aload_0
      33: invokevirtual #95                 // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
      36: areturn

  public void interceptAssociate(akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.AssociationHandle>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #176                // Field scala/Unit$.MODULE$:Lscala/Unit$;
       5: ldc           #177                // String interceptAssociate
       7: invokevirtual #181                // Method shouldDropInbound:(Lakka/actor/Address;Ljava/lang/Object;Ljava/lang/String;)Z
      10: ifne          26
      13: aload_0
      14: aload_1
      15: getstatic     #176                // Field scala/Unit$.MODULE$:Lscala/Unit$;
      18: ldc           #177                // String interceptAssociate
      20: invokevirtual #184                // Method shouldDropOutbound:(Lakka/actor/Address;Ljava/lang/Object;Ljava/lang/String;)Z
      23: ifeq          62
      26: aload_2
      27: new           #186                // class akka/remote/transport/FailureInjectorException
      30: dup
      31: new           #188                // class scala/collection/mutable/StringBuilder
      34: dup
      35: invokespecial #191                // Method scala/collection/mutable/StringBuilder."<init>":()V
      38: ldc           #193                // String Simulated failure of association to
      40: invokevirtual #197                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      43: aload_1
      44: invokevirtual #197                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      47: invokevirtual #200                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #202                // Method akka/remote/transport/FailureInjectorException."<init>":(Ljava/lang/String;)V
      53: invokeinterface #208,  2          // InterfaceMethod scala/concurrent/Promise.failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
      58: pop
      59: goto          96
      62: aload_2
      63: aload_0
      64: invokespecial #128                // Method akka/remote/transport/AbstractTransportAdapter.wrappedTransport:()Lakka/remote/transport/Transport;
      67: aload_1
      68: invokeinterface #212,  2          // InterfaceMethod akka/remote/transport/Transport.associate:(Lakka/actor/Address;)Lscala/concurrent/Future;
      73: new           #214                // class akka/remote/transport/FailureInjectorTransportAdapter$$anonfun$interceptAssociate$1
      76: dup
      77: aload_0
      78: invokespecial #215                // Method akka/remote/transport/FailureInjectorTransportAdapter$$anonfun$interceptAssociate$1."<init>":(Lakka/remote/transport/FailureInjectorTransportAdapter;)V
      81: aload_0
      82: invokevirtual #162                // Method ec:()Lscala/concurrent/ExecutionContext;
      85: invokeinterface #219,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      90: invokeinterface #223,  2          // InterfaceMethod scala/concurrent/Promise.completeWith:(Lscala/concurrent/Future;)Lscala/concurrent/Promise;
      95: pop
      96: return

  public void notify(akka.remote.transport.Transport$AssociationEvent);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #229                // class akka/remote/transport/Transport$InboundAssociation
       6: ifeq          45
       9: aload_2
      10: checkcast     #229                // class akka/remote/transport/Transport$InboundAssociation
      13: astore_3
      14: aload_3
      15: invokevirtual #233                // Method akka/remote/transport/Transport$InboundAssociation.association:()Lakka/remote/transport/AssociationHandle;
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokeinterface #236,  1          // InterfaceMethod akka/remote/transport/AssociationHandle.remoteAddress:()Lakka/actor/Address;
      28: aload_1
      29: ldc           #237                // String notify
      31: invokevirtual #181                // Method shouldDropInbound:(Lakka/actor/Address;Ljava/lang/Object;Ljava/lang/String;)Z
      34: ifeq          45
      37: getstatic     #243                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      40: astore        5
      42: goto          117
      45: aload_0
      46: invokespecial #245                // Method akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener:()Lscala/Option;
      49: astore        6
      51: aload         6
      53: instanceof    #247                // class scala/Some
      56: ifeq          96
      59: aload         6
      61: checkcast     #247                // class scala/Some
      64: astore        7
      66: aload         7
      68: invokevirtual #251                // Method scala/Some.x:()Ljava/lang/Object;
      71: checkcast     #6                  // class akka/remote/transport/Transport$AssociationEventListener
      74: astore        8
      76: aload         8
      78: aload_0
      79: aload_1
      80: invokevirtual #255                // Method interceptInboundAssociation:(Lakka/remote/transport/Transport$AssociationEvent;)Lakka/remote/transport/Transport$AssociationEvent;
      83: invokeinterface #257,  2          // InterfaceMethod akka/remote/transport/Transport$AssociationEventListener.notify:(Lakka/remote/transport/Transport$AssociationEvent;)V
      88: getstatic     #243                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      91: astore        9
      93: goto          112
      96: getstatic     #262                // Field scala/None$.MODULE$:Lscala/None$;
      99: aload         6
     101: invokevirtual #266                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifeq          118
     107: getstatic     #243                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     110: astore        9
     112: getstatic     #243                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     115: astore        5
     117: return
     118: new           #268                // class scala/MatchError
     121: dup
     122: aload         6
     124: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     127: athrow

  public akka.remote.transport.Transport$AssociationEvent interceptInboundAssociation(akka.remote.transport.Transport$AssociationEvent);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #229                // class akka/remote/transport/Transport$InboundAssociation
       6: ifeq          42
       9: aload_2
      10: checkcast     #229                // class akka/remote/transport/Transport$InboundAssociation
      13: astore_3
      14: aload_3
      15: invokevirtual #233                // Method akka/remote/transport/Transport$InboundAssociation.association:()Lakka/remote/transport/AssociationHandle;
      18: astore        4
      20: new           #229                // class akka/remote/transport/Transport$InboundAssociation
      23: dup
      24: new           #283                // class akka/remote/transport/FailureInjectorHandle
      27: dup
      28: aload         4
      30: aload_0
      31: invokespecial #286                // Method akka/remote/transport/FailureInjectorHandle."<init>":(Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/FailureInjectorTransportAdapter;)V
      34: invokespecial #289                // Method akka/remote/transport/Transport$InboundAssociation."<init>":(Lakka/remote/transport/AssociationHandle;)V
      37: astore        5
      39: goto          45
      42: aload_1
      43: astore        5
      45: aload         5
      47: areturn

  public boolean shouldDropInbound(akka.actor.Address, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #293                // Method chaosMode:(Lakka/actor/Address;)Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
       5: astore        4
       7: getstatic     #298                // Field akka/remote/transport/FailureInjectorTransportAdapter$PassThru$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$PassThru$;
      10: aload         4
      12: invokevirtual #266                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          24
      18: iconst_0
      19: istore        5
      21: goto          91
      24: aload         4
      26: instanceof    #300                // class akka/remote/transport/FailureInjectorTransportAdapter$Drop
      29: ifeq          94
      32: aload         4
      34: checkcast     #300                // class akka/remote/transport/FailureInjectorTransportAdapter$Drop
      37: astore        6
      39: aload         6
      41: invokevirtual #304                // Method akka/remote/transport/FailureInjectorTransportAdapter$Drop.inboundDropP:()D
      44: dstore        7
      46: aload_0
      47: invokespecial #306                // Method rng:()Ljava/util/concurrent/ThreadLocalRandom;
      50: invokevirtual #309                // Method java/util/concurrent/ThreadLocalRandom.nextDouble:()D
      53: dload         7
      55: dcmpg
      56: ifgt          88
      59: aload_0
      60: invokespecial #311                // Method shouldDebugLog:()Z
      63: ifeq          84
      66: aload_0
      67: invokespecial #144                // Method log:()Lakka/event/LoggingAdapter;
      70: ldc_w         #313                // String Dropping inbound [{}] for [{}] {}
      73: aload_2
      74: invokevirtual #317                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      77: aload_1
      78: aload_3
      79: invokeinterface #321,  5          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: istore        5
      91: iload         5
      93: ireturn
      94: new           #268                // class scala/MatchError
      97: dup
      98: aload         4
     100: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     103: athrow

  public boolean shouldDropOutbound(akka.actor.Address, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #293                // Method chaosMode:(Lakka/actor/Address;)Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
       5: astore        4
       7: getstatic     #298                // Field akka/remote/transport/FailureInjectorTransportAdapter$PassThru$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$PassThru$;
      10: aload         4
      12: invokevirtual #266                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          24
      18: iconst_0
      19: istore        5
      21: goto          91
      24: aload         4
      26: instanceof    #300                // class akka/remote/transport/FailureInjectorTransportAdapter$Drop
      29: ifeq          94
      32: aload         4
      34: checkcast     #300                // class akka/remote/transport/FailureInjectorTransportAdapter$Drop
      37: astore        6
      39: aload         6
      41: invokevirtual #331                // Method akka/remote/transport/FailureInjectorTransportAdapter$Drop.outboundDropP:()D
      44: dstore        7
      46: aload_0
      47: invokespecial #306                // Method rng:()Ljava/util/concurrent/ThreadLocalRandom;
      50: invokevirtual #309                // Method java/util/concurrent/ThreadLocalRandom.nextDouble:()D
      53: dload         7
      55: dcmpg
      56: ifgt          88
      59: aload_0
      60: invokespecial #311                // Method shouldDebugLog:()Z
      63: ifeq          84
      66: aload_0
      67: invokespecial #144                // Method log:()Lakka/event/LoggingAdapter;
      70: ldc_w         #333                // String Dropping outbound [{}] for [{}] {}
      73: aload_2
      74: invokevirtual #317                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      77: aload_1
      78: aload_3
      79: invokeinterface #321,  5          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: istore        5
      91: iload         5
      93: ireturn
      94: new           #268                // class scala/MatchError
      97: dup
      98: aload         4
     100: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     103: athrow

  public akka.remote.transport.FailureInjectorTransportAdapter$GremlinMode chaosMode(akka.actor.Address);
    Code:
       0: aload_0
       1: invokevirtual #104                // Method addressChaosTable:()Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: ldc           #106                // String
       7: ldc           #106                // String
       9: aload_1
      10: invokevirtual #111                // Method akka/actor/Address.copy$default$3:()Lscala/Option;
      13: aload_1
      14: invokevirtual #114                // Method akka/actor/Address.copy$default$4:()Lscala/Option;
      17: invokevirtual #118                // Method akka/actor/Address.copy:(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)Lakka/actor/Address;
      20: invokevirtual #337                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #326                // class akka/remote/transport/FailureInjectorTransportAdapter$GremlinMode
      26: astore_2
      27: aload_2
      28: ifnonnull     37
      31: getstatic     #298                // Field akka/remote/transport/FailureInjectorTransportAdapter$PassThru$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$PassThru$;
      34: goto          38
      37: aload_2
      38: areturn

  public akka.remote.transport.FailureInjectorTransportAdapter(akka.remote.transport.Transport, akka.actor.ExtendedActorSystem);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #39                 // Field extendedSystem:Lakka/actor/ExtendedActorSystem;
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #344                // Method akka/actor/ExtendedActorSystem.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      11: invokespecial #347                // Method akka/remote/transport/AbstractTransportAdapter."<init>":(Lakka/remote/transport/Transport;Lscala/concurrent/ExecutionContext;)V
      14: aload_0
      15: getstatic     #352                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
      18: aload_2
      19: aload_0
      20: invokevirtual #317                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokevirtual #357                // Method java/lang/Class.getName:()Ljava/lang/String;
      26: getstatic     #362                // Field akka/event/LogSource$.MODULE$:Lakka/event/LogSource$;
      29: invokevirtual #366                // Method akka/event/LogSource$.fromString:()Lakka/event/LogSource;
      32: invokevirtual #370                // Method akka/event/Logging$.apply:(Lakka/actor/ActorSystem;Ljava/lang/Object;Lakka/event/LogSource;)Lakka/event/LoggingAdapter;
      35: putfield      #51                 // Field log:Lakka/event/LoggingAdapter;
      38: aload_0
      39: aload_2
      40: invokevirtual #374                // Method akka/actor/ExtendedActorSystem.settings:()Lakka/actor/ActorSystem$Settings;
      43: invokevirtual #380                // Method akka/actor/ActorSystem$Settings.config:()Lcom/typesafe/config/Config;
      46: ldc_w         #382                // String akka.remote.gremlin.debug
      49: invokeinterface #388,  2          // InterfaceMethod com/typesafe/config/Config.getBoolean:(Ljava/lang/String;)Z
      54: putfield      #54                 // Field shouldDebugLog:Z
      57: aload_0
      58: getstatic     #262                // Field scala/None$.MODULE$:Lscala/None$;
      61: putfield      #57                 // Field akka$remote$transport$FailureInjectorTransportAdapter$$upstreamListener:Lscala/Option;
      64: aload_0
      65: new           #120                // class java/util/concurrent/ConcurrentHashMap
      68: dup
      69: invokespecial #389                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      72: putfield      #63                 // Field addressChaosTable:Ljava/util/concurrent/ConcurrentHashMap;
      75: aload_0
      76: getstatic     #298                // Field akka/remote/transport/FailureInjectorTransportAdapter$PassThru$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$PassThru$;
      79: putfield      #66                 // Field allMode:Lakka/remote/transport/FailureInjectorTransportAdapter$GremlinMode;
      82: aload_0
      83: getstatic     #18                 // Field akka/remote/transport/FailureInjectorTransportAdapter$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$;
      86: invokevirtual #20                 // Method akka/remote/transport/FailureInjectorTransportAdapter$.FailureInjectorSchemeIdentifier:()Ljava/lang/String;
      89: putfield      #70                 // Field addedSchemeIdentifier:Ljava/lang/String;
      92: return
}
