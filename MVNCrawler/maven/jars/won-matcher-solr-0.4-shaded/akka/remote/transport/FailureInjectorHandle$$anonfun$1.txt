Compiled from "FailureInjectorTransportAdapter.scala"
public final class akka.remote.transport.FailureInjectorHandle$$anonfun$1 extends scala.runtime.AbstractPartialFunction<akka.remote.transport.AssociationHandle$HandleEventListener, scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.transport.FailureInjectorHandle $outer;

  public final <A1 extends akka.remote.transport.AssociationHandle$HandleEventListener, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        44
       6: aload_3
       7: astore        4
       9: aload_0
      10: getfield      #20                 // Field $outer:Lakka/remote/transport/FailureInjectorHandle;
      13: aload         4
      15: invokevirtual #24                 // Method akka/remote/transport/FailureInjectorHandle.akka$remote$transport$FailureInjectorHandle$$upstreamListener_$eq:(Lakka/remote/transport/AssociationHandle$HandleEventListener;)V
      18: aload_0
      19: getfield      #20                 // Field $outer:Lakka/remote/transport/FailureInjectorHandle;
      22: invokevirtual #28                 // Method akka/remote/transport/FailureInjectorHandle.wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      25: invokeinterface #34,  1           // InterfaceMethod akka/remote/transport/AssociationHandle.readHandlerPromise:()Lscala/concurrent/Promise;
      30: aload_0
      31: getfield      #20                 // Field $outer:Lakka/remote/transport/FailureInjectorHandle;
      34: invokeinterface #40,  2           // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
      39: astore        5
      41: goto          53
      44: aload_2
      45: aload_1
      46: invokeinterface #46,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: astore        5
      53: aload         5
      55: areturn

  public final boolean isDefinedAt(akka.remote.transport.AssociationHandle$HandleEventListener);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        11
       6: iconst_1
       7: istore_3
       8: goto          13
      11: iconst_0
      12: istore_3
      13: iload_3
      14: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #54                 // class akka/remote/transport/AssociationHandle$HandleEventListener
       5: invokevirtual #61                 // Method isDefinedAt:(Lakka/remote/transport/AssociationHandle$HandleEventListener;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #54                 // class akka/remote/transport/AssociationHandle$HandleEventListener
       5: aload_2
       6: invokevirtual #66                 // Method applyOrElse:(Lakka/remote/transport/AssociationHandle$HandleEventListener;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.remote.transport.FailureInjectorHandle$$anonfun$1(akka.remote.transport.FailureInjectorHandle);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #20                 // Field $outer:Lakka/remote/transport/FailureInjectorHandle;
      11: aload_0
      12: invokespecial #71                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
      15: return
}
