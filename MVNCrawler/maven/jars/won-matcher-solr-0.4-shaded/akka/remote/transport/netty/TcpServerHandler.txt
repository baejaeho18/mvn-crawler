Compiled from "TcpSupport.scala"
public class akka.remote.transport.netty.TcpServerHandler extends akka.remote.transport.netty.ServerHandler implements akka.remote.transport.netty.TcpHandlers {
  public void registerListener(org.jboss.netty.channel.Channel, akka.remote.transport.AssociationHandle$HandleEventListener, org.jboss.netty.buffer.ChannelBuffer, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #17                 // Method akka/remote/transport/netty/TcpHandlers$class.registerListener:(Lakka/remote/transport/netty/TcpHandlers;Lorg/jboss/netty/channel/Channel;Lakka/remote/transport/AssociationHandle$HandleEventListener;Lorg/jboss/netty/buffer/ChannelBuffer;Ljava/net/InetSocketAddress;)V
       9: return

  public akka.remote.transport.AssociationHandle createHandle(org.jboss.netty.channel.Channel, akka.actor.Address, akka.actor.Address);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #32                 // Method akka/remote/transport/netty/TcpHandlers$class.createHandle:(Lakka/remote/transport/netty/TcpHandlers;Lorg/jboss/netty/channel/Channel;Lakka/actor/Address;Lakka/actor/Address;)Lakka/remote/transport/AssociationHandle;
       7: areturn

  public void onDisconnect(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.ChannelStateEvent);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method akka/remote/transport/netty/TcpHandlers$class.onDisconnect:(Lakka/remote/transport/netty/TcpHandlers;Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
       6: return

  public void onMessage(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.MessageEvent);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // Method akka/remote/transport/netty/TcpHandlers$class.onMessage:(Lakka/remote/transport/netty/TcpHandlers;Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
       6: return

  public void onException(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.ExceptionEvent);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // Method akka/remote/transport/netty/TcpHandlers$class.onException:(Lakka/remote/transport/netty/TcpHandlers;Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
       6: return

  public void onConnect(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.ChannelStateEvent);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #63,  1           // InterfaceMethod org/jboss/netty/channel/ChannelStateEvent.getChannel:()Lorg/jboss/netty/channel/Channel;
       7: aload_2
       8: invokeinterface #63,  1           // InterfaceMethod org/jboss/netty/channel/ChannelStateEvent.getChannel:()Lorg/jboss/netty/channel/Channel;
      13: invokeinterface #69,  1           // InterfaceMethod org/jboss/netty/channel/Channel.getRemoteAddress:()Ljava/net/SocketAddress;
      18: aconst_null
      19: invokevirtual #73                 // Method initInbound:(Lorg/jboss/netty/channel/Channel;Ljava/net/SocketAddress;Lorg/jboss/netty/buffer/ChannelBuffer;)V
      22: return

  public akka.remote.transport.netty.TcpServerHandler(akka.remote.transport.netty.NettyTransport, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #77                 // Method akka/remote/transport/netty/ServerHandler."<init>":(Lakka/remote/transport/netty/NettyTransport;Lscala/concurrent/Future;)V
       6: aload_0
       7: invokestatic  #81                 // Method akka/remote/transport/netty/TcpHandlers$class.$init$:(Lakka/remote/transport/netty/TcpHandlers;)V
      10: return
}
