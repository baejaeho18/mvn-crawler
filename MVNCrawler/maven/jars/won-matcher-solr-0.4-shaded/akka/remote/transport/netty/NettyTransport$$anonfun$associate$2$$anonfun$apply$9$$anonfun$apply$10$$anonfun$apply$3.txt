Compiled from "NettyTransport.scala"
public final class akka.remote.transport.netty.NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$3 extends scala.runtime.AbstractPartialFunction<akka.remote.transport.AssociationHandle$HandleEventListener, akka.remote.transport.AssociationHandle$HandleEventListener> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.transport.netty.NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10 $outer;

  private final java.net.InetSocketAddress x2$3;

  public final <A1 extends akka.remote.transport.AssociationHandle$HandleEventListener, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: getfield      #22                 // Field $outer:Lakka/remote/transport/netty/NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10;
       6: invokevirtual #26                 // Method akka/remote/transport/netty/NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10.akka$remote$transport$netty$NettyTransport$$anonfun$$anonfun$$anonfun$$$outer:()Lakka/remote/transport/netty/NettyTransport$$anonfun$associate$2$$anonfun$apply$9;
       9: invokevirtual #32                 // Method akka/remote/transport/netty/NettyTransport$$anonfun$associate$2$$anonfun$apply$9.akka$remote$transport$netty$NettyTransport$$anonfun$$anonfun$$$outer:()Lakka/remote/transport/netty/NettyTransport$$anonfun$associate$2;
      12: invokevirtual #38                 // Method akka/remote/transport/netty/NettyTransport$$anonfun$associate$2.akka$remote$transport$netty$NettyTransport$$anonfun$$$outer:()Lakka/remote/transport/netty/NettyTransport;
      15: invokevirtual #44                 // Method akka/remote/transport/netty/NettyTransport.udpConnectionTable:()Ljava/util/concurrent/ConcurrentHashMap;
      18: aload_0
      19: getfield      #46                 // Field x2$3:Ljava/net/InetSocketAddress;
      22: aload_3
      23: invokevirtual #52                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: astore        4
      28: aload         4
      30: areturn

  public final boolean isDefinedAt(akka.remote.transport.AssociationHandle$HandleEventListener);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_1
       3: istore_3
       4: iload_3
       5: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #63                 // class akka/remote/transport/AssociationHandle$HandleEventListener
       5: invokevirtual #65                 // Method isDefinedAt:(Lakka/remote/transport/AssociationHandle$HandleEventListener;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #63                 // class akka/remote/transport/AssociationHandle$HandleEventListener
       5: aload_2
       6: invokevirtual #70                 // Method applyOrElse:(Lakka/remote/transport/AssociationHandle$HandleEventListener;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.remote.transport.netty.NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$3(akka.remote.transport.netty.NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10, java.net.InetSocketAddress);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #22                 // Field $outer:Lakka/remote/transport/netty/NettyTransport$$anonfun$associate$2$$anonfun$apply$9$$anonfun$apply$10;
      11: aload_0
      12: aload_2
      13: putfield      #46                 // Field x2$3:Ljava/net/InetSocketAddress;
      16: aload_0
      17: invokespecial #75                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
      20: return
}
