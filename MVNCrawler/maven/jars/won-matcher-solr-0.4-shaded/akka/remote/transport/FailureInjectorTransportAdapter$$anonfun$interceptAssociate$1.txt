Compiled from "FailureInjectorTransportAdapter.scala"
public final class akka.remote.transport.FailureInjectorTransportAdapter$$anonfun$interceptAssociate$1 extends scala.runtime.AbstractFunction1<akka.remote.transport.AssociationHandle, akka.remote.transport.FailureInjectorHandle> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.transport.FailureInjectorTransportAdapter $outer;

  public final akka.remote.transport.FailureInjectorHandle apply(akka.remote.transport.AssociationHandle);
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/remote/transport/FailureInjectorTransportAdapter;
       4: invokevirtual #27                 // Method akka/remote/transport/FailureInjectorTransportAdapter.addressChaosTable:()Ljava/util/concurrent/ConcurrentHashMap;
       7: aload_1
       8: invokeinterface #33,  1           // InterfaceMethod akka/remote/transport/AssociationHandle.remoteAddress:()Lakka/actor/Address;
      13: astore_2
      14: ldc           #35                 // String
      16: astore_3
      17: ldc           #35                 // String
      19: astore        4
      21: aload_2
      22: invokevirtual #41                 // Method akka/actor/Address.copy$default$3:()Lscala/Option;
      25: astore        5
      27: aload_2
      28: invokevirtual #44                 // Method akka/actor/Address.copy$default$4:()Lscala/Option;
      31: astore        6
      33: aload_2
      34: aload_3
      35: aload         4
      37: aload         5
      39: aload         6
      41: invokevirtual #48                 // Method akka/actor/Address.copy:(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)Lakka/actor/Address;
      44: getstatic     #54                 // Field akka/remote/transport/FailureInjectorTransportAdapter$PassThru$.MODULE$:Lakka/remote/transport/FailureInjectorTransportAdapter$PassThru$;
      47: invokevirtual #60                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: new           #62                 // class akka/remote/transport/FailureInjectorHandle
      54: dup
      55: aload_1
      56: aload_0
      57: getfield      #23                 // Field $outer:Lakka/remote/transport/FailureInjectorTransportAdapter;
      60: invokespecial #66                 // Method akka/remote/transport/FailureInjectorHandle."<init>":(Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/FailureInjectorTransportAdapter;)V
      63: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class akka/remote/transport/AssociationHandle
       5: invokevirtual #81                 // Method apply:(Lakka/remote/transport/AssociationHandle;)Lakka/remote/transport/FailureInjectorHandle;
       8: areturn

  public akka.remote.transport.FailureInjectorTransportAdapter$$anonfun$interceptAssociate$1(akka.remote.transport.FailureInjectorTransportAdapter);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lakka/remote/transport/FailureInjectorTransportAdapter;
      11: aload_0
      12: invokespecial #87                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
