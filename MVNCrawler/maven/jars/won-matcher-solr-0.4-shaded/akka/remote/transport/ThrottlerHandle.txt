Compiled from "ThrottlerTransportAdapter.scala"
public final class akka.remote.transport.ThrottlerHandle extends akka.remote.transport.AbstractTransportAdapterHandle implements scala.Product,scala.Serializable {
  private final akka.remote.transport.AssociationHandle _wrappedHandle;

  private final akka.actor.ActorRef throttlerActor;

  private final java.util.concurrent.atomic.AtomicReference<akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode> outboundThrottleMode;

  private final scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener> readHandlerPromise;

  public static scala.Option<scala.Tuple2<akka.remote.transport.AssociationHandle, akka.actor.ActorRef>> unapply(akka.remote.transport.ThrottlerHandle);
    Code:
       0: getstatic     #20                 // Field akka/remote/transport/ThrottlerHandle$.MODULE$:Lakka/remote/transport/ThrottlerHandle$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/remote/transport/ThrottlerHandle$.unapply:(Lakka/remote/transport/ThrottlerHandle;)Lscala/Option;
       7: areturn

  public static akka.remote.transport.ThrottlerHandle apply(akka.remote.transport.AssociationHandle, akka.actor.ActorRef);
    Code:
       0: getstatic     #20                 // Field akka/remote/transport/ThrottlerHandle$.MODULE$:Lakka/remote/transport/ThrottlerHandle$;
       3: aload_0
       4: aload_1
       5: invokevirtual #26                 // Method akka/remote/transport/ThrottlerHandle$.apply:(Lakka/remote/transport/AssociationHandle;Lakka/actor/ActorRef;)Lakka/remote/transport/ThrottlerHandle;
       8: areturn

  public static scala.Function1<scala.Tuple2<akka.remote.transport.AssociationHandle, akka.actor.ActorRef>, akka.remote.transport.ThrottlerHandle> tupled();
    Code:
       0: getstatic     #20                 // Field akka/remote/transport/ThrottlerHandle$.MODULE$:Lakka/remote/transport/ThrottlerHandle$;
       3: invokevirtual #30                 // Method akka/remote/transport/ThrottlerHandle$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.remote.transport.AssociationHandle, scala.Function1<akka.actor.ActorRef, akka.remote.transport.ThrottlerHandle>> curried();
    Code:
       0: getstatic     #20                 // Field akka/remote/transport/ThrottlerHandle$.MODULE$:Lakka/remote/transport/ThrottlerHandle$;
       3: invokevirtual #33                 // Method akka/remote/transport/ThrottlerHandle$.curried:()Lscala/Function1;
       6: areturn

  public akka.remote.transport.AssociationHandle _wrappedHandle();
    Code:
       0: aload_0
       1: getfield      #46                 // Field _wrappedHandle:Lakka/remote/transport/AssociationHandle;
       4: areturn

  public akka.actor.ActorRef throttlerActor();
    Code:
       0: aload_0
       1: getfield      #51                 // Field throttlerActor:Lakka/actor/ActorRef;
       4: areturn

  public java.util.concurrent.atomic.AtomicReference<akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode> outboundThrottleMode();
    Code:
       0: aload_0
       1: getfield      #54                 // Field outboundThrottleMode:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener> readHandlerPromise();
    Code:
       0: aload_0
       1: getfield      #57                 // Field readHandlerPromise:Lscala/concurrent/Promise;
       4: areturn

  public boolean write(akka.util.ByteString);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method akka/util/ByteString.length:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #67                 // Method outboundThrottleMode:()Ljava/util/concurrent/atomic/AtomicReference;
       9: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      12: checkcast     #75                 // class akka/remote/transport/ThrottlerTransportAdapter$ThrottleMode
      15: astore_3
      16: getstatic     #80                 // Field akka/remote/transport/ThrottlerTransportAdapter$Blackhole$.MODULE$:Lakka/remote/transport/ThrottlerTransportAdapter$Blackhole$;
      19: aload_3
      20: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ifeq          32
      26: iconst_1
      27: istore        4
      29: goto          70
      32: aload_0
      33: aload_0
      34: invokevirtual #67                 // Method outboundThrottleMode:()Ljava/util/concurrent/atomic/AtomicReference;
      37: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      40: checkcast     #75                 // class akka/remote/transport/ThrottlerTransportAdapter$ThrottleMode
      43: iload_2
      44: invokespecial #90                 // Method tryConsume$1:(Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;I)Z
      47: istore        5
      49: iload         5
      51: ifeq          67
      54: aload_0
      55: invokevirtual #93                 // Method wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      58: aload_1
      59: invokeinterface #97,  2           // InterfaceMethod akka/remote/transport/AssociationHandle.write:(Lakka/util/ByteString;)Z
      64: goto          68
      67: iconst_0
      68: istore        4
      70: iload         4
      72: ireturn

  public void disassociate();
    Code:
       0: getstatic     #110                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: invokevirtual #112                // Method throttlerActor:()Lakka/actor/ActorRef;
       7: invokevirtual #116                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      10: astore_1
      11: getstatic     #121                // Field akka/actor/PoisonPill$.MODULE$:Lakka/actor/PoisonPill$;
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokeinterface #127,  2          // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      22: astore_3
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokeinterface #131,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      31: return

  public void disassociateWithFailure(akka.remote.transport.AssociationHandle$DisassociateInfo);
    Code:
       0: getstatic     #110                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: invokevirtual #112                // Method throttlerActor:()Lakka/actor/ActorRef;
       7: invokevirtual #116                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      10: astore_2
      11: new           #139                // class akka/remote/transport/ThrottledAssociation$FailWith
      14: dup
      15: aload_1
      16: invokespecial #142                // Method akka/remote/transport/ThrottledAssociation$FailWith."<init>":(Lakka/remote/transport/AssociationHandle$DisassociateInfo;)V
      19: astore_3
      20: aload_2
      21: aload_3
      22: invokeinterface #127,  2          // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      27: astore        4
      29: aload_2
      30: aload_3
      31: aload         4
      33: invokeinterface #131,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      38: return

  public akka.remote.transport.ThrottlerHandle copy(akka.remote.transport.AssociationHandle, akka.actor.ActorRef);
    Code:
       0: new           #2                  // class akka/remote/transport/ThrottlerHandle
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #152                // Method "<init>":(Lakka/remote/transport/AssociationHandle;Lakka/actor/ActorRef;)V
       9: areturn

  public akka.remote.transport.AssociationHandle copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
       4: areturn

  public akka.actor.ActorRef copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method throttlerActor:()Lakka/actor/ActorRef;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #160                // String ThrottlerHandle
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #165                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #171                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #174                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #177                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #112                // Method throttlerActor:()Lakka/actor/ActorRef;
      43: goto          50
      46: aload_0
      47: invokevirtual #155                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #185                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #189                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/transport/ThrottlerHandle
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #185                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #196                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #185                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #200                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/transport/ThrottlerHandle
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/remote/transport/ThrottlerHandle
      29: astore        4
      31: aload_0
      32: invokevirtual #155                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      35: aload         4
      37: invokevirtual #155                // Method _wrappedHandle:()Lakka/remote/transport/AssociationHandle;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #112                // Method throttlerActor:()Lakka/actor/ActorRef;
      67: aload         4
      69: invokevirtual #112                // Method throttlerActor:()Lakka/actor/ActorRef;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  private final boolean tryConsume$1(akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode, int);
    Code:
       0: invokestatic  #208                // Method java/lang/System.nanoTime:()J
       3: lstore        4
       5: aload_1
       6: lload         4
       8: iload_2
       9: invokeinterface #212,  4          // InterfaceMethod akka/remote/transport/ThrottlerTransportAdapter$ThrottleMode.tryConsumeTokens:(JI)Lscala/Tuple2;
      14: astore        7
      16: aload         7
      18: ifnull        113
      21: aload         7
      23: invokevirtual #217                // Method scala/Tuple2._1:()Ljava/lang/Object;
      26: checkcast     #75                 // class akka/remote/transport/ThrottlerTransportAdapter$ThrottleMode
      29: astore        8
      31: aload         7
      33: invokevirtual #221                // Method scala/Tuple2._2$mcZ$sp:()Z
      36: istore        9
      38: new           #214                // class scala/Tuple2
      41: dup
      42: aload         8
      44: iload         9
      46: invokestatic  #225                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      49: invokespecial #228                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      52: astore        10
      54: aload         10
      56: astore        6
      58: aload         6
      60: invokevirtual #217                // Method scala/Tuple2._1:()Ljava/lang/Object;
      63: checkcast     #75                 // class akka/remote/transport/ThrottlerTransportAdapter$ThrottleMode
      66: astore        11
      68: aload         6
      70: invokevirtual #221                // Method scala/Tuple2._2$mcZ$sp:()Z
      73: istore        12
      75: iload         12
      77: ifeq          111
      80: aload_0
      81: invokevirtual #67                 // Method outboundThrottleMode:()Ljava/util/concurrent/atomic/AtomicReference;
      84: aload_1
      85: aload         11
      87: invokevirtual #232                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      90: ifeq          97
      93: iconst_1
      94: goto          112
      97: aload_0
      98: invokevirtual #67                 // Method outboundThrottleMode:()Ljava/util/concurrent/atomic/AtomicReference;
     101: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     104: checkcast     #75                 // class akka/remote/transport/ThrottlerTransportAdapter$ThrottleMode
     107: astore_1
     108: goto          0
     111: iconst_0
     112: ireturn
     113: new           #234                // class scala/MatchError
     116: dup
     117: aload         7
     119: invokespecial #237                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     122: athrow

  public akka.remote.transport.ThrottlerHandle(akka.remote.transport.AssociationHandle, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field _wrappedHandle:Lakka/remote/transport/AssociationHandle;
       5: aload_0
       6: aload_2
       7: putfield      #51                 // Field throttlerActor:Lakka/actor/ActorRef;
      10: aload_0
      11: aload_1
      12: getstatic     #249                // Field akka/remote/transport/ThrottlerTransportAdapter$.MODULE$:Lakka/remote/transport/ThrottlerTransportAdapter$;
      15: invokevirtual #252                // Method akka/remote/transport/ThrottlerTransportAdapter$.SchemeIdentifier:()Ljava/lang/String;
      18: invokespecial #255                // Method akka/remote/transport/AbstractTransportAdapterHandle."<init>":(Lakka/remote/transport/AssociationHandle;Ljava/lang/String;)V
      21: aload_0
      22: invokestatic  #261                // Method scala/Product$class.$init$:(Lscala/Product;)V
      25: aload_0
      26: new           #69                 // class java/util/concurrent/atomic/AtomicReference
      29: dup
      30: getstatic     #266                // Field akka/remote/transport/ThrottlerTransportAdapter$Unthrottled$.MODULE$:Lakka/remote/transport/ThrottlerTransportAdapter$Unthrottled$;
      33: invokespecial #267                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      36: putfield      #54                 // Field outboundThrottleMode:Ljava/util/concurrent/atomic/AtomicReference;
      39: aload_0
      40: getstatic     #272                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
      43: invokevirtual #274                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
      46: putfield      #57                 // Field readHandlerPromise:Lscala/concurrent/Promise;
      49: return
}
