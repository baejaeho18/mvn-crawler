Compiled from "ThrottlerTransportAdapter.scala"
public final class akka.remote.transport.ThrottlerTransportAdapter$TokenBucket implements akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode,scala.Product,scala.Serializable {
  public static final long serialVersionUID;

  private final int capacity;

  private final double tokensPerSecond;

  private final long nanoTimeOfLastSend;

  private final int availableTokens;

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #24                 // Field capacity:I
       4: ireturn

  public double tokensPerSecond();
    Code:
       0: aload_0
       1: getfield      #29                 // Field tokensPerSecond:D
       4: dreturn

  public long nanoTimeOfLastSend();
    Code:
       0: aload_0
       1: getfield      #32                 // Field nanoTimeOfLastSend:J
       4: lreturn

  public int availableTokens();
    Code:
       0: aload_0
       1: getfield      #34                 // Field availableTokens:I
       4: ireturn

  private boolean isAvailable(long, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #38                 // Method capacity:()I
       5: if_icmple     20
       8: aload_0
       9: invokevirtual #40                 // Method availableTokens:()I
      12: iconst_0
      13: if_icmple     20
      16: iconst_1
      17: goto          49
      20: getstatic     #46                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      23: aload_0
      24: invokevirtual #40                 // Method availableTokens:()I
      27: aload_0
      28: lload_1
      29: invokespecial #50                 // Method tokensGenerated:(J)I
      32: iadd
      33: aload_0
      34: invokevirtual #38                 // Method capacity:()I
      37: invokevirtual #54                 // Method scala/math/package$.min:(II)I
      40: iload_3
      41: if_icmplt     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  public scala.Tuple2<akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode, java.lang.Object> tryConsumeTokens(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #60                 // Method isAvailable:(JI)Z
       6: ifeq          74
       9: new           #62                 // class scala/Tuple2
      12: dup
      13: lload_1
      14: lstore        4
      16: getstatic     #46                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      19: aload_0
      20: invokevirtual #40                 // Method availableTokens:()I
      23: iload_3
      24: isub
      25: aload_0
      26: lload_1
      27: invokespecial #50                 // Method tokensGenerated:(J)I
      30: iadd
      31: aload_0
      32: invokevirtual #38                 // Method capacity:()I
      35: invokevirtual #54                 // Method scala/math/package$.min:(II)I
      38: istore        6
      40: aload_0
      41: invokevirtual #65                 // Method copy$default$1:()I
      44: istore        7
      46: aload_0
      47: invokevirtual #68                 // Method copy$default$2:()D
      50: dstore        8
      52: aload_0
      53: iload         7
      55: dload         8
      57: lload         4
      59: iload         6
      61: invokevirtual #72                 // Method copy:(IDJI)Lakka/remote/transport/ThrottlerTransportAdapter$TokenBucket;
      64: iconst_1
      65: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      68: invokespecial #82                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      71: goto          86
      74: new           #62                 // class scala/Tuple2
      77: dup
      78: aload_0
      79: iconst_0
      80: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      83: invokespecial #82                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      86: areturn

  public scala.concurrent.duration.FiniteDuration timeToAvailable(long, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #38                 // Method capacity:()I
       5: if_icmple     12
       8: iconst_1
       9: goto          13
      12: iload_3
      13: aload_0
      14: lload_1
      15: invokespecial #50                 // Method tokensGenerated:(J)I
      18: isub
      19: istore        4
      21: new           #90                 // class scala/concurrent/duration/package$DurationDouble
      24: dup
      25: getstatic     #95                 // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
      28: iload         4
      30: i2d
      31: aload_0
      32: invokevirtual #97                 // Method tokensPerSecond:()D
      35: ddiv
      36: invokevirtual #101                // Method scala/concurrent/duration/package$.DurationDouble:(D)D
      39: invokespecial #104                // Method scala/concurrent/duration/package$DurationDouble."<init>":(D)V
      42: invokevirtual #108                // Method scala/concurrent/duration/package$DurationDouble.seconds:()Lscala/concurrent/duration/FiniteDuration;
      45: areturn

  private int tokensGenerated(long);
    Code:
       0: getstatic     #116                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: lload_1
       4: aload_0
       5: invokevirtual #118                // Method nanoTimeOfLastSend:()J
       8: lsub
       9: invokevirtual #122                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: l2d
      13: aload_0
      14: invokevirtual #97                 // Method tokensPerSecond:()D
      17: dmul
      18: ldc2_w        #123                // double 1000.0d
      21: ddiv
      22: d2i
      23: ireturn

  public akka.remote.transport.ThrottlerTransportAdapter$TokenBucket copy(int, double, long, int);
    Code:
       0: new           #2                  // class akka/remote/transport/ThrottlerTransportAdapter$TokenBucket
       3: dup
       4: iload_1
       5: dload_2
       6: lload         4
       8: iload         6
      10: invokespecial #127                // Method "<init>":(IDJI)V
      13: areturn

  public int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method capacity:()I
       4: ireturn

  public double copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method tokensPerSecond:()D
       4: dreturn

  public long copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method nanoTimeOfLastSend:()J
       4: lreturn

  public int copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method availableTokens:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #133                // String TokenBucket
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 77
                     1: 67
                     2: 57
                     3: 47
               default: 32
          }
      32: new           #138                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #142                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #145                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #148                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #40                 // Method availableTokens:()I
      51: invokestatic  #142                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      54: goto          84
      57: aload_0
      58: invokevirtual #118                // Method nanoTimeOfLastSend:()J
      61: invokestatic  #152                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      64: goto          84
      67: aload_0
      68: invokevirtual #97                 // Method tokensPerSecond:()D
      71: invokestatic  #156                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      74: goto          84
      77: aload_0
      78: invokevirtual #38                 // Method capacity:()I
      81: invokestatic  #142                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      84: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #166                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/transport/ThrottlerTransportAdapter$TokenBucket
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #175                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #38                 // Method capacity:()I
       8: invokestatic  #180                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: invokevirtual #97                 // Method tokensPerSecond:()D
      17: invokestatic  #184                // Method scala/runtime/Statics.doubleHash:(D)I
      20: invokestatic  #180                // Method scala/runtime/Statics.mix:(II)I
      23: istore_1
      24: iload_1
      25: aload_0
      26: invokevirtual #118                // Method nanoTimeOfLastSend:()J
      29: invokestatic  #187                // Method scala/runtime/Statics.longHash:(J)I
      32: invokestatic  #180                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #40                 // Method availableTokens:()I
      41: invokestatic  #180                // Method scala/runtime/Statics.mix:(II)I
      44: istore_1
      45: iload_1
      46: iconst_4
      47: invokestatic  #190                // Method scala/runtime/Statics.finalizeHash:(II)I
      50: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #166                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #194                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     89
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/transport/ThrottlerTransportAdapter$TokenBucket
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          93
      25: aload_1
      26: checkcast     #2                  // class akka/remote/transport/ThrottlerTransportAdapter$TokenBucket
      29: astore        4
      31: aload_0
      32: invokevirtual #38                 // Method capacity:()I
      35: aload         4
      37: invokevirtual #38                 // Method capacity:()I
      40: if_icmpne     85
      43: aload_0
      44: invokevirtual #97                 // Method tokensPerSecond:()D
      47: aload         4
      49: invokevirtual #97                 // Method tokensPerSecond:()D
      52: dcmpl
      53: ifne          85
      56: aload_0
      57: invokevirtual #118                // Method nanoTimeOfLastSend:()J
      60: aload         4
      62: invokevirtual #118                // Method nanoTimeOfLastSend:()J
      65: lcmp
      66: ifne          85
      69: aload_0
      70: invokevirtual #40                 // Method availableTokens:()I
      73: aload         4
      75: invokevirtual #40                 // Method availableTokens:()I
      78: if_icmpne     85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn

  public akka.remote.transport.ThrottlerTransportAdapter$TokenBucket(int, double, long, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field capacity:I
       5: aload_0
       6: dload_2
       7: putfield      #29                 // Field tokensPerSecond:D
      10: aload_0
      11: lload         4
      13: putfield      #32                 // Field nanoTimeOfLastSend:J
      16: aload_0
      17: iload         6
      19: putfield      #34                 // Field availableTokens:I
      22: aload_0
      23: invokespecial #198                // Method java/lang/Object."<init>":()V
      26: aload_0
      27: invokestatic  #204                // Method scala/Product$class.$init$:(Lscala/Product;)V
      30: return
}
