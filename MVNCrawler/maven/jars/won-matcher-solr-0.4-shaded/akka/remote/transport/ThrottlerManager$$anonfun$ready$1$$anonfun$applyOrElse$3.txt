Compiled from "ThrottlerTransportAdapter.scala"
public final class akka.remote.transport.ThrottlerManager$$anonfun$ready$1$$anonfun$applyOrElse$3 extends scala.runtime.AbstractFunction1<scala.Tuple2<akka.actor.Address, akka.remote.transport.ThrottlerHandle>, scala.concurrent.Future<akka.remote.transport.ThrottlerTransportAdapter$SetThrottleAck$>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.transport.ThrottlerManager$$anonfun$ready$1 $outer;

  private final akka.remote.transport.ThrottlerTransportAdapter$Direction direction$1;

  private final akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode mode$1;

  private final akka.actor.Address naked$1;

  private final scala.concurrent.Future ok$1;

  public final scala.concurrent.Future<akka.remote.transport.ThrottlerTransportAdapter$SetThrottleAck$> apply(scala.Tuple2<akka.actor.Address, akka.remote.transport.ThrottlerHandle>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        76
       6: aload_2
       7: invokevirtual #35                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #37                 // class akka/actor/Address
      13: astore_3
      14: aload_2
      15: invokevirtual #40                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #42                 // class akka/remote/transport/ThrottlerHandle
      21: astore        4
      23: aload_0
      24: getfield      #44                 // Field naked$1:Lakka/actor/Address;
      27: aload_3
      28: astore        5
      30: dup
      31: ifnonnull     43
      34: pop
      35: aload         5
      37: ifnull        51
      40: goto          76
      43: aload         5
      45: invokevirtual #50                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          76
      51: aload_0
      52: getfield      #52                 // Field $outer:Lakka/remote/transport/ThrottlerManager$$anonfun$ready$1;
      55: invokevirtual #56                 // Method akka/remote/transport/ThrottlerManager$$anonfun$ready$1.akka$remote$transport$ThrottlerManager$$anonfun$$$outer:()Lakka/remote/transport/ThrottlerManager;
      58: aload         4
      60: aload_0
      61: getfield      #58                 // Field mode$1:Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;
      64: aload_0
      65: getfield      #60                 // Field direction$1:Lakka/remote/transport/ThrottlerTransportAdapter$Direction;
      68: invokevirtual #66                 // Method akka/remote/transport/ThrottlerManager.akka$remote$transport$ThrottlerManager$$setMode:(Lakka/remote/transport/ThrottlerHandle;Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;Lakka/remote/transport/ThrottlerTransportAdapter$Direction;)Lscala/concurrent/Future;
      71: astore        6
      73: goto          82
      76: aload_0
      77: getfield      #68                 // Field ok$1:Lscala/concurrent/Future;
      80: astore        6
      82: aload         6
      84: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class scala/Tuple2
       5: invokevirtual #79                 // Method apply:(Lscala/Tuple2;)Lscala/concurrent/Future;
       8: areturn

  public akka.remote.transport.ThrottlerManager$$anonfun$ready$1$$anonfun$applyOrElse$3(akka.remote.transport.ThrottlerManager$$anonfun$ready$1, akka.remote.transport.ThrottlerTransportAdapter$Direction, akka.remote.transport.ThrottlerTransportAdapter$ThrottleMode, akka.actor.Address, scala.concurrent.Future);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #52                 // Field $outer:Lakka/remote/transport/ThrottlerManager$$anonfun$ready$1;
      11: aload_0
      12: aload_2
      13: putfield      #60                 // Field direction$1:Lakka/remote/transport/ThrottlerTransportAdapter$Direction;
      16: aload_0
      17: aload_3
      18: putfield      #58                 // Field mode$1:Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;
      21: aload_0
      22: aload         4
      24: putfield      #44                 // Field naked$1:Lakka/actor/Address;
      27: aload_0
      28: aload         5
      30: putfield      #68                 // Field ok$1:Lscala/concurrent/Future;
      33: aload_0
      34: invokespecial #86                 // Method scala/runtime/AbstractFunction1."<init>":()V
      37: return
}
