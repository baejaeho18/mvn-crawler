Compiled from "ThrottlerTransportAdapter.scala"
public final class akka.remote.transport.ThrottledAssociation$$anonfun$5 extends scala.runtime.AbstractPartialFunction<akka.actor.FSM$Event<akka.remote.transport.ThrottledAssociation$ThrottlerData>, akka.actor.FSM$State<akka.remote.transport.ThrottledAssociation$ThrottlerState, akka.remote.transport.ThrottledAssociation$ThrottlerData>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.transport.ThrottledAssociation $outer;

  public final <A1 extends akka.actor.FSM$Event<akka.remote.transport.ThrottledAssociation$ThrottlerData>, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        120
       6: aload_3
       7: invokevirtual #24                 // Method akka/actor/FSM$Event.event:()Ljava/lang/Object;
      10: astore        4
      12: aload         4
      14: instanceof    #26                 // class akka/remote/transport/ThrottlerManager$ListenerAndMode
      17: ifeq          120
      20: aload         4
      22: checkcast     #26                 // class akka/remote/transport/ThrottlerManager$ListenerAndMode
      25: astore        5
      27: aload         5
      29: invokevirtual #30                 // Method akka/remote/transport/ThrottlerManager$ListenerAndMode.listener:()Lakka/remote/transport/AssociationHandle$HandleEventListener;
      32: astore        6
      34: aload         5
      36: invokevirtual #34                 // Method akka/remote/transport/ThrottlerManager$ListenerAndMode.mode:()Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;
      39: astore        7
      41: aload         6
      43: ifnull        120
      46: aload         6
      48: astore        8
      50: aload         7
      52: ifnull        120
      55: aload         7
      57: astore        9
      59: aload_0
      60: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
      63: aload         8
      65: invokevirtual #40                 // Method akka/remote/transport/ThrottledAssociation.upstreamListener_$eq:(Lakka/remote/transport/AssociationHandle$HandleEventListener;)V
      68: aload_0
      69: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
      72: aload         9
      74: invokevirtual #44                 // Method akka/remote/transport/ThrottledAssociation.inboundThrottleMode_$eq:(Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;)V
      77: getstatic     #50                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      80: aload_0
      81: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
      84: invokevirtual #54                 // Method akka/remote/transport/ThrottledAssociation.self:()Lakka/actor/ActorRef;
      87: invokevirtual #58                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      90: getstatic     #63                 // Field akka/remote/transport/ThrottledAssociation$Dequeue$.MODULE$:Lakka/remote/transport/ThrottledAssociation$Dequeue$;
      93: aload_0
      94: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
      97: invokevirtual #54                 // Method akka/remote/transport/ThrottledAssociation.self:()Lakka/actor/ActorRef;
     100: invokeinterface #69,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     105: aload_0
     106: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
     109: getstatic     #74                 // Field akka/remote/transport/ThrottledAssociation$Throttling$.MODULE$:Lakka/remote/transport/ThrottledAssociation$Throttling$;
     112: invokevirtual #78                 // Method akka/remote/transport/ThrottledAssociation.goto:(Ljava/lang/Object;)Lakka/actor/FSM$State;
     115: astore        10
     117: goto          192
     120: aload_3
     121: ifnull        183
     124: aload_3
     125: invokevirtual #24                 // Method akka/actor/FSM$Event.event:()Ljava/lang/Object;
     128: astore        11
     130: aload         11
     132: instanceof    #80                 // class akka/remote/transport/AssociationHandle$InboundPayload
     135: ifeq          183
     138: aload         11
     140: checkcast     #80                 // class akka/remote/transport/AssociationHandle$InboundPayload
     143: astore        12
     145: aload         12
     147: invokevirtual #84                 // Method akka/remote/transport/AssociationHandle$InboundPayload.payload:()Lakka/util/ByteString;
     150: astore        13
     152: aload_0
     153: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
     156: aload_0
     157: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
     160: invokevirtual #88                 // Method akka/remote/transport/ThrottledAssociation.throttledMessages:()Lscala/collection/immutable/Queue;
     163: aload         13
     165: invokevirtual #94                 // Method scala/collection/immutable/Queue.enqueue:(Ljava/lang/Object;)Lscala/collection/immutable/Queue;
     168: invokevirtual #98                 // Method akka/remote/transport/ThrottledAssociation.throttledMessages_$eq:(Lscala/collection/immutable/Queue;)V
     171: aload_0
     172: getfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
     175: invokevirtual #102                // Method akka/remote/transport/ThrottledAssociation.stay:()Lakka/actor/FSM$State;
     178: astore        10
     180: goto          192
     183: aload_2
     184: aload_1
     185: invokeinterface #108,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     190: astore        10
     192: aload         10
     194: areturn

  public final boolean isDefinedAt(akka.actor.FSM$Event<akka.remote.transport.ThrottledAssociation$ThrottlerData>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        54
       6: aload_2
       7: invokevirtual #24                 // Method akka/actor/FSM$Event.event:()Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: instanceof    #26                 // class akka/remote/transport/ThrottlerManager$ListenerAndMode
      15: ifeq          54
      18: aload_3
      19: checkcast     #26                 // class akka/remote/transport/ThrottlerManager$ListenerAndMode
      22: astore        4
      24: aload         4
      26: invokevirtual #30                 // Method akka/remote/transport/ThrottlerManager$ListenerAndMode.listener:()Lakka/remote/transport/AssociationHandle$HandleEventListener;
      29: astore        5
      31: aload         4
      33: invokevirtual #34                 // Method akka/remote/transport/ThrottlerManager$ListenerAndMode.mode:()Lakka/remote/transport/ThrottlerTransportAdapter$ThrottleMode;
      36: astore        6
      38: aload         5
      40: ifnull        54
      43: aload         6
      45: ifnull        54
      48: iconst_1
      49: istore        7
      51: goto          81
      54: aload_2
      55: ifnull        78
      58: aload_2
      59: invokevirtual #24                 // Method akka/actor/FSM$Event.event:()Ljava/lang/Object;
      62: astore        8
      64: aload         8
      66: instanceof    #80                 // class akka/remote/transport/AssociationHandle$InboundPayload
      69: ifeq          78
      72: iconst_1
      73: istore        7
      75: goto          81
      78: iconst_0
      79: istore        7
      81: iload         7
      83: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class akka/actor/FSM$Event
       5: invokevirtual #125                // Method isDefinedAt:(Lakka/actor/FSM$Event;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class akka/actor/FSM$Event
       5: aload_2
       6: invokevirtual #130                // Method applyOrElse:(Lakka/actor/FSM$Event;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.remote.transport.ThrottledAssociation$$anonfun$5(akka.remote.transport.ThrottledAssociation);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #36                 // Field $outer:Lakka/remote/transport/ThrottledAssociation;
      11: aload_0
      12: invokespecial #135                // Method scala/runtime/AbstractPartialFunction."<init>":()V
      15: return
}
