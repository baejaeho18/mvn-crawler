Compiled from "TestTransport.scala"
public class akka.remote.transport.TestTransport$AssociationRegistry {
  private final java.util.concurrent.CopyOnWriteArrayList<akka.remote.transport.TestTransport$Activity> activityLog;

  private final java.util.concurrent.ConcurrentHashMap<akka.actor.Address, scala.Tuple2<akka.remote.transport.TestTransport, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>>> akka$remote$transport$TestTransport$AssociationRegistry$$transportTable;

  private final java.util.concurrent.ConcurrentHashMap<scala.Tuple2<akka.actor.Address, akka.actor.Address>, scala.Tuple2<akka.remote.transport.AssociationHandle$HandleEventListener, akka.remote.transport.AssociationHandle$HandleEventListener>> listenersTable;

  private java.util.concurrent.CopyOnWriteArrayList<akka.remote.transport.TestTransport$Activity> activityLog();
    Code:
       0: aload_0
       1: getfield      #16                 // Field activityLog:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public java.util.concurrent.ConcurrentHashMap<akka.actor.Address, scala.Tuple2<akka.remote.transport.TestTransport, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>>> akka$remote$transport$TestTransport$AssociationRegistry$$transportTable();
    Code:
       0: aload_0
       1: getfield      #21                 // Field akka$remote$transport$TestTransport$AssociationRegistry$$transportTable:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  private java.util.concurrent.ConcurrentHashMap<scala.Tuple2<akka.actor.Address, akka.actor.Address>, scala.Tuple2<akka.remote.transport.AssociationHandle$HandleEventListener, akka.remote.transport.AssociationHandle$HandleEventListener>> listenersTable();
    Code:
       0: aload_0
       1: getfield      #23                 // Field listenersTable:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public akka.remote.transport.AssociationHandle$HandleEventListener remoteListenerRelativeTo(akka.remote.transport.TestAssociationHandle, scala.Tuple2<akka.remote.transport.AssociationHandle$HandleEventListener, akka.remote.transport.AssociationHandle$HandleEventListener>);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: ifnull        43
       6: aload_3
       7: invokevirtual #31                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #33                 // class akka/remote/transport/AssociationHandle$HandleEventListener
      13: astore        4
      15: aload_3
      16: invokevirtual #36                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: checkcast     #33                 // class akka/remote/transport/AssociationHandle$HandleEventListener
      22: astore        5
      24: aload_1
      25: invokevirtual #42                 // Method akka/remote/transport/TestAssociationHandle.inbound:()Z
      28: ifeq          36
      31: aload         4
      33: goto          38
      36: aload         5
      38: astore        6
      40: aload         6
      42: areturn
      43: new           #44                 // class scala/MatchError
      46: dup
      47: aload_3
      48: invokespecial #48                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow

  public void logActivity(akka.remote.transport.TestTransport$Activity);
    Code:
       0: aload_0
       1: invokespecial #59                 // Method activityLog:()Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #65                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public scala.collection.Seq<akka.remote.transport.TestTransport$Activity> logSnapshot();
    Code:
       0: getstatic     #75                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: astore_1
       4: aload_0
       5: invokespecial #59                 // Method activityLog:()Ljava/util/concurrent/CopyOnWriteArrayList;
       8: invokevirtual #79                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          35
      21: aload_1
      22: aload_2
      23: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: invokevirtual #93                 // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      31: astore_1
      32: goto          12
      35: aload_1
      36: invokevirtual #97                 // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
      39: areturn

  public void clearLog();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method activityLog:()Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #106                // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
       7: return

  public void registerTransport(akka.remote.transport.TestTransport, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>);
    Code:
       0: aload_0
       1: invokevirtual #110                // Method akka$remote$transport$TestTransport$AssociationRegistry$$transportTable:()Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #116                // Method akka/remote/transport/TestTransport.localAddress:()Lakka/actor/Address;
       8: new           #27                 // class scala/Tuple2
      11: dup
      12: aload_1
      13: aload_2
      14: invokespecial #119                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      17: invokevirtual #125                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public boolean transportsReady(scala.collection.Seq<akka.actor.Address>);
    Code:
       0: aload_1
       1: new           #133                // class akka/remote/transport/TestTransport$AssociationRegistry$$anonfun$transportsReady$1
       4: dup
       5: aload_0
       6: invokespecial #136                // Method akka/remote/transport/TestTransport$AssociationRegistry$$anonfun$transportsReady$1."<init>":(Lakka/remote/transport/TestTransport$AssociationRegistry;)V
       9: invokeinterface #142,  2          // InterfaceMethod scala/collection/Seq.forall:(Lscala/Function1;)Z
      14: ireturn

  public void registerListenerPair(scala.Tuple2<akka.actor.Address, akka.actor.Address>, scala.Tuple2<akka.remote.transport.AssociationHandle$HandleEventListener, akka.remote.transport.AssociationHandle$HandleEventListener>);
    Code:
       0: aload_0
       1: invokespecial #148                // Method listenersTable:()Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #125                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public scala.Option<scala.Tuple2<akka.remote.transport.AssociationHandle$HandleEventListener, akka.remote.transport.AssociationHandle$HandleEventListener>> deregisterAssociation(scala.Tuple2<akka.actor.Address, akka.actor.Address>);
    Code:
       0: getstatic     #157                // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: invokespecial #148                // Method listenersTable:()Ljava/util/concurrent/ConcurrentHashMap;
       7: aload_1
       8: invokevirtual #161                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokevirtual #165                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      14: areturn

  public boolean existsAssociation(akka.actor.Address, akka.actor.Address);
    Code:
       0: aload_0
       1: invokespecial #148                // Method listenersTable:()Ljava/util/concurrent/ConcurrentHashMap;
       4: new           #27                 // class scala/Tuple2
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #119                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: invokevirtual #170                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public scala.Option<akka.remote.transport.AssociationHandle$HandleEventListener> getRemoteReadHandlerFor(akka.remote.transport.TestAssociationHandle);
    Code:
       0: getstatic     #157                // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: invokespecial #148                // Method listenersTable:()Ljava/util/concurrent/ConcurrentHashMap;
       7: aload_1
       8: invokevirtual #178                // Method akka/remote/transport/TestAssociationHandle.key:()Lscala/Tuple2;
      11: invokevirtual #181                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #165                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      17: new           #183                // class akka/remote/transport/TestTransport$AssociationRegistry$$anonfun$getRemoteReadHandlerFor$1
      20: dup
      21: aload_0
      22: aload_1
      23: invokespecial #186                // Method akka/remote/transport/TestTransport$AssociationRegistry$$anonfun$getRemoteReadHandlerFor$1."<init>":(Lakka/remote/transport/TestTransport$AssociationRegistry;Lakka/remote/transport/TestAssociationHandle;)V
      26: invokevirtual #192                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      29: areturn

  public scala.Option<scala.Tuple2<akka.remote.transport.TestTransport, scala.concurrent.Future<akka.remote.transport.Transport$AssociationEventListener>>> transportFor(akka.actor.Address);
    Code:
       0: getstatic     #157                // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: invokevirtual #110                // Method akka$remote$transport$TestTransport$AssociationRegistry$$transportTable:()Ljava/util/concurrent/ConcurrentHashMap;
       7: aload_1
       8: invokevirtual #181                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokevirtual #165                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      14: areturn

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method clearLog:()V
       4: aload_0
       5: invokevirtual #110                // Method akka$remote$transport$TestTransport$AssociationRegistry$$transportTable:()Ljava/util/concurrent/ConcurrentHashMap;
       8: invokevirtual #200                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      11: aload_0
      12: invokespecial #148                // Method listenersTable:()Ljava/util/concurrent/ConcurrentHashMap;
      15: invokevirtual #200                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      18: return

  public akka.remote.transport.TestTransport$AssociationRegistry();
    Code:
       0: aload_0
       1: invokespecial #202                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #61                 // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #203                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #16                 // Field activityLog:Ljava/util/concurrent/CopyOnWriteArrayList;
      15: aload_0
      16: new           #121                // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #204                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #21                 // Field akka$remote$transport$TestTransport$AssociationRegistry$$transportTable:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_0
      27: new           #121                // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #204                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #23                 // Field listenersTable:Ljava/util/concurrent/ConcurrentHashMap;
      37: return
}
