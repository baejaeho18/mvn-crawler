Compiled from "AkkaProtocolTransport.scala"
public class akka.remote.transport.AkkaProtocolTransport extends akka.remote.transport.ActorTransportAdapter {
  private final akka.actor.ActorSystem system;

  private final akka.remote.transport.AkkaProtocolSettings settings;

  private final akka.remote.transport.AkkaPduCodec codec;

  private final java.lang.String addedSchemeIdentifier;

  private final int maximumOverhead;

  public static java.util.concurrent.atomic.AtomicInteger UniqueId();
    Code:
       0: getstatic     #16                 // Field akka/remote/transport/AkkaProtocolTransport$.MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
       3: invokevirtual #18                 // Method akka/remote/transport/AkkaProtocolTransport$.UniqueId:()Ljava/util/concurrent/atomic/AtomicInteger;
       6: areturn

  public static int AkkaOverhead();
    Code:
       0: getstatic     #16                 // Field akka/remote/transport/AkkaProtocolTransport$.MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
       3: invokevirtual #22                 // Method akka/remote/transport/AkkaProtocolTransport$.AkkaOverhead:()I
       6: ireturn

  public static java.lang.String AkkaScheme();
    Code:
       0: getstatic     #16                 // Field akka/remote/transport/AkkaProtocolTransport$.MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
       3: invokevirtual #26                 // Method akka/remote/transport/AkkaProtocolTransport$.AkkaScheme:()Ljava/lang/String;
       6: areturn

  private akka.actor.ActorSystem system();
    Code:
       0: aload_0
       1: getfield      #39                 // Field system:Lakka/actor/ActorSystem;
       4: areturn

  private akka.remote.transport.AkkaProtocolSettings settings();
    Code:
       0: aload_0
       1: getfield      #44                 // Field settings:Lakka/remote/transport/AkkaProtocolSettings;
       4: areturn

  private akka.remote.transport.AkkaPduCodec codec();
    Code:
       0: aload_0
       1: getfield      #47                 // Field codec:Lakka/remote/transport/AkkaPduCodec;
       4: areturn

  public java.lang.String addedSchemeIdentifier();
    Code:
       0: aload_0
       1: getfield      #49                 // Field addedSchemeIdentifier:Ljava/lang/String;
       4: areturn

  public scala.concurrent.Future<java.lang.Object> managementCommand(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method akka/remote/transport/AbstractTransportAdapter.wrappedTransport:()Lakka/remote/transport/Transport;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod akka/remote/transport/Transport.managementCommand:(Ljava/lang/Object;)Lscala/concurrent/Future;
      10: areturn

  public scala.concurrent.Future<akka.remote.transport.AkkaProtocolHandle> associate(akka.actor.Address, scala.Option<java.lang.Object>);
    Code:
       0: getstatic     #70                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #74                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore_3
       7: getstatic     #79                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      10: aload_0
      11: invokevirtual #83                 // Method manager:()Lakka/actor/ActorRef;
      14: invokevirtual #87                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      17: astore        4
      19: new           #89                 // class akka/remote/transport/AkkaProtocolTransport$AssociateUnderlyingRefuseUid
      22: dup
      23: aload_0
      24: aload_1
      25: invokevirtual #93                 // Method removeScheme:(Lakka/actor/Address;)Lakka/actor/Address;
      28: aload_3
      29: aload_2
      30: invokespecial #97                 // Method akka/remote/transport/AkkaProtocolTransport$AssociateUnderlyingRefuseUid."<init>":(Lakka/actor/Address;Lscala/concurrent/Promise;Lscala/Option;)V
      33: astore        5
      35: aload         4
      37: aload         5
      39: invokeinterface #103,  2          // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      44: astore        6
      46: aload         4
      48: aload         5
      50: aload         6
      52: invokeinterface #107,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      57: aload_3
      58: invokeinterface #113,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      63: getstatic     #118                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      66: ldc           #120                // class akka/remote/transport/AkkaProtocolHandle
      68: invokevirtual #123                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      71: invokeinterface #129,  2          // InterfaceMethod scala/concurrent/Future.mapTo:(Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
      76: areturn

  public int maximumOverhead();
    Code:
       0: aload_0
       1: getfield      #143                // Field maximumOverhead:I
       4: ireturn

  public java.lang.String managerName();
    Code:
       0: new           #146                // class scala/StringContext
       3: dup
       4: getstatic     #151                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_3
       8: anewarray     #153                // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #155                // String akkaprotocolmanager.
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #157                // String
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #157                // String
      25: aastore
      26: checkcast     #159                // class "[Ljava/lang/Object;"
      29: invokevirtual #163                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokespecial #166                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      35: getstatic     #151                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      38: iconst_2
      39: anewarray     #168                // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: invokespecial #57                 // Method akka/remote/transport/AbstractTransportAdapter.wrappedTransport:()Lakka/remote/transport/Transport;
      48: invokeinterface #171,  1          // InterfaceMethod akka/remote/transport/Transport.schemeIdentifier:()Ljava/lang/String;
      53: aastore
      54: dup
      55: iconst_1
      56: getstatic     #16                 // Field akka/remote/transport/AkkaProtocolTransport$.MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
      59: invokevirtual #18                 // Method akka/remote/transport/AkkaProtocolTransport$.UniqueId:()Ljava/util/concurrent/atomic/AtomicInteger;
      62: invokevirtual #176                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      65: invokestatic  #182                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      68: aastore
      69: invokevirtual #186                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      72: invokevirtual #190                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      75: areturn

  public akka.actor.Props managerProps();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method akka/remote/transport/AbstractTransportAdapter.wrappedTransport:()Lakka/remote/transport/Transport;
       4: astore_1
       5: aload_0
       6: invokespecial #194                // Method settings:()Lakka/remote/transport/AkkaProtocolSettings;
       9: astore_2
      10: getstatic     #199                // Field akka/actor/Props$.MODULE$:Lakka/actor/Props$;
      13: ldc           #201                // class akka/remote/transport/AkkaProtocolManager
      15: getstatic     #151                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: iconst_2
      19: anewarray     #168                // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: dup
      27: iconst_1
      28: aload_2
      29: aastore
      30: invokevirtual #186                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      33: invokevirtual #204                // Method akka/actor/Props$.apply:(Ljava/lang/Class;Lscala/collection/Seq;)Lakka/actor/Props;
      36: getstatic     #209                // Field akka/actor/Deploy$.MODULE$:Lakka/actor/Deploy$;
      39: invokevirtual #213                // Method akka/actor/Deploy$.local:()Lakka/actor/Deploy;
      42: invokevirtual #219                // Method akka/actor/Props.withDeploy:(Lakka/actor/Deploy;)Lakka/actor/Props;
      45: areturn

  public akka.remote.transport.AkkaProtocolTransport(akka.remote.transport.Transport, akka.actor.ActorSystem, akka.remote.transport.AkkaProtocolSettings, akka.remote.transport.AkkaPduCodec);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #39                 // Field system:Lakka/actor/ActorSystem;
       5: aload_0
       6: aload_3
       7: putfield      #44                 // Field settings:Lakka/remote/transport/AkkaProtocolSettings;
      10: aload_0
      11: aload         4
      13: putfield      #47                 // Field codec:Lakka/remote/transport/AkkaPduCodec;
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokespecial #225                // Method akka/remote/transport/ActorTransportAdapter."<init>":(Lakka/remote/transport/Transport;Lakka/actor/ActorSystem;)V
      22: aload_0
      23: getstatic     #16                 // Field akka/remote/transport/AkkaProtocolTransport$.MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
      26: invokevirtual #26                 // Method akka/remote/transport/AkkaProtocolTransport$.AkkaScheme:()Ljava/lang/String;
      29: putfield      #49                 // Field addedSchemeIdentifier:Ljava/lang/String;
      32: aload_0
      33: getstatic     #16                 // Field akka/remote/transport/AkkaProtocolTransport$.MODULE$:Lakka/remote/transport/AkkaProtocolTransport$;
      36: invokevirtual #22                 // Method akka/remote/transport/AkkaProtocolTransport$.AkkaOverhead:()I
      39: putfield      #143                // Field maximumOverhead:I
      42: return
}
