Compiled from "AkkaProtocolTransport.scala"
public class akka.remote.transport.ProtocolStateActor implements akka.actor.FSM<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.dispatch.RequiresMessageQueue<akka.dispatch.UnboundedMessageQueueSemantics> {
  private final akka.remote.transport.HandshakeInfo akka$remote$transport$ProtocolStateActor$$localHandshakeInfo;

  private final scala.Option<java.lang.Object> akka$remote$transport$ProtocolStateActor$$refuseUid;

  private final akka.remote.transport.AkkaProtocolSettings akka$remote$transport$ProtocolStateActor$$settings;

  private final akka.remote.transport.AkkaPduCodec codec;

  private final akka.remote.FailureDetector akka$remote$transport$ProtocolStateActor$$failureDetector;

  private final akka.actor.Address localAddress;

  private final java.lang.String handshakeTimerKey;

  private final akka.actor.FSM$Event$ Event;

  private final akka.actor.FSM$StopEvent$ StopEvent;

  private final akka.actor.FSM$$minus$greater$ $minus$greater;

  private final akka.actor.FSM$StateTimeout$ StateTimeout;

  private akka.actor.FSM$State<java.lang.Object, java.lang.Object> akka$actor$FSM$$currentState;

  private scala.Option<akka.actor.Cancellable> akka$actor$FSM$$timeoutFuture;

  private akka.actor.FSM$State<java.lang.Object, java.lang.Object> akka$actor$FSM$$nextState;

  private long akka$actor$FSM$$generation;

  private final scala.collection.mutable.Map<java.lang.String, akka.actor.FSM$Timer> akka$actor$FSM$$timers;

  private final scala.collection.Iterator<java.lang.Object> akka$actor$FSM$$timerGen;

  private final scala.collection.mutable.Map<java.lang.Object, scala.PartialFunction<akka.actor.FSM$Event<java.lang.Object>, akka.actor.FSM$State<java.lang.Object, java.lang.Object>>> akka$actor$FSM$$stateFunctions;

  private final scala.collection.mutable.Map<java.lang.Object, scala.Option<scala.concurrent.duration.FiniteDuration>> akka$actor$FSM$$stateTimeouts;

  private final scala.PartialFunction<akka.actor.FSM$Event<java.lang.Object>, akka.actor.FSM$State<java.lang.Object, java.lang.Object>> akka$actor$FSM$$handleEventDefault;

  private scala.PartialFunction<akka.actor.FSM$Event<java.lang.Object>, akka.actor.FSM$State<java.lang.Object, java.lang.Object>> akka$actor$FSM$$handleEvent;

  private scala.PartialFunction<akka.actor.FSM$StopEvent<java.lang.Object, java.lang.Object>, scala.runtime.BoxedUnit> akka$actor$FSM$$terminateEvent;

  private scala.collection.immutable.List<scala.PartialFunction<scala.Tuple2<java.lang.Object, java.lang.Object>, scala.runtime.BoxedUnit>> akka$actor$FSM$$transitionEvent;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final java.util.Set<akka.actor.ActorRef> listeners;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.actor.FSM$Event$ Event();
    Code:
       0: aload_0
       1: getfield      #75                 // Field Event:Lakka/actor/FSM$Event$;
       4: areturn

  public akka.actor.FSM$StopEvent$ StopEvent();
    Code:
       0: aload_0
       1: getfield      #80                 // Field StopEvent:Lakka/actor/FSM$StopEvent$;
       4: areturn

  public akka.actor.FSM$$minus$greater$ $minus$greater();
    Code:
       0: aload_0
       1: getfield      #83                 // Field $minus$greater:Lakka/actor/FSM$$minus$greater$;
       4: areturn

  public akka.actor.FSM$StateTimeout$ StateTimeout();
    Code:
       0: aload_0
       1: getfield      #86                 // Field StateTimeout:Lakka/actor/FSM$StateTimeout$;
       4: areturn

  public akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData> akka$actor$FSM$$currentState();
    Code:
       0: aload_0
       1: getfield      #89                 // Field akka$actor$FSM$$currentState:Lakka/actor/FSM$State;
       4: areturn

  public void akka$actor$FSM$$currentState_$eq(akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field akka$actor$FSM$$currentState:Lakka/actor/FSM$State;
       5: return

  public scala.Option<akka.actor.Cancellable> akka$actor$FSM$$timeoutFuture();
    Code:
       0: aload_0
       1: getfield      #95                 // Field akka$actor$FSM$$timeoutFuture:Lscala/Option;
       4: areturn

  public void akka$actor$FSM$$timeoutFuture_$eq(scala.Option<akka.actor.Cancellable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field akka$actor$FSM$$timeoutFuture:Lscala/Option;
       5: return

  public akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData> akka$actor$FSM$$nextState();
    Code:
       0: aload_0
       1: getfield      #99                 // Field akka$actor$FSM$$nextState:Lakka/actor/FSM$State;
       4: areturn

  public void akka$actor$FSM$$nextState_$eq(akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #99                 // Field akka$actor$FSM$$nextState:Lakka/actor/FSM$State;
       5: return

  public long akka$actor$FSM$$generation();
    Code:
       0: aload_0
       1: getfield      #103                // Field akka$actor$FSM$$generation:J
       4: lreturn

  public void akka$actor$FSM$$generation_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #103                // Field akka$actor$FSM$$generation:J
       5: return

  public scala.collection.mutable.Map<java.lang.String, akka.actor.FSM$Timer> akka$actor$FSM$$timers();
    Code:
       0: aload_0
       1: getfield      #108                // Field akka$actor$FSM$$timers:Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Iterator<java.lang.Object> akka$actor$FSM$$timerGen();
    Code:
       0: aload_0
       1: getfield      #111                // Field akka$actor$FSM$$timerGen:Lscala/collection/Iterator;
       4: areturn

  public scala.collection.mutable.Map<akka.remote.transport.ProtocolStateActor$AssociationState, scala.PartialFunction<akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>>> akka$actor$FSM$$stateFunctions();
    Code:
       0: aload_0
       1: getfield      #113                // Field akka$actor$FSM$$stateFunctions:Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<akka.remote.transport.ProtocolStateActor$AssociationState, scala.Option<scala.concurrent.duration.FiniteDuration>> akka$actor$FSM$$stateTimeouts();
    Code:
       0: aload_0
       1: getfield      #115                // Field akka$actor$FSM$$stateTimeouts:Lscala/collection/mutable/Map;
       4: areturn

  public scala.PartialFunction<akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>> akka$actor$FSM$$handleEventDefault();
    Code:
       0: aload_0
       1: getfield      #118                // Field akka$actor$FSM$$handleEventDefault:Lscala/PartialFunction;
       4: areturn

  public scala.PartialFunction<akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>> akka$actor$FSM$$handleEvent();
    Code:
       0: aload_0
       1: getfield      #120                // Field akka$actor$FSM$$handleEvent:Lscala/PartialFunction;
       4: areturn

  public void akka$actor$FSM$$handleEvent_$eq(scala.PartialFunction<akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #120                // Field akka$actor$FSM$$handleEvent:Lscala/PartialFunction;
       5: return

  public scala.PartialFunction<akka.actor.FSM$StopEvent<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>, scala.runtime.BoxedUnit> akka$actor$FSM$$terminateEvent();
    Code:
       0: aload_0
       1: getfield      #124                // Field akka$actor$FSM$$terminateEvent:Lscala/PartialFunction;
       4: areturn

  public void akka$actor$FSM$$terminateEvent_$eq(scala.PartialFunction<akka.actor.FSM$StopEvent<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #124                // Field akka$actor$FSM$$terminateEvent:Lscala/PartialFunction;
       5: return

  public scala.collection.immutable.List<scala.PartialFunction<scala.Tuple2<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$AssociationState>, scala.runtime.BoxedUnit>> akka$actor$FSM$$transitionEvent();
    Code:
       0: aload_0
       1: getfield      #128                // Field akka$actor$FSM$$transitionEvent:Lscala/collection/immutable/List;
       4: areturn

  public void akka$actor$FSM$$transitionEvent_$eq(scala.collection.immutable.List<scala.PartialFunction<scala.Tuple2<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$AssociationState>, scala.runtime.BoxedUnit>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #128                // Field akka$actor$FSM$$transitionEvent:Lscala/collection/immutable/List;
       5: return

  public void akka$actor$FSM$$super$postStop();
    Code:
       0: aload_0
       1: invokestatic  #138                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void akka$actor$FSM$_setter_$Event_$eq(akka.actor.FSM$Event$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field Event:Lakka/actor/FSM$Event$;
       5: return

  public void akka$actor$FSM$_setter_$StopEvent_$eq(akka.actor.FSM$StopEvent$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field StopEvent:Lakka/actor/FSM$StopEvent$;
       5: return

  public void akka$actor$FSM$_setter_$$minus$greater_$eq(akka.actor.FSM$$minus$greater$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field $minus$greater:Lakka/actor/FSM$$minus$greater$;
       5: return

  public void akka$actor$FSM$_setter_$StateTimeout_$eq(akka.actor.FSM$StateTimeout$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field StateTimeout:Lakka/actor/FSM$StateTimeout$;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$timers_$eq(scala.collection.mutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field akka$actor$FSM$$timers:Lscala/collection/mutable/Map;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$timerGen_$eq(scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field akka$actor$FSM$$timerGen:Lscala/collection/Iterator;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$stateFunctions_$eq(scala.collection.mutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field akka$actor$FSM$$stateFunctions:Lscala/collection/mutable/Map;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$stateTimeouts_$eq(scala.collection.mutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field akka$actor$FSM$$stateTimeouts:Lscala/collection/mutable/Map;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$handleEventDefault_$eq(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field akka$actor$FSM$$handleEventDefault:Lscala/PartialFunction;
       5: return

  public final void when(java.lang.Object, scala.concurrent.duration.FiniteDuration, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #160                // Method akka/actor/FSM$class.when:(Lakka/actor/FSM;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
       7: return

  public final void startWith(java.lang.Object, java.lang.Object, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #170                // Method akka/actor/FSM$class.startWith:(Lakka/actor/FSM;Ljava/lang/Object;Ljava/lang/Object;Lscala/Option;)V
       7: return

  public final akka.actor.FSM$State goto(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // Method akka/actor/FSM$class.goto:(Lakka/actor/FSM;Ljava/lang/Object;)Lakka/actor/FSM$State;
       5: areturn

  public final akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData> stay();
    Code:
       0: aload_0
       1: invokestatic  #182                // Method akka/actor/FSM$class.stay:(Lakka/actor/FSM;)Lakka/actor/FSM$State;
       4: areturn

  public final akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData> stop();
    Code:
       0: aload_0
       1: invokestatic  #185                // Method akka/actor/FSM$class.stop:(Lakka/actor/FSM;)Lakka/actor/FSM$State;
       4: areturn

  public final akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData> stop(akka.actor.FSM$Reason);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // Method akka/actor/FSM$class.stop:(Lakka/actor/FSM;Lakka/actor/FSM$Reason;)Lakka/actor/FSM$State;
       5: areturn

  public final akka.actor.FSM$State stop(akka.actor.FSM$Reason, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #195                // Method akka/actor/FSM$class.stop:(Lakka/actor/FSM;Lakka/actor/FSM$Reason;Ljava/lang/Object;)Lakka/actor/FSM$State;
       6: areturn

  public final akka.actor.FSM<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>.TransformHelper transform(scala.PartialFunction<akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // Method akka/actor/FSM$class.transform:(Lakka/actor/FSM;Lscala/PartialFunction;)Lakka/actor/FSM$TransformHelper;
       5: areturn

  public final void setTimer(java.lang.String, java.lang.Object, scala.concurrent.duration.FiniteDuration, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokestatic  #206                // Method akka/actor/FSM$class.setTimer:(Lakka/actor/FSM;Ljava/lang/String;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Z)V
       9: return

  public final void cancelTimer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #215                // Method akka/actor/FSM$class.cancelTimer:(Lakka/actor/FSM;Ljava/lang/String;)V
       5: return

  public final boolean isTimerActive(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method akka/actor/FSM$class.isTimerActive:(Lakka/actor/FSM;Ljava/lang/String;)Z
       5: ireturn

  public final void setStateTimeout(java.lang.Object, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #225                // Method akka/actor/FSM$class.setStateTimeout:(Lakka/actor/FSM;Ljava/lang/Object;Lscala/Option;)V
       6: return

  public final boolean isStateTimerActive();
    Code:
       0: aload_0
       1: invokestatic  #231                // Method akka/actor/FSM$class.isStateTimerActive:(Lakka/actor/FSM;)Z
       4: ireturn

  public final void onTransition(scala.PartialFunction<scala.Tuple2<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$AssociationState>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // Method akka/actor/FSM$class.onTransition:(Lakka/actor/FSM;Lscala/PartialFunction;)V
       5: return

  public final scala.PartialFunction<scala.Tuple2<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$AssociationState>, scala.runtime.BoxedUnit> total2pf(scala.Function2<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$AssociationState, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method akka/actor/FSM$class.total2pf:(Lakka/actor/FSM;Lscala/Function2;)Lscala/PartialFunction;
       5: areturn

  public final void onTermination(scala.PartialFunction<akka.actor.FSM$StopEvent<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #245                // Method akka/actor/FSM$class.onTermination:(Lakka/actor/FSM;Lscala/PartialFunction;)V
       5: return

  public final void whenUnhandled(scala.PartialFunction<akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #249                // Method akka/actor/FSM$class.whenUnhandled:(Lakka/actor/FSM;Lscala/PartialFunction;)V
       5: return

  public final void initialize();
    Code:
       0: aload_0
       1: invokestatic  #253                // Method akka/actor/FSM$class.initialize:(Lakka/actor/FSM;)V
       4: return

  public final java.lang.Object stateName();
    Code:
       0: aload_0
       1: invokestatic  #257                // Method akka/actor/FSM$class.stateName:(Lakka/actor/FSM;)Ljava/lang/Object;
       4: areturn

  public final java.lang.Object stateData();
    Code:
       0: aload_0
       1: invokestatic  #259                // Method akka/actor/FSM$class.stateData:(Lakka/actor/FSM;)Ljava/lang/Object;
       4: areturn

  public final java.lang.Object nextStateData();
    Code:
       0: aload_0
       1: invokestatic  #262                // Method akka/actor/FSM$class.nextStateData:(Lakka/actor/FSM;)Ljava/lang/Object;
       4: areturn

  public boolean debugEvent();
    Code:
       0: aload_0
       1: invokestatic  #265                // Method akka/actor/FSM$class.debugEvent:(Lakka/actor/FSM;)Z
       4: ireturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: aload_0
       1: invokestatic  #269                // Method akka/actor/FSM$class.receive:(Lakka/actor/FSM;)Lscala/PartialFunction;
       4: areturn

  public void processEvent(akka.actor.FSM$Event<akka.remote.transport.ProtocolStateActor$ProtocolStateData>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #274                // Method akka/actor/FSM$class.processEvent:(Lakka/actor/FSM;Lakka/actor/FSM$Event;Ljava/lang/Object;)V
       6: return

  public void applyState(akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #281                // Method akka/actor/FSM$class.applyState:(Lakka/actor/FSM;Lakka/actor/FSM$State;)V
       5: return

  public void makeTransition(akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #285                // Method akka/actor/FSM$class.makeTransition:(Lakka/actor/FSM;Lakka/actor/FSM$State;)V
       5: return

  public final scala.concurrent.duration.FiniteDuration when$default$2();
    Code:
       0: aload_0
       1: invokestatic  #290                // Method akka/actor/FSM$class.when$default$2:(Lakka/actor/FSM;)Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public final scala.Option<scala.concurrent.duration.FiniteDuration> startWith$default$3();
    Code:
       0: aload_0
       1: invokestatic  #294                // Method akka/actor/FSM$class.startWith$default$3:(Lakka/actor/FSM;)Lscala/Option;
       4: areturn

  public final boolean setTimer$default$4();
    Code:
       0: aload_0
       1: invokestatic  #297                // Method akka/actor/FSM$class.setTimer$default$4:(Lakka/actor/FSM;)Z
       4: ireturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #300                // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #300                // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #308                // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public java.util.Set<akka.actor.ActorRef> listeners();
    Code:
       0: aload_0
       1: getfield      #311                // Field listeners:Ljava/util/Set;
       4: areturn

  public void akka$routing$Listeners$_setter_$listeners_$eq(java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #311                // Field listeners:Ljava/util/Set;
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> listenerManagement();
    Code:
       0: aload_0
       1: invokestatic  #319                // Method akka/routing/Listeners$class.listenerManagement:(Lakka/routing/Listeners;)Lscala/PartialFunction;
       4: areturn

  public void gossip(java.lang.Object, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // Method akka/routing/Listeners$class.gossip:(Lakka/routing/Listeners;Ljava/lang/Object;Lakka/actor/ActorRef;)V
       6: return

  public akka.actor.ActorRef gossip$default$2(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // Method akka/routing/Listeners$class.gossip$default$2:(Lakka/routing/Listeners;Ljava/lang/Object;)Lakka/actor/ActorRef;
       5: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #333                // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #336                // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #333                // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #336                // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #343                // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #348                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #351                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #354                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #359                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #366                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #371                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #376                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #379                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #382                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.remote.transport.HandshakeInfo akka$remote$transport$ProtocolStateActor$$localHandshakeInfo();
    Code:
       0: aload_0
       1: getfield      #390                // Field akka$remote$transport$ProtocolStateActor$$localHandshakeInfo:Lakka/remote/transport/HandshakeInfo;
       4: areturn

  public scala.Option<java.lang.Object> akka$remote$transport$ProtocolStateActor$$refuseUid();
    Code:
       0: aload_0
       1: getfield      #392                // Field akka$remote$transport$ProtocolStateActor$$refuseUid:Lscala/Option;
       4: areturn

  public akka.remote.transport.AkkaProtocolSettings akka$remote$transport$ProtocolStateActor$$settings();
    Code:
       0: aload_0
       1: getfield      #395                // Field akka$remote$transport$ProtocolStateActor$$settings:Lakka/remote/transport/AkkaProtocolSettings;
       4: areturn

  private akka.remote.transport.AkkaPduCodec codec();
    Code:
       0: aload_0
       1: getfield      #398                // Field codec:Lakka/remote/transport/AkkaPduCodec;
       4: areturn

  public akka.remote.FailureDetector akka$remote$transport$ProtocolStateActor$$failureDetector();
    Code:
       0: aload_0
       1: getfield      #401                // Field akka$remote$transport$ProtocolStateActor$$failureDetector:Lakka/remote/FailureDetector;
       4: areturn

  public akka.actor.Address localAddress();
    Code:
       0: aload_0
       1: getfield      #404                // Field localAddress:Lakka/actor/Address;
       4: areturn

  public java.lang.String handshakeTimerKey();
    Code:
       0: aload_0
       1: getfield      #407                // Field handshakeTimerKey:Ljava/lang/String;
       4: areturn

  public void akka$remote$transport$ProtocolStateActor$$initHeartbeatTimer();
    Code:
       0: aload_0
       1: ldc_w         #410                // String heartbeat-timer
       4: getstatic     #416                // Field akka/remote/transport/ProtocolStateActor$HeartbeatTimer$.MODULE$:Lakka/remote/transport/ProtocolStateActor$HeartbeatTimer$;
       7: aload_0
       8: invokevirtual #418                // Method akka$remote$transport$ProtocolStateActor$$settings:()Lakka/remote/transport/AkkaProtocolSettings;
      11: invokevirtual #423                // Method akka/remote/transport/AkkaProtocolSettings.TransportHeartBeatInterval:()Lscala/concurrent/duration/FiniteDuration;
      14: iconst_1
      15: invokevirtual #425                // Method setTimer:(Ljava/lang/String;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Z)V
      18: return

  private void initHandshakeTimer();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #428                // Method handshakeTimerKey:()Ljava/lang/String;
       5: getstatic     #433                // Field akka/remote/transport/ProtocolStateActor$HandshakeTimer$.MODULE$:Lakka/remote/transport/ProtocolStateActor$HandshakeTimer$;
       8: aload_0
       9: invokevirtual #418                // Method akka$remote$transport$ProtocolStateActor$$settings:()Lakka/remote/transport/AkkaProtocolSettings;
      12: invokevirtual #436                // Method akka/remote/transport/AkkaProtocolSettings.HandshakeTimeout:()Lscala/concurrent/duration/FiniteDuration;
      15: iconst_0
      16: invokevirtual #425                // Method setTimer:(Ljava/lang/String;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Z)V
      19: return

  public akka.actor.FSM$State<akka.remote.transport.ProtocolStateActor$AssociationState, akka.remote.transport.ProtocolStateActor$ProtocolStateData> akka$remote$transport$ProtocolStateActor$$handleTimers(akka.remote.transport.AssociationHandle);
    Code:
       0: aload_0
       1: invokevirtual #440                // Method akka$remote$transport$ProtocolStateActor$$failureDetector:()Lakka/remote/FailureDetector;
       4: invokeinterface #445,  1          // InterfaceMethod akka/remote/FailureDetector.isAvailable:()Z
       9: ifeq          25
      12: aload_0
      13: aload_1
      14: invokespecial #449                // Method sendHeartbeat:(Lakka/remote/transport/AssociationHandle;)Z
      17: pop
      18: aload_0
      19: invokevirtual #451                // Method stay:()Lakka/actor/FSM$State;
      22: goto          151
      25: aload_0
      26: aload_1
      27: getstatic     #456                // Field akka/remote/transport/AssociationHandle$Unknown$.MODULE$:Lakka/remote/transport/AssociationHandle$Unknown$;
      30: invokevirtual #460                // Method akka$remote$transport$ProtocolStateActor$$sendDisassociate:(Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/AssociationHandle$DisassociateInfo;)V
      33: aload_0
      34: new           #462                // class akka/actor/FSM$Failure
      37: dup
      38: new           #464                // class akka/remote/transport/ProtocolStateActor$TimeoutReason
      41: dup
      42: new           #466                // class scala/collection/mutable/StringBuilder
      45: dup
      46: invokespecial #469                // Method scala/collection/mutable/StringBuilder."<init>":()V
      49: new           #471                // class scala/StringContext
      52: dup
      53: getstatic     #476                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      56: iconst_1
      57: anewarray     #478                // class java/lang/String
      60: dup
      61: iconst_0
      62: ldc_w         #480                // String No response from remote.
      65: aastore
      66: checkcast     #482                // class "[Ljava/lang/Object;"
      69: invokevirtual #486                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      72: invokespecial #489                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      75: getstatic     #494                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      78: invokevirtual #498                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      81: invokevirtual #502                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      84: new           #471                // class scala/StringContext
      87: dup
      88: getstatic     #476                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      91: iconst_2
      92: anewarray     #478                // class java/lang/String
      95: dup
      96: iconst_0
      97: ldc_w         #504                // String Transport failure detector triggered. (internal state was
     100: aastore
     101: dup
     102: iconst_1
     103: ldc_w         #506                // String )
     106: aastore
     107: checkcast     #482                // class "[Ljava/lang/Object;"
     110: invokevirtual #486                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     113: invokespecial #489                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     116: getstatic     #476                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     119: iconst_1
     120: anewarray     #5                  // class java/lang/Object
     123: dup
     124: iconst_0
     125: aload_0
     126: invokevirtual #508                // Method stateName:()Ljava/lang/Object;
     129: aastore
     130: invokevirtual #512                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     133: invokevirtual #498                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     136: invokevirtual #502                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     139: invokevirtual #515                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #517                // Method akka/remote/transport/ProtocolStateActor$TimeoutReason."<init>":(Ljava/lang/String;)V
     145: invokespecial #519                // Method akka/actor/FSM$Failure."<init>":(Ljava/lang/Object;)V
     148: invokevirtual #521                // Method stop:(Lakka/actor/FSM$Reason;)Lakka/actor/FSM$State;
     151: areturn

  public java.lang.String akka$remote$transport$ProtocolStateActor$$safeClassName(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnonnull     13
       6: ldc_w         #529                // String null
       9: astore_3
      10: goto          21
      13: aload_1
      14: invokevirtual #533                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #538                // Method java/lang/Class.getName:()Ljava/lang/String;
      20: astore_3
      21: aload_3
      22: areturn

  public void postStop();
    Code:
       0: aload_0
       1: ldc_w         #410                // String heartbeat-timer
       4: invokevirtual #541                // Method cancelTimer:(Ljava/lang/String;)V
       7: aload_0
       8: invokestatic  #543                // Method akka/actor/FSM$class.postStop:(Lakka/actor/FSM;)V
      11: return

  public java.lang.Exception akka$remote$transport$ProtocolStateActor$$disassociateException(akka.remote.transport.AssociationHandle$DisassociateInfo);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #456                // Field akka/remote/transport/AssociationHandle$Unknown$.MODULE$:Lakka/remote/transport/AssociationHandle$Unknown$;
       5: aload_2
       6: invokevirtual #549                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          26
      12: new           #551                // class akka/remote/transport/AkkaProtocolException
      15: dup
      16: ldc_w         #553                // String The remote system explicitly disassociated (reason unknown).
      19: invokespecial #554                // Method akka/remote/transport/AkkaProtocolException."<init>":(Ljava/lang/String;)V
      22: astore_3
      23: goto          83
      26: getstatic     #559                // Field akka/remote/transport/AssociationHandle$Shutdown$.MODULE$:Lakka/remote/transport/AssociationHandle$Shutdown$;
      29: aload_2
      30: invokevirtual #549                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifeq          56
      36: new           #561                // class akka/remote/transport/Transport$InvalidAssociationException
      39: dup
      40: ldc_w         #563                // String The remote system refused the association because it is shutting down.
      43: getstatic     #568                // Field akka/remote/transport/Transport$InvalidAssociationException$.MODULE$:Lakka/remote/transport/Transport$InvalidAssociationException$;
      46: invokevirtual #572                // Method akka/remote/transport/Transport$InvalidAssociationException$.apply$default$2:()Ljava/lang/Throwable;
      49: invokespecial #575                // Method akka/remote/transport/Transport$InvalidAssociationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: astore_3
      53: goto          83
      56: getstatic     #580                // Field akka/remote/transport/AssociationHandle$Quarantined$.MODULE$:Lakka/remote/transport/AssociationHandle$Quarantined$;
      59: aload_2
      60: invokevirtual #549                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          85
      66: new           #561                // class akka/remote/transport/Transport$InvalidAssociationException
      69: dup
      70: ldc_w         #582                // String The remote system has quarantined this system. No further associations to the remote system are possible until this system is restarted.
      73: getstatic     #568                // Field akka/remote/transport/Transport$InvalidAssociationException$.MODULE$:Lakka/remote/transport/Transport$InvalidAssociationException$;
      76: invokevirtual #572                // Method akka/remote/transport/Transport$InvalidAssociationException$.apply$default$2:()Ljava/lang/Throwable;
      79: invokespecial #575                // Method akka/remote/transport/Transport$InvalidAssociationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: astore_3
      83: aload_3
      84: areturn
      85: new           #584                // class scala/MatchError
      88: dup
      89: aload_2
      90: invokespecial #585                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow

  public void logTermination(akka.actor.FSM$Reason);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: astore_3
       4: aload_1
       5: astore        4
       7: aload         4
       9: instanceof    #462                // class akka/actor/FSM$Failure
      12: ifeq          41
      15: iconst_1
      16: istore_2
      17: aload         4
      19: checkcast     #462                // class akka/actor/FSM$Failure
      22: astore_3
      23: aload_3
      24: invokevirtual #596                // Method akka/actor/FSM$Failure.cause:()Ljava/lang/Object;
      27: instanceof    #589                // class akka/remote/transport/AssociationHandle$DisassociateInfo
      30: ifeq          41
      33: getstatic     #602                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      36: astore        5
      38: goto          131
      41: iload_2
      42: ifeq          70
      45: aload_3
      46: invokevirtual #596                // Method akka/actor/FSM$Failure.cause:()Ljava/lang/Object;
      49: astore        6
      51: getstatic     #607                // Field akka/remote/transport/ProtocolStateActor$ForbiddenUidReason$.MODULE$:Lakka/remote/transport/ProtocolStateActor$ForbiddenUidReason$;
      54: aload         6
      56: invokevirtual #549                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      59: ifeq          70
      62: getstatic     #602                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      65: astore        5
      67: goto          131
      70: iload_2
      71: ifeq          121
      74: aload_3
      75: invokevirtual #596                // Method akka/actor/FSM$Failure.cause:()Ljava/lang/Object;
      78: astore        7
      80: aload         7
      82: instanceof    #464                // class akka/remote/transport/ProtocolStateActor$TimeoutReason
      85: ifeq          121
      88: aload         7
      90: checkcast     #464                // class akka/remote/transport/ProtocolStateActor$TimeoutReason
      93: astore        8
      95: aload         8
      97: invokevirtual #610                // Method akka/remote/transport/ProtocolStateActor$TimeoutReason.errorMessage:()Ljava/lang/String;
     100: astore        9
     102: aload_0
     103: invokevirtual #612                // Method log:()Lakka/event/LoggingAdapter;
     106: aload         9
     108: invokeinterface #616,  2          // InterfaceMethod akka/event/LoggingAdapter.info:(Ljava/lang/String;)V
     113: getstatic     #602                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     116: astore        5
     118: goto          131
     121: aload_0
     122: aload_1
     123: invokestatic  #619                // Method akka/actor/FSM$class.logTermination:(Lakka/actor/FSM;Lakka/actor/FSM$Reason;)V
     126: getstatic     #602                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     129: astore        5
     131: return

  private void listenForListenerRegistration(scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener>);
    Code:
       0: getstatic     #628                // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
       3: aload_1
       4: invokeinterface #634,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
       9: new           #636                // class akka/remote/transport/ProtocolStateActor$$anonfun$listenForListenerRegistration$1
      12: dup
      13: aload_0
      14: invokespecial #639                // Method akka/remote/transport/ProtocolStateActor$$anonfun$listenForListenerRegistration$1."<init>":(Lakka/remote/transport/ProtocolStateActor;)V
      17: aload_0
      18: invokevirtual #641                // Method context:()Lakka/actor/ActorContext;
      21: invokeinterface #647,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      26: invokeinterface #653,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      31: aload_0
      32: invokevirtual #641                // Method context:()Lakka/actor/ActorContext;
      35: invokeinterface #647,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      40: invokevirtual #657                // Method akka/pattern/package$.pipe:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lakka/pattern/PipeToSupport$PipeableFuture;
      43: aload_0
      44: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
      47: aload_0
      48: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
      51: invokevirtual #665                // Method akka/pattern/PipeToSupport$PipeableFuture.pipeTo:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      54: pop
      55: return

  public scala.concurrent.Future<akka.remote.transport.AssociationHandle$HandleEventListener> akka$remote$transport$ProtocolStateActor$$notifyOutboundHandler(akka.remote.transport.AssociationHandle, akka.remote.transport.HandshakeInfo, scala.concurrent.Promise<akka.remote.transport.AssociationHandle>);
    Code:
       0: getstatic     #674                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #678                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore        4
       8: aload_0
       9: aload         4
      11: invokespecial #680                // Method listenForListenerRegistration:(Lscala/concurrent/Promise;)V
      14: aload_3
      15: new           #682                // class akka/remote/transport/AkkaProtocolHandle
      18: dup
      19: aload_0
      20: invokevirtual #684                // Method localAddress:()Lakka/actor/Address;
      23: aload_1
      24: invokeinterface #689,  1          // InterfaceMethod akka/remote/transport/AssociationHandle.remoteAddress:()Lakka/actor/Address;
      29: aload         4
      31: aload_1
      32: aload_2
      33: aload_0
      34: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
      37: aload_0
      38: invokespecial #691                // Method codec:()Lakka/remote/transport/AkkaPduCodec;
      41: invokespecial #694                // Method akka/remote/transport/AkkaProtocolHandle."<init>":(Lakka/actor/Address;Lakka/actor/Address;Lscala/concurrent/Promise;Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/HandshakeInfo;Lakka/actor/ActorRef;Lakka/remote/transport/AkkaPduCodec;)V
      44: invokeinterface #698,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
      49: pop
      50: aload         4
      52: invokeinterface #634,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      57: areturn

  public scala.concurrent.Future<akka.remote.transport.AssociationHandle$HandleEventListener> akka$remote$transport$ProtocolStateActor$$notifyInboundHandler(akka.remote.transport.AssociationHandle, akka.remote.transport.HandshakeInfo, akka.remote.transport.Transport$AssociationEventListener);
    Code:
       0: getstatic     #674                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #678                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore        4
       8: aload_0
       9: aload         4
      11: invokespecial #680                // Method listenForListenerRegistration:(Lscala/concurrent/Promise;)V
      14: aload_3
      15: new           #704                // class akka/remote/transport/Transport$InboundAssociation
      18: dup
      19: new           #682                // class akka/remote/transport/AkkaProtocolHandle
      22: dup
      23: aload_0
      24: invokevirtual #684                // Method localAddress:()Lakka/actor/Address;
      27: aload_2
      28: invokevirtual #709                // Method akka/remote/transport/HandshakeInfo.origin:()Lakka/actor/Address;
      31: aload         4
      33: aload_1
      34: aload_2
      35: aload_0
      36: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
      39: aload_0
      40: invokespecial #691                // Method codec:()Lakka/remote/transport/AkkaPduCodec;
      43: invokespecial #694                // Method akka/remote/transport/AkkaProtocolHandle."<init>":(Lakka/actor/Address;Lakka/actor/Address;Lscala/concurrent/Promise;Lakka/remote/transport/AssociationHandle;Lakka/remote/transport/HandshakeInfo;Lakka/actor/ActorRef;Lakka/remote/transport/AkkaPduCodec;)V
      46: invokespecial #712                // Method akka/remote/transport/Transport$InboundAssociation."<init>":(Lakka/remote/transport/AssociationHandle;)V
      49: invokeinterface #718,  2          // InterfaceMethod akka/remote/transport/Transport$AssociationEventListener.notify:(Lakka/remote/transport/Transport$AssociationEvent;)V
      54: aload         4
      56: invokeinterface #634,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      61: areturn

  public akka.remote.transport.AkkaPduCodec$AkkaPdu akka$remote$transport$ProtocolStateActor$$decodePdu(akka.util.ByteString);
    Code:
       0: aload_0
       1: invokespecial #691                // Method codec:()Lakka/remote/transport/AkkaPduCodec;
       4: aload_1
       5: invokeinterface #727,  2          // InterfaceMethod akka/remote/transport/AkkaPduCodec.decodePdu:(Lakka/util/ByteString;)Lakka/remote/transport/AkkaPduCodec$AkkaPdu;
      10: areturn
      11: astore_2
      12: aload_2
      13: astore_3
      14: getstatic     #732                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      17: aload_3
      18: invokevirtual #736                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      21: astore        4
      23: aload         4
      25: invokevirtual #741                // Method scala/Option.isEmpty:()Z
      28: ifeq          33
      31: aload_2
      32: athrow
      33: aload         4
      35: invokevirtual #744                // Method scala/Option.get:()Ljava/lang/Object;
      38: checkcast     #746                // class java/lang/Throwable
      41: astore        5
      43: new           #551                // class akka/remote/transport/AkkaProtocolException
      46: dup
      47: new           #466                // class scala/collection/mutable/StringBuilder
      50: dup
      51: invokespecial #469                // Method scala/collection/mutable/StringBuilder."<init>":()V
      54: ldc_w         #748                // String Error while decoding incoming Akka PDU of length:
      57: invokevirtual #502                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      60: aload_1
      61: invokevirtual #754                // Method akka/util/ByteString.length:()I
      64: invokestatic  #760                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      67: invokevirtual #502                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      70: invokevirtual #515                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      73: aload         5
      75: invokespecial #761                // Method akka/remote/transport/AkkaProtocolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: athrow
    Exception table:
       from    to  target type
           0    10    11   any

  private boolean sendHeartbeat(akka.remote.transport.AssociationHandle);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #691                // Method codec:()Lakka/remote/transport/AkkaPduCodec;
       5: invokeinterface #768,  1          // InterfaceMethod akka/remote/transport/AkkaPduCodec.constructHeartbeat:()Lakka/util/ByteString;
      10: invokeinterface #772,  2          // InterfaceMethod akka/remote/transport/AssociationHandle.write:(Lakka/util/ByteString;)Z
      15: ireturn
      16: astore_2
      17: aload_2
      18: astore_3
      19: getstatic     #732                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      22: aload_3
      23: invokevirtual #736                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      26: astore        4
      28: aload         4
      30: invokevirtual #741                // Method scala/Option.isEmpty:()Z
      33: ifeq          38
      36: aload_2
      37: athrow
      38: aload         4
      40: invokevirtual #744                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #746                // class java/lang/Throwable
      46: astore        5
      48: new           #551                // class akka/remote/transport/AkkaProtocolException
      51: dup
      52: ldc_w         #774                // String Error writing HEARTBEAT to transport
      55: aload         5
      57: invokespecial #761                // Method akka/remote/transport/AkkaProtocolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      60: athrow
    Exception table:
       from    to  target type
           0    15    16   any

  public void akka$remote$transport$ProtocolStateActor$$sendDisassociate(akka.remote.transport.AssociationHandle, akka.remote.transport.AssociationHandle$DisassociateInfo);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #691                // Method codec:()Lakka/remote/transport/AkkaPduCodec;
       5: aload_2
       6: invokeinterface #778,  2          // InterfaceMethod akka/remote/transport/AkkaPduCodec.constructDisassociate:(Lakka/remote/transport/AssociationHandle$DisassociateInfo;)Lakka/util/ByteString;
      11: invokeinterface #772,  2          // InterfaceMethod akka/remote/transport/AssociationHandle.write:(Lakka/util/ByteString;)Z
      16: pop
      17: return
      18: astore_3
      19: aload_3
      20: astore        4
      22: getstatic     #732                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      25: aload         4
      27: invokevirtual #736                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      30: astore        5
      32: aload         5
      34: invokevirtual #741                // Method scala/Option.isEmpty:()Z
      37: ifeq          42
      40: aload_3
      41: athrow
      42: aload         5
      44: invokevirtual #744                // Method scala/Option.get:()Ljava/lang/Object;
      47: checkcast     #746                // class java/lang/Throwable
      50: astore        6
      52: new           #551                // class akka/remote/transport/AkkaProtocolException
      55: dup
      56: ldc_w         #780                // String Error writing DISASSOCIATE to transport
      59: aload         6
      61: invokespecial #761                // Method akka/remote/transport/AkkaProtocolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: athrow
    Exception table:
       from    to  target type
           0    17    18   any

  public boolean akka$remote$transport$ProtocolStateActor$$sendAssociate(akka.remote.transport.AssociationHandle, akka.remote.transport.HandshakeInfo);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #691                // Method codec:()Lakka/remote/transport/AkkaPduCodec;
       5: aload_2
       6: invokeinterface #786,  2          // InterfaceMethod akka/remote/transport/AkkaPduCodec.constructAssociate:(Lakka/remote/transport/HandshakeInfo;)Lakka/util/ByteString;
      11: invokeinterface #772,  2          // InterfaceMethod akka/remote/transport/AssociationHandle.write:(Lakka/util/ByteString;)Z
      16: ireturn
      17: astore_3
      18: aload_3
      19: astore        4
      21: getstatic     #732                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      24: aload         4
      26: invokevirtual #736                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      29: astore        5
      31: aload         5
      33: invokevirtual #741                // Method scala/Option.isEmpty:()Z
      36: ifeq          41
      39: aload_3
      40: athrow
      41: aload         5
      43: invokevirtual #744                // Method scala/Option.get:()Ljava/lang/Object;
      46: checkcast     #746                // class java/lang/Throwable
      49: astore        6
      51: new           #551                // class akka/remote/transport/AkkaProtocolException
      54: dup
      55: ldc_w         #788                // String Error writing ASSOCIATE to transport
      58: aload         6
      60: invokespecial #761                // Method akka/remote/transport/AkkaProtocolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: athrow
    Exception table:
       from    to  target type
           0    16    17   any

  public akka.remote.transport.ProtocolStateActor(akka.remote.transport.ProtocolStateActor$InitialProtocolStateData, akka.remote.transport.HandshakeInfo, scala.Option<java.lang.Object>, akka.remote.transport.AkkaProtocolSettings, akka.remote.transport.AkkaPduCodec, akka.remote.FailureDetector);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #390                // Field akka$remote$transport$ProtocolStateActor$$localHandshakeInfo:Lakka/remote/transport/HandshakeInfo;
       5: aload_0
       6: aload_3
       7: putfield      #392                // Field akka$remote$transport$ProtocolStateActor$$refuseUid:Lscala/Option;
      10: aload_0
      11: aload         4
      13: putfield      #395                // Field akka$remote$transport$ProtocolStateActor$$settings:Lakka/remote/transport/AkkaProtocolSettings;
      16: aload_0
      17: aload         5
      19: putfield      #398                // Field codec:Lakka/remote/transport/AkkaPduCodec;
      22: aload_0
      23: aload         6
      25: putfield      #401                // Field akka$remote$transport$ProtocolStateActor$$failureDetector:Lakka/remote/FailureDetector;
      28: aload_0
      29: invokespecial #790                // Method java/lang/Object."<init>":()V
      32: aload_0
      33: invokestatic  #793                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      36: aload_0
      37: invokestatic  #796                // Method akka/routing/Listeners$class.$init$:(Lakka/routing/Listeners;)V
      40: aload_0
      41: invokestatic  #799                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      44: aload_0
      45: invokestatic  #801                // Method akka/actor/FSM$class.$init$:(Lakka/actor/FSM;)V
      48: aload_0
      49: aload_2
      50: invokevirtual #709                // Method akka/remote/transport/HandshakeInfo.origin:()Lakka/actor/Address;
      53: putfield      #404                // Field localAddress:Lakka/actor/Address;
      56: aload_0
      57: ldc_w         #803                // String handshake-timer
      60: putfield      #407                // Field handshakeTimerKey:Ljava/lang/String;
      63: aload_1
      64: astore        7
      66: aload         7
      68: instanceof    #805                // class akka/remote/transport/ProtocolStateActor$OutboundUnassociated
      71: ifeq          166
      74: aload         7
      76: checkcast     #805                // class akka/remote/transport/ProtocolStateActor$OutboundUnassociated
      79: astore        8
      81: getstatic     #628                // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
      84: aload         8
      86: invokevirtual #809                // Method akka/remote/transport/ProtocolStateActor$OutboundUnassociated.transport:()Lakka/remote/transport/Transport;
      89: aload         8
      91: invokevirtual #810                // Method akka/remote/transport/ProtocolStateActor$OutboundUnassociated.remoteAddress:()Lakka/actor/Address;
      94: invokeinterface #816,  2          // InterfaceMethod akka/remote/transport/Transport.associate:(Lakka/actor/Address;)Lscala/concurrent/Future;
      99: new           #818                // class akka/remote/transport/ProtocolStateActor$$anonfun$10
     102: dup
     103: aload_0
     104: invokespecial #819                // Method akka/remote/transport/ProtocolStateActor$$anonfun$10."<init>":(Lakka/remote/transport/ProtocolStateActor;)V
     107: aload_0
     108: invokevirtual #641                // Method context:()Lakka/actor/ActorContext;
     111: invokeinterface #647,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     116: invokeinterface #653,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
     121: aload_0
     122: invokevirtual #641                // Method context:()Lakka/actor/ActorContext;
     125: invokeinterface #647,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     130: invokevirtual #657                // Method akka/pattern/package$.pipe:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lakka/pattern/PipeToSupport$PipeableFuture;
     133: aload_0
     134: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
     137: aload_0
     138: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
     141: invokevirtual #665                // Method akka/pattern/PipeToSupport$PipeableFuture.pipeTo:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
     144: pop
     145: aload_0
     146: getstatic     #824                // Field akka/remote/transport/ProtocolStateActor$Closed$.MODULE$:Lakka/remote/transport/ProtocolStateActor$Closed$;
     149: aload         8
     151: aload_0
     152: invokevirtual #826                // Method startWith$default$3:()Lscala/Option;
     155: invokevirtual #828                // Method startWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Option;)V
     158: getstatic     #602                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     161: astore        9
     163: goto          230
     166: aload         7
     168: instanceof    #830                // class akka/remote/transport/ProtocolStateActor$InboundUnassociated
     171: ifeq          304
     174: aload         7
     176: checkcast     #830                // class akka/remote/transport/ProtocolStateActor$InboundUnassociated
     179: astore        10
     181: aload         10
     183: invokevirtual #833                // Method akka/remote/transport/ProtocolStateActor$InboundUnassociated.wrappedHandle:()Lakka/remote/transport/AssociationHandle;
     186: invokeinterface #835,  1          // InterfaceMethod akka/remote/transport/AssociationHandle.readHandlerPromise:()Lscala/concurrent/Promise;
     191: new           #837                // class akka/remote/transport/AssociationHandle$ActorHandleEventListener
     194: dup
     195: aload_0
     196: invokevirtual #659                // Method self:()Lakka/actor/ActorRef;
     199: invokespecial #839                // Method akka/remote/transport/AssociationHandle$ActorHandleEventListener."<init>":(Lakka/actor/ActorRef;)V
     202: invokeinterface #698,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
     207: pop
     208: aload_0
     209: invokespecial #841                // Method initHandshakeTimer:()V
     212: aload_0
     213: getstatic     #846                // Field akka/remote/transport/ProtocolStateActor$WaitHandshake$.MODULE$:Lakka/remote/transport/ProtocolStateActor$WaitHandshake$;
     216: aload         10
     218: aload_0
     219: invokevirtual #826                // Method startWith$default$3:()Lscala/Option;
     222: invokevirtual #828                // Method startWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Option;)V
     225: getstatic     #602                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     228: astore        9
     230: aload_0
     231: invokespecial #841                // Method initHandshakeTimer:()V
     234: aload_0
     235: getstatic     #824                // Field akka/remote/transport/ProtocolStateActor$Closed$.MODULE$:Lakka/remote/transport/ProtocolStateActor$Closed$;
     238: aload_0
     239: invokevirtual #848                // Method when$default$2:()Lscala/concurrent/duration/FiniteDuration;
     242: new           #850                // class akka/remote/transport/ProtocolStateActor$$anonfun$2
     245: dup
     246: aload_0
     247: invokespecial #851                // Method akka/remote/transport/ProtocolStateActor$$anonfun$2."<init>":(Lakka/remote/transport/ProtocolStateActor;)V
     250: invokevirtual #853                // Method when:(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
     253: aload_0
     254: getstatic     #846                // Field akka/remote/transport/ProtocolStateActor$WaitHandshake$.MODULE$:Lakka/remote/transport/ProtocolStateActor$WaitHandshake$;
     257: aload_0
     258: invokevirtual #848                // Method when$default$2:()Lscala/concurrent/duration/FiniteDuration;
     261: new           #855                // class akka/remote/transport/ProtocolStateActor$$anonfun$3
     264: dup
     265: aload_0
     266: invokespecial #856                // Method akka/remote/transport/ProtocolStateActor$$anonfun$3."<init>":(Lakka/remote/transport/ProtocolStateActor;)V
     269: invokevirtual #853                // Method when:(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
     272: aload_0
     273: getstatic     #861                // Field akka/remote/transport/ProtocolStateActor$Open$.MODULE$:Lakka/remote/transport/ProtocolStateActor$Open$;
     276: aload_0
     277: invokevirtual #848                // Method when$default$2:()Lscala/concurrent/duration/FiniteDuration;
     280: new           #863                // class akka/remote/transport/ProtocolStateActor$$anonfun$4
     283: dup
     284: aload_0
     285: invokespecial #864                // Method akka/remote/transport/ProtocolStateActor$$anonfun$4."<init>":(Lakka/remote/transport/ProtocolStateActor;)V
     288: invokevirtual #853                // Method when:(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
     291: aload_0
     292: new           #866                // class akka/remote/transport/ProtocolStateActor$$anonfun$5
     295: dup
     296: aload_0
     297: invokespecial #867                // Method akka/remote/transport/ProtocolStateActor$$anonfun$5."<init>":(Lakka/remote/transport/ProtocolStateActor;)V
     300: invokevirtual #869                // Method onTermination:(Lscala/PartialFunction;)V
     303: return
     304: new           #584                // class scala/MatchError
     307: dup
     308: aload         7
     310: invokespecial #585                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     313: athrow

  public akka.remote.transport.ProtocolStateActor(akka.remote.transport.HandshakeInfo, akka.actor.Address, scala.concurrent.Promise<akka.remote.transport.AssociationHandle>, akka.remote.transport.Transport, akka.remote.transport.AkkaProtocolSettings, akka.remote.transport.AkkaPduCodec, akka.remote.FailureDetector, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: new           #805                // class akka/remote/transport/ProtocolStateActor$OutboundUnassociated
       4: dup
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #881                // Method akka/remote/transport/ProtocolStateActor$OutboundUnassociated."<init>":(Lakka/actor/Address;Lscala/concurrent/Promise;Lakka/remote/transport/Transport;)V
      12: aload_1
      13: aload         8
      15: aload         5
      17: aload         6
      19: aload         7
      21: invokespecial #883                // Method "<init>":(Lakka/remote/transport/ProtocolStateActor$InitialProtocolStateData;Lakka/remote/transport/HandshakeInfo;Lscala/Option;Lakka/remote/transport/AkkaProtocolSettings;Lakka/remote/transport/AkkaPduCodec;Lakka/remote/FailureDetector;)V
      24: return

  public akka.remote.transport.ProtocolStateActor(akka.remote.transport.HandshakeInfo, akka.remote.transport.AssociationHandle, akka.remote.transport.Transport$AssociationEventListener, akka.remote.transport.AkkaProtocolSettings, akka.remote.transport.AkkaPduCodec, akka.remote.FailureDetector);
    Code:
       0: aload_0
       1: new           #830                // class akka/remote/transport/ProtocolStateActor$InboundUnassociated
       4: dup
       5: aload_3
       6: aload_2
       7: invokespecial #888                // Method akka/remote/transport/ProtocolStateActor$InboundUnassociated."<init>":(Lakka/remote/transport/Transport$AssociationEventListener;Lakka/remote/transport/AssociationHandle;)V
      10: aload_1
      11: getstatic     #893                // Field scala/None$.MODULE$:Lscala/None$;
      14: aload         4
      16: aload         5
      18: aload         6
      20: invokespecial #883                // Method "<init>":(Lakka/remote/transport/ProtocolStateActor$InitialProtocolStateData;Lakka/remote/transport/HandshakeInfo;Lscala/Option;Lakka/remote/transport/AkkaProtocolSettings;Lakka/remote/transport/AkkaPduCodec;Lakka/remote/FailureDetector;)V
      23: return
}
