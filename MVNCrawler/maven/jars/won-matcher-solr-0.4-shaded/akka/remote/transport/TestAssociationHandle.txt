Compiled from "TestTransport.scala"
public final class akka.remote.transport.TestAssociationHandle implements akka.remote.transport.AssociationHandle,scala.Product,scala.Serializable {
  private final akka.actor.Address localAddress;

  private final akka.actor.Address remoteAddress;

  private final akka.remote.transport.TestTransport transport;

  private final boolean inbound;

  private volatile boolean writable;

  private final scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener> readHandlerPromise;

  private final scala.Tuple2<akka.actor.Address, akka.actor.Address> key;

  public static scala.Option<scala.Tuple4<akka.actor.Address, akka.actor.Address, akka.remote.transport.TestTransport, java.lang.Object>> unapply(akka.remote.transport.TestAssociationHandle);
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/TestAssociationHandle$.MODULE$:Lakka/remote/transport/TestAssociationHandle$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/remote/transport/TestAssociationHandle$.unapply:(Lakka/remote/transport/TestAssociationHandle;)Lscala/Option;
       7: areturn

  public static akka.remote.transport.TestAssociationHandle apply(akka.actor.Address, akka.actor.Address, akka.remote.transport.TestTransport, boolean);
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/TestAssociationHandle$.MODULE$:Lakka/remote/transport/TestAssociationHandle$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #28                 // Method akka/remote/transport/TestAssociationHandle$.apply:(Lakka/actor/Address;Lakka/actor/Address;Lakka/remote/transport/TestTransport;Z)Lakka/remote/transport/TestAssociationHandle;
      10: areturn

  public static scala.Function1<scala.Tuple4<akka.actor.Address, akka.actor.Address, akka.remote.transport.TestTransport, java.lang.Object>, akka.remote.transport.TestAssociationHandle> tupled();
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/TestAssociationHandle$.MODULE$:Lakka/remote/transport/TestAssociationHandle$;
       3: invokevirtual #32                 // Method akka/remote/transport/TestAssociationHandle$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.actor.Address, scala.Function1<akka.actor.Address, scala.Function1<akka.remote.transport.TestTransport, scala.Function1<java.lang.Object, akka.remote.transport.TestAssociationHandle>>>> curried();
    Code:
       0: getstatic     #22                 // Field akka/remote/transport/TestAssociationHandle$.MODULE$:Lakka/remote/transport/TestAssociationHandle$;
       3: invokevirtual #35                 // Method akka/remote/transport/TestAssociationHandle$.curried:()Lscala/Function1;
       6: areturn

  public akka.actor.Address localAddress();
    Code:
       0: aload_0
       1: getfield      #52                 // Field localAddress:Lakka/actor/Address;
       4: areturn

  public akka.actor.Address remoteAddress();
    Code:
       0: aload_0
       1: getfield      #56                 // Field remoteAddress:Lakka/actor/Address;
       4: areturn

  public akka.remote.transport.TestTransport transport();
    Code:
       0: aload_0
       1: getfield      #59                 // Field transport:Lakka/remote/transport/TestTransport;
       4: areturn

  public boolean inbound();
    Code:
       0: aload_0
       1: getfield      #62                 // Field inbound:Z
       4: ireturn

  public boolean writable();
    Code:
       0: aload_0
       1: getfield      #64                 // Field writable:Z
       4: ireturn

  public void writable_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field writable:Z
       5: return

  public scala.concurrent.Promise<akka.remote.transport.AssociationHandle$HandleEventListener> readHandlerPromise();
    Code:
       0: aload_0
       1: getfield      #70                 // Field readHandlerPromise:Lscala/concurrent/Promise;
       4: areturn

  public boolean write(akka.util.ByteString);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method writable:()Z
       4: ifeq          19
       7: aload_0
       8: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
      11: aload_0
      12: aload_1
      13: invokevirtual #81                 // Method akka/remote/transport/TestTransport.write:(Lakka/remote/transport/TestAssociationHandle;Lakka/util/ByteString;)Z
      16: goto          20
      19: iconst_0
      20: ireturn

  public void disassociate();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
       4: aload_0
       5: invokevirtual #88                 // Method akka/remote/transport/TestTransport.disassociate:(Lakka/remote/transport/TestAssociationHandle;)V
       8: return

  public scala.Tuple2<akka.actor.Address, akka.actor.Address> key();
    Code:
       0: aload_0
       1: getfield      #91                 // Field key:Lscala/Tuple2;
       4: areturn

  public akka.remote.transport.TestAssociationHandle copy(akka.actor.Address, akka.actor.Address, akka.remote.transport.TestTransport, boolean);
    Code:
       0: new           #2                  // class akka/remote/transport/TestAssociationHandle
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: invokespecial #96                 // Method "<init>":(Lakka/actor/Address;Lakka/actor/Address;Lakka/remote/transport/TestTransport;Z)V
      12: areturn

  public akka.actor.Address copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method localAddress:()Lakka/actor/Address;
       4: areturn

  public akka.actor.Address copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method remoteAddress:()Lakka/actor/Address;
       4: areturn

  public akka.remote.transport.TestTransport copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
       4: areturn

  public boolean copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method inbound:()Z
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #110                // String TestAssociationHandle
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 71
                     1: 64
                     2: 57
                     3: 47
               default: 32
          }
      32: new           #116                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #122                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #125                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #128                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #106                // Method inbound:()Z
      51: invokestatic  #132                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      54: goto          75
      57: aload_0
      58: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
      61: goto          75
      64: aload_0
      65: invokevirtual #102                // Method remoteAddress:()Lakka/actor/Address;
      68: goto          75
      71: aload_0
      72: invokevirtual #99                 // Method localAddress:()Lakka/actor/Address;
      75: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #140                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #144                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/transport/TestAssociationHandle
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #149                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #99                 // Method localAddress:()Lakka/actor/Address;
       8: invokestatic  #155                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #159                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #102                // Method remoteAddress:()Lakka/actor/Address;
      20: invokestatic  #155                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #159                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
      32: invokestatic  #155                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      35: invokestatic  #159                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #106                // Method inbound:()Z
      44: ifeq          53
      47: sipush        1231
      50: goto          56
      53: sipush        1237
      56: invokestatic  #159                // Method scala/runtime/Statics.mix:(II)I
      59: istore_1
      60: iload_1
      61: iconst_4
      62: invokestatic  #162                // Method scala/runtime/Statics.finalizeHash:(II)I
      65: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #140                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #166                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     147
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/transport/TestAssociationHandle
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          151
      25: aload_1
      26: checkcast     #2                  // class akka/remote/transport/TestAssociationHandle
      29: astore        4
      31: aload_0
      32: invokevirtual #99                 // Method localAddress:()Lakka/actor/Address;
      35: aload         4
      37: invokevirtual #99                 // Method localAddress:()Lakka/actor/Address;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          143
      55: aload         5
      57: invokevirtual #169                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          143
      63: aload_0
      64: invokevirtual #102                // Method remoteAddress:()Lakka/actor/Address;
      67: aload         4
      69: invokevirtual #102                // Method remoteAddress:()Lakka/actor/Address;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          143
      87: aload         6
      89: invokevirtual #169                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          143
      95: aload_0
      96: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
      99: aload         4
     101: invokevirtual #76                 // Method transport:()Lakka/remote/transport/TestTransport;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          143
     119: aload         7
     121: invokevirtual #169                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          143
     127: aload_0
     128: invokevirtual #106                // Method inbound:()Z
     131: aload         4
     133: invokevirtual #106                // Method inbound:()Z
     136: if_icmpne     143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: ifeq          151
     147: iconst_1
     148: goto          152
     151: iconst_0
     152: ireturn

  public akka.remote.transport.TestAssociationHandle(akka.actor.Address, akka.actor.Address, akka.remote.transport.TestTransport, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field localAddress:Lakka/actor/Address;
       5: aload_0
       6: aload_2
       7: putfield      #56                 // Field remoteAddress:Lakka/actor/Address;
      10: aload_0
      11: aload_3
      12: putfield      #59                 // Field transport:Lakka/remote/transport/TestTransport;
      15: aload_0
      16: iload         4
      18: putfield      #62                 // Field inbound:Z
      21: aload_0
      22: invokespecial #173                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #179                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: aload_0
      30: iconst_1
      31: putfield      #64                 // Field writable:Z
      34: aload_0
      35: getstatic     #184                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
      38: invokevirtual #186                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
      41: putfield      #70                 // Field readHandlerPromise:Lscala/concurrent/Promise;
      44: aload_0
      45: iload         4
      47: ifeq          62
      50: new           #188                // class scala/Tuple2
      53: dup
      54: aload_2
      55: aload_1
      56: invokespecial #191                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      59: goto          71
      62: new           #188                // class scala/Tuple2
      65: dup
      66: aload_1
      67: aload_2
      68: invokespecial #191                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      71: putfield      #91                 // Field key:Lscala/Tuple2;
      74: return
}
