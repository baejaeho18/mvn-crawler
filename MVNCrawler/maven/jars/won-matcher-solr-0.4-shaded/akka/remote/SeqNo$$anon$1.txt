Compiled from "AckedDelivery.scala"
public final class akka.remote.SeqNo$$anon$1 implements scala.math.Ordering<akka.remote.SeqNo> {
  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #17                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #27                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<akka.remote.SeqNo> reverse();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, akka.remote.SeqNo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(akka.remote.SeqNo, akka.remote.SeqNo);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method akka/remote/SeqNo.rawValue:()J
       4: aload_2
       5: invokevirtual #73                 // Method akka/remote/SeqNo.rawValue:()J
       8: lcmp
       9: ifge          16
      12: iconst_m1
      13: goto          33
      16: aload_1
      17: invokevirtual #73                 // Method akka/remote/SeqNo.rawValue:()J
      20: aload_2
      21: invokevirtual #73                 // Method akka/remote/SeqNo.rawValue:()J
      24: lcmp
      25: ifle          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore_3
      34: aload_1
      35: invokevirtual #73                 // Method akka/remote/SeqNo.rawValue:()J
      38: aload_2
      39: invokevirtual #73                 // Method akka/remote/SeqNo.rawValue:()J
      42: lsub
      43: iload_3
      44: i2l
      45: lmul
      46: lconst_0
      47: lcmp
      48: ifge          56
      51: iload_3
      52: ineg
      53: goto          57
      56: iload_3
      57: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #82                 // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class akka/remote/SeqNo
       5: aload_2
       6: checkcast     #69                 // class akka/remote/SeqNo
       9: invokevirtual #85                 // Method compare:(Lakka/remote/SeqNo;Lakka/remote/SeqNo;)I
      12: ireturn

  public akka.remote.SeqNo$$anon$1();
    Code:
       0: aload_0
       1: invokespecial #89                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #95                 // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
       8: aload_0
       9: invokestatic  #98                 // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      12: return
}
