Compiled from "WireFormats.java"
public final class akka.remote.WireFormats$RemoteEnvelope extends akka.protobuf.GeneratedMessage implements akka.remote.WireFormats$RemoteEnvelopeOrBuilder {
  private static final akka.remote.WireFormats$RemoteEnvelope defaultInstance;

  private final akka.protobuf.UnknownFieldSet unknownFields;

  public static akka.protobuf.Parser<akka.remote.WireFormats$RemoteEnvelope> PARSER;

  private int bitField0_;

  public static final int RECIPIENT_FIELD_NUMBER;

  private akka.remote.WireFormats$ActorRefData recipient_;

  public static final int MESSAGE_FIELD_NUMBER;

  private akka.remote.WireFormats$SerializedMessage message_;

  public static final int SENDER_FIELD_NUMBER;

  private akka.remote.WireFormats$ActorRefData sender_;

  public static final int SEQ_FIELD_NUMBER;

  private long seq_;

  private byte memoizedIsInitialized;

  private int memoizedSerializedSize;

  private static final long serialVersionUID;

  private akka.remote.WireFormats$RemoteEnvelope(akka.protobuf.GeneratedMessage$Builder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method akka/protobuf/GeneratedMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #10                 // Field memoizedIsInitialized:B
      10: aload_0
      11: iconst_m1
      12: putfield      #11                 // Field memoizedSerializedSize:I
      15: aload_0
      16: aload_1
      17: invokevirtual #12                 // Method akka/protobuf/GeneratedMessage$Builder.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      20: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      23: return

  private akka.remote.WireFormats$RemoteEnvelope(boolean);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #10                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #11                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokestatic  #15                 // Method akka/protobuf/UnknownFieldSet.getDefaultInstance:()Lakka/protobuf/UnknownFieldSet;
      18: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      21: return

  public static akka.remote.WireFormats$RemoteEnvelope getDefaultInstance();
    Code:
       0: getstatic     #16                 // Field defaultInstance:Lakka/remote/WireFormats$RemoteEnvelope;
       3: areturn

  public akka.remote.WireFormats$RemoteEnvelope getDefaultInstanceForType();
    Code:
       0: getstatic     #16                 // Field defaultInstance:Lakka/remote/WireFormats$RemoteEnvelope;
       3: areturn

  public final akka.protobuf.UnknownFieldSet getUnknownFields();
    Code:
       0: aload_0
       1: getfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
       4: areturn

  private akka.remote.WireFormats$RemoteEnvelope(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #10                 // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #11                 // Field memoizedSerializedSize:I
      14: aload_0
      15: invokespecial #17                 // Method initFields:()V
      18: iconst_0
      19: istore_3
      20: invokestatic  #18                 // Method akka/protobuf/UnknownFieldSet.newBuilder:()Lakka/protobuf/UnknownFieldSet$Builder;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: ifne          361
      33: aload_1
      34: invokevirtual #19                 // Method akka/protobuf/CodedInputStream.readTag:()I
      37: istore        6
      39: iload         6
      41: lookupswitch  { // 5
                     0: 92
                    10: 117
                    18: 191
                    34: 265
                    41: 339
               default: 98
          }
      92: iconst_1
      93: istore        5
      95: goto          358
      98: aload_0
      99: aload_1
     100: aload         4
     102: aload_2
     103: iload         6
     105: invokevirtual #20                 // Method parseUnknownField:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/UnknownFieldSet$Builder;Lakka/protobuf/ExtensionRegistryLite;I)Z
     108: ifne          358
     111: iconst_1
     112: istore        5
     114: goto          358
     117: aconst_null
     118: astore        7
     120: aload_0
     121: getfield      #1                  // Field bitField0_:I
     124: iconst_1
     125: iand
     126: iconst_1
     127: if_icmpne     139
     130: aload_0
     131: getfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
     134: invokevirtual #21                 // Method akka/remote/WireFormats$ActorRefData.toBuilder:()Lakka/remote/WireFormats$ActorRefData$Builder;
     137: astore        7
     139: aload_0
     140: aload_1
     141: getstatic     #22                 // Field akka/remote/WireFormats$ActorRefData.PARSER:Lakka/protobuf/Parser;
     144: aload_2
     145: invokevirtual #23                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     148: checkcast     #24                 // class akka/remote/WireFormats$ActorRefData
     151: putfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
     154: aload         7
     156: ifnull        178
     159: aload         7
     161: aload_0
     162: getfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
     165: invokevirtual #25                 // Method akka/remote/WireFormats$ActorRefData$Builder.mergeFrom:(Lakka/remote/WireFormats$ActorRefData;)Lakka/remote/WireFormats$ActorRefData$Builder;
     168: pop
     169: aload_0
     170: aload         7
     172: invokevirtual #26                 // Method akka/remote/WireFormats$ActorRefData$Builder.buildPartial:()Lakka/remote/WireFormats$ActorRefData;
     175: putfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
     178: aload_0
     179: dup
     180: getfield      #1                  // Field bitField0_:I
     183: iconst_1
     184: ior
     185: putfield      #1                  // Field bitField0_:I
     188: goto          358
     191: aconst_null
     192: astore        7
     194: aload_0
     195: getfield      #1                  // Field bitField0_:I
     198: iconst_2
     199: iand
     200: iconst_2
     201: if_icmpne     213
     204: aload_0
     205: getfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
     208: invokevirtual #27                 // Method akka/remote/WireFormats$SerializedMessage.toBuilder:()Lakka/remote/WireFormats$SerializedMessage$Builder;
     211: astore        7
     213: aload_0
     214: aload_1
     215: getstatic     #28                 // Field akka/remote/WireFormats$SerializedMessage.PARSER:Lakka/protobuf/Parser;
     218: aload_2
     219: invokevirtual #23                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     222: checkcast     #29                 // class akka/remote/WireFormats$SerializedMessage
     225: putfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
     228: aload         7
     230: ifnull        252
     233: aload         7
     235: aload_0
     236: getfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
     239: invokevirtual #30                 // Method akka/remote/WireFormats$SerializedMessage$Builder.mergeFrom:(Lakka/remote/WireFormats$SerializedMessage;)Lakka/remote/WireFormats$SerializedMessage$Builder;
     242: pop
     243: aload_0
     244: aload         7
     246: invokevirtual #31                 // Method akka/remote/WireFormats$SerializedMessage$Builder.buildPartial:()Lakka/remote/WireFormats$SerializedMessage;
     249: putfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
     252: aload_0
     253: dup
     254: getfield      #1                  // Field bitField0_:I
     257: iconst_2
     258: ior
     259: putfield      #1                  // Field bitField0_:I
     262: goto          358
     265: aconst_null
     266: astore        7
     268: aload_0
     269: getfield      #1                  // Field bitField0_:I
     272: iconst_4
     273: iand
     274: iconst_4
     275: if_icmpne     287
     278: aload_0
     279: getfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
     282: invokevirtual #21                 // Method akka/remote/WireFormats$ActorRefData.toBuilder:()Lakka/remote/WireFormats$ActorRefData$Builder;
     285: astore        7
     287: aload_0
     288: aload_1
     289: getstatic     #22                 // Field akka/remote/WireFormats$ActorRefData.PARSER:Lakka/protobuf/Parser;
     292: aload_2
     293: invokevirtual #23                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     296: checkcast     #24                 // class akka/remote/WireFormats$ActorRefData
     299: putfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
     302: aload         7
     304: ifnull        326
     307: aload         7
     309: aload_0
     310: getfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
     313: invokevirtual #25                 // Method akka/remote/WireFormats$ActorRefData$Builder.mergeFrom:(Lakka/remote/WireFormats$ActorRefData;)Lakka/remote/WireFormats$ActorRefData$Builder;
     316: pop
     317: aload_0
     318: aload         7
     320: invokevirtual #26                 // Method akka/remote/WireFormats$ActorRefData$Builder.buildPartial:()Lakka/remote/WireFormats$ActorRefData;
     323: putfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
     326: aload_0
     327: dup
     328: getfield      #1                  // Field bitField0_:I
     331: iconst_4
     332: ior
     333: putfield      #1                  // Field bitField0_:I
     336: goto          358
     339: aload_0
     340: dup
     341: getfield      #1                  // Field bitField0_:I
     344: bipush        8
     346: ior
     347: putfield      #1                  // Field bitField0_:I
     350: aload_0
     351: aload_1
     352: invokevirtual #32                 // Method akka/protobuf/CodedInputStream.readFixed64:()J
     355: putfield      #2                  // Field seq_:J
     358: goto          28
     361: aload_0
     362: aload         4
     364: invokevirtual #33                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     367: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     370: aload_0
     371: invokevirtual #34                 // Method makeExtensionsImmutable:()V
     374: goto          423
     377: astore        5
     379: aload         5
     381: aload_0
     382: invokevirtual #36                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     385: athrow
     386: astore        5
     388: new           #35                 // class akka/protobuf/InvalidProtocolBufferException
     391: dup
     392: aload         5
     394: invokevirtual #38                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     397: invokespecial #39                 // Method akka/protobuf/InvalidProtocolBufferException."<init>":(Ljava/lang/String;)V
     400: aload_0
     401: invokevirtual #36                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     404: athrow
     405: astore        8
     407: aload_0
     408: aload         4
     410: invokevirtual #33                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     413: putfield      #13                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     416: aload_0
     417: invokevirtual #34                 // Method makeExtensionsImmutable:()V
     420: aload         8
     422: athrow
     423: return
    Exception table:
       from    to  target type
          25   361   377   Class akka/protobuf/InvalidProtocolBufferException
          25   361   386   Class java/io/IOException
          25   361   405   any
         377   407   405   any

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #40                 // Method akka/remote/WireFormats.access$1000:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #41                 // Method akka/remote/WireFormats.access$1100:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #42                 // class akka/remote/WireFormats$RemoteEnvelope
       5: ldc           #43                 // class akka/remote/WireFormats$RemoteEnvelope$Builder
       7: invokevirtual #44                 // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  public akka.protobuf.Parser<akka.remote.WireFormats$RemoteEnvelope> getParserForType();
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: areturn

  public boolean hasRecipient();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.WireFormats$ActorRefData getRecipient();
    Code:
       0: aload_0
       1: getfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
       4: areturn

  public akka.remote.WireFormats$ActorRefDataOrBuilder getRecipientOrBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
       4: areturn

  public boolean hasMessage();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.WireFormats$SerializedMessage getMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
       4: areturn

  public akka.remote.WireFormats$SerializedMessageOrBuilder getMessageOrBuilder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
       4: areturn

  public boolean hasSender();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_4
       5: iand
       6: iconst_4
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.WireFormats$ActorRefData getSender();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
       4: areturn

  public akka.remote.WireFormats$ActorRefDataOrBuilder getSenderOrBuilder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
       4: areturn

  public boolean hasSeq();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: bipush        8
       6: iand
       7: bipush        8
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public long getSeq();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq_:J
       4: lreturn

  private void initFields();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method akka/remote/WireFormats$ActorRefData.getDefaultInstance:()Lakka/remote/WireFormats$ActorRefData;
       4: putfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
       7: aload_0
       8: invokestatic  #47                 // Method akka/remote/WireFormats$SerializedMessage.getDefaultInstance:()Lakka/remote/WireFormats$SerializedMessage;
      11: putfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
      14: aload_0
      15: invokestatic  #46                 // Method akka/remote/WireFormats$ActorRefData.getDefaultInstance:()Lakka/remote/WireFormats$ActorRefData;
      18: putfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
      21: aload_0
      22: lconst_0
      23: putfield      #2                  // Field seq_:J
      26: return

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #10                 // Field memoizedIsInitialized:B
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     21
      10: iload_1
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #48                 // Method hasRecipient:()Z
      25: ifne          35
      28: aload_0
      29: iconst_0
      30: putfield      #10                 // Field memoizedIsInitialized:B
      33: iconst_0
      34: ireturn
      35: aload_0
      36: invokevirtual #49                 // Method hasMessage:()Z
      39: ifne          49
      42: aload_0
      43: iconst_0
      44: putfield      #10                 // Field memoizedIsInitialized:B
      47: iconst_0
      48: ireturn
      49: aload_0
      50: invokevirtual #50                 // Method getRecipient:()Lakka/remote/WireFormats$ActorRefData;
      53: invokevirtual #51                 // Method akka/remote/WireFormats$ActorRefData.isInitialized:()Z
      56: ifne          66
      59: aload_0
      60: iconst_0
      61: putfield      #10                 // Field memoizedIsInitialized:B
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokevirtual #52                 // Method getMessage:()Lakka/remote/WireFormats$SerializedMessage;
      70: invokevirtual #53                 // Method akka/remote/WireFormats$SerializedMessage.isInitialized:()Z
      73: ifne          83
      76: aload_0
      77: iconst_0
      78: putfield      #10                 // Field memoizedIsInitialized:B
      81: iconst_0
      82: ireturn
      83: aload_0
      84: invokevirtual #54                 // Method hasSender:()Z
      87: ifeq          107
      90: aload_0
      91: invokevirtual #55                 // Method getSender:()Lakka/remote/WireFormats$ActorRefData;
      94: invokevirtual #51                 // Method akka/remote/WireFormats$ActorRefData.isInitialized:()Z
      97: ifne          107
     100: aload_0
     101: iconst_0
     102: putfield      #10                 // Field memoizedIsInitialized:B
     105: iconst_0
     106: ireturn
     107: aload_0
     108: iconst_1
     109: putfield      #10                 // Field memoizedIsInitialized:B
     112: iconst_1
     113: ireturn

  public void writeTo(akka.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getSerializedSize:()I
       4: pop
       5: aload_0
       6: getfield      #1                  // Field bitField0_:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     24
      15: aload_1
      16: iconst_1
      17: aload_0
      18: getfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
      21: invokevirtual #57                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      24: aload_0
      25: getfield      #1                  // Field bitField0_:I
      28: iconst_2
      29: iand
      30: iconst_2
      31: if_icmpne     43
      34: aload_1
      35: iconst_2
      36: aload_0
      37: getfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
      40: invokevirtual #57                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      43: aload_0
      44: getfield      #1                  // Field bitField0_:I
      47: iconst_4
      48: iand
      49: iconst_4
      50: if_icmpne     62
      53: aload_1
      54: iconst_4
      55: aload_0
      56: getfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
      59: invokevirtual #57                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      62: aload_0
      63: getfield      #1                  // Field bitField0_:I
      66: bipush        8
      68: iand
      69: bipush        8
      71: if_icmpne     83
      74: aload_1
      75: iconst_5
      76: aload_0
      77: getfield      #2                  // Field seq_:J
      80: invokevirtual #58                 // Method akka/protobuf/CodedOutputStream.writeFixed64:(IJ)V
      83: aload_0
      84: invokevirtual #59                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      87: aload_1
      88: invokevirtual #60                 // Method akka/protobuf/UnknownFieldSet.writeTo:(Lakka/protobuf/CodedOutputStream;)V
      91: return

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoizedSerializedSize:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     12
      10: iload_1
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: getfield      #1                  // Field bitField0_:I
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     35
      24: iload_1
      25: iconst_1
      26: aload_0
      27: getfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
      30: invokestatic  #61                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      33: iadd
      34: istore_1
      35: aload_0
      36: getfield      #1                  // Field bitField0_:I
      39: iconst_2
      40: iand
      41: iconst_2
      42: if_icmpne     56
      45: iload_1
      46: iconst_2
      47: aload_0
      48: getfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
      51: invokestatic  #61                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      54: iadd
      55: istore_1
      56: aload_0
      57: getfield      #1                  // Field bitField0_:I
      60: iconst_4
      61: iand
      62: iconst_4
      63: if_icmpne     77
      66: iload_1
      67: iconst_4
      68: aload_0
      69: getfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
      72: invokestatic  #61                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      75: iadd
      76: istore_1
      77: aload_0
      78: getfield      #1                  // Field bitField0_:I
      81: bipush        8
      83: iand
      84: bipush        8
      86: if_icmpne     100
      89: iload_1
      90: iconst_5
      91: aload_0
      92: getfield      #2                  // Field seq_:J
      95: invokestatic  #62                 // Method akka/protobuf/CodedOutputStream.computeFixed64Size:(IJ)I
      98: iadd
      99: istore_1
     100: iload_1
     101: aload_0
     102: invokevirtual #59                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
     105: invokevirtual #63                 // Method akka/protobuf/UnknownFieldSet.getSerializedSize:()I
     108: iadd
     109: istore_1
     110: aload_0
     111: iload_1
     112: putfield      #11                 // Field memoizedSerializedSize:I
     115: iload_1
     116: ireturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokespecial #64                 // Method akka/protobuf/GeneratedMessage.writeReplace:()Ljava/lang/Object;
       4: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(akka.protobuf.ByteString) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #65,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      12: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(akka.protobuf.ByteString, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #66,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      13: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(byte[]) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #67,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:([B)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      12: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(byte[], akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #68,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:([BLakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      13: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #69,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      12: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #70,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      13: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseDelimitedFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #71,  2           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      12: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseDelimitedFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #72,  3           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      13: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(akka.protobuf.CodedInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #73,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;)Ljava/lang/Object;
       9: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      12: areturn

  public static akka.remote.WireFormats$RemoteEnvelope parseFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #74,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #42                 // class akka/remote/WireFormats$RemoteEnvelope
      13: areturn

  public static akka.remote.WireFormats$RemoteEnvelope$Builder newBuilder();
    Code:
       0: invokestatic  #75                 // Method akka/remote/WireFormats$RemoteEnvelope$Builder.access$1300:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       3: areturn

  public akka.remote.WireFormats$RemoteEnvelope$Builder newBuilderForType();
    Code:
       0: invokestatic  #76                 // Method newBuilder:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       3: areturn

  public static akka.remote.WireFormats$RemoteEnvelope$Builder newBuilder(akka.remote.WireFormats$RemoteEnvelope);
    Code:
       0: invokestatic  #76                 // Method newBuilder:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       3: aload_0
       4: invokevirtual #77                 // Method akka/remote/WireFormats$RemoteEnvelope$Builder.mergeFrom:(Lakka/remote/WireFormats$RemoteEnvelope;)Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       7: areturn

  public akka.remote.WireFormats$RemoteEnvelope$Builder toBuilder();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method newBuilder:(Lakka/remote/WireFormats$RemoteEnvelope;)Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       4: areturn

  protected akka.remote.WireFormats$RemoteEnvelope$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: new           #43                 // class akka/remote/WireFormats$RemoteEnvelope$Builder
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #79                 // Method akka/remote/WireFormats$RemoteEnvelope$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;Lakka/remote/WireFormats$1;)V
       9: astore_2
      10: aload_2
      11: areturn

  protected akka.protobuf.Message$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method newBuilderForType:(Lakka/protobuf/GeneratedMessage$BuilderParent;)Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       5: areturn

  public akka.protobuf.Message$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method toBuilder:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       4: areturn

  public akka.protobuf.Message$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method newBuilderForType:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method toBuilder:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method newBuilderForType:()Lakka/remote/WireFormats$RemoteEnvelope$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getDefaultInstanceForType:()Lakka/remote/WireFormats$RemoteEnvelope;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getDefaultInstanceForType:()Lakka/remote/WireFormats$RemoteEnvelope;
       4: areturn

  akka.remote.WireFormats$RemoteEnvelope(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite, akka.remote.WireFormats$1) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method "<init>":(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)V
       6: return

  static boolean access$1500();
    Code:
       0: getstatic     #7                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  akka.remote.WireFormats$RemoteEnvelope(akka.protobuf.GeneratedMessage$Builder, akka.remote.WireFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: return

  static akka.remote.WireFormats$ActorRefData access$1702(akka.remote.WireFormats$RemoteEnvelope, akka.remote.WireFormats$ActorRefData);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field recipient_:Lakka/remote/WireFormats$ActorRefData;
       6: areturn

  static akka.remote.WireFormats$SerializedMessage access$1802(akka.remote.WireFormats$RemoteEnvelope, akka.remote.WireFormats$SerializedMessage);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field message_:Lakka/remote/WireFormats$SerializedMessage;
       6: areturn

  static akka.remote.WireFormats$ActorRefData access$1902(akka.remote.WireFormats$RemoteEnvelope, akka.remote.WireFormats$ActorRefData);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field sender_:Lakka/remote/WireFormats$ActorRefData;
       6: areturn

  static long access$2002(akka.remote.WireFormats$RemoteEnvelope, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #2                  // Field seq_:J
       6: lreturn

  static int access$2102(akka.remote.WireFormats$RemoteEnvelope, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field bitField0_:I
       6: ireturn

  static {};
    Code:
       0: new           #84                 // class akka/remote/WireFormats$RemoteEnvelope$1
       3: dup
       4: invokespecial #85                 // Method akka/remote/WireFormats$RemoteEnvelope$1."<init>":()V
       7: putstatic     #45                 // Field PARSER:Lakka/protobuf/Parser;
      10: new           #42                 // class akka/remote/WireFormats$RemoteEnvelope
      13: dup
      14: iconst_1
      15: invokespecial #86                 // Method "<init>":(Z)V
      18: putstatic     #16                 // Field defaultInstance:Lakka/remote/WireFormats$RemoteEnvelope;
      21: getstatic     #16                 // Field defaultInstance:Lakka/remote/WireFormats$RemoteEnvelope;
      24: invokespecial #17                 // Method initFields:()V
      27: return
}
