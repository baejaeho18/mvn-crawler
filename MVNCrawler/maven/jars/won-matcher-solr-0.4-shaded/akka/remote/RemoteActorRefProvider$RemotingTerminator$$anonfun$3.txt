Compiled from "RemoteActorRefProvider.scala"
public final class akka.remote.RemoteActorRefProvider$RemotingTerminator$$anonfun$3 extends scala.runtime.AbstractPartialFunction<akka.actor.FSM$Event<scala.Option<akka.remote.RemoteActorRefProvider$Internals>>, akka.actor.FSM$State<akka.remote.RemoteActorRefProvider$TerminatorState, scala.Option<akka.remote.RemoteActorRefProvider$Internals>>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.RemoteActorRefProvider$RemotingTerminator $outer;

  public final <A1 extends akka.actor.FSM$Event<scala.Option<akka.remote.RemoteActorRefProvider$Internals>>, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        130
       6: aload_3
       7: invokevirtual #24                 // Method akka/actor/FSM$Event.event:()Ljava/lang/Object;
      10: astore        4
      12: aload_3
      13: invokevirtual #27                 // Method akka/actor/FSM$Event.stateData:()Ljava/lang/Object;
      16: checkcast     #29                 // class scala/Option
      19: astore        5
      21: getstatic     #35                 // Field akka/actor/SystemGuardian$TerminationHookDone$.MODULE$:Lakka/actor/SystemGuardian$TerminationHookDone$;
      24: aload         4
      26: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      29: ifeq          130
      32: aload         5
      34: instanceof    #43                 // class scala/Some
      37: ifeq          130
      40: aload         5
      42: checkcast     #43                 // class scala/Some
      45: astore        6
      47: aload         6
      49: invokevirtual #46                 // Method scala/Some.x:()Ljava/lang/Object;
      52: checkcast     #48                 // class akka/remote/RemoteActorRefProvider$Internals
      55: astore        7
      57: aload_0
      58: getfield      #50                 // Field $outer:Lakka/remote/RemoteActorRefProvider$RemotingTerminator;
      61: invokevirtual #54                 // Method akka/remote/RemoteActorRefProvider$RemotingTerminator.log:()Lakka/event/LoggingAdapter;
      64: ldc           #56                 // String Remote daemon shut down; proceeding with flushing remote transports.
      66: invokeinterface #62,  2           // InterfaceMethod akka/event/LoggingAdapter.info:(Ljava/lang/String;)V
      71: getstatic     #67                 // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
      74: aload         7
      76: invokevirtual #71                 // Method akka/remote/RemoteActorRefProvider$Internals.transport:()Lakka/remote/RemoteTransport;
      79: invokevirtual #77                 // Method akka/remote/RemoteTransport.shutdown:()Lscala/concurrent/Future;
      82: aload_0
      83: getfield      #50                 // Field $outer:Lakka/remote/RemoteActorRefProvider$RemotingTerminator;
      86: invokevirtual #81                 // Method akka/remote/RemoteActorRefProvider$RemotingTerminator.context:()Lakka/actor/ActorContext;
      89: invokeinterface #87,  1           // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      94: invokevirtual #91                 // Method akka/pattern/package$.pipe:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lakka/pattern/PipeToSupport$PipeableFuture;
      97: aload_0
      98: getfield      #50                 // Field $outer:Lakka/remote/RemoteActorRefProvider$RemotingTerminator;
     101: invokevirtual #95                 // Method akka/remote/RemoteActorRefProvider$RemotingTerminator.self:()Lakka/actor/ActorRef;
     104: aload_0
     105: getfield      #50                 // Field $outer:Lakka/remote/RemoteActorRefProvider$RemotingTerminator;
     108: invokevirtual #95                 // Method akka/remote/RemoteActorRefProvider$RemotingTerminator.self:()Lakka/actor/ActorRef;
     111: invokevirtual #101                // Method akka/pattern/PipeToSupport$PipeableFuture.pipeTo:(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
     114: pop
     115: aload_0
     116: getfield      #50                 // Field $outer:Lakka/remote/RemoteActorRefProvider$RemotingTerminator;
     119: getstatic     #106                // Field akka/remote/RemoteActorRefProvider$WaitTransportShutdown$.MODULE$:Lakka/remote/RemoteActorRefProvider$WaitTransportShutdown$;
     122: invokevirtual #110                // Method akka/remote/RemoteActorRefProvider$RemotingTerminator.goto:(Ljava/lang/Object;)Lakka/actor/FSM$State;
     125: astore        8
     127: goto          139
     130: aload_2
     131: aload_1
     132: invokeinterface #116,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     137: astore        8
     139: aload         8
     141: areturn

  public final boolean isDefinedAt(akka.actor.FSM$Event<scala.Option<akka.remote.RemoteActorRefProvider$Internals>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        44
       6: aload_2
       7: invokevirtual #24                 // Method akka/actor/FSM$Event.event:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #27                 // Method akka/actor/FSM$Event.stateData:()Ljava/lang/Object;
      15: checkcast     #29                 // class scala/Option
      18: astore        4
      20: getstatic     #35                 // Field akka/actor/SystemGuardian$TerminationHookDone$.MODULE$:Lakka/actor/SystemGuardian$TerminationHookDone$;
      23: aload_3
      24: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          44
      30: aload         4
      32: instanceof    #43                 // class scala/Some
      35: ifeq          44
      38: iconst_1
      39: istore        5
      41: goto          47
      44: iconst_0
      45: istore        5
      47: iload         5
      49: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class akka/actor/FSM$Event
       5: invokevirtual #128                // Method isDefinedAt:(Lakka/actor/FSM$Event;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class akka/actor/FSM$Event
       5: aload_2
       6: invokevirtual #132                // Method applyOrElse:(Lakka/actor/FSM$Event;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.remote.RemoteActorRefProvider$RemotingTerminator$$anonfun$3(akka.remote.RemoteActorRefProvider$RemotingTerminator);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #50                 // Field $outer:Lakka/remote/RemoteActorRefProvider$RemotingTerminator;
      11: aload_0
      12: invokespecial #137                // Method scala/runtime/AbstractPartialFunction."<init>":()V
      15: return
}
