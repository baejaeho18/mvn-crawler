Compiled from "Endpoint.scala"
public abstract class akka.remote.EndpointActor implements akka.actor.Actor,akka.actor.ActorLogging {
  private final akka.actor.Address localAddress;

  private final akka.actor.Address remoteAddress;

  private final akka.remote.transport.Transport transport;

  private final akka.remote.RemoteSettings settings;

  private final akka.remote.transport.AkkaPduCodec codec;

  private final akka.remote.EventPublisher eventPublisher;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #32                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #46                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #49                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #73                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #100                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #103                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.actor.Address localAddress();
    Code:
       0: aload_0
       1: getfield      #117                // Field localAddress:Lakka/actor/Address;
       4: areturn

  public akka.actor.Address remoteAddress();
    Code:
       0: aload_0
       1: getfield      #119                // Field remoteAddress:Lakka/actor/Address;
       4: areturn

  public akka.remote.transport.Transport transport();
    Code:
       0: aload_0
       1: getfield      #122                // Field transport:Lakka/remote/transport/Transport;
       4: areturn

  public akka.remote.RemoteSettings settings();
    Code:
       0: aload_0
       1: getfield      #125                // Field settings:Lakka/remote/RemoteSettings;
       4: areturn

  public akka.remote.transport.AkkaPduCodec codec();
    Code:
       0: aload_0
       1: getfield      #128                // Field codec:Lakka/remote/transport/AkkaPduCodec;
       4: areturn

  public abstract boolean inbound();

  public akka.remote.EventPublisher eventPublisher();
    Code:
       0: aload_0
       1: getfield      #133                // Field eventPublisher:Lakka/remote/EventPublisher;
       4: areturn

  public void publishError(java.lang.Throwable, int);
    Code:
       0: aload_0
       1: new           #137                // class akka/remote/AssociationErrorEvent
       4: dup
       5: aload_1
       6: aload_0
       7: invokevirtual #139                // Method localAddress:()Lakka/actor/Address;
      10: aload_0
      11: invokevirtual #141                // Method remoteAddress:()Lakka/actor/Address;
      14: aload_0
      15: invokevirtual #143                // Method inbound:()Z
      18: iload_2
      19: invokespecial #147                // Method akka/remote/AssociationErrorEvent."<init>":(Ljava/lang/Throwable;Lakka/actor/Address;Lakka/actor/Address;ZI)V
      22: invokespecial #151                // Method tryPublish:(Lakka/remote/AssociationEvent;)V
      25: return

  public void publishDisassociated();
    Code:
       0: aload_0
       1: new           #156                // class akka/remote/DisassociatedEvent
       4: dup
       5: aload_0
       6: invokevirtual #139                // Method localAddress:()Lakka/actor/Address;
       9: aload_0
      10: invokevirtual #141                // Method remoteAddress:()Lakka/actor/Address;
      13: aload_0
      14: invokevirtual #143                // Method inbound:()Z
      17: invokespecial #159                // Method akka/remote/DisassociatedEvent."<init>":(Lakka/actor/Address;Lakka/actor/Address;Z)V
      20: invokespecial #151                // Method tryPublish:(Lakka/remote/AssociationEvent;)V
      23: return

  private void tryPublish(akka.remote.AssociationEvent);
    Code:
       0: aload_0
       1: invokevirtual #161                // Method eventPublisher:()Lakka/remote/EventPublisher;
       4: aload_1
       5: invokevirtual #167                // Method akka/remote/EventPublisher.notifyListeners:(Lakka/remote/RemotingLifecycleEvent;)V
       8: goto          61
      11: astore_2
      12: aload_2
      13: astore_3
      14: getstatic     #173                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      17: aload_3
      18: invokevirtual #177                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      21: astore        4
      23: aload         4
      25: invokevirtual #182                // Method scala/Option.isEmpty:()Z
      28: ifeq          33
      31: aload_2
      32: athrow
      33: aload         4
      35: invokevirtual #186                // Method scala/Option.get:()Ljava/lang/Object;
      38: checkcast     #188                // class java/lang/Throwable
      41: astore        5
      43: aload_0
      44: invokevirtual #190                // Method log:()Lakka/event/LoggingAdapter;
      47: aload         5
      49: ldc           #192                // String Unable to publish error event to EventStream.
      51: invokeinterface #198,  3          // InterfaceMethod akka/event/LoggingAdapter.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
      56: getstatic     #204                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      59: astore        6
      61: return
    Exception table:
       from    to  target type
           0    11    11   any

  public akka.remote.EndpointActor(akka.actor.Address, akka.actor.Address, akka.remote.transport.Transport, akka.remote.RemoteSettings, akka.remote.transport.AkkaPduCodec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field localAddress:Lakka/actor/Address;
       5: aload_0
       6: aload_2
       7: putfield      #119                // Field remoteAddress:Lakka/actor/Address;
      10: aload_0
      11: aload_3
      12: putfield      #122                // Field transport:Lakka/remote/transport/Transport;
      15: aload_0
      16: aload         4
      18: putfield      #125                // Field settings:Lakka/remote/RemoteSettings;
      21: aload_0
      22: aload         5
      24: putfield      #128                // Field codec:Lakka/remote/transport/AkkaPduCodec;
      27: aload_0
      28: invokespecial #210                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #213                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      35: aload_0
      36: invokestatic  #216                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      39: aload_0
      40: new           #163                // class akka/remote/EventPublisher
      43: dup
      44: aload_0
      45: invokevirtual #218                // Method context:()Lakka/actor/ActorContext;
      48: invokeinterface #224,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      53: aload_0
      54: invokevirtual #190                // Method log:()Lakka/event/LoggingAdapter;
      57: aload         4
      59: invokevirtual #230                // Method akka/remote/RemoteSettings.RemoteLifecycleEventsLogLevel:()I
      62: invokespecial #233                // Method akka/remote/EventPublisher."<init>":(Lakka/actor/ActorSystem;Lakka/event/LoggingAdapter;I)V
      65: putfield      #133                // Field eventPublisher:Lakka/remote/EventPublisher;
      68: return
}
