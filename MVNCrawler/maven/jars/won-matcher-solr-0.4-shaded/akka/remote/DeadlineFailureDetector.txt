Compiled from "DeadlineFailureDetector.scala"
public class akka.remote.DeadlineFailureDetector implements akka.remote.FailureDetector {
  private final scala.concurrent.duration.FiniteDuration acceptableHeartbeatPause;

  private final scala.concurrent.duration.FiniteDuration heartbeatInterval;

  private final akka.remote.FailureDetector$Clock clock;

  private final long deadlineMillis;

  private volatile long heartbeatTimestamp;

  private volatile boolean active;

  public scala.concurrent.duration.FiniteDuration acceptableHeartbeatPause();
    Code:
       0: aload_0
       1: getfield      #23                 // Field acceptableHeartbeatPause:Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public scala.concurrent.duration.FiniteDuration heartbeatInterval();
    Code:
       0: aload_0
       1: getfield      #27                 // Field heartbeatInterval:Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  private long deadlineMillis();
    Code:
       0: aload_0
       1: getfield      #30                 // Field deadlineMillis:J
       4: lreturn

  private long heartbeatTimestamp();
    Code:
       0: aload_0
       1: getfield      #32                 // Field heartbeatTimestamp:J
       4: lreturn

  private void heartbeatTimestamp_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #32                 // Field heartbeatTimestamp:J
       5: return

  private boolean active();
    Code:
       0: aload_0
       1: getfield      #38                 // Field active:Z
       4: ireturn

  private void active_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field active:Z
       5: return

  public boolean isAvailable();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #43                 // Field clock:Lakka/remote/FailureDetector$Clock;
       5: invokevirtual #48                 // Method akka/remote/FailureDetector$Clock.apply$mcJ$sp:()J
       8: invokespecial #51                 // Method isAvailable:(J)Z
      11: ireturn

  private boolean isAvailable(long);
    Code:
       0: aload_0
       1: invokespecial #53                 // Method active:()Z
       4: ifeq          29
       7: aload_0
       8: invokespecial #55                 // Method heartbeatTimestamp:()J
      11: aload_0
      12: invokespecial #57                 // Method deadlineMillis:()J
      15: ladd
      16: lload_1
      17: lcmp
      18: ifle          25
      21: iconst_1
      22: goto          30
      25: iconst_0
      26: goto          30
      29: iconst_1
      30: ireturn

  public boolean isMonitoring();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method active:()Z
       4: ireturn

  public final void heartbeat();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #43                 // Field clock:Lakka/remote/FailureDetector$Clock;
       5: invokevirtual #48                 // Method akka/remote/FailureDetector$Clock.apply$mcJ$sp:()J
       8: invokespecial #63                 // Method heartbeatTimestamp_$eq:(J)V
      11: aload_0
      12: iconst_1
      13: invokespecial #65                 // Method active_$eq:(Z)V
      16: return

  public akka.remote.DeadlineFailureDetector(scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, akka.remote.FailureDetector$Clock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field acceptableHeartbeatPause:Lscala/concurrent/duration/FiniteDuration;
       5: aload_0
       6: aload_2
       7: putfield      #27                 // Field heartbeatInterval:Lscala/concurrent/duration/FiniteDuration;
      10: aload_0
      11: aload_3
      12: putfield      #43                 // Field clock:Lakka/remote/FailureDetector$Clock;
      15: aload_0
      16: invokespecial #69                 // Method java/lang/Object."<init>":()V
      19: getstatic     #75                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: aload_1
      23: getstatic     #80                 // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
      26: invokevirtual #83                 // Method scala/concurrent/duration/Duration$.Zero:()Lscala/concurrent/duration/FiniteDuration;
      29: invokevirtual #89                 // Method scala/concurrent/duration/FiniteDuration.$greater$eq:(Ljava/lang/Object;)Z
      32: new           #91                 // class akka/remote/DeadlineFailureDetector$$anonfun$1
      35: dup
      36: aload_0
      37: invokespecial #94                 // Method akka/remote/DeadlineFailureDetector$$anonfun$1."<init>":(Lakka/remote/DeadlineFailureDetector;)V
      40: invokevirtual #98                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      43: getstatic     #75                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      46: aload_2
      47: getstatic     #80                 // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
      50: invokevirtual #83                 // Method scala/concurrent/duration/Duration$.Zero:()Lscala/concurrent/duration/FiniteDuration;
      53: invokevirtual #101                // Method scala/concurrent/duration/FiniteDuration.$greater:(Ljava/lang/Object;)Z
      56: new           #103                // class akka/remote/DeadlineFailureDetector$$anonfun$2
      59: dup
      60: aload_0
      61: invokespecial #104                // Method akka/remote/DeadlineFailureDetector$$anonfun$2."<init>":(Lakka/remote/DeadlineFailureDetector;)V
      64: invokevirtual #98                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      67: aload_0
      68: aload_1
      69: invokevirtual #107                // Method scala/concurrent/duration/FiniteDuration.toMillis:()J
      72: aload_2
      73: invokevirtual #107                // Method scala/concurrent/duration/FiniteDuration.toMillis:()J
      76: ladd
      77: putfield      #30                 // Field deadlineMillis:J
      80: aload_0
      81: lconst_0
      82: putfield      #32                 // Field heartbeatTimestamp:J
      85: aload_0
      86: iconst_0
      87: putfield      #38                 // Field active:Z
      90: return

  public akka.remote.DeadlineFailureDetector(com.typesafe.config.Config, akka.event.EventStream);
    Code:
       0: aload_0
       1: getstatic     #113                // Field akka/util/Helpers$ConfigOps$.MODULE$:Lakka/util/Helpers$ConfigOps$;
       4: getstatic     #118                // Field akka/util/Helpers$.MODULE$:Lakka/util/Helpers$;
       7: aload_1
       8: invokevirtual #122                // Method akka/util/Helpers$.ConfigOps:(Lcom/typesafe/config/Config;)Lcom/typesafe/config/Config;
      11: ldc           #124                // String acceptable-heartbeat-pause
      13: invokevirtual #128                // Method akka/util/Helpers$ConfigOps$.getMillisDuration$extension:(Lcom/typesafe/config/Config;Ljava/lang/String;)Lscala/concurrent/duration/FiniteDuration;
      16: getstatic     #113                // Field akka/util/Helpers$ConfigOps$.MODULE$:Lakka/util/Helpers$ConfigOps$;
      19: getstatic     #118                // Field akka/util/Helpers$.MODULE$:Lakka/util/Helpers$;
      22: aload_1
      23: invokevirtual #122                // Method akka/util/Helpers$.ConfigOps:(Lcom/typesafe/config/Config;)Lcom/typesafe/config/Config;
      26: ldc           #130                // String heartbeat-interval
      28: invokevirtual #128                // Method akka/util/Helpers$ConfigOps$.getMillisDuration$extension:(Lcom/typesafe/config/Config;Ljava/lang/String;)Lscala/concurrent/duration/FiniteDuration;
      31: getstatic     #135                // Field akka/remote/FailureDetector$.MODULE$:Lakka/remote/FailureDetector$;
      34: invokevirtual #139                // Method akka/remote/FailureDetector$.defaultClock:()Lakka/remote/FailureDetector$Clock;
      37: invokespecial #141                // Method "<init>":(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/remote/FailureDetector$Clock;)V
      40: return

  public akka.remote.DeadlineFailureDetector(scala.concurrent.duration.FiniteDuration, akka.remote.FailureDetector$Clock);
    Code:
       0: aload_0
       1: aload_1
       2: new           #148                // class scala/concurrent/duration/package$DurationInt
       5: dup
       6: getstatic     #153                // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
       9: iconst_1
      10: invokevirtual #157                // Method scala/concurrent/duration/package$.DurationInt:(I)I
      13: invokespecial #160                // Method scala/concurrent/duration/package$DurationInt."<init>":(I)V
      16: invokevirtual #163                // Method scala/concurrent/duration/package$DurationInt.millis:()Lscala/concurrent/duration/FiniteDuration;
      19: aload_2
      20: invokespecial #141                // Method "<init>":(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/remote/FailureDetector$Clock;)V
      23: return
}
