Compiled from "ArteryControlFormats.java"
public final class akka.remote.ArteryControlFormats$SystemMessageDeliveryAck extends akka.protobuf.GeneratedMessage implements akka.remote.ArteryControlFormats$SystemMessageDeliveryAckOrBuilder {
  private static final akka.remote.ArteryControlFormats$SystemMessageDeliveryAck defaultInstance;

  private final akka.protobuf.UnknownFieldSet unknownFields;

  public static akka.protobuf.Parser<akka.remote.ArteryControlFormats$SystemMessageDeliveryAck> PARSER;

  private int bitField0_;

  public static final int SEQNO_FIELD_NUMBER;

  private long seqNo_;

  public static final int FROM_FIELD_NUMBER;

  private akka.remote.ArteryControlFormats$UniqueAddress from_;

  private byte memoizedIsInitialized;

  private int memoizedSerializedSize;

  private static final long serialVersionUID;

  private akka.remote.ArteryControlFormats$SystemMessageDeliveryAck(akka.protobuf.GeneratedMessage$Builder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method akka/protobuf/GeneratedMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #8                  // Field memoizedIsInitialized:B
      10: aload_0
      11: iconst_m1
      12: putfield      #9                  // Field memoizedSerializedSize:I
      15: aload_0
      16: aload_1
      17: invokevirtual #10                 // Method akka/protobuf/GeneratedMessage$Builder.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      20: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      23: return

  private akka.remote.ArteryControlFormats$SystemMessageDeliveryAck(boolean);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #8                  // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #9                  // Field memoizedSerializedSize:I
      14: aload_0
      15: invokestatic  #13                 // Method akka/protobuf/UnknownFieldSet.getDefaultInstance:()Lakka/protobuf/UnknownFieldSet;
      18: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      21: return

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck getDefaultInstance();
    Code:
       0: getstatic     #14                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;
       3: areturn

  public akka.remote.ArteryControlFormats$SystemMessageDeliveryAck getDefaultInstanceForType();
    Code:
       0: getstatic     #14                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;
       3: areturn

  public final akka.protobuf.UnknownFieldSet getUnknownFields();
    Code:
       0: aload_0
       1: getfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
       4: areturn

  private akka.remote.ArteryControlFormats$SystemMessageDeliveryAck(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #8                  // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #9                  // Field memoizedSerializedSize:I
      14: aload_0
      15: invokespecial #15                 // Method initFields:()V
      18: iconst_0
      19: istore_3
      20: invokestatic  #16                 // Method akka/protobuf/UnknownFieldSet.newBuilder:()Lakka/protobuf/UnknownFieldSet$Builder;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: ifne          199
      33: aload_1
      34: invokevirtual #17                 // Method akka/protobuf/CodedInputStream.readTag:()I
      37: istore        6
      39: iload         6
      41: lookupswitch  { // 3
                     0: 76
                     8: 101
                    18: 122
               default: 82
          }
      76: iconst_1
      77: istore        5
      79: goto          196
      82: aload_0
      83: aload_1
      84: aload         4
      86: aload_2
      87: iload         6
      89: invokevirtual #18                 // Method parseUnknownField:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/UnknownFieldSet$Builder;Lakka/protobuf/ExtensionRegistryLite;I)Z
      92: ifne          196
      95: iconst_1
      96: istore        5
      98: goto          196
     101: aload_0
     102: dup
     103: getfield      #1                  // Field bitField0_:I
     106: iconst_1
     107: ior
     108: putfield      #1                  // Field bitField0_:I
     111: aload_0
     112: aload_1
     113: invokevirtual #19                 // Method akka/protobuf/CodedInputStream.readUInt64:()J
     116: putfield      #3                  // Field seqNo_:J
     119: goto          196
     122: aconst_null
     123: astore        7
     125: aload_0
     126: getfield      #1                  // Field bitField0_:I
     129: iconst_2
     130: iand
     131: iconst_2
     132: if_icmpne     144
     135: aload_0
     136: getfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     139: invokevirtual #20                 // Method akka/remote/ArteryControlFormats$UniqueAddress.toBuilder:()Lakka/remote/ArteryControlFormats$UniqueAddress$Builder;
     142: astore        7
     144: aload_0
     145: aload_1
     146: getstatic     #21                 // Field akka/remote/ArteryControlFormats$UniqueAddress.PARSER:Lakka/protobuf/Parser;
     149: aload_2
     150: invokevirtual #22                 // Method akka/protobuf/CodedInputStream.readMessage:(Lakka/protobuf/Parser;Lakka/protobuf/ExtensionRegistryLite;)Lakka/protobuf/MessageLite;
     153: checkcast     #23                 // class akka/remote/ArteryControlFormats$UniqueAddress
     156: putfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     159: aload         7
     161: ifnull        183
     164: aload         7
     166: aload_0
     167: getfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     170: invokevirtual #24                 // Method akka/remote/ArteryControlFormats$UniqueAddress$Builder.mergeFrom:(Lakka/remote/ArteryControlFormats$UniqueAddress;)Lakka/remote/ArteryControlFormats$UniqueAddress$Builder;
     173: pop
     174: aload_0
     175: aload         7
     177: invokevirtual #25                 // Method akka/remote/ArteryControlFormats$UniqueAddress$Builder.buildPartial:()Lakka/remote/ArteryControlFormats$UniqueAddress;
     180: putfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
     183: aload_0
     184: dup
     185: getfield      #1                  // Field bitField0_:I
     188: iconst_2
     189: ior
     190: putfield      #1                  // Field bitField0_:I
     193: goto          196
     196: goto          28
     199: aload_0
     200: aload         4
     202: invokevirtual #26                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     205: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     208: aload_0
     209: invokevirtual #27                 // Method makeExtensionsImmutable:()V
     212: goto          261
     215: astore        5
     217: aload         5
     219: aload_0
     220: invokevirtual #29                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     223: athrow
     224: astore        5
     226: new           #28                 // class akka/protobuf/InvalidProtocolBufferException
     229: dup
     230: aload         5
     232: invokevirtual #31                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     235: invokespecial #32                 // Method akka/protobuf/InvalidProtocolBufferException."<init>":(Ljava/lang/String;)V
     238: aload_0
     239: invokevirtual #29                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     242: athrow
     243: astore        8
     245: aload_0
     246: aload         4
     248: invokevirtual #26                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     251: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     254: aload_0
     255: invokevirtual #27                 // Method makeExtensionsImmutable:()V
     258: aload         8
     260: athrow
     261: return
    Exception table:
       from    to  target type
          25   199   215   Class akka/protobuf/InvalidProtocolBufferException
          25   199   224   Class java/io/IOException
          25   199   243   any
         215   245   243   any

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #33                 // Method akka/remote/ArteryControlFormats.access$6500:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #34                 // Method akka/remote/ArteryControlFormats.access$6600:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
       5: ldc           #36                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder
       7: invokevirtual #37                 // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  public akka.protobuf.Parser<akka.remote.ArteryControlFormats$SystemMessageDeliveryAck> getParserForType();
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: areturn

  public boolean hasSeqNo();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public long getSeqNo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field seqNo_:J
       4: lreturn

  public boolean hasFrom();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.ArteryControlFormats$UniqueAddress getFrom();
    Code:
       0: aload_0
       1: getfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
       4: areturn

  public akka.remote.ArteryControlFormats$UniqueAddressOrBuilder getFromOrBuilder();
    Code:
       0: aload_0
       1: getfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
       4: areturn

  private void initFields();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #3                  // Field seqNo_:J
       5: aload_0
       6: invokestatic  #39                 // Method akka/remote/ArteryControlFormats$UniqueAddress.getDefaultInstance:()Lakka/remote/ArteryControlFormats$UniqueAddress;
       9: putfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
      12: return

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memoizedIsInitialized:B
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     21
      10: iload_1
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #40                 // Method hasSeqNo:()Z
      25: ifne          35
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field memoizedIsInitialized:B
      33: iconst_0
      34: ireturn
      35: aload_0
      36: invokevirtual #41                 // Method hasFrom:()Z
      39: ifne          49
      42: aload_0
      43: iconst_0
      44: putfield      #8                  // Field memoizedIsInitialized:B
      47: iconst_0
      48: ireturn
      49: aload_0
      50: invokevirtual #42                 // Method getFrom:()Lakka/remote/ArteryControlFormats$UniqueAddress;
      53: invokevirtual #43                 // Method akka/remote/ArteryControlFormats$UniqueAddress.isInitialized:()Z
      56: ifne          66
      59: aload_0
      60: iconst_0
      61: putfield      #8                  // Field memoizedIsInitialized:B
      64: iconst_0
      65: ireturn
      66: aload_0
      67: iconst_1
      68: putfield      #8                  // Field memoizedIsInitialized:B
      71: iconst_1
      72: ireturn

  public void writeTo(akka.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getSerializedSize:()I
       4: pop
       5: aload_0
       6: getfield      #1                  // Field bitField0_:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     24
      15: aload_1
      16: iconst_1
      17: aload_0
      18: getfield      #3                  // Field seqNo_:J
      21: invokevirtual #45                 // Method akka/protobuf/CodedOutputStream.writeUInt64:(IJ)V
      24: aload_0
      25: getfield      #1                  // Field bitField0_:I
      28: iconst_2
      29: iand
      30: iconst_2
      31: if_icmpne     43
      34: aload_1
      35: iconst_2
      36: aload_0
      37: getfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
      40: invokevirtual #46                 // Method akka/protobuf/CodedOutputStream.writeMessage:(ILakka/protobuf/MessageLite;)V
      43: aload_0
      44: invokevirtual #47                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      47: aload_1
      48: invokevirtual #48                 // Method akka/protobuf/UnknownFieldSet.writeTo:(Lakka/protobuf/CodedOutputStream;)V
      51: return

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoizedSerializedSize:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     12
      10: iload_1
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: getfield      #1                  // Field bitField0_:I
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     35
      24: iload_1
      25: iconst_1
      26: aload_0
      27: getfield      #3                  // Field seqNo_:J
      30: invokestatic  #49                 // Method akka/protobuf/CodedOutputStream.computeUInt64Size:(IJ)I
      33: iadd
      34: istore_1
      35: aload_0
      36: getfield      #1                  // Field bitField0_:I
      39: iconst_2
      40: iand
      41: iconst_2
      42: if_icmpne     56
      45: iload_1
      46: iconst_2
      47: aload_0
      48: getfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
      51: invokestatic  #50                 // Method akka/protobuf/CodedOutputStream.computeMessageSize:(ILakka/protobuf/MessageLite;)I
      54: iadd
      55: istore_1
      56: iload_1
      57: aload_0
      58: invokevirtual #47                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      61: invokevirtual #51                 // Method akka/protobuf/UnknownFieldSet.getSerializedSize:()I
      64: iadd
      65: istore_1
      66: aload_0
      67: iload_1
      68: putfield      #9                  // Field memoizedSerializedSize:I
      71: iload_1
      72: ireturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokespecial #52                 // Method akka/protobuf/GeneratedMessage.writeReplace:()Ljava/lang/Object;
       4: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(akka.protobuf.ByteString) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #53,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;)Ljava/lang/Object;
       9: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(akka.protobuf.ByteString, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #54,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(byte[]) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #55,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:([B)Ljava/lang/Object;
       9: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(byte[], akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #56,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:([BLakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #57,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #58,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseDelimitedFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #59,  2           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseDelimitedFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #60,  3           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(akka.protobuf.CodedInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #61,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;)Ljava/lang/Object;
       9: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      12: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck parseFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #62,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      13: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck$Builder newBuilder();
    Code:
       0: invokestatic  #63                 // Method akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder.access$6800:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       3: areturn

  public akka.remote.ArteryControlFormats$SystemMessageDeliveryAck$Builder newBuilderForType();
    Code:
       0: invokestatic  #64                 // Method newBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       3: areturn

  public static akka.remote.ArteryControlFormats$SystemMessageDeliveryAck$Builder newBuilder(akka.remote.ArteryControlFormats$SystemMessageDeliveryAck);
    Code:
       0: invokestatic  #64                 // Method newBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       3: aload_0
       4: invokevirtual #65                 // Method akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder.mergeFrom:(Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;)Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       7: areturn

  public akka.remote.ArteryControlFormats$SystemMessageDeliveryAck$Builder toBuilder();
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method newBuilder:(Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;)Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       4: areturn

  protected akka.remote.ArteryControlFormats$SystemMessageDeliveryAck$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: new           #36                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #67                 // Method akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;Lakka/remote/ArteryControlFormats$1;)V
       9: astore_2
      10: aload_2
      11: areturn

  protected akka.protobuf.Message$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method newBuilderForType:(Lakka/protobuf/GeneratedMessage$BuilderParent;)Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       5: areturn

  public akka.protobuf.Message$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method toBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       4: areturn

  public akka.protobuf.Message$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method newBuilderForType:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method toBuilder:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method newBuilderForType:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getDefaultInstanceForType:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getDefaultInstanceForType:()Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;
       4: areturn

  akka.remote.ArteryControlFormats$SystemMessageDeliveryAck(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite, akka.remote.ArteryControlFormats$1) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method "<init>":(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)V
       6: return

  static boolean access$7000();
    Code:
       0: getstatic     #5                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  akka.remote.ArteryControlFormats$SystemMessageDeliveryAck(akka.protobuf.GeneratedMessage$Builder, akka.remote.ArteryControlFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: return

  static long access$7202(akka.remote.ArteryControlFormats$SystemMessageDeliveryAck, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #3                  // Field seqNo_:J
       6: lreturn

  static akka.remote.ArteryControlFormats$UniqueAddress access$7302(akka.remote.ArteryControlFormats$SystemMessageDeliveryAck, akka.remote.ArteryControlFormats$UniqueAddress);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field from_:Lakka/remote/ArteryControlFormats$UniqueAddress;
       6: areturn

  static int access$7402(akka.remote.ArteryControlFormats$SystemMessageDeliveryAck, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field bitField0_:I
       6: ireturn

  static {};
    Code:
       0: new           #72                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$1
       3: dup
       4: invokespecial #73                 // Method akka/remote/ArteryControlFormats$SystemMessageDeliveryAck$1."<init>":()V
       7: putstatic     #38                 // Field PARSER:Lakka/protobuf/Parser;
      10: new           #35                 // class akka/remote/ArteryControlFormats$SystemMessageDeliveryAck
      13: dup
      14: iconst_1
      15: invokespecial #74                 // Method "<init>":(Z)V
      18: putstatic     #14                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;
      21: getstatic     #14                 // Field defaultInstance:Lakka/remote/ArteryControlFormats$SystemMessageDeliveryAck;
      24: invokespecial #15                 // Method initFields:()V
      27: return
}
