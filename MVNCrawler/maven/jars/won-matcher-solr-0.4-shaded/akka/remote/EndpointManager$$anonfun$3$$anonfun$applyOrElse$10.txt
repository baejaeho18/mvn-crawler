Compiled from "Remoting.scala"
public final class akka.remote.EndpointManager$$anonfun$3$$anonfun$applyOrElse$10 extends scala.runtime.AbstractFunction1<scala.Tuple2<akka.actor.ActorRef, akka.remote.transport.AkkaProtocolHandle>, java.lang.Object> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.EndpointManager$$anonfun$3 $outer;

  private final akka.actor.Address address$1;

  private final scala.Option uidToQuarantineOption$1;

  public final boolean apply(scala.Tuple2<akka.actor.ActorRef, akka.remote.transport.AkkaProtocolHandle>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        83
       6: aload_2
       7: invokevirtual #31                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #33                 // class akka/actor/ActorRef
      13: astore_3
      14: aload_2
      15: invokevirtual #36                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #38                 // class akka/remote/transport/AkkaProtocolHandle
      21: astore        4
      23: aload_0
      24: getfield      #40                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
      27: aload         4
      29: aload_0
      30: getfield      #42                 // Field address$1:Lakka/actor/Address;
      33: aload_0
      34: getfield      #44                 // Field uidToQuarantineOption$1:Lscala/Option;
      37: invokevirtual #48                 // Method akka/remote/EndpointManager$$anonfun$3.akka$remote$EndpointManager$$anonfun$$matchesQuarantine$1:(Lakka/remote/transport/AkkaProtocolHandle;Lakka/actor/Address;Lscala/Option;)Z
      40: istore        6
      42: iload         6
      44: ifeq          68
      47: aload         4
      49: invokevirtual #52                 // Method akka/remote/transport/AkkaProtocolHandle.disassociate:()V
      52: aload_0
      53: getfield      #40                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
      56: invokevirtual #56                 // Method akka/remote/EndpointManager$$anonfun$3.akka$remote$EndpointManager$$anonfun$$$outer:()Lakka/remote/EndpointManager;
      59: invokevirtual #62                 // Method akka/remote/EndpointManager.context:()Lakka/actor/ActorContext;
      62: aload_3
      63: invokeinterface #68,  2           // InterfaceMethod akka/actor/ActorContext.stop:(Lakka/actor/ActorRef;)V
      68: iload         6
      70: ifeq          77
      73: iconst_0
      74: goto          78
      77: iconst_1
      78: istore        5
      80: iload         5
      82: ireturn
      83: new           #70                 // class scala/MatchError
      86: dup
      87: aload_2
      88: invokespecial #74                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class scala/Tuple2
       5: invokevirtual #87                 // Method apply:(Lscala/Tuple2;)Z
       8: invokestatic  #93                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      11: areturn

  public akka.remote.EndpointManager$$anonfun$3$$anonfun$applyOrElse$10(akka.remote.EndpointManager$$anonfun$3, akka.actor.Address, scala.Option);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #40                 // Field $outer:Lakka/remote/EndpointManager$$anonfun$3;
      11: aload_0
      12: aload_2
      13: putfield      #42                 // Field address$1:Lakka/actor/Address;
      16: aload_0
      17: aload_3
      18: putfield      #44                 // Field uidToQuarantineOption$1:Lscala/Option;
      21: aload_0
      22: invokespecial #98                 // Method scala/runtime/AbstractFunction1."<init>":()V
      25: return
}
