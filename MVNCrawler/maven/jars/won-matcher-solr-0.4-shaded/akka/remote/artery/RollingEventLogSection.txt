Compiled from "FlightRecorder.scala"
public class akka.remote.artery.RollingEventLogSection {
  public final java.nio.channels.FileChannel akka$remote$artery$RollingEventLogSection$$fileChannel;

  public final long akka$remote$artery$RollingEventLogSection$$offset;

  public final long akka$remote$artery$RollingEventLogSection$$logBufferSize;

  private final int recordSize;

  private final long LogMask;

  private final org.agrona.concurrent.MappedResizeableBuffer[] buffers;

  public static int CommitEntrySize();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #18                 // Method akka/remote/artery/RollingEventLogSection$.CommitEntrySize:()I
       6: ireturn

  public static int Dirty();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #21                 // Method akka/remote/artery/RollingEventLogSection$.Dirty:()I
       6: ireturn

  public static int Committed();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #24                 // Method akka/remote/artery/RollingEventLogSection$.Committed:()I
       6: ireturn

  public static int Snapshot();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #27                 // Method akka/remote/artery/RollingEventLogSection$.Snapshot:()I
       6: ireturn

  public static int Live();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #30                 // Method akka/remote/artery/RollingEventLogSection$.Live:()I
       6: ireturn

  public static int Empty();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #33                 // Method akka/remote/artery/RollingEventLogSection$.Empty:()I
       6: ireturn

  public static long LogOffset();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #37                 // Method akka/remote/artery/RollingEventLogSection$.LogOffset:()J
       6: lreturn

  public static long RecordsOffset();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #40                 // Method akka/remote/artery/RollingEventLogSection$.RecordsOffset:()J
       6: lreturn

  public static long LogStateOffset();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #43                 // Method akka/remote/artery/RollingEventLogSection$.LogStateOffset:()J
       6: lreturn

  public static long HeadPointerOffset();
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #46                 // Method akka/remote/artery/RollingEventLogSection$.HeadPointerOffset:()J
       6: lreturn

  public void clear(int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field buffers:[Lorg/agrona/concurrent/MappedResizeableBuffer;
       4: iload_1
       5: aaload
       6: lconst_0
       7: aload_0
       8: getfield      #62                 // Field akka$remote$artery$RollingEventLogSection$$logBufferSize:J
      11: l2i
      12: iconst_0
      13: i2b
      14: invokevirtual #68                 // Method org/agrona/concurrent/MappedResizeableBuffer.setMemory:(JIB)V
      17: return

  public void write(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #60                 // Field buffers:[Lorg/agrona/concurrent/MappedResizeableBuffer;
       4: iload_1
       5: aaload
       6: astore_3
       7: aload_0
       8: aload_2
       9: aload_3
      10: invokespecial #77                 // Method writeRecord$1:(Ljava/nio/ByteBuffer;Lorg/agrona/concurrent/MappedResizeableBuffer;)V
      13: return

  public void markSnapshot(int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field buffers:[Lorg/agrona/concurrent/MappedResizeableBuffer;
       4: iload_1
       5: aaload
       6: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       9: invokevirtual #43                 // Method akka/remote/artery/RollingEventLogSection$.LogStateOffset:()J
      12: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      15: invokevirtual #27                 // Method akka/remote/artery/RollingEventLogSection$.Snapshot:()I
      18: i2l
      19: invokevirtual #86                 // Method org/agrona/concurrent/MappedResizeableBuffer.putLongVolatile:(JJ)V
      22: return

  public void markLive(int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field buffers:[Lorg/agrona/concurrent/MappedResizeableBuffer;
       4: iload_1
       5: aaload
       6: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       9: invokevirtual #43                 // Method akka/remote/artery/RollingEventLogSection$.LogStateOffset:()J
      12: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      15: invokevirtual #30                 // Method akka/remote/artery/RollingEventLogSection$.Live:()I
      18: i2l
      19: invokevirtual #86                 // Method org/agrona/concurrent/MappedResizeableBuffer.putLongVolatile:(JJ)V
      22: return

  public void close();
    Code:
       0: getstatic     #94                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #60                 // Field buffers:[Lorg/agrona/concurrent/MappedResizeableBuffer;
       7: checkcast     #96                 // class "[Ljava/lang/Object;"
      10: invokevirtual #100                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      13: new           #102                // class akka/remote/artery/RollingEventLogSection$$anonfun$close$1
      16: dup
      17: aload_0
      18: invokespecial #106                // Method akka/remote/artery/RollingEventLogSection$$anonfun$close$1."<init>":(Lakka/remote/artery/RollingEventLogSection;)V
      21: invokeinterface #112,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.foreach:(Lscala/Function1;)V
      26: return

  private final void writeRecord$1(java.nio.ByteBuffer, org.agrona.concurrent.MappedResizeableBuffer);
    Code:
       0: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       3: invokevirtual #40                 // Method akka/remote/artery/RollingEventLogSection$.RecordsOffset:()J
       6: aload_2
       7: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      10: invokevirtual #46                 // Method akka/remote/artery/RollingEventLogSection$.HeadPointerOffset:()J
      13: lconst_1
      14: invokevirtual #116                // Method org/agrona/concurrent/MappedResizeableBuffer.getAndAddLong:(JJ)J
      17: aload_0
      18: getfield      #118                // Field LogMask:J
      21: land
      22: aload_0
      23: getfield      #120                // Field recordSize:I
      26: i2l
      27: lmul
      28: ladd
      29: lstore        4
      31: lload         4
      33: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      36: invokevirtual #18                 // Method akka/remote/artery/RollingEventLogSection$.CommitEntrySize:()I
      39: i2l
      40: ladd
      41: lstore        6
      43: aload_2
      44: lload         4
      46: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      49: invokevirtual #24                 // Method akka/remote/artery/RollingEventLogSection$.Committed:()I
      52: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      55: invokevirtual #21                 // Method akka/remote/artery/RollingEventLogSection$.Dirty:()I
      58: invokevirtual #124                // Method org/agrona/concurrent/MappedResizeableBuffer.compareAndSetInt:(JII)Z
      61: ifeq          0
      64: aload_2
      65: lload         6
      67: aload_1
      68: aload_0
      69: getfield      #120                // Field recordSize:I
      72: invokevirtual #128                // Method org/agrona/concurrent/MappedResizeableBuffer.putBytes:(JLjava/nio/ByteBuffer;I)V
      75: aload_2
      76: lload         4
      78: getstatic     #16                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      81: invokevirtual #24                 // Method akka/remote/artery/RollingEventLogSection$.Committed:()I
      84: invokevirtual #132                // Method org/agrona/concurrent/MappedResizeableBuffer.putIntVolatile:(JI)V
      87: getstatic     #138                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      90: pop
      91: return

  public akka.remote.artery.RollingEventLogSection(java.nio.channels.FileChannel, long, long, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field akka$remote$artery$RollingEventLogSection$$fileChannel:Ljava/nio/channels/FileChannel;
       5: aload_0
       6: lload_2
       7: putfield      #147                // Field akka$remote$artery$RollingEventLogSection$$offset:J
      10: aload_0
      11: lload         6
      13: putfield      #62                 // Field akka$remote$artery$RollingEventLogSection$$logBufferSize:J
      16: aload_0
      17: iload         8
      19: putfield      #120                // Field recordSize:I
      22: aload_0
      23: invokespecial #149                // Method java/lang/Object."<init>":()V
      26: getstatic     #94                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: lload         4
      31: lconst_0
      32: lcmp
      33: ifle          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: new           #151                // class akka/remote/artery/RollingEventLogSection$$anonfun$1
      44: dup
      45: aload_0
      46: invokespecial #152                // Method akka/remote/artery/RollingEventLogSection$$anonfun$1."<init>":(Lakka/remote/artery/RollingEventLogSection;)V
      49: invokevirtual #156                // Method scala/Predef$.require:(ZLscala/Function0;)V
      52: getstatic     #94                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      55: lload         4
      57: lload         4
      59: lconst_1
      60: lsub
      61: land
      62: lconst_0
      63: lcmp
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: new           #158                // class akka/remote/artery/RollingEventLogSection$$anonfun$2
      75: dup
      76: aload_0
      77: invokespecial #159                // Method akka/remote/artery/RollingEventLogSection$$anonfun$2."<init>":(Lakka/remote/artery/RollingEventLogSection;)V
      80: invokevirtual #156                // Method scala/Predef$.require:(ZLscala/Function0;)V
      83: aload_0
      84: lload         4
      86: lconst_1
      87: lsub
      88: putfield      #118                // Field LogMask:J
      91: aload_0
      92: getstatic     #164                // Field scala/Array$.MODULE$:Lscala/Array$;
      95: getstatic     #169                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      98: invokevirtual #172                // Method akka/remote/artery/FlightRecorder$.SnapshotCount:()I
     101: new           #174                // class akka/remote/artery/RollingEventLogSection$$anonfun$3
     104: dup
     105: aload_0
     106: invokespecial #175                // Method akka/remote/artery/RollingEventLogSection$$anonfun$3."<init>":(Lakka/remote/artery/RollingEventLogSection;)V
     109: getstatic     #180                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     112: ldc           #64                 // class org/agrona/concurrent/MappedResizeableBuffer
     114: invokevirtual #184                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     117: invokevirtual #188                // Method scala/Array$.tabulate:(ILscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
     120: checkcast     #189                // class "[Lorg/agrona/concurrent/MappedResizeableBuffer;"
     123: putfield      #60                 // Field buffers:[Lorg/agrona/concurrent/MappedResizeableBuffer;
     126: return
}
