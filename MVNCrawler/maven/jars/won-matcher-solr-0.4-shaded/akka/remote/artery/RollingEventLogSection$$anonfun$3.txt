Compiled from "FlightRecorder.scala"
public final class akka.remote.artery.RollingEventLogSection$$anonfun$3 extends scala.runtime.AbstractFunction1<java.lang.Object, org.agrona.concurrent.MappedResizeableBuffer> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.artery.RollingEventLogSection $outer;

  public final org.agrona.concurrent.MappedResizeableBuffer apply(int);
    Code:
       0: new           #20                 // class org/agrona/concurrent/MappedResizeableBuffer
       3: dup
       4: aload_0
       5: getfield      #22                 // Field $outer:Lakka/remote/artery/RollingEventLogSection;
       8: getfield      #26                 // Field akka/remote/artery/RollingEventLogSection.akka$remote$artery$RollingEventLogSection$$fileChannel:Ljava/nio/channels/FileChannel;
      11: aload_0
      12: getfield      #22                 // Field $outer:Lakka/remote/artery/RollingEventLogSection;
      15: getfield      #29                 // Field akka/remote/artery/RollingEventLogSection.akka$remote$artery$RollingEventLogSection$$offset:J
      18: iload_1
      19: i2l
      20: aload_0
      21: getfield      #22                 // Field $outer:Lakka/remote/artery/RollingEventLogSection;
      24: getfield      #32                 // Field akka/remote/artery/RollingEventLogSection.akka$remote$artery$RollingEventLogSection$$logBufferSize:J
      27: lmul
      28: ladd
      29: aload_0
      30: getfield      #22                 // Field $outer:Lakka/remote/artery/RollingEventLogSection;
      33: getfield      #32                 // Field akka/remote/artery/RollingEventLogSection.akka$remote$artery$RollingEventLogSection$$logBufferSize:J
      36: invokespecial #36                 // Method org/agrona/concurrent/MappedResizeableBuffer."<init>":(Ljava/nio/channels/FileChannel;JJ)V
      39: astore_2
      40: aload_2
      41: lconst_0
      42: aload_0
      43: getfield      #22                 // Field $outer:Lakka/remote/artery/RollingEventLogSection;
      46: getfield      #32                 // Field akka/remote/artery/RollingEventLogSection.akka$remote$artery$RollingEventLogSection$$logBufferSize:J
      49: l2i
      50: iconst_0
      51: i2b
      52: invokevirtual #40                 // Method org/agrona/concurrent/MappedResizeableBuffer.setMemory:(JIB)V
      55: iload_1
      56: iconst_0
      57: if_icmpne     77
      60: aload_2
      61: getstatic     #46                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      64: invokevirtual #50                 // Method akka/remote/artery/RollingEventLogSection$.LogStateOffset:()J
      67: getstatic     #46                 // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      70: invokevirtual #54                 // Method akka/remote/artery/RollingEventLogSection$.Live:()I
      73: i2l
      74: invokevirtual #58                 // Method org/agrona/concurrent/MappedResizeableBuffer.putLong:(JJ)V
      77: aload_2
      78: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #73                 // Method apply:(I)Lorg/agrona/concurrent/MappedResizeableBuffer;
       8: areturn

  public akka.remote.artery.RollingEventLogSection$$anonfun$3(akka.remote.artery.RollingEventLogSection);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #22                 // Field $outer:Lakka/remote/artery/RollingEventLogSection;
      11: aload_0
      12: invokespecial #79                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
