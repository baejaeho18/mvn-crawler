Compiled from "InboundCompressions.scala"
public final class akka.remote.artery.compress.InboundActorRefCompression extends akka.remote.artery.compress.InboundCompression<akka.actor.ActorRef> {
  private final long originUid;

  private final akka.remote.artery.InboundContext inboundContext;

  public akka.actor.ActorRef decompress(byte, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #19                 // Method akka/remote/artery/compress/InboundCompression.decompressInternal:(BII)Ljava/lang/Object;
       7: checkcast     #21                 // class akka/actor/ActorRef
      10: areturn

  public scala.concurrent.duration.FiniteDuration tableAdvertisementInterval();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method akka/remote/artery/compress/InboundCompression.settings:()Lakka/remote/artery/ArterySettings$Compression;
       4: invokevirtual #39                 // Method akka/remote/artery/ArterySettings$Compression.ActorRefs:()Lakka/remote/artery/ArterySettings$Compression$ActorRefs$;
       7: invokevirtual #44                 // Method akka/remote/artery/ArterySettings$Compression$ActorRefs$.AdvertisementInterval:()Lscala/concurrent/duration/FiniteDuration;
      10: areturn

  public void advertiseCompressionTable(akka.remote.artery.OutboundContext, akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method log:()Lakka/event/LoggingAdapter;
       4: new           #52                 // class scala/StringContext
       7: dup
       8: getstatic     #58                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_1
      12: anewarray     #60                 // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #62                 // String Advertise {} compression [{}] to [{}#{}]
      19: aastore
      20: checkcast     #64                 // class "[Ljava/lang/Object;"
      23: invokevirtual #68                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      26: invokespecial #72                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      29: getstatic     #77                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      32: invokevirtual #81                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      35: getstatic     #86                 // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
      38: aload_0
      39: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #96                 // Method akka/event/Logging$.simpleName:(Ljava/lang/Class;)Ljava/lang/String;
      45: aload_2
      46: aload_1
      47: invokeinterface #102,  1          // InterfaceMethod akka/remote/artery/OutboundContext.remoteAddress:()Lakka/actor/Address;
      52: aload_0
      53: getfield      #104                // Field originUid:J
      56: invokestatic  #110                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      59: invokeinterface #116,  6          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      64: aload_1
      65: new           #118                // class akka/remote/artery/compress/CompressionProtocol$ActorRefCompressionAdvertisement
      68: dup
      69: aload_0
      70: getfield      #120                // Field inboundContext:Lakka/remote/artery/InboundContext;
      73: invokeinterface #126,  1          // InterfaceMethod akka/remote/artery/InboundContext.localAddress:()Lakka/remote/UniqueAddress;
      78: aload_2
      79: invokespecial #129                // Method akka/remote/artery/compress/CompressionProtocol$ActorRefCompressionAdvertisement."<init>":(Lakka/remote/UniqueAddress;Lakka/remote/artery/compress/CompressionTable;)V
      82: invokeinterface #133,  2          // InterfaceMethod akka/remote/artery/OutboundContext.sendControl:(Lakka/remote/artery/ControlMessage;)V
      87: return

  public scala.concurrent.duration.Duration tableAdvertisementInterval();
    Code:
       0: aload_0
       1: invokevirtual #140                // Method tableAdvertisementInterval:()Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public java.lang.Object decompress(byte, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #143                // Method decompress:(BI)Lakka/actor/ActorRef;
       6: areturn

  public akka.remote.artery.compress.InboundActorRefCompression(akka.actor.ActorSystem, akka.remote.artery.ArterySettings$Compression, long, akka.remote.artery.InboundContext, akka.remote.artery.compress.TopHeavyHitters<akka.actor.ActorRef>, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: lload_3
       2: putfield      #104                // Field originUid:J
       5: aload_0
       6: aload         5
       8: putfield      #120                // Field inboundContext:Lakka/remote/artery/InboundContext;
      11: aload_0
      12: aload_1
      13: aload_2
      14: lload_3
      15: aload         5
      17: aload         6
      19: aload         7
      21: invokespecial #147                // Method akka/remote/artery/compress/InboundCompression."<init>":(Lakka/actor/ActorSystem;Lakka/remote/artery/ArterySettings$Compression;JLakka/remote/artery/InboundContext;Lakka/remote/artery/compress/TopHeavyHitters;Ljava/util/concurrent/atomic/AtomicBoolean;)V
      24: return
}
