Compiled from "InboundCompressions.scala"
public class akka.remote.artery.compress.InboundCompression$State$ implements scala.Serializable {
  public static final akka.remote.artery.compress.InboundCompression$State$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/remote/artery/compress/InboundCompression$State$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public <T> akka.remote.artery.compress.InboundCompression$State<T> empty();
    Code:
       0: new           #18                 // class akka/remote/artery/compress/InboundCompression$State
       3: dup
       4: getstatic     #23                 // Field akka/remote/artery/compress/DecompressionTable$.MODULE$:Lakka/remote/artery/compress/DecompressionTable$;
       7: invokevirtual #27                 // Method akka/remote/artery/compress/DecompressionTable$.disabled:()Lakka/remote/artery/compress/DecompressionTable;
      10: getstatic     #23                 // Field akka/remote/artery/compress/DecompressionTable$.MODULE$:Lakka/remote/artery/compress/DecompressionTable$;
      13: invokevirtual #29                 // Method akka/remote/artery/compress/DecompressionTable$.empty:()Lakka/remote/artery/compress/DecompressionTable;
      16: getstatic     #23                 // Field akka/remote/artery/compress/DecompressionTable$.MODULE$:Lakka/remote/artery/compress/DecompressionTable$;
      19: invokevirtual #29                 // Method akka/remote/artery/compress/DecompressionTable$.empty:()Lakka/remote/artery/compress/DecompressionTable;
      22: astore_1
      23: iconst_1
      24: istore_2
      25: aload_1
      26: invokevirtual #35                 // Method akka/remote/artery/compress/DecompressionTable.copy$default$1:()J
      29: lstore_3
      30: aload_1
      31: invokevirtual #39                 // Method akka/remote/artery/compress/DecompressionTable.copy$default$3:()Ljava/lang/Object;
      34: astore        5
      36: aload_1
      37: lload_3
      38: iload_2
      39: aload         5
      41: invokevirtual #43                 // Method akka/remote/artery/compress/DecompressionTable.copy:(JBLjava/lang/Object;)Lakka/remote/artery/compress/DecompressionTable;
      44: getstatic     #48                 // Field scala/None$.MODULE$:Lscala/None$;
      47: invokespecial #51                 // Method akka/remote/artery/compress/InboundCompression$State."<init>":(Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lscala/Option;)V
      50: areturn

  public <T> akka.remote.artery.compress.InboundCompression$State<T> apply(akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, scala.Option<akka.remote.artery.compress.CompressionTable<T>>);
    Code:
       0: new           #18                 // class akka/remote/artery/compress/InboundCompression$State
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #51                 // Method akka/remote/artery/compress/InboundCompression$State."<init>":(Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lscala/Option;)V
      12: areturn

  public <T> scala.Option<scala.Tuple4<akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, scala.Option<akka.remote.artery.compress.CompressionTable<T>>>> unapply(akka.remote.artery.compress.InboundCompression$State<T>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #48                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          40
      10: new           #71                 // class scala/Some
      13: dup
      14: new           #73                 // class scala/Tuple4
      17: dup
      18: aload_1
      19: invokevirtual #75                 // Method akka/remote/artery/compress/InboundCompression$State.oldTable:()Lakka/remote/artery/compress/DecompressionTable;
      22: aload_1
      23: invokevirtual #77                 // Method akka/remote/artery/compress/InboundCompression$State.activeTable:()Lakka/remote/artery/compress/DecompressionTable;
      26: aload_1
      27: invokevirtual #79                 // Method akka/remote/artery/compress/InboundCompression$State.nextTable:()Lakka/remote/artery/compress/DecompressionTable;
      30: aload_1
      31: invokevirtual #82                 // Method akka/remote/artery/compress/InboundCompression$State.advertisementInProgress:()Lscala/Option;
      34: invokespecial #85                 // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      37: invokespecial #88                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      40: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #95                 // Field MODULE$:Lakka/remote/artery/compress/InboundCompression$State$;
       3: areturn

  public akka.remote.artery.compress.InboundCompression$State$();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #95                 // Field MODULE$:Lakka/remote/artery/compress/InboundCompression$State$;
       8: return
}
