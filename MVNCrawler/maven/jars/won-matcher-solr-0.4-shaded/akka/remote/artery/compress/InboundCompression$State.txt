Compiled from "InboundCompressions.scala"
public final class akka.remote.artery.compress.InboundCompression$State<T> implements scala.Product, scala.Serializable {
  private final akka.remote.artery.compress.DecompressionTable<T> oldTable;

  private final akka.remote.artery.compress.DecompressionTable<T> activeTable;

  private final akka.remote.artery.compress.DecompressionTable<T> nextTable;

  private final scala.Option<akka.remote.artery.compress.CompressionTable<T>> advertisementInProgress;

  public akka.remote.artery.compress.DecompressionTable<T> oldTable();
    Code:
       0: aload_0
       1: getfield      #21                 // Field oldTable:Lakka/remote/artery/compress/DecompressionTable;
       4: areturn

  public akka.remote.artery.compress.DecompressionTable<T> activeTable();
    Code:
       0: aload_0
       1: getfield      #25                 // Field activeTable:Lakka/remote/artery/compress/DecompressionTable;
       4: areturn

  public akka.remote.artery.compress.DecompressionTable<T> nextTable();
    Code:
       0: aload_0
       1: getfield      #27                 // Field nextTable:Lakka/remote/artery/compress/DecompressionTable;
       4: areturn

  public scala.Option<akka.remote.artery.compress.CompressionTable<T>> advertisementInProgress();
    Code:
       0: aload_0
       1: getfield      #30                 // Field advertisementInProgress:Lscala/Option;
       4: areturn

  public akka.remote.artery.compress.InboundCompression$State<T> startUsingNextTable();
    Code:
       0: new           #2                  // class akka/remote/artery/compress/InboundCompression$State
       3: dup
       4: aload_0
       5: invokevirtual #34                 // Method activeTable:()Lakka/remote/artery/compress/DecompressionTable;
       8: aload_0
       9: invokevirtual #36                 // Method nextTable:()Lakka/remote/artery/compress/DecompressionTable;
      12: getstatic     #42                 // Field akka/remote/artery/compress/DecompressionTable$.MODULE$:Lakka/remote/artery/compress/DecompressionTable$;
      15: invokevirtual #45                 // Method akka/remote/artery/compress/DecompressionTable$.empty:()Lakka/remote/artery/compress/DecompressionTable;
      18: astore_1
      19: aload_0
      20: aload_0
      21: invokevirtual #36                 // Method nextTable:()Lakka/remote/artery/compress/DecompressionTable;
      24: invokevirtual #51                 // Method akka/remote/artery/compress/DecompressionTable.version:()B
      27: invokespecial #55                 // Method incrementTableVersion$1:(B)B
      30: istore_2
      31: aload_1
      32: invokevirtual #59                 // Method akka/remote/artery/compress/DecompressionTable.copy$default$1:()J
      35: lstore_3
      36: aload_1
      37: invokevirtual #63                 // Method akka/remote/artery/compress/DecompressionTable.copy$default$3:()Ljava/lang/Object;
      40: astore        5
      42: aload_1
      43: lload_3
      44: iload_2
      45: aload         5
      47: invokevirtual #67                 // Method akka/remote/artery/compress/DecompressionTable.copy:(JBLjava/lang/Object;)Lakka/remote/artery/compress/DecompressionTable;
      50: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
      53: invokespecial #76                 // Method "<init>":(Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lscala/Option;)V
      56: areturn

  public <T> akka.remote.artery.compress.InboundCompression$State<T> copy(akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, scala.Option<akka.remote.artery.compress.CompressionTable<T>>);
    Code:
       0: new           #2                  // class akka/remote/artery/compress/InboundCompression$State
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #76                 // Method "<init>":(Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lakka/remote/artery/compress/DecompressionTable;Lscala/Option;)V
      12: areturn

  public <T> akka.remote.artery.compress.DecompressionTable<T> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method oldTable:()Lakka/remote/artery/compress/DecompressionTable;
       4: areturn

  public <T> akka.remote.artery.compress.DecompressionTable<T> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method activeTable:()Lakka/remote/artery/compress/DecompressionTable;
       4: areturn

  public <T> akka.remote.artery.compress.DecompressionTable<T> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method nextTable:()Lakka/remote/artery/compress/DecompressionTable;
       4: areturn

  public <T> scala.Option<akka.remote.artery.compress.CompressionTable<T>> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method advertisementInProgress:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #94                 // String State
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #100                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #106                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #112                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #90                 // Method advertisementInProgress:()Lscala/Option;
      51: goto          72
      54: aload_0
      55: invokevirtual #36                 // Method nextTable:()Lakka/remote/artery/compress/DecompressionTable;
      58: goto          72
      61: aload_0
      62: invokevirtual #34                 // Method activeTable:()Lakka/remote/artery/compress/DecompressionTable;
      65: goto          72
      68: aload_0
      69: invokevirtual #86                 // Method oldTable:()Lakka/remote/artery/compress/DecompressionTable;
      72: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #121                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #125                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/artery/compress/InboundCompression$State
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #121                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #132                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #121                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #136                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     167
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/artery/compress/InboundCompression$State
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          171
      25: aload_1
      26: checkcast     #2                  // class akka/remote/artery/compress/InboundCompression$State
      29: astore        4
      31: aload_0
      32: invokevirtual #86                 // Method oldTable:()Lakka/remote/artery/compress/DecompressionTable;
      35: aload         4
      37: invokevirtual #86                 // Method oldTable:()Lakka/remote/artery/compress/DecompressionTable;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          163
      55: aload         5
      57: invokevirtual #139                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          163
      63: aload_0
      64: invokevirtual #34                 // Method activeTable:()Lakka/remote/artery/compress/DecompressionTable;
      67: aload         4
      69: invokevirtual #34                 // Method activeTable:()Lakka/remote/artery/compress/DecompressionTable;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          163
      87: aload         6
      89: invokevirtual #139                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          163
      95: aload_0
      96: invokevirtual #36                 // Method nextTable:()Lakka/remote/artery/compress/DecompressionTable;
      99: aload         4
     101: invokevirtual #36                 // Method nextTable:()Lakka/remote/artery/compress/DecompressionTable;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          163
     119: aload         7
     121: invokevirtual #139                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          163
     127: aload_0
     128: invokevirtual #90                 // Method advertisementInProgress:()Lscala/Option;
     131: aload         4
     133: invokevirtual #90                 // Method advertisementInProgress:()Lscala/Option;
     136: astore        8
     138: dup
     139: ifnonnull     151
     142: pop
     143: aload         8
     145: ifnull        159
     148: goto          163
     151: aload         8
     153: invokevirtual #139                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     156: ifeq          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: ifeq          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: ireturn

  private final byte incrementTableVersion$1(byte);
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpne     10
       6: iconst_0
       7: goto          14
      10: iload_1
      11: iconst_1
      12: iadd
      13: i2b
      14: ireturn

  public akka.remote.artery.compress.InboundCompression$State(akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, akka.remote.artery.compress.DecompressionTable<T>, scala.Option<akka.remote.artery.compress.CompressionTable<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field oldTable:Lakka/remote/artery/compress/DecompressionTable;
       5: aload_0
       6: aload_2
       7: putfield      #25                 // Field activeTable:Lakka/remote/artery/compress/DecompressionTable;
      10: aload_0
      11: aload_3
      12: putfield      #27                 // Field nextTable:Lakka/remote/artery/compress/DecompressionTable;
      15: aload_0
      16: aload         4
      18: putfield      #30                 // Field advertisementInProgress:Lscala/Option;
      21: aload_0
      22: invokespecial #144                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #150                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: return
}
