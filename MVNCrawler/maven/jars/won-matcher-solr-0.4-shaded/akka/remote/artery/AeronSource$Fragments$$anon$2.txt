Compiled from "AeronSource.scala"
public final class akka.remote.artery.AeronSource$Fragments$$anon$2 implements io.aeron.logbuffer.FragmentHandler {
  private final scala.Function1 onMessage$2;

  private final akka.remote.artery.EnvelopeBufferPool pool$1;

  public void onFragment(org.agrona.DirectBuffer, int, int, io.aeron.logbuffer.Header);
    Code:
       0: aload_0
       1: getfield      #20                 // Field pool$1:Lakka/remote/artery/EnvelopeBufferPool;
       4: invokevirtual #26                 // Method akka/remote/artery/EnvelopeBufferPool.acquire:()Lakka/remote/artery/EnvelopeBuffer;
       7: astore        5
       9: aload_1
      10: iload_2
      11: aload         5
      13: invokevirtual #32                 // Method akka/remote/artery/EnvelopeBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
      16: iload_3
      17: invokeinterface #38,  4           // InterfaceMethod org/agrona/DirectBuffer.getBytes:(ILjava/nio/ByteBuffer;I)V
      22: aload         5
      24: invokevirtual #32                 // Method akka/remote/artery/EnvelopeBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
      27: invokevirtual #44                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      30: pop
      31: aload_0
      32: getfield      #46                 // Field onMessage$2:Lscala/Function1;
      35: aload         5
      37: invokeinterface #52,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  public akka.remote.artery.AeronSource$Fragments$$anon$2(scala.Function1, akka.remote.artery.EnvelopeBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field onMessage$2:Lscala/Function1;
       5: aload_0
       6: aload_2
       7: putfield      #20                 // Field pool$1:Lakka/remote/artery/EnvelopeBufferPool;
      10: aload_0
      11: invokespecial #66                 // Method java/lang/Object."<init>":()V
      14: return
}
