Compiled from "Handshake.scala"
public final class akka.remote.artery.InboundHandshake$$anon$2 extends akka.stream.stage.TimerGraphStageLogic implements akka.stream.stage.OutHandler,akka.remote.artery.StageLogging {
  private final akka.remote.artery.InboundHandshake $outer;

  private akka.event.LoggingAdapter akka$remote$artery$StageLogging$$_log;

  public akka.event.LoggingAdapter akka$remote$artery$StageLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #21                 // Field akka$remote$artery$StageLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$remote$artery$StageLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field akka$remote$artery$StageLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public java.lang.Class<?> logSource();
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method akka/remote/artery/StageLogging$class.logSource:(Lakka/stream/stage/GraphStageLogic;)Ljava/lang/Class;
       4: areturn

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method akka/remote/artery/StageLogging$class.log:(Lakka/stream/stage/GraphStageLogic;)Lakka/event/LoggingAdapter;
       4: areturn

  public void onDownstreamFinish() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method akka/stream/stage/OutHandler$class.onDownstreamFinish:(Lakka/stream/stage/OutHandler;)V
       4: return

  public void akka$remote$artery$InboundHandshake$$anon$$onHandshakeReq(akka.remote.UniqueAddress, akka.actor.Address);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
       5: getfield      #54                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
       8: invokeinterface #60,  1           // InterfaceMethod akka/remote/artery/InboundContext.localAddress:()Lakka/remote/UniqueAddress;
      13: invokevirtual #66                 // Method akka/remote/UniqueAddress.address:()Lakka/actor/Address;
      16: astore_3
      17: dup
      18: ifnonnull     29
      21: pop
      22: aload_3
      23: ifnull        36
      26: goto          65
      29: aload_3
      30: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifeq          65
      36: aload_0
      37: aload_0
      38: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
      41: getfield      #54                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
      44: aload_1
      45: invokeinterface #76,  2           // InterfaceMethod akka/remote/artery/InboundContext.completeHandshake:(Lakka/remote/UniqueAddress;)Lscala/concurrent/Future;
      50: new           #78                 // class akka/remote/artery/InboundHandshake$$anon$2$$anonfun$akka$remote$artery$InboundHandshake$$anon$$onHandshakeReq$1
      53: dup
      54: aload_0
      55: aload_1
      56: invokespecial #82                 // Method akka/remote/artery/InboundHandshake$$anon$2$$anonfun$akka$remote$artery$InboundHandshake$$anon$$onHandshakeReq$1."<init>":(Lakka/remote/artery/InboundHandshake$$anon$2;Lakka/remote/UniqueAddress;)V
      59: invokevirtual #86                 // Method akka$remote$artery$InboundHandshake$$anon$$after:(Lscala/concurrent/Future;Lscala/Function0;)V
      62: goto          104
      65: aload_0
      66: invokevirtual #88                 // Method log:()Lakka/event/LoggingAdapter;
      69: ldc           #90                 // String Dropping Handshake Request from [{}] addressed to unknown local address [{}]. Local address is [{}]. Check that the sending system uses the same address to contact recipient system as defined in the \'akka.remote.artery.canonical.hostname\' of the recipient system. The name of the ActorSystem must also match.
      71: aload_1
      72: aload_2
      73: aload_0
      74: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
      77: getfield      #54                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
      80: invokeinterface #60,  1           // InterfaceMethod akka/remote/artery/InboundContext.localAddress:()Lakka/remote/UniqueAddress;
      85: invokevirtual #66                 // Method akka/remote/UniqueAddress.address:()Lakka/actor/Address;
      88: invokeinterface #96,  5           // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      93: aload_0
      94: aload_0
      95: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
      98: invokevirtual #100                // Method akka/remote/artery/InboundHandshake.in:()Lakka/stream/Inlet;
     101: invokevirtual #104                // Method pull:(Lakka/stream/Inlet;)V
     104: return

  public void akka$remote$artery$InboundHandshake$$anon$$after(scala.concurrent.Future<akka.Done>, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_1
       1: invokeinterface #116,  1          // InterfaceMethod scala/concurrent/Future.value:()Lscala/Option;
       6: astore_3
       7: aload_3
       8: instanceof    #118                // class scala/Some
      11: ifeq          28
      14: aload_2
      15: invokeinterface #123,  1          // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      20: getstatic     #129                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      23: astore        4
      25: goto          69
      28: getstatic     #135                // Field scala/None$.MODULE$:Lscala/None$;
      31: aload_3
      32: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          70
      38: aload_0
      39: invokevirtual #139                // Method materializer:()Lakka/stream/Materializer;
      42: invokevirtual #145                // Method akka/stream/Materializer.executionContext:()Lscala/concurrent/ExecutionContextExecutor;
      45: astore        5
      47: aload_1
      48: new           #147                // class akka/remote/artery/InboundHandshake$$anon$2$$anonfun$akka$remote$artery$InboundHandshake$$anon$$after$1
      51: dup
      52: aload_0
      53: aload_2
      54: invokespecial #150                // Method akka/remote/artery/InboundHandshake$$anon$2$$anonfun$akka$remote$artery$InboundHandshake$$anon$$after$1."<init>":(Lakka/remote/artery/InboundHandshake$$anon$2;Lscala/Function0;)V
      57: aload         5
      59: invokeinterface #154,  3          // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      64: getstatic     #129                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      67: astore        4
      69: return
      70: new           #156                // class scala/MatchError
      73: dup
      74: aload_3
      75: invokespecial #159                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow

  public void akka$remote$artery$InboundHandshake$$anon$$onMessage(akka.remote.artery.InboundEnvelope);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #173                // Method isKnownOrigin:(Lakka/remote/artery/InboundEnvelope;)Z
       5: ifeq          23
       8: aload_0
       9: aload_0
      10: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
      13: invokevirtual #177                // Method akka/remote/artery/InboundHandshake.out:()Lakka/stream/Outlet;
      16: aload_1
      17: invokevirtual #181                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      20: goto          148
      23: aload_0
      24: invokevirtual #88                 // Method log:()Lakka/event/LoggingAdapter;
      27: invokeinterface #185,  1          // InterfaceMethod akka/event/LoggingAdapter.isDebugEnabled:()Z
      32: ifeq          137
      35: aload_0
      36: invokevirtual #88                 // Method log:()Lakka/event/LoggingAdapter;
      39: new           #187                // class scala/collection/mutable/StringBuilder
      42: dup
      43: invokespecial #189                // Method scala/collection/mutable/StringBuilder."<init>":()V
      46: new           #191                // class scala/StringContext
      49: dup
      50: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      53: iconst_1
      54: anewarray     #198                // class java/lang/String
      57: dup
      58: iconst_0
      59: ldc           #200                // String Dropping message [{}] from unknown system with UID [{}].
      61: aastore
      62: checkcast     #202                // class "[Ljava/lang/Object;"
      65: invokevirtual #206                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      68: invokespecial #209                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      71: getstatic     #214                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      74: invokevirtual #218                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      77: invokevirtual #222                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      80: ldc           #224                // String This system with UID [{}] was probably restarted.
      82: invokevirtual #222                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      85: ldc           #226                // String Messages will be accepted when new handshake has been completed.
      87: invokevirtual #222                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      90: invokevirtual #230                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      93: aload_1
      94: invokeinterface #236,  1          // InterfaceMethod akka/remote/artery/InboundEnvelope.message:()Ljava/lang/Object;
      99: invokevirtual #239                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     102: invokevirtual #244                // Method java/lang/Class.getName:()Ljava/lang/String;
     105: aload_1
     106: invokeinterface #248,  1          // InterfaceMethod akka/remote/artery/InboundEnvelope.originUid:()J
     111: invokestatic  #254                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     114: aload_0
     115: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
     118: getfield      #54                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
     121: invokeinterface #60,  1           // InterfaceMethod akka/remote/artery/InboundContext.localAddress:()Lakka/remote/UniqueAddress;
     126: invokevirtual #257                // Method akka/remote/UniqueAddress.uid:()J
     129: invokestatic  #254                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     132: invokeinterface #260,  5          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     137: aload_0
     138: aload_0
     139: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
     142: invokevirtual #100                // Method akka/remote/artery/InboundHandshake.in:()Lakka/stream/Inlet;
     145: invokevirtual #104                // Method pull:(Lakka/stream/Inlet;)V
     148: return

  private boolean isKnownOrigin(akka.remote.artery.InboundEnvelope);
    Code:
       0: getstatic     #267                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
       3: aload_1
       4: invokeinterface #271,  1          // InterfaceMethod akka/remote/artery/InboundEnvelope.association:()Lakka/remote/artery/OutboundContext;
       9: invokevirtual #274                // Method akka/util/OptionVal$.isDefined$extension:(Ljava/lang/Object;)Z
      12: ifne          42
      15: getstatic     #267                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
      18: aload_0
      19: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
      22: getfield      #54                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
      25: aload_1
      26: invokeinterface #248,  1          // InterfaceMethod akka/remote/artery/InboundEnvelope.originUid:()J
      31: invokeinterface #277,  3          // InterfaceMethod akka/remote/artery/InboundContext.association:(J)Lakka/remote/artery/OutboundContext;
      36: invokevirtual #274                // Method akka/util/OptionVal$.isDefined$extension:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public void onPull();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
       5: invokevirtual #100                // Method akka/remote/artery/InboundHandshake.in:()Lakka/stream/Inlet;
       8: invokevirtual #104                // Method pull:(Lakka/stream/Inlet;)V
      11: return

  public akka.remote.artery.InboundHandshake akka$remote$artery$InboundHandshake$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
       4: areturn

  public akka.remote.artery.InboundHandshake$$anon$2(akka.remote.artery.InboundHandshake);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #50                 // Field $outer:Lakka/remote/artery/InboundHandshake;
      11: aload_0
      12: aload_1
      13: invokevirtual #285                // Method akka/remote/artery/InboundHandshake.shape:()Lakka/stream/FlowShape;
      16: invokespecial #288                // Method akka/stream/stage/TimerGraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: invokestatic  #291                // Method akka/stream/stage/OutHandler$class.$init$:(Lakka/stream/stage/OutHandler;)V
      23: aload_0
      24: invokestatic  #294                // Method akka/remote/artery/StageLogging$class.$init$:(Lakka/stream/stage/GraphStageLogic;)V
      27: aload_1
      28: getfield      #298                // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inControlStream:Z
      31: ifeq          53
      34: aload_0
      35: aload_1
      36: invokevirtual #100                // Method akka/remote/artery/InboundHandshake.in:()Lakka/stream/Inlet;
      39: new           #300                // class akka/remote/artery/InboundHandshake$$anon$2$$anon$3
      42: dup
      43: aload_0
      44: invokespecial #303                // Method akka/remote/artery/InboundHandshake$$anon$2$$anon$3."<init>":(Lakka/remote/artery/InboundHandshake$$anon$2;)V
      47: invokevirtual #307                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      50: goto          69
      53: aload_0
      54: aload_1
      55: invokevirtual #100                // Method akka/remote/artery/InboundHandshake.in:()Lakka/stream/Inlet;
      58: new           #309                // class akka/remote/artery/InboundHandshake$$anon$2$$anon$4
      61: dup
      62: aload_0
      63: invokespecial #310                // Method akka/remote/artery/InboundHandshake$$anon$2$$anon$4."<init>":(Lakka/remote/artery/InboundHandshake$$anon$2;)V
      66: invokevirtual #307                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      69: aload_0
      70: aload_1
      71: invokevirtual #177                // Method akka/remote/artery/InboundHandshake.out:()Lakka/stream/Outlet;
      74: aload_0
      75: invokevirtual #313                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
      78: return
}
