Compiled from "BufferPool.scala"
public final class akka.remote.artery.HeaderBuilderImpl implements akka.remote.artery.HeaderBuilder {
  private final akka.remote.artery.compress.InboundCompressions inboundCompression;

  private akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef> _outboundActorRefCompression;

  private akka.remote.artery.compress.CompressionTable<java.lang.String> _outboundClassManifestCompression;

  private final akka.remote.artery.SerializationFormatCache toSerializationFormat;

  private byte _version;

  private byte _flags;

  private long _uid;

  private byte _inboundActorRefCompressionTableVersion;

  private byte _inboundClassManifestCompressionTableVersion;

  private boolean _useOutboundCompression;

  private java.lang.String _senderActorRef;

  private int _senderActorRefIdx;

  private java.lang.String _recipientActorRef;

  private int _recipientActorRefIdx;

  private int _serializer;

  private java.lang.String _manifest;

  private int _manifestIdx;

  private akka.util.ByteString _metadataContainer;

  public akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef> _outboundActorRefCompression();
    Code:
       0: aload_0
       1: getfield      #42                 // Field _outboundActorRefCompression:Lakka/remote/artery/compress/CompressionTable;
       4: areturn

  public void _outboundActorRefCompression_$eq(akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field _outboundActorRefCompression:Lakka/remote/artery/compress/CompressionTable;
       5: return

  public akka.remote.artery.compress.CompressionTable<java.lang.String> _outboundClassManifestCompression();
    Code:
       0: aload_0
       1: getfield      #49                 // Field _outboundClassManifestCompression:Lakka/remote/artery/compress/CompressionTable;
       4: areturn

  public void _outboundClassManifestCompression_$eq(akka.remote.artery.compress.CompressionTable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field _outboundClassManifestCompression:Lakka/remote/artery/compress/CompressionTable;
       5: return

  public byte _version();
    Code:
       0: aload_0
       1: getfield      #53                 // Field _version:B
       4: ireturn

  public void _version_$eq(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field _version:B
       5: return

  public byte _flags();
    Code:
       0: aload_0
       1: getfield      #57                 // Field _flags:B
       4: ireturn

  public void _flags_$eq(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field _flags:B
       5: return

  public long _uid();
    Code:
       0: aload_0
       1: getfield      #61                 // Field _uid:J
       4: lreturn

  public void _uid_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #61                 // Field _uid:J
       5: return

  public byte _inboundActorRefCompressionTableVersion();
    Code:
       0: aload_0
       1: getfield      #65                 // Field _inboundActorRefCompressionTableVersion:B
       4: ireturn

  public void _inboundActorRefCompressionTableVersion_$eq(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #65                 // Field _inboundActorRefCompressionTableVersion:B
       5: return

  public byte _inboundClassManifestCompressionTableVersion();
    Code:
       0: aload_0
       1: getfield      #68                 // Field _inboundClassManifestCompressionTableVersion:B
       4: ireturn

  public void _inboundClassManifestCompressionTableVersion_$eq(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #68                 // Field _inboundClassManifestCompressionTableVersion:B
       5: return

  public boolean _useOutboundCompression();
    Code:
       0: aload_0
       1: getfield      #72                 // Field _useOutboundCompression:Z
       4: ireturn

  public void _useOutboundCompression_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #72                 // Field _useOutboundCompression:Z
       5: return

  public java.lang.String _senderActorRef();
    Code:
       0: aload_0
       1: getfield      #77                 // Field _senderActorRef:Ljava/lang/String;
       4: areturn

  public void _senderActorRef_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field _senderActorRef:Ljava/lang/String;
       5: return

  public int _senderActorRefIdx();
    Code:
       0: aload_0
       1: getfield      #82                 // Field _senderActorRefIdx:I
       4: ireturn

  public void _senderActorRefIdx_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #82                 // Field _senderActorRefIdx:I
       5: return

  public java.lang.String _recipientActorRef();
    Code:
       0: aload_0
       1: getfield      #86                 // Field _recipientActorRef:Ljava/lang/String;
       4: areturn

  public void _recipientActorRef_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field _recipientActorRef:Ljava/lang/String;
       5: return

  public int _recipientActorRefIdx();
    Code:
       0: aload_0
       1: getfield      #89                 // Field _recipientActorRefIdx:I
       4: ireturn

  public void _recipientActorRefIdx_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #89                 // Field _recipientActorRefIdx:I
       5: return

  public int _serializer();
    Code:
       0: aload_0
       1: getfield      #92                 // Field _serializer:I
       4: ireturn

  public void _serializer_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #92                 // Field _serializer:I
       5: return

  public java.lang.String _manifest();
    Code:
       0: aload_0
       1: getfield      #95                 // Field _manifest:Ljava/lang/String;
       4: areturn

  public void _manifest_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field _manifest:Ljava/lang/String;
       5: return

  public int _manifestIdx();
    Code:
       0: aload_0
       1: getfield      #98                 // Field _manifestIdx:I
       4: ireturn

  public void _manifestIdx_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #98                 // Field _manifestIdx:I
       5: return

  public akka.util.ByteString _metadataContainer();
    Code:
       0: aload_0
       1: getfield      #102                // Field _metadataContainer:Lakka/util/ByteString;
       4: areturn

  public void _metadataContainer_$eq(akka.util.ByteString);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #102                // Field _metadataContainer:Lakka/util/ByteString;
       5: return

  public void resetMessageFields();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #108                // Method _flags_$eq:(B)V
       5: aload_0
       6: aconst_null
       7: invokevirtual #110                // Method _senderActorRef_$eq:(Ljava/lang/String;)V
      10: aload_0
      11: iconst_m1
      12: invokevirtual #112                // Method _senderActorRefIdx_$eq:(I)V
      15: aload_0
      16: aconst_null
      17: invokevirtual #114                // Method _recipientActorRef_$eq:(Ljava/lang/String;)V
      20: aload_0
      21: iconst_m1
      22: invokevirtual #116                // Method _recipientActorRefIdx_$eq:(I)V
      25: aload_0
      26: iconst_0
      27: invokevirtual #118                // Method _serializer_$eq:(I)V
      30: aload_0
      31: aconst_null
      32: invokevirtual #120                // Method _manifest_$eq:(Ljava/lang/String;)V
      35: aload_0
      36: iconst_m1
      37: invokevirtual #122                // Method _manifestIdx_$eq:(I)V
      40: return

  public void setVersion(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #125                // Method _version_$eq:(B)V
       5: return

  public byte version();
    Code:
       0: aload_0
       1: invokevirtual #129                // Method _version:()B
       4: ireturn

  public void setFlags(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #108                // Method _flags_$eq:(B)V
       5: return

  public byte flags();
    Code:
       0: aload_0
       1: invokevirtual #133                // Method _flags:()B
       4: ireturn

  public boolean flag(byte);
    Code:
       0: aload_0
       1: invokevirtual #133                // Method _flags:()B
       4: iload_1
       5: iand
       6: iconst_0
       7: if_icmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void setFlag(byte, boolean);
    Code:
       0: iload_2
       1: ifeq          19
       4: aload_0
       5: aload_0
       6: invokevirtual #140                // Method flags:()B
       9: iload_1
      10: ior
      11: i2b
      12: i2b
      13: invokevirtual #108                // Method _flags_$eq:(B)V
      16: goto          32
      19: aload_0
      20: aload_0
      21: invokevirtual #140                // Method flags:()B
      24: iload_1
      25: iconst_m1
      26: ixor
      27: iand
      28: i2b
      29: invokevirtual #108                // Method _flags_$eq:(B)V
      32: return

  public void setUid(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #144                // Method _uid_$eq:(J)V
       5: return

  public long uid();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method _uid:()J
       4: lreturn

  public byte inboundActorRefCompressionTableVersion();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method _inboundActorRefCompressionTableVersion:()B
       4: ireturn

  public byte inboundClassManifestCompressionTableVersion();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method _inboundClassManifestCompressionTableVersion:()B
       4: ireturn

  public void useOutboundCompression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #156                // Method _useOutboundCompression_$eq:(Z)V
       5: return

  public void setOutboundActorRefCompression(akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #160                // Method _outboundActorRefCompression_$eq:(Lakka/remote/artery/compress/CompressionTable;)V
       5: return

  public akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef> outboundActorRefCompression();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method _outboundActorRefCompression:()Lakka/remote/artery/compress/CompressionTable;
       4: areturn

  public void setOutboundClassManifestCompression(akka.remote.artery.compress.CompressionTable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #167                // Method _outboundClassManifestCompression_$eq:(Lakka/remote/artery/compress/CompressionTable;)V
       5: return

  public akka.remote.artery.compress.CompressionTable<java.lang.String> outboundClassManifestCompression();
    Code:
       0: aload_0
       1: invokevirtual #170                // Method _outboundClassManifestCompression:()Lakka/remote/artery/compress/CompressionTable;
       4: areturn

  public void setSenderActorRef(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #174                // Method _useOutboundCompression:()Z
       4: ifeq          41
       7: aload_0
       8: aload_0
       9: invokevirtual #176                // Method outboundActorRefCompression:()Lakka/remote/artery/compress/CompressionTable;
      12: aload_1
      13: invokevirtual #182                // Method akka/remote/artery/compress/CompressionTable.compress:(Ljava/lang/Object;)I
      16: invokevirtual #112                // Method _senderActorRefIdx_$eq:(I)V
      19: aload_0
      20: invokevirtual #184                // Method _senderActorRefIdx:()I
      23: iconst_m1
      24: if_icmpne     52
      27: aload_0
      28: getstatic     #190                // Field akka/serialization/Serialization$.MODULE$:Lakka/serialization/Serialization$;
      31: aload_1
      32: invokevirtual #194                // Method akka/serialization/Serialization$.serializedActorPath:(Lakka/actor/ActorRef;)Ljava/lang/String;
      35: invokevirtual #110                // Method _senderActorRef_$eq:(Ljava/lang/String;)V
      38: goto          52
      41: aload_0
      42: getstatic     #190                // Field akka/serialization/Serialization$.MODULE$:Lakka/serialization/Serialization$;
      45: aload_1
      46: invokevirtual #194                // Method akka/serialization/Serialization$.serializedActorPath:(Lakka/actor/ActorRef;)Ljava/lang/String;
      49: invokevirtual #110                // Method _senderActorRef_$eq:(Ljava/lang/String;)V
      52: return

  public void setNoSender();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #110                // Method _senderActorRef_$eq:(Ljava/lang/String;)V
       5: aload_0
       6: iconst_m1
       7: invokevirtual #112                // Method _senderActorRefIdx_$eq:(I)V
      10: return

  public boolean isNoSender();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method _senderActorRef:()Ljava/lang/String;
       4: ifnonnull     19
       7: aload_0
       8: invokevirtual #184                // Method _senderActorRefIdx:()I
      11: iconst_m1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public akka.actor.ActorRef senderActorRef(long);
    Code:
       0: aload_0
       1: invokevirtual #200                // Method _senderActorRef:()Ljava/lang/String;
       4: ifnonnull     35
       7: aload_0
       8: invokevirtual #204                // Method isNoSender:()Z
      11: ifne          35
      14: aload_0
      15: getfield      #206                // Field inboundCompression:Lakka/remote/artery/compress/InboundCompressions;
      18: lload_1
      19: aload_0
      20: invokevirtual #208                // Method inboundActorRefCompressionTableVersion:()B
      23: aload_0
      24: invokevirtual #184                // Method _senderActorRefIdx:()I
      27: invokeinterface #214,  5          // InterfaceMethod akka/remote/artery/compress/InboundCompressions.decompressActorRef:(JBI)Lakka/actor/ActorRef;
      32: goto          45
      35: getstatic     #219                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
      38: invokevirtual #223                // Method akka/util/OptionVal$.None:()Lscala/runtime/Null$;
      41: pop
      42: aconst_null
      43: pop
      44: aconst_null
      45: areturn

  public java.lang.String senderActorRefPath();
    Code:
       0: getstatic     #219                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
       3: aload_0
       4: invokevirtual #200                // Method _senderActorRef:()Ljava/lang/String;
       7: invokevirtual #231                // Method akka/util/OptionVal$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #233                // class java/lang/String
      13: areturn

  public void setNoRecipient();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #114                // Method _recipientActorRef_$eq:(Ljava/lang/String;)V
       5: aload_0
       6: iconst_m1
       7: invokevirtual #116                // Method _recipientActorRefIdx_$eq:(I)V
      10: return

  public boolean isNoRecipient();
    Code:
       0: aload_0
       1: invokevirtual #237                // Method _recipientActorRef:()Ljava/lang/String;
       4: ifnonnull     19
       7: aload_0
       8: invokevirtual #239                // Method _recipientActorRefIdx:()I
      11: iconst_m1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public void setRecipientActorRef(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #174                // Method _useOutboundCompression:()Z
       4: ifeq          45
       7: aload_0
       8: aload_0
       9: invokevirtual #176                // Method outboundActorRefCompression:()Lakka/remote/artery/compress/CompressionTable;
      12: aload_1
      13: invokevirtual #182                // Method akka/remote/artery/compress/CompressionTable.compress:(Ljava/lang/Object;)I
      16: invokevirtual #116                // Method _recipientActorRefIdx_$eq:(I)V
      19: aload_0
      20: invokevirtual #239                // Method _recipientActorRefIdx:()I
      23: iconst_m1
      24: if_icmpne     60
      27: aload_0
      28: aload_0
      29: getfield      #242                // Field toSerializationFormat:Lakka/remote/artery/SerializationFormatCache;
      32: aload_1
      33: invokevirtual #247                // Method akka/remote/artery/SerializationFormatCache.getOrCompute:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #233                // class java/lang/String
      39: invokevirtual #114                // Method _recipientActorRef_$eq:(Ljava/lang/String;)V
      42: goto          60
      45: aload_0
      46: aload_0
      47: getfield      #242                // Field toSerializationFormat:Lakka/remote/artery/SerializationFormatCache;
      50: aload_1
      51: invokevirtual #247                // Method akka/remote/artery/SerializationFormatCache.getOrCompute:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #233                // class java/lang/String
      57: invokevirtual #114                // Method _recipientActorRef_$eq:(Ljava/lang/String;)V
      60: return

  public akka.actor.ActorRef recipientActorRef(long);
    Code:
       0: aload_0
       1: invokevirtual #237                // Method _recipientActorRef:()Ljava/lang/String;
       4: ifnonnull     35
       7: aload_0
       8: invokevirtual #250                // Method isNoRecipient:()Z
      11: ifne          35
      14: aload_0
      15: getfield      #206                // Field inboundCompression:Lakka/remote/artery/compress/InboundCompressions;
      18: lload_1
      19: aload_0
      20: invokevirtual #208                // Method inboundActorRefCompressionTableVersion:()B
      23: aload_0
      24: invokevirtual #239                // Method _recipientActorRefIdx:()I
      27: invokeinterface #214,  5          // InterfaceMethod akka/remote/artery/compress/InboundCompressions.decompressActorRef:(JBI)Lakka/actor/ActorRef;
      32: goto          45
      35: getstatic     #219                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
      38: invokevirtual #223                // Method akka/util/OptionVal$.None:()Lscala/runtime/Null$;
      41: pop
      42: aconst_null
      43: pop
      44: aconst_null
      45: areturn

  public java.lang.String recipientActorRefPath();
    Code:
       0: getstatic     #219                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
       3: aload_0
       4: invokevirtual #237                // Method _recipientActorRef:()Ljava/lang/String;
       7: invokevirtual #231                // Method akka/util/OptionVal$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #233                // class java/lang/String
      13: areturn

  public void setSerializer(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #118                // Method _serializer_$eq:(I)V
       5: return

  public int serializer();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method _serializer:()I
       4: ireturn

  public void setManifest(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #174                // Method _useOutboundCompression:()Z
       4: ifeq          35
       7: aload_0
       8: aload_0
       9: invokevirtual #258                // Method outboundClassManifestCompression:()Lakka/remote/artery/compress/CompressionTable;
      12: aload_1
      13: invokevirtual #182                // Method akka/remote/artery/compress/CompressionTable.compress:(Ljava/lang/Object;)I
      16: invokevirtual #122                // Method _manifestIdx_$eq:(I)V
      19: aload_0
      20: invokevirtual #260                // Method _manifestIdx:()I
      23: iconst_m1
      24: if_icmpne     40
      27: aload_0
      28: aload_1
      29: invokevirtual #120                // Method _manifest_$eq:(Ljava/lang/String;)V
      32: goto          40
      35: aload_0
      36: aload_1
      37: invokevirtual #120                // Method _manifest_$eq:(Ljava/lang/String;)V
      40: return

  public java.lang.String manifest(long);
    Code:
       0: aload_0
       1: invokevirtual #264                // Method _manifest:()Ljava/lang/String;
       4: ifnull        23
       7: getstatic     #269                // Field akka/util/OptionVal$Some$.MODULE$:Lakka/util/OptionVal$Some$;
      10: aload_0
      11: invokevirtual #264                // Method _manifest:()Ljava/lang/String;
      14: invokevirtual #270                // Method akka/util/OptionVal$Some$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #233                // class java/lang/String
      20: goto          41
      23: aload_0
      24: getfield      #206                // Field inboundCompression:Lakka/remote/artery/compress/InboundCompressions;
      27: lload_1
      28: aload_0
      29: invokevirtual #272                // Method inboundClassManifestCompressionTableVersion:()B
      32: aload_0
      33: invokevirtual #260                // Method _manifestIdx:()I
      36: invokeinterface #276,  5          // InterfaceMethod akka/remote/artery/compress/InboundCompressions.decompressClassManifest:(JBI)Ljava/lang/String;
      41: areturn

  public void setMetadataContainer(akka.util.ByteString);
    Code:
       0: aload_0
       1: getstatic     #282                // Field akka/remote/artery/EnvelopeBuffer$.MODULE$:Lakka/remote/artery/EnvelopeBuffer$;
       4: invokevirtual #285                // Method akka/remote/artery/EnvelopeBuffer$.MetadataPresentFlag:()B
       7: aload_1
       8: ifnonnull     15
      11: iconst_0
      12: goto          16
      15: iconst_1
      16: invokevirtual #287                // Method setFlag:(BZ)V
      19: aload_0
      20: aload_1
      21: invokevirtual #289                // Method _metadataContainer_$eq:(Lakka/util/ByteString;)V
      24: return

  public akka.util.ByteString metadataContainer();
    Code:
       0: aload_0
       1: invokevirtual #295                // Method _metadataContainer:()Lakka/util/ByteString;
       4: areturn

  public void clearMetadataContainer();
    Code:
       0: aload_0
       1: getstatic     #282                // Field akka/remote/artery/EnvelopeBuffer$.MODULE$:Lakka/remote/artery/EnvelopeBuffer$;
       4: invokevirtual #285                // Method akka/remote/artery/EnvelopeBuffer$.MetadataPresentFlag:()B
       7: iconst_0
       8: invokevirtual #287                // Method setFlag:(BZ)V
      11: aload_0
      12: aconst_null
      13: invokevirtual #289                // Method _metadataContainer_$eq:(Lakka/util/ByteString;)V
      16: return

  public java.lang.String toString();
    Code:
       0: new           #299                // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #302                // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: ldc_w         #304                // String HeaderBuilderImpl(version:
      10: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      13: aload_0
      14: invokevirtual #310                // Method version:()B
      17: invokestatic  #316                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
      20: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      23: ldc_w         #318                // String ,
      26: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      29: ldc_w         #320                // String flags:
      32: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      35: getstatic     #325                // Field akka/remote/artery/ByteFlag$.MODULE$:Lakka/remote/artery/ByteFlag$;
      38: aload_0
      39: invokevirtual #140                // Method flags:()B
      42: invokevirtual #329                // Method akka/remote/artery/ByteFlag$.binaryLeftPad:(B)Ljava/lang/String;
      45: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      48: ldc_w         #318                // String ,
      51: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      54: ldc_w         #331                // String UID:
      57: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      60: aload_0
      61: invokevirtual #333                // Method uid:()J
      64: invokestatic  #337                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      67: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      70: ldc_w         #318                // String ,
      73: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      76: ldc_w         #339                // String _senderActorRef:
      79: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      82: aload_0
      83: invokevirtual #200                // Method _senderActorRef:()Ljava/lang/String;
      86: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      89: ldc_w         #318                // String ,
      92: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      95: ldc_w         #341                // String _senderActorRefIdx:
      98: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     101: aload_0
     102: invokevirtual #184                // Method _senderActorRefIdx:()I
     105: invokestatic  #345                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     108: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     111: ldc_w         #318                // String ,
     114: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     117: ldc_w         #347                // String _recipientActorRef:
     120: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     123: aload_0
     124: invokevirtual #237                // Method _recipientActorRef:()Ljava/lang/String;
     127: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     130: ldc_w         #318                // String ,
     133: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     136: ldc_w         #349                // String _recipientActorRefIdx:
     139: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     142: aload_0
     143: invokevirtual #239                // Method _recipientActorRefIdx:()I
     146: invokestatic  #345                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     149: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     152: ldc_w         #318                // String ,
     155: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     158: ldc_w         #351                // String _serializer:
     161: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     164: aload_0
     165: invokevirtual #255                // Method _serializer:()I
     168: invokestatic  #345                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     171: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     174: ldc_w         #318                // String ,
     177: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     180: ldc_w         #353                // String _manifest:
     183: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     186: aload_0
     187: invokevirtual #264                // Method _manifest:()Ljava/lang/String;
     190: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     193: ldc_w         #318                // String ,
     196: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     199: ldc_w         #355                // String _manifestIdx:
     202: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     205: aload_0
     206: invokevirtual #260                // Method _manifestIdx:()I
     209: invokestatic  #345                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     212: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     215: ldc_w         #318                // String ,
     218: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     221: ldc_w         #357                // String _metadataContainer:
     224: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     227: aload_0
     228: invokevirtual #295                // Method _metadataContainer:()Lakka/util/ByteString;
     231: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     234: ldc_w         #359                // String )
     237: invokevirtual #308                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     240: invokevirtual #361                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     243: areturn

  public akka.remote.artery.HeaderBuilderImpl(akka.remote.artery.compress.InboundCompressions, akka.remote.artery.compress.CompressionTable<akka.actor.ActorRef>, akka.remote.artery.compress.CompressionTable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #206                // Field inboundCompression:Lakka/remote/artery/compress/InboundCompressions;
       5: aload_0
       6: aload_2
       7: putfield      #42                 // Field _outboundActorRefCompression:Lakka/remote/artery/compress/CompressionTable;
      10: aload_0
      11: aload_3
      12: putfield      #49                 // Field _outboundClassManifestCompression:Lakka/remote/artery/compress/CompressionTable;
      15: aload_0
      16: invokespecial #363                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: new           #244                // class akka/remote/artery/SerializationFormatCache
      23: dup
      24: invokespecial #364                // Method akka/remote/artery/SerializationFormatCache."<init>":()V
      27: putfield      #242                // Field toSerializationFormat:Lakka/remote/artery/SerializationFormatCache;
      30: aload_0
      31: iconst_0
      32: putfield      #53                 // Field _version:B
      35: aload_0
      36: iconst_0
      37: putfield      #57                 // Field _flags:B
      40: aload_0
      41: lconst_0
      42: putfield      #61                 // Field _uid:J
      45: aload_0
      46: iconst_0
      47: putfield      #65                 // Field _inboundActorRefCompressionTableVersion:B
      50: aload_0
      51: iconst_0
      52: putfield      #68                 // Field _inboundClassManifestCompressionTableVersion:B
      55: aload_0
      56: iconst_1
      57: putfield      #72                 // Field _useOutboundCompression:Z
      60: aload_0
      61: aconst_null
      62: putfield      #77                 // Field _senderActorRef:Ljava/lang/String;
      65: aload_0
      66: iconst_m1
      67: putfield      #82                 // Field _senderActorRefIdx:I
      70: aload_0
      71: aconst_null
      72: putfield      #86                 // Field _recipientActorRef:Ljava/lang/String;
      75: aload_0
      76: iconst_m1
      77: putfield      #89                 // Field _recipientActorRefIdx:I
      80: aload_0
      81: iconst_0
      82: putfield      #92                 // Field _serializer:I
      85: aload_0
      86: aconst_null
      87: putfield      #95                 // Field _manifest:Ljava/lang/String;
      90: aload_0
      91: iconst_m1
      92: putfield      #98                 // Field _manifestIdx:I
      95: aload_0
      96: aconst_null
      97: putfield      #102                // Field _metadataContainer:Lakka/util/ByteString;
     100: return
}
