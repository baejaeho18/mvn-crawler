Compiled from "Control.scala"
public final class akka.remote.artery.OutboundControlJunction$$anon$1 extends akka.stream.stage.GraphStageLogic implements akka.stream.stage.CallbackWrapper<akka.remote.artery.ControlMessage>, akka.stream.stage.InHandler, akka.stream.stage.OutHandler, akka.remote.artery.StageLogging {
  private final akka.stream.stage.AsyncCallback<akka.remote.artery.ControlMessage> akka$remote$artery$OutboundControlJunction$$anon$$sendControlMessageCallback;

  private final int maxControlMessageBufferSize;

  private final java.util.ArrayDeque<akka.remote.artery.OutboundEnvelope> buffer;

  private final akka.remote.artery.OutboundControlJunction $outer;

  private akka.event.LoggingAdapter akka$remote$artery$StageLogging$$_log;

  private final java.util.concurrent.locks.ReentrantLock akka$stream$stage$CallbackWrapper$$lock;

  private final java.util.concurrent.atomic.AtomicReference akka$stream$stage$CallbackWrapper$$callbackState;

  private volatile akka.stream.stage.CallbackWrapper$NotInitialized$ akka$stream$stage$CallbackWrapper$$NotInitialized$module;

  private volatile akka.stream.stage.CallbackWrapper$Initialized$ akka$stream$stage$CallbackWrapper$$Initialized$module;

  private volatile akka.stream.stage.CallbackWrapper$Stopped$ akka$stream$stage$CallbackWrapper$$Stopped$module;

  public akka.event.LoggingAdapter akka$remote$artery$StageLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #44                 // Field akka$remote$artery$StageLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$remote$artery$StageLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field akka$remote$artery$StageLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public java.lang.Class<?> logSource();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method akka/remote/artery/StageLogging$class.logSource:(Lakka/stream/stage/GraphStageLogic;)Ljava/lang/Class;
       4: areturn

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method akka/remote/artery/StageLogging$class.log:(Lakka/stream/stage/GraphStageLogic;)Lakka/event/LoggingAdapter;
       4: areturn

  public void onDownstreamFinish() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method akka/stream/stage/OutHandler$class.onDownstreamFinish:(Lakka/stream/stage/OutHandler;)V
       4: return

  public void onUpstreamFinish() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method akka/stream/stage/InHandler$class.onUpstreamFinish:(Lakka/stream/stage/InHandler;)V
       4: return

  public void onUpstreamFailure(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method akka/stream/stage/InHandler$class.onUpstreamFailure:(Lakka/stream/stage/InHandler;Ljava/lang/Throwable;)V
       5: return

  private akka.stream.stage.CallbackWrapper$NotInitialized$ akka$stream$stage$CallbackWrapper$$NotInitialized$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #86                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
       8: ifnonnull     23
      11: aload_0
      12: new           #88                 // class akka/stream/stage/CallbackWrapper$NotInitialized$
      15: dup
      16: aload_0
      17: invokespecial #92                 // Method akka/stream/stage/CallbackWrapper$NotInitialized$."<init>":(Lakka/stream/stage/CallbackWrapper;)V
      20: putfield      #86                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      23: getstatic     #98                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #86                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public final akka.stream.stage.CallbackWrapper$NotInitialized$ akka$stream$stage$CallbackWrapper$$NotInitialized();
    Code:
       0: aload_0
       1: getfield      #86                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #103                // Method akka$stream$stage$CallbackWrapper$$NotInitialized$lzycompute:()Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      11: goto          18
      14: aload_0
      15: getfield      #86                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      18: areturn

  private akka.stream.stage.CallbackWrapper$Initialized$ akka$stream$stage$CallbackWrapper$$Initialized$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #107                // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
       8: ifnonnull     23
      11: aload_0
      12: new           #109                // class akka/stream/stage/CallbackWrapper$Initialized$
      15: dup
      16: aload_0
      17: invokespecial #110                // Method akka/stream/stage/CallbackWrapper$Initialized$."<init>":(Lakka/stream/stage/CallbackWrapper;)V
      20: putfield      #107                // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
      23: getstatic     #98                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #107                // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public final akka.stream.stage.CallbackWrapper$Initialized$ akka$stream$stage$CallbackWrapper$$Initialized();
    Code:
       0: aload_0
       1: getfield      #107                // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #113                // Method akka$stream$stage$CallbackWrapper$$Initialized$lzycompute:()Lakka/stream/stage/CallbackWrapper$Initialized$;
      11: goto          18
      14: aload_0
      15: getfield      #107                // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
      18: areturn

  private akka.stream.stage.CallbackWrapper$Stopped$ akka$stream$stage$CallbackWrapper$$Stopped$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #117                // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
       8: ifnonnull     23
      11: aload_0
      12: new           #119                // class akka/stream/stage/CallbackWrapper$Stopped$
      15: dup
      16: aload_0
      17: invokespecial #120                // Method akka/stream/stage/CallbackWrapper$Stopped$."<init>":(Lakka/stream/stage/CallbackWrapper;)V
      20: putfield      #117                // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
      23: getstatic     #98                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #117                // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public final akka.stream.stage.CallbackWrapper$Stopped$ akka$stream$stage$CallbackWrapper$$Stopped();
    Code:
       0: aload_0
       1: getfield      #117                // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #123                // Method akka$stream$stage$CallbackWrapper$$Stopped$lzycompute:()Lakka/stream/stage/CallbackWrapper$Stopped$;
      11: goto          18
      14: aload_0
      15: getfield      #117                // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
      18: areturn

  public final java.util.concurrent.locks.ReentrantLock akka$stream$stage$CallbackWrapper$$lock();
    Code:
       0: aload_0
       1: getfield      #126                // Field akka$stream$stage$CallbackWrapper$$lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: areturn

  public final void akka$stream$stage$CallbackWrapper$_setter_$akka$stream$stage$CallbackWrapper$$lock_$eq(java.util.concurrent.locks.ReentrantLock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field akka$stream$stage$CallbackWrapper$$lock:Ljava/util/concurrent/locks/ReentrantLock;
       5: return

  public java.util.concurrent.atomic.AtomicReference akka$stream$stage$CallbackWrapper$$callbackState();
    Code:
       0: aload_0
       1: getfield      #131                // Field akka$stream$stage$CallbackWrapper$$callbackState:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public void akka$stream$stage$CallbackWrapper$_setter_$akka$stream$stage$CallbackWrapper$$callbackState_$eq(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #131                // Field akka$stream$stage$CallbackWrapper$$callbackState:Ljava/util/concurrent/atomic/AtomicReference;
       5: return

  public void stopCallback(scala.Function1<akka.remote.artery.ControlMessage, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #140                // Method akka/stream/stage/CallbackWrapper$class.stopCallback:(Lakka/stream/stage/CallbackWrapper;Lscala/Function1;)V
       5: return

  public void initCallback(scala.Function1<akka.remote.artery.ControlMessage, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // Method akka/stream/stage/CallbackWrapper$class.initCallback:(Lakka/stream/stage/CallbackWrapper;Lscala/Function1;)V
       5: return

  public void invoke(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // Method akka/stream/stage/CallbackWrapper$class.invoke:(Lakka/stream/stage/CallbackWrapper;Ljava/lang/Object;)V
       5: return

  public akka.stream.stage.AsyncCallback<akka.remote.artery.ControlMessage> akka$remote$artery$OutboundControlJunction$$anon$$sendControlMessageCallback();
    Code:
       0: aload_0
       1: getfield      #155                // Field akka$remote$artery$OutboundControlJunction$$anon$$sendControlMessageCallback:Lakka/stream/stage/AsyncCallback;
       4: areturn

  private int maxControlMessageBufferSize();
    Code:
       0: aload_0
       1: getfield      #158                // Field maxControlMessageBufferSize:I
       4: ireturn

  private java.util.ArrayDeque<akka.remote.artery.OutboundEnvelope> buffer();
    Code:
       0: aload_0
       1: getfield      #161                // Field buffer:Ljava/util/ArrayDeque;
       4: areturn

  public void preStart();
    Code:
       0: aload_0
       1: new           #164                // class akka/remote/artery/OutboundControlJunction$$anon$1$$anonfun$preStart$2
       4: dup
       5: aload_0
       6: invokespecial #167                // Method akka/remote/artery/OutboundControlJunction$$anon$1$$anonfun$preStart$2."<init>":(Lakka/remote/artery/OutboundControlJunction$$anon$1;)V
       9: invokevirtual #169                // Method initCallback:(Lscala/Function1;)V
      12: return

  public void onPush();
    Code:
       0: aload_0
       1: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
       4: invokevirtual #178                // Method java/util/ArrayDeque.isEmpty:()Z
       7: ifeq          49
      10: aload_0
      11: aload_0
      12: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      15: invokevirtual #184                // Method akka/remote/artery/OutboundControlJunction.out:()Lakka/stream/Outlet;
      18: invokevirtual #188                // Method isAvailable:(Lakka/stream/Outlet;)Z
      21: ifeq          49
      24: aload_0
      25: aload_0
      26: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      29: invokevirtual #184                // Method akka/remote/artery/OutboundControlJunction.out:()Lakka/stream/Outlet;
      32: aload_0
      33: aload_0
      34: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      37: invokevirtual #192                // Method akka/remote/artery/OutboundControlJunction.in:()Lakka/stream/Inlet;
      40: invokevirtual #196                // Method grab:(Lakka/stream/Inlet;)Ljava/lang/Object;
      43: invokevirtual #200                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      46: goto          68
      49: aload_0
      50: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
      53: aload_0
      54: aload_0
      55: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      58: invokevirtual #192                // Method akka/remote/artery/OutboundControlJunction.in:()Lakka/stream/Inlet;
      61: invokevirtual #196                // Method grab:(Lakka/stream/Inlet;)Ljava/lang/Object;
      64: invokevirtual #204                // Method java/util/ArrayDeque.offer:(Ljava/lang/Object;)Z
      67: pop
      68: return

  public void onPull();
    Code:
       0: aload_0
       1: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
       4: invokevirtual #178                // Method java/util/ArrayDeque.isEmpty:()Z
       7: ifeq          38
      10: aload_0
      11: aload_0
      12: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      15: invokevirtual #192                // Method akka/remote/artery/OutboundControlJunction.in:()Lakka/stream/Inlet;
      18: invokevirtual #209                // Method hasBeenPulled:(Lakka/stream/Inlet;)Z
      21: ifne          38
      24: aload_0
      25: aload_0
      26: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      29: invokevirtual #192                // Method akka/remote/artery/OutboundControlJunction.in:()Lakka/stream/Inlet;
      32: invokevirtual #213                // Method pull:(Lakka/stream/Inlet;)V
      35: goto          66
      38: aload_0
      39: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
      42: invokevirtual #178                // Method java/util/ArrayDeque.isEmpty:()Z
      45: ifne          66
      48: aload_0
      49: aload_0
      50: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      53: invokevirtual #184                // Method akka/remote/artery/OutboundControlJunction.out:()Lakka/stream/Outlet;
      56: aload_0
      57: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
      60: invokevirtual #217                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      63: invokevirtual #200                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      66: return

  public void akka$remote$artery$OutboundControlJunction$$anon$$internalSendControlMessage(akka.remote.artery.ControlMessage);
    Code:
       0: aload_0
       1: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
       4: invokevirtual #178                // Method java/util/ArrayDeque.isEmpty:()Z
       7: ifeq          43
      10: aload_0
      11: aload_0
      12: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      15: invokevirtual #184                // Method akka/remote/artery/OutboundControlJunction.out:()Lakka/stream/Outlet;
      18: invokevirtual #188                // Method isAvailable:(Lakka/stream/Outlet;)Z
      21: ifeq          43
      24: aload_0
      25: aload_0
      26: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      29: invokevirtual #184                // Method akka/remote/artery/OutboundControlJunction.out:()Lakka/stream/Outlet;
      32: aload_0
      33: aload_1
      34: invokespecial #223                // Method wrap:(Lakka/remote/artery/ControlMessage;)Lakka/remote/artery/OutboundEnvelope;
      37: invokevirtual #200                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      40: goto          91
      43: aload_0
      44: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
      47: invokevirtual #226                // Method java/util/ArrayDeque.size:()I
      50: aload_0
      51: invokespecial #228                // Method maxControlMessageBufferSize:()I
      54: if_icmpge     73
      57: aload_0
      58: invokespecial #172                // Method buffer:()Ljava/util/ArrayDeque;
      61: aload_0
      62: aload_1
      63: invokespecial #223                // Method wrap:(Lakka/remote/artery/ControlMessage;)Lakka/remote/artery/OutboundEnvelope;
      66: invokevirtual #204                // Method java/util/ArrayDeque.offer:(Ljava/lang/Object;)Z
      69: pop
      70: goto          91
      73: aload_0
      74: invokevirtual #230                // Method log:()Lakka/event/LoggingAdapter;
      77: ldc           #232                // String Dropping control message [{}] due to full buffer.
      79: getstatic     #238                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
      82: aload_1
      83: invokevirtual #242                // Method akka/event/Logging$.messageClassName:(Ljava/lang/Object;)Ljava/lang/String;
      86: invokeinterface #248,  3          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      91: return

  private akka.remote.artery.OutboundEnvelope wrap(akka.remote.artery.ControlMessage);
    Code:
       0: aload_0
       1: getfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
       4: getfield      #254                // Field akka/remote/artery/OutboundControlJunction.akka$remote$artery$OutboundControlJunction$$outboundEnvelopePool:Lakka/remote/artery/ObjectPool;
       7: invokevirtual #259                // Method akka/remote/artery/ObjectPool.acquire:()Ljava/lang/Object;
      10: checkcast     #261                // class akka/remote/artery/ReusableOutboundEnvelope
      13: getstatic     #266                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
      16: invokevirtual #270                // Method akka/util/OptionVal$.None:()Lscala/runtime/Null$;
      19: pop
      20: aconst_null
      21: pop
      22: aconst_null
      23: aload_1
      24: getstatic     #266                // Field akka/util/OptionVal$.MODULE$:Lakka/util/OptionVal$;
      27: invokevirtual #270                // Method akka/util/OptionVal$.None:()Lscala/runtime/Null$;
      30: pop
      31: aconst_null
      32: pop
      33: aconst_null
      34: invokevirtual #274                // Method akka/remote/artery/ReusableOutboundEnvelope.init:(Lakka/remote/RemoteActorRef;Ljava/lang/Object;Lakka/actor/ActorRef;)Lakka/remote/artery/OutboundEnvelope;
      37: areturn

  public akka.remote.artery.OutboundControlJunction$$anon$1(akka.remote.artery.OutboundControlJunction);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #180                // Field $outer:Lakka/remote/artery/OutboundControlJunction;
      11: aload_0
      12: aload_1
      13: invokevirtual #279                // Method akka/remote/artery/OutboundControlJunction.shape:()Lakka/stream/FlowShape;
      16: invokespecial #282                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: invokestatic  #285                // Method akka/stream/stage/CallbackWrapper$class.$init$:(Lakka/stream/stage/CallbackWrapper;)V
      23: aload_0
      24: invokestatic  #287                // Method akka/stream/stage/InHandler$class.$init$:(Lakka/stream/stage/InHandler;)V
      27: aload_0
      28: invokestatic  #289                // Method akka/stream/stage/OutHandler$class.$init$:(Lakka/stream/stage/OutHandler;)V
      31: aload_0
      32: invokestatic  #292                // Method akka/remote/artery/StageLogging$class.$init$:(Lakka/stream/stage/GraphStageLogic;)V
      35: aload_0
      36: aload_0
      37: new           #294                // class akka/remote/artery/OutboundControlJunction$$anon$1$$anonfun$2
      40: dup
      41: aload_0
      42: invokespecial #295                // Method akka/remote/artery/OutboundControlJunction$$anon$1$$anonfun$2."<init>":(Lakka/remote/artery/OutboundControlJunction$$anon$1;)V
      45: invokevirtual #299                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
      48: putfield      #155                // Field akka$remote$artery$OutboundControlJunction$$anon$$sendControlMessageCallback:Lakka/stream/stage/AsyncCallback;
      51: aload_0
      52: aload_1
      53: getfield      #303                // Field akka/remote/artery/OutboundControlJunction.akka$remote$artery$OutboundControlJunction$$outboundContext:Lakka/remote/artery/OutboundContext;
      56: invokeinterface #309,  1          // InterfaceMethod akka/remote/artery/OutboundContext.settings:()Lakka/remote/artery/ArterySettings;
      61: invokevirtual #315                // Method akka/remote/artery/ArterySettings.Advanced:()Lakka/remote/artery/ArterySettings$Advanced$;
      64: invokevirtual #320                // Method akka/remote/artery/ArterySettings$Advanced$.OutboundControlQueueSize:()I
      67: putfield      #158                // Field maxControlMessageBufferSize:I
      70: aload_0
      71: new           #174                // class java/util/ArrayDeque
      74: dup
      75: invokespecial #322                // Method java/util/ArrayDeque."<init>":()V
      78: putfield      #161                // Field buffer:Ljava/util/ArrayDeque;
      81: aload_0
      82: aload_1
      83: invokevirtual #192                // Method akka/remote/artery/OutboundControlJunction.in:()Lakka/stream/Inlet;
      86: aload_1
      87: invokevirtual #184                // Method akka/remote/artery/OutboundControlJunction.out:()Lakka/stream/Outlet;
      90: aload_0
      91: invokevirtual #326                // Method setHandlers:(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/stage/InHandler;)V
      94: return
}
