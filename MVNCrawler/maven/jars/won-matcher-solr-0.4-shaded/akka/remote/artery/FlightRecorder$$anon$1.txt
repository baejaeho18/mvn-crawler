Compiled from "FlightRecorder.scala"
public final class akka.remote.artery.FlightRecorder$$anon$1 implements akka.remote.artery.EventSink {
  private final akka.remote.artery.EventClockImpl clock;

  private final java.nio.ByteBuffer alertRecordBuffer;

  private final java.nio.ByteBuffer loFreqRecordBuffer;

  private final java.nio.ByteBuffer hiFreqBatchBuffer;

  private long hiFreqBatchedEntries;

  private final akka.remote.artery.FlightRecorder $outer;

  public void alert(int, byte[]);
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
       4: invokevirtual #30                 // Method akka/remote/artery/FlightRecorder.get:()Ljava/lang/Object;
       7: getstatic     #36                 // Field akka/remote/artery/Running$.MODULE$:Lakka/remote/artery/Running$;
      10: if_acmpne     62
      13: aload_0
      14: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      17: invokevirtual #44                 // Method akka/remote/artery/EventClockImpl.updateWallClock:()V
      20: aload_0
      21: aload_0
      22: getfield      #46                 // Field alertRecordBuffer:Ljava/nio/ByteBuffer;
      25: iload_1
      26: aload_2
      27: invokespecial #50                 // Method prepareRichRecord:(Ljava/nio/ByteBuffer;I[B)V
      30: aload_0
      31: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      34: getfield      #54                 // Field akka/remote/artery/FlightRecorder.akka$remote$artery$FlightRecorder$$alertLogs:Lakka/remote/artery/RollingEventLogSection;
      37: aload_0
      38: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      41: invokevirtual #58                 // Method akka/remote/artery/FlightRecorder.akka$remote$artery$FlightRecorder$$currentLog:()I
      44: aload_0
      45: getfield      #46                 // Field alertRecordBuffer:Ljava/nio/ByteBuffer;
      48: invokevirtual #64                 // Method akka/remote/artery/RollingEventLogSection.write:(ILjava/nio/ByteBuffer;)V
      51: aload_0
      52: invokevirtual #67                 // Method flushHiFreqBatch:()V
      55: aload_0
      56: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      59: invokevirtual #70                 // Method akka/remote/artery/FlightRecorder.snapshot:()V
      62: return

  public void loFreq(int, byte[]);
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
       4: invokevirtual #30                 // Method akka/remote/artery/FlightRecorder.get:()Ljava/lang/Object;
       7: checkcast     #79                 // class akka/remote/artery/FlightRecorderStatus
      10: astore_3
      11: aload_3
      12: getstatic     #36                 // Field akka/remote/artery/Running$.MODULE$:Lakka/remote/artery/Running$;
      15: if_acmpne     56
      18: aload_0
      19: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      22: invokevirtual #82                 // Method akka/remote/artery/EventClockImpl.updateHighSpeedClock:()V
      25: aload_0
      26: aload_0
      27: getfield      #84                 // Field loFreqRecordBuffer:Ljava/nio/ByteBuffer;
      30: iload_1
      31: aload_2
      32: invokespecial #50                 // Method prepareRichRecord:(Ljava/nio/ByteBuffer;I[B)V
      35: aload_0
      36: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      39: getfield      #87                 // Field akka/remote/artery/FlightRecorder.akka$remote$artery$FlightRecorder$$loFreqLogs:Lakka/remote/artery/RollingEventLogSection;
      42: aload_0
      43: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      46: invokevirtual #58                 // Method akka/remote/artery/FlightRecorder.akka$remote$artery$FlightRecorder$$currentLog:()I
      49: aload_0
      50: getfield      #84                 // Field loFreqRecordBuffer:Ljava/nio/ByteBuffer;
      53: invokevirtual #64                 // Method akka/remote/artery/RollingEventLogSection.write:(ILjava/nio/ByteBuffer;)V
      56: return

  private void prepareRichRecord(java.nio.ByteBuffer, int, byte[]);
    Code:
       0: aload_1
       1: invokevirtual #95                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_1
       6: aload_0
       7: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      10: invokevirtual #99                 // Method akka/remote/artery/EventClockImpl.wallClockPart:()J
      13: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      16: pop
      17: aload_1
      18: aload_0
      19: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      22: invokevirtual #106                // Method akka/remote/artery/EventClockImpl.highSpeedPart:()J
      25: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      28: pop
      29: aload_1
      30: iload_2
      31: invokevirtual #110                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      34: pop
      35: getstatic     #115                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      38: getstatic     #120                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      41: invokevirtual #123                // Method akka/remote/artery/FlightRecorder$.LoFreqRecordSize:()I
      44: bipush        32
      46: isub
      47: aload_3
      48: arraylength
      49: invokevirtual #127                // Method scala/math/package$.min:(II)I
      52: istore        4
      54: aload_1
      55: iload         4
      57: i2b
      58: invokevirtual #131                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      61: pop
      62: iload         4
      64: iconst_0
      65: if_icmple     79
      68: aload_1
      69: aload_3
      70: iconst_0
      71: iload         4
      73: invokevirtual #134                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      76: goto          82
      79: getstatic     #140                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      82: pop
      83: aload_1
      84: iconst_0
      85: invokevirtual #144                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      88: pop
      89: return

  public void hiFreq(long, long);
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
       4: invokevirtual #30                 // Method akka/remote/artery/FlightRecorder.get:()Ljava/lang/Object;
       7: checkcast     #79                 // class akka/remote/artery/FlightRecorderStatus
      10: astore        5
      12: aload         5
      14: getstatic     #36                 // Field akka/remote/artery/Running$.MODULE$:Lakka/remote/artery/Running$;
      17: if_acmpne     62
      20: aload_0
      21: aload_0
      22: getfield      #150                // Field hiFreqBatchedEntries:J
      25: lconst_1
      26: ladd
      27: putfield      #150                // Field hiFreqBatchedEntries:J
      30: aload_0
      31: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      34: lload_1
      35: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      38: pop
      39: aload_0
      40: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      43: lload_3
      44: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      47: pop
      48: aload_0
      49: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      52: invokevirtual #156                // Method java/nio/ByteBuffer.hasRemaining:()Z
      55: ifne          62
      58: aload_0
      59: invokevirtual #67                 // Method flushHiFreqBatch:()V
      62: return

  private void startHiFreqBatch();
    Code:
       0: aload_0
       1: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #95                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      12: invokevirtual #82                 // Method akka/remote/artery/EventClockImpl.updateHighSpeedClock:()V
      15: aload_0
      16: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      23: invokevirtual #99                 // Method akka/remote/artery/EventClockImpl.wallClockPart:()J
      26: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      29: pop
      30: aload_0
      31: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      34: aload_0
      35: getfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      38: invokevirtual #106                // Method akka/remote/artery/EventClockImpl.highSpeedPart:()J
      41: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      44: pop
      45: aload_0
      46: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      49: lconst_0
      50: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      53: pop
      54: aload_0
      55: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      58: lconst_0
      59: invokevirtual #103                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      62: pop
      63: return

  public void flushHiFreqBatch();
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
       4: invokevirtual #30                 // Method akka/remote/artery/FlightRecorder.get:()Ljava/lang/Object;
       7: checkcast     #79                 // class akka/remote/artery/FlightRecorderStatus
      10: astore_1
      11: aload_1
      12: getstatic     #36                 // Field akka/remote/artery/Running$.MODULE$:Lakka/remote/artery/Running$;
      15: if_acmpne     84
      18: aload_0
      19: getfield      #150                // Field hiFreqBatchedEntries:J
      22: lconst_0
      23: lcmp
      24: ifle          84
      27: aload_0
      28: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      31: getstatic     #120                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      34: invokevirtual #161                // Method akka/remote/artery/FlightRecorder$.HiFreqEntryCountFieldOffset:()I
      37: aload_0
      38: getfield      #150                // Field hiFreqBatchedEntries:J
      41: invokevirtual #164                // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      44: pop
      45: aload_0
      46: lconst_0
      47: putfield      #150                // Field hiFreqBatchedEntries:J
      50: aload_0
      51: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      54: iconst_0
      55: invokevirtual #144                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      58: pop
      59: aload_0
      60: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      63: getfield      #167                // Field akka/remote/artery/FlightRecorder.akka$remote$artery$FlightRecorder$$hiFreqLogs:Lakka/remote/artery/RollingEventLogSection;
      66: aload_0
      67: getfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      70: invokevirtual #58                 // Method akka/remote/artery/FlightRecorder.akka$remote$artery$FlightRecorder$$currentLog:()I
      73: aload_0
      74: getfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      77: invokevirtual #64                 // Method akka/remote/artery/RollingEventLogSection.write:(ILjava/nio/ByteBuffer;)V
      80: aload_0
      81: invokespecial #169                // Method startHiFreqBatch:()V
      84: return

  public akka.remote.artery.FlightRecorder$$anon$1(akka.remote.artery.FlightRecorder);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #26                 // Field $outer:Lakka/remote/artery/FlightRecorder;
      11: aload_0
      12: invokespecial #173                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: new           #40                 // class akka/remote/artery/EventClockImpl
      19: dup
      20: invokespecial #174                // Method akka/remote/artery/EventClockImpl."<init>":()V
      23: putfield      #38                 // Field clock:Lakka/remote/artery/EventClockImpl;
      26: aload_0
      27: getstatic     #120                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      30: invokevirtual #177                // Method akka/remote/artery/FlightRecorder$.AlertRecordSize:()I
      33: invokestatic  #180                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      36: getstatic     #186                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      39: invokevirtual #190                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      42: putfield      #46                 // Field alertRecordBuffer:Ljava/nio/ByteBuffer;
      45: aload_0
      46: getstatic     #120                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      49: invokevirtual #123                // Method akka/remote/artery/FlightRecorder$.LoFreqRecordSize:()I
      52: invokestatic  #180                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      55: getstatic     #186                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      58: invokevirtual #190                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      61: putfield      #84                 // Field loFreqRecordBuffer:Ljava/nio/ByteBuffer;
      64: aload_0
      65: getstatic     #120                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      68: invokevirtual #193                // Method akka/remote/artery/FlightRecorder$.HiFreqRecordSize:()I
      71: invokestatic  #180                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      74: getstatic     #186                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      77: invokevirtual #190                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      80: putfield      #152                // Field hiFreqBatchBuffer:Ljava/nio/ByteBuffer;
      83: aload_0
      84: lconst_0
      85: putfield      #150                // Field hiFreqBatchedEntries:J
      88: aload_0
      89: invokespecial #169                // Method startHiFreqBatch:()V
      92: return
}
