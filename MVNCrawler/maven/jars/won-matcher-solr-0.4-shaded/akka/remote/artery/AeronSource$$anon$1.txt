Compiled from "AeronSource.scala"
public final class akka.remote.artery.AeronSource$$anon$1 extends akka.stream.stage.GraphStageLogic implements akka.stream.stage.OutHandler,akka.remote.artery.AeronSource$ResourceLifecycle {
  private final io.aeron.Subscription sub;

  private final int spinning;

  private int backoffCount;

  private long delegateTaskStartTime;

  private long countBeforeDelegate;

  private final akka.remote.artery.AeronSource$MessageHandler messageHandler;

  private final akka.remote.artery.TaskRunner$Add addPollTask;

  private final byte[] channelMetadata;

  private boolean delegatingToTaskRunner;

  private scala.collection.immutable.List<java.lang.Object> akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages;

  private final akka.stream.stage.AsyncCallback<java.lang.Object> onUnavailableImageCb;

  private final akka.remote.artery.AeronSource $outer;

  public void onDownstreamFinish() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method akka/stream/stage/OutHandler$class.onDownstreamFinish:(Lakka/stream/stage/OutHandler;)V
       4: return

  private io.aeron.Subscription sub();
    Code:
       0: aload_0
       1: getfield      #52                 // Field sub:Lio/aeron/Subscription;
       4: areturn

  private int spinning();
    Code:
       0: aload_0
       1: getfield      #55                 // Field spinning:I
       4: ireturn

  private int backoffCount();
    Code:
       0: aload_0
       1: getfield      #57                 // Field backoffCount:I
       4: ireturn

  private void backoffCount_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field backoffCount:I
       5: return

  private long delegateTaskStartTime();
    Code:
       0: aload_0
       1: getfield      #63                 // Field delegateTaskStartTime:J
       4: lreturn

  private void delegateTaskStartTime_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #63                 // Field delegateTaskStartTime:J
       5: return

  private long countBeforeDelegate();
    Code:
       0: aload_0
       1: getfield      #67                 // Field countBeforeDelegate:J
       4: lreturn

  private void countBeforeDelegate_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #67                 // Field countBeforeDelegate:J
       5: return

  private akka.remote.artery.AeronSource$MessageHandler messageHandler();
    Code:
       0: aload_0
       1: getfield      #71                 // Field messageHandler:Lakka/remote/artery/AeronSource$MessageHandler;
       4: areturn

  private akka.remote.artery.TaskRunner$Add addPollTask();
    Code:
       0: aload_0
       1: getfield      #74                 // Field addPollTask:Lakka/remote/artery/TaskRunner$Add;
       4: areturn

  private byte[] channelMetadata();
    Code:
       0: aload_0
       1: getfield      #77                 // Field channelMetadata:[B
       4: areturn

  private boolean delegatingToTaskRunner();
    Code:
       0: aload_0
       1: getfield      #80                 // Field delegatingToTaskRunner:Z
       4: ireturn

  private void delegatingToTaskRunner_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #80                 // Field delegatingToTaskRunner:Z
       5: return

  public scala.collection.immutable.List<java.lang.Object> akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages();
    Code:
       0: aload_0
       1: getfield      #85                 // Field akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages:Lscala/collection/immutable/List;
       4: areturn

  public void akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages_$eq(scala.collection.immutable.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages:Lscala/collection/immutable/List;
       5: return

  private akka.stream.stage.AsyncCallback<java.lang.Object> onUnavailableImageCb();
    Code:
       0: aload_0
       1: getfield      #90                 // Field onUnavailableImageCb:Lakka/stream/stage/AsyncCallback;
       4: areturn

  public void preStart();
    Code:
       0: aload_0
       1: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
       4: getfield      #97                 // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$flightRecorder:Lakka/remote/artery/EventSink;
       7: getstatic     #103                // Field akka/remote/artery/FlightRecorderEvents$.MODULE$:Lakka/remote/artery/FlightRecorderEvents$;
      10: invokevirtual #106                // Method akka/remote/artery/FlightRecorderEvents$.AeronSource_Started:()I
      13: aload_0
      14: invokespecial #108                // Method channelMetadata:()[B
      17: invokeinterface #114,  3          // InterfaceMethod akka/remote/artery/EventSink.loFreq:(I[B)V
      22: return

  public void postStop();
    Code:
       0: aload_0
       1: invokespecial #117                // Method sub:()Lio/aeron/Subscription;
       4: invokevirtual #122                // Method io/aeron/Subscription.close:()V
       7: aload_0
       8: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
      11: getfield      #126                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$taskRunner:Lakka/remote/artery/TaskRunner;
      14: new           #128                // class akka/remote/artery/TaskRunner$Remove
      17: dup
      18: aload_0
      19: invokespecial #130                // Method addPollTask:()Lakka/remote/artery/TaskRunner$Add;
      22: invokevirtual #136                // Method akka/remote/artery/TaskRunner$Add.task:()Lscala/Function0;
      25: invokespecial #140                // Method akka/remote/artery/TaskRunner$Remove."<init>":(Lscala/Function0;)V
      28: invokevirtual #146                // Method akka/remote/artery/TaskRunner.command:(Lakka/remote/artery/TaskRunner$Command;)V
      31: aload_0
      32: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
      35: getfield      #97                 // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$flightRecorder:Lakka/remote/artery/EventSink;
      38: getstatic     #103                // Field akka/remote/artery/FlightRecorderEvents$.MODULE$:Lakka/remote/artery/FlightRecorderEvents$;
      41: invokevirtual #149                // Method akka/remote/artery/FlightRecorderEvents$.AeronSource_Stopped:()I
      44: aload_0
      45: invokespecial #108                // Method channelMetadata:()[B
      48: invokeinterface #114,  3          // InterfaceMethod akka/remote/artery/EventSink.loFreq:(I[B)V
      53: return

  public void onPull();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #152                // Method spinning:()I
       5: invokespecial #154                // Method backoffCount_$eq:(I)V
       8: aload_0
       9: invokespecial #157                // Method subscriberLoop:()V
      12: return

  private void subscriberLoop();
    Code:
       0: aload_0
       1: invokespecial #159                // Method messageHandler:()Lakka/remote/artery/AeronSource$MessageHandler;
       4: invokevirtual #164                // Method akka/remote/artery/AeronSource$MessageHandler.reset:()V
       7: aload_0
       8: invokespecial #117                // Method sub:()Lio/aeron/Subscription;
      11: aload_0
      12: invokespecial #159                // Method messageHandler:()Lakka/remote/artery/AeronSource$MessageHandler;
      15: invokevirtual #168                // Method akka/remote/artery/AeronSource$MessageHandler.fragmentsHandler:()Lakka/remote/artery/AeronSource$Fragments;
      18: iconst_1
      19: invokevirtual #172                // Method io/aeron/Subscription.poll:(Lio/aeron/logbuffer/FragmentHandler;I)I
      22: istore_2
      23: aload_0
      24: invokespecial #159                // Method messageHandler:()Lakka/remote/artery/AeronSource$MessageHandler;
      27: invokevirtual #176                // Method akka/remote/artery/AeronSource$MessageHandler.messageReceived:()Lakka/remote/artery/EnvelopeBuffer;
      30: astore_3
      31: aload_0
      32: invokespecial #159                // Method messageHandler:()Lakka/remote/artery/AeronSource$MessageHandler;
      35: invokevirtual #164                // Method akka/remote/artery/AeronSource$MessageHandler.reset:()V
      38: iload_2
      39: iconst_0
      40: if_icmple     68
      43: aload_0
      44: aload_0
      45: invokespecial #178                // Method countBeforeDelegate:()J
      48: lconst_1
      49: ladd
      50: invokespecial #180                // Method countBeforeDelegate_$eq:(J)V
      53: aload_3
      54: ifnull        0
      57: aload_0
      58: aload_3
      59: invokespecial #184                // Method onMessage:(Lakka/remote/artery/EnvelopeBuffer;)V
      62: getstatic     #190                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      65: goto          144
      68: aload_0
      69: aload_0
      70: invokespecial #192                // Method backoffCount:()I
      73: iconst_1
      74: isub
      75: invokespecial #154                // Method backoffCount_$eq:(I)V
      78: aload_0
      79: invokespecial #192                // Method backoffCount:()I
      82: iconst_0
      83: if_icmple     92
      86: invokestatic  #197                // Method org/agrona/hints/ThreadHints.onSpinWait:()V
      89: goto          0
      92: aload_0
      93: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
      96: getfield      #97                 // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$flightRecorder:Lakka/remote/artery/EventSink;
      99: getstatic     #103                // Field akka/remote/artery/FlightRecorderEvents$.MODULE$:Lakka/remote/artery/FlightRecorderEvents$;
     102: invokevirtual #200                // Method akka/remote/artery/FlightRecorderEvents$.AeronSource_DelegateToTaskRunner:()I
     105: i2l
     106: aload_0
     107: invokespecial #178                // Method countBeforeDelegate:()J
     110: invokeinterface #204,  5          // InterfaceMethod akka/remote/artery/EventSink.hiFreq:(JJ)V
     115: aload_0
     116: iconst_1
     117: invokespecial #206                // Method delegatingToTaskRunner_$eq:(Z)V
     120: aload_0
     121: invokestatic  #211                // Method java/lang/System.nanoTime:()J
     124: invokespecial #213                // Method delegateTaskStartTime_$eq:(J)V
     127: aload_0
     128: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
     131: getfield      #126                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$taskRunner:Lakka/remote/artery/TaskRunner;
     134: aload_0
     135: invokespecial #130                // Method addPollTask:()Lakka/remote/artery/TaskRunner$Add;
     138: invokevirtual #146                // Method akka/remote/artery/TaskRunner.command:(Lakka/remote/artery/TaskRunner$Command;)V
     141: getstatic     #190                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     144: pop
     145: return

  public void akka$remote$artery$AeronSource$$anon$$taskOnMessage(akka.remote.artery.EnvelopeBuffer);
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #180                // Method countBeforeDelegate_$eq:(J)V
       5: aload_0
       6: iconst_0
       7: invokespecial #206                // Method delegatingToTaskRunner_$eq:(Z)V
      10: aload_0
      11: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
      14: getfield      #97                 // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$flightRecorder:Lakka/remote/artery/EventSink;
      17: getstatic     #103                // Field akka/remote/artery/FlightRecorderEvents$.MODULE$:Lakka/remote/artery/FlightRecorderEvents$;
      20: invokevirtual #222                // Method akka/remote/artery/FlightRecorderEvents$.AeronSource_ReturnFromTaskRunner:()I
      23: i2l
      24: invokestatic  #211                // Method java/lang/System.nanoTime:()J
      27: aload_0
      28: invokespecial #224                // Method delegateTaskStartTime:()J
      31: lsub
      32: invokeinterface #204,  5          // InterfaceMethod akka/remote/artery/EventSink.hiFreq:(JJ)V
      37: aload_0
      38: invokevirtual #227                // Method akka$remote$artery$AeronSource$$anon$$freeSessionBuffers:()V
      41: aload_0
      42: aload_1
      43: invokespecial #184                // Method onMessage:(Lakka/remote/artery/EnvelopeBuffer;)V
      46: return

  private void onMessage(akka.remote.artery.EnvelopeBuffer);
    Code:
       0: aload_0
       1: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
       4: getfield      #97                 // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$flightRecorder:Lakka/remote/artery/EventSink;
       7: getstatic     #103                // Field akka/remote/artery/FlightRecorderEvents$.MODULE$:Lakka/remote/artery/FlightRecorderEvents$;
      10: invokevirtual #231                // Method akka/remote/artery/FlightRecorderEvents$.AeronSource_Received:()I
      13: i2l
      14: aload_1
      15: invokevirtual #235                // Method akka/remote/artery/EnvelopeBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
      18: invokevirtual #240                // Method java/nio/ByteBuffer.limit:()I
      21: i2l
      22: invokeinterface #204,  5          // InterfaceMethod akka/remote/artery/EventSink.hiFreq:(JJ)V
      27: aload_0
      28: aload_0
      29: getfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
      32: invokevirtual #244                // Method akka/remote/artery/AeronSource.out:()Lakka/stream/Outlet;
      35: aload_1
      36: invokevirtual #248                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      39: return

  public void akka$remote$artery$AeronSource$$anon$$freeSessionBuffers();
    Code:
       0: aload_0
       1: invokespecial #250                // Method delegatingToTaskRunner:()Z
       4: ifne          22
       7: aload_0
       8: aload_0
       9: invokevirtual #252                // Method akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages:()Lscala/collection/immutable/List;
      12: invokespecial #255                // Method loop$1:(Lscala/collection/immutable/List;)V
      15: aload_0
      16: getstatic     #260                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      19: invokevirtual #262                // Method akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages_$eq:(Lscala/collection/immutable/List;)V
      22: return

  public void onUnavailableImage(int);
    Code:
       0: aload_0
       1: invokespecial #265                // Method onUnavailableImageCb:()Lakka/stream/stage/AsyncCallback;
       4: iload_1
       5: invokestatic  #271                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: invokeinterface #277,  2          // InterfaceMethod akka/stream/stage/AsyncCallback.invoke:(Ljava/lang/Object;)V
      13: goto          43
      16: astore_2
      17: aload_2
      18: astore_3
      19: getstatic     #282                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      22: aload_3
      23: invokevirtual #286                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      26: astore        4
      28: aload         4
      30: invokevirtual #291                // Method scala/Option.isEmpty:()Z
      33: ifeq          38
      36: aload_2
      37: athrow
      38: getstatic     #190                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      41: astore        5
      43: return
    Exception table:
       from    to  target type
           0    16    16   any

  private final void loop$1(scala.collection.immutable.List);
    Code:
       0: aload_1
       1: astore_3
       2: getstatic     #260                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       5: aload_3
       6: invokevirtual #300                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          22
      12: getstatic     #190                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      15: astore        4
      17: getstatic     #190                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      20: pop
      21: return
      22: aload_3
      23: instanceof    #302                // class scala/collection/immutable/$colon$colon
      26: ifeq          71
      29: aload_3
      30: checkcast     #302                // class scala/collection/immutable/$colon$colon
      33: astore        5
      35: aload         5
      37: invokevirtual #306                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      40: invokestatic  #310                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      43: istore        6
      45: aload         5
      47: invokevirtual #313                // Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
      50: astore        7
      52: aload_0
      53: invokespecial #159                // Method messageHandler:()Lakka/remote/artery/AeronSource$MessageHandler;
      56: invokevirtual #168                // Method akka/remote/artery/AeronSource$MessageHandler.fragmentsHandler:()Lakka/remote/artery/AeronSource$Fragments;
      59: iload         6
      61: invokevirtual #319                // Method akka/remote/artery/AeronSource$Fragments.freeSessionBuffer:(I)Z
      64: pop
      65: aload         7
      67: astore_1
      68: goto          0
      71: new           #321                // class scala/MatchError
      74: dup
      75: aload_3
      76: invokespecial #323                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow

  public akka.remote.artery.AeronSource$$anon$1(akka.remote.artery.AeronSource);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #93                 // Field $outer:Lakka/remote/artery/AeronSource;
      11: aload_0
      12: aload_1
      13: invokevirtual #332                // Method akka/remote/artery/AeronSource.shape:()Lakka/stream/SourceShape;
      16: invokespecial #335                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: invokestatic  #338                // Method akka/stream/stage/OutHandler$class.$init$:(Lakka/stream/stage/OutHandler;)V
      23: aload_0
      24: aload_1
      25: getfield      #342                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$aeron:Lio/aeron/Aeron;
      28: aload_1
      29: getfield      #346                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$channel:Ljava/lang/String;
      32: aload_1
      33: getfield      #349                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$streamId:I
      36: invokevirtual #355                // Method io/aeron/Aeron.addSubscription:(Ljava/lang/String;I)Lio/aeron/Subscription;
      39: putfield      #52                 // Field sub:Lio/aeron/Subscription;
      42: aload_0
      43: sipush        1100
      46: aload_1
      47: getfield      #126                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$taskRunner:Lakka/remote/artery/TaskRunner;
      50: invokevirtual #358                // Method akka/remote/artery/TaskRunner.idleCpuLevel:()I
      53: imul
      54: sipush        1000
      57: isub
      58: putfield      #55                 // Field spinning:I
      61: aload_0
      62: aload_0
      63: invokespecial #152                // Method spinning:()I
      66: putfield      #57                 // Field backoffCount:I
      69: aload_0
      70: lconst_0
      71: putfield      #63                 // Field delegateTaskStartTime:J
      74: aload_0
      75: lconst_0
      76: putfield      #67                 // Field countBeforeDelegate:J
      79: aload_0
      80: new           #161                // class akka/remote/artery/AeronSource$MessageHandler
      83: dup
      84: aload_1
      85: getfield      #362                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$pool:Lakka/remote/artery/EnvelopeBufferPool;
      88: invokespecial #365                // Method akka/remote/artery/AeronSource$MessageHandler."<init>":(Lakka/remote/artery/EnvelopeBufferPool;)V
      91: putfield      #71                 // Field messageHandler:Lakka/remote/artery/AeronSource$MessageHandler;
      94: aload_0
      95: new           #132                // class akka/remote/artery/TaskRunner$Add
      98: dup
      99: getstatic     #370                // Field akka/remote/artery/AeronSource$.MODULE$:Lakka/remote/artery/AeronSource$;
     102: aload_0
     103: invokespecial #117                // Method sub:()Lio/aeron/Subscription;
     106: aload_0
     107: invokespecial #159                // Method messageHandler:()Lakka/remote/artery/AeronSource$MessageHandler;
     110: aload_0
     111: new           #372                // class akka/remote/artery/AeronSource$$anon$1$$anonfun$3
     114: dup
     115: aload_0
     116: invokespecial #375                // Method akka/remote/artery/AeronSource$$anon$1$$anonfun$3."<init>":(Lakka/remote/artery/AeronSource$$anon$1;)V
     119: invokevirtual #379                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
     122: invokevirtual #383                // Method akka/remote/artery/AeronSource$.akka$remote$artery$AeronSource$$pollTask:(Lio/aeron/Subscription;Lakka/remote/artery/AeronSource$MessageHandler;Lakka/stream/stage/AsyncCallback;)Lscala/Function0;
     125: invokespecial #384                // Method akka/remote/artery/TaskRunner$Add."<init>":(Lscala/Function0;)V
     128: putfield      #74                 // Field addPollTask:Lakka/remote/artery/TaskRunner$Add;
     131: aload_0
     132: aload_1
     133: getfield      #346                // Field akka/remote/artery/AeronSource.akka$remote$artery$AeronSource$$channel:Ljava/lang/String;
     136: ldc_w         #386                // String US-ASCII
     139: invokevirtual #392                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
     142: putfield      #77                 // Field channelMetadata:[B
     145: aload_0
     146: iconst_0
     147: putfield      #80                 // Field delegatingToTaskRunner:Z
     150: aload_0
     151: getstatic     #260                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     154: putfield      #85                 // Field akka$remote$artery$AeronSource$$anon$$pendingUnavailableImages:Lscala/collection/immutable/List;
     157: aload_0
     158: aload_0
     159: new           #394                // class akka/remote/artery/AeronSource$$anon$1$$anonfun$1
     162: dup
     163: aload_0
     164: invokespecial #395                // Method akka/remote/artery/AeronSource$$anon$1$$anonfun$1."<init>":(Lakka/remote/artery/AeronSource$$anon$1;)V
     167: invokevirtual #379                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
     170: putfield      #90                 // Field onUnavailableImageCb:Lakka/stream/stage/AsyncCallback;
     173: aload_0
     174: aload_1
     175: invokevirtual #244                // Method akka/remote/artery/AeronSource.out:()Lakka/stream/Outlet;
     178: aload_0
     179: invokevirtual #399                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
     182: return
}
