Compiled from "ArteryTransport.scala"
public final class akka.remote.artery.ArteryTransport$$anonfun$akka$remote$artery$ArteryTransport$$internalShutdown$1 extends scala.runtime.AbstractFunction1<akka.Done, scala.concurrent.Future<akka.Done$>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.artery.ArteryTransport $outer;

  public final scala.concurrent.Future<akka.Done$> apply(akka.Done);
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/remote/artery/ArteryTransport;
       4: invokevirtual #27                 // Method akka/remote/artery/ArteryTransport.akka$remote$artery$ArteryTransport$$taskRunner:()Lakka/remote/artery/TaskRunner;
       7: invokevirtual #32                 // Method akka/remote/artery/TaskRunner.stop:()Lscala/concurrent/Future;
      10: new           #34                 // class akka/remote/artery/ArteryTransport$$anonfun$akka$remote$artery$ArteryTransport$$internalShutdown$1$$anonfun$apply$2
      13: dup
      14: aload_0
      15: invokespecial #38                 // Method akka/remote/artery/ArteryTransport$$anonfun$akka$remote$artery$ArteryTransport$$internalShutdown$1$$anonfun$apply$2."<init>":(Lakka/remote/artery/ArteryTransport$$anonfun$akka$remote$artery$ArteryTransport$$internalShutdown$1;)V
      18: aload_0
      19: getfield      #23                 // Field $outer:Lakka/remote/artery/ArteryTransport;
      22: invokevirtual #42                 // Method akka/remote/artery/ArteryTransport.system:()Lakka/actor/ExtendedActorSystem;
      25: invokevirtual #48                 // Method akka/actor/ExtendedActorSystem.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      28: invokeinterface #54,  3           // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      33: areturn

  public akka.remote.artery.ArteryTransport akka$remote$artery$ArteryTransport$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/remote/artery/ArteryTransport;
       4: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #63                 // class akka/Done
       5: invokevirtual #65                 // Method apply:(Lakka/Done;)Lscala/concurrent/Future;
       8: areturn

  public akka.remote.artery.ArteryTransport$$anonfun$akka$remote$artery$ArteryTransport$$internalShutdown$1(akka.remote.artery.ArteryTransport);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lakka/remote/artery/ArteryTransport;
      11: aload_0
      12: invokespecial #71                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
