Compiled from "FlightRecorderReader.scala"
public final class akka.remote.artery.FlightRecorderReader$Log$$anon$2 implements scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> {
  private long recordOffset;

  private long entryOffset;

  private long recordsLeft;

  private long entriesLeft;

  private boolean dirty;

  private java.time.Instant timeStamp;

  private final akka.remote.artery.FlightRecorderReader$Log $outer;

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> seq();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method scala/collection/Iterator$class.take:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #53                 // Method scala/collection/Iterator$class.drop:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #58                 // Method scala/collection/Iterator$class.slice:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> filter(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<akka.remote.artery.FlightRecorderReader$CompactEntry, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> withFilter(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> filterNot(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<akka.remote.artery.FlightRecorderReader$CompactEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #112                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> takeWhile(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>, scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>> partition(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>, scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>> span(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> dropWhile(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<akka.remote.artery.FlightRecorderReader$CompactEntry, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #130                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #136                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #141                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #146                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #153                // Method scala/collection/Iterator$class.foreach:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<akka.remote.artery.FlightRecorderReader$CompactEntry> find(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // Method scala/collection/Iterator$class.indexWhere:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<akka.remote.artery.FlightRecorderReader$CompactEntry> buffered();
    Code:
       0: aload_0
       1: invokestatic  #186                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #191                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #197                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #203                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>, scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #208                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #213                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #220                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<akka.remote.artery.FlightRecorderReader$CompactEntry> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #231                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$CompactEntry> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #234                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<akka.remote.artery.FlightRecorderReader$CompactEntry> toStream();
    Code:
       0: aload_0
       1: invokestatic  #239                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #244                // Method scala/collection/Iterator$class.toString:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #247                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<akka.remote.artery.FlightRecorderReader$CompactEntry> reversed();
    Code:
       0: aload_0
       1: invokestatic  #254                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #257                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #261                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<akka.remote.artery.FlightRecorderReader$CompactEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #270                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<akka.remote.artery.FlightRecorderReader$CompactEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #278                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<akka.remote.artery.FlightRecorderReader$CompactEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #284                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #289                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<akka.remote.artery.FlightRecorderReader$CompactEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, akka.remote.artery.FlightRecorderReader$CompactEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #297                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<akka.remote.artery.FlightRecorderReader$CompactEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #303                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #306                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #309                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, akka.remote.artery.FlightRecorderReader$CompactEntry, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #314                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #321                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #331                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #336                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #341                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #344                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #355                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #359                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<akka.remote.artery.FlightRecorderReader$CompactEntry> toList();
    Code:
       0: aload_0
       1: invokestatic  #369                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<akka.remote.artery.FlightRecorderReader$CompactEntry> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #374                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<akka.remote.artery.FlightRecorderReader$CompactEntry> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #379                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<akka.remote.artery.FlightRecorderReader$CompactEntry> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #384                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #389                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #394                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<akka.remote.artery.FlightRecorderReader$CompactEntry> toVector();
    Code:
       0: aload_0
       1: invokestatic  #399                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, akka.remote.artery.FlightRecorderReader$CompactEntry, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<akka.remote.artery.FlightRecorderReader$CompactEntry, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #411                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #418                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #425                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #428                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #433                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #439                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #443                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  private long recordOffset();
    Code:
       0: aload_0
       1: getfield      #446                // Field recordOffset:J
       4: lreturn

  private void recordOffset_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #446                // Field recordOffset:J
       5: return

  private long entryOffset();
    Code:
       0: aload_0
       1: getfield      #451                // Field entryOffset:J
       4: lreturn

  private void entryOffset_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #451                // Field entryOffset:J
       5: return

  private long recordsLeft();
    Code:
       0: aload_0
       1: getfield      #454                // Field recordsLeft:J
       4: lreturn

  private void recordsLeft_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #454                // Field recordsLeft:J
       5: return

  private long entriesLeft();
    Code:
       0: aload_0
       1: getfield      #457                // Field entriesLeft:J
       4: lreturn

  private void entriesLeft_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #457                // Field entriesLeft:J
       5: return

  private boolean dirty();
    Code:
       0: aload_0
       1: getfield      #460                // Field dirty:Z
       4: ireturn

  private void dirty_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #460                // Field dirty:Z
       5: return

  private java.time.Instant timeStamp();
    Code:
       0: aload_0
       1: getfield      #465                // Field timeStamp:Ljava/time/Instant;
       4: areturn

  private void timeStamp_$eq(java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #465                // Field timeStamp:Ljava/time/Instant;
       5: return

  private void readHeader();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
       5: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
       8: invokevirtual #481                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      11: aload_0
      12: invokespecial #483                // Method recordOffset:()J
      15: invokevirtual #489                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
      18: getstatic     #495                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      21: invokevirtual #498                // Method akka/remote/artery/RollingEventLogSection$.Dirty:()I
      24: i2l
      25: lcmp
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokespecial #500                // Method dirty_$eq:(Z)V
      37: aload_0
      38: invokespecial #483                // Method recordOffset:()J
      41: getstatic     #495                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      44: invokevirtual #503                // Method akka/remote/artery/RollingEventLogSection$.CommitEntrySize:()I
      47: i2l
      48: ladd
      49: lstore_1
      50: aload_0
      51: aload_0
      52: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      55: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      58: invokevirtual #481                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      61: lload_1
      62: getstatic     #508                // Field akka/remote/artery/FlightRecorder$.MODULE$:Lakka/remote/artery/FlightRecorder$;
      65: invokevirtual #511                // Method akka/remote/artery/FlightRecorder$.HiFreqEntryCountFieldOffset:()I
      68: i2l
      69: ladd
      70: invokevirtual #489                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
      73: invokespecial #513                // Method entriesLeft_$eq:(J)V
      76: aload_0
      77: aload_0
      78: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      81: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      84: invokevirtual #481                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      87: lload_1
      88: invokevirtual #489                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
      91: invokestatic  #519                // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
      94: aload_0
      95: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      98: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
     101: invokevirtual #481                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
     104: lload_1
     105: ldc2_w        #520                // long 8l
     108: ladd
     109: invokevirtual #489                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
     112: invokevirtual #524                // Method java/time/Instant.plusNanos:(J)Ljava/time/Instant;
     115: invokespecial #526                // Method timeStamp_$eq:(Ljava/time/Instant;)V
     118: aload_0
     119: lload_1
     120: ldc2_w        #527                // long 32l
     123: ladd
     124: invokespecial #530                // Method entryOffset_$eq:(J)V
     127: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #534                // Method recordsLeft:()J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public akka.remote.artery.FlightRecorderReader$CompactEntry next();
    Code:
       0: aload_0
       1: invokespecial #538                // Method entriesLeft:()J
       4: ldc2_w        #539                // long -1l
       7: lcmp
       8: ifne          15
      11: aload_0
      12: invokespecial #542                // Method readHeader:()V
      15: new           #544                // class akka/remote/artery/FlightRecorderReader$CompactEntry
      18: dup
      19: aload_0
      20: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      23: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      26: aload_0
      27: invokespecial #546                // Method timeStamp:()Ljava/time/Instant;
      30: aload_0
      31: invokespecial #548                // Method dirty:()Z
      34: aload_0
      35: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      38: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      41: invokevirtual #481                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      44: aload_0
      45: invokespecial #550                // Method entryOffset:()J
      48: invokevirtual #489                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
      51: aload_0
      52: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      55: invokevirtual #475                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      58: invokevirtual #481                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      61: aload_0
      62: invokespecial #550                // Method entryOffset:()J
      65: ldc2_w        #520                // long 8l
      68: ladd
      69: invokevirtual #489                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
      72: invokespecial #554                // Method akka/remote/artery/FlightRecorderReader$CompactEntry."<init>":(Lakka/remote/artery/FlightRecorderReader;Ljava/time/Instant;ZJJ)V
      75: astore_1
      76: aload_0
      77: aload_0
      78: invokespecial #538                // Method entriesLeft:()J
      81: lconst_1
      82: lsub
      83: invokespecial #513                // Method entriesLeft_$eq:(J)V
      86: aload_0
      87: invokespecial #538                // Method entriesLeft:()J
      90: lconst_0
      91: lcmp
      92: ifne          131
      95: aload_0
      96: aload_0
      97: invokespecial #483                // Method recordOffset:()J
     100: aload_0
     101: getfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
     104: invokevirtual #558                // Method akka/remote/artery/FlightRecorderReader$Log.sectionParameters:()Lakka/remote/artery/FlightRecorderReader$SectionParameters;
     107: invokevirtual #563                // Method akka/remote/artery/FlightRecorderReader$SectionParameters.recordSize:()J
     110: ladd
     111: invokespecial #565                // Method recordOffset_$eq:(J)V
     114: aload_0
     115: aload_0
     116: invokespecial #534                // Method recordsLeft:()J
     119: lconst_1
     120: lsub
     121: invokespecial #567                // Method recordsLeft_$eq:(J)V
     124: aload_0
     125: invokespecial #542                // Method readHeader:()V
     128: goto          143
     131: aload_0
     132: aload_0
     133: invokespecial #550                // Method entryOffset:()J
     136: ldc2_w        #568                // long 16l
     139: ladd
     140: invokespecial #530                // Method entryOffset_$eq:(J)V
     143: aload_1
     144: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #574                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #577                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #580                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #583                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #586                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #589                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #592                // Method next:()Lakka/remote/artery/FlightRecorderReader$CompactEntry;
       4: areturn

  public akka.remote.artery.FlightRecorderReader$Log$$anon$2(akka.remote.artery.FlightRecorderReader$Log);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #471                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      11: aload_0
      12: invokespecial #595                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #599                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      19: aload_0
      20: invokestatic  #602                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #605                // Method akka/remote/artery/FlightRecorderReader$Log.offset:()J
      28: getstatic     #495                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      31: invokevirtual #608                // Method akka/remote/artery/RollingEventLogSection$.RecordsOffset:()J
      34: ladd
      35: putfield      #446                // Field recordOffset:J
      38: aload_0
      39: aload_0
      40: invokespecial #483                // Method recordOffset:()J
      43: getstatic     #495                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      46: invokevirtual #503                // Method akka/remote/artery/RollingEventLogSection$.CommitEntrySize:()I
      49: i2l
      50: ladd
      51: putfield      #451                // Field entryOffset:J
      54: aload_0
      55: getstatic     #613                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      58: aload_1
      59: invokevirtual #616                // Method akka/remote/artery/FlightRecorderReader$Log.head:()J
      62: aload_1
      63: invokevirtual #558                // Method akka/remote/artery/FlightRecorderReader$Log.sectionParameters:()Lakka/remote/artery/FlightRecorderReader$SectionParameters;
      66: invokevirtual #619                // Method akka/remote/artery/FlightRecorderReader$SectionParameters.window:()J
      69: invokevirtual #622                // Method scala/math/package$.min:(JJ)J
      72: putfield      #454                // Field recordsLeft:J
      75: aload_0
      76: ldc2_w        #539                // long -1l
      79: putfield      #457                // Field entriesLeft:J
      82: aload_0
      83: iconst_0
      84: putfield      #460                // Field dirty:Z
      87: return
}
