Compiled from "RestartCounter.scala"
public class akka.remote.artery.RestartCounter {
  private final int maxRestarts;

  private final scala.concurrent.duration.FiniteDuration restartTimeout;

  private final java.util.concurrent.atomic.AtomicReference<akka.remote.artery.RestartCounter$State> state;

  private java.util.concurrent.atomic.AtomicReference<akka.remote.artery.RestartCounter$State> state();
    Code:
       0: aload_0
       1: getfield      #18                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public int count();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method state:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #32                 // class akka/remote/artery/RestartCounter$State
      10: invokevirtual #34                 // Method akka/remote/artery/RestartCounter$State.count:()I
      13: ireturn

  public final boolean restart();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method state:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #32                 // class akka/remote/artery/RestartCounter$State
      10: astore_2
      11: aload_2
      12: invokevirtual #40                 // Method akka/remote/artery/RestartCounter$State.deadline:()Lscala/concurrent/duration/Deadline;
      15: invokevirtual #45                 // Method scala/concurrent/duration/Deadline.hasTimeLeft:()Z
      18: ifeq          38
      21: aload_2
      22: aload_2
      23: invokevirtual #34                 // Method akka/remote/artery/RestartCounter$State.count:()I
      26: iconst_1
      27: iadd
      28: aload_2
      29: invokevirtual #48                 // Method akka/remote/artery/RestartCounter$State.copy$default$2:()Lscala/concurrent/duration/Deadline;
      32: invokevirtual #52                 // Method akka/remote/artery/RestartCounter$State.copy:(ILscala/concurrent/duration/Deadline;)Lakka/remote/artery/RestartCounter$State;
      35: goto          59
      38: new           #32                 // class akka/remote/artery/RestartCounter$State
      41: dup
      42: iconst_1
      43: getstatic     #58                 // Field scala/concurrent/duration/Deadline$.MODULE$:Lscala/concurrent/duration/Deadline$;
      46: invokevirtual #61                 // Method scala/concurrent/duration/Deadline$.now:()Lscala/concurrent/duration/Deadline;
      49: aload_0
      50: getfield      #63                 // Field restartTimeout:Lscala/concurrent/duration/FiniteDuration;
      53: invokevirtual #67                 // Method scala/concurrent/duration/Deadline.$plus:(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
      56: invokespecial #71                 // Method akka/remote/artery/RestartCounter$State."<init>":(ILscala/concurrent/duration/Deadline;)V
      59: astore_3
      60: aload_0
      61: invokespecial #24                 // Method state:()Ljava/util/concurrent/atomic/AtomicReference;
      64: aload_2
      65: aload_3
      66: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          0
      72: aload_3
      73: invokevirtual #34                 // Method akka/remote/artery/RestartCounter$State.count:()I
      76: aload_0
      77: getfield      #77                 // Field maxRestarts:I
      80: if_icmpgt     87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn

  public akka.remote.artery.RestartCounter(int, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field maxRestarts:I
       5: aload_0
       6: aload_2
       7: putfield      #63                 // Field restartTimeout:Lscala/concurrent/duration/FiniteDuration;
      10: aload_0
      11: invokespecial #84                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: new           #26                 // class java/util/concurrent/atomic/AtomicReference
      18: dup
      19: new           #32                 // class akka/remote/artery/RestartCounter$State
      22: dup
      23: iconst_0
      24: getstatic     #58                 // Field scala/concurrent/duration/Deadline$.MODULE$:Lscala/concurrent/duration/Deadline$;
      27: invokevirtual #61                 // Method scala/concurrent/duration/Deadline$.now:()Lscala/concurrent/duration/Deadline;
      30: aload_2
      31: invokevirtual #67                 // Method scala/concurrent/duration/Deadline.$plus:(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
      34: invokespecial #71                 // Method akka/remote/artery/RestartCounter$State."<init>":(ILscala/concurrent/duration/Deadline;)V
      37: invokespecial #87                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      40: putfield      #18                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      43: return
}
