Compiled from "Handshake.scala"
public final class akka.remote.artery.InboundHandshake$$anon$2$$anonfun$akka$remote$artery$InboundHandshake$$anon$$onHandshakeReq$1 extends scala.runtime.AbstractFunction0$mcV$sp implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.artery.InboundHandshake$$anon$2 $outer;

  private final akka.remote.UniqueAddress from$1;

  public final void apply();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method apply$mcV$sp:()V
       4: return

  public void apply$mcV$sp();
    Code:
       0: aload_0
       1: getfield      #29                 // Field $outer:Lakka/remote/artery/InboundHandshake$$anon$2;
       4: invokevirtual #33                 // Method akka/remote/artery/InboundHandshake$$anon$2.akka$remote$artery$InboundHandshake$$anon$$$outer:()Lakka/remote/artery/InboundHandshake;
       7: getfield      #39                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
      10: aload_0
      11: getfield      #41                 // Field from$1:Lakka/remote/UniqueAddress;
      14: invokevirtual #47                 // Method akka/remote/UniqueAddress.address:()Lakka/actor/Address;
      17: new           #49                 // class akka/remote/artery/OutboundHandshake$HandshakeRsp
      20: dup
      21: aload_0
      22: getfield      #29                 // Field $outer:Lakka/remote/artery/InboundHandshake$$anon$2;
      25: invokevirtual #33                 // Method akka/remote/artery/InboundHandshake$$anon$2.akka$remote$artery$InboundHandshake$$anon$$$outer:()Lakka/remote/artery/InboundHandshake;
      28: getfield      #39                 // Field akka/remote/artery/InboundHandshake.akka$remote$artery$InboundHandshake$$inboundContext:Lakka/remote/artery/InboundContext;
      31: invokeinterface #55,  1           // InterfaceMethod akka/remote/artery/InboundContext.localAddress:()Lakka/remote/UniqueAddress;
      36: invokespecial #59                 // Method akka/remote/artery/OutboundHandshake$HandshakeRsp."<init>":(Lakka/remote/UniqueAddress;)V
      39: invokeinterface #63,  3           // InterfaceMethod akka/remote/artery/InboundContext.sendControl:(Lakka/actor/Address;Lakka/remote/artery/ControlMessage;)V
      44: aload_0
      45: getfield      #29                 // Field $outer:Lakka/remote/artery/InboundHandshake$$anon$2;
      48: aload_0
      49: getfield      #29                 // Field $outer:Lakka/remote/artery/InboundHandshake$$anon$2;
      52: invokevirtual #33                 // Method akka/remote/artery/InboundHandshake$$anon$2.akka$remote$artery$InboundHandshake$$anon$$$outer:()Lakka/remote/artery/InboundHandshake;
      55: invokevirtual #67                 // Method akka/remote/artery/InboundHandshake.in:()Lakka/stream/Inlet;
      58: invokevirtual #71                 // Method akka/remote/artery/InboundHandshake$$anon$2.pull:(Lakka/stream/Inlet;)V
      61: return

  public final java.lang.Object apply();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method apply:()V
       4: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  public akka.remote.artery.InboundHandshake$$anon$2$$anonfun$akka$remote$artery$InboundHandshake$$anon$$onHandshakeReq$1(akka.remote.artery.InboundHandshake$$anon$2, akka.remote.UniqueAddress);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #29                 // Field $outer:Lakka/remote/artery/InboundHandshake$$anon$2;
      11: aload_0
      12: aload_2
      13: putfield      #41                 // Field from$1:Lakka/remote/UniqueAddress;
      16: aload_0
      17: invokespecial #83                 // Method scala/runtime/AbstractFunction0$mcV$sp."<init>":()V
      20: return
}
