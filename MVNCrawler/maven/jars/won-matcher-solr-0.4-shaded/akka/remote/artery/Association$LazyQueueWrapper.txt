Compiled from "Association.scala"
public final class akka.remote.artery.Association$LazyQueueWrapper implements akka.remote.artery.Association$QueueWrapper,scala.Product,scala.Serializable {
  private final java.util.Queue<akka.remote.artery.OutboundEnvelope> queue;

  private final scala.Function0<scala.runtime.BoxedUnit> materialize;

  private final java.util.concurrent.atomic.AtomicBoolean onlyOnce;

  public java.util.Queue<akka.remote.artery.OutboundEnvelope> queue();
    Code:
       0: aload_0
       1: getfield      #22                 // Field queue:Ljava/util/Queue;
       4: areturn

  public scala.Function0<scala.runtime.BoxedUnit> materialize();
    Code:
       0: aload_0
       1: getfield      #27                 // Field materialize:Lscala/Function0;
       4: areturn

  private java.util.concurrent.atomic.AtomicBoolean onlyOnce();
    Code:
       0: aload_0
       1: getfield      #30                 // Field onlyOnce:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  public void runMaterialize();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method onlyOnce:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          21
      12: aload_0
      13: invokevirtual #42                 // Method materialize:()Lscala/Function0;
      16: invokeinterface #47,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      21: return

  public boolean offer(akka.remote.artery.OutboundEnvelope);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method runMaterialize:()V
       4: aload_0
       5: invokevirtual #53                 // Method queue:()Ljava/util/Queue;
       8: aload_1
       9: invokeinterface #58,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean isEnabled();
    Code:
       0: iconst_1
       1: ireturn

  public akka.remote.artery.Association$LazyQueueWrapper copy(java.util.Queue<akka.remote.artery.OutboundEnvelope>, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: new           #2                  // class akka/remote/artery/Association$LazyQueueWrapper
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #68                 // Method "<init>":(Ljava/util/Queue;Lscala/Function0;)V
       9: areturn

  public java.util.Queue<akka.remote.artery.OutboundEnvelope> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method queue:()Ljava/util/Queue;
       4: areturn

  public scala.Function0<scala.runtime.BoxedUnit> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method materialize:()Lscala/Function0;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #74                 // String LazyQueueWrapper
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #80                 // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #86                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #89                 // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #92                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #42                 // Method materialize:()Lscala/Function0;
      43: goto          50
      46: aload_0
      47: invokevirtual #53                 // Method queue:()Ljava/util/Queue;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #102                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #106                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/artery/Association$LazyQueueWrapper
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #102                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #113                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #102                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #117                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/artery/Association$LazyQueueWrapper
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/remote/artery/Association$LazyQueueWrapper
      29: astore        4
      31: aload_0
      32: invokevirtual #53                 // Method queue:()Ljava/util/Queue;
      35: aload         4
      37: invokevirtual #53                 // Method queue:()Ljava/util/Queue;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #42                 // Method materialize:()Lscala/Function0;
      67: aload         4
      69: invokevirtual #42                 // Method materialize:()Lscala/Function0;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  public boolean offer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #122                // class akka/remote/artery/OutboundEnvelope
       5: invokevirtual #124                // Method offer:(Lakka/remote/artery/OutboundEnvelope;)Z
       8: ireturn

  public akka.remote.artery.Association$LazyQueueWrapper(java.util.Queue<akka.remote.artery.OutboundEnvelope>, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field queue:Ljava/util/Queue;
       5: aload_0
       6: aload_2
       7: putfield      #27                 // Field materialize:Lscala/Function0;
      10: aload_0
      11: invokespecial #126                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #132                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: aload_0
      19: new           #36                 // class java/util/concurrent/atomic/AtomicBoolean
      22: dup
      23: invokespecial #133                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      26: putfield      #30                 // Field onlyOnce:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: return
}
