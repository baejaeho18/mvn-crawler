Compiled from "SendQueue.scala"
public final class akka.remote.artery.SendQueue$$anon$2 implements akka.remote.artery.SendQueue$QueueValue<T> {
  private volatile java.util.Queue<T> producerQueue;

  private final scala.runtime.VolatileBooleanRef needWakeup$1;

  private final scala.concurrent.Promise queuePromise$1;

  private final akka.stream.stage.GraphStageLogic logic$1;

  private java.util.Queue<T> producerQueue();
    Code:
       0: aload_0
       1: getfield      #25                 // Field producerQueue:Ljava/util/Queue;
       4: areturn

  private void producerQueue_$eq(java.util.Queue<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field producerQueue:Ljava/util/Queue;
       5: return

  public void inject(java.util.Queue<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method producerQueue_$eq:(Ljava/util/Queue;)V
       5: aload_0
       6: getfield      #35                 // Field queuePromise$1:Lscala/concurrent/Promise;
       9: aload_1
      10: invokeinterface #41,  2           // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
      15: pop
      16: return

  public boolean offer(T);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method producerQueue:()Ljava/util/Queue;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #48                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #50                 // String offer not allowed before injecting the queue
      15: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: aload_1
      21: invokeinterface #58,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      26: istore_3
      27: iload_3
      28: ifeq          61
      31: aload_0
      32: getfield      #60                 // Field needWakeup$1:Lscala/runtime/VolatileBooleanRef;
      35: getfield      #66                 // Field scala/runtime/VolatileBooleanRef.elem:Z
      38: ifeq          61
      41: aload_0
      42: getfield      #60                 // Field needWakeup$1:Lscala/runtime/VolatileBooleanRef;
      45: iconst_0
      46: putfield      #66                 // Field scala/runtime/VolatileBooleanRef.elem:Z
      49: aload_0
      50: getfield      #68                 // Field logic$1:Lakka/stream/stage/GraphStageLogic;
      53: checkcast     #70                 // class akka/remote/artery/SendQueue$WakeupSignal
      56: invokeinterface #74,  1           // InterfaceMethod akka/remote/artery/SendQueue$WakeupSignal.wakeup:()V
      61: iload_3
      62: ireturn

  public boolean isEnabled();
    Code:
       0: iconst_1
       1: ireturn

  public akka.remote.artery.SendQueue$$anon$2(akka.remote.artery.SendQueue<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #60                 // Field needWakeup$1:Lscala/runtime/VolatileBooleanRef;
       5: aload_0
       6: aload_3
       7: putfield      #35                 // Field queuePromise$1:Lscala/concurrent/Promise;
      10: aload_0
      11: aload         4
      13: putfield      #68                 // Field logic$1:Lakka/stream/stage/GraphStageLogic;
      16: aload_0
      17: invokespecial #82                 // Method java/lang/Object."<init>":()V
      20: aload_0
      21: aconst_null
      22: putfield      #25                 // Field producerQueue:Ljava/util/Queue;
      25: return
}
