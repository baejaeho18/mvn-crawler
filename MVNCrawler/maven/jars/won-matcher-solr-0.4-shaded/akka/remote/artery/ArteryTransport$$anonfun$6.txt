Compiled from "ArteryTransport.scala"
public final class akka.remote.artery.ArteryTransport$$anonfun$6 extends scala.runtime.AbstractFunction1<java.lang.Object, scala.concurrent.Future<akka.Done>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.remote.artery.ArteryTransport $outer;

  private final akka.stream.scaladsl.Source broadcastHub$1;

  private final akka.stream.scaladsl.Sink lane$1;

  public final scala.Function1 partitionFun$1;

  public final scala.concurrent.Future<akka.Done> apply(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field broadcastHub$1:Lakka/stream/scaladsl/Source;
       4: getstatic     #35                 // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       7: invokevirtual #38                 // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
      10: new           #40                 // class akka/remote/artery/ArteryTransport$$anonfun$6$$anonfun$apply$1
      13: dup
      14: aload_0
      15: iload_1
      16: invokespecial #44                 // Method akka/remote/artery/ArteryTransport$$anonfun$6$$anonfun$apply$1."<init>":(Lakka/remote/artery/ArteryTransport$$anonfun$6;I)V
      19: invokevirtual #50                 // Method akka/stream/scaladsl/Flow.collect:(Lscala/PartialFunction;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #46                 // class akka/stream/scaladsl/Flow
      25: aload_0
      26: getfield      #52                 // Field lane$1:Lakka/stream/scaladsl/Sink;
      29: getstatic     #57                 // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      32: invokevirtual #61                 // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      35: invokevirtual #65                 // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      38: aload_0
      39: getfield      #67                 // Field $outer:Lakka/remote/artery/ArteryTransport;
      42: getfield      #71                 // Field akka/remote/artery/ArteryTransport.akka$remote$artery$ArteryTransport$$materializer:Lakka/stream/Materializer;
      45: invokevirtual #77                 // Method akka/stream/scaladsl/Source.runWith:(Lakka/stream/Graph;Lakka/stream/Materializer;)Ljava/lang/Object;
      48: checkcast     #79                 // class scala/concurrent/Future
      51: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #92                 // Method apply:(I)Lscala/concurrent/Future;
       8: areturn

  public akka.remote.artery.ArteryTransport$$anonfun$6(akka.remote.artery.ArteryTransport, akka.stream.scaladsl.Source, akka.stream.scaladsl.Sink, scala.Function1);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #67                 // Field $outer:Lakka/remote/artery/ArteryTransport;
      11: aload_0
      12: aload_2
      13: putfield      #29                 // Field broadcastHub$1:Lakka/stream/scaladsl/Source;
      16: aload_0
      17: aload_3
      18: putfield      #52                 // Field lane$1:Lakka/stream/scaladsl/Sink;
      21: aload_0
      22: aload         4
      24: putfield      #97                 // Field partitionFun$1:Lscala/Function1;
      27: aload_0
      28: invokespecial #100                // Method scala/runtime/AbstractFunction1."<init>":()V
      31: return
}
