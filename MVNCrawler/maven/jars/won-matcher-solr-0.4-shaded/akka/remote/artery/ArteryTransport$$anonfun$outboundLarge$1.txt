Compiled from "ArteryTransport.scala"
public final class akka.remote.artery.ArteryTransport$$anonfun$outboundLarge$1 extends scala.runtime.AbstractFunction1<scala.Tuple2<akka.remote.artery.Encoder$ChangeOutboundCompression, scala.concurrent.Future<akka.Done>>, scala.concurrent.Future<akka.Done>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.concurrent.Future<akka.Done> apply(scala.Tuple2<akka.remote.artery.Encoder$ChangeOutboundCompression, scala.concurrent.Future<akka.Done>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        20
       6: aload_2
       7: invokevirtual #25                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #27                 // class scala/concurrent/Future
      13: astore_3
      14: aload_3
      15: astore        4
      17: aload         4
      19: areturn
      20: new           #29                 // class scala/MatchError
      23: dup
      24: aload_2
      25: invokespecial #33                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      28: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class scala/Tuple2
       5: invokevirtual #42                 // Method apply:(Lscala/Tuple2;)Lscala/concurrent/Future;
       8: areturn

  public akka.remote.artery.ArteryTransport$$anonfun$outboundLarge$1(akka.remote.artery.ArteryTransport);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
