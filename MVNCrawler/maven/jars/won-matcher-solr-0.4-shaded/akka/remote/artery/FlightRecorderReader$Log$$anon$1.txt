Compiled from "FlightRecorderReader.scala"
public final class akka.remote.artery.FlightRecorderReader$Log$$anon$1 implements scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> {
  private long recordOffset;

  private long recordsLeft;

  private final akka.remote.artery.FlightRecorderReader$Log $outer;

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> seq();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #31                 // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #42                 // Method scala/collection/Iterator$class.take:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #47                 // Method scala/collection/Iterator$class.drop:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #52                 // Method scala/collection/Iterator$class.slice:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> filter(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<akka.remote.artery.FlightRecorderReader$RichEntry, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> withFilter(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> filterNot(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<akka.remote.artery.FlightRecorderReader$RichEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> takeWhile(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>, scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>> partition(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>, scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>> span(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> dropWhile(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<akka.remote.artery.FlightRecorderReader$RichEntry, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #130                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #135                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #140                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // Method scala/collection/Iterator$class.foreach:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<akka.remote.artery.FlightRecorderReader$RichEntry> find(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // Method scala/collection/Iterator$class.indexWhere:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<akka.remote.artery.FlightRecorderReader$RichEntry> buffered();
    Code:
       0: aload_0
       1: invokestatic  #180                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #185                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #191                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #197                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>, scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #202                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #207                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #214                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<akka.remote.artery.FlightRecorderReader$RichEntry> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #225                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<akka.remote.artery.FlightRecorderReader$RichEntry> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #228                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<akka.remote.artery.FlightRecorderReader$RichEntry> toStream();
    Code:
       0: aload_0
       1: invokestatic  #233                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #238                // Method scala/collection/Iterator$class.toString:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #241                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<akka.remote.artery.FlightRecorderReader$RichEntry> reversed();
    Code:
       0: aload_0
       1: invokestatic  #248                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #251                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #255                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<akka.remote.artery.FlightRecorderReader$RichEntry, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #264                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #269                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<akka.remote.artery.FlightRecorderReader$RichEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #272                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<akka.remote.artery.FlightRecorderReader$RichEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #278                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #283                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<akka.remote.artery.FlightRecorderReader$RichEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #286                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, akka.remote.artery.FlightRecorderReader$RichEntry, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #291                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<akka.remote.artery.FlightRecorderReader$RichEntry, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #297                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #303                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, akka.remote.artery.FlightRecorderReader$RichEntry, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #308                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #315                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #320                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #325                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #335                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #338                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #349                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #353                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #358                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<akka.remote.artery.FlightRecorderReader$RichEntry> toList();
    Code:
       0: aload_0
       1: invokestatic  #363                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<akka.remote.artery.FlightRecorderReader$RichEntry> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #368                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<akka.remote.artery.FlightRecorderReader$RichEntry> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #373                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<akka.remote.artery.FlightRecorderReader$RichEntry> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #378                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #383                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #388                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<akka.remote.artery.FlightRecorderReader$RichEntry> toVector();
    Code:
       0: aload_0
       1: invokestatic  #393                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, akka.remote.artery.FlightRecorderReader$RichEntry, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #398                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<akka.remote.artery.FlightRecorderReader$RichEntry, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #405                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #412                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #419                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #422                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #427                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #433                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  private long recordOffset();
    Code:
       0: aload_0
       1: getfield      #440                // Field recordOffset:J
       4: lreturn

  private void recordOffset_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #440                // Field recordOffset:J
       5: return

  private long recordsLeft();
    Code:
       0: aload_0
       1: getfield      #445                // Field recordsLeft:J
       4: lreturn

  private void recordsLeft_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #445                // Field recordsLeft:J
       5: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #449                // Method recordsLeft:()J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public akka.remote.artery.FlightRecorderReader$RichEntry next();
    Code:
       0: aload_0
       1: invokespecial #453                // Method recordOffset:()J
       4: getstatic     #459                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
       7: invokevirtual #462                // Method akka/remote/artery/RollingEventLogSection$.CommitEntrySize:()I
      10: i2l
      11: ladd
      12: lstore_1
      13: getstatic     #467                // Field scala/Array$.MODULE$:Lscala/Array$;
      16: aload_0
      17: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      20: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      23: invokevirtual #479                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      26: lload_1
      27: ldc2_w        #480                // long 20l
      30: ladd
      31: invokevirtual #487                // Method org/agrona/concurrent/MappedResizeableBuffer.getByte:(J)B
      34: getstatic     #492                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      37: invokevirtual #496                // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ClassTag;
      40: invokevirtual #500                // Method scala/Array$.ofDim:(ILscala/reflect/ClassTag;)Ljava/lang/Object;
      43: checkcast     #502                // class "[B"
      46: astore_3
      47: aload_0
      48: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      51: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      54: invokevirtual #479                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      57: lload_1
      58: ldc2_w        #503                // long 21l
      61: ladd
      62: aload_3
      63: invokevirtual #508                // Method org/agrona/concurrent/MappedResizeableBuffer.getBytes:(J[B)V
      66: new           #510                // class akka/remote/artery/FlightRecorderReader$RichEntry
      69: dup
      70: aload_0
      71: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      74: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      77: aload_0
      78: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      81: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
      84: invokevirtual #479                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
      87: lload_1
      88: invokevirtual #514                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
      91: invokestatic  #520                // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
      94: aload_0
      95: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      98: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
     101: invokevirtual #479                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
     104: lload_1
     105: ldc2_w        #521                // long 8l
     108: ladd
     109: invokevirtual #514                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
     112: invokevirtual #525                // Method java/time/Instant.plusNanos:(J)Ljava/time/Instant;
     115: aload_0
     116: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
     119: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
     122: invokevirtual #479                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
     125: aload_0
     126: invokespecial #453                // Method recordOffset:()J
     129: invokevirtual #514                // Method org/agrona/concurrent/MappedResizeableBuffer.getLong:(J)J
     132: getstatic     #459                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
     135: invokevirtual #528                // Method akka/remote/artery/RollingEventLogSection$.Dirty:()I
     138: i2l
     139: lcmp
     140: ifne          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: aload_0
     149: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
     152: invokevirtual #473                // Method akka/remote/artery/FlightRecorderReader$Log.akka$remote$artery$FlightRecorderReader$Log$$$outer:()Lakka/remote/artery/FlightRecorderReader;
     155: invokevirtual #479                // Method akka/remote/artery/FlightRecorderReader.akka$remote$artery$FlightRecorderReader$$fileBuffer:()Lorg/agrona/concurrent/MappedResizeableBuffer;
     158: lload_1
     159: ldc2_w        #529                // long 16l
     162: ladd
     163: invokevirtual #534                // Method org/agrona/concurrent/MappedResizeableBuffer.getInt:(J)I
     166: i2l
     167: aload_3
     168: invokespecial #538                // Method akka/remote/artery/FlightRecorderReader$RichEntry."<init>":(Lakka/remote/artery/FlightRecorderReader;Ljava/time/Instant;ZJ[B)V
     171: astore        4
     173: aload_0
     174: aload_0
     175: invokespecial #453                // Method recordOffset:()J
     178: aload_0
     179: getfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
     182: invokevirtual #542                // Method akka/remote/artery/FlightRecorderReader$Log.sectionParameters:()Lakka/remote/artery/FlightRecorderReader$SectionParameters;
     185: invokevirtual #547                // Method akka/remote/artery/FlightRecorderReader$SectionParameters.recordSize:()J
     188: ladd
     189: invokespecial #549                // Method recordOffset_$eq:(J)V
     192: aload_0
     193: aload_0
     194: invokespecial #449                // Method recordsLeft:()J
     197: lconst_1
     198: lsub
     199: invokespecial #551                // Method recordsLeft_$eq:(J)V
     202: aload         4
     204: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #558                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #561                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #564                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #567                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #570                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #573                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #576                // Method next:()Lakka/remote/artery/FlightRecorderReader$RichEntry;
       4: areturn

  public akka.remote.artery.FlightRecorderReader$Log$$anon$1(akka.remote.artery.FlightRecorderReader$Log);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #469                // Field $outer:Lakka/remote/artery/FlightRecorderReader$Log;
      11: aload_0
      12: invokespecial #580                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #584                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      19: aload_0
      20: invokestatic  #587                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #590                // Method akka/remote/artery/FlightRecorderReader$Log.offset:()J
      28: getstatic     #459                // Field akka/remote/artery/RollingEventLogSection$.MODULE$:Lakka/remote/artery/RollingEventLogSection$;
      31: invokevirtual #593                // Method akka/remote/artery/RollingEventLogSection$.RecordsOffset:()J
      34: ladd
      35: putfield      #440                // Field recordOffset:J
      38: aload_0
      39: getstatic     #598                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      42: aload_1
      43: invokevirtual #601                // Method akka/remote/artery/FlightRecorderReader$Log.head:()J
      46: aload_1
      47: invokevirtual #542                // Method akka/remote/artery/FlightRecorderReader$Log.sectionParameters:()Lakka/remote/artery/FlightRecorderReader$SectionParameters;
      50: invokevirtual #604                // Method akka/remote/artery/FlightRecorderReader$SectionParameters.window:()J
      53: invokevirtual #607                // Method scala/math/package$.min:(JJ)J
      56: putfield      #445                // Field recordsLeft:J
      59: return
}
