Compiled from "BufferPool.scala"
public class akka.remote.artery.EnvelopeBufferPool {
  private final int maximumPayload;

  private final org.agrona.concurrent.ManyToManyConcurrentArrayQueue<akka.remote.artery.EnvelopeBuffer> availableBuffers;

  private org.agrona.concurrent.ManyToManyConcurrentArrayQueue<akka.remote.artery.EnvelopeBuffer> availableBuffers();
    Code:
       0: aload_0
       1: getfield      #16                 // Field availableBuffers:Lorg/agrona/concurrent/ManyToManyConcurrentArrayQueue;
       4: areturn

  public akka.remote.artery.EnvelopeBuffer acquire();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method availableBuffers:()Lorg/agrona/concurrent/ManyToManyConcurrentArrayQueue;
       4: invokevirtual #28                 // Method org/agrona/concurrent/ManyToManyConcurrentArrayQueue.poll:()Ljava/lang/Object;
       7: checkcast     #30                 // class akka/remote/artery/EnvelopeBuffer
      10: astore_1
      11: aload_1
      12: ifnull        27
      15: aload_1
      16: invokevirtual #34                 // Method akka/remote/artery/EnvelopeBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
      19: invokevirtual #40                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      22: pop
      23: aload_1
      24: goto          54
      27: new           #30                 // class akka/remote/artery/EnvelopeBuffer
      30: dup
      31: aload_0
      32: getfield      #42                 // Field maximumPayload:I
      35: invokestatic  #46                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      38: invokespecial #50                 // Method akka/remote/artery/EnvelopeBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      41: astore_2
      42: aload_2
      43: invokevirtual #34                 // Method akka/remote/artery/EnvelopeBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
      46: getstatic     #56                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      49: invokevirtual #60                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      52: pop
      53: aload_2
      54: areturn

  public void release(akka.remote.artery.EnvelopeBuffer);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method availableBuffers:()Lorg/agrona/concurrent/ManyToManyConcurrentArrayQueue;
       4: aload_1
       5: invokevirtual #69                 // Method org/agrona/concurrent/ManyToManyConcurrentArrayQueue.offer:(Ljava/lang/Object;)Z
       8: ifne          15
      11: aload_1
      12: invokevirtual #73                 // Method akka/remote/artery/EnvelopeBuffer.tryCleanDirectByteBuffer:()V
      15: return

  public akka.remote.artery.EnvelopeBufferPool(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field maximumPayload:I
       5: aload_0
       6: invokespecial #77                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #24                 // class org/agrona/concurrent/ManyToManyConcurrentArrayQueue
      13: dup
      14: iload_2
      15: invokespecial #80                 // Method org/agrona/concurrent/ManyToManyConcurrentArrayQueue."<init>":(I)V
      18: putfield      #16                 // Field availableBuffers:Lorg/agrona/concurrent/ManyToManyConcurrentArrayQueue;
      21: return
}
