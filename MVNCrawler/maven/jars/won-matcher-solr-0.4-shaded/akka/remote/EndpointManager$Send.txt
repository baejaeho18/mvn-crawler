Compiled from "Remoting.scala"
public final class akka.remote.EndpointManager$Send implements akka.remote.EndpointManager$RemotingCommand,akka.remote.HasSequenceNumber,scala.Product,scala.Serializable {
  private final java.lang.Object message;

  private final akka.actor.ActorRef senderOption;

  private final akka.remote.RemoteActorRef recipient;

  private final scala.Option<akka.remote.SeqNo> seqOpt;

  public java.lang.Object message();
    Code:
       0: aload_0
       1: getfield      #25                 // Field message:Ljava/lang/Object;
       4: areturn

  public akka.actor.ActorRef senderOption();
    Code:
       0: aload_0
       1: getfield      #30                 // Field senderOption:Lakka/actor/ActorRef;
       4: areturn

  public akka.remote.RemoteActorRef recipient();
    Code:
       0: aload_0
       1: getfield      #33                 // Field recipient:Lakka/remote/RemoteActorRef;
       4: areturn

  public scala.Option<akka.remote.SeqNo> seqOpt();
    Code:
       0: aload_0
       1: getfield      #36                 // Field seqOpt:Lscala/Option;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #40                 // class scala/StringContext
       3: dup
       4: getstatic     #46                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_3
       8: anewarray     #48                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #50                 // String Remote message
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #52                 // String  ->
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #54                 // String
      25: aastore
      26: checkcast     #56                 // class "[Ljava/lang/Object;"
      29: invokevirtual #60                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokespecial #64                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      35: getstatic     #46                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      38: iconst_2
      39: anewarray     #4                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: new           #66                 // class akka/util/OptionVal
      47: dup
      48: aload_0
      49: invokevirtual #68                 // Method senderOption:()Lakka/actor/ActorRef;
      52: invokespecial #71                 // Method akka/util/OptionVal."<init>":(Ljava/lang/Object;)V
      55: aastore
      56: dup
      57: iconst_1
      58: aload_0
      59: invokevirtual #73                 // Method recipient:()Lakka/remote/RemoteActorRef;
      62: aastore
      63: invokevirtual #77                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      66: invokevirtual #81                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      69: areturn

  public akka.remote.SeqNo seq();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method seqOpt:()Lscala/Option;
       4: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
       7: checkcast     #92                 // class akka/remote/SeqNo
      10: areturn

  public akka.remote.EndpointManager$Send copy(java.lang.Object, akka.actor.ActorRef, akka.remote.RemoteActorRef, scala.Option<akka.remote.SeqNo>);
    Code:
       0: new           #2                  // class akka/remote/EndpointManager$Send
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #97                 // Method "<init>":(Ljava/lang/Object;Lakka/actor/ActorRef;Lakka/remote/RemoteActorRef;Lscala/Option;)V
      12: areturn

  public java.lang.Object copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method message:()Ljava/lang/Object;
       4: areturn

  public akka.actor.ActorRef copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method senderOption:()Lakka/actor/ActorRef;
       4: areturn

  public akka.remote.RemoteActorRef copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method recipient:()Lakka/remote/RemoteActorRef;
       4: areturn

  public scala.Option<akka.remote.SeqNo> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method seqOpt:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #106                // String Send
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 75
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #112                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #118                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #120                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #123                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #85                 // Method seqOpt:()Lscala/Option;
      51: goto          79
      54: aload_0
      55: invokevirtual #73                 // Method recipient:()Lakka/remote/RemoteActorRef;
      58: goto          79
      61: new           #66                 // class akka/util/OptionVal
      64: dup
      65: aload_0
      66: invokevirtual #68                 // Method senderOption:()Lakka/actor/ActorRef;
      69: invokespecial #71                 // Method akka/util/OptionVal."<init>":(Ljava/lang/Object;)V
      72: goto          79
      75: aload_0
      76: invokevirtual #100                // Method message:()Ljava/lang/Object;
      79: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #132                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/EndpointManager$Send
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #132                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #143                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     150
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/EndpointManager$Send
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          154
      25: aload_1
      26: checkcast     #2                  // class akka/remote/EndpointManager$Send
      29: astore        4
      31: aload_0
      32: invokevirtual #100                // Method message:()Ljava/lang/Object;
      35: aload         4
      37: invokevirtual #100                // Method message:()Ljava/lang/Object;
      40: invokestatic  #147                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          146
      46: aload_0
      47: invokevirtual #68                 // Method senderOption:()Lakka/actor/ActorRef;
      50: aload         4
      52: invokevirtual #68                 // Method senderOption:()Lakka/actor/ActorRef;
      55: astore        5
      57: dup
      58: ifnonnull     70
      61: pop
      62: aload         5
      64: ifnull        78
      67: goto          146
      70: aload         5
      72: invokevirtual #149                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      75: ifeq          146
      78: aload_0
      79: invokevirtual #73                 // Method recipient:()Lakka/remote/RemoteActorRef;
      82: aload         4
      84: invokevirtual #73                 // Method recipient:()Lakka/remote/RemoteActorRef;
      87: astore        6
      89: dup
      90: ifnonnull     102
      93: pop
      94: aload         6
      96: ifnull        110
      99: goto          146
     102: aload         6
     104: invokevirtual #149                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     107: ifeq          146
     110: aload_0
     111: invokevirtual #85                 // Method seqOpt:()Lscala/Option;
     114: aload         4
     116: invokevirtual #85                 // Method seqOpt:()Lscala/Option;
     119: astore        7
     121: dup
     122: ifnonnull     134
     125: pop
     126: aload         7
     128: ifnull        142
     131: goto          146
     134: aload         7
     136: invokevirtual #149                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     139: ifeq          146
     142: iconst_1
     143: goto          147
     146: iconst_0
     147: ifeq          154
     150: iconst_1
     151: goto          155
     154: iconst_0
     155: ireturn

  public akka.remote.EndpointManager$Send(java.lang.Object, akka.actor.ActorRef, akka.remote.RemoteActorRef, scala.Option<akka.remote.SeqNo>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field message:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #30                 // Field senderOption:Lakka/actor/ActorRef;
      10: aload_0
      11: aload_3
      12: putfield      #33                 // Field recipient:Lakka/remote/RemoteActorRef;
      15: aload_0
      16: aload         4
      18: putfield      #36                 // Field seqOpt:Lscala/Option;
      21: aload_0
      22: invokespecial #156                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #162                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: return
}
