Compiled from "AckedDelivery.scala"
public final class akka.remote.Ack implements scala.Product,scala.Serializable {
  private final akka.remote.SeqNo cumulativeAck;

  private final scala.collection.immutable.Set<akka.remote.SeqNo> nacks;

  public static scala.collection.immutable.Set<akka.remote.SeqNo> apply$default$2();
    Code:
       0: getstatic     #20                 // Field akka/remote/Ack$.MODULE$:Lakka/remote/Ack$;
       3: invokevirtual #22                 // Method akka/remote/Ack$.apply$default$2:()Lscala/collection/immutable/Set;
       6: areturn

  public static scala.collection.immutable.Set<akka.remote.SeqNo> $lessinit$greater$default$2();
    Code:
       0: getstatic     #20                 // Field akka/remote/Ack$.MODULE$:Lakka/remote/Ack$;
       3: invokevirtual #25                 // Method akka/remote/Ack$.$lessinit$greater$default$2:()Lscala/collection/immutable/Set;
       6: areturn

  public static scala.Option<scala.Tuple2<akka.remote.SeqNo, scala.collection.immutable.Set<akka.remote.SeqNo>>> unapply(akka.remote.Ack);
    Code:
       0: getstatic     #20                 // Field akka/remote/Ack$.MODULE$:Lakka/remote/Ack$;
       3: aload_0
       4: invokevirtual #29                 // Method akka/remote/Ack$.unapply:(Lakka/remote/Ack;)Lscala/Option;
       7: areturn

  public static akka.remote.Ack apply(akka.remote.SeqNo, scala.collection.immutable.Set<akka.remote.SeqNo>);
    Code:
       0: getstatic     #20                 // Field akka/remote/Ack$.MODULE$:Lakka/remote/Ack$;
       3: aload_0
       4: aload_1
       5: invokevirtual #33                 // Method akka/remote/Ack$.apply:(Lakka/remote/SeqNo;Lscala/collection/immutable/Set;)Lakka/remote/Ack;
       8: areturn

  public static scala.Function1<scala.Tuple2<akka.remote.SeqNo, scala.collection.immutable.Set<akka.remote.SeqNo>>, akka.remote.Ack> tupled();
    Code:
       0: getstatic     #20                 // Field akka/remote/Ack$.MODULE$:Lakka/remote/Ack$;
       3: invokevirtual #37                 // Method akka/remote/Ack$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.remote.SeqNo, scala.Function1<scala.collection.immutable.Set<akka.remote.SeqNo>, akka.remote.Ack>> curried();
    Code:
       0: getstatic     #20                 // Field akka/remote/Ack$.MODULE$:Lakka/remote/Ack$;
       3: invokevirtual #40                 // Method akka/remote/Ack$.curried:()Lscala/Function1;
       6: areturn

  public akka.remote.SeqNo cumulativeAck();
    Code:
       0: aload_0
       1: getfield      #48                 // Field cumulativeAck:Lakka/remote/SeqNo;
       4: areturn

  public scala.collection.immutable.Set<akka.remote.SeqNo> nacks();
    Code:
       0: aload_0
       1: getfield      #52                 // Field nacks:Lscala/collection/immutable/Set;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #56                 // class scala/StringContext
       3: dup
       4: getstatic     #61                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_3
       8: anewarray     #63                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #65                 // String ACK[
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #67                 // String ,
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #69                 // String ]
      25: aastore
      26: checkcast     #71                 // class "[Ljava/lang/Object;"
      29: invokevirtual #75                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokespecial #79                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      35: getstatic     #61                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      38: iconst_2
      39: anewarray     #4                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: invokevirtual #81                 // Method cumulativeAck:()Lakka/remote/SeqNo;
      48: aastore
      49: dup
      50: iconst_1
      51: aload_0
      52: invokevirtual #83                 // Method nacks:()Lscala/collection/immutable/Set;
      55: ldc           #85                 // String {
      57: ldc           #67                 // String ,
      59: ldc           #87                 // String }
      61: invokeinterface #93,  4           // InterfaceMethod scala/collection/immutable/Set.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      66: aastore
      67: invokevirtual #97                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      70: invokevirtual #101                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      73: areturn

  public akka.remote.Ack copy(akka.remote.SeqNo, scala.collection.immutable.Set<akka.remote.SeqNo>);
    Code:
       0: new           #2                  // class akka/remote/Ack
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #105                // Method "<init>":(Lakka/remote/SeqNo;Lscala/collection/immutable/Set;)V
       9: areturn

  public akka.remote.SeqNo copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method cumulativeAck:()Lakka/remote/SeqNo;
       4: areturn

  public scala.collection.immutable.Set<akka.remote.SeqNo> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method nacks:()Lscala/collection/immutable/Set;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #110                // String Ack
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #116                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #122                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #124                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #127                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #83                 // Method nacks:()Lscala/collection/immutable/Set;
      43: goto          50
      46: aload_0
      47: invokevirtual #81                 // Method cumulativeAck:()Lakka/remote/SeqNo;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #136                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #140                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/remote/Ack
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #136                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #148                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/remote/Ack
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/remote/Ack
      29: astore        4
      31: aload_0
      32: invokevirtual #81                 // Method cumulativeAck:()Lakka/remote/SeqNo;
      35: aload         4
      37: invokevirtual #81                 // Method cumulativeAck:()Lakka/remote/SeqNo;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #151                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #83                 // Method nacks:()Lscala/collection/immutable/Set;
      67: aload         4
      69: invokevirtual #83                 // Method nacks:()Lscala/collection/immutable/Set;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #151                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  public akka.remote.Ack(akka.remote.SeqNo, scala.collection.immutable.Set<akka.remote.SeqNo>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field cumulativeAck:Lakka/remote/SeqNo;
       5: aload_0
       6: aload_2
       7: putfield      #52                 // Field nacks:Lscala/collection/immutable/Set;
      10: aload_0
      11: invokespecial #156                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #162                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: return
}
