Compiled from "AddressUidExtension.scala"
public class akka.remote.AddressUidExtension implements akka.actor.Extension {
  private final akka.actor.ExtendedActorSystem system;

  private final long longAddressUid;

  private int addressUid;

  private volatile boolean bitmap$0;

  public static akka.actor.Extension apply(akka.actor.ActorSystem);
    Code:
       0: getstatic     #18                 // Field akka/remote/AddressUidExtension$.MODULE$:Lakka/remote/AddressUidExtension$;
       3: aload_0
       4: invokevirtual #20                 // Method akka/remote/AddressUidExtension$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       7: areturn

  public static akka.remote.AddressUidExtension createExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: getstatic     #18                 // Field akka/remote/AddressUidExtension$.MODULE$:Lakka/remote/AddressUidExtension$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/remote/AddressUidExtension$.createExtension:(Lakka/actor/ExtendedActorSystem;)Lakka/remote/AddressUidExtension;
       7: areturn

  public static akka.remote.AddressUidExtension$ lookup();
    Code:
       0: getstatic     #18                 // Field akka/remote/AddressUidExtension$.MODULE$:Lakka/remote/AddressUidExtension$;
       3: invokevirtual #28                 // Method akka/remote/AddressUidExtension$.lookup:()Lakka/remote/AddressUidExtension$;
       6: areturn

  public static akka.remote.AddressUidExtension get(akka.actor.ActorSystem);
    Code:
       0: getstatic     #18                 // Field akka/remote/AddressUidExtension$.MODULE$:Lakka/remote/AddressUidExtension$;
       3: aload_0
       4: invokevirtual #32                 // Method akka/remote/AddressUidExtension$.get:(Lakka/actor/ActorSystem;)Lakka/remote/AddressUidExtension;
       7: areturn

  private int addressUid$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #44                 // Field bitmap$0:Z
       8: ifne          42
      11: aload_0
      12: aload_0
      13: invokespecial #48                 // Method arteryEnabled:()Z
      16: ifeq          29
      19: new           #50                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #52                 // String Int UID must never be used with Artery
      25: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokevirtual #59                 // Method longAddressUid:()J
      33: l2i
      34: putfield      #61                 // Field addressUid:I
      37: aload_0
      38: iconst_1
      39: putfield      #44                 // Field bitmap$0:Z
      42: getstatic     #67                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      45: pop
      46: aload_1
      47: monitorexit
      48: aload_0
      49: getfield      #61                 // Field addressUid:I
      52: ireturn
      53: aload_1
      54: monitorexit
      55: athrow
    Exception table:
       from    to  target type
           4    48    53   any

  public akka.actor.ExtendedActorSystem system();
    Code:
       0: aload_0
       1: getfield      #74                 // Field system:Lakka/actor/ExtendedActorSystem;
       4: areturn

  private boolean arteryEnabled();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method system:()Lakka/actor/ExtendedActorSystem;
       4: invokevirtual #82                 // Method akka/actor/ExtendedActorSystem.provider:()Lakka/actor/ActorRefProvider;
       7: checkcast     #84                 // class akka/remote/RemoteActorRefProvider
      10: invokevirtual #88                 // Method akka/remote/RemoteActorRefProvider.remoteSettings:()Lakka/remote/RemoteSettings;
      13: invokevirtual #94                 // Method akka/remote/RemoteSettings.Artery:()Lakka/remote/artery/ArterySettings;
      16: invokevirtual #99                 // Method akka/remote/artery/ArterySettings.Enabled:()Z
      19: ireturn

  public long longAddressUid();
    Code:
       0: aload_0
       1: getfield      #101                // Field longAddressUid:J
       4: lreturn

  public int addressUid();
    Code:
       0: aload_0
       1: getfield      #44                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #61                 // Field addressUid:I
      11: goto          18
      14: aload_0
      15: invokespecial #103                // Method addressUid$lzycompute:()I
      18: ireturn

  public akka.remote.AddressUidExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field system:Lakka/actor/ExtendedActorSystem;
       5: aload_0
       6: invokespecial #107                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #113                // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      13: astore_2
      14: aload_0
      15: invokespecial #48                 // Method arteryEnabled:()Z
      18: ifeq          28
      21: aload_2
      22: invokevirtual #116                // Method java/util/concurrent/ThreadLocalRandom.nextLong:()J
      25: goto          33
      28: aload_2
      29: invokevirtual #119                // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
      32: i2l
      33: putfield      #101                // Field longAddressUid:J
      36: return
}
