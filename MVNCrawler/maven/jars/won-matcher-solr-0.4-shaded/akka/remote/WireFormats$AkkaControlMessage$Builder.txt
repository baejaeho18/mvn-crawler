Compiled from "WireFormats.java"
public final class akka.remote.WireFormats$AkkaControlMessage$Builder extends akka.protobuf.GeneratedMessage$Builder<akka.remote.WireFormats$AkkaControlMessage$Builder> implements akka.remote.WireFormats$AkkaControlMessageOrBuilder {
  private int bitField0_;

  private akka.remote.WireFormats$CommandType commandType_;

  private akka.remote.WireFormats$AkkaHandshakeInfo handshakeInfo_;

  private akka.protobuf.SingleFieldBuilder<akka.remote.WireFormats$AkkaHandshakeInfo, akka.remote.WireFormats$AkkaHandshakeInfo$Builder, akka.remote.WireFormats$AkkaHandshakeInfoOrBuilder> handshakeInfoBuilder_;

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #3                  // Method akka/remote/WireFormats.access$9900:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #4                  // Method akka/remote/WireFormats.access$10000:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #5                  // class akka/remote/WireFormats$AkkaControlMessage
       5: ldc           #6                  // class akka/remote/WireFormats$AkkaControlMessage$Builder
       7: invokevirtual #7                  // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  private akka.remote.WireFormats$AkkaControlMessage$Builder();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method akka/protobuf/GeneratedMessage$Builder."<init>":()V
       4: aload_0
       5: getstatic     #9                  // Field akka/remote/WireFormats$CommandType.ASSOCIATE:Lakka/remote/WireFormats$CommandType;
       8: putfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
      11: aload_0
      12: invokestatic  #11                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.getDefaultInstance:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      15: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      18: aload_0
      19: invokespecial #13                 // Method maybeForceBuilderInitialization:()V
      22: return

  private akka.remote.WireFormats$AkkaControlMessage$Builder(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method akka/protobuf/GeneratedMessage$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;)V
       5: aload_0
       6: getstatic     #9                  // Field akka/remote/WireFormats$CommandType.ASSOCIATE:Lakka/remote/WireFormats$CommandType;
       9: putfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
      12: aload_0
      13: invokestatic  #11                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.getDefaultInstance:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      16: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      19: aload_0
      20: invokespecial #13                 // Method maybeForceBuilderInitialization:()V
      23: return

  private void maybeForceBuilderInitialization();
    Code:
       0: invokestatic  #15                 // Method akka/remote/WireFormats$AkkaControlMessage.access$10400:()Z
       3: ifeq          11
       6: aload_0
       7: invokespecial #16                 // Method getHandshakeInfoFieldBuilder:()Lakka/protobuf/SingleFieldBuilder;
      10: pop
      11: return

  private static akka.remote.WireFormats$AkkaControlMessage$Builder create();
    Code:
       0: new           #6                  // class akka/remote/WireFormats$AkkaControlMessage$Builder
       3: dup
       4: invokespecial #17                 // Method "<init>":()V
       7: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder clear();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method akka/protobuf/GeneratedMessage$Builder.clear:()Lakka/protobuf/GeneratedMessage$Builder;
       4: pop
       5: aload_0
       6: getstatic     #9                  // Field akka/remote/WireFormats$CommandType.ASSOCIATE:Lakka/remote/WireFormats$CommandType;
       9: putfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
      12: aload_0
      13: aload_0
      14: getfield      #19                 // Field bitField0_:I
      17: bipush        -2
      19: iand
      20: putfield      #19                 // Field bitField0_:I
      23: aload_0
      24: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      27: ifnonnull     40
      30: aload_0
      31: invokestatic  #11                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.getDefaultInstance:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      34: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      37: goto          48
      40: aload_0
      41: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      44: invokevirtual #21                 // Method akka/protobuf/SingleFieldBuilder.clear:()Lakka/protobuf/SingleFieldBuilder;
      47: pop
      48: aload_0
      49: aload_0
      50: getfield      #19                 // Field bitField0_:I
      53: bipush        -3
      55: iand
      56: putfield      #19                 // Field bitField0_:I
      59: aload_0
      60: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder clone();
    Code:
       0: invokestatic  #2                  // Method create:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       3: aload_0
       4: invokevirtual #22                 // Method buildPartial:()Lakka/remote/WireFormats$AkkaControlMessage;
       7: invokevirtual #23                 // Method mergeFrom:(Lakka/remote/WireFormats$AkkaControlMessage;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
      10: areturn

  public akka.protobuf.Descriptors$Descriptor getDescriptorForType();
    Code:
       0: invokestatic  #3                  // Method akka/remote/WireFormats.access$9900:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  public akka.remote.WireFormats$AkkaControlMessage getDefaultInstanceForType();
    Code:
       0: invokestatic  #24                 // Method akka/remote/WireFormats$AkkaControlMessage.getDefaultInstance:()Lakka/remote/WireFormats$AkkaControlMessage;
       3: areturn

  public akka.remote.WireFormats$AkkaControlMessage build();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method buildPartial:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: astore_1
       5: aload_1
       6: invokevirtual #25                 // Method akka/remote/WireFormats$AkkaControlMessage.isInitialized:()Z
       9: ifne          17
      12: aload_1
      13: invokestatic  #26                 // Method newUninitializedMessageException:(Lakka/protobuf/Message;)Lakka/protobuf/UninitializedMessageException;
      16: athrow
      17: aload_1
      18: areturn

  public akka.remote.WireFormats$AkkaControlMessage buildPartial();
    Code:
       0: new           #5                  // class akka/remote/WireFormats$AkkaControlMessage
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #27                 // Method akka/remote/WireFormats$AkkaControlMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;Lakka/remote/WireFormats$1;)V
       9: astore_1
      10: aload_0
      11: getfield      #19                 // Field bitField0_:I
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_2
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     28
      24: iload_3
      25: iconst_1
      26: ior
      27: istore_3
      28: aload_1
      29: aload_0
      30: getfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
      33: invokestatic  #28                 // Method akka/remote/WireFormats$AkkaControlMessage.access$10602:(Lakka/remote/WireFormats$AkkaControlMessage;Lakka/remote/WireFormats$CommandType;)Lakka/remote/WireFormats$CommandType;
      36: pop
      37: iload_2
      38: iconst_2
      39: iand
      40: iconst_2
      41: if_icmpne     48
      44: iload_3
      45: iconst_2
      46: ior
      47: istore_3
      48: aload_0
      49: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      52: ifnonnull     67
      55: aload_1
      56: aload_0
      57: getfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      60: invokestatic  #29                 // Method akka/remote/WireFormats$AkkaControlMessage.access$10702:(Lakka/remote/WireFormats$AkkaControlMessage;Lakka/remote/WireFormats$AkkaHandshakeInfo;)Lakka/remote/WireFormats$AkkaHandshakeInfo;
      63: pop
      64: goto          82
      67: aload_1
      68: aload_0
      69: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      72: invokevirtual #30                 // Method akka/protobuf/SingleFieldBuilder.build:()Lakka/protobuf/GeneratedMessage;
      75: checkcast     #31                 // class akka/remote/WireFormats$AkkaHandshakeInfo
      78: invokestatic  #29                 // Method akka/remote/WireFormats$AkkaControlMessage.access$10702:(Lakka/remote/WireFormats$AkkaControlMessage;Lakka/remote/WireFormats$AkkaHandshakeInfo;)Lakka/remote/WireFormats$AkkaHandshakeInfo;
      81: pop
      82: aload_1
      83: iload_3
      84: invokestatic  #32                 // Method akka/remote/WireFormats$AkkaControlMessage.access$10802:(Lakka/remote/WireFormats$AkkaControlMessage;I)I
      87: pop
      88: aload_0
      89: invokevirtual #33                 // Method onBuilt:()V
      92: aload_1
      93: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder mergeFrom(akka.protobuf.Message);
    Code:
       0: aload_1
       1: instanceof    #5                  // class akka/remote/WireFormats$AkkaControlMessage
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #5                  // class akka/remote/WireFormats$AkkaControlMessage
      12: invokevirtual #23                 // Method mergeFrom:(Lakka/remote/WireFormats$AkkaControlMessage;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
      15: areturn
      16: aload_0
      17: aload_1
      18: invokespecial #34                 // Method akka/protobuf/GeneratedMessage$Builder.mergeFrom:(Lakka/protobuf/Message;)Lakka/protobuf/AbstractMessage$Builder;
      21: pop
      22: aload_0
      23: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder mergeFrom(akka.remote.WireFormats$AkkaControlMessage);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method akka/remote/WireFormats$AkkaControlMessage.getDefaultInstance:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: if_acmpne     9
       7: aload_0
       8: areturn
       9: aload_1
      10: invokevirtual #35                 // Method akka/remote/WireFormats$AkkaControlMessage.hasCommandType:()Z
      13: ifeq          25
      16: aload_0
      17: aload_1
      18: invokevirtual #36                 // Method akka/remote/WireFormats$AkkaControlMessage.getCommandType:()Lakka/remote/WireFormats$CommandType;
      21: invokevirtual #37                 // Method setCommandType:(Lakka/remote/WireFormats$CommandType;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
      24: pop
      25: aload_1
      26: invokevirtual #38                 // Method akka/remote/WireFormats$AkkaControlMessage.hasHandshakeInfo:()Z
      29: ifeq          41
      32: aload_0
      33: aload_1
      34: invokevirtual #39                 // Method akka/remote/WireFormats$AkkaControlMessage.getHandshakeInfo:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      37: invokevirtual #40                 // Method mergeHandshakeInfo:(Lakka/remote/WireFormats$AkkaHandshakeInfo;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
      40: pop
      41: aload_0
      42: aload_1
      43: invokevirtual #41                 // Method akka/remote/WireFormats$AkkaControlMessage.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      46: invokevirtual #42                 // Method mergeUnknownFields:(Lakka/protobuf/UnknownFieldSet;)Lakka/protobuf/GeneratedMessage$Builder;
      49: pop
      50: aload_0
      51: areturn

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method hasCommandType:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #44                 // Method hasHandshakeInfo:()Z
      13: ifeq          28
      16: aload_0
      17: invokevirtual #45                 // Method getHandshakeInfo:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      20: invokevirtual #46                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.isInitialized:()Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: iconst_1
      29: ireturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder mergeFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: getstatic     #47                 // Field akka/remote/WireFormats$AkkaControlMessage.PARSER:Lakka/protobuf/Parser;
       5: aload_1
       6: aload_2
       7: invokeinterface #48,  3           // InterfaceMethod akka/protobuf/Parser.parsePartialFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      12: checkcast     #5                  // class akka/remote/WireFormats$AkkaControlMessage
      15: astore_3
      16: aload_3
      17: ifnull        58
      20: aload_0
      21: aload_3
      22: invokevirtual #23                 // Method mergeFrom:(Lakka/remote/WireFormats$AkkaControlMessage;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
      25: pop
      26: goto          58
      29: astore        4
      31: aload         4
      33: invokevirtual #50                 // Method akka/protobuf/InvalidProtocolBufferException.getUnfinishedMessage:()Lakka/protobuf/MessageLite;
      36: checkcast     #5                  // class akka/remote/WireFormats$AkkaControlMessage
      39: astore_3
      40: aload         4
      42: athrow
      43: astore        5
      45: aload_3
      46: ifnull        55
      49: aload_0
      50: aload_3
      51: invokevirtual #23                 // Method mergeFrom:(Lakka/remote/WireFormats$AkkaControlMessage;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
      54: pop
      55: aload         5
      57: athrow
      58: aload_0
      59: areturn
    Exception table:
       from    to  target type
           2    16    29   Class akka/protobuf/InvalidProtocolBufferException
           2    16    43   any
          29    45    43   any

  public boolean hasCommandType();
    Code:
       0: aload_0
       1: getfield      #19                 // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.WireFormats$CommandType getCommandType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
       4: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder setCommandType(akka.remote.WireFormats$CommandType);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #51                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #52                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: dup
      14: getfield      #19                 // Field bitField0_:I
      17: iconst_1
      18: ior
      19: putfield      #19                 // Field bitField0_:I
      22: aload_0
      23: aload_1
      24: putfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
      27: aload_0
      28: invokevirtual #53                 // Method onChanged:()V
      31: aload_0
      32: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder clearCommandType();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field bitField0_:I
       5: bipush        -2
       7: iand
       8: putfield      #19                 // Field bitField0_:I
      11: aload_0
      12: getstatic     #9                  // Field akka/remote/WireFormats$CommandType.ASSOCIATE:Lakka/remote/WireFormats$CommandType;
      15: putfield      #10                 // Field commandType_:Lakka/remote/WireFormats$CommandType;
      18: aload_0
      19: invokevirtual #53                 // Method onChanged:()V
      22: aload_0
      23: areturn

  public boolean hasHandshakeInfo();
    Code:
       0: aload_0
       1: getfield      #19                 // Field bitField0_:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public akka.remote.WireFormats$AkkaHandshakeInfo getHandshakeInfo();
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      11: areturn
      12: aload_0
      13: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      16: invokevirtual #54                 // Method akka/protobuf/SingleFieldBuilder.getMessage:()Lakka/protobuf/GeneratedMessage;
      19: checkcast     #31                 // class akka/remote/WireFormats$AkkaHandshakeInfo
      22: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder setHandshakeInfo(akka.remote.WireFormats$AkkaHandshakeInfo);
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnonnull     31
       7: aload_1
       8: ifnonnull     19
      11: new           #51                 // class java/lang/NullPointerException
      14: dup
      15: invokespecial #52                 // Method java/lang/NullPointerException."<init>":()V
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      24: aload_0
      25: invokevirtual #53                 // Method onChanged:()V
      28: goto          40
      31: aload_0
      32: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      35: aload_1
      36: invokevirtual #55                 // Method akka/protobuf/SingleFieldBuilder.setMessage:(Lakka/protobuf/GeneratedMessage;)Lakka/protobuf/SingleFieldBuilder;
      39: pop
      40: aload_0
      41: dup
      42: getfield      #19                 // Field bitField0_:I
      45: iconst_2
      46: ior
      47: putfield      #19                 // Field bitField0_:I
      50: aload_0
      51: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder setHandshakeInfo(akka.remote.WireFormats$AkkaHandshakeInfo$Builder);
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnonnull     22
       7: aload_0
       8: aload_1
       9: invokevirtual #56                 // Method akka/remote/WireFormats$AkkaHandshakeInfo$Builder.build:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      12: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      15: aload_0
      16: invokevirtual #53                 // Method onChanged:()V
      19: goto          34
      22: aload_0
      23: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      26: aload_1
      27: invokevirtual #56                 // Method akka/remote/WireFormats$AkkaHandshakeInfo$Builder.build:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      30: invokevirtual #55                 // Method akka/protobuf/SingleFieldBuilder.setMessage:(Lakka/protobuf/GeneratedMessage;)Lakka/protobuf/SingleFieldBuilder;
      33: pop
      34: aload_0
      35: dup
      36: getfield      #19                 // Field bitField0_:I
      39: iconst_2
      40: ior
      41: putfield      #19                 // Field bitField0_:I
      44: aload_0
      45: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder mergeHandshakeInfo(akka.remote.WireFormats$AkkaHandshakeInfo);
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnonnull     60
       7: aload_0
       8: getfield      #19                 // Field bitField0_:I
      11: iconst_2
      12: iand
      13: iconst_2
      14: if_icmpne     48
      17: aload_0
      18: getfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      21: invokestatic  #11                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.getDefaultInstance:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      24: if_acmpeq     48
      27: aload_0
      28: aload_0
      29: getfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      32: invokestatic  #57                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.newBuilder:(Lakka/remote/WireFormats$AkkaHandshakeInfo;)Lakka/remote/WireFormats$AkkaHandshakeInfo$Builder;
      35: aload_1
      36: invokevirtual #58                 // Method akka/remote/WireFormats$AkkaHandshakeInfo$Builder.mergeFrom:(Lakka/remote/WireFormats$AkkaHandshakeInfo;)Lakka/remote/WireFormats$AkkaHandshakeInfo$Builder;
      39: invokevirtual #59                 // Method akka/remote/WireFormats$AkkaHandshakeInfo$Builder.buildPartial:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      42: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      45: goto          53
      48: aload_0
      49: aload_1
      50: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      53: aload_0
      54: invokevirtual #53                 // Method onChanged:()V
      57: goto          69
      60: aload_0
      61: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      64: aload_1
      65: invokevirtual #60                 // Method akka/protobuf/SingleFieldBuilder.mergeFrom:(Lakka/protobuf/GeneratedMessage;)Lakka/protobuf/SingleFieldBuilder;
      68: pop
      69: aload_0
      70: dup
      71: getfield      #19                 // Field bitField0_:I
      74: iconst_2
      75: ior
      76: putfield      #19                 // Field bitField0_:I
      79: aload_0
      80: areturn

  public akka.remote.WireFormats$AkkaControlMessage$Builder clearHandshakeInfo();
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnonnull     21
       7: aload_0
       8: invokestatic  #11                 // Method akka/remote/WireFormats$AkkaHandshakeInfo.getDefaultInstance:()Lakka/remote/WireFormats$AkkaHandshakeInfo;
      11: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      14: aload_0
      15: invokevirtual #53                 // Method onChanged:()V
      18: goto          29
      21: aload_0
      22: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      25: invokevirtual #21                 // Method akka/protobuf/SingleFieldBuilder.clear:()Lakka/protobuf/SingleFieldBuilder;
      28: pop
      29: aload_0
      30: aload_0
      31: getfield      #19                 // Field bitField0_:I
      34: bipush        -3
      36: iand
      37: putfield      #19                 // Field bitField0_:I
      40: aload_0
      41: areturn

  public akka.remote.WireFormats$AkkaHandshakeInfo$Builder getHandshakeInfoBuilder();
    Code:
       0: aload_0
       1: dup
       2: getfield      #19                 // Field bitField0_:I
       5: iconst_2
       6: ior
       7: putfield      #19                 // Field bitField0_:I
      10: aload_0
      11: invokevirtual #53                 // Method onChanged:()V
      14: aload_0
      15: invokespecial #16                 // Method getHandshakeInfoFieldBuilder:()Lakka/protobuf/SingleFieldBuilder;
      18: invokevirtual #61                 // Method akka/protobuf/SingleFieldBuilder.getBuilder:()Lakka/protobuf/GeneratedMessage$Builder;
      21: checkcast     #62                 // class akka/remote/WireFormats$AkkaHandshakeInfo$Builder
      24: areturn

  public akka.remote.WireFormats$AkkaHandshakeInfoOrBuilder getHandshakeInfoOrBuilder();
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnull        18
       7: aload_0
       8: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      11: invokevirtual #63                 // Method akka/protobuf/SingleFieldBuilder.getMessageOrBuilder:()Lakka/protobuf/MessageOrBuilder;
      14: checkcast     #64                 // class akka/remote/WireFormats$AkkaHandshakeInfoOrBuilder
      17: areturn
      18: aload_0
      19: getfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      22: areturn

  private akka.protobuf.SingleFieldBuilder<akka.remote.WireFormats$AkkaHandshakeInfo, akka.remote.WireFormats$AkkaHandshakeInfo$Builder, akka.remote.WireFormats$AkkaHandshakeInfoOrBuilder> getHandshakeInfoFieldBuilder();
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
       4: ifnonnull     35
       7: aload_0
       8: new           #65                 // class akka/protobuf/SingleFieldBuilder
      11: dup
      12: aload_0
      13: getfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      16: aload_0
      17: invokevirtual #66                 // Method getParentForChildren:()Lakka/protobuf/GeneratedMessage$BuilderParent;
      20: aload_0
      21: invokevirtual #67                 // Method isClean:()Z
      24: invokespecial #68                 // Method akka/protobuf/SingleFieldBuilder."<init>":(Lakka/protobuf/GeneratedMessage;Lakka/protobuf/GeneratedMessage$BuilderParent;Z)V
      27: putfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      30: aload_0
      31: aconst_null
      32: putfield      #12                 // Field handshakeInfo_:Lakka/remote/WireFormats$AkkaHandshakeInfo;
      35: aload_0
      36: getfield      #20                 // Field handshakeInfoBuilder_:Lakka/protobuf/SingleFieldBuilder;
      39: areturn

  public akka.protobuf.GeneratedMessage$Builder clear();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method clear:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.GeneratedMessage$Builder clone();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method clone:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.AbstractMessage$Builder mergeFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method mergeFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       6: areturn

  public akka.protobuf.AbstractMessage$Builder mergeFrom(akka.protobuf.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method mergeFrom:(Lakka/protobuf/Message;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       5: areturn

  public akka.protobuf.AbstractMessage$Builder clear();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method clear:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.AbstractMessage$Builder clone();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method clone:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.Message$Builder mergeFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method mergeFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       6: areturn

  public akka.protobuf.Message$Builder clone();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method clone:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.Message buildPartial();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method buildPartial:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: areturn

  public akka.protobuf.Message build();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method build:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: areturn

  public akka.protobuf.Message$Builder mergeFrom(akka.protobuf.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method mergeFrom:(Lakka/protobuf/Message;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       5: areturn

  public akka.protobuf.Message$Builder clear();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method clear:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder mergeFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method mergeFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       6: areturn

  public akka.protobuf.MessageLite$Builder clone();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method clone:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.MessageLite buildPartial();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method buildPartial:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: areturn

  public akka.protobuf.MessageLite build();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method build:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: areturn

  public akka.protobuf.MessageLite$Builder clear();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method clear:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getDefaultInstanceForType:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getDefaultInstanceForType:()Lakka/remote/WireFormats$AkkaControlMessage;
       4: areturn

  public akka.protobuf.AbstractMessageLite$Builder mergeFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method mergeFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       6: areturn

  public akka.protobuf.AbstractMessageLite$Builder clone();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method clone:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method clone:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       4: areturn

  static akka.remote.WireFormats$AkkaControlMessage$Builder access$10200();
    Code:
       0: invokestatic  #2                  // Method create:()Lakka/remote/WireFormats$AkkaControlMessage$Builder;
       3: areturn

  akka.remote.WireFormats$AkkaControlMessage$Builder(akka.protobuf.GeneratedMessage$BuilderParent, akka.remote.WireFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;)V
       5: return
}
