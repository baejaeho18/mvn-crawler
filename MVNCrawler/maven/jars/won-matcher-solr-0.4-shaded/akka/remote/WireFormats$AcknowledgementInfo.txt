Compiled from "WireFormats.java"
public final class akka.remote.WireFormats$AcknowledgementInfo extends akka.protobuf.GeneratedMessage implements akka.remote.WireFormats$AcknowledgementInfoOrBuilder {
  private static final akka.remote.WireFormats$AcknowledgementInfo defaultInstance;

  private final akka.protobuf.UnknownFieldSet unknownFields;

  public static akka.protobuf.Parser<akka.remote.WireFormats$AcknowledgementInfo> PARSER;

  private int bitField0_;

  public static final int CUMULATIVEACK_FIELD_NUMBER;

  private long cumulativeAck_;

  public static final int NACKS_FIELD_NUMBER;

  private java.util.List<java.lang.Long> nacks_;

  private byte memoizedIsInitialized;

  private int memoizedSerializedSize;

  private static final long serialVersionUID;

  private akka.remote.WireFormats$AcknowledgementInfo(akka.protobuf.GeneratedMessage$Builder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method akka/protobuf/GeneratedMessage."<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #8                  // Field memoizedIsInitialized:B
      10: aload_0
      11: iconst_m1
      12: putfield      #9                  // Field memoizedSerializedSize:I
      15: aload_0
      16: aload_1
      17: invokevirtual #10                 // Method akka/protobuf/GeneratedMessage$Builder.getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      20: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      23: return

  private akka.remote.WireFormats$AcknowledgementInfo(boolean);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #8                  // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #9                  // Field memoizedSerializedSize:I
      14: aload_0
      15: invokestatic  #13                 // Method akka/protobuf/UnknownFieldSet.getDefaultInstance:()Lakka/protobuf/UnknownFieldSet;
      18: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
      21: return

  public static akka.remote.WireFormats$AcknowledgementInfo getDefaultInstance();
    Code:
       0: getstatic     #14                 // Field defaultInstance:Lakka/remote/WireFormats$AcknowledgementInfo;
       3: areturn

  public akka.remote.WireFormats$AcknowledgementInfo getDefaultInstanceForType();
    Code:
       0: getstatic     #14                 // Field defaultInstance:Lakka/remote/WireFormats$AcknowledgementInfo;
       3: areturn

  public final akka.protobuf.UnknownFieldSet getUnknownFields();
    Code:
       0: aload_0
       1: getfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
       4: areturn

  private akka.remote.WireFormats$AcknowledgementInfo(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method akka/protobuf/GeneratedMessage."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #8                  // Field memoizedIsInitialized:B
       9: aload_0
      10: iconst_m1
      11: putfield      #9                  // Field memoizedSerializedSize:I
      14: aload_0
      15: invokespecial #15                 // Method initFields:()V
      18: iconst_0
      19: istore_3
      20: invokestatic  #16                 // Method akka/protobuf/UnknownFieldSet.newBuilder:()Lakka/protobuf/UnknownFieldSet$Builder;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: ifne          254
      33: aload_1
      34: invokevirtual #17                 // Method akka/protobuf/CodedInputStream.readTag:()I
      37: istore        6
      39: iload         6
      41: lookupswitch  { // 4
                     0: 84
                     9: 109
                    17: 130
                    18: 172
               default: 90
          }
      84: iconst_1
      85: istore        5
      87: goto          251
      90: aload_0
      91: aload_1
      92: aload         4
      94: aload_2
      95: iload         6
      97: invokevirtual #18                 // Method parseUnknownField:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/UnknownFieldSet$Builder;Lakka/protobuf/ExtensionRegistryLite;I)Z
     100: ifne          251
     103: iconst_1
     104: istore        5
     106: goto          251
     109: aload_0
     110: dup
     111: getfield      #1                  // Field bitField0_:I
     114: iconst_1
     115: ior
     116: putfield      #1                  // Field bitField0_:I
     119: aload_0
     120: aload_1
     121: invokevirtual #19                 // Method akka/protobuf/CodedInputStream.readFixed64:()J
     124: putfield      #3                  // Field cumulativeAck_:J
     127: goto          251
     130: iload_3
     131: iconst_2
     132: iand
     133: iconst_2
     134: if_icmpeq     152
     137: aload_0
     138: new           #20                 // class java/util/ArrayList
     141: dup
     142: invokespecial #21                 // Method java/util/ArrayList."<init>":()V
     145: putfield      #2                  // Field nacks_:Ljava/util/List;
     148: iload_3
     149: iconst_2
     150: ior
     151: istore_3
     152: aload_0
     153: getfield      #2                  // Field nacks_:Ljava/util/List;
     156: aload_1
     157: invokevirtual #19                 // Method akka/protobuf/CodedInputStream.readFixed64:()J
     160: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     163: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     168: pop
     169: goto          251
     172: aload_1
     173: invokevirtual #24                 // Method akka/protobuf/CodedInputStream.readRawVarint32:()I
     176: istore        7
     178: aload_1
     179: iload         7
     181: invokevirtual #25                 // Method akka/protobuf/CodedInputStream.pushLimit:(I)I
     184: istore        8
     186: iload_3
     187: iconst_2
     188: iand
     189: iconst_2
     190: if_icmpeq     215
     193: aload_1
     194: invokevirtual #26                 // Method akka/protobuf/CodedInputStream.getBytesUntilLimit:()I
     197: ifle          215
     200: aload_0
     201: new           #20                 // class java/util/ArrayList
     204: dup
     205: invokespecial #21                 // Method java/util/ArrayList."<init>":()V
     208: putfield      #2                  // Field nacks_:Ljava/util/List;
     211: iload_3
     212: iconst_2
     213: ior
     214: istore_3
     215: aload_1
     216: invokevirtual #26                 // Method akka/protobuf/CodedInputStream.getBytesUntilLimit:()I
     219: ifle          242
     222: aload_0
     223: getfield      #2                  // Field nacks_:Ljava/util/List;
     226: aload_1
     227: invokevirtual #19                 // Method akka/protobuf/CodedInputStream.readFixed64:()J
     230: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     233: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     238: pop
     239: goto          215
     242: aload_1
     243: iload         8
     245: invokevirtual #27                 // Method akka/protobuf/CodedInputStream.popLimit:(I)V
     248: goto          251
     251: goto          28
     254: iload_3
     255: iconst_2
     256: iand
     257: iconst_2
     258: if_icmpne     272
     261: aload_0
     262: aload_0
     263: getfield      #2                  // Field nacks_:Ljava/util/List;
     266: invokestatic  #28                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     269: putfield      #2                  // Field nacks_:Ljava/util/List;
     272: aload_0
     273: aload         4
     275: invokevirtual #29                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     278: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     281: aload_0
     282: invokevirtual #30                 // Method makeExtensionsImmutable:()V
     285: goto          352
     288: astore        5
     290: aload         5
     292: aload_0
     293: invokevirtual #32                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     296: athrow
     297: astore        5
     299: new           #31                 // class akka/protobuf/InvalidProtocolBufferException
     302: dup
     303: aload         5
     305: invokevirtual #34                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     308: invokespecial #35                 // Method akka/protobuf/InvalidProtocolBufferException."<init>":(Ljava/lang/String;)V
     311: aload_0
     312: invokevirtual #32                 // Method akka/protobuf/InvalidProtocolBufferException.setUnfinishedMessage:(Lakka/protobuf/MessageLite;)Lakka/protobuf/InvalidProtocolBufferException;
     315: athrow
     316: astore        9
     318: iload_3
     319: iconst_2
     320: iand
     321: iconst_2
     322: if_icmpne     336
     325: aload_0
     326: aload_0
     327: getfield      #2                  // Field nacks_:Ljava/util/List;
     330: invokestatic  #28                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     333: putfield      #2                  // Field nacks_:Ljava/util/List;
     336: aload_0
     337: aload         4
     339: invokevirtual #29                 // Method akka/protobuf/UnknownFieldSet$Builder.build:()Lakka/protobuf/UnknownFieldSet;
     342: putfield      #11                 // Field unknownFields:Lakka/protobuf/UnknownFieldSet;
     345: aload_0
     346: invokevirtual #30                 // Method makeExtensionsImmutable:()V
     349: aload         9
     351: athrow
     352: return
    Exception table:
       from    to  target type
          25   254   288   Class akka/protobuf/InvalidProtocolBufferException
          25   254   297   Class java/io/IOException
          25   254   316   any
         288   318   316   any

  public static final akka.protobuf.Descriptors$Descriptor getDescriptor();
    Code:
       0: invokestatic  #36                 // Method akka/remote/WireFormats.access$2200:()Lakka/protobuf/Descriptors$Descriptor;
       3: areturn

  protected akka.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable();
    Code:
       0: invokestatic  #37                 // Method akka/remote/WireFormats.access$2300:()Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
       3: ldc           #38                 // class akka/remote/WireFormats$AcknowledgementInfo
       5: ldc           #39                 // class akka/remote/WireFormats$AcknowledgementInfo$Builder
       7: invokevirtual #40                 // Method akka/protobuf/GeneratedMessage$FieldAccessorTable.ensureFieldAccessorsInitialized:(Ljava/lang/Class;Ljava/lang/Class;)Lakka/protobuf/GeneratedMessage$FieldAccessorTable;
      10: areturn

  public akka.protobuf.Parser<akka.remote.WireFormats$AcknowledgementInfo> getParserForType();
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: areturn

  public boolean hasCumulativeAck();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bitField0_:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public long getCumulativeAck();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cumulativeAck_:J
       4: lreturn

  public java.util.List<java.lang.Long> getNacksList();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nacks_:Ljava/util/List;
       4: areturn

  public int getNacksCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nacks_:Ljava/util/List;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public long getNacks(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nacks_:Ljava/util/List;
       4: iload_1
       5: invokeinterface #43,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #44                 // class java/lang/Long
      13: invokevirtual #45                 // Method java/lang/Long.longValue:()J
      16: lreturn

  private void initFields();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #3                  // Field cumulativeAck_:J
       5: aload_0
       6: invokestatic  #46                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: putfield      #2                  // Field nacks_:Ljava/util/List;
      12: return

  public final boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memoizedIsInitialized:B
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     21
      10: iload_1
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #47                 // Method hasCumulativeAck:()Z
      25: ifne          35
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field memoizedIsInitialized:B
      33: iconst_0
      34: ireturn
      35: aload_0
      36: iconst_1
      37: putfield      #8                  // Field memoizedIsInitialized:B
      40: iconst_1
      41: ireturn

  public void writeTo(akka.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getSerializedSize:()I
       4: pop
       5: aload_0
       6: getfield      #1                  // Field bitField0_:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     24
      15: aload_1
      16: iconst_1
      17: aload_0
      18: getfield      #3                  // Field cumulativeAck_:J
      21: invokevirtual #49                 // Method akka/protobuf/CodedOutputStream.writeFixed64:(IJ)V
      24: iconst_0
      25: istore_2
      26: iload_2
      27: aload_0
      28: getfield      #2                  // Field nacks_:Ljava/util/List;
      31: invokeinterface #42,  1           // InterfaceMethod java/util/List.size:()I
      36: if_icmpge     66
      39: aload_1
      40: iconst_2
      41: aload_0
      42: getfield      #2                  // Field nacks_:Ljava/util/List;
      45: iload_2
      46: invokeinterface #43,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #44                 // class java/lang/Long
      54: invokevirtual #45                 // Method java/lang/Long.longValue:()J
      57: invokevirtual #49                 // Method akka/protobuf/CodedOutputStream.writeFixed64:(IJ)V
      60: iinc          2, 1
      63: goto          26
      66: aload_0
      67: invokevirtual #50                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      70: aload_1
      71: invokevirtual #51                 // Method akka/protobuf/UnknownFieldSet.writeTo:(Lakka/protobuf/CodedOutputStream;)V
      74: return

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoizedSerializedSize:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpeq     12
      10: iload_1
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: getfield      #1                  // Field bitField0_:I
      18: iconst_1
      19: iand
      20: iconst_1
      21: if_icmpne     35
      24: iload_1
      25: iconst_1
      26: aload_0
      27: getfield      #3                  // Field cumulativeAck_:J
      30: invokestatic  #52                 // Method akka/protobuf/CodedOutputStream.computeFixed64Size:(IJ)I
      33: iadd
      34: istore_1
      35: iconst_0
      36: istore_2
      37: bipush        8
      39: aload_0
      40: invokevirtual #53                 // Method getNacksList:()Ljava/util/List;
      43: invokeinterface #42,  1           // InterfaceMethod java/util/List.size:()I
      48: imul
      49: istore_2
      50: iload_1
      51: iload_2
      52: iadd
      53: istore_1
      54: iload_1
      55: iconst_1
      56: aload_0
      57: invokevirtual #53                 // Method getNacksList:()Ljava/util/List;
      60: invokeinterface #42,  1           // InterfaceMethod java/util/List.size:()I
      65: imul
      66: iadd
      67: istore_1
      68: iload_1
      69: aload_0
      70: invokevirtual #50                 // Method getUnknownFields:()Lakka/protobuf/UnknownFieldSet;
      73: invokevirtual #54                 // Method akka/protobuf/UnknownFieldSet.getSerializedSize:()I
      76: iadd
      77: istore_1
      78: aload_0
      79: iload_1
      80: putfield      #9                  // Field memoizedSerializedSize:I
      83: iload_1
      84: ireturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokespecial #55                 // Method akka/protobuf/GeneratedMessage.writeReplace:()Ljava/lang/Object;
       4: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(akka.protobuf.ByteString) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #56,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;)Ljava/lang/Object;
       9: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      12: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(akka.protobuf.ByteString, akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #57,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/ByteString;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      13: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(byte[]) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #58,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:([B)Ljava/lang/Object;
       9: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      12: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(byte[], akka.protobuf.ExtensionRegistryLite) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #59,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:([BLakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      13: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #60,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      12: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #61,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      13: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseDelimitedFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #62,  2           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;)Ljava/lang/Object;
       9: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      12: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseDelimitedFrom(java.io.InputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #63,  3           // InterfaceMethod akka/protobuf/Parser.parseDelimitedFrom:(Ljava/io/InputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      13: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(akka.protobuf.CodedInputStream) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: invokeinterface #64,  2           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;)Ljava/lang/Object;
       9: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      12: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo parseFrom(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: getstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
       3: aload_0
       4: aload_1
       5: invokeinterface #65,  3           // InterfaceMethod akka/protobuf/Parser.parseFrom:(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      10: checkcast     #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      13: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo$Builder newBuilder();
    Code:
       0: invokestatic  #66                 // Method akka/remote/WireFormats$AcknowledgementInfo$Builder.access$2500:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       3: areturn

  public akka.remote.WireFormats$AcknowledgementInfo$Builder newBuilderForType();
    Code:
       0: invokestatic  #67                 // Method newBuilder:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       3: areturn

  public static akka.remote.WireFormats$AcknowledgementInfo$Builder newBuilder(akka.remote.WireFormats$AcknowledgementInfo);
    Code:
       0: invokestatic  #67                 // Method newBuilder:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       3: aload_0
       4: invokevirtual #68                 // Method akka/remote/WireFormats$AcknowledgementInfo$Builder.mergeFrom:(Lakka/remote/WireFormats$AcknowledgementInfo;)Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       7: areturn

  public akka.remote.WireFormats$AcknowledgementInfo$Builder toBuilder();
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method newBuilder:(Lakka/remote/WireFormats$AcknowledgementInfo;)Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       4: areturn

  protected akka.remote.WireFormats$AcknowledgementInfo$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: new           #39                 // class akka/remote/WireFormats$AcknowledgementInfo$Builder
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #70                 // Method akka/remote/WireFormats$AcknowledgementInfo$Builder."<init>":(Lakka/protobuf/GeneratedMessage$BuilderParent;Lakka/remote/WireFormats$1;)V
       9: astore_2
      10: aload_2
      11: areturn

  protected akka.protobuf.Message$Builder newBuilderForType(akka.protobuf.GeneratedMessage$BuilderParent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method newBuilderForType:(Lakka/protobuf/GeneratedMessage$BuilderParent;)Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       5: areturn

  public akka.protobuf.Message$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method toBuilder:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       4: areturn

  public akka.protobuf.Message$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method newBuilderForType:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder toBuilder();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method toBuilder:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       4: areturn

  public akka.protobuf.MessageLite$Builder newBuilderForType();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method newBuilderForType:()Lakka/remote/WireFormats$AcknowledgementInfo$Builder;
       4: areturn

  public akka.protobuf.MessageLite getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getDefaultInstanceForType:()Lakka/remote/WireFormats$AcknowledgementInfo;
       4: areturn

  public akka.protobuf.Message getDefaultInstanceForType();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getDefaultInstanceForType:()Lakka/remote/WireFormats$AcknowledgementInfo;
       4: areturn

  akka.remote.WireFormats$AcknowledgementInfo(akka.protobuf.CodedInputStream, akka.protobuf.ExtensionRegistryLite, akka.remote.WireFormats$1) throws akka.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method "<init>":(Lakka/protobuf/CodedInputStream;Lakka/protobuf/ExtensionRegistryLite;)V
       6: return

  static boolean access$2700();
    Code:
       0: getstatic     #5                  // Field alwaysUseFieldBuilders:Z
       3: ireturn

  akka.remote.WireFormats$AcknowledgementInfo(akka.protobuf.GeneratedMessage$Builder, akka.remote.WireFormats$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method "<init>":(Lakka/protobuf/GeneratedMessage$Builder;)V
       5: return

  static long access$2902(akka.remote.WireFormats$AcknowledgementInfo, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #3                  // Field cumulativeAck_:J
       6: lreturn

  static java.util.List access$3002(akka.remote.WireFormats$AcknowledgementInfo, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field nacks_:Ljava/util/List;
       6: areturn

  static int access$3102(akka.remote.WireFormats$AcknowledgementInfo, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field bitField0_:I
       6: ireturn

  static java.util.List access$3000(akka.remote.WireFormats$AcknowledgementInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nacks_:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: new           #75                 // class akka/remote/WireFormats$AcknowledgementInfo$1
       3: dup
       4: invokespecial #76                 // Method akka/remote/WireFormats$AcknowledgementInfo$1."<init>":()V
       7: putstatic     #41                 // Field PARSER:Lakka/protobuf/Parser;
      10: new           #38                 // class akka/remote/WireFormats$AcknowledgementInfo
      13: dup
      14: iconst_1
      15: invokespecial #77                 // Method "<init>":(Z)V
      18: putstatic     #14                 // Field defaultInstance:Lakka/remote/WireFormats$AcknowledgementInfo;
      21: getstatic     #14                 // Field defaultInstance:Lakka/remote/WireFormats$AcknowledgementInfo;
      24: invokespecial #15                 // Method initFields:()V
      27: return
}
